cscope 15 $HOME/codebases/git               0001708161
	@alloc.c

12 
	~"ˇche.h
"

13 
	~"obje˘.h
"

14 
	~"blob.h
"

15 
	~"åì.h
"

16 
	~"commô.h
"

17 
	~"èg.h
"

19 
	#BLOCKING
 1024

	)

21 
	#DEFINE_ALLOCATOR
(
«me
) \

22 
«me
##
_Ælocs
; \

23 
«me
 *
Æloc_
##«me##
	`_node
() \

25 
ƒ
; \

26 
«me
 *
block
; \

28 i‡(!
ƒ
) { \

29 
ƒ
 = 
BLOCKING
; \

30 
block
 = 
	`xˇŒoc
(
BLOCKING
, (
«me
)); \

32 
ƒ
--; \

33 
«me
##
_Ælocs
++; \

34  
block
++; \

35 }

	)

37 
	$DEFINE_ALLOCATOR
(
blob
)

38 
	$DEFINE_ALLOCATOR
(
åì
)

39 
	$DEFINE_ALLOCATOR
(
commô
)

40 
	$DEFINE_ALLOCATOR
(
èg
)

42 #ifde‡
NO_C99_FORMAT


43 
	#SZ_FMT
 "%u"

	)

45 
	#SZ_FMT
 "%zu"

	)

48 
	$ªp‹t
(c⁄° * 
«me
, 
cou¡
, 
size_t
 
size
)

50 
	`Ârötf
(
°dîr
, "%10s: %8u (" 
SZ_FMT
 " kB)\n", 
«me
, 
cou¡
, 
size
);

51 
	}
}

53 #unde‡
SZ_FMT


55 
	#REPORT
(
«me
) \

56 
	`ªp‹t
(#«me, 
«me
##
_Ælocs
,Çame##_Ælocs*(«meË>> 10)

	)

58 
	$Æloc_ªp‹t
()

60 
	`REPORT
(
blob
);

61 
	`REPORT
(
åì
);

62 
	`REPORT
(
commô
);

63 
	`REPORT
(
èg
);

64 
	}
}

	@archive-tar.c

4 
	~"ˇche.h
"

5 
	~"commô.h
"

6 
	~"°rbuf.h
"

7 
	~"èr.h
"

8 
	~"buûtö.h
"

9 
	~"¨chive.h
"

11 
	#RECORDSIZE
 (512)

	)

12 
	#BLOCKSIZE
 (
RECORDSIZE
 * 20)

	)

14 
	gblock
[
BLOCKSIZE
];

15 
	goff£t
;

17 
time_t
 
	g¨chive_time
;

18 
	gèr_umask
 = 002;

19 
	gvîbo£
;

22 
	$wrôe_if_√eded
()

24 i‡(
off£t
 =
BLOCKSIZE
) {

25 
	`wrôe_‹_dõ
(1, 
block
, 
BLOCKSIZE
);

26 
off£t
 = 0;

28 
	}
}

34 
	$wrôe_blocked
(c⁄° *
d©a
, 
size
)

36 c⁄° *
buf
 = 
d©a
;

37 
èû
;

39 i‡(
off£t
) {

40 
chunk
 = 
BLOCKSIZE
 - 
off£t
;

41 i‡(
size
 < 
chunk
)

42 
chunk
 = 
size
;

43 
	`mem˝y
(
block
 + 
off£t
, 
buf
, 
chunk
);

44 
size
 -
chunk
;

45 
off£t
 +
chunk
;

46 
buf
 +
chunk
;

47 
	`wrôe_if_√eded
();

49 
size
 >
BLOCKSIZE
) {

50 
	`wrôe_‹_dõ
(1, 
buf
, 
BLOCKSIZE
);

51 
size
 -
BLOCKSIZE
;

52 
buf
 +
BLOCKSIZE
;

54 i‡(
size
) {

55 
	`mem˝y
(
block
 + 
off£t
, 
buf
, 
size
);

56 
off£t
 +
size
;

58 
èû
 = 
off£t
 % 
RECORDSIZE
;

59 i‡(
èû
) {

60 
	`mem£t
(
block
 + 
off£t
, 0, 
RECORDSIZE
 - 
èû
);

61 
off£t
 +
RECORDSIZE
 - 
èû
;

63 
	`wrôe_if_√eded
();

64 
	}
}

70 
	$wrôe_åaûî
()

72 
èû
 = 
BLOCKSIZE
 - 
off£t
;

73 
	`mem£t
(
block
 + 
off£t
, 0, 
èû
);

74 
	`wrôe_‹_dõ
(1, 
block
, 
BLOCKSIZE
);

75 i‡(
èû
 < 2 * 
RECORDSIZE
) {

76 
	`mem£t
(
block
, 0, 
off£t
);

77 
	`wrôe_‹_dõ
(1, 
block
, 
BLOCKSIZE
);

79 
	}
}

81 
	$°rbuf_≠≥nd_°rög
(
°rbuf
 *
sb
, c⁄° *
s
)

83 
¶í
 = 
	`°æí
(
s
);

84 
tŸÆ
 = 
sb
->
Àn
 + 
¶í
;

85 i‡(
tŸÆ
 > 
sb
->
Æloc
) {

86 
sb
->
buf
 = 
	`xªÆloc
(sb->buf, 
tŸÆ
);

87 
sb
->
Æloc
 = 
tŸÆ
;

89 
	`mem˝y
(
sb
->
buf
 + sb->
Àn
, 
s
, 
¶í
);

90 
sb
->
Àn
 = 
tŸÆ
;

91 
	}
}

99 
	$°rbuf_≠≥nd_ext_hódî
(
°rbuf
 *
sb
, c⁄° *
keyw‹d
,

100 c⁄° *
vÆue
, 
vÆuñí
)

102 *
p
;

103 
Àn
, 
tŸÆ
, 
tmp
;

106 
Àn
 = 1 + 1 + 
	`°æí
(
keyw‹d
Ë+ 1 + 
vÆuñí
 + 1;

107 
tmp
 = 
Àn
;Åmp > 9;Åmp /= 10)

108 
Àn
++;

110 
tŸÆ
 = 
sb
->
Àn
 +Üen;

111 i‡(
tŸÆ
 > 
sb
->
Æloc
) {

112 
sb
->
buf
 = 
	`xªÆloc
(sb->buf, 
tŸÆ
);

113 
sb
->
Æloc
 = 
tŸÆ
;

116 
p
 = 
sb
->
buf
;

117 
p
 +
	`•rötf
’, "%u %s=", 
Àn
, 
keyw‹d
);

118 
	`mem˝y
(
p
, 
vÆue
, 
vÆuñí
);

119 
p
 +
vÆuñí
;

120 *
p
 = '\n';

121 
sb
->
Àn
 = 
tŸÆ
;

122 
	}
}

124 
	$u°¨_hódî_chksum
(c⁄° 
u°¨_hódî
 *
hódî
)

126 *
p
 = (*)
hódî
;

127 
chksum
 = 0;

128 
p
 < 
hódî
->
chksum
)

129 
chksum
 +*
p
++;

130 
chksum
 +(
hódî
->chksum) * ' ';

131 
p
 +(
hódî
->
chksum
);

132 
p
 < (*)
hódî
 + (
u°¨_hódî
))

133 
chksum
 +*
p
++;

134  
chksum
;

135 
	}
}

137 
	$gë_∑th_¥efix
(c⁄° 
°rbuf
 *
∑th
, 
maxÀn
)

139 
i
 = 
∑th
->
Àn
;

140 i‡(
i
 > 
maxÀn
)

141 
i
 = 
maxÀn
;

143 
i
--;

144 } 
i
 > 0 && 
∑th
->
buf
[i] != '/');

145  
i
;

146 
	}
}

148 
	$wrôe_íåy
(c⁄° *
sha1
, 
°rbuf
 *
∑th
,

149 
mode
, *
buf„r
, 
size
)

151 
u°¨_hódî
 
hódî
;

152 
°rbuf
 
ext_hódî
;

154 
	`mem£t
(&
hódî
, 0, (header));

155 
ext_hódî
.
buf
 = 
NULL
;

156 
ext_hódî
.
Àn
 =Éxt_hódî.
Æloc
 = 0;

158 i‡(!
sha1
) {

159 *
hódî
.
ty≥Êag
 = 
TYPEFLAG_GLOBAL_HEADER
;

160 
mode
 = 0100666;

161 
	`°r˝y
(
hódî
.
«me
, "pax_global_header");

162 } i‡(!
∑th
) {

163 *
hódî
.
ty≥Êag
 = 
TYPEFLAG_EXT_HEADER
;

164 
mode
 = 0100666;

165 
	`•rötf
(
hódî
.
«me
, "%s.∑xhódî", 
	`sha1_to_hex
(
sha1
));

167 i‡(
vîbo£
)

168 
	`Ârötf
(
°dîr
, "%.*s\n", 
∑th
->
Àn
,Ö©h->
buf
);

169 i‡(
	`S_ISDIR
(
mode
)) {

170 *
hódî
.
ty≥Êag
 = 
TYPEFLAG_DIR
;

171 
mode
 = (modê| 0777Ë& ~
èr_umask
;

172 } i‡(
	`S_ISLNK
(
mode
)) {

173 *
hódî
.
ty≥Êag
 = 
TYPEFLAG_LNK
;

174 
mode
 |= 0777;

175 } i‡(
	`S_ISREG
(
mode
)) {

176 *
hódî
.
ty≥Êag
 = 
TYPEFLAG_REG
;

177 
mode
 = (modê| ((modê& 0100Ë? 0777 : 0666)Ë& ~
èr_umask
;

179 
	`îr‹
("unsupported file mode: 0%o (SHA1: %s)",

180 
mode
, 
	`sha1_to_hex
(
sha1
));

183 i‡(
∑th
->
Àn
 > (
hódî
.
«me
)) {

184 
∂í
 = 
	`gë_∑th_¥efix
(
∑th
, (
hódî
.
¥efix
));

185 
ª°
 = 
∑th
->
Àn
 - 
∂í
 - 1;

186 i‡(
∂í
 > 0 && 
ª°
 <(
hódî
.
«me
)) {

187 
	`mem˝y
(
hódî
.
¥efix
, 
∑th
->
buf
, 
∂í
);

188 
	`mem˝y
(
hódî
.
«me
, 
∑th
->
buf
 + 
∂í
 + 1, 
ª°
);

190 
	`•rötf
(
hódî
.
«me
, "%s.data",

191 
	`sha1_to_hex
(
sha1
));

192 
	`°rbuf_≠≥nd_ext_hódî
(&
ext_hódî
, "path",

193 
∑th
->
buf
,Ö©h->
Àn
);

196 
	`mem˝y
(
hódî
.
«me
, 
∑th
->
buf
,Ö©h->
Àn
);

199 i‡(
	`S_ISLNK
(
mode
Ë&& 
buf„r
) {

200 i‡(
size
 > (
hódî
.
lök«me
)) {

201 
	`•rötf
(
hódî
.
lök«me
, "see %s.paxheader",

202 
	`sha1_to_hex
(
sha1
));

203 
	`°rbuf_≠≥nd_ext_hódî
(&
ext_hódî
, "linkpath",

204 
buf„r
, 
size
);

206 
	`mem˝y
(
hódî
.
lök«me
, 
buf„r
, 
size
);

209 
	`•rötf
(
hódî
.
mode
, "%07o", mode & 07777);

210 
	`•rötf
(
hódî
.
size
, "%011lo", 
	`S_ISREG
(
mode
) ? size : 0);

211 
	`•rötf
(
hódî
.
mtime
, "%011lo", 
¨chive_time
);

213 
	`•rötf
(
hódî
.
uid
, "%07o", 0);

214 
	`•rötf
(
hódî
.
gid
, "%07o", 0);

215 
	`°æ˝y
(
hódî
.
u«me
, "root", (header.uname));

216 
	`°æ˝y
(
hódî
.
g«me
, "root", (header.gname));

217 
	`•rötf
(
hódî
.
devmaj‹
, "%07o", 0);

218 
	`•rötf
(
hódî
.
devmö‹
, "%07o", 0);

220 
	`mem˝y
(
hódî
.
magic
, "ustar", 6);

221 
	`mem˝y
(
hódî
.
vîsi⁄
, "00", 2);

223 
	`•rötf
(
hódî
.
chksum
, "%07o", 
	`u°¨_hódî_chksum
(&header));

225 i‡(
ext_hódî
.
Àn
 > 0) {

226 
	`wrôe_íåy
(
sha1
, 
NULL
, 0, 
ext_hódî
.
buf
,Éxt_hódî.
Àn
);

227 
	`‰ì
(
ext_hódî
.
buf
);

229 
	`wrôe_blocked
(&
hódî
, (header));

230 i‡(
	`S_ISREG
(
mode
Ë&& 
buf„r
 && 
size
 > 0)

231 
	`wrôe_blocked
(
buf„r
, 
size
);

232 
	}
}

234 
	$wrôe_globÆ_exãnded_hódî
(c⁄° *
sha1
)

236 
°rbuf
 
ext_hódî
;

237 
ext_hódî
.
buf
 = 
NULL
;

238 
ext_hódî
.
Àn
 =Éxt_hódî.
Æloc
 = 0;

239 
	`°rbuf_≠≥nd_ext_hódî
(&
ext_hódî
, "commít", 
	`sha1_to_hex
(
sha1
), 40);

240 
	`wrôe_íåy
(
NULL
, NULL, 0, 
ext_hódî
.
buf
,Éxt_hódî.
Àn
);

241 
	`‰ì
(
ext_hódî
.
buf
);

242 
	}
}

244 
	$gô_èr_c⁄fig
(c⁄° *
v¨
, c⁄° *
vÆue
)

246 i‡(!
	`°rcmp
(
v¨
, "tar.umask")) {

247 i‡(!
	`°rcmp
(
vÆue
, "user")) {

248 
èr_umask
 = 
	`umask
(0);

249 
	`umask
(
èr_umask
);

251 
èr_umask
 = 
	`gô_c⁄fig_öt
(
v¨
, 
vÆue
);

255  
	`gô_deÁu…_c⁄fig
(
v¨
, 
vÆue
);

256 
	}
}

258 
	$wrôe_èr_íåy
(c⁄° *
sha1
,

259 c⁄° *
ba£
, 
ba£Àn
,

260 c⁄° *
fûíame
, 
mode
, 
°age
)

262 
°rbuf
 
∑th
;

263 
fûíamñí
 = 
	`°æí
(
fûíame
);

264 *
buf„r
;

265 
ty≥
[20];

266 
size
;

268 i‡(!
∑th
.
Æloc
) {

269 
∑th
.
buf
 = 
	`xmÆloc
(
PATH_MAX
);

270 
∑th
.
Æloc
 = 
PATH_MAX
;

271 
∑th
.
Àn
 =Ö©h.
eof
 = 0;

273 i‡(
∑th
.
Æloc
 < 
ba£Àn
 + 
fûíamñí
) {

274 
	`‰ì
(
∑th
.
buf
);

275 
∑th
.
buf
 = 
	`xmÆloc
(
ba£Àn
 + 
fûíamñí
);

276 
∑th
.
Æloc
 = 
ba£Àn
 + 
fûíamñí
;

278 
	`mem˝y
(
∑th
.
buf
, 
ba£
, 
ba£Àn
);

279 
	`mem˝y
(
∑th
.
buf
 + 
ba£Àn
, 
fûíame
, 
fûíamñí
);

280 
∑th
.
Àn
 = 
ba£Àn
 + 
fûíamñí
;

281 i‡(
	`S_ISDIR
(
mode
)) {

282 
	`°rbuf_≠≥nd_°rög
(&
∑th
, "/");

283 
buf„r
 = 
NULL
;

284 
size
 = 0;

286 
buf„r
 = 
	`ªad_sha1_fûe
(
sha1
, 
ty≥
, &
size
);

287 i‡(!
buf„r
)

288 
	`dõ
("ˇ¬ŸÑód %s", 
	`sha1_to_hex
(
sha1
));

291 
	`wrôe_íåy
(
sha1
, &
∑th
, 
mode
, 
buf„r
, 
size
);

292 
	`‰ì
(
buf„r
);

294  
READ_TREE_RECURSIVE
;

295 
	}
}

297 
	$wrôe_èr_¨chive
(
¨chivî_¨gs
 *
¨gs
)

299 
∂í
 = 
¨gs
->
ba£
 ? 
	`°æí
(args->base) : 0;

301 
	`gô_c⁄fig
(
gô_èr_c⁄fig
);

303 
¨chive_time
 = 
¨gs
->
time
;

304 
vîbo£
 = 
¨gs
->verbose;

306 i‡(
¨gs
->
commô_sha1
)

307 
	`wrôe_globÆ_exãnded_hódî
(
¨gs
->
commô_sha1
);

309 i‡(
¨gs
->
ba£
 && 
∂í
 > 0 &&árgs->base[plen - 1] == '/') {

310 *
ba£
 = 
	`x°rdup
(
¨gs
->base);

311 
ba£Àn
 = 
	`°æí
(
ba£
);

313 
ba£Àn
 > 0 && 
ba£
[baselen - 1] == '/')

314 
ba£
[--
ba£Àn
] = '\0';

315 
	`wrôe_èr_íåy
(
¨gs
->
åì
->
obje˘
.
sha1
, "", 0, 
ba£
, 040777, 0);

316 
	`‰ì
(
ba£
);

318 
	`ªad_åì_ªcursive
(
¨gs
->
åì
,árgs->
ba£
, 
∂í
, 0,

319 
¨gs
->
∑th•ec
, 
wrôe_èr_íåy
);

320 
	`wrôe_åaûî
();

323 
	}
}

	@archive-zip.c

4 
	~"ˇche.h
"

5 
	~"commô.h
"

6 
	~"blob.h
"

7 
	~"åì.h
"

8 
	~"quŸe.h
"

9 
	~"buûtö.h
"

10 
	~"¨chive.h
"

12 
	gvîbo£
;

13 
	gzù_d©e
;

14 
	gzù_time
;

16 *
	gzù_dú
;

17 
	gzù_dú_size
;

19 
	gzù_off£t
;

20 
	gzù_dú_off£t
;

21 
	gzù_dú_íåõs
;

23 
	#ZIP_DIRECTORY_MIN_SIZE
 (1024 * 1024)

	)

25 
	szù_loˇl_hódî
 {

26 
	mmagic
[4];

27 
	mvîsi⁄
[2];

28 
	mÊags
[2];

29 
	mcom¥essi⁄_mëhod
[2];

30 
	mmtime
[2];

31 
	mmd©e
[2];

32 
	m¸c32
[4];

33 
	mcom¥es£d_size
[4];

34 
	msize
[4];

35 
	mfûíame_Àngth
[2];

36 
	mexåa_Àngth
[2];

37 
	m_íd
[1];

40 
	szù_dú_hódî
 {

41 
	mmagic
[4];

42 
	m¸ót‹_vîsi⁄
[2];

43 
	mvîsi⁄
[2];

44 
	mÊags
[2];

45 
	mcom¥essi⁄_mëhod
[2];

46 
	mmtime
[2];

47 
	mmd©e
[2];

48 
	m¸c32
[4];

49 
	mcom¥es£d_size
[4];

50 
	msize
[4];

51 
	mfûíame_Àngth
[2];

52 
	mexåa_Àngth
[2];

53 
	mcommít_Àngth
[2];

54 
	mdisk
[2];

55 
	m©å1
[2];

56 
	m©å2
[4];

57 
	moff£t
[4];

58 
	m_íd
[1];

61 
	szù_dú_åaûî
 {

62 
	mmagic
[4];

63 
	mdisk
[2];

64 
	mdúe˘‹y_°¨t_disk
[2];

65 
	míåõs_⁄_this_disk
[2];

66 
	míåõs
[2];

67 
	msize
[4];

68 
	moff£t
[4];

69 
	mcommít_Àngth
[2];

70 
	m_íd
[1];

78 
	#ZIP_LOCAL_HEADER_SIZE
 
	`off£tof
(
zù_loˇl_hódî
, 
_íd
)

	)

79 
	#ZIP_DIR_HEADER_SIZE
 
	`off£tof
(
zù_dú_hódî
, 
_íd
)

	)

80 
	#ZIP_DIR_TRAILER_SIZE
 
	`off£tof
(
zù_dú_åaûî
, 
_íd
)

	)

82 
	$c›y_À16
(*
de°
, 
n
)

84 
de°
[0] = 0xf‡& 
n
;

85 
de°
[1] = 0xf‡& (
n
 >> 010);

86 
	}
}

88 
	$c›y_À32
(*
de°
, 
n
)

90 
de°
[0] = 0xf‡& 
n
;

91 
de°
[1] = 0xf‡& (
n
 >> 010);

92 
de°
[2] = 0xf‡& (
n
 >> 020);

93 
de°
[3] = 0xf‡& (
n
 >> 030);

94 
	}
}

96 *
	$zlib_deÊ©e
(*
d©a
, 
size
,

97 *
com¥es£d_size
)

99 
z_°ªam
 
°ªam
;

100 
maxsize
;

101 *
buf„r
;

102 
ªsu…
;

104 
	`mem£t
(&
°ªam
, 0, (stream));

105 
	`deÊ©eInô
(&
°ªam
, 
zlib_com¥essi⁄_Àvñ
);

106 
maxsize
 = 
	`deÊ©eBound
(&
°ªam
, 
size
);

107 
buf„r
 = 
	`xmÆloc
(
maxsize
);

109 
°ªam
.
√xt_ö
 = 
d©a
;

110 
°ªam
.
avaû_ö
 = 
size
;

111 
°ªam
.
√xt_out
 = 
buf„r
;

112 
°ªam
.
avaû_out
 = 
maxsize
;

115 
ªsu…
 = 
	`deÊ©e
(&
°ªam
, 
Z_FINISH
);

116 } 
ªsu…
 =
Z_OK
);

118 i‡(
ªsu…
 !
Z_STREAM_END
) {

119 
	`‰ì
(
buf„r
);

120  
NULL
;

123 
	`deÊ©eEnd
(&
°ªam
);

124 *
com¥es£d_size
 = 
°ªam
.
tŸÆ_out
;

126  
buf„r
;

127 
	}
}

129 *
	$c⁄°ru˘_∑th
(c⁄° *
ba£
, 
ba£Àn
,

130 c⁄° *
fûíame
, 
isdú
, *
∑thÀn
)

132 
fûíamñí
 = 
	`°æí
(
fûíame
);

133 
Àn
 = 
ba£Àn
 + 
fûíamñí
;

134 *
∑th
, *
p
;

136 i‡(
isdú
)

137 
Àn
++;

138 
p
 = 
∑th
 = 
	`xmÆloc
(
Àn
 + 1);

140 
	`mem˝y
(
p
, 
ba£
, 
ba£Àn
);

141 
p
 +
ba£Àn
;

142 
	`mem˝y
(
p
, 
fûíame
, 
fûíamñí
);

143 
p
 +
fûíamñí
;

144 i‡(
isdú
)

145 *
p
++ = '/';

146 *
p
 = '\0';

148 *
∑thÀn
 = 
Àn
;

150  
∑th
;

151 
	}
}

153 
	$wrôe_zù_íåy
(c⁄° *
sha1
,

154 c⁄° *
ba£
, 
ba£Àn
,

155 c⁄° *
fûíame
, 
mode
, 
°age
)

157 
zù_loˇl_hódî
 
hódî
;

158 
zù_dú_hódî
 
dúít
;

159 
©å2
;

160 
com¥es£d_size
;

161 
uncom¥es£d_size
;

162 
¸c
;

163 
dúítsize
;

164 
size
;

165 
mëhod
;

166 
ªsu…
 = -1;

167 
∑thÀn
;

168 *
out
;

169 *
∑th
;

170 
ty≥
[20];

171 *
buf„r
 = 
NULL
;

172 *
deÊ©ed
 = 
NULL
;

174 
¸c
 = 
	`¸c32
(0, 
NULL
, 0);

176 
∑th
 = 
	`c⁄°ru˘_∑th
(
ba£
, 
ba£Àn
, 
fûíame
, 
	`S_ISDIR
(
mode
), &
∑thÀn
);

177 i‡(
vîbo£
)

178 
	`Ârötf
(
°dîr
, "%s\n", 
∑th
);

179 i‡(
∑thÀn
 > 0xffff) {

180 
	`îr‹
("∑thÅoÿl⁄g (%d ch¨s, SHA1: %s): %s", 
∑thÀn
,

181 
	`sha1_to_hex
(
sha1
), 
∑th
);

182 
out
;

185 i‡(
	`S_ISDIR
(
mode
)) {

186 
mëhod
 = 0;

187 
©å2
 = 16;

188 
ªsu…
 = 
READ_TREE_RECURSIVE
;

189 
out
 = 
NULL
;

190 
uncom¥es£d_size
 = 0;

191 
com¥es£d_size
 = 0;

192 } i‡(
	`S_ISREG
(
mode
Ë|| 
	`S_ISLNK
(mode)) {

193 
mëhod
 = 0;

194 
©å2
 = 
	`S_ISLNK
(
mode
) ? ((mode | 0777) << 16) : 0;

195 i‡(
	`S_ISREG
(
mode
Ë&& 
zlib_com¥essi⁄_Àvñ
 != 0)

196 
mëhod
 = 8;

197 
ªsu…
 = 0;

198 
buf„r
 = 
	`ªad_sha1_fûe
(
sha1
, 
ty≥
, &
size
);

199 i‡(!
buf„r
)

200 
	`dõ
("ˇ¬ŸÑód %s", 
	`sha1_to_hex
(
sha1
));

201 
¸c
 = 
	`¸c32
(¸c, 
buf„r
, 
size
);

202 
out
 = 
buf„r
;

203 
uncom¥es£d_size
 = 
size
;

204 
com¥es£d_size
 = 
size
;

206 
	`îr‹
("unsuµ‹ãd fûêmode: 0%ÿ(SHA1: %s)", 
mode
,

207 
	`sha1_to_hex
(
sha1
));

208 
out
;

211 i‡(
mëhod
 == 8) {

212 
deÊ©ed
 = 
	`zlib_deÊ©e
(
buf„r
, 
size
, &
com¥es£d_size
);

213 i‡(
deÊ©ed
 && 
com¥es£d_size
 - 6 < 
size
) {

216 
out
 = (*)
deÊ©ed
 + 2;

217 
com¥es£d_size
 -= 6;

219 
mëhod
 = 0;

220 
com¥es£d_size
 = 
size
;

225 
dúítsize
 = 
ZIP_DIR_HEADER_SIZE
 + 
∑thÀn
;

226 
zù_dú_size
 < 
zù_dú_off£t
 + 
dúítsize
) {

227 
zù_dú_size
 +
ZIP_DIRECTORY_MIN_SIZE
;

228 
zù_dú
 = 
	`xªÆloc
(zù_dú, 
zù_dú_size
);

231 
	`c›y_À32
(
dúít
.
magic
, 0x02014b50);

232 
	`c›y_À16
(
dúít
.
¸ót‹_vîsi⁄
, 
	`S_ISLNK
(
mode
) ? 0x0317 : 0);

233 
	`c›y_À16
(
dúít
.
vîsi⁄
, 10);

234 
	`c›y_À16
(
dúít
.
Êags
, 0);

235 
	`c›y_À16
(
dúít
.
com¥essi⁄_mëhod
, 
mëhod
);

236 
	`c›y_À16
(
dúít
.
mtime
, 
zù_time
);

237 
	`c›y_À16
(
dúít
.
md©e
, 
zù_d©e
);

238 
	`c›y_À32
(
dúít
.
¸c32
, 
¸c
);

239 
	`c›y_À32
(
dúít
.
com¥es£d_size
, compressed_size);

240 
	`c›y_À32
(
dúít
.
size
, 
uncom¥es£d_size
);

241 
	`c›y_À16
(
dúít
.
fûíame_Àngth
, 
∑thÀn
);

242 
	`c›y_À16
(
dúít
.
exåa_Àngth
, 0);

243 
	`c›y_À16
(
dúít
.
commít_Àngth
, 0);

244 
	`c›y_À16
(
dúít
.
disk
, 0);

245 
	`c›y_À16
(
dúít
.
©å1
, 0);

246 
	`c›y_À32
(
dúít
.
©å2
,áttr2);

247 
	`c›y_À32
(
dúít
.
off£t
, 
zù_off£t
);

248 
	`mem˝y
(
zù_dú
 + 
zù_dú_off£t
, &
dúít
, 
ZIP_DIR_HEADER_SIZE
);

249 
zù_dú_off£t
 +
ZIP_DIR_HEADER_SIZE
;

250 
	`mem˝y
(
zù_dú
 + 
zù_dú_off£t
, 
∑th
, 
∑thÀn
);

251 
zù_dú_off£t
 +
∑thÀn
;

252 
zù_dú_íåõs
++;

254 
	`c›y_À32
(
hódî
.
magic
, 0x04034b50);

255 
	`c›y_À16
(
hódî
.
vîsi⁄
, 10);

256 
	`c›y_À16
(
hódî
.
Êags
, 0);

257 
	`c›y_À16
(
hódî
.
com¥essi⁄_mëhod
, 
mëhod
);

258 
	`c›y_À16
(
hódî
.
mtime
, 
zù_time
);

259 
	`c›y_À16
(
hódî
.
md©e
, 
zù_d©e
);

260 
	`c›y_À32
(
hódî
.
¸c32
, 
¸c
);

261 
	`c›y_À32
(
hódî
.
com¥es£d_size
, compressed_size);

262 
	`c›y_À32
(
hódî
.
size
, 
uncom¥es£d_size
);

263 
	`c›y_À16
(
hódî
.
fûíame_Àngth
, 
∑thÀn
);

264 
	`c›y_À16
(
hódî
.
exåa_Àngth
, 0);

265 
	`wrôe_‹_dõ
(1, &
hódî
, 
ZIP_LOCAL_HEADER_SIZE
);

266 
zù_off£t
 +
ZIP_LOCAL_HEADER_SIZE
;

267 
	`wrôe_‹_dõ
(1, 
∑th
, 
∑thÀn
);

268 
zù_off£t
 +
∑thÀn
;

269 i‡(
com¥es£d_size
 > 0) {

270 
	`wrôe_‹_dõ
(1, 
out
, 
com¥es£d_size
);

271 
zù_off£t
 +
com¥es£d_size
;

274 
out
:

275 
	`‰ì
(
buf„r
);

276 
	`‰ì
(
deÊ©ed
);

277 
	`‰ì
(
∑th
);

279  
ªsu…
;

280 
	}
}

282 
	$wrôe_zù_åaûî
(c⁄° *
sha1
)

284 
zù_dú_åaûî
 
åaûî
;

286 
	`c›y_À32
(
åaûî
.
magic
, 0x06054b50);

287 
	`c›y_À16
(
åaûî
.
disk
, 0);

288 
	`c›y_À16
(
åaûî
.
dúe˘‹y_°¨t_disk
, 0);

289 
	`c›y_À16
(
åaûî
.
íåõs_⁄_this_disk
, 
zù_dú_íåõs
);

290 
	`c›y_À16
(
åaûî
.
íåõs
, 
zù_dú_íåõs
);

291 
	`c›y_À32
(
åaûî
.
size
, 
zù_dú_off£t
);

292 
	`c›y_À32
(
åaûî
.
off£t
, 
zù_off£t
);

293 
	`c›y_À16
(
åaûî
.
commít_Àngth
, 
sha1
 ? 40 : 0);

295 
	`wrôe_‹_dõ
(1, 
zù_dú
, 
zù_dú_off£t
);

296 
	`wrôe_‹_dõ
(1, &
åaûî
, 
ZIP_DIR_TRAILER_SIZE
);

297 i‡(
sha1
)

298 
	`wrôe_‹_dõ
(1, 
	`sha1_to_hex
(
sha1
), 40);

299 
	}
}

301 
	$dos_time
(
time_t
 *
time
, *
dos_d©e
, *
dos_time
)

303 
tm
 *
t
 = 
	`loˇ…ime
(
time
);

305 *
dos_d©e
 = 
t
->
tm_mday
 + (t->
tm_m⁄
 + 1) * 32 +

306 (
t
->
tm_yór
 + 1900 - 1980) * 512;

307 *
dos_time
 = 
t
->
tm_£c
 / 2 +Å->
tm_mö
 * 32 +Å->
tm_hour
 * 2048;

308 
	}
}

310 
	$wrôe_zù_¨chive
(
¨chivî_¨gs
 *
¨gs
)

312 
∂í
 = 
	`°æí
(
¨gs
->
ba£
);

314 
	`dos_time
(&
¨gs
->
time
, &
zù_d©e
, &
zù_time
);

316 
zù_dú
 = 
	`xmÆloc
(
ZIP_DIRECTORY_MIN_SIZE
);

317 
zù_dú_size
 = 
ZIP_DIRECTORY_MIN_SIZE
;

318 
vîbo£
 = 
¨gs
->verbose;

320 i‡(
¨gs
->
ba£
 && 
∂í
 > 0 &&árgs->base[plen - 1] == '/') {

321 *
ba£
 = 
	`x°rdup
(
¨gs
->base);

322 
ba£Àn
 = 
	`°æí
(
ba£
);

324 
ba£Àn
 > 0 && 
ba£
[baselen - 1] == '/')

325 
ba£
[--
ba£Àn
] = '\0';

326 
	`wrôe_zù_íåy
(
¨gs
->
åì
->
obje˘
.
sha1
, "", 0, 
ba£
, 040777, 0);

327 
	`‰ì
(
ba£
);

329 
	`ªad_åì_ªcursive
(
¨gs
->
åì
,árgs->
ba£
, 
∂í
, 0,

330 
¨gs
->
∑th•ec
, 
wrôe_zù_íåy
);

331 
	`wrôe_zù_åaûî
(
¨gs
->
commô_sha1
);

333 
	`‰ì
(
zù_dú
);

336 
	}
}

338 *
	$∑r£_exåa_zù_¨gs
(
¨gc
, c⁄° **
¨gv
)

340 ; 
¨gc
 > 0;árgc--, 
¨gv
++) {

341 c⁄° *
¨g
 = 
¨gv
[0];

343 i‡(
¨g
[0] ='-' && 
	`isdigô
(arg[1]) &&árg[2] == '\0')

344 
zlib_com¥essi⁄_Àvñ
 = 
¨g
[1] - '0';

346 
	`dõ
("Unknow¿¨gumíàf‹ zù f‹m©: %s", 
¨g
);

348  
NULL
;

349 
	}
}

	@archive.h

1 #i‚de‡
ARCHIVE_H


2 
	#ARCHIVE_H


	)

4 
	#MAX_EXTRA_ARGS
 32

	)

5 
	#MAX_ARGS
 (
MAX_EXTRA_ARGS
 + 32)

	)

7 
	s¨chivî_¨gs
 {

8 c⁄° *
	mba£
;

9 
åì
 *
	måì
;

10 c⁄° *
	mcommô_sha1
;

11 
time_t
 
	mtime
;

12 c⁄° **
	m∑th•ec
;

13 
	mvîbo£
 : 1;

14 *
	mexåa
;

17 (*
	twrôe_¨chive_‚_t
)(
	t¨chivî_¨gs
 *);

19 *(*
	t∑r£_exåa_¨gs_‚_t
)(
	t¨gc
, c⁄° **
	t¨gv
);

21 
	s¨chivî
 {

22 c⁄° *
«me
;

23 
¨chivî_¨gs
 
¨gs
;

24 
wrôe_¨chive_‚_t
 
wrôe_¨chive
;

25 
∑r£_exåa_¨gs_‚_t
 
∑r£_exåa
;

28 
	`∑r£_¨chive_¨gs
(
¨gc
,

29 c⁄° **
¨gv
,

30 
¨chivî
 *
¨
);

32 
	`∑r£_åìish_¨g
(c⁄° **
åìish
,

33 
¨chivî_¨gs
 *
¨_¨gs
,

34 c⁄° *
¥efix
);

36 
	`∑r£_∑th•ec_¨g
(c⁄° **
∑th•ec
,

37 
¨chivî_¨gs
 *
¨gs
);

41 
	`wrôe_èr_¨chive
(
¨chivî_¨gs
 *);

42 
	`wrôe_zù_¨chive
(
¨chivî_¨gs
 *);

43 *
	`∑r£_exåa_zù_¨gs
(
¨gc
, c⁄° **
¨gv
);

	@arm/sha1.c

8 
	~<°rög.h
>

9 
	~"sha1.h
"

11 
sha_å™sf‹m
(
uöt32_t
 *
hash
, c⁄° *
d©a
, uöt32_à*
W
);

13 
	$SHA1_Inô
(
SHA_CTX
 *
c
)

15 
c
->
Àn
 = 0;

16 
c
->
hash
[0] = 0x67452301;

17 
c
->
hash
[1] = 0xefcdab89;

18 
c
->
hash
[2] = 0x98badcfe;

19 
c
->
hash
[3] = 0x10325476;

20 
c
->
hash
[4] = 0xc3d2e1f0;

21 
	}
}

23 
	$SHA1_Upd©e
(
SHA_CTX
 *
c
, c⁄° *
p
, 
n
)

25 
uöt32_t
 
w‹k•a˚
[80];

26 
∑πül
;

27 
d⁄e
;

29 
∑πül
 = 
c
->
Àn
 & 0x3f;

30 
c
->
Àn
 +
n
;

31 i‡((
∑πül
 + 
n
) >= 64) {

32 i‡(
∑πül
) {

33 
d⁄e
 = 64 - 
∑πül
;

34 
	`mem˝y
(
c
->
buf„r
 + 
∑πül
, 
p
, 
d⁄e
);

35 
	`sha_å™sf‹m
(
c
->
hash
, c->
buf„r
, 
w‹k•a˚
);

36 
∑πül
 = 0;

38 
d⁄e
 = 0;

39 
n
 >
d⁄e
 + 64) {

40 
	`sha_å™sf‹m
(
c
->
hash
, 
p
 + 
d⁄e
, 
w‹k•a˚
);

41 
d⁄e
 += 64;

44 
d⁄e
 = 0;

45 i‡(
n
 - 
d⁄e
)

46 
	`mem˝y
(
c
->
buf„r
 + 
∑πül
, 
p
 + 
d⁄e
, 
n
 - done);

47 
	}
}

49 
	$SHA1_FöÆ
(*
hash
, 
SHA_CTX
 *
c
)

51 
uöt64_t
 
bôÀn
;

52 
uöt32_t
 
bôÀn_hi
, 
bôÀn_lo
;

53 
i
, 
off£t
, 
∑dÀn
;

54 
bôs
[8];

55 c⁄° 
∑ddög
[64] = { 0x80, };

57 
bôÀn
 = 
c
->
Àn
 << 3;

58 
off£t
 = 
c
->
Àn
 & 0x3f;

59 
∑dÀn
 = ((
off£t
 < 56) ? 56 : (64 + 56)) - offset;

60 
	`SHA1_Upd©e
(
c
, 
∑ddög
, 
∑dÀn
);

62 
bôÀn_hi
 = 
bôÀn
 >> 32;

63 
bôÀn_lo
 = 
bôÀn
 & 0xffffffff;

64 
bôs
[0] = 
bôÀn_hi
 >> 24;

65 
bôs
[1] = 
bôÀn_hi
 >> 16;

66 
bôs
[2] = 
bôÀn_hi
 >> 8;

67 
bôs
[3] = 
bôÀn_hi
;

68 
bôs
[4] = 
bôÀn_lo
 >> 24;

69 
bôs
[5] = 
bôÀn_lo
 >> 16;

70 
bôs
[6] = 
bôÀn_lo
 >> 8;

71 
bôs
[7] = 
bôÀn_lo
;

72 
	`SHA1_Upd©e
(
c
, 
bôs
, 8);

74 
i
 = 0; i < 5; i++) {

75 
uöt32_t
 
v
 = 
c
->
hash
[
i
];

76 
hash
[0] = 
v
 >> 24;

77 
hash
[1] = 
v
 >> 16;

78 
hash
[2] = 
v
 >> 8;

79 
hash
[3] = 
v
;

80 
hash
 += 4;

82 
	}
}

	@arm/sha1.h

8 
	~<°döt.h
>

10 
	ssha_c⁄ãxt
 {

11 
uöt64_t
 
	mÀn
;

12 
uöt32_t
 
	mhash
[5];

13 
	mbuf„r
[64];

14 } 
	tSHA_CTX
;

16 
SHA1_Inô
(
SHA_CTX
 *
c
);

17 
SHA1_Upd©e
(
SHA_CTX
 *
c
, c⁄° *
p
, 
n
);

18 
SHA1_FöÆ
(*
hash
, 
SHA_CTX
 *
c
);

	@base85.c

1 
	~"ˇche.h
"

3 #unde‡
DEBUG_85


5 #ifde‡
DEBUG_85


6 
	#ßy
(
a
Ë
	`Ârötf
(
°dîr
,á)

	)

7 
	#ßy1
(
a
,
b
Ë
	`Ârötf
(
°dîr
,á, b)

	)

8 
	#ßy2
(
a
,
b
,
c
Ë
	`Ârötf
(
°dîr
,á, b, c)

	)

10 
	#ßy
(
a
Ëdÿ{} 0)

	)

11 
	#ßy1
(
a
,
b
Ëdÿ{} 0)

	)

12 
	#ßy2
(
a
,
b
,
c
Ëdÿ{} 0)

	)

15 c⁄° 
	gí85
[] = {

28 
	gde85
[256];

29 
	$¥ï_ba£85
()

31 
i
;

32 i‡(
de85
['Z'])

34 
i
 = 0; i < 
	`ARRAY_SIZE
(
í85
); i++) {

35 
ch
 = 
í85
[
i
];

36 
de85
[
ch
] = 
i
 + 1;

38 
	}
}

40 
	$decode_85
(*
d°
, *
buf„r
, 
Àn
)

42 
	`¥ï_ba£85
();

44 
	`ßy2
("decodê85 <%.*s>", 
Àn
/4*5, 
buf„r
);

45 
Àn
) {

46 
acc
 = 0;

47 
de
, 
˙t
 = 4;

48 
ch
;

50 
ch
 = *
buf„r
++;

51 
de
 = 
de85
[
ch
];

52 i‡(--
de
 < 0)

53  
	`îr‹
("övÆid ba£85áÕhabë %c", 
ch
);

54 
acc
 =ác¯* 85 + 
de
;

55 } --
˙t
);

56 
ch
 = *
buf„r
++;

57 
de
 = 
de85
[
ch
];

58 i‡(--
de
 < 0)

59  
	`îr‹
("övÆid ba£85áÕhabë %c", 
ch
);

67 i‡(0x03030303 < 
acc
 ||

68 0xfffffff‡- 
de
 < (
acc
 *= 85))

69 
	`îr‹
("övÆid ba£85 sequí˚ %.5s", 
buf„r
-5);

70 
acc
 +
de
;

71 
	`ßy1
(" %08x", 
acc
);

73 
˙t
 = (
Àn
 < 4) ?Üen : 4;

74 
Àn
 -
˙t
;

76 
acc
 = (acc << 8) | (acc >> 24);

77 *
d°
++ = 
acc
;

78 } --
˙t
);

80 
	`ßy
("\n");

83 
	}
}

85 
	$ícode_85
(*
buf
, *
d©a
, 
byãs
)

87 
	`¥ï_ba£85
();

89 
	`ßy
("encode 85");

90 
byãs
) {

91 
acc
 = 0;

92 
˙t
;

93 
˙t
 = 24; cnt >= 0; cnt -= 8) {

94 
ch
 = *
d©a
++;

95 
acc
 |
ch
 << 
˙t
;

96 i‡(--
byãs
 == 0)

99 
	`ßy1
(" %08x", 
acc
);

100 
˙t
 = 4; cnt >= 0; cnt--) {

101 
vÆ
 = 
acc
 % 85;

102 
acc
 /= 85;

103 
buf
[
˙t
] = 
í85
[
vÆ
];

105 
buf
 += 5;

107 
	`ßy
("\n");

109 *
buf
 = 0;

110 
	}
}

112 #ifde‡
DEBUG_85


113 
	$maö
(
ac
, **
av
)

115 
buf
[1024];

117 i‡(!
	`°rcmp
(
av
[1], "-e")) {

118 
Àn
 = 
	`°æí
(
av
[2]);

119 
	`ícode_85
(
buf
, 
av
[2], 
Àn
);

120 i‡(
Àn
 <= 26)Üen =Üen + 'A' - 1;

121 
Àn
 =Üen + 'a' - 26 + 1;

122 
	`¥ötf
("ícoded: %c%s\n", 
Àn
, 
buf
);

125 i‡(!
	`°rcmp
(
av
[1], "-d")) {

126 
Àn
 = *
av
[2];

127 i‡('A' <
Àn
 &&Üen <= 'Z')Üen =Üen - 'A' + 1;

128 
Àn
 =Üen - 'a' + 26 + 1;

129 
	`decode_85
(
buf
, 
av
[2]+1, 
Àn
);

130 
	`¥ötf
("decoded: %.*s\n", 
Àn
, 
buf
);

133 i‡(!
	`°rcmp
(
av
[1], "-t")) {

134 
t
[4] = { -1,-1,-1,-1 };

135 
	`ícode_85
(
buf
, 
t
, 4);

136 
	`¥ötf
("ícoded: D%s\n", 
buf
);

139 
	}
}

	@blob.c

1 
	~"ˇche.h
"

2 
	~"blob.h
"

4 c⁄° *
	gblob_ty≥
 = "blob";

6 
blob
 *
	$lookup_blob
(c⁄° *
sha1
)

8 
obje˘
 *
obj
 = 
	`lookup_obje˘
(
sha1
);

9 i‡(!
obj
) {

10 
blob
 *
ªt
 = 
	`Æloc_blob_node
();

11 
	`¸óãd_obje˘
(
sha1
, &
ªt
->
obje˘
);

12 
ªt
->
obje˘
.
ty≥
 = 
OBJ_BLOB
;

13  
ªt
;

15 i‡(!
obj
->
ty≥
)

16 
obj
->
ty≥
 = 
OBJ_BLOB
;

17 i‡(
obj
->
ty≥
 !
OBJ_BLOB
) {

18 
	`îr‹
("Object %s isá %s,Çotá blob",

19 
	`sha1_to_hex
(
sha1
), 
	`ty≥«me
(
obj
->
ty≥
));

20  
NULL
;

22  (
blob
 *Ë
obj
;

23 
	}
}

25 
	$∑r£_blob_buf„r
(
blob
 *
ôem
, *
buf„r
, 
size
)

27 
ôem
->
obje˘
.
∑r£d
 = 1;

29 
	}
}

31 
	$∑r£_blob
(
blob
 *
ôem
)

33 
ty≥
[20];

34 *
buf„r
;

35 
size
;

36 
ªt
;

38 i‡(
ôem
->
obje˘
.
∑r£d
)

40 
buf„r
 = 
	`ªad_sha1_fûe
(
ôem
->
obje˘
.
sha1
, 
ty≥
, &
size
);

41 i‡(!
buf„r
)

42  
	`îr‹
("CouldÇotÑead %s",

43 
	`sha1_to_hex
(
ôem
->
obje˘
.
sha1
));

44 i‡(
	`°rcmp
(
ty≥
, 
blob_ty≥
))

45  
	`îr‹
("Object %sÇotá blob",

46 
	`sha1_to_hex
(
ôem
->
obje˘
.
sha1
));

47 
ªt
 = 
	`∑r£_blob_buf„r
(
ôem
, 
buf„r
, 
size
);

48 
	`‰ì
(
buf„r
);

49  
ªt
;

50 
	}
}

	@blob.h

1 #i‚de‡
BLOB_H


2 
	#BLOB_H


	)

4 
	~"obje˘.h
"

6 c⁄° *
blob_ty≥
;

8 
	sblob
 {

9 
obje˘
 
	mobje˘
;

12 
blob
 *
lookup_blob
(c⁄° *
sha1
);

14 
∑r£_blob_buf„r
(
blob
 *
ôem
, *
buf„r
, 
size
);

16 
∑r£_blob
(
blob
 *
ôem
);

	@builtin-add.c

6 
	~"ˇche.h
"

7 
	~"buûtö.h
"

8 
	~"dú.h
"

9 
	~"exec_cmd.h
"

10 
	~"ˇche-åì.h
"

12 c⁄° 
	gbuûtö_add_ußge
[] =

15 
	$¥u√_dúe˘‹y
(
dú_°ru˘
 *
dú
, c⁄° **
∑th•ec
, 
¥efix
)

17 *
£í
;

18 
i
, 
•ecs
;

19 
dú_íåy
 **
§c
, **
d°
;

21 
•ecs
 = 0; 
∑th•ec
[specs]; specs++)

23 
£í
 = 
	`xˇŒoc
(
•ecs
, 1);

25 
§c
 = 
d°
 = 
dú
->
íåõs
;

26 
i
 = 
dú
->
ƒ
;

27 --
i
 >= 0) {

28 
dú_íåy
 *
íåy
 = *
§c
++;

29 i‡(
	`m©ch_∑th•ec
(
∑th•ec
, 
íåy
->
«me
,É¡ry->
Àn
,

30 
¥efix
, 
£í
))

31 *
d°
++ = 
íåy
;

33 
dú
->
ƒ
 = 
d°
 - dú->
íåõs
;

35 
i
 = 0; i < 
•ecs
; i++) {

36 
°©
 
°
;

37 c⁄° *
m©ch
;

38 i‡(
£í
[
i
])

41 
m©ch
 = 
∑th•ec
[
i
];

42 i‡(!
m©ch
[0])

46 i‡(!
	`l°©
(
m©ch
, &
°
)) {

47 
dú_íåy
 *
ít
;

49 
ít
 = 
	`dú_add_«me
(
dú
, 
m©ch
, 
	`°æí
(match));

50 
ít
->
ign‹ed
 = 1;

51 i‡(
	`S_ISDIR
(
°
.
°_mode
))

52 
ít
->
ign‹ed_dú
 = 1;

55 
	`dõ
("∑th•e¯'%s' didÇŸ m©chány fûes", 
m©ch
);

57 
	}
}

59 
	$fûl_dúe˘‹y
(
dú_°ru˘
 *
dú
, c⁄° **
∑th•ec
)

61 c⁄° *
∑th
, *
ba£
;

62 
ba£Àn
;

65 
	`mem£t
(
dú
, 0, (*dir));

66 
dú
->
ex˛ude_≥r_dú
 = ".gitignore";

67 
∑th
 = 
	`gô_∑th
("info/exclude");

68 i‡(!
	`ac˚ss
(
∑th
, 
R_OK
))

69 
	`add_ex˛udes_‰om_fûe
(
dú
, 
∑th
);

75 
ba£Àn
 = 
	`comm⁄_¥efix
(
∑th•ec
);

76 
∑th
 = ".";

77 
ba£
 = "";

78 i‡(
ba£Àn
) {

79 *
comm⁄
 = 
	`xmÆloc
(
ba£Àn
 + 1);

80 
	`mem˝y
(
comm⁄
, *
∑th•ec
, 
ba£Àn
);

81 
comm⁄
[
ba£Àn
] = 0;

82 
∑th
 = 
ba£
 = 
comm⁄
;

86 
	`ªad_dúe˘‹y
(
dú
, 
∑th
, 
ba£
, 
ba£Àn
);

87 i‡(
∑th•ec
)

88 
	`¥u√_dúe˘‹y
(
dú
, 
∑th•ec
, 
ba£Àn
);

89 
	}
}

91 
lock_fûe
 
	glock_fûe
;

93 c⁄° 
	gign‹e_w¨nög
[] =

96 
	$cmd_add
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

98 
i
, 
√wfd
;

99 
vîbo£
 = 0, 
show_⁄ly
 = 0, 
ign‹ed_too
 = 0;

100 c⁄° **
∑th•ec
;

101 
dú_°ru˘
 
dú
;

102 
add_öãø˘ive
 = 0;

104 
i
 = 1; i < 
¨gc
; i++) {

105 i‡(!
	`°rcmp
("--öãø˘ive", 
¨gv
[
i
]) ||

106 !
	`°rcmp
("-i", 
¨gv
[
i
]))

107 
add_öãø˘ive
++;

109 i‡(
add_öãø˘ive
) {

110 c⁄° *
¨gs
[] = { "add--öãø˘ive", 
NULL
 };

112 i‡(
add_öãø˘ive
 !1 || 
¨gc
 != 2)

113 
	`dõ
("add --interactive doesÇotÅakeányÖarameters");

114 
	`execv_gô_cmd
(
¨gs
);

115 
	`exô
(1);

118 
	`gô_c⁄fig
(
gô_deÁu…_c⁄fig
);

120 
√wfd
 = 
	`hﬁd_lock_fûe_f‹_upd©e
(&
lock_fûe
, 
	`gë_ödex_fûe
(), 1);

122 
i
 = 1; i < 
¨gc
; i++) {

123 c⁄° *
¨g
 = 
¨gv
[
i
];

125 i‡(
¨g
[0] != '-')

127 i‡(!
	`°rcmp
(
¨g
, "--")) {

128 
i
++;

131 i‡(!
	`°rcmp
(
¨g
, "-n")) {

132 
show_⁄ly
 = 1;

135 i‡(!
	`°rcmp
(
¨g
, "-f")) {

136 
ign‹ed_too
 = 1;

139 i‡(!
	`°rcmp
(
¨g
, "-v")) {

140 
vîbo£
 = 1;

143 
	`ußge
(
buûtö_add_ußge
);

145 i‡(
¨gc
 <
i
) {

146 
	`Ârötf
(
°dîr
, "Nothing specified,Çothingádded.\n");

147 
	`Ârötf
(
°dîr
, "Maybe you wantedÅo say 'gitádd .'?\n");

150 
∑th•ec
 = 
	`gë_∑th•ec
(
¥efix
, 
¨gv
 + 
i
);

152 
	`fûl_dúe˘‹y
(&
dú
, 
∑th•ec
);

154 i‡(
show_⁄ly
) {

155 c⁄° *
£p
 = "", *
eof
 = "";

156 
i
 = 0; i < 
dú
.
ƒ
; i++) {

157 i‡(!
ign‹ed_too
 && 
dú
.
íåõs
[
i
]->
ign‹ed
)

159 
	`¥ötf
("%s%s", 
£p
, 
dú
.
íåõs
[
i
]->
«me
);

160 
£p
 = " ";

161 
eof
 = "\n";

163 
	`Âuts
(
eof
, 
°dout
);

167 i‡(
	`ªad_ˇche
() < 0)

168 
	`dõ
("index file corrupt");

170 i‡(!
ign‹ed_too
) {

171 
has_ign‹ed
 = 0;

172 
i
 = 0; i < 
dú
.
ƒ
; i++)

173 i‡(
dú
.
íåõs
[
i
]->
ign‹ed
)

174 
has_ign‹ed
 = 1;

175 i‡(
has_ign‹ed
) {

176 
	`Ârötf
(
°dîr
, 
ign‹e_w¨nög
);

177 
i
 = 0; i < 
dú
.
ƒ
; i++) {

178 i‡(!
dú
.
íåõs
[
i
]->
ign‹ed
)

180 
	`Ârötf
(
°dîr
, "%s", 
dú
.
íåõs
[
i
]->
«me
);

181 i‡(
dú
.
íåõs
[
i
]->
ign‹ed_dú
)

182 
	`Ârötf
(
°dîr
, " (directory)");

183 
	`Âutc
('\n', 
°dîr
);

185 
	`Ârötf
(
°dîr
,

187 
	`exô
(1);

191 
i
 = 0; i < 
dú
.
ƒ
; i++)

192 
	`add_fûe_to_ödex
(
dú
.
íåõs
[
i
]->
«me
, 
vîbo£
);

194 i‡(
a˘ive_ˇche_ch™ged
) {

195 i‡(
	`wrôe_ˇche
(
√wfd
, 
a˘ive_ˇche
, 
a˘ive_ƒ
) ||

196 
	`˛o£
(
√wfd
Ë|| 
	`commô_lock_fûe
(&
lock_fûe
))

197 
	`dõ
("UnableÅo writeÇew index file");

201 
	}
}

	@builtin-annotate.c

6 
	~"gô-com∑t-utû.h
"

7 
	~"buûtö.h
"

9 
	$cmd_™nŸ©e
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

11 c⁄° **
«rgv
;

12 
i
;

13 
«rgv
 = 
	`xmÆloc
((*Ë* (
¨gc
 + 2));

15 
«rgv
[0] = "annotate";

16 
«rgv
[1] = "-c";

18 
i
 = 1; i < 
¨gc
; i++) {

19 
«rgv
[
i
+1] = 
¨gv
[i];

21 
«rgv
[
¨gc
 + 1] = 
NULL
;

23  
	`cmd_bœme
(
¨gc
 + 1, 
«rgv
, 
¥efix
);

24 
	}
}

	@builtin-apply.c

9 
	~"ˇche.h
"

10 
	~"ˇche-åì.h
"

11 
	~"quŸe.h
"

12 
	~"blob.h
"

13 
	~"dñè.h
"

14 
	~"buûtö.h
"

25 c⁄° *
	g¥efix
;

26 
	g¥efix_Àngth
 = -1;

27 
	g√wfd
 = -1;

29 
	gunidiff_zîo
;

30 
	gp_vÆue
 = 1;

31 
	gcheck_ödex
;

32 
	gwrôe_ödex
;

33 
	gˇched
;

34 
	gdiff°©
;

35 
	gnum°©
;

36 
	gsumm¨y
;

37 
	gcheck
;

38 
	g≠∂y
 = 1;

39 
	g≠∂y_ö_ªvî£
;

40 
	g≠∂y_wôh_ªje˘
;

41 
	g≠∂y_vîbo£ly
;

42 
	gno_add
;

43 
	gshow_ödex_öfo
;

44 
	glöe_ãrmö©i⁄
 = '\n';

45 
	gp_c⁄ãxt
 = 
ULONG_MAX
;

46 c⁄° 
	g≠∂y_ußge
[] =

49 
	ewhôe•a˚_eﬁ
 {

50 
	mnow¨n_whôe•a˚
,

51 
	mw¨n_⁄_whôe•a˚
,

52 
	mîr‹_⁄_whôe•a˚
,

53 
	m°rù_whôe•a˚
,

54 } 
	g√w_whôe•a˚
 = 
w¨n_⁄_whôe•a˚
;

55 
	gwhôe•a˚_îr‹
;

56 
	gsquñch_whôe•a˚_îr‹s
 = 5;

57 
	g≠∂õd_a·î_°rùpög
;

58 c⁄° *
	g∑tch_öput_fûe
;

60 
	$∑r£_whôe•a˚_›ti⁄
(c⁄° *
›ti⁄
)

62 i‡(!
›ti⁄
) {

63 
√w_whôe•a˚
 = 
w¨n_⁄_whôe•a˚
;

66 i‡(!
	`°rcmp
(
›ti⁄
, "warn")) {

67 
√w_whôe•a˚
 = 
w¨n_⁄_whôe•a˚
;

70 i‡(!
	`°rcmp
(
›ti⁄
, "nowarn")) {

71 
√w_whôe•a˚
 = 
now¨n_whôe•a˚
;

74 i‡(!
	`°rcmp
(
›ti⁄
, "error")) {

75 
√w_whôe•a˚
 = 
îr‹_⁄_whôe•a˚
;

78 i‡(!
	`°rcmp
(
›ti⁄
, "error-all")) {

79 
√w_whôe•a˚
 = 
îr‹_⁄_whôe•a˚
;

80 
squñch_whôe•a˚_îr‹s
 = 0;

83 i‡(!
	`°rcmp
(
›ti⁄
, "strip")) {

84 
√w_whôe•a˚
 = 
°rù_whôe•a˚
;

87 
	`dõ
("uƒecognized whôe•a˚ o±i⁄ '%s'", 
›ti⁄
);

88 
	}
}

90 
	$£t_deÁu…_whôe•a˚_mode
(c⁄° *
whôe•a˚_›ti⁄
)

92 i‡(!
whôe•a˚_›ti⁄
 && !
≠∂y_deÁu…_whôe•a˚
) {

93 
√w_whôe•a˚
 = (
≠∂y


94 ? 
w¨n_⁄_whôe•a˚


95 : 
now¨n_whôe•a˚
);

97 
	}
}

104 
	gmax_ch™ge
, 
	gmax_Àn
;

111 
	glöír
 = 1;

120 
	s‰agmít
 {

121 
	mÀadög
, 
	måaûög
;

122 
	mﬁdpos
, 
	mﬁdlöes
;

123 
	m√wpos
, 
	m√wlöes
;

124 c⁄° *
	m∑tch
;

125 
	msize
;

126 
	mªje˘ed
;

127 
‰agmít
 *
	m√xt
;

135 
	#bö¨y_∑tch_mëhod
 
Àadög


	)

136 
	#BINARY_DELTA_DEFLATED
 1

	)

137 
	#BINARY_LITERAL_DEFLATED
 2

	)

139 
	s∑tch
 {

140 *
	m√w_«me
, *
	mﬁd_«me
, *
	mdef_«me
;

141 
	mﬁd_mode
, 
	m√w_mode
;

142 
	mis_√w
, 
	mis_dñëe
;

143 
	mªje˘ed
;

144 
	mdeÊ©e_‹igÀn
;

145 
	mlöes_added
, 
	mlöes_dñëed
;

146 
	msc‹e
;

147 
	möaccuøã_eof
:1;

148 
	mis_bö¨y
:1;

149 
	mis_c›y
:1;

150 
	mis_ª«me
:1;

151 
‰agmít
 *
	m‰agmíts
;

152 *
	mªsu…
;

153 
	mªsu…size
;

154 
	mﬁd_sha1_¥efix
[41];

155 
	m√w_sha1_¥efix
[41];

156 
∑tch
 *
	m√xt
;

159 
	$ßy_∑tch_«me
(
FILE
 *
ouçut
, c⁄° *
¥e
, 
∑tch
 *∑tch, c⁄° *
po°
)

161 
	`Âuts
(
¥e
, 
ouçut
);

162 i‡(
∑tch
->
ﬁd_«me
 &&Ö©ch->
√w_«me
 &&

163 
	`°rcmp
(
∑tch
->
ﬁd_«me
,Ö©ch->
√w_«me
)) {

164 
	`wrôe_«me_quŸed
(
NULL
, 0, 
∑tch
->
ﬁd_«me
, 1, 
ouçut
);

165 
	`Âuts
(" => ", 
ouçut
);

166 
	`wrôe_«me_quŸed
(
NULL
, 0, 
∑tch
->
√w_«me
, 1, 
ouçut
);

169 c⁄° *
n
 = 
∑tch
->
√w_«me
;

170 i‡(!
n
)

171 
n
 = 
∑tch
->
ﬁd_«me
;

172 
	`wrôe_«me_quŸed
(
NULL
, 0, 
n
, 1, 
ouçut
);

174 
	`Âuts
(
po°
, 
ouçut
);

175 
	}
}

177 
	#CHUNKSIZE
 (8192)

	)

178 
	#SLOP
 (16)

	)

180 *
	$ªad_∑tch_fûe
(
fd
, *
sizï
)

182 
size
 = 0, 
Æloc
 = 
CHUNKSIZE
;

183 *
buf„r
 = 
	`xmÆloc
(
Æloc
);

186 
ƒ
 = 
Æloc
 - 
size
;

187 i‡(
ƒ
 < 1024) {

188 
Æloc
 +
CHUNKSIZE
;

189 
buf„r
 = 
	`xªÆloc
(buf„r, 
Æloc
);

190 
ƒ
 = 
Æloc
 - 
size
;

192 
ƒ
 = 
	`xªad
(
fd
, (*Ë
buf„r
 + 
size
,Çr);

193 i‡(!
ƒ
)

195 i‡(
ƒ
 < 0)

196 
	`dõ
("gô-≠∂y:ÑódÑëu∫ed %s", 
	`°ªº‹
(
î∫o
));

197 
size
 +
ƒ
;

199 *
sizï
 = 
size
;

206 i‡(
Æloc
 < 
size
 + 
SLOP
)

207 
buf„r
 = 
	`xªÆloc
(buf„r, 
size
 + 
SLOP
);

208 
	`mem£t
((*Ë
buf„r
 + 
size
, 0, 
SLOP
);

209  
buf„r
;

210 
	}
}

212 
	$löñí
(c⁄° *
buf„r
, 
size
)

214 
Àn
 = 0;

215 
size
--) {

216 
Àn
++;

217 i‡(*
buf„r
++ == '\n')

220  
Àn
;

221 
	}
}

223 
	$is_dev_nuŒ
(c⁄° *
°r
)

225  !
	`memcmp
("/dev/nuŒ", 
°r
, 9Ë&& 
	`is•a˚
(str[9]);

226 
	}
}

228 
	#TERM_SPACE
 1

	)

229 
	#TERM_TAB
 2

	)

231 
	$«me_ãrmö©e
(c⁄° *
«me
, 
«mñí
, 
c
, 
ãrmö©e
)

233 i‡(
c
 =' ' && !(
ãrmö©e
 & 
TERM_SPACE
))

235 i‡(
c
 ='\t' && !(
ãrmö©e
 & 
TERM_TAB
))

239 
	}
}

241 * 
	$föd_«me
(c⁄° *
löe
, *
def
, 
p_vÆue
, 
ãrmö©e
)

243 
Àn
;

244 c⁄° *
°¨t
 = 
löe
;

245 *
«me
;

247 i‡(*
löe
 == '"') {

251 
«me
 = 
	`unquŸe_c_°yÀ
(
löe
, 
NULL
);

252 i‡(
«me
) {

253 *
˝
 = 
«me
;

254 
p_vÆue
) {

255 
˝
 = 
	`°rchr
(
«me
, '/');

256 i‡(!
˝
)

258 
˝
++;

259 
p_vÆue
--;

261 i‡(
˝
) {

265 
	`memmove
(
«me
, 
˝
, 
	`°æí
(cp) + 1);

266 
	`‰ì
(
def
);

267  
«me
;

270 
	`‰ì
(
«me
);

271 
«me
 = 
NULL
;

277 
c
 = *
löe
;

279 i‡(
	`is•a˚
(
c
)) {

280 i‡(
c
 == '\n')

282 i‡(
	`«me_ãrmö©e
(
°¨t
, 
löe
-°¨t, 
c
, 
ãrmö©e
))

285 
löe
++;

286 i‡(
c
 ='/' && !--
p_vÆue
)

287 
°¨t
 = 
löe
;

289 i‡(!
°¨t
)

290  
def
;

291 
Àn
 = 
löe
 - 
°¨t
;

292 i‡(!
Àn
)

293  
def
;

301 i‡(
def
) {

302 
deÊí
 = 
	`°æí
(
def
);

303 i‡(
deÊí
 < 
Àn
 && !
	`°∫cmp
(
°¨t
, 
def
, deflen))

304  
def
;

307 
«me
 = 
	`xmÆloc
(
Àn
 + 1);

308 
	`mem˝y
(
«me
, 
°¨t
, 
Àn
);

309 
«me
[
Àn
] = 0;

310 
	`‰ì
(
def
);

311  
«me
;

312 
	}
}

323 
	$∑r£_åadôi⁄Æ_∑tch
(c⁄° *
fú°
, c⁄° *
£c⁄d
, 
∑tch
 *patch)

325 *
«me
;

327 
fú°
 += 4;

328 
£c⁄d
 += 4;

329 i‡(
	`is_dev_nuŒ
(
fú°
)) {

330 
∑tch
->
is_√w
 = 1;

331 
∑tch
->
is_dñëe
 = 0;

332 
«me
 = 
	`föd_«me
(
£c⁄d
, 
NULL
, 
p_vÆue
, 
TERM_SPACE
 | 
TERM_TAB
);

333 
∑tch
->
√w_«me
 = 
«me
;

334 } i‡(
	`is_dev_nuŒ
(
£c⁄d
)) {

335 
∑tch
->
is_√w
 = 0;

336 
∑tch
->
is_dñëe
 = 1;

337 
«me
 = 
	`föd_«me
(
fú°
, 
NULL
, 
p_vÆue
, 
TERM_SPACE
 | 
TERM_TAB
);

338 
∑tch
->
ﬁd_«me
 = 
«me
;

340 
«me
 = 
	`föd_«me
(
fú°
, 
NULL
, 
p_vÆue
, 
TERM_SPACE
 | 
TERM_TAB
);

341 
«me
 = 
	`föd_«me
(
£c⁄d
,Çame, 
p_vÆue
, 
TERM_SPACE
 | 
TERM_TAB
);

342 
∑tch
->
ﬁd_«me
 =Ö©ch->
√w_«me
 = 
«me
;

344 i‡(!
«me
)

345 
	`dõ
("u«bÀÅÿföd fûíamêöÖ©cháàlöê%d", 
löír
);

346 
	}
}

348 
	$gôdiff_hdªnd
(c⁄° *
löe
, 
∑tch
 *patch)

351 
	}
}

362 *
	$gôdiff_vîify_«me
(c⁄° *
löe
, 
i¢uŒ
, *
‹ig_«me
, c⁄° *
ﬁd√w
)

364 i‡(!
‹ig_«me
 && !
i¢uŒ
)

365  
	`föd_«me
(
löe
, 
NULL
, 1, 
TERM_TAB
);

367 i‡(
‹ig_«me
) {

368 
Àn
;

369 c⁄° *
«me
;

370 *
™Ÿhî
;

371 
«me
 = 
‹ig_«me
;

372 
Àn
 = 
	`°æí
(
«me
);

373 i‡(
i¢uŒ
)

374 
	`dõ
("gô-≠∂y: bad gô-dif‡-Éx≥˘ed /dev/nuŒ, gŸ %†⁄Üöê%d", 
«me
, 
löír
);

375 
™Ÿhî
 = 
	`föd_«me
(
löe
, 
NULL
, 1, 
TERM_TAB
);

376 i‡(!
™Ÿhî
 || 
	`memcmp
◊nŸhî, 
«me
, 
Àn
))

377 
	`dõ
("gô-≠∂y: bad gô-dif‡- inc⁄si°íà%†fûíamê⁄Üöê%d", 
ﬁd√w
, 
löír
);

378 
	`‰ì
(
™Ÿhî
);

379  
‹ig_«me
;

383 i‡(
	`memcmp
("/dev/nuŒ", 
löe
, 9) ||Üine[9] != '\n')

384 
	`dõ
("gô-≠∂y: bad gô-dif‡-Éx≥˘ed /dev/nuŒ o¿löê%d", 
löír
);

385  
NULL
;

387 
	}
}

389 
	$gôdiff_ﬁd«me
(c⁄° *
löe
, 
∑tch
 *patch)

391 
∑tch
->
ﬁd_«me
 = 
	`gôdiff_vîify_«me
(
löe
,Ö©ch->
is_√w
,Öatch->old_name, "old");

393 
	}
}

395 
	$gôdiff_√w«me
(c⁄° *
löe
, 
∑tch
 *patch)

397 
∑tch
->
√w_«me
 = 
	`gôdiff_vîify_«me
(
löe
,Ö©ch->
is_dñëe
,Öatch->new_name, "new");

399 
	}
}

401 
	$gôdiff_ﬁdmode
(c⁄° *
löe
, 
∑tch
 *patch)

403 
∑tch
->
ﬁd_mode
 = 
	`°πoul
(
löe
, 
NULL
, 8);

405 
	}
}

407 
	$gôdiff_√wmode
(c⁄° *
löe
, 
∑tch
 *patch)

409 
∑tch
->
√w_mode
 = 
	`°πoul
(
löe
, 
NULL
, 8);

411 
	}
}

413 
	$gôdiff_dñëe
(c⁄° *
löe
, 
∑tch
 *patch)

415 
∑tch
->
is_dñëe
 = 1;

416 
∑tch
->
ﬁd_«me
 =Ö©ch->
def_«me
;

417  
	`gôdiff_ﬁdmode
(
löe
, 
∑tch
);

418 
	}
}

420 
	$gôdiff_√wfûe
(c⁄° *
löe
, 
∑tch
 *patch)

422 
∑tch
->
is_√w
 = 1;

423 
∑tch
->
√w_«me
 =Ö©ch->
def_«me
;

424  
	`gôdiff_√wmode
(
löe
, 
∑tch
);

425 
	}
}

427 
	$gôdiff_c›y§c
(c⁄° *
löe
, 
∑tch
 *patch)

429 
∑tch
->
is_c›y
 = 1;

430 
∑tch
->
ﬁd_«me
 = 
	`föd_«me
(
löe
, 
NULL
, 0, 0);

432 
	}
}

434 
	$gôdiff_c›yd°
(c⁄° *
löe
, 
∑tch
 *patch)

436 
∑tch
->
is_c›y
 = 1;

437 
∑tch
->
√w_«me
 = 
	`föd_«me
(
löe
, 
NULL
, 0, 0);

439 
	}
}

441 
	$gôdiff_ª«me§c
(c⁄° *
löe
, 
∑tch
 *patch)

443 
∑tch
->
is_ª«me
 = 1;

444 
∑tch
->
ﬁd_«me
 = 
	`föd_«me
(
löe
, 
NULL
, 0, 0);

446 
	}
}

448 
	$gôdiff_ª«med°
(c⁄° *
löe
, 
∑tch
 *patch)

450 
∑tch
->
is_ª«me
 = 1;

451 
∑tch
->
√w_«me
 = 
	`föd_«me
(
löe
, 
NULL
, 0, 0);

453 
	}
}

455 
	$gôdiff_simû¨ôy
(c⁄° *
löe
, 
∑tch
 *patch)

457 i‡((
∑tch
->
sc‹e
 = 
	`°πoul
(
löe
, 
NULL
, 10)Ë=
ULONG_MAX
)

458 
∑tch
->
sc‹e
 = 0;

460 
	}
}

462 
	$gôdiff_dissimû¨ôy
(c⁄° *
löe
, 
∑tch
 *patch)

464 i‡((
∑tch
->
sc‹e
 = 
	`°πoul
(
löe
, 
NULL
, 10)Ë=
ULONG_MAX
)

465 
∑tch
->
sc‹e
 = 0;

467 
	}
}

469 
	$gôdiff_ödex
(c⁄° *
löe
, 
∑tch
 *patch)

474 c⁄° *
±r
, *
eﬁ
;

475 
Àn
;

477 
±r
 = 
	`°rchr
(
löe
, '.');

478 i‡(!
±r
 ||Öå[1] !'.' || 40 <Öå - 
löe
)

480 
Àn
 = 
±r
 - 
löe
;

481 
	`mem˝y
(
∑tch
->
ﬁd_sha1_¥efix
, 
löe
, 
Àn
);

482 
∑tch
->
ﬁd_sha1_¥efix
[
Àn
] = 0;

484 
löe
 = 
±r
 + 2;

485 
±r
 = 
	`°rchr
(
löe
, ' ');

486 
eﬁ
 = 
	`°rchr
(
löe
, '\n');

488 i‡(!
±r
 || 
eﬁ
 <Ötr)

489 
±r
 = 
eﬁ
;

490 
Àn
 = 
±r
 - 
löe
;

492 i‡(40 < 
Àn
)

494 
	`mem˝y
(
∑tch
->
√w_sha1_¥efix
, 
löe
, 
Àn
);

495 
∑tch
->
√w_sha1_¥efix
[
Àn
] = 0;

496 i‡(*
±r
 == ' ')

497 
∑tch
->
√w_mode
 =Ö©ch->
ﬁd_mode
 = 
	`°πoul
(
±r
+1, 
NULL
, 8);

499 
	}
}

505 
	$gôdiff_uƒecognized
(c⁄° *
löe
, 
∑tch
 *patch)

508 
	}
}

510 c⁄° *
	$°›_©_¶ash
(c⁄° *
löe
, 
Œí
)

512 
i
;

514 
i
 = 0; i < 
Œí
; i++) {

515 
ch
 = 
löe
[
i
];

516 i‡(
ch
 == '/')

517  
löe
 + 
i
;

519  
NULL
;

520 
	}
}

529 *
	$gô_hódî_«me
(*
löe
, 
Œí
)

531 
Àn
;

532 c⁄° *
«me
;

533 c⁄° *
£c⁄d
 = 
NULL
;

535 
löe
 +
	`°æí
("diff --git ");

536 
Œí
 -
	`°æí
("diff --git ");

538 i‡(*
löe
 == '"') {

539 c⁄° *
˝
;

540 *
fú°
 = 
	`unquŸe_c_°yÀ
(
löe
, &
£c⁄d
);

541 i‡(!
fú°
)

542  
NULL
;

545 
˝
 = 
	`°›_©_¶ash
(
fú°
, 
	`°æí
(first));

546 i‡(!
˝
 || c∞=
fú°
) {

548 
‰ì_fú°_™d_Áû
:

549 
	`‰ì
(
fú°
);

550  
NULL
;

552 
Àn
 = 
	`°æí
(
˝
+1);

553 
	`memmove
(
fú°
, 
˝
+1, 
Àn
+1);

558 (
£c⁄d
 < 
löe
 + 
Œí
Ë&& 
	`is•a˚
(*second))

559 
£c⁄d
++;

561 i‡(
löe
 + 
Œí
 <
£c⁄d
)

562 
‰ì_fú°_™d_Áû
;

563 i‡(*
£c⁄d
 == '"') {

564 *
•
 = 
	`unquŸe_c_°yÀ
(
£c⁄d
, 
NULL
);

565 i‡(!
•
)

566 
‰ì_fú°_™d_Áû
;

567 
˝
 = 
	`°›_©_¶ash
(
•
, 
	`°æí
(sp));

568 i‡(!
˝
 || c∞=
•
) {

569 
‰ì_bŸh_™d_Áû
:

570 
	`‰ì
(
•
);

571 
‰ì_fú°_™d_Áû
;

574 i‡(
	`°rcmp
(
˝
+1, 
fú°
))

575 
‰ì_bŸh_™d_Áû
;

576 
	`‰ì
(
•
);

577  
fú°
;

581 
˝
 = 
	`°›_©_¶ash
(
£c⁄d
, 
löe
 + 
Œí
 - second);

582 i‡(!
˝
 || c∞=
£c⁄d
)

583 
‰ì_fú°_™d_Áû
;

584 
˝
++;

585 i‡(
löe
 + 
Œí
 - 
˝
 !
Àn
 + 1 ||

586 
	`memcmp
(
fú°
, 
˝
, 
Àn
))

587 
‰ì_fú°_™d_Áû
;

588  
fú°
;

592 
«me
 = 
	`°›_©_¶ash
(
löe
, 
Œí
);

593 i‡(!
«me
 ||Çamê=
löe
)

594  
NULL
;

596 
«me
++;

601 
£c⁄d
 = 
«me
; sec⁄d < 
löe
 + 
Œí
; second++) {

602 i‡(*
£c⁄d
 == '"') {

603 c⁄° *
˝
 = 
£c⁄d
;

604 c⁄° *
≈
;

605 *
•
 = 
	`unquŸe_c_°yÀ
(
£c⁄d
, 
NULL
);

607 i‡(!
•
)

608  
NULL
;

609 
≈
 = 
	`°›_©_¶ash
(
•
, 
	`°æí
(sp));

610 i‡(!
≈
 ||Ç∞=
•
) {

611 
‰ì_£c⁄d_™d_Áû
:

612 
	`‰ì
(
•
);

613  
NULL
;

615 
≈
++;

616 
Àn
 = 
	`°æí
(
≈
);

617 i‡(
Àn
 < 
˝
 - 
«me
 &&

618 !
	`°∫cmp
(
≈
, 
«me
, 
Àn
) &&

619 
	`is•a˚
(
«me
[
Àn
])) {

621 
	`memmove
(
•
, 
≈
, 
Àn
 + 1);

622  
•
;

624 
‰ì_£c⁄d_™d_Áû
;

632 
Àn
 = 0 ; ;Üen++) {

633 
«me
[
Àn
]) {

637  
NULL
;

639 
£c⁄d
 = 
«me
+
Àn
;

641 
c
 = *
£c⁄d
++;

642 i‡(
c
 == '\n')

643  
NULL
;

644 i‡(
c
 == '/')

647 i‡(
£c⁄d
[
Àn
] ='\n' && !
	`memcmp
(
«me
, second,Üen)) {

648 *
ªt
 = 
	`xmÆloc
(
Àn
 + 1);

649 
	`mem˝y
(
ªt
, 
«me
, 
Àn
);

650 
ªt
[
Àn
] = 0;

651  
ªt
;

655  
NULL
;

656 
	}
}

659 
	$∑r£_gô_hódî
(*
löe
, 
Àn
, 
size
, 
∑tch
 *patch)

661 
off£t
;

664 
∑tch
->
is_√w
 = 0;

665 
∑tch
->
is_dñëe
 = 0;

673 
∑tch
->
def_«me
 = 
	`gô_hódî_«me
(
löe
, 
Àn
);

675 
löe
 +
Àn
;

676 
size
 -
Àn
;

677 
löír
++;

678 
off£t
 = 
Àn
 ; 
size
 > 0 ; off£à+Àn, sizê-Àn, 
löe
 +Àn, 
löír
++) {

679 c⁄° 
	s›íåy
 {

680 c⁄° *
°r
;

681 (*
‚
)(c⁄° *, 
∑tch
 *);

682 } 
›èbÀ
[] = {

683 { "@@ -", 
gôdiff_hdªnd
 },

684 { "--- ", 
gôdiff_ﬁd«me
 },

685 { "+++ ", 
gôdiff_√w«me
 },

686 { "ﬁd modê", 
gôdiff_ﬁdmode
 },

687 { "√w modê", 
gôdiff_√wmode
 },

688 { "dñëed fûêmodê", 
gôdiff_dñëe
 },

689 { "√w fûêmodê", 
gôdiff_√wfûe
 },

690 { "c›y from ", 
gôdiff_c›y§c
 },

691 { "c›yÅÿ", 
gôdiff_c›yd°
 },

692 { "ª«mêﬁd ", 
gôdiff_ª«me§c
 },

693 { "ª«mê√w ", 
gôdiff_ª«med°
 },

694 { "ª«mê‰om ", 
gôdiff_ª«me§c
 },

695 { "ª«mêtÿ", 
gôdiff_ª«med°
 },

696 { "simû¨ôy index ", 
gôdiff_simû¨ôy
 },

697 { "dissimû¨ôy index ", 
gôdiff_dissimû¨ôy
 },

698 { "ödex ", 
gôdiff_ödex
 },

699 { "", 
gôdiff_uƒecognized
 },

701 
i
;

703 
Àn
 = 
	`löñí
(
löe
, 
size
);

704 i‡(!
Àn
 || 
löe
[len-1] != '\n')

706 
i
 = 0; i < 
	`ARRAY_SIZE
(
›èbÀ
); i++) {

707 c⁄° 
›íåy
 *
p
 = 
›èbÀ
 + 
i
;

708 
›Àn
 = 
	`°æí
(
p
->
°r
);

709 i‡(
Àn
 < 
›Àn
 || 
	`memcmp
(
p
->
°r
, 
löe
, oplen))

711 i‡(
p
->
	`‚
(
löe
 + 
›Àn
, 
∑tch
) < 0)

712  
off£t
;

717  
off£t
;

718 
	}
}

720 
	$∑r£_num
(c⁄° *
löe
, *
p
)

722 *
±r
;

724 i‡(!
	`isdigô
(*
löe
))

726 *
p
 = 
	`°πoul
(
löe
, &
±r
, 10);

727  
±r
 - 
löe
;

728 
	}
}

730 
	$∑r£_ønge
(c⁄° *
löe
, 
Àn
, 
off£t
, c⁄° *
ex≥˘
,

731 *
p1
, *
p2
)

733 
digôs
, 
ex
;

735 i‡(
off£t
 < 0 || off£à>
Àn
)

737 
löe
 +
off£t
;

738 
Àn
 -
off£t
;

740 
digôs
 = 
	`∑r£_num
(
löe
, 
p1
);

741 i‡(!
digôs
)

744 
off£t
 +
digôs
;

745 
löe
 +
digôs
;

746 
Àn
 -
digôs
;

748 *
p2
 = 1;

749 i‡(*
löe
 == ',') {

750 
digôs
 = 
	`∑r£_num
(
löe
+1, 
p2
);

751 i‡(!
digôs
)

754 
off£t
 +
digôs
+1;

755 
löe
 +
digôs
+1;

756 
Àn
 -
digôs
+1;

759 
ex
 = 
	`°æí
(
ex≥˘
);

760 i‡(
ex
 > 
Àn
)

762 i‡(
	`memcmp
(
löe
, 
ex≥˘
, 
ex
))

765  
off£t
 + 
ex
;

766 
	}
}

772 
	$∑r£_‰agmít_hódî
(*
löe
, 
Àn
, 
‰agmít
 *fragment)

774 
off£t
;

776 i‡(!
Àn
 || 
löe
[len-1] != '\n')

780 
off£t
 = 
	`∑r£_ønge
(
löe
, 
Àn
, 4, " +", &
‰agmít
->
ﬁdpos
, &‰agmít->
ﬁdlöes
);

781 
off£t
 = 
	`∑r£_ønge
(
löe
, 
Àn
, off£t, " @@", &
‰agmít
->
√wpos
, &‰agmít->
√wlöes
);

783  
off£t
;

784 
	}
}

786 
	$föd_hódî
(*
löe
, 
size
, *
hdrsize
, 
∑tch
 *patch)

788 
off£t
, 
Àn
;

790 
∑tch
->
is_ª«me
 =Ö©ch->
is_c›y
 = 0;

791 
∑tch
->
is_√w
 =Ö©ch->
is_dñëe
 = -1;

792 
∑tch
->
ﬁd_mode
 =Ö©ch->
√w_mode
 = 0;

793 
∑tch
->
ﬁd_«me
 =Ö©ch->
√w_«me
 = 
NULL
;

794 
off£t
 = 0; 
size
 > 0; off£à+
Àn
, sizê-Àn, 
löe
 +Àn, 
löír
++) {

795 
√xéí
;

797 
Àn
 = 
	`löñí
(
löe
, 
size
);

798 i‡(!
Àn
)

802 i‡(
Àn
 < 6)

810 i‡(!
	`memcmp
("@@ -", 
löe
, 4)) {

811 
‰agmít
 
dummy
;

812 i‡(
	`∑r£_‰agmít_hódî
(
löe
, 
Àn
, &
dummy
) < 0)

814 
	`dõ
("patch fragment without headerátÜine %d: %.*s",

815 
löír
, ()
Àn
-1, 
löe
);

818 i‡(
size
 < 
Àn
 + 6)

825 i‡(!
	`memcmp
("dif‡--gô ", 
löe
, 11)) {

826 
gô_hdr_Àn
 = 
	`∑r£_gô_hódî
(
löe
, 
Àn
, 
size
, 
∑tch
);

827 i‡(
gô_hdr_Àn
 <
Àn
)

829 i‡(!
∑tch
->
ﬁd_«me
 && !∑tch->
√w_«me
) {

830 i‡(!
∑tch
->
def_«me
)

831 
	`dõ
("gô dif‡hódîÜack†fûíamêöf‹m©i⁄ (löê%d)", 
löír
);

832 
∑tch
->
ﬁd_«me
 =Ö©ch->
√w_«me
 =Ö©ch->
def_«me
;

834 *
hdrsize
 = 
gô_hdr_Àn
;

835  
off£t
;

839 i‡(
	`memcmp
("--- ", 
löe
, 4Ë|| memcmp("+++ ",Üöê+ 
Àn
, 4))

847 
√xéí
 = 
	`löñí
(
löe
 + 
Àn
, 
size
 -Üen);

848 i‡(
size
 < 
√xéí
 + 14 || 
	`memcmp
("@@ -", 
löe
 + 
Àn
 +Çextlen, 4))

852 
	`∑r£_åadôi⁄Æ_∑tch
(
löe
,Üöe+
Àn
, 
∑tch
);

853 *
hdrsize
 = 
Àn
 + 
√xéí
;

854 
löír
 += 2;

855  
off£t
;

858 
	}
}

860 
	$check_whôe•a˚
(c⁄° *
löe
, 
Àn
)

862 c⁄° *
îr
 = "AddsÅrailing whitespace";

863 
£í_•a˚
 = 0;

864 
i
;

872 i‡(
	`is•a˚
(
löe
[
Àn
-2]))

873 
îr‹
;

879 
îr
 = "Space in indent is followed byáÅab";

880 
i
 = 1; i < 
Àn
; i++) {

881 i‡(
löe
[
i
] == '\t') {

882 i‡(
£í_•a˚
)

883 
îr‹
;

885 i‡(
löe
[
i
] == ' ')

886 
£í_•a˚
 = 1;

892 
îr‹
:

893 
whôe•a˚_îr‹
++;

894 i‡(
squñch_whôe•a˚_îr‹s
 &&

895 
squñch_whôe•a˚_îr‹s
 < 
whôe•a˚_îr‹
)

898 
	`Ârötf
(
°dîr
, "%s.\n%s:%d:%.*s\n",

899 
îr
, 
∑tch_öput_fûe
, 
löír
, 
Àn
-2, 
löe
+1);

900 
	}
}

909 
	$∑r£_‰agmít
(*
löe
, 
size
, 
∑tch
 *∑tch, 
‰agmít
 *fragment)

911 
added
, 
dñëed
;

912 
Àn
 = 
	`löñí
(
löe
, 
size
), 
off£t
;

913 
ﬁdlöes
, 
√wlöes
;

914 
Àadög
, 
åaûög
;

916 
off£t
 = 
	`∑r£_‰agmít_hódî
(
löe
, 
Àn
, 
‰agmít
);

917 i‡(
off£t
 < 0)

919 
ﬁdlöes
 = 
‰agmít
->oldlines;

920 
√wlöes
 = 
‰agmít
->newlines;

921 
Àadög
 = 0;

922 
åaûög
 = 0;

925 
löe
 +
Àn
;

926 
size
 -
Àn
;

927 
löír
++;

928 
added
 = 
dñëed
 = 0;

929 
off£t
 = 
Àn
;

930 0 < 
size
;

931 
off£t
 +
Àn
, 
size
 -Àn, 
löe
 +Àn, 
löír
++) {

932 i‡(!
ﬁdlöes
 && !
√wlöes
)

934 
Àn
 = 
	`löñí
(
löe
, 
size
);

935 i‡(!
Àn
 || 
löe
[len-1] != '\n')

937 *
löe
) {

942 
ﬁdlöes
--;

943 
√wlöes
--;

944 i‡(!
dñëed
 && !
added
)

945 
Àadög
++;

946 
åaûög
++;

949 
dñëed
++;

950 
ﬁdlöes
--;

951 
åaûög
 = 0;

954 i‡(
√w_whôe•a˚
 !
now¨n_whôe•a˚
)

955 
	`check_whôe•a˚
(
löe
, 
Àn
);

956 
added
++;

957 
√wlöes
--;

958 
åaûög
 = 0;

969 i‡(
Àn
 < 12 || 
	`memcmp
(
löe
, "\\ ", 2))

974 i‡(
ﬁdlöes
 || 
√wlöes
)

976 
‰agmít
->
Àadög
 =Üeading;

977 
‰agmít
->
åaûög
 =Årailing;

983 i‡(12 < 
size
 && !
	`memcmp
(
löe
, "\\ ", 2))

984 
off£t
 +
	`löñí
(
löe
, 
size
);

986 
∑tch
->
löes_added
 +
added
;

987 
∑tch
->
löes_dñëed
 +
dñëed
;

989 i‡(0 < 
∑tch
->
is_√w
 && 
ﬁdlöes
)

990  
	`îr‹
("new file depends on old contents");

991 i‡(0 < 
∑tch
->
is_dñëe
 && 
√wlöes
)

992  
	`îr‹
("deleted file still has contents");

993  
off£t
;

994 
	}
}

996 
	$∑r£_sögÀ_∑tch
(*
löe
, 
size
, 
∑tch
 *patch)

998 
off£t
 = 0;

999 
ﬁdlöes
 = 0, 
√wlöes
 = 0, 
c⁄ãxt
 = 0;

1000 
‰agmít
 **
‰agp
 = &
∑tch
->
‰agmíts
;

1002 
size
 > 4 && !
	`memcmp
(
löe
, "@@ -", 4)) {

1003 
‰agmít
 *fragment;

1004 
Àn
;

1006 
‰agmít
 = 
	`xˇŒoc
(1, (*fragment));

1007 
Àn
 = 
	`∑r£_‰agmít
(
löe
, 
size
, 
∑tch
, 
‰agmít
);

1008 i‡(
Àn
 <= 0)

1009 
	`dõ
("c‹ru±Ö©cháàlöê%d", 
löír
);

1010 
‰agmít
->
∑tch
 = 
löe
;

1011 
‰agmít
->
size
 = 
Àn
;

1012 
ﬁdlöes
 +
‰agmít
->oldlines;

1013 
√wlöes
 +
‰agmít
->newlines;

1014 
c⁄ãxt
 +
‰agmít
->
Àadög
 + føgmít->
åaûög
;

1016 *
‰agp
 = 
‰agmít
;

1017 
‰agp
 = &
‰agmít
->
√xt
;

1019 
off£t
 +
Àn
;

1020 
löe
 +
Àn
;

1021 
size
 -
Àn
;

1037 i‡(
∑tch
->
is_√w
 < 0 &&

1038 (
ﬁdlöes
 || (
∑tch
->
‰agmíts
 &&Ö©ch->‰agmíts->
√xt
)))

1039 
∑tch
->
is_√w
 = 0;

1040 i‡(
∑tch
->
is_dñëe
 < 0 &&

1041 (
√wlöes
 || (
∑tch
->
‰agmíts
 &&Ö©ch->‰agmíts->
√xt
)))

1042 
∑tch
->
is_dñëe
 = 0;

1043 i‡(!
unidiff_zîo
 || 
c⁄ãxt
) {

1049 i‡(
∑tch
->
is_√w
 < 0 && !
ﬁdlöes
) {

1050 
∑tch
->
is_√w
 = 1;

1051 
∑tch
->
ﬁd_«me
 = 
NULL
;

1053 i‡(
∑tch
->
is_dñëe
 < 0 && !
√wlöes
) {

1054 
∑tch
->
is_dñëe
 = 1;

1055 
∑tch
->
√w_«me
 = 
NULL
;

1059 i‡(0 < 
∑tch
->
is_√w
 && 
ﬁdlöes
)

1060 
	`dõ
("√w fûê%†dïíd†⁄ old c⁄ã¡s", 
∑tch
->
√w_«me
);

1061 i‡(0 < 
∑tch
->
is_dñëe
 && 
√wlöes
)

1062 
	`dõ
("dñëed fûê%†°û»ha†c⁄ã¡s", 
∑tch
->
ﬁd_«me
);

1063 i‡(!
∑tch
->
is_dñëe
 && !
√wlöes
 && 
c⁄ãxt
)

1064 
	`Ârötf
(
°dîr
, "** warning: file %s becomesÉmpty but "

1065 "i†nŸ dñëed\n", 
∑tch
->
√w_«me
);

1067  
off£t
;

1068 
	}
}

1070 
ölöe
 
	$mëad©a_ch™ges
(
∑tch
 *patch)

1072  
∑tch
->
is_ª«me
 > 0 ||

1073 
∑tch
->
is_c›y
 > 0 ||

1074 
∑tch
->
is_√w
 > 0 ||

1075 
∑tch
->
is_dñëe
 ||

1076 (
∑tch
->
ﬁd_mode
 &&Ö©ch->
√w_mode
 &&

1077 
∑tch
->
ﬁd_mode
 !∑tch->
√w_mode
);

1078 
	}
}

1080 *
	$öÊ©e_ô
(c⁄° *
d©a
, 
size
,

1081 
öÊ©ed_size
)

1083 
z_°ªam
 
°ªam
;

1084 *
out
;

1085 
°
;

1087 
	`mem£t
(&
°ªam
, 0, (stream));

1089 
°ªam
.
√xt_ö
 = (*)
d©a
;

1090 
°ªam
.
avaû_ö
 = 
size
;

1091 
°ªam
.
√xt_out
 = 
out
 = 
	`xmÆloc
(
öÊ©ed_size
);

1092 
°ªam
.
avaû_out
 = 
öÊ©ed_size
;

1093 
	`öÊ©eInô
(&
°ªam
);

1094 
°
 = 
	`öÊ©e
(&
°ªam
, 
Z_FINISH
);

1095 i‡((
°
 !
Z_STREAM_END
Ë|| 
°ªam
.
tŸÆ_out
 !
öÊ©ed_size
) {

1096 
	`‰ì
(
out
);

1097  
NULL
;

1099  
out
;

1100 
	}
}

1102 
‰agmít
 *
	$∑r£_bö¨y_hunk
(**
buf_p
,

1103 *
sz_p
,

1104 *
°©us_p
,

1105 *
u£d_p
)

1118 
Œí
, 
u£d
;

1119 
size
 = *
sz_p
;

1120 *
buf„r
 = *
buf_p
;

1121 
∑tch_mëhod
;

1122 
‹igÀn
;

1123 *
d©a
 = 
NULL
;

1124 
hunk_size
 = 0;

1125 
‰agmít
 *
‰ag
;

1127 
Œí
 = 
	`löñí
(
buf„r
, 
size
);

1128 
u£d
 = 
Œí
;

1130 *
°©us_p
 = 0;

1132 i‡(!
	`°∫cmp
(
buf„r
, "delta ", 6)) {

1133 
∑tch_mëhod
 = 
BINARY_DELTA_DEFLATED
;

1134 
‹igÀn
 = 
	`°πoul
(
buf„r
 + 6, 
NULL
, 10);

1136 i‡(!
	`°∫cmp
(
buf„r
, "literal ", 8)) {

1137 
∑tch_mëhod
 = 
BINARY_LITERAL_DEFLATED
;

1138 
‹igÀn
 = 
	`°πoul
(
buf„r
 + 8, 
NULL
, 10);

1141  
NULL
;

1143 
löír
++;

1144 
buf„r
 +
Œí
;

1146 
byã_Àngth
, 
max_byã_Àngth
, 
√wsize
;

1147 
Œí
 = 
	`löñí
(
buf„r
, 
size
);

1148 
u£d
 +
Œí
;

1149 
löír
++;

1150 i‡(
Œí
 == 1) {

1152 
buf„r
++;

1153 
size
--;

1159 i‡((
Œí
 < 7) || (llen-2) % 5)

1160 
c‹ru±
;

1161 
max_byã_Àngth
 = (
Œí
 - 2) / 5 * 4;

1162 
byã_Àngth
 = *
buf„r
;

1163 i‡('A' <
byã_Àngth
 && byte_length <= 'Z')

1164 
byã_Àngth
 = byte_length - 'A' + 1;

1165 i‡('a' <
byã_Àngth
 && byte_length <= 'z')

1166 
byã_Àngth
 = byte_length - 'a' + 27;

1168 
c‹ru±
;

1173 i‡(
max_byã_Àngth
 < 
byã_Àngth
 ||

1174 
byã_Àngth
 <
max_byã_Àngth
 - 4)

1175 
c‹ru±
;

1176 
√wsize
 = 
hunk_size
 + 
byã_Àngth
;

1177 
d©a
 = 
	`xªÆloc
(d©a, 
√wsize
);

1178 i‡(
	`decode_85
(
d©a
 + 
hunk_size
, 
buf„r
 + 1, 
byã_Àngth
))

1179 
c‹ru±
;

1180 
hunk_size
 = 
√wsize
;

1181 
buf„r
 +
Œí
;

1182 
size
 -
Œí
;

1185 
‰ag
 = 
	`xˇŒoc
(1, (*frag));

1186 
‰ag
->
∑tch
 = 
	`öÊ©e_ô
(
d©a
, 
hunk_size
, 
‹igÀn
);

1187 i‡(!
‰ag
->
∑tch
)

1188 
c‹ru±
;

1189 
	`‰ì
(
d©a
);

1190 
‰ag
->
size
 = 
‹igÀn
;

1191 *
buf_p
 = 
buf„r
;

1192 *
sz_p
 = 
size
;

1193 *
u£d_p
 = 
u£d
;

1194 
‰ag
->
bö¨y_∑tch_mëhod
 = 
∑tch_mëhod
;

1195  
‰ag
;

1197 
c‹ru±
:

1198 
	`‰ì
(
d©a
);

1199 *
°©us_p
 = -1;

1200 
	`îr‹
("corrupt binaryÖatchátÜine %d: %.*s",

1201 
löír
-1, 
Œí
-1, 
buf„r
);

1202  
NULL
;

1203 
	}
}

1205 
	$∑r£_bö¨y
(*
buf„r
, 
size
, 
∑tch
 *patch)

1220 
‰agmít
 *
f‹w¨d
;

1221 
‰agmít
 *
ªvî£
;

1222 
°©us
;

1223 
u£d
, 
u£d_1
;

1225 
f‹w¨d
 = 
	`∑r£_bö¨y_hunk
(&
buf„r
, &
size
, &
°©us
, &
u£d
);

1226 i‡(!
f‹w¨d
 && !
°©us
)

1228  
	`îr‹
("uƒecognized bö¨yÖ©cháàlöê%d", 
löír
-1);

1229 i‡(
°©us
)

1231  
°©us
;

1233 
ªvî£
 = 
	`∑r£_bö¨y_hunk
(&
buf„r
, &
size
, &
°©us
, &
u£d_1
);

1234 i‡(
ªvî£
)

1235 
u£d
 +
u£d_1
;

1236 i‡(
°©us
) {

1240 
	`‰ì
((*Ë
f‹w¨d
->
∑tch
);

1241 
	`‰ì
(
f‹w¨d
);

1242  
°©us
;

1244 
f‹w¨d
->
√xt
 = 
ªvî£
;

1245 
∑tch
->
‰agmíts
 = 
f‹w¨d
;

1246 
∑tch
->
is_bö¨y
 = 1;

1247  
u£d
;

1248 
	}
}

1250 
	$∑r£_chunk
(*
buf„r
, 
size
, 
∑tch
 *patch)

1252 
hdrsize
, 
∑tchsize
;

1253 
off£t
 = 
	`föd_hódî
(
buf„r
, 
size
, &
hdrsize
, 
∑tch
);

1255 i‡(
off£t
 < 0)

1256  
off£t
;

1258 
∑tchsize
 = 
	`∑r£_sögÀ_∑tch
(
buf„r
 + 
off£t
 + 
hdrsize
, 
size
 - off£à- hdrsize, 
∑tch
);

1260 i‡(!
∑tchsize
) {

1261 c⁄° *
böhdr
[] = {

1264 
NULL
,

1266 c⁄° 
gô_bö¨y
[] = "GIT binaryÖatch\n";

1267 
i
;

1268 
hd
 = 
hdrsize
 + 
off£t
;

1269 
Œí
 = 
	`löñí
(
buf„r
 + 
hd
, 
size
 - hd);

1271 i‡(
Œí
 =(
gô_bö¨y
) - 1 &&

1272 !
	`memcmp
(
gô_bö¨y
, 
buf„r
 + 
hd
, 
Œí
)) {

1273 
u£d
;

1274 
löír
++;

1275 
u£d
 = 
	`∑r£_bö¨y
(
buf„r
 + 
hd
 + 
Œí
,

1276 
size
 - 
hd
 - 
Œí
, 
∑tch
);

1277 i‡(
u£d
)

1278 
∑tchsize
 = 
u£d
 + 
Œí
;

1280 
∑tchsize
 = 0;

1282 i‡(!
	`memcmp
(" dif„r\n", 
buf„r
 + 
hd
 + 
Œí
 - 8, 8)) {

1283 
i
 = 0; 
böhdr
[i]; i++) {

1284 
Àn
 = 
	`°æí
(
böhdr
[
i
]);

1285 i‡(
Àn
 < 
size
 - 
hd
 &&

1286 !
	`memcmp
(
böhdr
[
i
], 
buf„r
 + 
hd
, 
Àn
)) {

1287 
löír
++;

1288 
∑tch
->
is_bö¨y
 = 1;

1289 
∑tchsize
 = 
Œí
;

1299 i‡((
≠∂y
 || 
check
) &&

1300 (!
∑tch
->
is_bö¨y
 && !
	`mëad©a_ch™ges
(patch)))

1301 
	`dõ
("∑tch wôh o∆y g¨bagê©Üöê%d", 
löír
);

1304  
off£t
 + 
hdrsize
 + 
∑tchsize
;

1305 
	}
}

1307 
	#sw≠
(
a
,
b
Ë
	`mysw≠
(◊),(b),◊))

	)

1309 
	#mysw≠
(
a
, 
b
, 
size
) do { \

1310 
mytmp
[
size
]; \

1311 
	`mem˝y
(
mytmp
, &
a
, 
size
); \

1312 
	`mem˝y
(&
a
, &
b
, 
size
); \

1313 
	`mem˝y
(&
b
, 
mytmp
, 
size
); \

1314 } 0)

	)

1316 
	$ªvî£_∑tches
(
∑tch
 *
p
)

1318 ; 
p
;Ö =Ö->
√xt
) {

1319 
‰agmít
 *
‰ag
 = 
p
->
‰agmíts
;

1321 
	`sw≠
(
p
->
√w_«me
,Ö->
ﬁd_«me
);

1322 
	`sw≠
(
p
->
√w_mode
,Ö->
ﬁd_mode
);

1323 
	`sw≠
(
p
->
is_√w
,Ö->
is_dñëe
);

1324 
	`sw≠
(
p
->
löes_added
,Ö->
löes_dñëed
);

1325 
	`sw≠
(
p
->
ﬁd_sha1_¥efix
,Ö->
√w_sha1_¥efix
);

1327 ; 
‰ag
; føg = føg->
√xt
) {

1328 
	`sw≠
(
‰ag
->
√wpos
, føg->
ﬁdpos
);

1329 
	`sw≠
(
‰ag
->
√wlöes
, føg->
ﬁdlöes
);

1332 
	}
}

1334 c⁄° 
	g∂u£s
[] = "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++";

1335 c⁄° 
	gmöu£s
[]= "----------------------------------------------------------------------";

1337 
	$show_°©s
(
∑tch
 *patch)

1339 c⁄° *
¥efix
 = "";

1340 *
«me
 = 
∑tch
->
√w_«me
;

1341 *
q«me
 = 
NULL
;

1342 
Àn
, 
max
, 
add
, 
dñ
, 
tŸÆ
;

1344 i‡(!
«me
)

1345 
«me
 = 
∑tch
->
ﬁd_«me
;

1347 i‡(0 < (
Àn
 = 
	`quŸe_c_°yÀ
(
«me
, 
NULL
, NULL, 0))) {

1348 
q«me
 = 
	`xmÆloc
(
Àn
 + 1);

1349 
	`quŸe_c_°yÀ
(
«me
, 
q«me
, 
NULL
, 0);

1350 
«me
 = 
q«me
;

1356 
Àn
 = 
	`°æí
(
«me
);

1357 
max
 = 
max_Àn
;

1358 i‡(
max
 > 50)

1359 
max
 = 50;

1360 i‡(
Àn
 > 
max
) {

1361 *
¶ash
;

1362 
¥efix
 = "...";

1363 
max
 -= 3;

1364 
«me
 +
Àn
 - 
max
;

1365 
¶ash
 = 
	`°rchr
(
«me
, '/');

1366 i‡(
¶ash
)

1367 
«me
 = 
¶ash
;

1369 
Àn
 = 
max
;

1374 
max
 = 
max_ch™ge
;

1375 i‡(
max
 + 
Àn
 > 70)

1376 
max
 = 70 - 
Àn
;

1378 
add
 = 
∑tch
->
löes_added
;

1379 
dñ
 = 
∑tch
->
löes_dñëed
;

1380 
tŸÆ
 = 
add
 + 
dñ
;

1382 i‡(
max_ch™ge
 > 0) {

1383 
tŸÆ
 = (tŸÆ * 
max
 + 
max_ch™ge
 / 2) / max_change;

1384 
add
 = (add * 
max
 + 
max_ch™ge
 / 2) / max_change;

1385 
dñ
 = 
tŸÆ
 - 
add
;

1387 i‡(
∑tch
->
is_bö¨y
)

1388 
	`¥ötf
(" %s%-*†| Bö\n", 
¥efix
, 
Àn
, 
«me
);

1390 
	`¥ötf
(" %s%-*†|%5d %.*s%.*s\n", 
¥efix
,

1391 
Àn
, 
«me
, 
∑tch
->
löes_added
 +Ö©ch->
löes_dñëed
,

1392 
add
, 
∂u£s
, 
dñ
, 
möu£s
);

1393 
	`‰ì
(
q«me
);

1394 
	}
}

1396 
	$ªad_ﬁd_d©a
(
°©
 *
°
, c⁄° *
∑th
, *
buf
, 
size
)

1398 
fd
;

1399 
gŸ
;

1401 
°
->
°_mode
 & 
S_IFMT
) {

1402 
S_IFLNK
:

1403  
	`ªadlök
(
∑th
, 
buf
, 
size
);

1404 
S_IFREG
:

1405 
fd
 = 
	`›í
(
∑th
, 
O_RDONLY
);

1406 i‡(
fd
 < 0)

1407  
	`îr‹
("u«bÀÅÿ›í %s", 
∑th
);

1408 
gŸ
 = 0;

1410 
ªt
 = 
	`xªad
(
fd
, (*Ë
buf
 + 
gŸ
, 
size
 - got);

1411 i‡(
ªt
 <= 0)

1413 
gŸ
 +
ªt
;

1415 
	`˛o£
(
fd
);

1416  
gŸ
;

1421 
	}
}

1423 
	$föd_off£t
(c⁄° *
buf
, 
size
, c⁄° *
‰agmít
, 
‰agsize
, 
löe
, *
löes
)

1425 
i
;

1426 
°¨t
, 
backw¨ds
, 
f‹w¨ds
;

1428 i‡(
‰agsize
 > 
size
)

1431 
°¨t
 = 0;

1432 i‡(
löe
 > 1) {

1433 
off£t
 = 0;

1434 
i
 = 
löe
-1;

1435 
off£t
 + 
‰agsize
 <
size
) {

1436 i‡(
buf
[
off£t
++] == '\n') {

1437 
°¨t
 = 
off£t
;

1438 i‡(!--
i
)

1445 i‡(!
	`memcmp
(
buf
 + 
°¨t
, 
‰agmít
, 
‰agsize
))

1446  
°¨t
;

1452 
backw¨ds
 = 
°¨t
;

1453 
f‹w¨ds
 = 
°¨t
;

1454 
i
 = 0; ; i++) {

1455 
åy
;

1456 
n
;

1459 i‡(
i
 & 1) {

1460 i‡(!
backw¨ds
) {

1461 i‡(
f‹w¨ds
 + 
‰agsize
 > 
size
)

1466 --
backw¨ds
;

1467 } 
backw¨ds
 && 
buf
[backwards-1] != '\n');

1468 
åy
 = 
backw¨ds
;

1470 
f‹w¨ds
 + 
‰agsize
 <
size
) {

1471 i‡(
buf
[
f‹w¨ds
++] == '\n')

1474 
åy
 = 
f‹w¨ds
;

1477 i‡(
åy
 + 
‰agsize
 > 
size
)

1479 i‡(
	`memcmp
(
buf
 + 
åy
, 
‰agmít
, 
‰agsize
))

1481 
n
 = (
i
 >> 1)+1;

1482 i‡(
i
 & 1)

1483 
n
 = -n;

1484 *
löes
 = 
n
;

1485  
åy
;

1492 
	}
}

1494 
	$ªmove_fú°_löe
(c⁄° **
rbuf
, *
rsize
)

1496 c⁄° *
buf
 = *
rbuf
;

1497 
size
 = *
rsize
;

1498 
off£t
;

1499 
off£t
 = 0;

1500 
off£t
 <
size
) {

1501 i‡(
buf
[
off£t
++] == '\n')

1504 *
rsize
 = 
size
 - 
off£t
;

1505 *
rbuf
 = 
buf
 + 
off£t
;

1506 
	}
}

1508 
	$ªmove_œ°_löe
(c⁄° **
rbuf
, *
rsize
)

1510 c⁄° *
buf
 = *
rbuf
;

1511 
size
 = *
rsize
;

1512 
off£t
;

1513 
off£t
 = 
size
 - 1;

1514 
off£t
 > 0) {

1515 i‡(
buf
[--
off£t
] == '\n')

1518 *
rsize
 = 
off£t
 + 1;

1519 
	}
}

1521 
	sbuf„r_desc
 {

1522 *
	mbuf„r
;

1523 
	msize
;

1524 
	mÆloc
;

1527 
	$≠∂y_löe
(*
ouçut
, c⁄° *
∑tch
, 
∂í
)

1534 
i
;

1535 
add_∆_to_èû
 = 0;

1536 
fixed
 = 0;

1537 
œ°_èb_ö_ödít
 = -1;

1538 
œ°_•a˚_ö_ödít
 = -1;

1539 
√ed_fix_Àadög_•a˚
 = 0;

1540 *
buf
;

1542 i‡((
√w_whôe•a˚
 !
°rù_whôe•a˚
Ë|| !
whôe•a˚_îr‹
) {

1543 
	`mem˝y
(
ouçut
, 
∑tch
 + 1, 
∂í
);

1544  
∂í
;

1547 i‡(1 < 
∂í
 && 
	`is•a˚
(
∑tch
[plen-1])) {

1548 i‡(
∑tch
[
∂í
] == '\n')

1549 
add_∆_to_èû
 = 1;

1550 
∂í
--;

1551 0 < 
∂í
 && 
	`is•a˚
(
∑tch
[plen]))

1552 
∂í
--;

1553 
fixed
 = 1;

1556 
i
 = 1; i < 
∂í
; i++) {

1557 
ch
 = 
∑tch
[
i
];

1558 i‡(
ch
 == '\t') {

1559 
œ°_èb_ö_ödít
 = 
i
;

1560 i‡(0 <
œ°_•a˚_ö_ödít
)

1561 
√ed_fix_Àadög_•a˚
 = 1;

1563 i‡(
ch
 == ' ')

1564 
œ°_•a˚_ö_ödít
 = 
i
;

1569 
buf
 = 
ouçut
;

1570 i‡(
√ed_fix_Àadög_•a˚
) {

1574 
i
 = 1; i < 
œ°_èb_ö_ödít
; i++, 
∂í
--) {

1575 
ch
 = 
∑tch
[
i
];

1576 i‡(
ch
 != ' ')

1577 *
ouçut
++ = 
ch
;

1578 i‡((
i
 % 8) == 0)

1579 *
ouçut
++ = '\t';

1581 
fixed
 = 1;

1582 
i
 = 
œ°_èb_ö_ödít
;

1585 
i
 = 1;

1587 
	`mem˝y
(
ouçut
, 
∑tch
 + 
i
, 
∂í
);

1588 i‡(
add_∆_to_èû
)

1589 
ouçut
[
∂í
++] = '\n';

1590 i‡(
fixed
)

1591 
≠∂õd_a·î_°rùpög
++;

1592  
ouçut
 + 
∂í
 - 
buf
;

1593 
	}
}

1595 
	$≠∂y_⁄e_‰agmít
(
buf„r_desc
 *
desc
, 
‰agmít
 *
‰ag
, 
öaccuøã_eof
)

1597 
m©ch_begönög
, 
m©ch_íd
;

1598 *
buf
 = 
desc
->
buf„r
;

1599 c⁄° *
∑tch
 = 
‰ag
->patch;

1600 
off£t
, 
size
 = 
‰ag
->size;

1601 *
ﬁd
 = 
	`xmÆloc
(
size
);

1602 *
√w
 = 
	`xmÆloc
(
size
);

1603 c⁄° *
ﬁdlöes
, *
√wlöes
;

1604 
ﬁdsize
 = 0, 
√wsize
 = 0;

1605 
Àadög
, 
åaûög
;

1606 
pos
, 
löes
;

1608 
size
 > 0) {

1609 
fú°
;

1610 
Àn
 = 
	`löñí
(
∑tch
, 
size
);

1611 
∂í
;

1613 i‡(!
Àn
)

1623 
∂í
 = 
Àn
-1;

1624 i‡(
Àn
 < 
size
 && 
∑tch
[len] == '\\')

1625 
∂í
--;

1626 
fú°
 = *
∑tch
;

1627 i‡(
≠∂y_ö_ªvî£
) {

1628 i‡(
fú°
 == '-')

1629 
fú°
 = '+';

1630 i‡(
fú°
 == '+')

1631 
fú°
 = '-';

1633 
fú°
) {

1636 i‡(
∂í
 < 0)

1639 
ﬁd
[
ﬁdsize
++] = '\n';

1640 
√w
[
√wsize
++] = '\n';

1644 
	`mem˝y
(
ﬁd
 + 
ﬁdsize
, 
∑tch
 + 1, 
∂í
);

1645 
ﬁdsize
 +
∂í
;

1646 i‡(
fú°
 == '-')

1650 i‡(
fú°
 !'+' || !
no_add
)

1651 
√wsize
 +
	`≠∂y_löe
(
√w
 +Çewsize, 
∑tch
,

1652 
∂í
);

1660 
∑tch
 +
Àn
;

1661 
size
 -
Àn
;

1664 i‡(
öaccuøã_eof
 && 
ﬁdsize
 > 0 && 
ﬁd
[oldsize - 1] == '\n' &&

1665 
√wsize
 > 0 && 
√w
[newsize - 1] == '\n') {

1666 
ﬁdsize
--;

1667 
√wsize
--;

1670 
ﬁdlöes
 = 
ﬁd
;

1671 
√wlöes
 = 
√w
;

1672 
Àadög
 = 
‰ag
->leading;

1673 
åaûög
 = 
‰ag
->trailing;

1683 i‡(
unidiff_zîo
) {

1684 
m©ch_begönög
 = (!
Àadög
 && !
‰ag
->
ﬁdpos
);

1685 
m©ch_íd
 = 0;

1688 
m©ch_begönög
 = !
Àadög
 && (
‰ag
->
ﬁdpos
 == 1);

1689 
m©ch_íd
 = !
åaûög
;

1692 
löes
 = 0;

1693 
pos
 = 
‰ag
->
√wpos
;

1695 
off£t
 = 
	`föd_off£t
(
buf
, 
desc
->
size
,

1696 
ﬁdlöes
, 
ﬁdsize
, 
pos
, &
löes
);

1697 i‡(
m©ch_íd
 && 
off£t
 + 
ﬁdsize
 !
desc
->
size
)

1698 
off£t
 = -1;

1699 i‡(
m©ch_begönög
 && 
off£t
)

1700 
off£t
 = -1;

1701 i‡(
off£t
 >= 0) {

1702 
diff
 = 
√wsize
 - 
ﬁdsize
;

1703 
size
 = 
desc
->sizê+ 
diff
;

1704 
Æloc
 = 
desc
->alloc;

1709 i‡((
Àadög
 !
‰ag
->leading) ||

1710 (
åaûög
 !
‰ag
->trailing))

1711 
	`Ârötf
(
°dîr
, "ContextÑeducedÅo (%ld/%ld)"

1713 
Àadög
, 
åaûög
, 
pos
 + 
löes
);

1715 i‡(
size
 > 
Æloc
) {

1716 
Æloc
 = 
size
 + 8192;

1717 
desc
->
Æloc
 =álloc;

1718 
buf
 = 
	`xªÆloc
(buf, 
Æloc
);

1719 
desc
->
buf„r
 = 
buf
;

1721 
desc
->
size
 = size;

1722 
	`memmove
(
buf
 + 
off£t
 + 
√wsize
,

1723 
buf
 + 
off£t
 + 
ﬁdsize
,

1724 
size
 - 
off£t
 - 
√wsize
);

1725 
	`mem˝y
(
buf
 + 
off£t
, 
√wlöes
, 
√wsize
);

1726 
off£t
 = 0;

1732 i‡((
Àadög
 <
p_c⁄ãxt
Ë&& (
åaûög
 <=Ö_context))

1734 i‡(
m©ch_begönög
 || 
m©ch_íd
) {

1735 
m©ch_begönög
 = 
m©ch_íd
 = 0;

1742 i‡(
Àadög
 >
åaûög
) {

1743 
	`ªmove_fú°_löe
(&
ﬁdlöes
, &
ﬁdsize
);

1744 
	`ªmove_fú°_löe
(&
√wlöes
, &
√wsize
);

1745 
pos
--;

1746 
Àadög
--;

1748 i‡(
åaûög
 > 
Àadög
) {

1749 
	`ªmove_œ°_löe
(&
ﬁdlöes
, &
ﬁdsize
);

1750 
	`ªmove_œ°_löe
(&
√wlöes
, &
√wsize
);

1751 
åaûög
--;

1755 
	`‰ì
(
ﬁd
);

1756 
	`‰ì
(
√w
);

1757  
off£t
;

1758 
	}
}

1760 
	$≠∂y_bö¨y_‰agmít
(
buf„r_desc
 *
desc
, 
∑tch
 *patch)

1762 
d°_size
;

1763 
‰agmít
 *‰agmíà
∑tch
->
‰agmíts
;

1764 *
d©a
;

1765 *
ªsu…
;

1768 i‡(
≠∂y_ö_ªvî£
) {

1769 i‡(!
‰agmít
->
√xt
)

1770  
	`îr‹
("cannotÑeverse-applyá binaryÖatch "

1772 
∑tch
->
√w_«me


1773 ? 
∑tch
->
√w_«me
 :Ö©ch->
ﬁd_«me
);

1774 
‰agmít
 = føgmít->
√xt
;

1776 
d©a
 = (*Ë
‰agmít
->
∑tch
;

1777 
‰agmít
->
bö¨y_∑tch_mëhod
) {

1778 
BINARY_DELTA_DEFLATED
:

1779 
ªsu…
 = 
	`∑tch_dñè
(
desc
->
buf„r
, desc->
size
,

1780 
d©a
,

1781 
‰agmít
->
size
,

1782 &
d°_size
);

1783 
	`‰ì
(
desc
->
buf„r
);

1784 
desc
->
buf„r
 = 
ªsu…
;

1786 
BINARY_LITERAL_DEFLATED
:

1787 
	`‰ì
(
desc
->
buf„r
);

1788 
desc
->
buf„r
 = 
d©a
;

1789 
d°_size
 = 
‰agmít
->
size
;

1792 i‡(!
desc
->
buf„r
)

1794 
desc
->
size
 = desc->
Æloc
 = 
d°_size
;

1796 
	}
}

1798 
	$≠∂y_bö¨y
(
buf„r_desc
 *
desc
, 
∑tch
 *patch)

1800 c⁄° *
«me
 = 
∑tch
->
ﬁd_«me
 ?Ö©ch->ﬁd_«mê:Ö©ch->
√w_«me
;

1801 
sha1
[20];

1806 i‡(
	`°æí
(
∑tch
->
ﬁd_sha1_¥efix
) != 40 ||

1807 
	`°æí
(
∑tch
->
√w_sha1_¥efix
) != 40 ||

1808 
	`gë_sha1_hex
(
∑tch
->
ﬁd_sha1_¥efix
, 
sha1
) ||

1809 
	`gë_sha1_hex
(
∑tch
->
√w_sha1_¥efix
, 
sha1
))

1810  
	`îr‹
("cannotápply binaryÖatchÅo '%s' "

1811 "wôhouàfuŒ indexÜöe", 
«me
);

1813 i‡(
∑tch
->
ﬁd_«me
) {

1817 
	`hash_sha1_fûe
(
desc
->
buf„r
, desc->
size
, 
blob_ty≥
, 
sha1
);

1818 i‡(
	`°rcmp
(
	`sha1_to_hex
(
sha1
), 
∑tch
->
ﬁd_sha1_¥efix
))

1819  
	`îr‹
("theÖatcháppliesÅo '%s' (%s), "

1822 
«me
, 
	`sha1_to_hex
(
sha1
));

1826 i‡(
desc
->
size
)

1827  
	`îr‹
("theÖatcháppliesÅoánÉmpty "

1828 "'%s' buàô i†nŸÉm±y", 
«me
);

1831 
	`gë_sha1_hex
(
∑tch
->
√w_sha1_¥efix
, 
sha1
);

1832 i‡(
	`is_nuŒ_sha1
(
sha1
)) {

1833 
	`‰ì
(
desc
->
buf„r
);

1834 
desc
->
Æloc
 = desc->
size
 = 0;

1835 
desc
->
buf„r
 = 
NULL
;

1839 i‡(
	`has_sha1_fûe
(
sha1
)) {

1841 
ty≥
[10];

1842 
size
;

1844 
	`‰ì
(
desc
->
buf„r
);

1845 
desc
->
buf„r
 = 
	`ªad_sha1_fûe
(
sha1
, 
ty≥
, &
size
);

1846 i‡(!
desc
->
buf„r
)

1847  
	`îr‹
("theÇecessaryÖostimage %s for "

1849 
∑tch
->
√w_sha1_¥efix
, 
«me
);

1850 
desc
->
Æloc
 = desc->
size
 = size;

1857 i‡(
	`≠∂y_bö¨y_‰agmít
(
desc
, 
∑tch
))

1858  
	`îr‹
("binaryÖatch doesÇotápplyÅo '%s'",

1859 
«me
);

1862 
	`hash_sha1_fûe
(
desc
->
buf„r
, desc->
size
, 
blob_ty≥
, 
sha1
);

1863 i‡(
	`°rcmp
(
	`sha1_to_hex
(
sha1
), 
∑tch
->
√w_sha1_¥efix
))

1864  
	`îr‹
("bö¨yÖ©chÅÿ'%s' cª©e†öc‹ª˘Ñesu… (ex≥˘ög %s, gŸ %s)", 
«me
, 
∑tch
->
√w_sha1_¥efix
, 
	`sha1_to_hex
(
sha1
));

1868 
	}
}

1870 
	$≠∂y_‰agmíts
(
buf„r_desc
 *
desc
, 
∑tch
 *patch)

1872 
‰agmít
 *
‰ag
 = 
∑tch
->
‰agmíts
;

1873 c⁄° *
«me
 = 
∑tch
->
ﬁd_«me
 ?Ö©ch->ﬁd_«mê:Ö©ch->
√w_«me
;

1875 i‡(
∑tch
->
is_bö¨y
)

1876  
	`≠∂y_bö¨y
(
desc
, 
∑tch
);

1878 
‰ag
) {

1879 i‡(
	`≠∂y_⁄e_‰agmít
(
desc
, 
‰ag
, 
∑tch
->
öaccuøã_eof
)) {

1880 
	`îr‹
("∑tch faûed: %s:%ld", 
«me
, 
‰ag
->
ﬁdpos
);

1881 i‡(!
≠∂y_wôh_ªje˘
)

1883 
‰ag
->
ªje˘ed
 = 1;

1885 
‰ag
 = føg->
√xt
;

1888 
	}
}

1890 
	$≠∂y_d©a
(
∑tch
 *∑tch, 
°©
 *
°
, 
ˇche_íåy
 *
˚
)

1892 *
buf
;

1893 
size
, 
Æloc
;

1894 
buf„r_desc
 
desc
;

1896 
size
 = 0;

1897 
Æloc
 = 0;

1898 
buf
 = 
NULL
;

1899 i‡(
ˇched
) {

1900 i‡(
˚
) {

1901 
ty≥
[20];

1902 
buf
 = 
	`ªad_sha1_fûe
(
˚
->
sha1
, 
ty≥
, &
size
);

1903 i‡(!
buf
)

1904  
	`îr‹
("read of %s failed",

1905 
∑tch
->
ﬁd_«me
);

1906 
Æloc
 = 
size
;

1909 i‡(
∑tch
->
ﬁd_«me
) {

1910 
size
 = 
°
->
°_size
;

1911 
Æloc
 = 
size
 + 8192;

1912 
buf
 = 
	`xmÆloc
(
Æloc
);

1913 i‡(
	`ªad_ﬁd_d©a
(
°
, 
∑tch
->
ﬁd_«me
, 
buf
, 
Æloc
Ë!
size
)

1914  
	`îr‹
("ªad o‡%†Áûed", 
∑tch
->
ﬁd_«me
);

1917 
desc
.
size
 = size;

1918 
desc
.
Æloc
 =álloc;

1919 
desc
.
buf„r
 = 
buf
;

1921 i‡(
	`≠∂y_‰agmíts
(&
desc
, 
∑tch
) < 0)

1925 i‡(
desc
.
Æloc
 <desc.
size
)

1926 
desc
.
buf„r
 = 
	`xªÆloc
(desc.buf„r, desc.
size
 + 1);

1927 
desc
.
buf„r
[desc.
size
] = 0;

1929 
∑tch
->
ªsu…
 = 
desc
.
buf„r
;

1930 
∑tch
->
ªsu…size
 = 
desc
.
size
;

1932 i‡(0 < 
∑tch
->
is_dñëe
 &&Ö©ch->
ªsu…size
)

1933  
	`îr‹
("removalÖatchÜeaves file contents");

1936 
	}
}

1938 
	$check_∑tch
(
∑tch
 *∑tch, ∑tch *
¥ev_∑tch
)

1940 
°©
 
°
;

1941 c⁄° *
ﬁd_«me
 = 
∑tch
->old_name;

1942 c⁄° *
√w_«me
 = 
∑tch
->new_name;

1943 c⁄° *
«me
 = 
ﬁd_«me
 ? old_«mê: 
√w_«me
;

1944 
ˇche_íåy
 *
˚
 = 
NULL
;

1945 
ok_if_exi°s
;

1947 
∑tch
->
ªje˘ed
 = 1;

1948 i‡(
ﬁd_«me
) {

1949 
ch™ged
 = 0;

1950 
°©_ªt
 = 0;

1951 
°_mode
 = 0;

1953 i‡(!
ˇched
)

1954 
°©_ªt
 = 
	`l°©
(
ﬁd_«me
, &
°
);

1955 i‡(
check_ödex
) {

1956 
pos
 = 
	`ˇche_«me_pos
(
ﬁd_«me
, 
	`°æí
(old_name));

1957 i‡(
pos
 < 0)

1958  
	`îr‹
("%s: doesÇotÉxist in index",

1959 
ﬁd_«me
);

1960 
˚
 = 
a˘ive_ˇche
[
pos
];

1961 i‡(
°©_ªt
 < 0) {

1962 
checkout
 
co°©e
;

1963 i‡(
î∫o
 !
ENOENT
)

1964  
	`îr‹
("%s: %s", 
ﬁd_«me
,

1965 
	`°ªº‹
(
î∫o
));

1967 
co°©e
.
ba£_dú
 = "";

1968 
co°©e
.
ba£_dú_Àn
 = 0;

1969 
co°©e
.
f‹˚
 = 0;

1970 
co°©e
.
quõt
 = 0;

1971 
co°©e
.
nŸ_√w
 = 0;

1972 
co°©e
.
ª‰esh_ˇche
 = 1;

1973 i‡(
	`checkout_íåy
(
˚
,

1974 &
co°©e
,

1975 
NULL
) ||

1976 
	`l°©
(
ﬁd_«me
, &
°
))

1979 i‡(!
ˇched
)

1980 
ch™ged
 = 
	`˚_m©ch_°©
(
˚
, &
°
, 1);

1981 i‡(
ch™ged
)

1982  
	`îr‹
("%s: doesÇot match index",

1983 
ﬁd_«me
);

1984 i‡(
ˇched
)

1985 
°_mode
 = 
	`¡ohl
(
˚
->
˚_mode
);

1987 i‡(
°©_ªt
 < 0)

1988  
	`îr‹
("%s: %s", 
ﬁd_«me
, 
	`°ªº‹
(
î∫o
));

1990 i‡(!
ˇched
)

1991 
°_mode
 = 
	`¡ohl
(
	`¸óã_˚_mode
(
°
.st_mode));

1993 i‡(
∑tch
->
is_√w
 < 0)

1994 
∑tch
->
is_√w
 = 0;

1995 i‡(!
∑tch
->
ﬁd_mode
)

1996 
∑tch
->
ﬁd_mode
 = 
°_mode
;

1997 i‡((
°_mode
 ^ 
∑tch
->
ﬁd_mode
Ë& 
S_IFMT
)

1998  
	`îr‹
("%s: wr⁄gÅy≥", 
ﬁd_«me
);

1999 i‡(
°_mode
 !
∑tch
->
ﬁd_mode
)

2000 
	`Ârötf
(
°dîr
, "warning: %s hasÅype %o,Éxpected %o\n",

2001 
ﬁd_«me
, 
°_mode
, 
∑tch
->
ﬁd_mode
);

2004 i‡(
√w_«me
 && 
¥ev_∑tch
 && 0 <Öªv_∑tch->
is_dñëe
 &&

2005 !
	`°rcmp
(
¥ev_∑tch
->
ﬁd_«me
, 
√w_«me
))

2013 
ok_if_exi°s
 = 1;

2015 
ok_if_exi°s
 = 0;

2017 i‡(
√w_«me
 &&

2018 ((0 < 
∑tch
->
is_√w
Ë| (0 <Ö©ch->
is_ª«me
Ë|Ö©ch->
is_c›y
)) {

2019 i‡(
check_ödex
 &&

2020 
	`ˇche_«me_pos
(
√w_«me
, 
	`°æí
(new_name)) >= 0 &&

2021 !
ok_if_exi°s
)

2022  
	`îr‹
("%s:áÃódyÉxi°†ö index", 
√w_«me
);

2023 i‡(!
ˇched
) {

2024 
°©
 
n°
;

2025 i‡(!
	`l°©
(
√w_«me
, &
n°
)) {

2026 i‡(
	`S_ISDIR
(
n°
.
°_mode
Ë|| 
ok_if_exi°s
)

2029  
	`îr‹
("%s:áÃódyÉxi°†ö w‹kög dúe˘‹y", 
√w_«me
);

2031 i‡((
î∫o
 !
ENOENT
Ë&& (î∫ÿ!
ENOTDIR
))

2032  
	`îr‹
("%s: %s", 
√w_«me
, 
	`°ªº‹
(
î∫o
));

2034 i‡(!
∑tch
->
√w_mode
) {

2035 i‡(0 < 
∑tch
->
is_√w
)

2036 
∑tch
->
√w_mode
 = 
S_IFREG
 | 0644;

2038 
∑tch
->
√w_mode
 =Ö©ch->
ﬁd_mode
;

2042 i‡(
√w_«me
 && 
ﬁd_«me
) {

2043 
ßme
 = !
	`°rcmp
(
ﬁd_«me
, 
√w_«me
);

2044 i‡(!
∑tch
->
√w_mode
)

2045 
∑tch
->
√w_mode
 =Ö©ch->
ﬁd_mode
;

2046 i‡((
∑tch
->
ﬁd_mode
 ^Ö©ch->
√w_mode
Ë& 
S_IFMT
)

2047  
	`îr‹
("new mode (%o) of %s doesÇot match old mode (%o)%s%s",

2048 
∑tch
->
√w_mode
, 
√w_«me
,Ö©ch->
ﬁd_mode
,

2049 
ßme
 ? "" : " o‡", samê? "" : 
ﬁd_«me
);

2052 i‡(
	`≠∂y_d©a
(
∑tch
, &
°
, 
˚
) < 0)

2053  
	`îr‹
("%s:Ö©ch d€†nŸáµly", 
«me
);

2054 
∑tch
->
ªje˘ed
 = 0;

2056 
	}
}

2058 
	$check_∑tch_li°
(
∑tch
 *patch)

2060 
∑tch
 *
¥ev_∑tch
 = 
NULL
;

2061 
îr
 = 0;

2063 
¥ev_∑tch
 = 
NULL
; 
∑tch
 ;Ö©ch =Ö©ch->
√xt
) {

2064 i‡(
≠∂y_vîbo£ly
)

2065 
	`ßy_∑tch_«me
(
°dîr
,

2066 "CheckögÖ©ch ", 
∑tch
, "...\n");

2067 
îr
 |
	`check_∑tch
(
∑tch
, 
¥ev_∑tch
);

2068 
¥ev_∑tch
 = 
∑tch
;

2070  
îr
;

2071 
	}
}

2073 
	$show_ödex_li°
(
∑tch
 *
li°
)

2075 
∑tch
 *patch;

2080 
∑tch
 = 
li°
;Ö©ch;Ö©ch =Ö©ch->
√xt
) {

2081 c⁄° *
sha1_±r
;

2082 
sha1
[20];

2083 c⁄° *
«me
;

2085 
«me
 = 
∑tch
->
ﬁd_«me
 ?Ö©ch->ﬁd_«mê:Ö©ch->
√w_«me
;

2086 i‡(0 < 
∑tch
->
is_√w
)

2087 
sha1_±r
 = 
nuŒ_sha1
;

2088 i‡(
	`gë_sha1
(
∑tch
->
ﬁd_sha1_¥efix
, 
sha1
))

2089 
	`dõ
("sha1 information isÜacking or useless (%s).",

2090 
«me
);

2092 
sha1_±r
 = 
sha1
;

2094 
	`¥ötf
("%06ÿ%s ",
∑tch
->
ﬁd_mode
, 
	`sha1_to_hex
(
sha1_±r
));

2095 i‡(
löe_ãrmö©i⁄
 && 
	`quŸe_c_°yÀ
(
«me
, 
NULL
, NULL, 0))

2096 
	`quŸe_c_°yÀ
(
«me
, 
NULL
, 
°dout
, 0);

2098 
	`Âuts
(
«me
, 
°dout
);

2099 
	`putch¨
(
löe_ãrmö©i⁄
);

2101 
	}
}

2103 
	$°©_∑tch_li°
(
∑tch
 *patch)

2105 
fûes
, 
adds
, 
dñs
;

2107 
fûes
 = 
adds
 = 
dñs
 = 0 ; 
∑tch
 ;Ö©ch =Ö©ch->
√xt
) {

2108 
fûes
++;

2109 
adds
 +
∑tch
->
löes_added
;

2110 
dñs
 +
∑tch
->
löes_dñëed
;

2111 
	`show_°©s
(
∑tch
);

2114 
	`¥ötf
(" %d fûe†ch™ged, %d in£πi⁄s(+), %d dñëi⁄s(-)\n", 
fûes
, 
adds
, 
dñs
);

2115 
	}
}

2117 
	$num°©_∑tch_li°
(
∑tch
 *patch)

2119  ; 
∑tch
;Ö©ch =Ö©ch->
√xt
) {

2120 c⁄° *
«me
;

2121 
«me
 = 
∑tch
->
√w_«me
 ?Ö©ch->√w_«mê:Ö©ch->
ﬁd_«me
;

2122 i‡(
∑tch
->
is_bö¨y
)

2123 
	`¥ötf
("-\t-\t");

2125 
	`¥ötf
("%d\t%d\t",

2126 
∑tch
->
löes_added
,Ö©ch->
löes_dñëed
);

2127 i‡(
löe_ãrmö©i⁄
 && 
	`quŸe_c_°yÀ
(
«me
, 
NULL
, NULL, 0))

2128 
	`quŸe_c_°yÀ
(
«me
, 
NULL
, 
°dout
, 0);

2130 
	`Âuts
(
«me
, 
°dout
);

2131 
	`putch¨
(
löe_ãrmö©i⁄
);

2133 
	}
}

2135 
	$show_fûe_mode_«me
(c⁄° *
√wdñëe
, 
mode
, c⁄° *
«me
)

2137 i‡(
mode
)

2138 
	`¥ötf
(" %†modê%06ÿ%s\n", 
√wdñëe
, 
mode
, 
«me
);

2140 
	`¥ötf
(" %†%s\n", 
√wdñëe
, 
«me
);

2141 
	}
}

2143 
	$show_mode_ch™ge
(
∑tch
 *
p
, 
show_«me
)

2145 i‡(
p
->
ﬁd_mode
 &&Ö->
√w_mode
 &&Ö->old_mode !=Ö->new_mode) {

2146 i‡(
show_«me
)

2147 
	`¥ötf
(" mode change %06o => %06o %s\n",

2148 
p
->
ﬁd_mode
,Ö->
√w_mode
,Ö->
√w_«me
);

2150 
	`¥ötf
(" mode change %06o => %06o\n",

2151 
p
->
ﬁd_mode
,Ö->
√w_mode
);

2153 
	}
}

2155 
	$show_ª«me_c›y
(
∑tch
 *
p
)

2157 c⁄° *
ª«mec›y
 = 
p
->
is_ª«me
 ? "rename" : "copy";

2158 c⁄° *
ﬁd
, *
√w
;

2161 
ﬁd
 = 
p
->
ﬁd_«me
;

2162 
√w
 = 
p
->
√w_«me
;

2164 c⁄° *
¶ash_ﬁd
, *
¶ash_√w
;

2165 
¶ash_ﬁd
 = 
	`°rchr
(
ﬁd
, '/');

2166 
¶ash_√w
 = 
	`°rchr
(
√w
, '/');

2167 i‡(!
¶ash_ﬁd
 ||

2168 !
¶ash_√w
 ||

2169 
¶ash_ﬁd
 - 
ﬁd
 !
¶ash_√w
 - 
√w
 ||

2170 
	`memcmp
(
ﬁd
, 
√w
, 
¶ash_√w
 -Çew))

2172 
ﬁd
 = 
¶ash_ﬁd
 + 1;

2173 
√w
 = 
¶ash_√w
 + 1;

2178 i‡(
ﬁd
 !
p
->
ﬁd_«me
)

2179 
	`¥ötf
(" %†%.*s{%†=> %s} (%d%%)\n", 
ª«mec›y
,

2180 ()(
ﬁd
 - 
p
->
ﬁd_«me
),Ö->old_name,

2181 
ﬁd
, 
√w
, 
p
->
sc‹e
);

2183 
	`¥ötf
(" %†%†=> %†(%d%%)\n", 
ª«mec›y
,

2184 
p
->
ﬁd_«me
,Ö->
√w_«me
,Ö->
sc‹e
);

2185 
	`show_mode_ch™ge
(
p
, 0);

2186 
	}
}

2188 
	$summ¨y_∑tch_li°
(
∑tch
 *patch)

2190 
∑tch
 *
p
;

2192 
p
 = 
∑tch
;Ö;Ö =Ö->
√xt
) {

2193 i‡(
p
->
is_√w
)

2194 
	`show_fûe_mode_«me
("¸óã", 
p
->
√w_mode
,Ö->
√w_«me
);

2195 i‡(
p
->
is_dñëe
)

2196 
	`show_fûe_mode_«me
("dñëe", 
p
->
ﬁd_mode
,Ö->
ﬁd_«me
);

2198 i‡(
p
->
is_ª«me
 ||Ö->
is_c›y
)

2199 
	`show_ª«me_c›y
(
p
);

2201 i‡(
p
->
sc‹e
) {

2202 
	`¥ötf
("Ñewrite %s (%d%%)\n",

2203 
p
->
√w_«me
,Ö->
sc‹e
);

2204 
	`show_mode_ch™ge
(
p
, 0);

2207 
	`show_mode_ch™ge
(
p
, 1);

2211 
	}
}

2213 
	$∑tch_°©s
(
∑tch
 *patch)

2215 
löes
 = 
∑tch
->
löes_added
 +Ö©ch->
löes_dñëed
;

2217 i‡(
löes
 > 
max_ch™ge
)

2218 
max_ch™ge
 = 
löes
;

2219 i‡(
∑tch
->
ﬁd_«me
) {

2220 
Àn
 = 
	`quŸe_c_°yÀ
(
∑tch
->
ﬁd_«me
, 
NULL
, NULL, 0);

2221 i‡(!
Àn
)

2222 
Àn
 = 
	`°æí
(
∑tch
->
ﬁd_«me
);

2223 i‡(
Àn
 > 
max_Àn
)

2224 
max_Àn
 = 
Àn
;

2226 i‡(
∑tch
->
√w_«me
) {

2227 
Àn
 = 
	`quŸe_c_°yÀ
(
∑tch
->
√w_«me
, 
NULL
, NULL, 0);

2228 i‡(!
Àn
)

2229 
Àn
 = 
	`°æí
(
∑tch
->
√w_«me
);

2230 i‡(
Àn
 > 
max_Àn
)

2231 
max_Àn
 = 
Àn
;

2233 
	}
}

2235 
	$ªmove_fûe
(
∑tch
 *patch)

2237 i‡(
wrôe_ödex
) {

2238 i‡(
	`ªmove_fûe_‰om_ˇche
(
∑tch
->
ﬁd_«me
) < 0)

2239 
	`dõ
("u«bÀÅÿªmovê%†‰om index", 
∑tch
->
ﬁd_«me
);

2240 
	`ˇche_åì_övÆid©e_∑th
(
a˘ive_ˇche_åì
, 
∑tch
->
ﬁd_«me
);

2242 i‡(!
ˇched
) {

2243 i‡(!
	`u∆ök
(
∑tch
->
ﬁd_«me
)) {

2244 *
«me
 = 
	`x°rdup
(
∑tch
->
ﬁd_«me
);

2245 *
íd
 = 
	`°ºchr
(
«me
, '/');

2246 
íd
) {

2247 *
íd
 = 0;

2248 i‡(
	`rmdú
(
«me
))

2250 
íd
 = 
	`°ºchr
(
«me
, '/');

2252 
	`‰ì
(
«me
);

2255 
	}
}

2257 
	$add_ödex_fûe
(c⁄° *
∑th
, 
mode
, *
buf
, 
size
)

2259 
°©
 
°
;

2260 
ˇche_íåy
 *
˚
;

2261 
«mñí
 = 
	`°æí
(
∑th
);

2262 
˚_size
 = 
	`ˇche_íåy_size
(
«mñí
);

2264 i‡(!
wrôe_ödex
)

2267 
˚
 = 
	`xˇŒoc
(1, 
˚_size
);

2268 
	`mem˝y
(
˚
->
«me
, 
∑th
, 
«mñí
);

2269 
˚
->
˚_mode
 = 
	`¸óã_˚_mode
(
mode
);

2270 
˚
->
˚_Êags
 = 
	`ht⁄s
(
«mñí
);

2271 i‡(!
ˇched
) {

2272 i‡(
	`l°©
(
∑th
, &
°
) < 0)

2273 
	`dõ
("u«bÀÅÿ°©Çewly cª©ed fûê%s", 
∑th
);

2274 
	`fûl_°©_ˇche_öfo
(
˚
, &
°
);

2276 i‡(
	`wrôe_sha1_fûe
(
buf
, 
size
, 
blob_ty≥
, 
˚
->
sha1
) < 0)

2277 
	`dõ
("u«bÀÅÿ¸óã backög st‹êf‹Çewly cª©ed fûê%s", 
∑th
);

2278 i‡(
	`add_ˇche_íåy
(
˚
, 
ADD_CACHE_OK_TO_ADD
) < 0)

2279 
	`dõ
("u«bÀÅÿadd cachêíåy f‹ %s", 
∑th
);

2280 
	}
}

2282 
	$åy_¸óã_fûe
(c⁄° *
∑th
, 
mode
, c⁄° *
buf
, 
size
)

2284 
fd
;

2286 i‡(
	`S_ISLNK
(
mode
))

2290  
	`symlök
(
buf
, 
∑th
);

2291 
fd
 = 
	`›í
(
∑th
, 
O_CREAT
 | 
O_EXCL
 | 
O_WRONLY
, (
mode
 & 0100) ? 0777 : 0666);

2292 i‡(
fd
 < 0)

2294 
size
) {

2295 
wrôãn
 = 
	`xwrôe
(
fd
, 
buf
, 
size
);

2296 i‡(
wrôãn
 < 0)

2297 
	`dõ
("wrôög fûê%s: %s", 
∑th
, 
	`°ªº‹
(
î∫o
));

2298 i‡(!
wrôãn
)

2299 
	`dõ
("ouào‡•a˚ wrôög fûê%s", 
∑th
);

2300 
buf
 +
wrôãn
;

2301 
size
 -
wrôãn
;

2303 i‡(
	`˛o£
(
fd
) < 0)

2304 
	`dõ
("˛osög fûê%s: %s", 
∑th
, 
	`°ªº‹
(
î∫o
));

2306 
	}
}

2313 
	$¸óã_⁄e_fûe
(*
∑th
, 
mode
, c⁄° *
buf
, 
size
)

2315 i‡(
ˇched
)

2317 i‡(!
	`åy_¸óã_fûe
(
∑th
, 
mode
, 
buf
, 
size
))

2320 i‡(
î∫o
 =
ENOENT
) {

2321 i‡(
	`ß„_¸óã_Àadög_dúe˘‹õs
(
∑th
))

2323 i‡(!
	`åy_¸óã_fûe
(
∑th
, 
mode
, 
buf
, 
size
))

2327 i‡(
î∫o
 =
EEXIST
 ||Éºnÿ=
EACCES
) {

2331 
°©
 
°
;

2332 
î∫o
 = 0;

2333 i‡(!
	`l°©
(
∑th
, &
°
Ë&& 
	`S_ISDIR
(°.
°_mode
Ë&& !
	`rmdú
(path))

2334 
î∫o
 = 
EEXIST
;

2337 i‡(
î∫o
 =
EEXIST
) {

2338 
ƒ
 = 
	`gëpid
();

2341 c⁄° *
√w∑th
;

2342 
√w∑th
 = 
	`mk∑th
("%s~%u", 
∑th
, 
ƒ
);

2343 i‡(!
	`åy_¸óã_fûe
(
√w∑th
, 
mode
, 
buf
, 
size
)) {

2344 i‡(!
	`ª«me
(
√w∑th
, 
∑th
))

2346 
	`u∆ök
(
√w∑th
);

2349 i‡(
î∫o
 !
EEXIST
)

2351 ++
ƒ
;

2354 
	`dõ
("u«bÀÅÿwrôêfûê%†modê%o", 
∑th
, 
mode
);

2355 
	}
}

2357 
	$¸óã_fûe
(
∑tch
 *patch)

2359 *
∑th
 = 
∑tch
->
√w_«me
;

2360 
mode
 = 
∑tch
->
√w_mode
;

2361 
size
 = 
∑tch
->
ªsu…size
;

2362 *
buf
 = 
∑tch
->
ªsu…
;

2364 i‡(!
mode
)

2365 
mode
 = 
S_IFREG
 | 0644;

2366 
	`¸óã_⁄e_fûe
(
∑th
, 
mode
, 
buf
, 
size
);

2367 
	`add_ödex_fûe
(
∑th
, 
mode
, 
buf
, 
size
);

2368 
	`ˇche_åì_övÆid©e_∑th
(
a˘ive_ˇche_åì
, 
∑th
);

2369 
	}
}

2372 
	$wrôe_out_⁄e_ªsu…
(
∑tch
 *∑tch, 
pha£
)

2374 i‡(
∑tch
->
is_dñëe
 > 0) {

2375 i‡(
pha£
 == 0)

2376 
	`ªmove_fûe
(
∑tch
);

2379 i‡(
∑tch
->
is_√w
 > 0 ||Ö©ch->
is_c›y
) {

2380 i‡(
pha£
 == 1)

2381 
	`¸óã_fûe
(
∑tch
);

2388 i‡(
pha£
 == 0)

2389 
	`ªmove_fûe
(
∑tch
);

2390 i‡(
pha£
 == 1)

2391 
	`¸óã_fûe
(
∑tch
);

2392 
	}
}

2394 
	$wrôe_out_⁄e_ªje˘
(
∑tch
 *patch)

2396 
FILE
 *
ªj
;

2397 
«mebuf
[
PATH_MAX
];

2398 
‰agmít
 *
‰ag
;

2399 
˙t
 = 0;

2401 
˙t
 = 0, 
‰ag
 = 
∑tch
->
‰agmíts
; føg; føg = føg->
√xt
) {

2402 i‡(!
‰ag
->
ªje˘ed
)

2404 
˙t
++;

2407 i‡(!
˙t
) {

2408 i‡(
≠∂y_vîbo£ly
)

2409 
	`ßy_∑tch_«me
(
°dîr
,

2410 "AµlõdÖ©ch ", 
∑tch
, " cleanly.\n");

2417 i‡(!
∑tch
->
√w_«me
)

2418 
	`dõ
("internalÉrror");

2421 
	`ßy_∑tch_«me
(
°dîr
, "AµlyögÖ©ch ", 
∑tch
, " with");

2422 
	`Ârötf
(
°dîr
, " %dÑeje˘s...\n", 
˙t
);

2424 
˙t
 = 
	`°æí
(
∑tch
->
√w_«me
);

2425 i‡(
	`ARRAY_SIZE
(
«mebuf
Ë<
˙t
 + 5) {

2426 
˙t
 = 
	`ARRAY_SIZE
(
«mebuf
) - 5;

2427 
	`Ârötf
(
°dîr
,

2429 
˙t
 - 1, 
∑tch
->
√w_«me
);

2431 
	`mem˝y
(
«mebuf
, 
∑tch
->
√w_«me
, 
˙t
);

2432 
	`mem˝y
(
«mebuf
 + 
˙t
, ".rej", 5);

2434 
ªj
 = 
	`f›í
(
«mebuf
, "w");

2435 i‡(!
ªj
)

2436  
	`îr‹
("ˇ¬Ÿ o≥¿%s: %s", 
«mebuf
, 
	`°ªº‹
(
î∫o
));

2443 
	`Ârötf
(
ªj
, "diffá/%s b/%s\t(rejected hunks)\n",

2444 
∑tch
->
√w_«me
,Öatch->new_name);

2445 
˙t
 = 1, 
‰ag
 = 
∑tch
->
‰agmíts
;

2446 
‰ag
;

2447 
˙t
++, 
‰ag
 = føg->
√xt
) {

2448 i‡(!
‰ag
->
ªje˘ed
) {

2449 
	`Ârötf
(
°dîr
, "Hunk #%dáµlõd cÀ™ly.\n", 
˙t
);

2452 
	`Ârötf
(
°dîr
, "Reje˘ed hunk #%d.\n", 
˙t
);

2453 
	`Ârötf
(
ªj
, "%.*s", 
‰ag
->
size
, føg->
∑tch
);

2454 i‡(
‰ag
->
∑tch
[‰ag->
size
-1] != '\n')

2455 
	`Âutc
('\n', 
ªj
);

2457 
	`f˛o£
(
ªj
);

2459 
	}
}

2461 
	$wrôe_out_ªsu…s
(
∑tch
 *
li°
, 
skù≥d_∑tch
)

2463 
pha£
;

2464 
îrs
 = 0;

2465 
∑tch
 *
l
;

2467 i‡(!
li°
 && !
skù≥d_∑tch
)

2468  
	`îr‹
("No changes");

2470 
pha£
 = 0;Öhase < 2;Öhase++) {

2471 
l
 = 
li°
;

2472 
l
) {

2473 i‡(
l
->
ªje˘ed
)

2474 
îrs
 = 1;

2476 
	`wrôe_out_⁄e_ªsu…
(
l
, 
pha£
);

2477 i‡(
pha£
 =1 && 
	`wrôe_out_⁄e_ªje˘
(
l
))

2478 
îrs
 = 1;

2480 
l
 =Ü->
√xt
;

2483  
îrs
;

2484 
	}
}

2486 
lock_fûe
 
	glock_fûe
;

2488 
	sex˛udes
 {

2489 
ex˛udes
 *
	m√xt
;

2490 c⁄° *
	m∑th
;

2491 } *
	gex˛udes
;

2493 
	$u£_∑tch
(
∑tch
 *
p
)

2495 c⁄° *
∑th«me
 = 
p
->
√w_«me
 ?Ö->√w_«mê:Ö->
ﬁd_«me
;

2496 
ex˛udes
 *
x
 =Éxcludes;

2497 
x
) {

2498 i‡(
	`‚m©ch
(
x
->
∑th
, 
∑th«me
, 0) == 0)

2500 
x
 = x->
√xt
;

2502 i‡(0 < 
¥efix_Àngth
) {

2503 
∑thÀn
 = 
	`°æí
(
∑th«me
);

2504 i‡(
∑thÀn
 <
¥efix_Àngth
 ||

2505 
	`memcmp
(
¥efix
, 
∑th«me
, 
¥efix_Àngth
))

2509 
	}
}

2511 
	$≠∂y_∑tch
(
fd
, c⁄° *
fûíame
, 
öaccuøã_eof
)

2513 
off£t
, 
size
;

2514 *
buf„r
 = 
	`ªad_∑tch_fûe
(
fd
, &
size
);

2515 
∑tch
 *
li°
 = 
NULL
, **
li°p
 = &list;

2516 
skù≥d_∑tch
 = 0;

2518 
∑tch_öput_fûe
 = 
fûíame
;

2519 i‡(!
buf„r
)

2521 
off£t
 = 0;

2522 
size
 > 0) {

2523 
∑tch
 *patch;

2524 
ƒ
;

2526 
∑tch
 = 
	`xˇŒoc
(1, (*patch));

2527 
∑tch
->
öaccuøã_eof
 = inaccurate_eof;

2528 
ƒ
 = 
	`∑r£_chunk
(
buf„r
 + 
off£t
, 
size
, 
∑tch
);

2529 i‡(
ƒ
 < 0)

2531 i‡(
≠∂y_ö_ªvî£
)

2532 
	`ªvî£_∑tches
(
∑tch
);

2533 i‡(
	`u£_∑tch
(
∑tch
)) {

2534 
	`∑tch_°©s
(
∑tch
);

2535 *
li°p
 = 
∑tch
;

2536 
li°p
 = &
∑tch
->
√xt
;

2539 
	`‰ì
(
∑tch
);

2540 
skù≥d_∑tch
++;

2542 
off£t
 +
ƒ
;

2543 
size
 -
ƒ
;

2546 i‡(
whôe•a˚_îr‹
 && (
√w_whôe•a˚
 =
îr‹_⁄_whôe•a˚
))

2547 
≠∂y
 = 0;

2549 
wrôe_ödex
 = 
check_ödex
 && 
≠∂y
;

2550 i‡(
wrôe_ödex
 && 
√wfd
 < 0)

2551 
√wfd
 = 
	`hﬁd_lock_fûe_f‹_upd©e
(&
lock_fûe
,

2552 
	`gë_ödex_fûe
(), 1);

2553 i‡(
check_ödex
) {

2554 i‡(
	`ªad_ˇche
() < 0)

2555 
	`dõ
("unableÅoÑead index file");

2558 i‡((
check
 || 
≠∂y
) &&

2559 
	`check_∑tch_li°
(
li°
) < 0 &&

2560 !
≠∂y_wôh_ªje˘
)

2561 
	`exô
(1);

2563 i‡(
≠∂y
 && 
	`wrôe_out_ªsu…s
(
li°
, 
skù≥d_∑tch
))

2564 
	`exô
(1);

2566 i‡(
show_ödex_öfo
)

2567 
	`show_ödex_li°
(
li°
);

2569 i‡(
diff°©
)

2570 
	`°©_∑tch_li°
(
li°
);

2572 i‡(
num°©
)

2573 
	`num°©_∑tch_li°
(
li°
);

2575 i‡(
summ¨y
)

2576 
	`summ¨y_∑tch_li°
(
li°
);

2578 
	`‰ì
(
buf„r
);

2580 
	}
}

2582 
	$gô_≠∂y_c⁄fig
(c⁄° *
v¨
, c⁄° *
vÆue
)

2584 i‡(!
	`°rcmp
(
v¨
, "apply.whitespace")) {

2585 
≠∂y_deÁu…_whôe•a˚
 = 
	`x°rdup
(
vÆue
);

2588  
	`gô_deÁu…_c⁄fig
(
v¨
, 
vÆue
);

2589 
	}
}

2592 
	$cmd_≠∂y
(
¨gc
, c⁄° **
¨gv
, c⁄° *
unu£d_¥efix
)

2594 
i
;

2595 
ªad_°dö
 = 1;

2596 
öaccuøã_eof
 = 0;

2597 
îrs
 = 0;

2599 c⁄° *
whôe•a˚_›ti⁄
 = 
NULL
;

2601 
i
 = 1; i < 
¨gc
; i++) {

2602 c⁄° *
¨g
 = 
¨gv
[
i
];

2603 *
íd
;

2604 
fd
;

2606 i‡(!
	`°rcmp
(
¨g
, "-")) {

2607 
îrs
 |
	`≠∂y_∑tch
(0, "<°dö>", 
öaccuøã_eof
);

2608 
ªad_°dö
 = 0;

2611 i‡(!
	`°∫cmp
(
¨g
, "--exclude=", 10)) {

2612 
ex˛udes
 *
x
 = 
	`xmÆloc
((*x));

2613 
x
->
∑th
 = 
¨g
 + 10;

2614 
x
->
√xt
 = 
ex˛udes
;

2615 
ex˛udes
 = 
x
;

2618 i‡(!
	`°∫cmp
(
¨g
, "-p", 2)) {

2619 
p_vÆue
 = 
	`©oi
(
¨g
 + 2);

2622 i‡(!
	`°rcmp
(
¨g
, "--no-add")) {

2623 
no_add
 = 1;

2626 i‡(!
	`°rcmp
(
¨g
, "--stat")) {

2627 
≠∂y
 = 0;

2628 
diff°©
 = 1;

2631 i‡(!
	`°rcmp
(
¨g
, "--allow-binary-replacement") ||

2632 !
	`°rcmp
(
¨g
, "--binary")) {

2635 i‡(!
	`°rcmp
(
¨g
, "--numstat")) {

2636 
≠∂y
 = 0;

2637 
num°©
 = 1;

2640 i‡(!
	`°rcmp
(
¨g
, "--summary")) {

2641 
≠∂y
 = 0;

2642 
summ¨y
 = 1;

2645 i‡(!
	`°rcmp
(
¨g
, "--check")) {

2646 
≠∂y
 = 0;

2647 
check
 = 1;

2650 i‡(!
	`°rcmp
(
¨g
, "--index")) {

2651 
check_ödex
 = 1;

2654 i‡(!
	`°rcmp
(
¨g
, "--cached")) {

2655 
check_ödex
 = 1;

2656 
ˇched
 = 1;

2659 i‡(!
	`°rcmp
(
¨g
, "--apply")) {

2660 
≠∂y
 = 1;

2663 i‡(!
	`°rcmp
(
¨g
, "--index-info")) {

2664 
≠∂y
 = 0;

2665 
show_ödex_öfo
 = 1;

2668 i‡(!
	`°rcmp
(
¨g
, "-z")) {

2669 
löe_ãrmö©i⁄
 = 0;

2672 i‡(!
	`°∫cmp
(
¨g
, "-C", 2)) {

2673 
p_c⁄ãxt
 = 
	`°πoul
(
¨g
 + 2, &
íd
, 0);

2674 i‡(*
íd
 != '\0')

2675 
	`dõ
("uƒecognized c⁄ãxàcou¡ '%s'", 
¨g
 + 2);

2678 i‡(!
	`°∫cmp
(
¨g
, "--whitespace=", 13)) {

2679 
whôe•a˚_›ti⁄
 = 
¨g
 + 13;

2680 
	`∑r£_whôe•a˚_›ti⁄
(
¨g
 + 13);

2683 i‡(!
	`°rcmp
(
¨g
, "-R") || !strcmp(arg, "--reverse")) {

2684 
≠∂y_ö_ªvî£
 = 1;

2687 i‡(!
	`°rcmp
(
¨g
, "--unidiff-zero")) {

2688 
unidiff_zîo
 = 1;

2691 i‡(!
	`°rcmp
(
¨g
, "--reject")) {

2692 
≠∂y
 = 
≠∂y_wôh_ªje˘
 = 
≠∂y_vîbo£ly
 = 1;

2695 i‡(!
	`°rcmp
(
¨g
, "--verbose")) {

2696 
≠∂y_vîbo£ly
 = 1;

2699 i‡(!
	`°rcmp
(
¨g
, "--inaccurate-eof")) {

2700 
öaccuøã_eof
 = 1;

2704 i‡(
check_ödex
 && 
¥efix_Àngth
 < 0) {

2705 
¥efix
 = 
	`£tup_gô_dúe˘‹y
();

2706 
¥efix_Àngth
 = 
¥efix
 ? 
	`°æí
(prefix) : 0;

2707 
	`gô_c⁄fig
(
gô_≠∂y_c⁄fig
);

2708 i‡(!
whôe•a˚_›ti⁄
 && 
≠∂y_deÁu…_whôe•a˚
)

2709 
	`∑r£_whôe•a˚_›ti⁄
(
≠∂y_deÁu…_whôe•a˚
);

2711 i‡(0 < 
¥efix_Àngth
)

2712 
¨g
 = 
	`¥efix_fûíame
(
¥efix
, 
¥efix_Àngth
,árg);

2714 
fd
 = 
	`›í
(
¨g
, 
O_RDONLY
);

2715 i‡(
fd
 < 0)

2716 
	`ußge
(
≠∂y_ußge
);

2717 
ªad_°dö
 = 0;

2718 
	`£t_deÁu…_whôe•a˚_mode
(
whôe•a˚_›ti⁄
);

2719 
îrs
 |
	`≠∂y_∑tch
(
fd
, 
¨g
, 
öaccuøã_eof
);

2720 
	`˛o£
(
fd
);

2722 
	`£t_deÁu…_whôe•a˚_mode
(
whôe•a˚_›ti⁄
);

2723 i‡(
ªad_°dö
)

2724 
îrs
 |
	`≠∂y_∑tch
(0, "<°dö>", 
öaccuøã_eof
);

2725 i‡(
whôe•a˚_îr‹
) {

2726 i‡(
squñch_whôe•a˚_îr‹s
 &&

2727 
squñch_whôe•a˚_îr‹s
 < 
whôe•a˚_îr‹
) {

2728 
squñched
 =

2729 
whôe•a˚_îr‹
 - 
squñch_whôe•a˚_îr‹s
;

2730 
	`Ârötf
(
°dîr
, "warning: squelched %d "

2732 
squñched
,

2733 
squñched
 == 1 ? "" : "s");

2735 i‡(
√w_whôe•a˚
 =
îr‹_⁄_whôe•a˚
)

2736 
	`dõ
("%dÜine%sádd%sÅrailing whitespaces.",

2737 
whôe•a˚_îr‹
,

2738 
whôe•a˚_îr‹
 == 1 ? "" : "s",

2739 
whôe•a˚_îr‹
 == 1 ? "s" : "");

2740 i‡(
≠∂õd_a·î_°rùpög
)

2741 
	`Ârötf
(
°dîr
, "warning: %dÜine%sáppliedáfter"

2743 
≠∂õd_a·î_°rùpög
,

2744 
≠∂õd_a·î_°rùpög
 == 1 ? "" : "s");

2745 i‡(
whôe•a˚_îr‹
)

2746 
	`Ârötf
(
°dîr
, "warning: %dÜine%sádd%sÅrailing"

2748 
whôe•a˚_îr‹
,

2749 
whôe•a˚_îr‹
 == 1 ? "" : "s",

2750 
whôe•a˚_îr‹
 == 1 ? "s" : "");

2753 i‡(
wrôe_ödex
) {

2754 i‡(
	`wrôe_ˇche
(
√wfd
, 
a˘ive_ˇche
, 
a˘ive_ƒ
) ||

2755 
	`˛o£
(
√wfd
Ë|| 
	`commô_lock_fûe
(&
lock_fûe
))

2756 
	`dõ
("UnableÅo writeÇew index file");

2759  !!
îrs
;

2760 
	}
}

	@builtin-archive.c

5 
	~"ˇche.h
"

6 
	~"buûtö.h
"

7 
	~"¨chive.h
"

8 
	~"commô.h
"

9 
	~"åì-wÆk.h
"

10 
	~"exec_cmd.h
"

11 
	~"pkt-löe.h
"

12 
	~"sideb™d.h
"

14 c⁄° 
	g¨chive_ußge
[] = \

17 
	s¨chivî_desc


19 c⁄° *
	m«me
;

20 
wrôe_¨chive_‚_t
 
	mwrôe_¨chive
;

21 
∑r£_exåa_¨gs_‚_t
 
	m∑r£_exåa
;

22 } 
	g¨chivîs
[] = {

23 { "èr", 
wrôe_èr_¨chive
, 
NULL
 },

24 { "zù", 
wrôe_zù_¨chive
, 
∑r£_exåa_zù_¨gs
 },

27 
	$run_ªmŸe_¨chivî
(c⁄° *
ªmŸe
, 
¨gc
,

28 c⁄° **
¨gv
)

30 *
uæ
, 
buf
[
LARGE_PACKET_MAX
];

31 
fd
[2], 
i
, 
Àn
, 
rv
;

32 
pid_t
 
pid
;

33 c⁄° *
exec
 = "git-upload-archive";

34 
exec_©
 = 0;

36 
i
 = 1; i < 
¨gc
; i++) {

37 c⁄° *
¨g
 = 
¨gv
[
i
];

38 i‡(!
	`°∫cmp
("--exec=", 
¨g
, 7)) {

39 i‡(
exec_©
)

40 
	`dõ
("multiple --exec specified");

41 
exec
 = 
¨g
 + 7;

42 
exec_©
 = 
i
;

47 
uæ
 = 
	`x°rdup
(
ªmŸe
);

48 
pid
 = 
	`gô_c⁄√˘
(
fd
, 
uæ
, 
exec
);

49 i‡(
pid
 < 0)

50  
pid
;

52 
i
 = 1; i < 
¨gc
; i++) {

53 i‡(
i
 =
exec_©
)

55 
	`∑ckë_wrôe
(
fd
[1], "¨gumíà%s\n", 
¨gv
[
i
]);

57 
	`∑ckë_Êush
(
fd
[1]);

59 
Àn
 = 
	`∑ckë_ªad_löe
(
fd
[0], 
buf
, (buf));

60 i‡(!
Àn
)

61 
	`dõ
("git-archive:Éxpected ACK/NAK, got EOF");

62 i‡(
buf
[
Àn
-1] == '\n')

63 
buf
[--
Àn
] = 0;

64 i‡(
	`°rcmp
(
buf
, "ACK")) {

65 i‡(
Àn
 > 5 && !
	`°∫cmp
(
buf
, "NACK ", 5))

66 
	`dõ
("gô-¨chive: NACK %s", 
buf
 + 5);

67 
	`dõ
("git-archive:ÖrotocolÉrror");

70 
Àn
 = 
	`∑ckë_ªad_löe
(
fd
[0], 
buf
, (buf));

71 i‡(
Àn
)

72 
	`dõ
("git-archive:Éxpectedá flush");

75 
rv
 = 
	`ªcv_sideb™d
("¨chive", 
fd
[0], 1, 2);

76 
	`˛o£
(
fd
[0]);

77 
	`˛o£
(
fd
[1]);

78 
rv
 |
	`föish_c⁄√˘
(
pid
);

80  !!
rv
;

81 
	}
}

83 
	$öô_¨chivî
(c⁄° *
«me
, 
¨chivî
 *
¨
)

85 
rv
 = -1, 
i
;

87 
i
 = 0; i < 
	`ARRAY_SIZE
(
¨chivîs
); i++) {

88 i‡(!
	`°rcmp
(
«me
, 
¨chivîs
[
i
].name)) {

89 
	`mem£t
(
¨
, 0, (*ar));

90 
¨
->
«me
 = 
¨chivîs
[
i
].name;

91 
¨
->
wrôe_¨chive
 = 
¨chivîs
[
i
].write_archive;

92 
¨
->
∑r£_exåa
 = 
¨chivîs
[
i
].parse_extra;

93 
rv
 = 0;

97  
rv
;

98 
	}
}

100 
	$∑r£_∑th•ec_¨g
(c⁄° **
∑th•ec
, 
¨chivî_¨gs
 *
¨_¨gs
)

102 
¨_¨gs
->
∑th•ec
 = 
	`gë_∑th•ec
◊r_¨gs->
ba£
,Öathspec);

103 
	}
}

105 
	$∑r£_åìish_¨g
(c⁄° **
¨gv
, 
¨chivî_¨gs
 *
¨_¨gs
,

106 c⁄° *
¥efix
)

108 c⁄° *
«me
 = 
¨gv
[0];

109 c⁄° *
commô_sha1
;

110 
time_t
 
¨chive_time
;

111 
åì
 *tree;

112 
commô
 *commit;

113 
sha1
[20];

115 i‡(
	`gë_sha1
(
«me
, 
sha1
))

116 
	`dõ
("Notá valid objectÇame");

118 
commô
 = 
	`lookup_commô_ª„ªn˚_gíéy
(
sha1
, 1);

119 i‡(
commô
) {

120 
commô_sha1
 = 
commô
->
obje˘
.
sha1
;

121 
¨chive_time
 = 
commô
->
d©e
;

123 
commô_sha1
 = 
NULL
;

124 
¨chive_time
 = 
	`time
(
NULL
);

127 
åì
 = 
	`∑r£_åì_ödúe˘
(
sha1
);

128 i‡(
åì
 =
NULL
)

129 
	`dõ
("notáÅree object");

131 i‡(
¥efix
) {

132 
åì_sha1
[20];

133 
mode
;

134 
îr
;

136 
îr
 = 
	`gë_åì_íåy
(
åì
->
obje˘
.
sha1
, 
¥efix
,

137 
åì_sha1
, &
mode
);

138 i‡(
îr
 || !
	`S_ISDIR
(
mode
))

139 
	`dõ
("current working directory is untracked");

141 
åì
 = 
	`∑r£_åì_ödúe˘
(
åì_sha1
);

143 
¨_¨gs
->
åì
 =Åree;

144 
¨_¨gs
->
commô_sha1
 = commit_sha1;

145 
¨_¨gs
->
time
 = 
¨chive_time
;

146 
	}
}

148 
	$∑r£_¨chive_¨gs
(
¨gc
, c⁄° **
¨gv
, 
¨chivî
 *
¨
)

150 c⁄° *
exåa_¨gv
[
MAX_EXTRA_ARGS
];

151 
exåa_¨gc
 = 0;

152 c⁄° *
f‹m©
 = 
NULL
;

153 c⁄° *
ba£
 = "";

154 
vîbo£
 = 0;

155 
i
;

157 
i
 = 1; i < 
¨gc
; i++) {

158 c⁄° *
¨g
 = 
¨gv
[
i
];

160 i‡(!
	`°rcmp
(
¨g
, "--list") || !strcmp(arg, "-l")) {

161 
i
 = 0; i < 
	`ARRAY_SIZE
(
¨chivîs
); i++)

162 
	`¥ötf
("%s\n", 
¨chivîs
[
i
].
«me
);

163 
	`exô
(0);

165 i‡(!
	`°rcmp
(
¨g
, "--verbose") || !strcmp(arg, "-v")) {

166 
vîbo£
 = 1;

169 i‡(!
	`°∫cmp
(
¨g
, "--format=", 9)) {

170 
f‹m©
 = 
¨g
 + 9;

173 i‡(!
	`°∫cmp
(
¨g
, "--prefix=", 9)) {

174 
ba£
 = 
¨g
 + 9;

177 i‡(!
	`°rcmp
(
¨g
, "--")) {

178 
i
++;

181 i‡(
¨g
[0] == '-') {

182 i‡(
exåa_¨gc
 > 
MAX_EXTRA_ARGS
 - 1)

183 
	`dõ
("Too manyÉxtra options");

184 
exåa_¨gv
[
exåa_¨gc
++] = 
¨g
;

191 i‡(
¨gc
 - 1 < 
i
)

192 
	`ußge
(
¨chive_ußge
);

193 i‡(!
f‹m©
)

194 
	`dõ
("You must specifyánárchive format");

195 i‡(
	`öô_¨chivî
(
f‹m©
, 
¨
) < 0)

196 
	`dõ
("Unknow¿¨chivêf‹m© '%s'", 
f‹m©
);

198 i‡(
exåa_¨gc
) {

199 i‡(!
¨
->
∑r£_exåa
)

200 
	`dõ
("'%s' format doesÇot handle %s",

201 
¨
->
«me
, 
exåa_¨gv
[0]);

202 
¨
->
¨gs
.
exåa
 =ár->
	`∑r£_exåa
(
exåa_¨gc
, 
exåa_¨gv
);

204 
¨
->
¨gs
.
vîbo£
 = verbose;

205 
¨
->
¨gs
.
ba£
 = base;

207  
i
;

208 
	}
}

210 c⁄° *
	$exåa˘_ªmŸe_¨g
(*
ac
, c⁄° **
av
)

212 
ix
, 
iy
, 
˙t
 = *
ac
;

213 
no_m‹e_›ti⁄s
 = 0;

214 c⁄° *
ªmŸe
 = 
NULL
;

216 
ix
 = 
iy
 = 1; ix < 
˙t
; ix++) {

217 c⁄° *
¨g
 = 
av
[
ix
];

218 i‡(!
	`°rcmp
(
¨g
, "--"))

219 
no_m‹e_›ti⁄s
 = 1;

220 i‡(!
no_m‹e_›ti⁄s
) {

221 i‡(!
	`°∫cmp
(
¨g
, "--remote=", 9)) {

222 i‡(
ªmŸe
)

223 
	`dõ
("Multiple --remote specified");

224 
ªmŸe
 = 
¨g
 + 9;

227 i‡(
¨g
[0] != '-')

228 
no_m‹e_›ti⁄s
 = 1;

230 i‡(
ix
 !
iy
)

231 
av
[
iy
] = 
¨g
;

232 
iy
++;

234 i‡(
ªmŸe
) {

235 
av
[--
˙t
] = 
NULL
;

236 *
ac
 = 
˙t
;

238  
ªmŸe
;

239 
	}
}

241 
	$cmd_¨chive
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

243 
¨chivî
 
¨
;

244 
åì_idx
;

245 c⁄° *
ªmŸe
 = 
NULL
;

247 
ªmŸe
 = 
	`exåa˘_ªmŸe_¨g
(&
¨gc
, 
¨gv
);

248 i‡(
ªmŸe
)

249  
	`run_ªmŸe_¨chivî
(
ªmŸe
, 
¨gc
, 
¨gv
);

251 
	`£tvbuf
(
°dîr
, 
NULL
, 
_IOLBF
, 
BUFSIZ
);

253 
	`mem£t
(&
¨
, 0, (ar));

254 
åì_idx
 = 
	`∑r£_¨chive_¨gs
(
¨gc
, 
¨gv
, &
¨
);

255 i‡(
¥efix
 =
NULL
)

256 
¥efix
 = 
	`£tup_gô_dúe˘‹y
();

258 
¨gv
 +
åì_idx
;

259 
	`∑r£_åìish_¨g
(
¨gv
, &
¨
.
¨gs
, 
¥efix
);

260 
	`∑r£_∑th•ec_¨g
(
¨gv
 + 1, &
¨
.
¨gs
);

262  
¨
.
	`wrôe_¨chive
(&¨.
¨gs
);

263 
	}
}

	@builtin-blame.c

7 
	~"ˇche.h
"

8 
	~"buûtö.h
"

9 
	~"blob.h
"

10 
	~"commô.h
"

11 
	~"èg.h
"

12 
	~"åì-wÆk.h
"

13 
	~"diff.h
"

14 
	~"diffc‹e.h
"

15 
	~"ªvisi⁄.h
"

16 
	~"quŸe.h
"

17 
	~"xdiff-öãrÁ˚.h
"

18 
	~"ˇche-åì.h
"

20 
	gbœme_ußge
[] =

36 
	gl⁄ge°_fûe
;

37 
	gl⁄ge°_auth‹
;

38 
	gmax_‹ig_digôs
;

39 
	gmax_digôs
;

40 
	gmax_sc‹e_digôs
;

41 
	gshow_roŸ
;

42 
	gbœnk_bound¨y
;

43 
	gö¸emíèl
;

44 
	gcmd_is_™nŸ©e
;

46 #i‚de‡
DEBUG


47 
	#DEBUG
 0

	)

51 
	gnum_ªad_blob
;

52 
	gnum_gë_∑tch
;

53 
	gnum_commôs
;

55 
	#PICKAXE_BLAME_MOVE
 01

	)

56 
	#PICKAXE_BLAME_COPY
 02

	)

57 
	#PICKAXE_BLAME_COPY_HARDER
 04

	)

63 
	gbœme_move_sc‹e
;

64 
	gbœme_c›y_sc‹e
;

65 
	#BLAME_DEFAULT_MOVE_SCORE
 20

	)

66 
	#BLAME_DEFAULT_COPY_SCORE
 40

	)

69 
	#METAINFO_SHOWN
 (1u<<12)

	)

70 
	#MORE_THAN_ONE_PATH
 (1u<<13)

	)

75 
	s‹igö
 {

76 
	mªf˙t
;

77 
commô
 *
	mcommô
;

78 
mmfûe_t
 
	mfûe
;

79 
	mblob_sha1
[20];

80 
	m∑th
[
FLEX_ARRAY
];

87 *
	$fûl_‹igö_blob
(
‹igö
 *
o
, 
mmfûe_t
 *
fûe
)

89 i‡(!
o
->
fûe
.
±r
) {

90 
ty≥
[10];

91 
num_ªad_blob
++;

92 
fûe
->
±r
 = 
	`ªad_sha1_fûe
(
o
->
blob_sha1
, 
ty≥
,

93 (*)(&(
fûe
->
size
)));

94 
o
->
fûe
 = *file;

97 *
fûe
 = 
o
->file;

98  
fûe
->
±r
;

99 
	}
}

105 
ölöe
 
‹igö
 *
	$‹igö_ö¸ef
(
‹igö
 *
o
)

107 i‡(
o
)

108 
o
->
ªf˙t
++;

109  
o
;

110 
	}
}

112 
	$‹igö_de¸ef
(
‹igö
 *
o
)

114 i‡(
o
 && --o->
ªf˙t
 <= 0) {

115 i‡(
o
->
fûe
.
±r
)

116 
	`‰ì
(
o
->
fûe
.
±r
);

117 
	`mem£t
(
o
, 0, (*o));

118 
	`‰ì
(
o
);

120 
	}
}

127 
	sbœme_íåy
 {

128 
bœme_íåy
 *
	m¥ev
;

129 
bœme_íåy
 *
	m√xt
;

134 
	m o
;

137 
	mnum_löes
;

140 
‹igö
 *
	msu•e˘
;

145 
	mguûty
;

150 
	ms_ o
;

155 
	msc‹e
;

161 
	ssc‹ebﬂrd
 {

163 
commô
 *
	mföÆ
;

165 c⁄° *
	m∑th
;

172 c⁄° *
	mföÆ_buf
;

173 
	mföÆ_buf_size
;

176 
bœme_íåy
 *
	mít
;

179 
	mnum_löes
;

180 *
	mlöío
;

183 
	$cmp_su•e˘
(
‹igö
 *
a
, ‹igö *
b
)

185 
cmp
 = 
	`hashcmp
(
a
->
commô
->
obje˘
.
sha1
, 
b
->commit->object.sha1);

186 i‡(
cmp
)

187  
cmp
;

188  
	`°rcmp
(
a
->
∑th
, 
b
->path);

189 
	}
}

191 
	#cmp_su•e˘
(
a
, 
b
Ë–(◊)==(b)Ë? 0 : 
	`cmp_su•e˘
◊,bË)

	)

193 
ßnôy_check_ªf˙t
(
sc‹ebﬂrd
 *);

200 
	$cﬂÀs˚
(
sc‹ebﬂrd
 *
sb
)

202 
bœme_íåy
 *
ít
, *
√xt
;

204 
ít
 = 
sb
->ít;É¡ && (
√xt
 =Ént->next);Ént =Çext) {

205 i‡(!
	`cmp_su•e˘
(
ít
->
su•e˘
, 
√xt
->suspect) &&

206 
ít
->
guûty
 =
√xt
->guilty &&

207 
ít
->
s_ o
 +É¡->
num_löes
 =
√xt
->s_lno) {

208 
ít
->
num_löes
 +
√xt
->num_lines;

209 
ít
->
√xt
 =Çext->next;

210 i‡(
ít
->
√xt
)

211 
ít
->
√xt
->
¥ev
 =Ént;

212 
	`‹igö_de¸ef
(
√xt
->
su•e˘
);

213 
	`‰ì
(
√xt
);

214 
ít
->
sc‹e
 = 0;

215 
√xt
 = 
ít
;

219 i‡(
DEBUG
)

220 
	`ßnôy_check_ªf˙t
(
sb
);

221 
	}
}

229 
‹igö
 *
	$make_‹igö
(
commô
 *commô, c⁄° *
∑th
)

231 
‹igö
 *
o
;

232 
o
 = 
	`xˇŒoc
(1, (*oË+ 
	`°æí
(
∑th
) + 1);

233 
o
->
commô
 = commit;

234 
o
->
ªf˙t
 = 1;

235 
	`°r˝y
(
o
->
∑th
,Öath);

236  
o
;

237 
	}
}

242 
‹igö
 *
	$gë_‹igö
(
sc‹ebﬂrd
 *
sb
,

243 
commô
 *commit,

244 c⁄° *
∑th
)

246 
bœme_íåy
 *
e
;

248 
e
 = 
sb
->
ít
;É;É =É->
√xt
) {

249 i‡(
e
->
su•e˘
->
commô
 == commit &&

250 !
	`°rcmp
(
e
->
su•e˘
->
∑th
,Öath))

251  
	`‹igö_ö¸ef
(
e
->
su•e˘
);

253  
	`make_‹igö
(
commô
, 
∑th
);

254 
	}
}

263 
	$fûl_blob_sha1
(
‹igö
 *origin)

265 
mode
;

266 
ty≥
[10];

268 i‡(!
	`is_nuŒ_sha1
(
‹igö
->
blob_sha1
))

270 i‡(
	`gë_åì_íåy
(
‹igö
->
commô
->
obje˘
.
sha1
,

271 
‹igö
->
∑th
,

272 
‹igö
->
blob_sha1
, &
mode
))

273 
îr‹_out
;

274 i‡(
	`sha1_obje˘_öfo
(
‹igö
->
blob_sha1
, 
ty≥
, 
NULL
) ||

275 
	`°rcmp
(
ty≥
, 
blob_ty≥
))

276 
îr‹_out
;

278 
îr‹_out
:

279 
	`hash˛r
(
‹igö
->
blob_sha1
);

281 
	}
}

287 
‹igö
 *
	$föd_‹igö
(
sc‹ebﬂrd
 *
sb
,

288 
commô
 *
∑ª¡
,

289 
‹igö
 *origin)

291 
‹igö
 *
p‹igö
 = 
NULL
;

292 
diff_›ti⁄s
 
diff_›ts
;

293 c⁄° *
∑ths
[2];

295 i‡(
∑ª¡
->
utû
) {

301 
‹igö
 *
ˇched
 = 
∑ª¡
->
utû
;

302 i‡(!
	`°rcmp
(
ˇched
->
∑th
, 
‹igö
->path)) {

307 
p‹igö
 = 
	`gë_‹igö
(
sb
, 
∑ª¡
, 
ˇched
->
∑th
);

316 i‡(
p‹igö
->
ªf˙t
 == 1)

317 
	`hash˝y
(
p‹igö
->
blob_sha1
, 
ˇched
->blob_sha1);

318  
p‹igö
;

321 
	`‰ì
(
∑ª¡
->
utû
);

322 
∑ª¡
->
utû
 = 
NULL
;

329 
	`diff_£tup
(&
diff_›ts
);

330 
diff_›ts
.
ªcursive
 = 1;

331 
diff_›ts
.
dëe˘_ª«me
 = 0;

332 
diff_›ts
.
ouçut_f‹m©
 = 
DIFF_FORMAT_NO_OUTPUT
;

333 
∑ths
[0] = 
‹igö
->
∑th
;

334 
∑ths
[1] = 
NULL
;

336 
	`diff_åì_£tup_∑ths
(
∑ths
, &
diff_›ts
);

337 i‡(
	`diff_£tup_d⁄e
(&
diff_›ts
) < 0)

338 
	`dõ
("diff-setup");

340 i‡(
	`is_nuŒ_sha1
(
‹igö
->
commô
->
obje˘
.
sha1
))

341 
	`do_diff_ˇche
(
∑ª¡
->
åì
->
obje˘
.
sha1
, &
diff_›ts
);

343 
	`diff_åì_sha1
(
∑ª¡
->
åì
->
obje˘
.
sha1
,

344 
‹igö
->
commô
->
åì
->
obje˘
.
sha1
,

345 "", &
diff_›ts
);

346 
	`diffc‹e_°d
(&
diff_›ts
);

351 i‡(!
diff_queued_diff
.
ƒ
) {

353 
p‹igö
 = 
	`gë_‹igö
(
sb
, 
∑ª¡
, 
‹igö
->
∑th
);

354 
	`hash˝y
(
p‹igö
->
blob_sha1
, 
‹igö
->blob_sha1);

356 i‡(
diff_queued_diff
.
ƒ
 != 1)

357 
	`dõ
("internalÉrror in blame::find_origin");

359 
diff_fûïaú
 *
p
 = 
diff_queued_diff
.
queue
[0];

360 
p
->
°©us
) {

362 
	`dõ
("internalÉrror in blame::find_origin (%c)",

363 
p
->
°©us
);

365 
p‹igö
 = 
	`gë_‹igö
(
sb
, 
∑ª¡
, 
‹igö
->
∑th
);

366 
	`hash˝y
(
p‹igö
->
blob_sha1
, 
p
->
⁄e
->
sha1
);

374 
	`diff_Êush
(&
diff_›ts
);

375 i‡(
p‹igö
) {

381 
‹igö
 *
ˇched
;

383 
ˇched
 = 
	`make_‹igö
(
p‹igö
->
commô
,Ö‹igö->
∑th
);

384 
	`hash˝y
(
ˇched
->
blob_sha1
, 
p‹igö
->blob_sha1);

385 
∑ª¡
->
utû
 = 
ˇched
;

387  
p‹igö
;

388 
	}
}

394 
‹igö
 *
	$föd_ª«me
(
sc‹ebﬂrd
 *
sb
,

395 
commô
 *
∑ª¡
,

396 
‹igö
 *origin)

398 
‹igö
 *
p‹igö
 = 
NULL
;

399 
diff_›ti⁄s
 
diff_›ts
;

400 
i
;

401 c⁄° *
∑ths
[2];

403 
	`diff_£tup
(&
diff_›ts
);

404 
diff_›ts
.
ªcursive
 = 1;

405 
diff_›ts
.
dëe˘_ª«me
 = 
DIFF_DETECT_RENAME
;

406 
diff_›ts
.
ouçut_f‹m©
 = 
DIFF_FORMAT_NO_OUTPUT
;

407 
diff_›ts
.
sögÀ_fﬁlow
 = 
‹igö
->
∑th
;

408 
∑ths
[0] = 
NULL
;

409 
	`diff_åì_£tup_∑ths
(
∑ths
, &
diff_›ts
);

410 i‡(
	`diff_£tup_d⁄e
(&
diff_›ts
) < 0)

411 
	`dõ
("diff-setup");

413 i‡(
	`is_nuŒ_sha1
(
‹igö
->
commô
->
obje˘
.
sha1
))

414 
	`do_diff_ˇche
(
∑ª¡
->
åì
->
obje˘
.
sha1
, &
diff_›ts
);

416 
	`diff_åì_sha1
(
∑ª¡
->
åì
->
obje˘
.
sha1
,

417 
‹igö
->
commô
->
åì
->
obje˘
.
sha1
,

418 "", &
diff_›ts
);

419 
	`diffc‹e_°d
(&
diff_›ts
);

421 
i
 = 0; i < 
diff_queued_diff
.
ƒ
; i++) {

422 
diff_fûïaú
 *
p
 = 
diff_queued_diff
.
queue
[
i
];

423 i‡((
p
->
°©us
 == 'R' ||Ö->status == 'C') &&

424 !
	`°rcmp
(
p
->
two
->
∑th
, 
‹igö
->path)) {

425 
p‹igö
 = 
	`gë_‹igö
(
sb
, 
∑ª¡
, 
p
->
⁄e
->
∑th
);

426 
	`hash˝y
(
p‹igö
->
blob_sha1
, 
p
->
⁄e
->
sha1
);

430 
	`diff_Êush
(&
diff_›ts
);

431  
p‹igö
;

432 
	}
}

437 
	schunk
 {

441 
	mßme
;

444 
	mp_√xt
;

447 
	mt_√xt
;

450 
	s∑tch
 {

451 
chunk
 *
	mchunks
;

452 
	mnum
;

455 
	sbœme_diff_°©e
 {

456 
xdiff_emô_°©e
 
	mxm
;

457 
∑tch
 *
	mªt
;

458 
	mhunk_po°_c⁄ãxt
;

459 
	mhunk_ö_¥e_c⁄ãxt
 : 1;

462 
	$¥o˚ss_u_diff
(*
°©e_
, *
löe
, 
Àn
)

464 
bœme_diff_°©e
 *
°©e
 = 
°©e_
;

465 
chunk
 *chunk;

466 
off1
, 
off2
, 
Àn1
, 
Àn2
, 
num
;

468 
num
 = 
°©e
->
ªt
->num;

469 i‡(
Àn
 < 4 || 
löe
[0] != '@' ||Üine[1] != '@') {

470 i‡(
°©e
->
hunk_ö_¥e_c⁄ãxt
 && 
löe
[0] == ' ')

471 
°©e
->
ªt
->
chunks
[
num
 - 1].
ßme
++;

473 
°©e
->
hunk_ö_¥e_c⁄ãxt
 = 0;

474 i‡(
löe
[0] == ' ')

475 
°©e
->
hunk_po°_c⁄ãxt
++;

477 
°©e
->
hunk_po°_c⁄ãxt
 = 0;

482 i‡(
num
 && 
°©e
->
hunk_po°_c⁄ãxt
) {

483 
chunk
 = &
°©e
->
ªt
->
chunks
[
num
 - 1];

484 
chunk
->
p_√xt
 -
°©e
->
hunk_po°_c⁄ãxt
;

485 
chunk
->
t_√xt
 -
°©e
->
hunk_po°_c⁄ãxt
;

487 
°©e
->
ªt
->
num
 = ++num;

488 
°©e
->
ªt
->
chunks
 = 
	`xªÆloc
(state->ret->chunks,

489 (
chunk
Ë* 
num
);

490 
chunk
 = &
°©e
->
ªt
->
chunks
[
num
 - 1];

491 i‡(
	`∑r£_hunk_hódî
(
löe
, 
Àn
, &
off1
, &
Àn1
, &
off2
, &
Àn2
)) {

492 
°©e
->
ªt
->
num
--;

497 
off1
--;

498 
off2
--;

500 
chunk
->
ßme
 = 
Àn2
 ? 
off2
 : (off2 + 1);

502 
chunk
->
p_√xt
 = 
off1
 + (
Àn1
 ?Üen1 : 1);

503 
chunk
->
t_√xt
 = chunk->
ßme
 + 
Àn2
;

504 
°©e
->
hunk_ö_¥e_c⁄ãxt
 = 1;

505 
°©e
->
hunk_po°_c⁄ãxt
 = 0;

506 
	}
}

508 
∑tch
 *
	$com∑ª_buf„r
(
mmfûe_t
 *
fûe_p
, mmfûe_à*
fûe_o
,

509 
c⁄ãxt
)

511 
bœme_diff_°©e
 
°©e
;

512 
xµ¨am_t
 
xµ
;

513 
xdemôc⁄f_t
 
xecfg
;

514 
xdemôcb_t
 
ecb
;

516 
xµ
.
Êags
 = 
XDF_NEED_MINIMAL
;

517 
xecfg
.
˘xÀn
 = 
c⁄ãxt
;

518 
xecfg
.
Êags
 = 0;

519 
ecb
.
outf
 = 
xdiff_outf
;

520 
ecb
.
¥iv
 = &
°©e
;

521 
	`mem£t
(&
°©e
, 0, (state));

522 
°©e
.
xm
.
c⁄sume
 = 
¥o˚ss_u_diff
;

523 
°©e
.
ªt
 = 
	`xmÆloc
((
∑tch
));

524 
°©e
.
ªt
->
chunks
 = 
NULL
;

525 
°©e
.
ªt
->
num
 = 0;

527 
	`xdl_diff
(
fûe_p
, 
fûe_o
, &
xµ
, &
xecfg
, &
ecb
);

529 i‡(
°©e
.
ªt
->
num
) {

530 
chunk
 *chunk;

531 
chunk
 = &
°©e
.
ªt
->
chunks
[°©e.ªt->
num
 - 1];

532 
chunk
->
p_√xt
 -
°©e
.
hunk_po°_c⁄ãxt
;

533 
chunk
->
t_√xt
 -
°©e
.
hunk_po°_c⁄ãxt
;

535  
°©e
.
ªt
;

536 
	}
}

543 
∑tch
 *
	$gë_∑tch
(
‹igö
 *
∑ª¡
, origin *origin)

545 
mmfûe_t
 
fûe_p
, 
fûe_o
;

546 
∑tch
 *patch;

548 
	`fûl_‹igö_blob
(
∑ª¡
, &
fûe_p
);

549 
	`fûl_‹igö_blob
(
‹igö
, &
fûe_o
);

550 i‡(!
fûe_p
.
±r
 || !
fûe_o
.ptr)

551  
NULL
;

552 
∑tch
 = 
	`com∑ª_buf„r
(&
fûe_p
, &
fûe_o
, 0);

553 
num_gë_∑tch
++;

554  
∑tch
;

555 
	}
}

557 
	$‰ì_∑tch
(
∑tch
 *
p
)

559 
	`‰ì
(
p
->
chunks
);

560 
	`‰ì
(
p
);

561 
	}
}

567 
	$add_bœme_íåy
(
sc‹ebﬂrd
 *
sb
, 
bœme_íåy
 *
e
)

569 
bœme_íåy
 *
ít
, *
¥ev
 = 
NULL
;

571 
	`‹igö_ö¸ef
(
e
->
su•e˘
);

573 
ít
 = 
sb
->ít;É¡ &&É¡->
 o
 < 
e
-> o;É¡ =É¡->
√xt
)

574 
¥ev
 = 
ít
;

577 
e
->
¥ev
 =Örev;

578 i‡(
¥ev
) {

579 
e
->
√xt
 = 
¥ev
->next;

580 
¥ev
->
√xt
 = 
e
;

583 
e
->
√xt
 = 
sb
->
ít
;

584 
sb
->
ít
 = 
e
;

586 i‡(
e
->
√xt
)

587 
e
->
√xt
->
¥ev
 =É;

588 
	}
}

596 
	$dup_íåy
(
bœme_íåy
 *
d°
, bœme_íåy *
§c
)

598 
bœme_íåy
 *
p
, *
n
;

600 
p
 = 
d°
->
¥ev
;

601 
n
 = 
d°
->
√xt
;

602 
	`‹igö_ö¸ef
(
§c
->
su•e˘
);

603 
	`‹igö_de¸ef
(
d°
->
su•e˘
);

604 
	`mem˝y
(
d°
, 
§c
, (*src));

605 
d°
->
¥ev
 = 
p
;

606 
d°
->
√xt
 = 
n
;

607 
d°
->
sc‹e
 = 0;

608 
	}
}

610 c⁄° *
	$¡h_löe
(
sc‹ebﬂrd
 *
sb
, 
 o
)

612  
sb
->
föÆ_buf
 + sb->
löío
[
 o
];

613 
	}
}

629 
	$•lô_ovîœp
(
bœme_íåy
 *
•lô
,

630 
bœme_íåy
 *
e
,

631 
éno
, 
∂no
, 
ßme
,

632 
‹igö
 *
∑ª¡
)

634 
chunk_íd_ o
;

635 
	`mem£t
(
•lô
, 0, (
bœme_íåy
 [3]));

637 i‡(
e
->
s_ o
 < 
éno
) {

639 
•lô
[0].
su•e˘
 = 
	`‹igö_ö¸ef
(
e
->suspect);

640 
•lô
[0].
 o
 = 
e
->lno;

641 
•lô
[0].
s_ o
 = 
e
->s_lno;

642 
•lô
[0].
num_löes
 = 
éno
 - 
e
->
s_ o
;

643 
•lô
[1].
 o
 = 
e
-> ÿ+ 
éno
 -É->
s_ o
;

644 
•lô
[1].
s_ o
 = 
∂no
;

647 
•lô
[1].
 o
 = 
e
->lno;

648 
•lô
[1].
s_ o
 = 
∂no
 + (
e
->s_ ÿ- 
éno
);

651 i‡(
ßme
 < 
e
->
s_ o
 +É->
num_löes
) {

653 
•lô
[2].
su•e˘
 = 
	`‹igö_ö¸ef
(
e
->suspect);

654 
•lô
[2].
 o
 = 
e
-> ÿ+ (
ßme
 -É->
s_ o
);

655 
•lô
[2].
s_ o
 = 
e
->s_ ÿ+ (
ßme
 -É->s_lno);

656 
•lô
[2].
num_löes
 = 
e
->
s_ o
 +É->num_löe†- 
ßme
;

657 
chunk_íd_ o
 = 
•lô
[2].
 o
;

660 
chunk_íd_ o
 = 
e
->
 o
 +É->
num_löes
;

661 
•lô
[1].
num_löes
 = 
chunk_íd_ o
 - s∂ô[1].
 o
;

667 i‡(
•lô
[1].
num_löes
 < 1)

669 
•lô
[1].
su•e˘
 = 
	`‹igö_ö¸ef
(
∑ª¡
);

670 
	}
}

677 
	$•lô_bœme
(
sc‹ebﬂrd
 *
sb
,

678 
bœme_íåy
 *
•lô
,

679 
bœme_íåy
 *
e
)

681 
bœme_íåy
 *
√w_íåy
;

683 i‡(
•lô
[0].
su•e˘
 && split[2].suspect) {

685 
	`dup_íåy
(
e
, &
•lô
[0]);

688 
√w_íåy
 = 
	`xmÆloc
((*new_entry));

689 
	`mem˝y
(
√w_íåy
, &(
•lô
[2]), (
bœme_íåy
));

690 
	`add_bœme_íåy
(
sb
, 
√w_íåy
);

693 
√w_íåy
 = 
	`xmÆloc
((*new_entry));

694 
	`mem˝y
(
√w_íåy
, &(
•lô
[1]), (
bœme_íåy
));

695 
	`add_bœme_íåy
(
sb
, 
√w_íåy
);

697 i‡(!
•lô
[0].
su•e˘
 && !split[2].suspect)

702 
	`dup_íåy
(
e
, &
•lô
[1]);

703 i‡(
•lô
[0].
su•e˘
) {

705 
	`dup_íåy
(
e
, &
•lô
[0]);

707 
√w_íåy
 = 
	`xmÆloc
((*new_entry));

708 
	`mem˝y
(
√w_íåy
, &(
•lô
[1]), (
bœme_íåy
));

709 
	`add_bœme_íåy
(
sb
, 
√w_íåy
);

713 
	`dup_íåy
(
e
, &
•lô
[1]);

715 
√w_íåy
 = 
	`xmÆloc
((*new_entry));

716 
	`mem˝y
(
√w_íåy
, &(
•lô
[2]), (
bœme_íåy
));

717 
	`add_bœme_íåy
(
sb
, 
√w_íåy
);

720 i‡(
DEBUG
) {

721 
bœme_íåy
 *
ít
;

722 
 o
 = 
sb
->
ít
-> o, 
c‹ru±
 = 0;

724 
ít
 = 
sb
->ít;É¡;É¡ =É¡->
√xt
) {

725 i‡(
 o
 !
ít
->lno)

726 
c‹ru±
 = 1;

727 i‡(
ít
->
s_ o
 < 0)

728 
c‹ru±
 = 1;

729 
 o
 +
ít
->
num_löes
;

731 i‡(
c‹ru±
) {

732 
 o
 = 
sb
->
ít
->lno;

733 
ít
 = 
sb
->ít;É¡;É¡ =É¡->
√xt
) {

734 
	`¥ötf
("L %8dÜ %8dÇ %8d\n",

735 
 o
, 
ít
-> o,É¡->
num_löes
);

736 
 o
 = 
ít
-> ÿ+É¡->
num_löes
;

738 
	`dõ
("oops");

741 
	}
}

747 
	$de¸ef_•lô
(
bœme_íåy
 *
•lô
)

749 
i
;

751 
i
 = 0; i < 3; i++)

752 
	`‹igö_de¸ef
(
•lô
[
i
].
su•e˘
);

753 
	}
}

759 
	$bœme_ovîœp
(
sc‹ebﬂrd
 *
sb
, 
bœme_íåy
 *
e
,

760 
éno
, 
∂no
, 
ßme
,

761 
‹igö
 *
∑ª¡
)

763 
bœme_íåy
 
•lô
[3];

765 
	`•lô_ovîœp
(
•lô
, 
e
, 
éno
, 
∂no
, 
ßme
, 
∑ª¡
);

766 i‡(
•lô
[1].
su•e˘
)

767 
	`•lô_bœme
(
sb
, 
•lô
, 
e
);

768 
	`de¸ef_•lô
(
•lô
);

769 
	}
}

774 
	$föd_œ°_ö_èrgë
(
sc‹ebﬂrd
 *
sb
, 
‹igö
 *
èrgë
)

776 
bœme_íåy
 *
e
;

777 
œ°_ö_èrgë
 = -1;

779 
e
 = 
sb
->
ít
;É;É =É->
√xt
) {

780 i‡(
e
->
guûty
 || 
	`cmp_su•e˘
”->
su•e˘
, 
èrgë
))

782 i‡(
œ°_ö_èrgë
 < 
e
->
s_ o
 +É->
num_löes
)

783 
œ°_ö_èrgë
 = 
e
->
s_ o
 +É->
num_löes
;

785  
œ°_ö_èrgë
;

786 
	}
}

793 
	$bœme_chunk
(
sc‹ebﬂrd
 *
sb
,

794 
éno
, 
∂no
, 
ßme
,

795 
‹igö
 *
èrgë
, ‹igö *
∑ª¡
)

797 
bœme_íåy
 *
e
;

799 
e
 = 
sb
->
ít
;É;É =É->
√xt
) {

800 i‡(
e
->
guûty
 || 
	`cmp_su•e˘
”->
su•e˘
, 
èrgë
))

802 i‡(
ßme
 <
e
->
s_ o
)

804 i‡(
éno
 < 
e
->
s_ o
 +É->
num_löes
)

805 
	`bœme_ovîœp
(
sb
, 
e
, 
éno
, 
∂no
, 
ßme
, 
∑ª¡
);

807 
	}
}

814 
	$∑ss_bœme_to_∑ª¡
(
sc‹ebﬂrd
 *
sb
,

815 
‹igö
 *
èrgë
,

816 
‹igö
 *
∑ª¡
)

818 
i
, 
œ°_ö_èrgë
, 
∂no
, 
éno
;

819 
∑tch
 *patch;

821 
œ°_ö_èrgë
 = 
	`föd_œ°_ö_èrgë
(
sb
, 
èrgë
);

822 i‡(
œ°_ö_èrgë
 < 0)

825 
∑tch
 = 
	`gë_∑tch
(
∑ª¡
, 
èrgë
);

826 
∂no
 = 
éno
 = 0;

827 
i
 = 0; i < 
∑tch
->
num
; i++) {

828 
chunk
 *chunk = &
∑tch
->
chunks
[
i
];

830 
	`bœme_chunk
(
sb
, 
éno
, 
∂no
, 
chunk
->
ßme
, 
èrgë
, 
∑ª¡
);

831 
∂no
 = 
chunk
->
p_√xt
;

832 
éno
 = 
chunk
->
t_√xt
;

835 
	`bœme_chunk
(
sb
, 
éno
, 
∂no
, 
œ°_ö_èrgë
, 
èrgë
, 
∑ª¡
);

837 
	`‰ì_∑tch
(
∑tch
);

839 
	}
}

850 
	$ít_sc‹e
(
sc‹ebﬂrd
 *
sb
, 
bœme_íåy
 *
e
)

852 
sc‹e
;

853 c⁄° *
˝
, *
ï
;

855 i‡(
e
->
sc‹e
)

856  
e
->
sc‹e
;

858 
sc‹e
 = 1;

859 
˝
 = 
	`¡h_löe
(
sb
, 
e
->
 o
);

860 
ï
 = 
	`¡h_löe
(
sb
, 
e
->
 o
 +É->
num_löes
);

861 
˝
 < 
ï
) {

862 
ch
 = *((*)
˝
);

863 i‡(
	`iß um
(
ch
))

864 
sc‹e
++;

865 
˝
++;

867 
e
->
sc‹e
 = score;

868  
sc‹e
;

869 
	}
}

877 
	$c›y_•lô_if_bëãr
(
sc‹ebﬂrd
 *
sb
,

878 
bœme_íåy
 *
be°_so_Ár
,

879 
bœme_íåy
 *
this
)

881 
i
;

883 i‡(!
this
[1].
su•e˘
)

885 i‡(
be°_so_Ár
[1].
su•e˘
) {

886 i‡(
	`ít_sc‹e
(
sb
, &
this
[1]Ë<É¡_sc‹e(sb, &
be°_so_Ár
[1]))

890 
i
 = 0; i < 3; i++)

891 
	`‹igö_ö¸ef
(
this
[
i
].
su•e˘
);

892 
	`de¸ef_•lô
(
be°_so_Ár
);

893 
	`mem˝y
(
be°_so_Ár
, 
this
, (
bœme_íåy
 [3]));

894 
	}
}

901 
	$föd_c›y_ö_blob
(
sc‹ebﬂrd
 *
sb
,

902 
bœme_íåy
 *
ít
,

903 
‹igö
 *
∑ª¡
,

904 
bœme_íåy
 *
•lô
,

905 
mmfûe_t
 *
fûe_p
)

907 c⁄° *
˝
;

908 
˙t
;

909 
mmfûe_t
 
fûe_o
;

910 
∑tch
 *patch;

911 
i
, 
∂no
, 
éno
;

916 
˝
 = 
	`¡h_löe
(
sb
, 
ít
->
 o
);

917 
fûe_o
.
±r
 = (*Ë
˝
;

918 
˙t
 = 
ít
->
num_löes
;

920 
˙t
 && 
˝
 < 
sb
->
föÆ_buf
 + sb->
föÆ_buf_size
) {

921 i‡(*
˝
++ == '\n')

922 
˙t
--;

924 
fûe_o
.
size
 = 
˝
 - fûe_o.
±r
;

926 
∑tch
 = 
	`com∑ª_buf„r
(
fûe_p
, &
fûe_o
, 1);

928 
	`mem£t
(
•lô
, 0, (
bœme_íåy
 [3]));

929 
∂no
 = 
éno
 = 0;

930 
i
 = 0; i < 
∑tch
->
num
; i++) {

931 
chunk
 *chunk = &
∑tch
->
chunks
[
i
];

934 i‡(
ít
->
num_löes
 <
éno
)

936 i‡(
éno
 < 
chunk
->
ßme
) {

937 
bœme_íåy
 
this
[3];

938 
	`•lô_ovîœp
(
this
, 
ít
,

939 
éno
 + 
ít
->
s_ o
, 
∂no
,

940 
chunk
->
ßme
 + 
ít
->
s_ o
,

941 
∑ª¡
);

942 
	`c›y_•lô_if_bëãr
(
sb
, 
•lô
, 
this
);

943 
	`de¸ef_•lô
(
this
);

945 
∂no
 = 
chunk
->
p_√xt
;

946 
éno
 = 
chunk
->
t_√xt
;

948 
	`‰ì_∑tch
(
∑tch
);

949 
	}
}

955 
	$föd_move_ö_∑ª¡
(
sc‹ebﬂrd
 *
sb
,

956 
‹igö
 *
èrgë
,

957 
‹igö
 *
∑ª¡
)

959 
œ°_ö_èrgë
, 
made_¥ogªss
;

960 
bœme_íåy
 *
e
, 
•lô
[3];

961 
mmfûe_t
 
fûe_p
;

963 
œ°_ö_èrgë
 = 
	`föd_œ°_ö_èrgë
(
sb
, 
èrgë
);

964 i‡(
œ°_ö_èrgë
 < 0)

967 
	`fûl_‹igö_blob
(
∑ª¡
, &
fûe_p
);

968 i‡(!
fûe_p
.
±r
)

971 
made_¥ogªss
 = 1;

972 
made_¥ogªss
) {

973 
made_¥ogªss
 = 0;

974 
e
 = 
sb
->
ít
;É;É =É->
√xt
) {

975 i‡(
e
->
guûty
 || 
	`cmp_su•e˘
”->
su•e˘
, 
èrgë
))

977 
	`föd_c›y_ö_blob
(
sb
, 
e
, 
∑ª¡
, 
•lô
, &
fûe_p
);

978 i‡(
•lô
[1].
su•e˘
 &&

979 
bœme_move_sc‹e
 < 
	`ít_sc‹e
(
sb
, &
•lô
[1])) {

980 
	`•lô_bœme
(
sb
, 
•lô
, 
e
);

981 
made_¥ogªss
 = 1;

983 
	`de¸ef_•lô
(
•lô
);

987 
	}
}

989 
	sbœme_li°
 {

990 
bœme_íåy
 *
	mít
;

991 
bœme_íåy
 
	m•lô
[3];

998 
bœme_li°
 *
	$£tup_bœme_li°
(
sc‹ebﬂrd
 *
sb
,

999 
‹igö
 *
èrgë
,

1000 *
num_íts_p
)

1002 
bœme_íåy
 *
e
;

1003 
num_íts
, 
i
;

1004 
bœme_li°
 *bœme_li° = 
NULL
;

1006 
e
 = 
sb
->
ít
, 
num_íts
 = 0;É;É =É->
√xt
)

1007 i‡(!
e
->
guûty
 && !
	`cmp_su•e˘
”->
su•e˘
, 
èrgë
))

1008 
num_íts
++;

1009 i‡(
num_íts
) {

1010 
bœme_li°
 = 
	`xˇŒoc
(
num_íts
, (blame_list));

1011 
e
 = 
sb
->
ít
, 
i
 = 0;É;É =É->
√xt
)

1012 i‡(!
e
->
guûty
 && !
	`cmp_su•e˘
”->
su•e˘
, 
èrgë
))

1013 
bœme_li°
[
i
++].
ít
 = 
e
;

1015 *
num_íts_p
 = 
num_íts
;

1016  
bœme_li°
;

1017 
	}
}

1024 
	$föd_c›y_ö_∑ª¡
(
sc‹ebﬂrd
 *
sb
,

1025 
‹igö
 *
èrgë
,

1026 
commô
 *
∑ª¡
,

1027 
‹igö
 *
p‹igö
,

1028 
›t
)

1030 
diff_›ti⁄s
 
diff_›ts
;

1031 c⁄° *
∑ths
[1];

1032 
i
, 
j
;

1033 
ªtvÆ
;

1034 
bœme_li°
 *blame_list;

1035 
num_íts
;

1037 
bœme_li°
 = 
	`£tup_bœme_li°
(
sb
, 
èrgë
, &
num_íts
);

1038 i‡(!
bœme_li°
)

1041 
	`diff_£tup
(&
diff_›ts
);

1042 
diff_›ts
.
ªcursive
 = 1;

1043 
diff_›ts
.
ouçut_f‹m©
 = 
DIFF_FORMAT_NO_OUTPUT
;

1045 
∑ths
[0] = 
NULL
;

1046 
	`diff_åì_£tup_∑ths
(
∑ths
, &
diff_›ts
);

1047 i‡(
	`diff_£tup_d⁄e
(&
diff_›ts
) < 0)

1048 
	`dõ
("diff-setup");

1057 i‡((
›t
 & 
PICKAXE_BLAME_COPY_HARDER
) &&

1058 (!
p‹igö
 || 
	`°rcmp
(
èrgë
->
∑th
,Öorigin->path)))

1059 
diff_›ts
.
föd_c›õs_h¨dî
 = 1;

1061 i‡(
	`is_nuŒ_sha1
(
èrgë
->
commô
->
obje˘
.
sha1
))

1062 
	`do_diff_ˇche
(
∑ª¡
->
åì
->
obje˘
.
sha1
, &
diff_›ts
);

1064 
	`diff_åì_sha1
(
∑ª¡
->
åì
->
obje˘
.
sha1
,

1065 
èrgë
->
commô
->
åì
->
obje˘
.
sha1
,

1066 "", &
diff_›ts
);

1068 i‡(!
diff_›ts
.
föd_c›õs_h¨dî
)

1069 
	`diffc‹e_°d
(&
diff_›ts
);

1071 
ªtvÆ
 = 0;

1073 
made_¥ogªss
 = 0;

1075 
i
 = 0; i < 
diff_queued_diff
.
ƒ
; i++) {

1076 
diff_fûïaú
 *
p
 = 
diff_queued_diff
.
queue
[
i
];

1077 
‹igö
 *
n‹igö
;

1078 
mmfûe_t
 
fûe_p
;

1079 
bœme_íåy
 
this
[3];

1081 i‡(!
	`DIFF_FILE_VALID
(
p
->
⁄e
))

1083 i‡(
p‹igö
 && !
	`°rcmp
(
p
->
⁄e
->
∑th
,Öorigin->path))

1087 
n‹igö
 = 
	`gë_‹igö
(
sb
, 
∑ª¡
, 
p
->
⁄e
->
∑th
);

1088 
	`hash˝y
(
n‹igö
->
blob_sha1
, 
p
->
⁄e
->
sha1
);

1089 
	`fûl_‹igö_blob
(
n‹igö
, &
fûe_p
);

1090 i‡(!
fûe_p
.
±r
)

1093 
j
 = 0; j < 
num_íts
; j++) {

1094 
	`föd_c›y_ö_blob
(
sb
, 
bœme_li°
[
j
].
ít
,

1095 
n‹igö
, 
this
, &
fûe_p
);

1096 
	`c›y_•lô_if_bëãr
(
sb
, 
bœme_li°
[
j
].
•lô
,

1097 
this
);

1098 
	`de¸ef_•lô
(
this
);

1100 
	`‹igö_de¸ef
(
n‹igö
);

1103 
j
 = 0; j < 
num_íts
; j++) {

1104 
bœme_íåy
 *
•lô
 = 
bœme_li°
[
j
].split;

1105 i‡(
•lô
[1].
su•e˘
 &&

1106 
bœme_c›y_sc‹e
 < 
	`ít_sc‹e
(
sb
, &
•lô
[1])) {

1107 
	`•lô_bœme
(
sb
, 
•lô
, 
bœme_li°
[
j
].
ít
);

1108 
made_¥ogªss
 = 1;

1110 
	`de¸ef_•lô
(
•lô
);

1112 
	`‰ì
(
bœme_li°
);

1114 i‡(!
made_¥ogªss
)

1116 
bœme_li°
 = 
	`£tup_bœme_li°
(
sb
, 
èrgë
, &
num_íts
);

1117 i‡(!
bœme_li°
) {

1118 
ªtvÆ
 = 1;

1122 
	`diff_Êush
(&
diff_›ts
);

1124  
ªtvÆ
;

1125 
	}
}

1131 
	$∑ss_whﬁe_bœme
(
sc‹ebﬂrd
 *
sb
,

1132 
‹igö
 *‹igö, ‹igö *
p‹igö
)

1134 
bœme_íåy
 *
e
;

1136 i‡(!
p‹igö
->
fûe
.
±r
 && 
‹igö
->file.ptr) {

1138 
p‹igö
->
fûe
 = 
‹igö
->file;

1139 
‹igö
->
fûe
.
±r
 = 
NULL
;

1141 
e
 = 
sb
->
ít
;É;É =É->
√xt
) {

1142 i‡(
	`cmp_su•e˘
(
e
->
su•e˘
, 
‹igö
))

1144 
	`‹igö_ö¸ef
(
p‹igö
);

1145 
	`‹igö_de¸ef
(
e
->
su•e˘
);

1146 
e
->
su•e˘
 = 
p‹igö
;

1148 
	}
}

1150 
	#MAXPARENT
 16

	)

1152 
	$∑ss_bœme
(
sc‹ebﬂrd
 *
sb
, 
‹igö
 *‹igö, 
›t
)

1154 
i
, 
∑ss
;

1155 
commô
 *commô = 
‹igö
->commit;

1156 
commô_li°
 *
∑ª¡
;

1157 
‹igö
 *
∑ª¡_‹igö
[
MAXPARENT
], *
p‹igö
;

1159 
	`mem£t
(
∑ª¡_‹igö
, 0, (parent_origin));

1164 
∑ss
 = 0;Öass < 2;Öass++) {

1165 
‹igö
 *(*
föd
)(
sc‹ebﬂrd
 *,

1166 
commô
 *, 
‹igö
 *);

1167 
föd
 = 
∑ss
 ? 
föd_ª«me
 : 
föd_‹igö
;

1169 
i
 = 0, 
∑ª¡
 = 
commô
->
∑ª¡s
;

1170 
i
 < 
MAXPARENT
 && 
∑ª¡
;

1171 
∑ª¡
 =Ö¨ít->
√xt
, 
i
++) {

1172 
commô
 *
p
 = 
∑ª¡
->
ôem
;

1173 
j
, 
ßme
;

1175 i‡(
∑ª¡_‹igö
[
i
])

1177 i‡(
	`∑r£_commô
(
p
))

1179 
p‹igö
 = 
	`föd
(
sb
, 
p
, 
‹igö
);

1180 i‡(!
p‹igö
)

1182 i‡(!
	`hashcmp
(
p‹igö
->
blob_sha1
, 
‹igö
->blob_sha1)) {

1183 
	`∑ss_whﬁe_bœme
(
sb
, 
‹igö
, 
p‹igö
);

1184 
	`‹igö_de¸ef
(
p‹igö
);

1185 
föish
;

1187 
j
 = 
ßme
 = 0; j < 
i
; j++)

1188 i‡(
∑ª¡_‹igö
[
j
] &&

1189 !
	`hashcmp
(
∑ª¡_‹igö
[
j
]->
blob_sha1
,

1190 
p‹igö
->
blob_sha1
)) {

1191 
ßme
 = 1;

1194 i‡(!
ßme
)

1195 
∑ª¡_‹igö
[
i
] = 
p‹igö
;

1197 
	`‹igö_de¸ef
(
p‹igö
);

1201 
num_commôs
++;

1202 
i
 = 0, 
∑ª¡
 = 
commô
->
∑ª¡s
;

1203 
i
 < 
MAXPARENT
 && 
∑ª¡
;

1204 
∑ª¡
 =Ö¨ít->
√xt
, 
i
++) {

1205 
‹igö
 *
p‹igö
 = 
∑ª¡_‹igö
[
i
];

1206 i‡(!
p‹igö
)

1208 i‡(
	`∑ss_bœme_to_∑ª¡
(
sb
, 
‹igö
, 
p‹igö
))

1209 
föish
;

1215 i‡(
›t
 & 
PICKAXE_BLAME_MOVE
)

1216 
i
 = 0, 
∑ª¡
 = 
commô
->
∑ª¡s
;

1217 
i
 < 
MAXPARENT
 && 
∑ª¡
;

1218 
∑ª¡
 =Ö¨ít->
√xt
, 
i
++) {

1219 
‹igö
 *
p‹igö
 = 
∑ª¡_‹igö
[
i
];

1220 i‡(!
p‹igö
)

1222 i‡(
	`föd_move_ö_∑ª¡
(
sb
, 
‹igö
, 
p‹igö
))

1223 
föish
;

1229 i‡(
›t
 & 
PICKAXE_BLAME_COPY
)

1230 
i
 = 0, 
∑ª¡
 = 
commô
->
∑ª¡s
;

1231 
i
 < 
MAXPARENT
 && 
∑ª¡
;

1232 
∑ª¡
 =Ö¨ít->
√xt
, 
i
++) {

1233 
‹igö
 *
p‹igö
 = 
∑ª¡_‹igö
[
i
];

1234 i‡(
	`föd_c›y_ö_∑ª¡
(
sb
, 
‹igö
, 
∑ª¡
->
ôem
,

1235 
p‹igö
, 
›t
))

1236 
föish
;

1239 
föish
:

1240 
i
 = 0; i < 
MAXPARENT
; i++)

1241 
	`‹igö_de¸ef
(
∑ª¡_‹igö
[
i
]);

1242 
	}
}

1247 
	scommô_öfo


1249 *
	mauth‹
;

1250 *
	mauth‹_maû
;

1251 
	mauth‹_time
;

1252 *
	mauth‹_tz
;

1255 *
	mcommôãr
;

1256 *
	mcommôãr_maû
;

1257 
	mcommôãr_time
;

1258 *
	mcommôãr_tz
;

1260 *
	msumm¨y
;

1266 
	$gë_ac_löe
(c⁄° *
öbuf
, c⁄° *
wh©
,

1267 
bufsz
, *
≥rs⁄
, **
maû
,

1268 *
time
, **
tz
)

1270 
Àn
;

1271 *
tmp
, *
ídp
;

1273 
tmp
 = 
	`°r°r
(
öbuf
, 
wh©
);

1274 i‡(!
tmp
)

1275 
îr‹_out
;

1276 
tmp
 +
	`°æí
(
wh©
);

1277 
ídp
 = 
	`°rchr
(
tmp
, '\n');

1278 i‡(!
ídp
)

1279 
Àn
 = 
	`°æí
(
tmp
);

1281 
Àn
 = 
ídp
 - 
tmp
;

1282 i‡(
bufsz
 <
Àn
) {

1283 
îr‹_out
:

1285 
≥rs⁄
 = *
maû
 = *
tz
 = "(unknown)";

1286 *
time
 = 0;

1289 
	`mem˝y
(
≥rs⁄
, 
tmp
, 
Àn
);

1291 
tmp
 = 
≥rs⁄
;

1292 
tmp
 +
Àn
;

1293 *
tmp
 = 0;

1294 *
tmp
 != ' ')

1295 
tmp
--;

1296 *
tz
 = 
tmp
+1;

1298 *
tmp
 = 0;

1299 *
tmp
 != ' ')

1300 
tmp
--;

1301 *
time
 = 
	`°πoul
(
tmp
, 
NULL
, 10);

1303 *
tmp
 = 0;

1304 *
tmp
 != ' ')

1305 
tmp
--;

1306 *
maû
 = 
tmp
 + 1;

1307 *
tmp
 = 0;

1308 
	}
}

1310 
	$gë_commô_öfo
(
commô
 *commit,

1311 
commô_öfo
 *
ªt
,

1312 
dëaûed
)

1314 
Àn
;

1315 *
tmp
, *
ídp
;

1316 
auth‹_buf
[1024];

1317 
commôãr_buf
[1024];

1318 
summ¨y_buf
[1024];

1324 i‡(!
commô
->
buf„r
) {

1325 
ty≥
[20];

1326 
size
;

1327 
commô
->
buf„r
 =

1328 
	`ªad_sha1_fûe
(
commô
->
obje˘
.
sha1
, 
ty≥
, &
size
);

1330 
ªt
->
auth‹
 = 
auth‹_buf
;

1331 
	`gë_ac_löe
(
commô
->
buf„r
, "\nauthor ",

1332 (
auth‹_buf
),áuth‹_buf, &
ªt
->
auth‹_maû
,

1333 &
ªt
->
auth‹_time
, &ªt->
auth‹_tz
);

1335 i‡(!
dëaûed
)

1338 
ªt
->
commôãr
 = 
commôãr_buf
;

1339 
	`gë_ac_löe
(
commô
->
buf„r
, "\ncommitter ",

1340 (
commôãr_buf
), commôãr_buf, &
ªt
->
commôãr_maû
,

1341 &
ªt
->
commôãr_time
, &ªt->
commôãr_tz
);

1343 
ªt
->
summ¨y
 = 
summ¨y_buf
;

1344 
tmp
 = 
	`°r°r
(
commô
->
buf„r
, "\n\n");

1345 i‡(!
tmp
) {

1346 
îr‹_out
:

1347 
	`•rötf
(
summ¨y_buf
, "(%s)", 
	`sha1_to_hex
(
commô
->
obje˘
.
sha1
));

1350 
tmp
 += 2;

1351 
ídp
 = 
	`°rchr
(
tmp
, '\n');

1352 i‡(!
ídp
)

1353 
ídp
 = 
tmp
 + 
	`°æí
(tmp);

1354 
Àn
 = 
ídp
 - 
tmp
;

1355 i‡(
Àn
 >(
summ¨y_buf
) ||Üen == 0)

1356 
îr‹_out
;

1357 
	`mem˝y
(
summ¨y_buf
, 
tmp
, 
Àn
);

1358 
summ¨y_buf
[
Àn
] = 0;

1359 
	}
}

1365 
	$wrôe_fûíame_öfo
(c⁄° *
∑th
)

1367 
	`¥ötf
("filename ");

1368 
	`wrôe_«me_quŸed
(
NULL
, 0, 
∑th
, 1, 
°dout
);

1369 
	`putch¨
('\n');

1370 
	}
}

1376 
	$found_guûty_íåy
(
bœme_íåy
 *
ít
)

1378 i‡(
ít
->
guûty
)

1380 
ít
->
guûty
 = 1;

1381 i‡(
ö¸emíèl
) {

1382 
‹igö
 *
su•e˘
 = 
ít
->suspect;

1384 
	`¥ötf
("%s %d %d %d\n",

1385 
	`sha1_to_hex
(
su•e˘
->
commô
->
obje˘
.
sha1
),

1386 
ít
->
s_ o
 + 1,É¡->
 o
 + 1,É¡->
num_löes
);

1387 i‡(!(
su•e˘
->
commô
->
obje˘
.
Êags
 & 
METAINFO_SHOWN
)) {

1388 
commô_öfo
 
ci
;

1389 
su•e˘
->
commô
->
obje˘
.
Êags
 |
METAINFO_SHOWN
;

1390 
	`gë_commô_öfo
(
su•e˘
->
commô
, &
ci
, 1);

1391 
	`¥ötf
("auth‹ %s\n", 
ci
.
auth‹
);

1392 
	`¥ötf
("auth‹-maû %s\n", 
ci
.
auth‹_maû
);

1393 
	`¥ötf
("auth‹-timê%lu\n", 
ci
.
auth‹_time
);

1394 
	`¥ötf
("auth‹-tz %s\n", 
ci
.
auth‹_tz
);

1395 
	`¥ötf
("commôã∏%s\n", 
ci
.
commôãr
);

1396 
	`¥ötf
("commôãr-maû %s\n", 
ci
.
commôãr_maû
);

1397 
	`¥ötf
("commôãr-timê%lu\n", 
ci
.
commôãr_time
);

1398 
	`¥ötf
("commôãr-tz %s\n", 
ci
.
commôãr_tz
);

1399 
	`¥ötf
("summ¨y %s\n", 
ci
.
summ¨y
);

1400 i‡(
su•e˘
->
commô
->
obje˘
.
Êags
 & 
UNINTERESTING
)

1401 
	`¥ötf
("boundary\n");

1403 
	`wrôe_fûíame_öfo
(
su•e˘
->
∑th
);

1405 
	}
}

1412 
	$assign_bœme
(
sc‹ebﬂrd
 *
sb
, 
ªv_öfo
 *
ªvs
, 
›t
)

1415 
bœme_íåy
 *
ít
;

1416 
commô
 *commit;

1417 
‹igö
 *
su•e˘
 = 
NULL
;

1420 
ít
 = 
sb
->ít; !
su•e˘
 &&É¡;É¡ =É¡->
√xt
)

1421 i‡(!
ít
->
guûty
)

1422 
su•e˘
 = 
ít
->suspect;

1423 i‡(!
su•e˘
)

1430 
	`‹igö_ö¸ef
(
su•e˘
);

1431 
commô
 = 
su•e˘
->commit;

1432 i‡(!
commô
->
obje˘
.
∑r£d
)

1433 
	`∑r£_commô
(
commô
);

1434 i‡(!(
commô
->
obje˘
.
Êags
 & 
UNINTERESTING
) &&

1435 !(
ªvs
->
max_age
 !-1 && 
commô
->
d©e
 <Ñevs->max_age))

1436 
	`∑ss_bœme
(
sb
, 
su•e˘
, 
›t
);

1438 
commô
->
obje˘
.
Êags
 |
UNINTERESTING
;

1439 i‡(
commô
->
obje˘
.
∑r£d
)

1440 
	`m¨k_∑ª¡s_unöãª°ög
(
commô
);

1443 i‡(!
commô
->
∑ª¡s
 && !
show_roŸ
)

1444 
commô
->
obje˘
.
Êags
 |
UNINTERESTING
;

1447 
ít
 = 
sb
->ít;É¡;É¡ =É¡->
√xt
)

1448 i‡(!
	`cmp_su•e˘
(
ít
->
su•e˘
, suspect))

1449 
	`found_guûty_íåy
(
ít
);

1450 
	`‹igö_de¸ef
(
su•e˘
);

1452 i‡(
DEBUG
)

1453 
	`ßnôy_check_ªf˙t
(
sb
);

1455 
	}
}

1457 c⁄° *
	$f‹m©_time
(
time
, c⁄° *
tz_°r
,

1458 
show_øw_time
)

1460 
time_buf
[128];

1461 
time_t
 
t
 = 
time
;

1462 
möuãs
, 
tz
;

1463 
tm
 *tm;

1465 i‡(
show_øw_time
) {

1466 
	`•rötf
(
time_buf
, "%lu %s", 
time
, 
tz_°r
);

1467  
time_buf
;

1470 
tz
 = 
	`©oi
(
tz_°r
);

1471 
möuãs
 = 
tz
 < 0 ? -tz :Åz;

1472 
möuãs
 = (minutes / 100)*60 + (minutes % 100);

1473 
möuãs
 = 
tz
 < 0 ? -minutes : minutes;

1474 
t
 = 
time
 + 
möuãs
 * 60;

1475 
tm
 = 
	`gmtime
(&
t
);

1477 
	`°r·ime
(
time_buf
, —ime_buf), "%Y-%m-%d %H:%M:%S ", 
tm
);

1478 
	`°rˇt
(
time_buf
, 
tz_°r
);

1479  
time_buf
;

1480 
	}
}

1482 
	#OUTPUT_ANNOTATE_COMPAT
 001

	)

1483 
	#OUTPUT_LONG_OBJECT_NAME
 002

	)

1484 
	#OUTPUT_RAW_TIMESTAMP
 004

	)

1485 
	#OUTPUT_PORCELAIN
 010

	)

1486 
	#OUTPUT_SHOW_NAME
 020

	)

1487 
	#OUTPUT_SHOW_NUMBER
 040

	)

1488 
	#OUTPUT_SHOW_SCORE
 0100

	)

1490 
	$emô_p‹˚œö
(
sc‹ebﬂrd
 *
sb
, 
bœme_íåy
 *
ít
)

1492 
˙t
;

1493 c⁄° *
˝
;

1494 
‹igö
 *
su•e˘
 = 
ít
->suspect;

1495 
hex
[41];

1497 
	`°r˝y
(
hex
, 
	`sha1_to_hex
(
su•e˘
->
commô
->
obje˘
.
sha1
));

1498 
	`¥ötf
("%s%c%d %d %d\n",

1499 
hex
,

1500 
ít
->
guûty
 ? ' ' : '*',

1501 
ít
->
s_ o
 + 1,

1502 
ít
->
 o
 + 1,

1503 
ít
->
num_löes
);

1504 i‡(!(
su•e˘
->
commô
->
obje˘
.
Êags
 & 
METAINFO_SHOWN
)) {

1505 
commô_öfo
 
ci
;

1506 
su•e˘
->
commô
->
obje˘
.
Êags
 |
METAINFO_SHOWN
;

1507 
	`gë_commô_öfo
(
su•e˘
->
commô
, &
ci
, 1);

1508 
	`¥ötf
("auth‹ %s\n", 
ci
.
auth‹
);

1509 
	`¥ötf
("auth‹-maû %s\n", 
ci
.
auth‹_maû
);

1510 
	`¥ötf
("auth‹-timê%lu\n", 
ci
.
auth‹_time
);

1511 
	`¥ötf
("auth‹-tz %s\n", 
ci
.
auth‹_tz
);

1512 
	`¥ötf
("commôã∏%s\n", 
ci
.
commôãr
);

1513 
	`¥ötf
("commôãr-maû %s\n", 
ci
.
commôãr_maû
);

1514 
	`¥ötf
("commôãr-timê%lu\n", 
ci
.
commôãr_time
);

1515 
	`¥ötf
("commôãr-tz %s\n", 
ci
.
commôãr_tz
);

1516 
	`wrôe_fûíame_öfo
(
su•e˘
->
∑th
);

1517 
	`¥ötf
("summ¨y %s\n", 
ci
.
summ¨y
);

1518 i‡(
su•e˘
->
commô
->
obje˘
.
Êags
 & 
UNINTERESTING
)

1519 
	`¥ötf
("boundary\n");

1521 i‡(
su•e˘
->
commô
->
obje˘
.
Êags
 & 
MORE_THAN_ONE_PATH
)

1522 
	`wrôe_fûíame_öfo
(
su•e˘
->
∑th
);

1524 
˝
 = 
	`¡h_löe
(
sb
, 
ít
->
 o
);

1525 
˙t
 = 0; c¡ < 
ít
->
num_löes
; cnt++) {

1526 
ch
;

1527 i‡(
˙t
)

1528 
	`¥ötf
("%†%d %d\n", 
hex
,

1529 
ít
->
s_ o
 + 1 + 
˙t
,

1530 
ít
->
 o
 + 1 + 
˙t
);

1531 
	`putch¨
('\t');

1533 
ch
 = *
˝
++;

1534 
	`putch¨
(
ch
);

1535 } 
ch
 != '\n' &&

1536 
˝
 < 
sb
->
föÆ_buf
 + sb->
föÆ_buf_size
);

1538 
	}
}

1540 
	$emô_Ÿhî
(
sc‹ebﬂrd
 *
sb
, 
bœme_íåy
 *
ít
, 
›t
)

1542 
˙t
;

1543 c⁄° *
˝
;

1544 
‹igö
 *
su•e˘
 = 
ít
->suspect;

1545 
commô_öfo
 
ci
;

1546 
hex
[41];

1547 
show_øw_time
 = !!(
›t
 & 
OUTPUT_RAW_TIMESTAMP
);

1549 
	`gë_commô_öfo
(
su•e˘
->
commô
, &
ci
, 1);

1550 
	`°r˝y
(
hex
, 
	`sha1_to_hex
(
su•e˘
->
commô
->
obje˘
.
sha1
));

1552 
˝
 = 
	`¡h_löe
(
sb
, 
ít
->
 o
);

1553 
˙t
 = 0; c¡ < 
ít
->
num_löes
; cnt++) {

1554 
ch
;

1555 
Àngth
 = (
›t
 & 
OUTPUT_LONG_OBJECT_NAME
) ? 40 : 8;

1557 i‡(
su•e˘
->
commô
->
obje˘
.
Êags
 & 
UNINTERESTING
) {

1558 i‡(
bœnk_bound¨y
)

1559 
	`mem£t
(
hex
, ' ', 
Àngth
);

1560 i‡(!
cmd_is_™nŸ©e
) {

1561 
Àngth
--;

1562 
	`putch¨
('^');

1566 
	`¥ötf
("%.*s", 
Àngth
, 
hex
);

1567 i‡(
›t
 & 
OUTPUT_ANNOTATE_COMPAT
)

1568 
	`¥ötf
("\t(%10s\t%10s\t%d)", 
ci
.
auth‹
,

1569 
	`f‹m©_time
(
ci
.
auth‹_time
, ci.
auth‹_tz
,

1570 
show_øw_time
),

1571 
ít
->
 o
 + 1 + 
˙t
);

1573 i‡(
›t
 & 
OUTPUT_SHOW_SCORE
)

1574 
	`¥ötf
(" %*d %02d",

1575 
max_sc‹e_digôs
, 
ít
->
sc‹e
,

1576 
ít
->
su•e˘
->
ªf˙t
);

1577 i‡(
›t
 & 
OUTPUT_SHOW_NAME
)

1578 
	`¥ötf
(" %-*.*s", 
l⁄ge°_fûe
,Üongest_file,

1579 
su•e˘
->
∑th
);

1580 i‡(
›t
 & 
OUTPUT_SHOW_NUMBER
)

1581 
	`¥ötf
(" %*d", 
max_‹ig_digôs
,

1582 
ít
->
s_ o
 + 1 + 
˙t
);

1583 
	`¥ötf
(" (%-*.*s %10s %*d) ",

1584 
l⁄ge°_auth‹
,Ü⁄ge°_auth‹, 
ci
.
auth‹
,

1585 
	`f‹m©_time
(
ci
.
auth‹_time
, ci.
auth‹_tz
,

1586 
show_øw_time
),

1587 
max_digôs
, 
ít
->
 o
 + 1 + 
˙t
);

1590 
ch
 = *
˝
++;

1591 
	`putch¨
(
ch
);

1592 } 
ch
 != '\n' &&

1593 
˝
 < 
sb
->
föÆ_buf
 + sb->
föÆ_buf_size
);

1595 
	}
}

1597 
	$ouçut
(
sc‹ebﬂrd
 *
sb
, 
›ti⁄
)

1599 
bœme_íåy
 *
ít
;

1601 i‡(
›ti⁄
 & 
OUTPUT_PORCELAIN
) {

1602 
ít
 = 
sb
->ít;É¡;É¡ =É¡->
√xt
) {

1603 
bœme_íåy
 *
Ÿh
;

1604 
‹igö
 *
su•e˘
 = 
ít
->suspect;

1605 
commô
 *commô = 
su•e˘
->commit;

1606 i‡(
commô
->
obje˘
.
Êags
 & 
MORE_THAN_ONE_PATH
)

1608 
Ÿh
 = 
ít
->
√xt
; oth; oth = oth->next) {

1609 i‡((
Ÿh
->
su•e˘
->
commô
 != commit) ||

1610 !
	`°rcmp
(
Ÿh
->
su•e˘
->
∑th
, suspect->path))

1612 
commô
->
obje˘
.
Êags
 |
MORE_THAN_ONE_PATH
;

1618 
ít
 = 
sb
->ít;É¡;É¡ =É¡->
√xt
) {

1619 i‡(
›ti⁄
 & 
OUTPUT_PORCELAIN
)

1620 
	`emô_p‹˚œö
(
sb
, 
ít
);

1622 
	`emô_Ÿhî
(
sb
, 
ít
, 
›ti⁄
);

1625 
	}
}

1631 
	$¥ï¨e_löes
(
sc‹ebﬂrd
 *
sb
)

1633 c⁄° *
buf
 = 
sb
->
föÆ_buf
;

1634 
Àn
 = 
sb
->
föÆ_buf_size
;

1635 
num
 = 0, 
öcom∂ëe
 = 0, 
bﬁ
 = 1;

1637 i‡(
Àn
 && 
buf
[len-1] != '\n')

1638 
öcom∂ëe
++;

1639 
Àn
--) {

1640 i‡(
bﬁ
) {

1641 
sb
->
löío
 = 
	`xªÆloc
(sb->lineno,

1642 (* ) * (
num
 + 1));

1643 
sb
->
löío
[
num
] = 
buf
 - sb->
föÆ_buf
;

1644 
bﬁ
 = 0;

1646 i‡(*
buf
++ == '\n') {

1647 
num
++;

1648 
bﬁ
 = 1;

1651 
sb
->
löío
 = 
	`xªÆloc
(sb->lineno,

1652 (* ) * (
num
 + 
öcom∂ëe
 + 1));

1653 
sb
->
löío
[
num
 + 
öcom∂ëe
] = 
buf
 - sb->
föÆ_buf
;

1654 
sb
->
num_löes
 = 
num
 + 
öcom∂ëe
;

1655  
sb
->
num_löes
;

1656 
	}
}

1663 
	$ªad_™˚°ry
(c⁄° *
gø·_fûe
)

1665 
FILE
 *
Â
 = 
	`f›í
(
gø·_fûe
, "r");

1666 
buf
[1024];

1667 i‡(!
Â
)

1669 
	`fgës
(
buf
, (buf), 
Â
)) {

1671 
Àn
 = 
	`°æí
(
buf
);

1672 
commô_gø·
 *
gø·
 = 
	`ªad_gø·_löe
(
buf
, 
Àn
);

1673 i‡(
gø·
)

1674 
	`ªgi°î_commô_gø·
(
gø·
, 0);

1676 
	`f˛o£
(
Â
);

1678 
	}
}

1683 
	$löío_width
(
löes
)

1685 
i
, 
width
;

1687 
width
 = 1, 
i
 = 10; i <
löes
 + 1; width++)

1688 
i
 *= 10;

1689  
width
;

1690 
	}
}

1696 
	$föd_Æignmít
(
sc‹ebﬂrd
 *
sb
, *
›ti⁄
)

1698 
l⁄ge°_§c_löes
 = 0;

1699 
l⁄ge°_d°_löes
 = 0;

1700 
œrge°_sc‹e
 = 0;

1701 
bœme_íåy
 *
e
;

1703 
e
 = 
sb
->
ít
;É;É =É->
√xt
) {

1704 
‹igö
 *
su•e˘
 = 
e
->suspect;

1705 
commô_öfo
 
ci
;

1706 
num
;

1708 i‡(
	`°rcmp
(
su•e˘
->
∑th
, 
sb
->path))

1709 *
›ti⁄
 |
OUTPUT_SHOW_NAME
;

1710 
num
 = 
	`°æí
(
su•e˘
->
∑th
);

1711 i‡(
l⁄ge°_fûe
 < 
num
)

1712 
l⁄ge°_fûe
 = 
num
;

1713 i‡(!(
su•e˘
->
commô
->
obje˘
.
Êags
 & 
METAINFO_SHOWN
)) {

1714 
su•e˘
->
commô
->
obje˘
.
Êags
 |
METAINFO_SHOWN
;

1715 
	`gë_commô_öfo
(
su•e˘
->
commô
, &
ci
, 1);

1716 
num
 = 
	`°æí
(
ci
.
auth‹
);

1717 i‡(
l⁄ge°_auth‹
 < 
num
)

1718 
l⁄ge°_auth‹
 = 
num
;

1720 
num
 = 
e
->
s_ o
 +É->
num_löes
;

1721 i‡(
l⁄ge°_§c_löes
 < 
num
)

1722 
l⁄ge°_§c_löes
 = 
num
;

1723 
num
 = 
e
->
 o
 +É->
num_löes
;

1724 i‡(
l⁄ge°_d°_löes
 < 
num
)

1725 
l⁄ge°_d°_löes
 = 
num
;

1726 i‡(
œrge°_sc‹e
 < 
	`ít_sc‹e
(
sb
, 
e
))

1727 
œrge°_sc‹e
 = 
	`ít_sc‹e
(
sb
, 
e
);

1729 
max_‹ig_digôs
 = 
	`löío_width
(
l⁄ge°_§c_löes
);

1730 
max_digôs
 = 
	`löío_width
(
l⁄ge°_d°_löes
);

1731 
max_sc‹e_digôs
 = 
	`löío_width
(
œrge°_sc‹e
);

1732 
	}
}

1738 
	$ßnôy_check_ªf˙t
(
sc‹ebﬂrd
 *
sb
)

1740 
bØ
 = 0;

1741 
bœme_íåy
 *
ít
;

1743 
ít
 = 
sb
->ít;É¡;É¡ =É¡->
√xt
) {

1745 i‡(
ít
->
su•e˘
->
ªf˙t
 <= 0) {

1746 
	`Ârötf
(
°dîr
, "%s in %s hasÇegativeÑefcnt %d\n",

1747 
ít
->
su•e˘
->
∑th
,

1748 
	`sha1_to_hex
(
ít
->
su•e˘
->
commô
->
obje˘
.
sha1
),

1749 
ít
->
su•e˘
->
ªf˙t
);

1750 
bØ
 = 1;

1753 
ít
 = 
sb
->ít;É¡;É¡ =É¡->
√xt
) {

1755 i‡(0 < 
ít
->
su•e˘
->
ªf˙t
)

1756 
ít
->
su•e˘
->
ªf˙t
 = -ent->suspect->refcnt;

1758 
ít
 = 
sb
->ít;É¡;É¡ =É¡->
√xt
) {

1763 
found
;

1764 
bœme_íåy
 *
e
;

1765 
‹igö
 *
su•e˘
 = 
ít
->suspect;

1767 i‡(0 < 
su•e˘
->
ªf˙t
)

1769 
su•e˘
->
ªf˙t
 = -suspect->refcnt;

1770 
found
 = 0, 
e
 = 
sb
->
ít
;É;É =É->
√xt
) {

1771 i‡(
e
->
su•e˘
 != suspect)

1773 
found
++;

1775 i‡(
su•e˘
->
ªf˙t
 !
found
) {

1776 
	`Ârötf
(
°dîr
, "%s in %s hasÑefcnt %d,Çot %d\n",

1777 
ít
->
su•e˘
->
∑th
,

1778 
	`sha1_to_hex
(
ít
->
su•e˘
->
commô
->
obje˘
.
sha1
),

1779 
ít
->
su•e˘
->
ªf˙t
, 
found
);

1780 
bØ
 = 2;

1783 i‡(
bØ
) {

1784 
›t
 = 0160;

1785 
	`föd_Æignmít
(
sb
, &
›t
);

1786 
	`ouçut
(
sb
, 
›t
);

1787 
	`dõ
("BØ %d!", 
bØ
);

1789 
	}
}

1795 
	$has_∑th_ö_w‹k_åì
(c⁄° *
∑th
)

1797 
°©
 
°
;

1798  !
	`l°©
(
∑th
, &
°
);

1799 
	}
}

1801 
	$∑r£_sc‹e
(c⁄° *
¨g
)

1803 *
íd
;

1804 
sc‹e
 = 
	`°πoul
(
¨g
, &
íd
, 10);

1805 i‡(*
íd
)

1807  
sc‹e
;

1808 
	}
}

1810 c⁄° *
	$add_¥efix
(c⁄° *
¥efix
, c⁄° *
∑th
)

1812 i‡(!
¥efix
 || !prefix[0])

1813  
∑th
;

1814  
	`¥efix_∑th
(
¥efix
, 
	`°æí
’ªfix), 
∑th
);

1815 
	}
}

1820 c⁄° *
	$∑r£_loc
(c⁄° *
•ec
,

1821 
sc‹ebﬂrd
 *
sb
, 
 o
,

1822 
begö
, *
ªt
)

1824 *
ãrm
;

1825 c⁄° *
löe
;

1826 
num
;

1827 
ªg_îr‹
;

1828 
ªgex_t
 
ªgexp
;

1829 
ªgm©ch_t
 
m©ch
[1];

1835 i‡(1 < 
begö
 && (
•ec
[0] == '+' || spec[0] == '-')) {

1836 
num
 = 
	`°πﬁ
(
•ec
 + 1, &
ãrm
, 10);

1837 i‡(
ãrm
 !
•ec
 + 1) {

1838 i‡(
•ec
[0] == '-')

1839 
num
 = 0 -Çum;

1840 i‡(0 < 
num
)

1841 *
ªt
 = 
begö
 + 
num
 - 2;

1842 i‡(!
num
)

1843 *
ªt
 = 
begö
;

1845 *
ªt
 = 
begö
 + 
num
;

1846  
ãrm
;

1848  
•ec
;

1850 
num
 = 
	`°πﬁ
(
•ec
, &
ãrm
, 10);

1851 i‡(
ãrm
 !
•ec
) {

1852 *
ªt
 = 
num
;

1853  
ãrm
;

1855 i‡(
•ec
[0] != '/')

1856  
•ec
;

1859 
ãrm
 = (*Ë
•ec
 + 1; *term && *term != '/';Åerm++) {

1860 i‡(*
ãrm
 == '\\')

1861 
ãrm
++;

1863 i‡(*
ãrm
 != '/')

1864  
•ec
;

1867 *
ãrm
 = 0;

1868 
begö
--;

1869 
löe
 = 
	`¡h_löe
(
sb
, 
begö
);

1871 i‡(!(
ªg_îr‹
 = 
	`ªgcomp
(&
ªgexp
, 
•ec
 + 1, 
REG_NEWLINE
)) &&

1872 !(
ªg_îr‹
 = 
	`ªgexec
(&
ªgexp
, 
löe
, 1, 
m©ch
, 0))) {

1873 c⁄° *
˝
 = 
löe
 + 
m©ch
[0].
rm_so
;

1874 c⁄° *
∆öe
;

1876 
begö
++ < 
 o
) {

1877 
∆öe
 = 
	`¡h_löe
(
sb
, 
begö
);

1878 i‡(
löe
 <
˝
 && c∞< 
∆öe
)

1880 
löe
 = 
∆öe
;

1882 *
ªt
 = 
begö
;

1883 
	`ªg‰ì
(&
ªgexp
);

1884 *
ãrm
++ = '/';

1885  
ãrm
;

1888 
îrbuf
[1024];

1889 
	`ªgîr‹
(
ªg_îr‹
, &
ªgexp
, 
îrbuf
, 1024);

1890 
	`dõ
("-LÖ¨amëî '%s': %s", 
•ec
 + 1, 
îrbuf
);

1892 
	}
}

1897 
	$¥ï¨e_bœme_ønge
(
sc‹ebﬂrd
 *
sb
,

1898 c⁄° *
bŸtomt›
,

1899 
 o
,

1900 *
bŸtom
, *
t›
)

1902 c⁄° *
ãrm
;

1904 
ãrm
 = 
	`∑r£_loc
(
bŸtomt›
, 
sb
, 
 o
, 1, 
bŸtom
);

1905 i‡(*
ãrm
 == ',') {

1906 
ãrm
 = 
	`∑r£_loc
—îm + 1, 
sb
, 
 o
, *
bŸtom
 + 1, 
t›
);

1907 i‡(*
ãrm
)

1908 
	`ußge
(
bœme_ußge
);

1910 i‡(*
ãrm
)

1911 
	`ußge
(
bœme_ußge
);

1912 
	}
}

1914 
	$gô_bœme_c⁄fig
(c⁄° *
v¨
, c⁄° *
vÆue
)

1916 i‡(!
	`°rcmp
(
v¨
, "blame.showroot")) {

1917 
show_roŸ
 = 
	`gô_c⁄fig_boﬁ
(
v¨
, 
vÆue
);

1920 i‡(!
	`°rcmp
(
v¨
, "blame.blankboundary")) {

1921 
bœnk_bound¨y
 = 
	`gô_c⁄fig_boﬁ
(
v¨
, 
vÆue
);

1924  
	`gô_deÁu…_c⁄fig
(
v¨
, 
vÆue
);

1925 
	}
}

1927 
commô
 *
	$Áke_w‹kög_åì_commô
(c⁄° *
∑th
, c⁄° *
c⁄ã¡s_‰om
)

1929 
commô
 *commit;

1930 
‹igö
 *origin;

1931 
hód_sha1
[20];

1932 *
buf
;

1933 c⁄° *
idít
;

1934 
fd
;

1935 
time_t
 
now
;

1936 
fö_size
;

1937 
size
, 
Àn
;

1938 
ˇche_íåy
 *
˚
;

1939 
mode
;

1941 i‡(
	`gë_sha1
("HEAD", 
hód_sha1
))

1942 
	`dõ
("No suchÑef: HEAD");

1944 
	`time
(&
now
);

1945 
commô
 = 
	`xˇŒoc
(1, (*commit));

1946 
commô
->
∑ª¡s
 = 
	`xˇŒoc
(1, (*commit->parents));

1947 
commô
->
∑ª¡s
->
ôem
 = 
	`lookup_commô_ª„ªn˚
(
hód_sha1
);

1948 
commô
->
obje˘
.
∑r£d
 = 1;

1949 
commô
->
d©e
 = 
now
;

1950 
commô
->
obje˘
.
ty≥
 = 
OBJ_COMMIT
;

1952 
‹igö
 = 
	`make_‹igö
(
commô
, 
∑th
);

1954 i‡(!
c⁄ã¡s_‰om
 || 
	`°rcmp
("-", contents_from)) {

1955 
°©
 
°
;

1956 c⁄° *
ªad_‰om
;

1958 i‡(
c⁄ã¡s_‰om
) {

1959 i‡(
	`°©
(
c⁄ã¡s_‰om
, &
°
) < 0)

1960 
	`dõ
("C™nŸ sèà%s", 
c⁄ã¡s_‰om
);

1961 
ªad_‰om
 = 
c⁄ã¡s_‰om
;

1964 i‡(
	`l°©
(
∑th
, &
°
) < 0)

1965 
	`dõ
("C™nŸÜ°© %s", 
∑th
);

1966 
ªad_‰om
 = 
∑th
;

1968 
fö_size
 = 
°
.
°_size
;

1969 
buf
 = 
	`xmÆloc
(
fö_size
+1);

1970 
mode
 = 
	`ˇn⁄_mode
(
°
.
°_mode
);

1971 
°
.
°_mode
 & 
S_IFMT
) {

1972 
S_IFREG
:

1973 
fd
 = 
	`›í
(
ªad_‰om
, 
O_RDONLY
);

1974 i‡(
fd
 < 0)

1975 
	`dõ
("ˇ¬Ÿ o≥¿%s", 
ªad_‰om
);

1976 i‡(
	`ªad_ö_fuŒ
(
fd
, 
buf
, 
fö_size
) != fin_size)

1977 
	`dõ
("ˇ¬ŸÑód %s", 
ªad_‰om
);

1979 
S_IFLNK
:

1980 i‡(
	`ªadlök
(
ªad_‰om
, 
buf
, 
fö_size
+1) != fin_size)

1981 
	`dõ
("ˇ¬ŸÑódlök %s", 
ªad_‰om
);

1984 
	`dõ
("unsuµ‹ãd fûêty≥ %s", 
ªad_‰om
);

1989 
c⁄ã¡s_‰om
 = "standard input";

1990 
buf
 = 
NULL
;

1991 
fö_size
 = 0;

1992 
mode
 = 0;

1994 
ssize_t
 
˙t
 = 8192;

1995 
buf
 = 
	`xªÆloc
(buf, 
fö_size
 + 
˙t
);

1996 
˙t
 = 
	`xªad
(0, 
buf
 + 
fö_size
, cnt);

1997 i‡(
˙t
 < 0)

1998 
	`dõ
("readÉrror %s from stdin",

1999 
	`°ªº‹
(
î∫o
));

2000 i‡(!
˙t
)

2002 
fö_size
 +
˙t
;

2004 
buf
 = 
	`xªÆloc
(buf, 
fö_size
 + 1);

2006 
buf
[
fö_size
] = 0;

2007 
‹igö
->
fûe
.
±r
 = 
buf
;

2008 
‹igö
->
fûe
.
size
 = 
fö_size
;

2009 
	`¥ëíd_sha1_fûe
(
buf
, 
fö_size
, 
blob_ty≥
, 
‹igö
->
blob_sha1
);

2010 
commô
->
utû
 = 
‹igö
;

2018 
	`disˇrd_ˇche
();

2019 
	`ªad_ˇche
();

2021 
Àn
 = 
	`°æí
(
∑th
);

2022 i‡(!
mode
) {

2023 
pos
 = 
	`ˇche_«me_pos
(
∑th
, 
Àn
);

2024 i‡(0 <
pos
)

2025 
mode
 = 
	`¡ohl
(
a˘ive_ˇche
[
pos
]->
˚_mode
);

2028 
mode
 = 
S_IFREG
 | 0644;

2030 
size
 = 
	`ˇche_íåy_size
(
Àn
);

2031 
˚
 = 
	`xˇŒoc
(1, 
size
);

2032 
	`hash˝y
(
˚
->
sha1
, 
‹igö
->
blob_sha1
);

2033 
	`mem˝y
(
˚
->
«me
, 
∑th
, 
Àn
);

2034 
˚
->
˚_Êags
 = 
	`¸óã_˚_Êags
(
Àn
, 0);

2035 
˚
->
˚_mode
 = 
	`¸óã_˚_mode
(
mode
);

2036 
	`add_ˇche_íåy
(
˚
, 
ADD_CACHE_OK_TO_ADD
|
ADD_CACHE_OK_TO_REPLACE
);

2043 
	`ˇche_åì_övÆid©e_∑th
(
a˘ive_ˇche_åì
, 
∑th
);

2045 
commô
->
buf„r
 = 
	`xmÆloc
(400);

2046 
idít
 = 
	`fmt_idít
("NŸ Commôãd Yë", "nŸ.commôãd.yë", 
NULL
, 0);

2047 
	`•rötf
(
commô
->
buf„r
,

2053 
	`sha1_to_hex
(
hód_sha1
),

2054 
idít
, idít, 
∑th
, 
c⁄ã¡s_‰om
 ? contents_from :Öath);

2055  
commô
;

2056 
	}
}

2058 
	$cmd_bœme
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

2060 
ªv_öfo
 
ªvs
;

2061 c⁄° *
∑th
;

2062 
sc‹ebﬂrd
 
sb
;

2063 
‹igö
 *
o
;

2064 
bœme_íåy
 *
ít
;

2065 
i
, 
£í_dashdash
, 
unk
, 
›t
;

2066 
bŸtom
, 
t›
, 
 o
;

2067 
ouçut_›ti⁄
 = 0;

2068 c⁄° *
ªvs_fûe
 = 
NULL
;

2069 c⁄° *
föÆ_commô_«me
 = 
NULL
;

2070 
ty≥
[10];

2071 c⁄° *
bŸtomt›
 = 
NULL
;

2072 c⁄° *
c⁄ã¡s_‰om
 = 
NULL
;

2074 
cmd_is_™nŸ©e
 = !
	`°rcmp
(
¨gv
[0], "annotate");

2076 
	`gô_c⁄fig
(
gô_bœme_c⁄fig
);

2077 
ßve_commô_buf„r
 = 0;

2079 
›t
 = 0;

2080 
£í_dashdash
 = 0;

2081 
unk
 = 
i
 = 1; i < 
¨gc
; i++) {

2082 c⁄° *
¨g
 = 
¨gv
[
i
];

2083 i‡(*
¨g
 != '-')

2085 i‡(!
	`°rcmp
("-b", 
¨g
))

2086 
bœnk_bound¨y
 = 1;

2087 i‡(!
	`°rcmp
("--roŸ", 
¨g
))

2088 
show_roŸ
 = 1;

2089 i‡(!
	`°rcmp
("-c", 
¨g
))

2090 
ouçut_›ti⁄
 |
OUTPUT_ANNOTATE_COMPAT
;

2091 i‡(!
	`°rcmp
("-t", 
¨g
))

2092 
ouçut_›ti⁄
 |
OUTPUT_RAW_TIMESTAMP
;

2093 i‡(!
	`°rcmp
("-l", 
¨g
))

2094 
ouçut_›ti⁄
 |
OUTPUT_LONG_OBJECT_NAME
;

2095 i‡(!
	`°rcmp
("-S", 
¨g
Ë&& ++
i
 < 
¨gc
)

2096 
ªvs_fûe
 = 
¨gv
[
i
];

2097 i‡(!
	`°∫cmp
("-M", 
¨g
, 2)) {

2098 
›t
 |
PICKAXE_BLAME_MOVE
;

2099 
bœme_move_sc‹e
 = 
	`∑r£_sc‹e
(
¨g
+2);

2101 i‡(!
	`°∫cmp
("-C", 
¨g
, 2)) {

2102 i‡(
›t
 & 
PICKAXE_BLAME_COPY
)

2103 
›t
 |
PICKAXE_BLAME_COPY_HARDER
;

2104 
›t
 |
PICKAXE_BLAME_COPY
 | 
PICKAXE_BLAME_MOVE
;

2105 
bœme_c›y_sc‹e
 = 
	`∑r£_sc‹e
(
¨g
+2);

2107 i‡(!
	`°∫cmp
("-L", 
¨g
, 2)) {

2108 i‡(!
¨g
[2]) {

2109 i‡(++
i
 >
¨gc
)

2110 
	`ußge
(
bœme_ußge
);

2111 
¨g
 = 
¨gv
[
i
];

2114 
¨g
 += 2;

2115 i‡(
bŸtomt›
)

2116 
	`dõ
("MoreÅhan one '-LÇ,m' option given");

2117 
bŸtomt›
 = 
¨g
;

2119 i‡(!
	`°rcmp
("--c⁄ã¡s", 
¨g
)) {

2120 i‡(++
i
 >
¨gc
)

2121 
	`ußge
(
bœme_ußge
);

2122 
c⁄ã¡s_‰om
 = 
¨gv
[
i
];

2124 i‡(!
	`°rcmp
("--ö¸emíèl", 
¨g
))

2125 
ö¸emíèl
 = 1;

2126 i‡(!
	`°rcmp
("--sc‹e-debug", 
¨g
))

2127 
ouçut_›ti⁄
 |
OUTPUT_SHOW_SCORE
;

2128 i‡(!
	`°rcmp
("-f", 
¨g
) ||

2129 !
	`°rcmp
("--show-«me", 
¨g
))

2130 
ouçut_›ti⁄
 |
OUTPUT_SHOW_NAME
;

2131 i‡(!
	`°rcmp
("-n", 
¨g
) ||

2132 !
	`°rcmp
("--show-numbî", 
¨g
))

2133 
ouçut_›ti⁄
 |
OUTPUT_SHOW_NUMBER
;

2134 i‡(!
	`°rcmp
("-p", 
¨g
) ||

2135 !
	`°rcmp
("--p‹˚œö", 
¨g
))

2136 
ouçut_›ti⁄
 |
OUTPUT_PORCELAIN
;

2137 i‡(!
	`°rcmp
("--", 
¨g
)) {

2138 
£í_dashdash
 = 1;

2139 
i
++;

2143 
¨gv
[
unk
++] = 
¨g
;

2146 i‡(!
ö¸emíèl
)

2147 
	`£tup_∑gî
();

2149 i‡(!
bœme_move_sc‹e
)

2150 
bœme_move_sc‹e
 = 
BLAME_DEFAULT_MOVE_SCORE
;

2151 i‡(!
bœme_c›y_sc‹e
)

2152 
bœme_c›y_sc‹e
 = 
BLAME_DEFAULT_COPY_SCORE
;

2183 i‡(
£í_dashdash
) {

2185 i‡(
¨gc
 <
i
)

2186 
	`ußge
(
bœme_ußge
);

2187 
∑th
 = 
	`add_¥efix
(
¥efix
, 
¨gv
[
i
]);

2188 i‡(
i
 + 1 =
¨gc
 - 1) {

2189 i‡(
unk
 != 1)

2190 
	`ußge
(
bœme_ußge
);

2191 
¨gv
[
unk
++] =árgv[
i
 + 1];

2193 i‡(
i
 + 1 !
¨gc
)

2195 
	`ußge
(
bœme_ußge
);

2198 
j
;

2199 
j
 = 
i
; !
£í_dashdash
 && j < 
¨gc
; j++)

2200 i‡(!
	`°rcmp
(
¨gv
[
j
], "--"))

2201 
£í_dashdash
 = 
j
;

2202 i‡(
£í_dashdash
) {

2203 i‡(
£í_dashdash
 + 1 !
¨gc
 - 1)

2204 
	`ußge
(
bœme_ußge
);

2205 
∑th
 = 
	`add_¥efix
(
¥efix
, 
¨gv
[
£í_dashdash
 + 1]);

2206 
j
 = 
i
; j < 
£í_dashdash
; j++)

2207 
¨gv
[
unk
++] =árgv[
j
];

2211 
∑th
 = 
	`add_¥efix
(
¥efix
, 
¨gv
[
i
]);

2212 i‡(
i
 + 1 =
¨gc
 - 1) {

2213 
föÆ_commô_«me
 = 
¨gv
[
i
 + 1];

2218 i‡(
unk
 =1 && !
	`has_∑th_ö_w‹k_åì
(
∑th
)) {

2219 
∑th
 = 
	`add_¥efix
(
¥efix
, 
¨gv
[
i
 + 1]);

2220 
föÆ_commô_«me
 = 
¨gv
[
i
];

2223 i‡(
i
 !
¨gc
 - 1)

2224 
	`ußge
(
bœme_ußge
);

2226 i‡(!
	`has_∑th_ö_w‹k_åì
(
∑th
))

2227 
	`dõ
("cannot statÖath %s: %s",

2228 
∑th
, 
	`°ªº‹
(
î∫o
));

2232 i‡(
föÆ_commô_«me
)

2233 
¨gv
[
unk
++] = 
föÆ_commô_«me
;

2239 
¨gv
[
unk
++] = "--";

2240 
¨gv
[
unk
] = 
NULL
;

2242 
	`öô_ªvisi⁄s
(&
ªvs
, 
NULL
);

2243 
	`£tup_ªvisi⁄s
(
unk
, 
¨gv
, &
ªvs
, 
NULL
);

2244 
	`mem£t
(&
sb
, 0, (sb));

2250 
i
 = 0; i < 
ªvs
.
≥ndög
.
ƒ
; i++) {

2251 
obje˘
 *
obj
 = 
ªvs
.
≥ndög
.
obje˘s
[
i
].
ôem
;

2252 i‡(
obj
->
Êags
 & 
UNINTERESTING
)

2254 
obj
->
ty≥
 =
OBJ_TAG
)

2255 
obj
 = 
	`dîef_èg
(obj, 
NULL
, 0);

2256 i‡(
obj
->
ty≥
 !
OBJ_COMMIT
)

2257 
	`dõ
("Non commit %s?",

2258 
ªvs
.
≥ndög
.
obje˘s
[
i
].
«me
);

2259 i‡(
sb
.
föÆ
)

2260 
	`dõ
("MoreÅhan one commitÅo dig from %sánd %s?",

2261 
ªvs
.
≥ndög
.
obje˘s
[
i
].
«me
,

2262 
föÆ_commô_«me
);

2263 
sb
.
föÆ
 = (
commô
 *Ë
obj
;

2264 
föÆ_commô_«me
 = 
ªvs
.
≥ndög
.
obje˘s
[
i
].
«me
;

2267 i‡(!
sb
.
föÆ
) {

2273 
sb
.
föÆ
 = 
	`Áke_w‹kög_åì_commô
(
∑th
, 
c⁄ã¡s_‰om
);

2274 
	`add_≥ndög_obje˘
(&
ªvs
, &(
sb
.
föÆ
->
obje˘
), ":");

2276 i‡(
c⁄ã¡s_‰om
)

2277 
	`dõ
("Cannot use --contents with final commit objectÇame");

2284 
	`¥ï¨e_ªvisi⁄_wÆk
(&
ªvs
);

2286 i‡(
	`is_nuŒ_sha1
(
sb
.
föÆ
->
obje˘
.
sha1
)) {

2287 *
buf
;

2288 
o
 = 
sb
.
föÆ
->
utû
;

2289 
buf
 = 
	`xmÆloc
(
o
->
fûe
.
size
 + 1);

2290 
	`mem˝y
(
buf
, 
o
->
fûe
.
±r
, o->fûe.
size
 + 1);

2291 
sb
.
föÆ_buf
 = 
buf
;

2292 
sb
.
föÆ_buf_size
 = 
o
->
fûe
.
size
;

2295 
o
 = 
	`gë_‹igö
(&
sb
, sb.
föÆ
, 
∑th
);

2296 i‡(
	`fûl_blob_sha1
(
o
))

2297 
	`dõ
("nÿsuchÖ©h %†ö %s", 
∑th
, 
föÆ_commô_«me
);

2299 
sb
.
föÆ_buf
 = 
	`ªad_sha1_fûe
(
o
->
blob_sha1
, 
ty≥
,

2300 &
sb
.
föÆ_buf_size
);

2302 
num_ªad_blob
++;

2303 
 o
 = 
	`¥ï¨e_löes
(&
sb
);

2305 
bŸtom
 = 
t›
 = 0;

2306 i‡(
bŸtomt›
)

2307 
	`¥ï¨e_bœme_ønge
(&
sb
, 
bŸtomt›
, 
 o
, &
bŸtom
, &
t›
);

2308 i‡(
bŸtom
 && 
t›
 &&Åop < bottom) {

2309 
tmp
;

2310 
tmp
 = 
t›
;Å› = 
bŸtom
; bottom =Åmp;

2312 i‡(
bŸtom
 < 1)

2313 
bŸtom
 = 1;

2314 i‡(
t›
 < 1)

2315 
t›
 = 
 o
;

2316 
bŸtom
--;

2317 i‡(
 o
 < 
t›
)

2318 
	`dõ
("fûê%†ha†⁄ly %luÜöes", 
∑th
, 
 o
);

2320 
ít
 = 
	`xˇŒoc
(1, (*ent));

2321 
ít
->
 o
 = 
bŸtom
;

2322 
ít
->
num_löes
 = 
t›
 - 
bŸtom
;

2323 
ít
->
su•e˘
 = 
o
;

2324 
ít
->
s_ o
 = 
bŸtom
;

2326 
sb
.
ít
 =Ént;

2327 
sb
.
∑th
 =Öath;

2329 i‡(
ªvs_fûe
 && 
	`ªad_™˚°ry
(revs_file))

2330 
	`dõ
("reading graft file %s failed: %s",

2331 
ªvs_fûe
, 
	`°ªº‹
(
î∫o
));

2333 
	`assign_bœme
(&
sb
, &
ªvs
, 
›t
);

2335 i‡(
ö¸emíèl
)

2338 
	`cﬂÀs˚
(&
sb
);

2340 i‡(!(
ouçut_›ti⁄
 & 
OUTPUT_PORCELAIN
))

2341 
	`föd_Æignmít
(&
sb
, &
ouçut_›ti⁄
);

2343 
	`ouçut
(&
sb
, 
ouçut_›ti⁄
);

2344 
	`‰ì
((*)
sb
.
föÆ_buf
);

2345 
ít
 = 
sb
.ent;Ént; ) {

2346 
bœme_íåy
 *
e
 = 
ít
->
√xt
;

2347 
	`‰ì
(
ít
);

2348 
ít
 = 
e
;

2351 i‡(
DEBUG
) {

2352 
	`¥ötf
("numÑód blob: %d\n", 
num_ªad_blob
);

2353 
	`¥ötf
("num gëÖ©ch: %d\n", 
num_gë_∑tch
);

2354 
	`¥ötf
("num commôs: %d\n", 
num_commôs
);

2357 
	}
}

	@builtin-branch.c

8 
	~"ˇche.h
"

9 
	~"cﬁ‹.h
"

10 
	~"ªfs.h
"

11 
	~"commô.h
"

12 
	~"buûtö.h
"

14 c⁄° 
	gbuûtö_bønch_ußge
[] =

17 
	#REF_UNKNOWN_TYPE
 0x00

	)

18 
	#REF_LOCAL_BRANCH
 0x01

	)

19 
	#REF_REMOTE_BRANCH
 0x02

	)

20 
	#REF_TAG
 0x04

	)

22 c⁄° *
	ghód
;

23 
	ghód_sha1
[20];

25 
	gbønch_u£_cﬁ‹
;

26 
	gbønch_cﬁ‹s
[][
COLOR_MAXLEN
] = {

33 
	ecﬁ‹_bønch
 {

34 
	mCOLOR_BRANCH_RESET
 = 0,

35 
	mCOLOR_BRANCH_PLAIN
 = 1,

36 
	mCOLOR_BRANCH_REMOTE
 = 2,

37 
	mCOLOR_BRANCH_LOCAL
 = 3,

38 
	mCOLOR_BRANCH_CURRENT
 = 4,

41 
	$∑r£_bønch_cﬁ‹_¶Ÿ
(c⁄° *
v¨
, 
ofs
)

43 i‡(!
	`°rˇ£cmp
(
v¨
+
ofs
, "plain"))

44  
COLOR_BRANCH_PLAIN
;

45 i‡(!
	`°rˇ£cmp
(
v¨
+
ofs
, "reset"))

46  
COLOR_BRANCH_RESET
;

47 i‡(!
	`°rˇ£cmp
(
v¨
+
ofs
, "remote"))

48  
COLOR_BRANCH_REMOTE
;

49 i‡(!
	`°rˇ£cmp
(
v¨
+
ofs
, "local"))

50  
COLOR_BRANCH_LOCAL
;

51 i‡(!
	`°rˇ£cmp
(
v¨
+
ofs
, "current"))

52  
COLOR_BRANCH_CURRENT
;

53 
	`dõ
("bad c⁄fig v¨übÀ '%s'", 
v¨
);

54 
	}
}

56 
	$gô_bønch_c⁄fig
(c⁄° *
v¨
, c⁄° *
vÆue
)

58 i‡(!
	`°rcmp
(
v¨
, "color.branch")) {

59 
bønch_u£_cﬁ‹
 = 
	`gô_c⁄fig_cﬁ‹boﬁ
(
v¨
, 
vÆue
);

62 i‡(!
	`°∫cmp
(
v¨
, "color.branch.", 13)) {

63 
¶Ÿ
 = 
	`∑r£_bønch_cﬁ‹_¶Ÿ
(
v¨
, 13);

64 
	`cﬁ‹_∑r£
(
vÆue
, 
v¨
, 
bønch_cﬁ‹s
[
¶Ÿ
]);

67  
	`gô_deÁu…_c⁄fig
(
v¨
, 
vÆue
);

68 
	}
}

70 c⁄° *
	$bønch_gë_cﬁ‹
(
cﬁ‹_bønch
 
ix
)

72 i‡(
bønch_u£_cﬁ‹
)

73  
bønch_cﬁ‹s
[
ix
];

75 
	}
}

77 
	$dñëe_bønches
(
¨gc
, c⁄° **
¨gv
, 
f‹˚
, 
köds
)

79 
commô
 *
ªv
, *
hód_ªv
 = head_rev;

80 
sha1
[20];

81 *
«me
 = 
NULL
;

82 c⁄° *
fmt
, *
ªmŸe
;

83 
i
;

84 
ªt
 = 0;

86 
köds
) {

87 
REF_REMOTE_BRANCH
:

88 
fmt
 = "refs/remotes/%s";

89 
ªmŸe
 = "remote ";

90 
f‹˚
 = 1;

92 
REF_LOCAL_BRANCH
:

93 
fmt
 = "refs/heads/%s";

94 
ªmŸe
 = "";

97 
	`dõ
("cannot use -a with -d");

100 i‡(!
f‹˚
) {

101 
hód_ªv
 = 
	`lookup_commô_ª„ªn˚
(
hód_sha1
);

102 i‡(!
hód_ªv
)

103 
	`dõ
("Couldn'tÜook up commit object for HEAD");

105 
i
 = 0; i < 
¨gc
; i++) {

106 i‡(
köds
 =
REF_LOCAL_BRANCH
 && !
	`°rcmp
(
hód
, 
¨gv
[
i
])) {

107 
	`îr‹
("Cannot deleteÅhe branch '%s' "

108 "which youáª cuºíéy on.", 
¨gv
[
i
]);

109 
ªt
 = 1;

113 i‡(
«me
)

114 
	`‰ì
(
«me
);

116 
«me
 = 
	`x°rdup
(
	`mk∑th
(
fmt
, 
¨gv
[
i
]));

117 i‡(!
	`ªsﬁve_ªf
(
«me
, 
sha1
, 1, 
NULL
)) {

118 
	`îr‹
("%sbranch '%s'Çot found.",

119 
ªmŸe
, 
¨gv
[
i
]);

120 
ªt
 = 1;

124 
ªv
 = 
	`lookup_commô_ª„ªn˚
(
sha1
);

125 i‡(!
ªv
) {

126 
	`îr‹
("Couldn'àlook u∞commô obje˘ f‹ '%s'", 
«me
);

127 
ªt
 = 1;

136 i‡(!
f‹˚
 &&

137 !
	`ö_mîge_ba£s
(
ªv
, 
hód_ªv
)) {

138 
	`îr‹
("The branch '%s' isÇotá strict subset of "

141 "ru¿'gô bønch -D %s'.", 
¨gv
[
i
],árgv[i]);

142 
ªt
 = 1;

146 i‡(
	`dñëe_ªf
(
«me
, 
sha1
)) {

147 
	`îr‹
("Eº‹ dñëög %sbønch '%s'", 
ªmŸe
,

148 
¨gv
[
i
]);

149 
ªt
 = 1;

151 
	`¥ötf
("Dñëed %sbønch %s.\n", 
ªmŸe
, 
¨gv
[
i
]);

155 i‡(
«me
)

156 
	`‰ì
(
«me
);

158 (
ªt
);

159 
	}
}

161 
	sªf_ôem
 {

162 *
	m«me
;

163 
	mköd
;

164 
	msha1
[20];

167 
	sªf_li°
 {

168 
	mödex
, 
	mÆloc
, 
	mmaxwidth
;

169 
ªf_ôem
 *
	mli°
;

170 
	mköds
;

173 
	$≠≥nd_ªf
(c⁄° *
ª‚ame
, c⁄° *
sha1
, 
Êags
, *
cb_d©a
)

175 
ªf_li°
 *ªf_li° = (ªf_li°*)(
cb_d©a
);

176 
ªf_ôem
 *
√wôem
;

177 
köd
 = 
REF_UNKNOWN_TYPE
;

178 
Àn
;

181 i‡(!
	`°∫cmp
(
ª‚ame
, "refs/heads/", 11)) {

182 
köd
 = 
REF_LOCAL_BRANCH
;

183 
ª‚ame
 += 11;

184 } i‡(!
	`°∫cmp
(
ª‚ame
, "refs/remotes/", 13)) {

185 
köd
 = 
REF_REMOTE_BRANCH
;

186 
ª‚ame
 += 13;

187 } i‡(!
	`°∫cmp
(
ª‚ame
, "refs/tags/", 10)) {

188 
köd
 = 
REF_TAG
;

189 
ª‚ame
 += 10;

193 i‡((
köd
 & 
ªf_li°
->
köds
) == 0)

197 i‡(
ªf_li°
->
ödex
 >ªf_li°->
Æloc
) {

198 
ªf_li°
->
Æloc
 = 
	`Æloc_ƒ
(ref_list->alloc);

199 
ªf_li°
->
li°
 = 
	`xªÆloc
(ref_list->list,

200 
ªf_li°
->
Æloc
 * (
ªf_ôem
));

204 
√wôem
 = &(
ªf_li°
->
li°
[ªf_li°->
ödex
++]);

205 
√wôem
->
«me
 = 
	`x°rdup
(
ª‚ame
);

206 
√wôem
->
köd
 = kind;

207 
	`hash˝y
(
√wôem
->
sha1
, sha1);

208 
Àn
 = 
	`°æí
(
√wôem
->
«me
);

209 i‡(
Àn
 > 
ªf_li°
->
maxwidth
)

210 
ªf_li°
->
maxwidth
 = 
Àn
;

213 
	}
}

215 
	$‰ì_ªf_li°
(
ªf_li°
 *ref_list)

217 
i
;

219 
i
 = 0; i < 
ªf_li°
->
ödex
; i++)

220 
	`‰ì
(
ªf_li°
->
li°
[
i
].
«me
);

221 
	`‰ì
(
ªf_li°
->
li°
);

222 
	}
}

224 
	$ªf_cmp
(c⁄° *
r1
, c⁄° *
r2
)

226 
ªf_ôem
 *
c1
 = (ªf_ôem *)(
r1
);

227 
ªf_ôem
 *
c2
 = (ªf_ôem *)(
r2
);

229 i‡(
c1
->
köd
 !
c2
->kind)

230  
c1
->
köd
 - 
c2
->kind;

231  
	`°rcmp
(
c1
->
«me
, 
c2
->name);

232 
	}
}

234 
	$¥öt_ªf_ôem
(
ªf_ôem
 *
ôem
, 
maxwidth
, 
vîbo£
,

235 
abbªv
, 
cuºít
)

237 
c
;

238 
cﬁ‹
;

239 
commô
 *commit;

240 
subje˘
[256];

242 
ôem
->
köd
) {

243 
REF_LOCAL_BRANCH
:

244 
cﬁ‹
 = 
COLOR_BRANCH_LOCAL
;

246 
REF_REMOTE_BRANCH
:

247 
cﬁ‹
 = 
COLOR_BRANCH_REMOTE
;

250 
cﬁ‹
 = 
COLOR_BRANCH_PLAIN
;

254 
c
 = ' ';

255 i‡(
cuºít
) {

256 
c
 = '*';

257 
cﬁ‹
 = 
COLOR_BRANCH_CURRENT
;

260 i‡(
vîbo£
) {

261 
commô
 = 
	`lookup_commô
(
ôem
->
sha1
);

262 i‡(
commô
 && !
	`∑r£_commô
(commit))

263 
	`¥ëty_¥öt_commô
(
CMIT_FMT_ONELINE
, 
commô
, ~0,

264 
subje˘
, (subject), 0,

265 
NULL
, NULL, 0);

267 
	`°r˝y
(
subje˘
, " **** invalidÑef ****");

268 
	`¥ötf
("%¯%s%-*s%†%†%s\n", 
c
, 
	`bønch_gë_cﬁ‹
(
cﬁ‹
),

269 
maxwidth
, 
ôem
->
«me
,

270 
	`bønch_gë_cﬁ‹
(
COLOR_BRANCH_RESET
),

271 
	`föd_unique_abbªv
(
ôem
->
sha1
, 
abbªv
), 
subje˘
);

273 
	`¥ötf
("%¯%s%s%s\n", 
c
, 
	`bønch_gë_cﬁ‹
(
cﬁ‹
), 
ôem
->
«me
,

274 
	`bønch_gë_cﬁ‹
(
COLOR_BRANCH_RESET
));

276 
	}
}

278 
	$¥öt_ªf_li°
(
köds
, 
dëached
, 
vîbo£
, 
abbªv
)

280 
i
;

281 
ªf_li°
Ñef_list;

283 
	`mem£t
(&
ªf_li°
, 0, (ref_list));

284 
ªf_li°
.
köds
 = kinds;

285 
	`f‹_óch_ªf
(
≠≥nd_ªf
, &
ªf_li°
);

287 
	`qs‹t
(
ªf_li°
.
li°
,Ñef_li°.
ödex
, (
ªf_ôem
), 
ªf_cmp
);

289 
dëached
 = (dëached && (
köds
 & 
REF_LOCAL_BRANCH
));

290 i‡(
dëached
) {

291 
ªf_ôem
 
ôem
;

292 
ôem
.
«me
 = "(no branch)";

293 
ôem
.
köd
 = 
REF_LOCAL_BRANCH
;

294 
	`hash˝y
(
ôem
.
sha1
, 
hód_sha1
);

295 i‡(
	`°æí
(
ôem
.
«me
Ë> 
ªf_li°
.
maxwidth
)

296 
ªf_li°
.
maxwidth
 = 
	`°æí
(
ôem
.
«me
);

297 
	`¥öt_ªf_ôem
(&
ôem
, 
ªf_li°
.
maxwidth
, 
vîbo£
, 
abbªv
, 1);

300 
i
 = 0; i < 
ªf_li°
.
ödex
; i++) {

301 
cuºít
 = !
dëached
 &&

302 (
ªf_li°
.
li°
[
i
].
köd
 =
REF_LOCAL_BRANCH
) &&

303 !
	`°rcmp
(
ªf_li°
.
li°
[
i
].
«me
, 
hód
);

304 
	`¥öt_ªf_ôem
(&
ªf_li°
.
li°
[
i
],Ñef_li°.
maxwidth
, 
vîbo£
,

305 
abbªv
, 
cuºít
);

308 
	`‰ì_ªf_li°
(&
ªf_li°
);

309 
	}
}

311 
	$¸óã_bønch
(c⁄° *
«me
, c⁄° *
°¨t_«me
,

312 *
°¨t_sha1
,

313 
f‹˚
, 
ªÊog
)

315 
ªf_lock
 *
lock
;

316 
commô
 *commit;

317 
sha1
[20];

318 
ªf
[
PATH_MAX
], 
msg
[PATH_MAX + 20];

319 
f‹cög
 = 0;

321 
	`¢¥ötf
(
ªf
, Ñef, "ªfs/hóds/%s", 
«me
);

322 i‡(
	`check_ªf_f‹m©
(
ªf
))

323 
	`dõ
("'%s' i†nŸá vÆid bønchÇame.", 
«me
);

325 i‡(
	`ªsﬁve_ªf
(
ªf
, 
sha1
, 1, 
NULL
)) {

326 i‡(!
f‹˚
)

327 
	`dõ
("A bønchÇamed '%s'áÃódyÉxi°s.", 
«me
);

328 i‡(!
	`is_b¨e_ªposô‹y
(Ë&& !
	`°rcmp
(
hód
, 
«me
))

329 
	`dõ
("Cannot force updateÅhe current branch.");

330 
f‹cög
 = 1;

333 i‡(
°¨t_sha1
)

335 
	`hash˝y
(
sha1
, 
°¨t_sha1
);

336 i‡(
	`gë_sha1
(
°¨t_«me
, 
sha1
))

337 
	`dõ
("NŸá vÆid obje˘Çame: '%s'.", 
°¨t_«me
);

339 i‡((
commô
 = 
	`lookup_commô_ª„ªn˚
(
sha1
)Ë=
NULL
)

340 
	`dõ
("NŸá vÆid bønchÖoöt: '%s'.", 
°¨t_«me
);

341 
	`hash˝y
(
sha1
, 
commô
->
obje˘
.sha1);

343 
lock
 = 
	`lock_™y_ªf_f‹_upd©e
(
ªf
, 
NULL
);

344 i‡(!
lock
)

345 
	`dõ
("FaûedÅÿlockÑe‡f‹ upd©e: %s.", 
	`°ªº‹
(
î∫o
));

347 i‡(
ªÊog
)

348 
log_Æl_ªf_upd©es
 = 1;

350 i‡(
f‹cög
)

351 
	`¢¥ötf
(
msg
,  msg, "branch: Reset from %s",

352 
°¨t_«me
);

354 
	`¢¥ötf
(
msg
,  msg, "branch: Created from %s",

355 
°¨t_«me
);

357 i‡(
	`wrôe_ªf_sha1
(
lock
, 
sha1
, 
msg
) < 0)

358 
	`dõ
("FaûedÅÿwrôêªf: %s.", 
	`°ªº‹
(
î∫o
));

359 
	}
}

361 
	$ª«me_bønch
(c⁄° *
ﬁd«me
, c⁄° *
√w«me
, 
f‹˚
)

363 
ﬁdªf
[
PATH_MAX
], 
√wªf
[PATH_MAX], 
logmsg
[PATH_MAX*2 + 100];

364 
sha1
[20];

366 i‡(!
ﬁd«me
)

367 
	`dõ
("cannotÑenameÅhe current branch whileÇot onány.");

369 i‡(
	`¢¥ötf
(
ﬁdªf
, (ﬁdªf), "ªfs/hóds/%s", 
ﬁd«me
) > (oldref))

370 
	`dõ
("Old branchnameÅooÜong");

372 i‡(
	`check_ªf_f‹m©
(
ﬁdªf
))

373 
	`dõ
("InvÆid bønchÇame: %s", 
ﬁdªf
);

375 i‡(
	`¢¥ötf
(
√wªf
, “ewªf), "ªfs/hóds/%s", 
√w«me
) > (newref))

376 
	`dõ
("New branchnameÅooÜong");

378 i‡(
	`check_ªf_f‹m©
(
√wªf
))

379 
	`dõ
("InvÆid bønchÇame: %s", 
√wªf
);

381 i‡(
	`ªsﬁve_ªf
(
√wªf
, 
sha1
, 1, 
NULL
Ë&& !
f‹˚
)

382 
	`dõ
("A bønchÇamed '%s'áÃódyÉxi°s.", 
√w«me
);

384 
	`¢¥ötf
(
logmsg
, (logmsg), "Branch:Ñenamed %sÅo %s",

385 
ﬁdªf
, 
√wªf
);

387 i‡(
	`ª«me_ªf
(
ﬁdªf
, 
√wªf
, 
logmsg
))

388 
	`dõ
("BranchÑename failed");

391 i‡(!
	`°rcmp
(
ﬁd«me
, 
hód
Ë&& 
	`¸óã_symªf
("HEAD", 
√wªf
, 
NULL
))

392 
	`dõ
("BønchÑíamedÅÿ%s, buàHEAD i†nŸ upd©ed!", 
√w«me
);

393 
	}
}

395 
	$cmd_bønch
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

397 
dñëe
 = 0, 
f‹˚_dñëe
 = 0, 
f‹˚_¸óã
 = 0;

398 
ª«me
 = 0, 
f‹˚_ª«me
 = 0;

399 
vîbo£
 = 0, 
abbªv
 = 
DEFAULT_ABBREV
, 
dëached
 = 0;

400 
ªÊog
 = 0;

401 
köds
 = 
REF_LOCAL_BRANCH
;

402 
i
;

404 
	`gô_c⁄fig
(
gô_bønch_c⁄fig
);

406 
i
 = 1; i < 
¨gc
; i++) {

407 c⁄° *
¨g
 = 
¨gv
[
i
];

409 i‡(
¨g
[0] != '-')

411 i‡(!
	`°rcmp
(
¨g
, "--")) {

412 
i
++;

415 i‡(!
	`°rcmp
(
¨g
, "-d")) {

416 
dñëe
 = 1;

419 i‡(!
	`°rcmp
(
¨g
, "-D")) {

420 
dñëe
 = 1;

421 
f‹˚_dñëe
 = 1;

424 i‡(!
	`°rcmp
(
¨g
, "-f")) {

425 
f‹˚_¸óã
 = 1;

428 i‡(!
	`°rcmp
(
¨g
, "-m")) {

429 
ª«me
 = 1;

432 i‡(!
	`°rcmp
(
¨g
, "-M")) {

433 
ª«me
 = 1;

434 
f‹˚_ª«me
 = 1;

437 i‡(!
	`°rcmp
(
¨g
, "-r")) {

438 
köds
 = 
REF_REMOTE_BRANCH
;

441 i‡(!
	`°rcmp
(
¨g
, "-a")) {

442 
köds
 = 
REF_REMOTE_BRANCH
 | 
REF_LOCAL_BRANCH
;

445 i‡(!
	`°rcmp
(
¨g
, "-l")) {

446 
ªÊog
 = 1;

449 i‡(!
	`°∫cmp
(
¨g
, "--abbrev=", 9)) {

450 
abbªv
 = 
	`©oi
(
¨g
+9);

453 i‡(!
	`°rcmp
(
¨g
, "-v")) {

454 
vîbo£
 = 1;

457 i‡(!
	`°rcmp
(
¨g
, "--color")) {

458 
bønch_u£_cﬁ‹
 = 1;

461 i‡(!
	`°rcmp
(
¨g
, "--no-color")) {

462 
bønch_u£_cﬁ‹
 = 0;

465 
	`ußge
(
buûtö_bønch_ußge
);

468 i‡((
dñëe
 && 
ª«me
Ë|| (dñëê&& 
f‹˚_¸óã
) ||

469 (
ª«me
 && 
f‹˚_¸óã
))

470 
	`ußge
(
buûtö_bønch_ußge
);

472 
hód
 = 
	`x°rdup
(
	`ªsﬁve_ªf
("HEAD", 
hód_sha1
, 0, 
NULL
));

473 i‡(!
hód
)

474 
	`dõ
("FailedÅoÑesolve HEADásá validÑef.");

475 i‡(!
	`°rcmp
(
hód
, "HEAD")) {

476 
dëached
 = 1;

479 i‡(
	`°∫cmp
(
hód
, "refs/heads/", 11))

480 
	`dõ
("HEADÇot found belowÑefs/heads!");

481 
hód
 += 11;

484 i‡(
dñëe
)

485  
	`dñëe_bønches
(
¨gc
 - 
i
, 
¨gv
 + i, 
f‹˚_dñëe
, 
köds
);

486 i‡(
i
 =
¨gc
)

487 
	`¥öt_ªf_li°
(
köds
, 
dëached
, 
vîbo£
, 
abbªv
);

488 i‡(
ª«me
 && (
i
 =
¨gc
 - 1))

489 
	`ª«me_bønch
(
hód
, 
¨gv
[
i
], 
f‹˚_ª«me
);

490 i‡(
ª«me
 && (
i
 =
¨gc
 - 2))

491 
	`ª«me_bønch
(
¨gv
[
i
],árgv[ò+ 1], 
f‹˚_ª«me
);

492 i‡(
i
 =
¨gc
 - 1)

493 
	`¸óã_bønch
(
¨gv
[
i
], 
hód
, 
hód_sha1
, 
f‹˚_¸óã
, 
ªÊog
);

494 i‡(
i
 =
¨gc
 - 2)

495 
	`¸óã_bønch
(
¨gv
[
i
],árgv[i+1], 
NULL
, 
f‹˚_¸óã
, 
ªÊog
);

497 
	`ußge
(
buûtö_bønch_ußge
);

500 
	}
}

	@builtin-cat-file.c

6 
	~"ˇche.h
"

7 
	~"exec_cmd.h
"

8 
	~"èg.h
"

9 
	~"åì.h
"

10 
	~"buûtö.h
"

12 
	$µröt_èg
(c⁄° *
sha1
, c⁄° *
buf
, 
size
)

15 c⁄° *
ídp
 = 
buf
 + 
size
;

16 c⁄° *
˝
 = 
buf
;

18 
˝
 < 
ídp
) {

19 
c
 = *
˝
++;

20 i‡(
c
 != '\n')

22 i‡(7 <
ídp
 - 
˝
 && !
	`memcmp
("tagger ", cp, 7)) {

23 c⁄° *
èggî
 = 
˝
;

28 
	`wrôe_‹_dõ
(1, 
buf
, 
˝
 - buf);

34 
˝
 < 
ídp
) {

35 i‡(*
˝
++ == '\n') {

39 c⁄° *
•
 = 
èggî
;

40 *
ï
;

41 
d©e
;

42 
tz
;

43 
•
 < 
˝
 && *sp != '>')

44 
•
++;

45 i‡(
•
 =
˝
) {

47 
	`wrôe_‹_dõ
(1, 
èggî
,

48 
˝
 - 
èggî
);

51 
•
 < 
˝
 &&

52 !('0' <*
•
 && *sp <= '9'))

53 
•
++;

54 
	`wrôe_‹_dõ
(1, 
èggî
, 
•
 -Åagger);

55 
d©e
 = 
	`°πoul
(
•
, &
ï
, 10);

56 
tz
 = 
	`°πﬁ
(
ï
, 
NULL
, 10);

57 
•
 = 
	`show_d©e
(
d©e
, 
tz
, 0);

58 
	`wrôe_‹_dõ
(1, 
•
, 
	`°æí
(sp));

59 
	`xwrôe
(1, "\n", 1);

65 i‡(
˝
 < 
ídp
 && *cp == '\n')

75 i‡(
˝
 < 
ídp
)

76 
	`wrôe_‹_dõ
(1, 
˝
, 
ídp
 - cp);

77 
	}
}

79 
	$cmd_ˇt_fûe
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

81 
sha1
[20];

82 
ty≥
[20];

83 *
buf
;

84 
size
;

85 
›t
;

87 
	`gô_c⁄fig
(
gô_deÁu…_c⁄fig
);

88 i‡(
¨gc
 != 3)

89 
	`ußge
("git-cat-file [-t|-s|-e|-p|<type>] <sha1>");

90 i‡(
	`gë_sha1
(
¨gv
[2], 
sha1
))

91 
	`dõ
("NŸá vÆid obje˘Çamê%s", 
¨gv
[2]);

93 
›t
 = 0;

94 i‡–
¨gv
[1][0] == '-' ) {

95 
›t
 = 
¨gv
[1][1];

96 i‡–!
›t
 || 
¨gv
[1][2] )

97 
›t
 = -1;

100 
buf
 = 
NULL
;

101 
›t
) {

103 i‡(!
	`sha1_obje˘_öfo
(
sha1
, 
ty≥
, 
NULL
)) {

104 
	`¥ötf
("%s\n", 
ty≥
);

110 i‡(!
	`sha1_obje˘_öfo
(
sha1
, 
ty≥
, &
size
)) {

111 
	`¥ötf
("%lu\n", 
size
);

117  !
	`has_sha1_fûe
(
sha1
);

120 i‡(
	`sha1_obje˘_öfo
(
sha1
, 
ty≥
, 
NULL
))

121 
	`dõ
("NŸá vÆid obje˘Çamê%s", 
¨gv
[2]);

124 i‡(!
	`°rcmp
(
ty≥
, 
åì_ty≥
))

125  
	`cmd_ls_åì
(2, 
¨gv
 + 1, 
NULL
);

127 
buf
 = 
	`ªad_sha1_fûe
(
sha1
, 
ty≥
, &
size
);

128 i‡(!
buf
)

129 
	`dõ
("C™nŸÑód obje˘ %s", 
¨gv
[2]);

130 i‡(!
	`°rcmp
(
ty≥
, 
èg_ty≥
)) {

131 
	`µröt_èg
(
sha1
, 
buf
, 
size
);

138 
buf
 = 
	`ªad_obje˘_wôh_ª„ªn˚
(
sha1
, 
¨gv
[1], &
size
, 
NULL
);

142 
	`dõ
("gô-ˇt-fûe: unknow¿›ti⁄: %s\n", 
¨gv
[1]);

145 i‡(!
buf
)

146 
	`dõ
("gô-ˇt-fûê%s: bad fûe", 
¨gv
[2]);

148 
	`wrôe_‹_dõ
(1, 
buf
, 
size
);

150 
	}
}

	@builtin-check-ref-format.c

5 
	~"ˇche.h
"

6 
	~"ªfs.h
"

7 
	~"buûtö.h
"

9 
	$cmd_check_ªf_f‹m©
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

11 i‡(
¨gc
 != 2)

12 
	`ußge
("git-check-ref-formatÑefname");

13  !!
	`check_ªf_f‹m©
(
¨gv
[1]);

14 
	}
}

	@builtin-checkout-index.c

39 
	~"ˇche.h
"

40 
	~"°rbuf.h
"

41 
	~"quŸe.h
"

42 
	~"ˇche-åì.h
"

44 
	#CHECKOUT_ALL
 4

	)

45 
	glöe_ãrmö©i⁄
 = '\n';

46 
	gcheckout_°age
;

47 
	gto_ãmpfûe
;

48 
	gt›©h
[4][
PATH_MAX
 + 1];

50 
checkout
 
	g°©e
;

52 
	$wrôe_ãmpfûe_ªc‹d
(c⁄° *
«me
, 
¥efix_Àngth
)

54 
i
;

56 i‡(
CHECKOUT_ALL
 =
checkout_°age
) {

57 
i
 = 1; i < 4; i++) {

58 i‡(
i
 > 1)

59 
	`putch¨
(' ');

60 i‡(
t›©h
[
i
][0])

61 
	`Âuts
(
t›©h
[
i
], 
°dout
);

63 
	`putch¨
('.');

66 
	`Âuts
(
t›©h
[
checkout_°age
], 
°dout
);

68 
	`putch¨
('\t');

69 
	`wrôe_«me_quŸed
("", 0, 
«me
 + 
¥efix_Àngth
,

70 
löe_ãrmö©i⁄
, 
°dout
);

71 
	`putch¨
(
löe_ãrmö©i⁄
);

73 
i
 = 0; i < 4; i++) {

74 
t›©h
[
i
][0] = 0;

76 
	}
}

78 
	$checkout_fûe
(c⁄° *
«me
, 
¥efix_Àngth
)

80 
«mñí
 = 
	`°æí
(
«me
);

81 
pos
 = 
	`ˇche_«me_pos
(
«me
, 
«mñí
);

82 
has_ßme_«me
 = 0;

83 
did_checkout
 = 0;

84 
îrs
 = 0;

86 i‡(
pos
 < 0)

87 
pos
 = -pos - 1;

89 
pos
 < 
a˘ive_ƒ
) {

90 
ˇche_íåy
 *
˚
 = 
a˘ive_ˇche
[
pos
];

91 i‡(
	`˚_«mñí
(
˚
Ë!
«mñí
 ||

92 
	`memcmp
(
˚
->
«me
,Çame, 
«mñí
))

94 
has_ßme_«me
 = 1;

95 
pos
++;

96 i‡(
	`˚_°age
(
˚
Ë!
checkout_°age


97 && (
CHECKOUT_ALL
 !
checkout_°age
 || !
	`˚_°age
(
˚
)))

99 
did_checkout
 = 1;

100 i‡(
	`checkout_íåy
(
˚
, &
°©e
,

101 
to_ãmpfûe
 ? 
t›©h
[
	`˚_°age
(
˚
)] : 
NULL
) < 0)

102 
îrs
++;

105 i‡(
did_checkout
) {

106 i‡(
to_ãmpfûe
)

107 
	`wrôe_ãmpfûe_ªc‹d
(
«me
, 
¥efix_Àngth
);

108  
îrs
 > 0 ? -1 : 0;

111 i‡(!
°©e
.
quõt
) {

112 
	`Ârötf
(
°dîr
, "gô-checkout-ödex: %†", 
«me
);

113 i‡(!
has_ßme_«me
)

114 
	`Ârötf
(
°dîr
, "isÇot inÅhe cache");

115 i‡(
checkout_°age
)

116 
	`Ârötf
(
°dîr
, "doesÇotÉxistát stage %d",

117 
checkout_°age
);

119 
	`Ârötf
(
°dîr
, "is unmerged");

120 
	`Âutc
('\n', 
°dîr
);

123 
	}
}

125 
	$checkout_Æl
(c⁄° *
¥efix
, 
¥efix_Àngth
)

127 
i
, 
îrs
 = 0;

128 
ˇche_íåy
* 
œ°_˚
 = 
NULL
;

130 
i
 = 0; i < 
a˘ive_ƒ
 ; i++) {

131 
ˇche_íåy
 *
˚
 = 
a˘ive_ˇche
[
i
];

132 i‡(
	`˚_°age
(
˚
Ë!
checkout_°age


133 && (
CHECKOUT_ALL
 !
checkout_°age
 || !
	`˚_°age
(
˚
)))

135 i‡(
¥efix
 && *prefix &&

136 (
	`˚_«mñí
(
˚
Ë<
¥efix_Àngth
 ||

137 
	`memcmp
(
¥efix
, 
˚
->
«me
, 
¥efix_Àngth
)))

139 i‡(
œ°_˚
 && 
to_ãmpfûe
) {

140 i‡(
	`˚_«mñí
(
œ°_˚
Ë!˚_«mñí(
˚
)

141 || 
	`memcmp
(
œ°_˚
->
«me
, 
˚
->«me, 
	`˚_«mñí
(ce)))

142 
	`wrôe_ãmpfûe_ªc‹d
(
œ°_˚
->
«me
, 
¥efix_Àngth
);

144 i‡(
	`checkout_íåy
(
˚
, &
°©e
,

145 
to_ãmpfûe
 ? 
t›©h
[
	`˚_°age
(
˚
)] : 
NULL
) < 0)

146 
îrs
++;

147 
œ°_˚
 = 
˚
;

149 i‡(
œ°_˚
 && 
to_ãmpfûe
)

150 
	`wrôe_ãmpfûe_ªc‹d
(
œ°_˚
->
«me
, 
¥efix_Àngth
);

151 i‡(
îrs
)

155 
	`exô
(128);

156 
	}
}

158 c⁄° 
	gcheckout_ˇche_ußge
[] =

161 
lock_fûe
 
	glock_fûe
;

163 
	$cmd_checkout_ödex
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

165 
i
;

166 
√wfd
 = -1;

167 
Æl
 = 0;

168 
ªad_‰om_°dö
 = 0;

169 
¥efix_Àngth
;

171 
	`gô_c⁄fig
(
gô_deÁu…_c⁄fig
);

172 
°©e
.
ba£_dú
 = "";

173 
¥efix_Àngth
 = 
¥efix
 ? 
	`°æí
(prefix) : 0;

175 i‡(
	`ªad_ˇche
() < 0) {

176 
	`dõ
("invalid cache");

179 
i
 = 1; i < 
¨gc
; i++) {

180 c⁄° *
¨g
 = 
¨gv
[
i
];

182 i‡(!
	`°rcmp
(
¨g
, "--")) {

183 
i
++;

186 i‡(!
	`°rcmp
(
¨g
, "-a") || !strcmp(arg, "--all")) {

187 
Æl
 = 1;

190 i‡(!
	`°rcmp
(
¨g
, "-f") || !strcmp(arg, "--force")) {

191 
°©e
.
f‹˚
 = 1;

194 i‡(!
	`°rcmp
(
¨g
, "-q") || !strcmp(arg, "--quiet")) {

195 
°©e
.
quõt
 = 1;

198 i‡(!
	`°rcmp
(
¨g
, "-n") || !strcmp(arg, "--no-create")) {

199 
°©e
.
nŸ_√w
 = 1;

202 i‡(!
	`°rcmp
(
¨g
, "-u") || !strcmp(arg, "--index")) {

203 
°©e
.
ª‰esh_ˇche
 = 1;

204 i‡(
√wfd
 < 0)

205 
√wfd
 = 
hﬁd_lock_fûe_f‹_upd©e


206 (&
lock_fûe
, 
	`gë_ödex_fûe
(), 1);

207 i‡(
√wfd
 < 0)

208 
	`dõ
("cannot open index.lock file.");

211 i‡(!
	`°rcmp
(
¨g
, "-z")) {

212 
löe_ãrmö©i⁄
 = 0;

215 i‡(!
	`°rcmp
(
¨g
, "--stdin")) {

216 i‡(
i
 !
¨gc
 - 1)

217 
	`dõ
("--stdin must beátÅheÉnd");

218 
ªad_‰om_°dö
 = 1;

219 
i
++;

222 i‡(!
	`°rcmp
(
¨g
, "--temp")) {

223 
to_ãmpfûe
 = 1;

226 i‡(!
	`°∫cmp
(
¨g
, "--prefix=", 9)) {

227 
°©e
.
ba£_dú
 = 
¨g
+9;

228 
°©e
.
ba£_dú_Àn
 = 
	`°æí
(°©e.
ba£_dú
);

231 i‡(!
	`°∫cmp
(
¨g
, "--stage=", 8)) {

232 i‡(!
	`°rcmp
(
¨g
 + 8, "all")) {

233 
to_ãmpfûe
 = 1;

234 
checkout_°age
 = 
CHECKOUT_ALL
;

236 
ch
 = 
¨g
[8];

237 i‡('1' <
ch
 && ch <= '3')

238 
checkout_°age
 = 
¨g
[8] - '0';

240 
	`dõ
("stage should be between 1ánd 3 oráll");

244 i‡(
¨g
[0] == '-')

245 
	`ußge
(
checkout_ˇche_ußge
);

249 i‡(
°©e
.
ba£_dú_Àn
 || 
to_ãmpfûe
) {

253 i‡(
°©e
.
ª‰esh_ˇche
) {

254 
	`˛o£
(
√wfd
);Çewfd = -1;

255 
	`rﬁlback_lock_fûe
(&
lock_fûe
);

257 
°©e
.
ª‰esh_ˇche
 = 0;

261  ; 
i
 < 
¨gc
; i++) {

262 c⁄° *
¨g
 = 
¨gv
[
i
];

263 c⁄° *
p
;

265 i‡(
Æl
)

266 
	`dõ
("git-checkout-index: don't mix '--all'ándÉxplicit filenames");

267 i‡(
ªad_‰om_°dö
)

268 
	`dõ
("git-checkout-index: don't mix '--stdin'ándÉxplicit filenames");

269 
p
 = 
	`¥efix_∑th
(
¥efix
, 
¥efix_Àngth
, 
¨g
);

270 
	`checkout_fûe
(
p
, 
¥efix_Àngth
);

271 i‡(
p
 < 
¨g
 ||Ö >árg + 
	`°æí
(arg))

272 
	`‰ì
((*)
p
);

275 i‡(
ªad_‰om_°dö
) {

276 
°rbuf
 
buf
;

277 i‡(
Æl
)

278 
	`dõ
("git-checkout-index: don't mix '--all'ánd '--stdin'");

279 
	`°rbuf_öô
(&
buf
);

281 *
∑th_«me
;

282 c⁄° *
p
;

284 
	`ªad_löe
(&
buf
, 
°dö
, 
löe_ãrmö©i⁄
);

285 i‡(
buf
.
eof
)

287 i‡(
löe_ãrmö©i⁄
 && 
buf
.buf[0] == '"')

288 
∑th_«me
 = 
	`unquŸe_c_°yÀ
(
buf
.buf, 
NULL
);

290 
∑th_«me
 = 
buf
.buf;

291 
p
 = 
	`¥efix_∑th
(
¥efix
, 
¥efix_Àngth
, 
∑th_«me
);

292 
	`checkout_fûe
(
p
, 
¥efix_Àngth
);

293 i‡(
p
 < 
∑th_«me
 ||Ö >Ö©h_«mê+ 
	`°æí
(path_name))

294 
	`‰ì
((*)
p
);

295 i‡(
∑th_«me
 !
buf
.buf)

296 
	`‰ì
(
∑th_«me
);

300 i‡(
Æl
)

301 
	`checkout_Æl
(
¥efix
, 
¥efix_Àngth
);

303 i‡(0 <
√wfd
 &&

304 (
	`wrôe_ˇche
(
√wfd
, 
a˘ive_ˇche
, 
a˘ive_ƒ
) ||

305 
	`˛o£
(
√wfd
Ë|| 
	`commô_lock_fûe
(&
lock_fûe
)))

306 
	`dõ
("UnableÅo writeÇew index file");

308 
	}
}

	@builtin-commit-tree.c

6 
	~"ˇche.h
"

7 
	~"commô.h
"

8 
	~"åì.h
"

9 
	~"buûtö.h
"

10 
	~"utf8.h
"

12 
	#BLOCKING
 (1u»<< 14)

	)

17 
	$öô_buf„r
(**
buÂ
, *
sizï
)

19 *
buf
 = 
	`xmÆloc
(
BLOCKING
);

20 *
sizï
 = 0;

21 *
buÂ
 = 
buf
;

22 
	}
}

24 
	$add_buf„r
(**
buÂ
, *
sizï
, c⁄° *
fmt
, ...)

26 
⁄e_löe
[2048];

27 
va_li°
 
¨gs
;

28 
Àn
;

29 
Æloc
, 
size
, 
√wsize
;

30 *
buf
;

32 
	`va_°¨t
(
¨gs
, 
fmt
);

33 
Àn
 = 
	`v¢¥ötf
(
⁄e_löe
, (⁄e_löe), 
fmt
, 
¨gs
);

34 
	`va_íd
(
¨gs
);

35 
size
 = *
sizï
;

36 
√wsize
 = 
size
 + 
Àn
 + 1;

37 
Æloc
 = (
size
 + 32767) & ~32767;

38 
buf
 = *
buÂ
;

39 i‡(
√wsize
 > 
Æloc
) {

40 
Æloc
 = (
√wsize
 + 32767) & ~32767;

41 
buf
 = 
	`xªÆloc
(buf, 
Æloc
);

42 *
buÂ
 = 
buf
;

44 *
sizï
 = 
√wsize
 - 1;

45 
	`mem˝y
(
buf
 + 
size
, 
⁄e_löe
, 
Àn
);

46 
	}
}

48 
	$check_vÆid
(*
sha1
, c⁄° *
ex≥˘
)

50 
ty≥
[20];

52 i‡(
	`sha1_obje˘_öfo
(
sha1
, 
ty≥
, 
NULL
))

53 
	`dõ
("%†i†nŸá vÆid obje˘", 
	`sha1_to_hex
(
sha1
));

54 i‡(
ex≥˘
 && 
	`°rcmp
(
ty≥
,Éxpect))

55 
	`dõ
("%†i†nŸá vÆid '%s' obje˘", 
	`sha1_to_hex
(
sha1
),

56 
ex≥˘
);

57 
	}
}

63 
	#MAXPARENT
 (16)

	)

64 
	g∑ª¡_sha1
[
MAXPARENT
][20];

66 c⁄° 
	gcommô_åì_ußge
[] = "git-commit-tree <sha1> [-p <sha1>]* < changelog";

68 
	$√w_∑ª¡
(
idx
)

70 
i
;

71 *
sha1
 = 
∑ª¡_sha1
[
idx
];

72 
i
 = 0; i < 
idx
; i++) {

73 i‡(!
	`hashcmp
(
∑ª¡_sha1
[
i
], 
sha1
)) {

74 
	`îr‹
("du∂iˇãÖ¨íà%†ign‹ed", 
	`sha1_to_hex
(
sha1
));

79 
	}
}

81 c⁄° 
	gcommô_utf8_w¨n
[] =

86 
	$cmd_commô_åì
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

88 
i
;

89 
∑ª¡s
 = 0;

90 
åì_sha1
[20];

91 
commô_sha1
[20];

92 
commít
[1000];

93 *
buf„r
;

94 
size
;

95 
ícodög_is_utf8
;

97 
	`gô_c⁄fig
(
gô_deÁu…_c⁄fig
);

99 i‡(
¨gc
 < 2)

100 
	`ußge
(
commô_åì_ußge
);

101 i‡(
	`gë_sha1
(
¨gv
[1], 
åì_sha1
))

102 
	`dõ
("NŸá vÆid obje˘Çamê%s", 
¨gv
[1]);

104 
	`check_vÆid
(
åì_sha1
, 
åì_ty≥
);

105 
i
 = 2; i < 
¨gc
; i += 2) {

106 c⁄° *
a
, *
b
;

107 
a
 = 
¨gv
[
i
]; 
b
 =árgv[i+1];

108 i‡(!
b
 || 
	`°rcmp
(
a
, "-p"))

109 
	`ußge
(
commô_åì_ußge
);

111 i‡(
∑ª¡s
 >
MAXPARENT
)

112 
	`dõ
("Toÿm™yÖ¨ít†(%d max)", 
MAXPARENT
);

113 i‡(
	`gë_sha1
(
b
, 
∑ª¡_sha1
[
∑ª¡s
]))

114 
	`dõ
("NŸá vÆid obje˘Çamê%s", 
b
);

115 
	`check_vÆid
(
∑ª¡_sha1
[
∑ª¡s
], 
commô_ty≥
);

116 i‡(
	`√w_∑ª¡
(
∑ª¡s
))

117 
∑ª¡s
++;

121 
ícodög_is_utf8
 = 
	`is_ícodög_utf8
(
gô_commô_ícodög
);

123 
	`öô_buf„r
(&
buf„r
, &
size
);

124 
	`add_buf„r
(&
buf„r
, &
size
, "åì %s\n", 
	`sha1_to_hex
(
åì_sha1
));

131 
i
 = 0; i < 
∑ª¡s
; i++)

132 
	`add_buf„r
(&
buf„r
, &
size
, "∑ª¡ %s\n", 
	`sha1_to_hex
(
∑ª¡_sha1
[
i
]));

135 
	`add_buf„r
(&
buf„r
, &
size
, "auth‹ %s\n", 
	`gô_auth‹_öfo
(1));

136 
	`add_buf„r
(&
buf„r
, &
size
, "commôã∏%s\n", 
	`gô_commôãr_öfo
(1));

137 i‡(!
ícodög_is_utf8
)

138 
	`add_buf„r
(&
buf„r
, &
size
,

139 "ícodög %s\n", 
gô_commô_ícodög
);

140 
	`add_buf„r
(&
buf„r
, &
size
, "\n");

143 
	`fgës
(
commít
, (commít), 
°dö
Ë!
NULL
)

144 
	`add_buf„r
(&
buf„r
, &
size
, "%s", 
commít
);

147 
buf„r
[
size
] = '\0';

148 i‡(
ícodög_is_utf8
 && !
	`is_utf8
(
buf„r
))

149 
	`Ârötf
(
°dîr
, 
commô_utf8_w¨n
);

151 i‡(!
	`wrôe_sha1_fûe
(
buf„r
, 
size
, 
commô_ty≥
, 
commô_sha1
)) {

152 
	`¥ötf
("%s\n", 
	`sha1_to_hex
(
commô_sha1
));

157 
	}
}

	@builtin-config.c

1 
	~"buûtö.h
"

2 
	~"ˇche.h
"

4 c⁄° 
	ggô_c⁄fig_£t_ußge
[] =

7 *
	gkey
;

8 
ªgex_t
 *
	gkey_ªgexp
;

9 
ªgex_t
 *
	gªgexp
;

10 
	gshow_keys
;

11 
	gu£_key_ªgexp
;

12 
	gdo_Æl
;

13 
	gdo_nŸ_m©ch
;

14 
	g£í
;

15 íum { 
	mT_RAW
, 
	mT_INT
, 
	mT_BOOL
 } 
	gty≥
 = 
T_RAW
;

17 
	$show_Æl_c⁄fig
(c⁄° *
key_
, c⁄° *
vÆue_
)

19 i‡(
vÆue_
)

20 
	`¥ötf
("%s=%s\n", 
key_
, 
vÆue_
);

22 
	`¥ötf
("%s\n", 
key_
);

24 
	}
}

26 
	$show_c⁄fig
(c⁄° * 
key_
, c⁄° * 
vÆue_
)

28 
vÆue
[256];

29 c⁄° *
v±r
 = 
vÆue
;

30 
dup_îr‹
 = 0;

32 i‡(!
u£_key_ªgexp
 && 
	`°rcmp
(
key_
, 
key
))

34 i‡(
u£_key_ªgexp
 && 
	`ªgexec
(
key_ªgexp
, 
key_
, 0, 
NULL
, 0))

36 i‡(
ªgexp
 !
NULL
 &&

37 (
do_nŸ_m©ch
 ^

38 
	`ªgexec
(
ªgexp
, (
vÆue_
?vÆue_:""), 0, 
NULL
, 0)))

41 i‡(
show_keys
)

42 
	`¥ötf
("%†", 
key_
);

43 i‡(
£í
 && !
do_Æl
)

44 
dup_îr‹
 = 1;

45 i‡(
ty≥
 =
T_INT
)

46 
	`•rötf
(
vÆue
, "%d", 
	`gô_c⁄fig_öt
(
key_
, 
vÆue_
?value_:""));

47 i‡(
ty≥
 =
T_BOOL
)

48 
v±r
 = 
	`gô_c⁄fig_boﬁ
(
key_
, 
vÆue_
) ? "true" : "false";

50 
v±r
 = 
vÆue_
?value_:"";

51 
£í
++;

52 i‡(
dup_îr‹
) {

53 
	`îr‹
("MoreÅhan one value forÅhe key %s: %s",

54 
key_
, 
v±r
);

57 
	`¥ötf
("%s\n", 
v±r
);

60 
	}
}

62 
	$gë_vÆue
(c⁄° * 
key_
, c⁄° * 
ªgex_
)

64 
ªt
 = -1;

65 *
é
;

66 *
globÆ
 = 
NULL
, *
ªpo_c⁄fig
 = NULL;

67 c⁄° *
loˇl
;

69 
loˇl
 = 
	`gëív
(
CONFIG_ENVIRONMENT
);

70 i‡(!
loˇl
) {

71 c⁄° *
home
 = 
	`gëív
("HOME");

72 
loˇl
 = 
	`gëív
(
CONFIG_LOCAL_ENVIRONMENT
);

73 i‡(!
loˇl
)

74 
loˇl
 = 
ªpo_c⁄fig
 = 
	`x°rdup
(
	`gô_∑th
("config"));

75 i‡(
home
)

76 
globÆ
 = 
	`x°rdup
(
	`mk∑th
("%s/.gôc⁄fig", 
home
));

79 
key
 = 
	`x°rdup
(
key_
);

80 
é
=
key
+
	`°æí
(key)-1;Ål >= key && *tl != '.'; --tl)

81 *
é
 = 
	`tﬁowî
(*tl);

82 
é
=
key
; *tl && *tl != '.'; ++tl)

83 *
é
 = 
	`tﬁowî
(*tl);

85 i‡(
u£_key_ªgexp
) {

86 
key_ªgexp
 = (
ªgex_t
*)
	`xmÆloc
((regex_t));

87 i‡(
	`ªgcomp
(
key_ªgexp
, 
key
, 
REG_EXTENDED
)) {

88 
	`Ârötf
(
°dîr
, "InvÆid keyÖ©ã∫: %s\n", 
key_
);

89 
‰ì_°rögs
;

93 i‡(
ªgex_
) {

94 i‡(
ªgex_
[0] == '!') {

95 
do_nŸ_m©ch
 = 1;

96 
ªgex_
++;

99 
ªgexp
 = (
ªgex_t
*)
	`xmÆloc
((regex_t));

100 i‡(
	`ªgcomp
(
ªgexp
, 
ªgex_
, 
REG_EXTENDED
)) {

101 
	`Ârötf
(
°dîr
, "InvÆidÖ©ã∫: %s\n", 
ªgex_
);

102 
‰ì_°rögs
;

106 i‡(
do_Æl
 && 
globÆ
)

107 
	`gô_c⁄fig_‰om_fûe
(
show_c⁄fig
, 
globÆ
);

108 
	`gô_c⁄fig_‰om_fûe
(
show_c⁄fig
, 
loˇl
);

109 i‡(!
do_Æl
 && !
£í
 && 
globÆ
)

110 
	`gô_c⁄fig_‰om_fûe
(
show_c⁄fig
, 
globÆ
);

112 
	`‰ì
(
key
);

113 i‡(
ªgexp
) {

114 
	`ªg‰ì
(
ªgexp
);

115 
	`‰ì
(
ªgexp
);

118 i‡(
do_Æl
)

119 
ªt
 = !
£í
;

121 
ªt
 = (
£í
 == 1) ? 0 : seen > 1 ? 2 : 1;

123 
‰ì_°rögs
:

124 
	`‰ì
(
ªpo_c⁄fig
);

125 
	`‰ì
(
globÆ
);

126  
ªt
;

127 
	}
}

129 
	$cmd_c⁄fig
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

131 
n⁄gô
 = 0;

132 
	`£tup_gô_dúe˘‹y_gíéy
(&
n⁄gô
);

134 1 < 
¨gc
) {

135 i‡(!
	`°rcmp
(
¨gv
[1], "--int"))

136 
ty≥
 = 
T_INT
;

137 i‡(!
	`°rcmp
(
¨gv
[1], "--bool"))

138 
ty≥
 = 
T_BOOL
;

139 i‡(!
	`°rcmp
(
¨gv
[1], "--list") || !strcmp(argv[1], "-l"))

140  
	`gô_c⁄fig
(
show_Æl_c⁄fig
);

141 i‡(!
	`°rcmp
(
¨gv
[1], "--global")) {

142 *
home
 = 
	`gëív
("HOME");

143 i‡(
home
) {

144 *
u£r_c⁄fig
 = 
	`x°rdup
(
	`mk∑th
("%s/.gôc⁄fig", 
home
));

145 
	`£ãnv
("GIT_CONFIG", 
u£r_c⁄fig
, 1);

146 
	`‰ì
(
u£r_c⁄fig
);

148 
	`dõ
("$HOMEÇot set");

150 } i‡(!
	`°rcmp
(
¨gv
[1], "--rename-section")) {

151 
ªt
;

152 i‡(
¨gc
 != 4)

153 
	`ußge
(
gô_c⁄fig_£t_ußge
);

154 
ªt
 = 
	`gô_c⁄fig_ª«me_£˘i⁄
(
¨gv
[2],árgv[3]);

155 i‡(
ªt
 < 0)

156  
ªt
;

157 i‡(
ªt
 == 0) {

158 
	`Ârötf
(
°dîr
, "No such section!\n");

164 
¨gc
--;

165 
¨gv
++;

168 
¨gc
) {

170  
	`gë_vÆue
(
¨gv
[1], 
NULL
);

172 i‡(!
	`°rcmp
(
¨gv
[1], "--unset"))

173  
	`gô_c⁄fig_£t
(
¨gv
[2], 
NULL
);

174 i‡(!
	`°rcmp
(
¨gv
[1], "--unset-all"))

175  
	`gô_c⁄fig_£t_mu…iv¨
(
¨gv
[2], 
NULL
, NULL, 1);

176 i‡(!
	`°rcmp
(
¨gv
[1], "--get"))

177  
	`gë_vÆue
(
¨gv
[2], 
NULL
);

178 i‡(!
	`°rcmp
(
¨gv
[1], "--get-all")) {

179 
do_Æl
 = 1;

180  
	`gë_vÆue
(
¨gv
[2], 
NULL
);

181 } i‡(!
	`°rcmp
(
¨gv
[1], "--get-regexp")) {

182 
show_keys
 = 1;

183 
u£_key_ªgexp
 = 1;

184 
do_Æl
 = 1;

185  
	`gë_vÆue
(
¨gv
[2], 
NULL
);

188  
	`gô_c⁄fig_£t
(
¨gv
[1],árgv[2]);

190 i‡(!
	`°rcmp
(
¨gv
[1], "--unset"))

191  
	`gô_c⁄fig_£t_mu…iv¨
(
¨gv
[2], 
NULL
,árgv[3], 0);

192 i‡(!
	`°rcmp
(
¨gv
[1], "--unset-all"))

193  
	`gô_c⁄fig_£t_mu…iv¨
(
¨gv
[2], 
NULL
,árgv[3], 1);

194 i‡(!
	`°rcmp
(
¨gv
[1], "--get"))

195  
	`gë_vÆue
(
¨gv
[2],árgv[3]);

196 i‡(!
	`°rcmp
(
¨gv
[1], "--get-all")) {

197 
do_Æl
 = 1;

198  
	`gë_vÆue
(
¨gv
[2],árgv[3]);

199 } i‡(!
	`°rcmp
(
¨gv
[1], "--get-regexp")) {

200 
show_keys
 = 1;

201 
u£_key_ªgexp
 = 1;

202 
do_Æl
 = 1;

203  
	`gë_vÆue
(
¨gv
[2],árgv[3]);

204 } i‡(!
	`°rcmp
(
¨gv
[1], "--add"))

205  
	`gô_c⁄fig_£t_mu…iv¨
(
¨gv
[2],árgv[3], "^$", 0);

206 i‡(!
	`°rcmp
(
¨gv
[1], "--replace-all"))

208  
	`gô_c⁄fig_£t_mu…iv¨
(
¨gv
[2],árgv[3], 
NULL
, 1);

211  
	`gô_c⁄fig_£t_mu…iv¨
(
¨gv
[1],árgv[2],árgv[3], 0);

213 i‡(!
	`°rcmp
(
¨gv
[1], "--replace-all"))

214  
	`gô_c⁄fig_£t_mu…iv¨
(
¨gv
[2],árgv[3],árgv[4], 1);

217 
	`ußge
(
gô_c⁄fig_£t_ußge
);

220 
	}
}

	@builtin-count-objects.c

7 
	~"ˇche.h
"

8 
	~"buûtö.h
"

10 c⁄° 
	gcou¡_obje˘s_ußge
[] = "git-count-objects [-v]";

12 
	$cou¡_obje˘s
(
DIR
 *
d
, *
∑th
, 
Àn
, 
vîbo£
,

13 *
loo£
,

14 *
loo£_size
,

15 *
∑cked_loo£
,

16 *
g¨bage
)

18 
dúít
 *
ít
;

19 (
ít
 = 
	`ªaddú
(
d
)Ë!
NULL
) {

20 
hex
[41];

21 
sha1
[20];

22 c⁄° *
˝
;

23 
bad
 = 0;

25 i‡((
ít
->
d_«me
[0] == '.') &&

26 (
ít
->
d_«me
[1] == 0 ||

27 ((
ít
->
d_«me
[1] == '.') && (ent->d_name[2] == 0))))

29 
˝
 = 
ít
->
d_«me
; *cp; cp++) {

30 
ch
 = *
˝
;

31 i‡(('0' <
ch
 && ch <= '9') ||

32 ('a' <
ch
 && ch <= 'f'))

34 
bad
 = 1;

37 i‡(
˝
 - 
ít
->
d_«me
 != 38)

38 
bad
 = 1;

40 
°©
 
°
;

41 
	`mem˝y
(
∑th
 + 
Àn
 + 3, 
ít
->
d_«me
, 38);

42 
∑th
[
Àn
 + 2] = '/';

43 
∑th
[
Àn
 + 41] = 0;

44 i‡(
	`l°©
(
∑th
, &
°
Ë|| !
	`S_ISREG
(°.
°_mode
))

45 
bad
 = 1;

47 (*
loo£_size
Ë+
°
.
°_blocks
;

49 i‡(
bad
) {

50 i‡(
vîbo£
) {

51 
	`îr‹
("garbage found: %.*s/%s",

52 
Àn
 + 2, 
∑th
, 
ít
->
d_«me
);

53 (*
g¨bage
)++;

57 (*
loo£
)++;

58 i‡(!
vîbo£
)

60 
	`mem˝y
(
hex
, 
∑th
+
Àn
, 2);

61 
	`mem˝y
(
hex
+2, 
ít
->
d_«me
, 38);

62 
hex
[40] = 0;

63 i‡(
	`gë_sha1_hex
(
hex
, 
sha1
))

64 
	`dõ
("internalÉrror");

65 i‡(
	`has_sha1_∑ck
(
sha1
, 
NULL
))

66 (*
∑cked_loo£
)++;

68 
	}
}

70 
	$cmd_cou¡_obje˘s
(
ac
, c⁄° **
av
, c⁄° *
¥efix
)

72 
i
;

73 
vîbo£
 = 0;

74 c⁄° *
objdú
 = 
	`gë_obje˘_dúe˘‹y
();

75 
Àn
 = 
	`°æí
(
objdú
);

76 *
∑th
 = 
	`xmÆloc
(
Àn
 + 50);

77 
loo£
 = 0, 
∑cked
 = 0, 
∑cked_loo£
 = 0, 
g¨bage
 = 0;

78 
loo£_size
 = 0;

80 
i
 = 1; i < 
ac
; i++) {

81 c⁄° *
¨g
 = 
av
[
i
];

82 i‡(*
¨g
 != '-')

84 i‡(!
	`°rcmp
(
¨g
, "-v"))

85 
vîbo£
 = 1;

87 
	`ußge
(
cou¡_obje˘s_ußge
);

91 i‡(
i
 < 
ac
)

92 
	`ußge
(
cou¡_obje˘s_ußge
);

93 
	`mem˝y
(
∑th
, 
objdú
, 
Àn
);

94 i‡(
Àn
 && 
objdú
[len-1] != '/')

95 
∑th
[
Àn
++] = '/';

96 
i
 = 0; i < 256; i++) {

97 
DIR
 *
d
;

98 
	`•rötf
(
∑th
 + 
Àn
, "%02x", 
i
);

99 
d
 = 
	`›ídú
(
∑th
);

100 i‡(!
d
)

102 
	`cou¡_obje˘s
(
d
, 
∑th
, 
Àn
, 
vîbo£
,

103 &
loo£
, &
loo£_size
, &
∑cked_loo£
, &
g¨bage
);

104 
	`˛o£dú
(
d
);

106 i‡(
vîbo£
) {

107 
∑cked_gô
 *
p
;

108 
num_∑ck
 = 0;

109 i‡(!
∑cked_gô
)

110 
	`¥ï¨e_∑cked_gô
();

111 
p
 = 
∑cked_gô
;Ö;Ö =Ö->
√xt
) {

112 i‡(!
p
->
∑ck_loˇl
)

114 
∑cked
 +
	`num_∑cked_obje˘s
(
p
);

115 
num_∑ck
++;

117 
	`¥ötf
("cou¡: %lu\n", 
loo£
);

118 
	`¥ötf
("size: %lu\n", 
loo£_size
 / 2);

119 
	`¥ötf
("ö-∑ck: %lu\n", 
∑cked
);

120 
	`¥ötf
("∑cks: %lu\n", 
num_∑ck
);

121 
	`¥ötf
("¥u√-∑ckabÀ: %lu\n", 
∑cked_loo£
);

122 
	`¥ötf
("g¨bage: %lu\n", 
g¨bage
);

125 
	`¥ötf
("%lu objects, %lu kilobytes\n",

126 
loo£
, 
loo£_size
 / 2);

128 
	}
}

	@builtin-describe.c

1 
	~"ˇche.h
"

2 
	~"commô.h
"

3 
	~"èg.h
"

4 
	~"ªfs.h
"

5 
	~"buûtö.h
"

7 
	#SEEN
 (1u<<0)

	)

8 
	#MAX_TAGS
 (
FLAG_BITS
 - 1)

	)

10 c⁄° 
	gdes¸ibe_ußge
[] =

13 
	gdebug
;

14 
	gÆl
;

15 
	gègs
;

16 
	gabbªv
 = 
DEFAULT_ABBREV
;

17 
	gmax_ˇndid©es
 = 10;

19 
	scommô_«me
 {

20 
	m¥io
;

21 
	m∑th
[
FLEX_ARRAY
];

23 c⁄° *
	g¥io_«mes
[] = {

27 
	$add_to_known_«mes
(c⁄° *
∑th
,

28 
commô
 *commit,

29 
¥io
)

31 
commô_«me
 *
e
 = 
commô
->
utû
;

32 i‡(!
e
 ||É->
¥io
 <Örio) {

33 
size_t
 
Àn
 = 
	`°æí
(
∑th
)+1;

34 
	`‰ì
(
e
);

35 
e
 = 
	`xmÆloc
((
commô_«me
Ë+ 
Àn
);

36 
e
->
¥io
 =Örio;

37 
	`mem˝y
(
e
->
∑th
,Ö©h, 
Àn
);

38 
commô
->
utû
 = 
e
;

40 
	}
}

42 
	$gë_«me
(c⁄° *
∑th
, c⁄° *
sha1
, 
Êag
, *
cb_d©a
)

44 
commô
 *commô = 
	`lookup_commô_ª„ªn˚_gíéy
(
sha1
, 1);

45 
obje˘
 *object;

46 
¥io
;

48 i‡(!
commô
)

50 
obje˘
 = 
	`∑r£_obje˘
(
sha1
);

55 i‡(!
	`°∫cmp
(
∑th
, "refs/tags/", 10)) {

56 i‡(
obje˘
->
ty≥
 =
OBJ_TAG
)

57 
¥io
 = 2;

59 
¥io
 = 1;

62 
¥io
 = 0;

64 i‡(!
Æl
) {

65 i‡(!
¥io
)

67 i‡(!
ègs
 && 
¥io
 < 2)

70 
	`add_to_known_«mes
(
Æl
 ? 
∑th
 + 5 :Ö©h + 10, 
commô
, 
¥io
);

72 
	}
}

74 
	spossibÀ_èg
 {

75 
commô_«me
 *
	m«me
;

76 
	mdïth
;

77 
	mfound_‹dî
;

78 
	mÊag_wôhö
;

81 
	$com∑ª_±
(c⁄° *
a_
, c⁄° *
b_
)

83 
possibÀ_èg
 *
a
 = (possibÀ_èg *)
a_
;

84 
possibÀ_èg
 *
b
 = (possibÀ_èg *)
b_
;

85 i‡(
a
->
«me
->
¥io
 !
b
->name->prio)

86  
b
->
«me
->
¥io
 - 
a
->name->prio;

87 i‡(
a
->
dïth
 !
b
->depth)

88  
a
->
dïth
 - 
b
->depth;

89 i‡(
a
->
found_‹dî
 !
b
->found_order)

90  
a
->
found_‹dî
 - 
b
->found_order;

92 
	}
}

94 
	$föish_dïth_compuèti⁄
(

95 
commô_li°
 **
li°
,

96 
possibÀ_èg
 *
be°
)

98 
£í_commôs
 = 0;

99 *
li°
) {

100 
commô
 *
c
 = 
	`p›_commô
(
li°
);

101 
commô_li°
 *
∑ª¡s
 = 
c
->parents;

102 
£í_commôs
++;

103 i‡(
c
->
obje˘
.
Êags
 & 
be°
->
Êag_wôhö
) {

104 
commô_li°
 *
a
 = *
li°
;

105 
a
) {

106 
commô
 *
i
 = 
a
->
ôem
;

107 i‡(!(
i
->
obje˘
.
Êags
 & 
be°
->
Êag_wôhö
))

109 
a
 =á->
√xt
;

111 i‡(!
a
)

114 
be°
->
dïth
++;

115 
∑ª¡s
) {

116 
commô
 *
p
 = 
∑ª¡s
->
ôem
;

117 
	`∑r£_commô
(
p
);

118 i‡(!(
p
->
obje˘
.
Êags
 & 
SEEN
))

119 
	`ö£π_by_d©e
(
p
, 
li°
);

120 
p
->
obje˘
.
Êags
 |
c
->object.flags;

121 
∑ª¡s
 =Ö¨íts->
√xt
;

124  
£í_commôs
;

125 
	}
}

127 
	$des¸ibe
(c⁄° *
¨g
, 
œ°_⁄e
)

129 
sha1
[20];

130 
commô
 *
cmô
, *
gave_up_⁄
 = 
NULL
;

131 
commô_li°
 *
li°
;

132 
öôülized
 = 0;

133 
commô_«me
 *
n
;

134 
possibÀ_èg
 
Æl_m©ches
[
MAX_TAGS
];

135 
m©ch_˙t
 = 0, 
™nŸ©ed_˙t
 = 0, 
cur_m©ch
;

136 
£í_commôs
 = 0;

138 i‡(
	`gë_sha1
(
¨g
, 
sha1
))

139 
	`dõ
("NŸá vÆid obje˘Çamê%s", 
¨g
);

140 
cmô
 = 
	`lookup_commô_ª„ªn˚
(
sha1
);

141 i‡(!
cmô
)

142 
	`dõ
("%†i†nŸá vÆid '%s' obje˘", 
¨g
, 
commô_ty≥
);

144 i‡(!
öôülized
) {

145 
öôülized
 = 1;

146 
	`f‹_óch_ªf
(
gë_«me
, 
NULL
);

149 
n
 = 
cmô
->
utû
;

150 i‡(
n
) {

151 
	`¥ötf
("%s\n", 
n
->
∑th
);

155 i‡(
debug
)

156 
	`Ârötf
(
°dîr
, "£¨chögÅÿdes¸ibê%s\n", 
¨g
);

158 
li°
 = 
NULL
;

159 
cmô
->
obje˘
.
Êags
 = 
SEEN
;

160 
	`commô_li°_ö£π
(
cmô
, &
li°
);

161 
li°
) {

162 
commô
 *
c
 = 
	`p›_commô
(&
li°
);

163 
commô_li°
 *
∑ª¡s
 = 
c
->parents;

164 
£í_commôs
++;

165 
n
 = 
c
->
utû
;

166 i‡(
n
) {

167 i‡(
m©ch_˙t
 < 
max_ˇndid©es
) {

168 
possibÀ_èg
 *
t
 = &
Æl_m©ches
[
m©ch_˙t
++];

169 
t
->
«me
 = 
n
;

170 
t
->
dïth
 = 
£í_commôs
 - 1;

171 
t
->
Êag_wôhö
 = 1u << 
m©ch_˙t
;

172 
t
->
found_‹dî
 = 
m©ch_˙t
;

173 
c
->
obje˘
.
Êags
 |
t
->
Êag_wôhö
;

174 i‡(
n
->
¥io
 == 2)

175 
™nŸ©ed_˙t
++;

178 
gave_up_⁄
 = 
c
;

182 
cur_m©ch
 = 0; cur_m©ch < 
m©ch_˙t
; cur_match++) {

183 
possibÀ_èg
 *
t
 = &
Æl_m©ches
[
cur_m©ch
];

184 i‡(!(
c
->
obje˘
.
Êags
 & 
t
->
Êag_wôhö
))

185 
t
->
dïth
++;

187 i‡(
™nŸ©ed_˙t
 && !
li°
) {

188 i‡(
debug
)

189 
	`Ârötf
(
°dîr
, "finished searchát %s\n",

190 
	`sha1_to_hex
(
c
->
obje˘
.
sha1
));

193 
∑ª¡s
) {

194 
commô
 *
p
 = 
∑ª¡s
->
ôem
;

195 
	`∑r£_commô
(
p
);

196 i‡(!(
p
->
obje˘
.
Êags
 & 
SEEN
))

197 
	`ö£π_by_d©e
(
p
, &
li°
);

198 
p
->
obje˘
.
Êags
 |
c
->object.flags;

199 
∑ª¡s
 =Ö¨íts->
√xt
;

203 i‡(!
m©ch_˙t
)

204 
	`dõ
("ˇ¬Ÿ des¸ibê'%s'", 
	`sha1_to_hex
(
cmô
->
obje˘
.
sha1
));

206 
	`qs‹t
(
Æl_m©ches
, 
m©ch_˙t
, ◊Œ_m©ches[0]), 
com∑ª_±
);

208 i‡(
gave_up_⁄
) {

209 
	`ö£π_by_d©e
(
gave_up_⁄
, &
li°
);

210 
£í_commôs
--;

212 
£í_commôs
 +
	`föish_dïth_compuèti⁄
(&
li°
, &
Æl_m©ches
[0]);

213 
	`‰ì_commô_li°
(
li°
);

215 i‡(
debug
) {

216 
cur_m©ch
 = 0; cur_m©ch < 
m©ch_˙t
; cur_match++) {

217 
possibÀ_èg
 *
t
 = &
Æl_m©ches
[
cur_m©ch
];

218 
	`Ârötf
(
°dîr
, " %-11s %8d %s\n",

219 
¥io_«mes
[
t
->
«me
->
¥io
],

220 
t
->
dïth
,Å->
«me
->
∑th
);

222 
	`Ârötf
(
°dîr
, "åavî£d %lu commôs\n", 
£í_commôs
);

223 i‡(
gave_up_⁄
) {

224 
	`Ârötf
(
°dîr
,

227 
max_ˇndid©es
, max_candidates,

228 
	`sha1_to_hex
(
gave_up_⁄
->
obje˘
.
sha1
));

231 i‡(
abbªv
 == 0)

232 
	`¥ötf
("%s\n", 
Æl_m©ches
[0].
«me
->
∑th
 );

234 
	`¥ötf
("%s-%d-g%s\n", 
Æl_m©ches
[0].
«me
->
∑th
,

235 
Æl_m©ches
[0].
dïth
,

236 
	`föd_unique_abbªv
(
cmô
->
obje˘
.
sha1
, 
abbªv
));

238 i‡(!
œ°_⁄e
)

239 
	`˛ór_commô_m¨ks
(
cmô
, -1);

240 
	}
}

242 
	$cmd_des¸ibe
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

244 
i
;

246 
i
 = 1; i < 
¨gc
; i++) {

247 c⁄° *
¨g
 = 
¨gv
[
i
];

249 i‡(*
¨g
 != '-')

251 i‡(!
	`°rcmp
(
¨g
, "--debug"))

252 
debug
 = 1;

253 i‡(!
	`°rcmp
(
¨g
, "--all"))

254 
Æl
 = 1;

255 i‡(!
	`°rcmp
(
¨g
, "--tags"))

256 
ègs
 = 1;

257 i‡(!
	`°∫cmp
(
¨g
, "--abbrev=", 9)) {

258 
abbªv
 = 
	`°πoul
(
¨g
 + 9, 
NULL
, 10);

259 i‡(
abbªv
 !0 && (abbªv < 
MINIMUM_ABBREV
 || 40 <ábbrev))

260 
abbªv
 = 
DEFAULT_ABBREV
;

262 i‡(!
	`°∫cmp
(
¨g
, "--candidates=", 13)) {

263 
max_ˇndid©es
 = 
	`°πoul
(
¨g
 + 13, 
NULL
, 10);

264 i‡(
max_ˇndid©es
 < 1)

265 
max_ˇndid©es
 = 1;

266 i‡(
max_ˇndid©es
 > 
MAX_TAGS
)

267 
max_ˇndid©es
 = 
MAX_TAGS
;

270 
	`ußge
(
des¸ibe_ußge
);

273 
ßve_commô_buf„r
 = 0;

275 i‡(
¨gc
 <
i
)

276 
	`des¸ibe
("HEAD", 1);

278 
i
 < 
¨gc
) {

279 
	`des¸ibe
(
¨gv
[
i
], (ò=
¨gc
 - 1));

280 
i
++;

284 
	}
}

	@builtin-diff-files.c

6 
	~"ˇche.h
"

7 
	~"diff.h
"

8 
	~"commô.h
"

9 
	~"ªvisi⁄.h
"

10 
	~"buûtö.h
"

12 c⁄° 
	gdiff_fûes_ußge
[] =

14 
COMMON_DIFF_OPTIONS_HELP
;

16 
	$cmd_diff_fûes
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

18 
ªv_öfo
 
ªv
;

19 
sûít
 = 0;

21 
	`öô_ªvisi⁄s
(&
ªv
, 
¥efix
);

22 
	`gô_c⁄fig
(
gô_deÁu…_c⁄fig
);

23 
ªv
.
abbªv
 = 0;

25 
¨gc
 = 
	`£tup_ªvisi⁄s
◊rgc, 
¨gv
, &
ªv
, 
NULL
);

26 1 < 
¨gc
 && 
¨gv
[1][0] == '-') {

27 i‡(!
	`°rcmp
(
¨gv
[1], "--base"))

28 
ªv
.
max_cou¡
 = 1;

29 i‡(!
	`°rcmp
(
¨gv
[1], "--ours"))

30 
ªv
.
max_cou¡
 = 2;

31 i‡(!
	`°rcmp
(
¨gv
[1], "--theirs"))

32 
ªv
.
max_cou¡
 = 3;

33 i‡(!
	`°rcmp
(
¨gv
[1], "-q"))

34 
sûít
 = 1;

36 
	`ußge
(
diff_fûes_ußge
);

37 
¨gv
++; 
¨gc
--;

39 i‡(!
ªv
.
diff›t
.
ouçut_f‹m©
)

40 
ªv
.
diff›t
.
ouçut_f‹m©
 = 
DIFF_FORMAT_RAW
;

47 i‡(
ªv
.
≥ndög
.
ƒ
 ||

48 
ªv
.
mö_age
 !-1 ||Ñev.
max_age
 != -1)

49 
	`ußge
(
diff_fûes_ußge
);

50  
	`run_diff_fûes
(&
ªv
, 
sûít
);

51 
	}
}

	@builtin-diff-index.c

1 
	~"ˇche.h
"

2 
	~"diff.h
"

3 
	~"commô.h
"

4 
	~"ªvisi⁄.h
"

5 
	~"buûtö.h
"

7 c⁄° 
	gdiff_ˇche_ußge
[] =

10 
COMMON_DIFF_OPTIONS_HELP
;

12 
	$cmd_diff_ödex
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

14 
ªv_öfo
 
ªv
;

15 
ˇched
 = 0;

16 
i
;

18 
	`öô_ªvisi⁄s
(&
ªv
, 
¥efix
);

19 
	`gô_c⁄fig
(
gô_deÁu…_c⁄fig
);

20 
ªv
.
abbªv
 = 0;

22 
¨gc
 = 
	`£tup_ªvisi⁄s
◊rgc, 
¨gv
, &
ªv
, 
NULL
);

23 
i
 = 1; i < 
¨gc
; i++) {

24 c⁄° *
¨g
 = 
¨gv
[
i
];

26 i‡(!
	`°rcmp
(
¨g
, "--cached"))

27 
ˇched
 = 1;

29 
	`ußge
(
diff_ˇche_ußge
);

31 i‡(!
ªv
.
diff›t
.
ouçut_f‹m©
)

32 
ªv
.
diff›t
.
ouçut_f‹m©
 = 
DIFF_FORMAT_RAW
;

38 i‡(
ªv
.
≥ndög
.
ƒ
 != 1 ||

39 
ªv
.
max_cou¡
 !-1 ||Ñev.
mö_age
 !-1 ||Ñev.
max_age
 != -1)

40 
	`ußge
(
diff_ˇche_ußge
);

41  
	`run_diff_ödex
(&
ªv
, 
ˇched
);

42 
	}
}

	@builtin-diff-stages.c

5 
	~"ˇche.h
"

6 
	~"diff.h
"

7 
	~"buûtö.h
"

9 
diff_›ti⁄s
 
	gdiff_›ti⁄s
;

11 c⁄° 
	gdiff_°ages_ußge
[] =

13 
COMMON_DIFF_OPTIONS_HELP
;

15 
	$diff_°ages
(
°age1
, 
°age2
, c⁄° **
∑th•ec
)

17 
i
 = 0;

18 
i
 < 
a˘ive_ƒ
) {

19 
ˇche_íåy
 *
˚
, *
°ages
[4] = { 
NULL
, };

20 
ˇche_íåy
 *
⁄e
, *
two
;

21 c⁄° *
«me
;

22 
Àn
, 
skù
;

24 
˚
 = 
a˘ive_ˇche
[
i
];

25 
skù
 = !
	`˚_∑th_m©ch
(
˚
, 
∑th•ec
);

26 
Àn
 = 
	`˚_«mñí
(
˚
);

27 
«me
 = 
˚
->name;

29 
°age
 = 
	`˚_°age
(
˚
);

30 
°ages
[
°age
] = 
˚
;

31 i‡(
a˘ive_ƒ
 <++
i
)

33 
˚
 = 
a˘ive_ˇche
[
i
];

34 i‡(
	`˚_«mñí
(
˚
Ë!
Àn
 ||

35 
	`memcmp
(
«me
, 
˚
->«me, 
Àn
))

38 
⁄e
 = 
°ages
[
°age1
];

39 
two
 = 
°ages
[
°age2
];

41 i‡(
skù
 || (!
⁄e
 && !
two
))

43 i‡(!
⁄e
)

44 
	`diff_addªmove
(&
diff_›ti⁄s
, '+', 
	`¡ohl
(
two
->
˚_mode
),

45 
two
->
sha1
, 
«me
, 
NULL
);

46 i‡(!
two
)

47 
	`diff_addªmove
(&
diff_›ti⁄s
, '-', 
	`¡ohl
(
⁄e
->
˚_mode
),

48 
⁄e
->
sha1
, 
«me
, 
NULL
);

49 i‡(
	`hashcmp
(
⁄e
->
sha1
, 
two
->sha1) ||

50 (
⁄e
->
˚_mode
 !
two
->ce_mode) ||

51 
diff_›ti⁄s
.
föd_c›õs_h¨dî
)

52 
	`diff_ch™ge
(&
diff_›ti⁄s
,

53 
	`¡ohl
(
⁄e
->
˚_mode
),Çtohl(
two
->ce_mode),

54 
⁄e
->
sha1
, 
two
->sha1, 
«me
, 
NULL
);

56 
	}
}

58 
	$cmd_diff_°ages
(
ac
, c⁄° **
av
, c⁄° *
¥efix
)

60 
°age1
, 
°age2
;

61 c⁄° **
∑th•ec
 = 
NULL
;

63 
	`gô_c⁄fig
(
gô_deÁu…_c⁄fig
);

64 
	`ªad_ˇche
();

65 
	`diff_£tup
(&
diff_›ti⁄s
);

66 1 < 
ac
 && 
av
[1][0] == '-') {

67 c⁄° *
¨g
 = 
av
[1];

68 i‡(!
	`°rcmp
(
¨g
, "-r"))

71 
diff_›t_˙t
;

72 
diff_›t_˙t
 = 
	`diff_›t_∑r£
(&
diff_›ti⁄s
,

73 
av
+1, 
ac
-1);

74 i‡(
diff_›t_˙t
 < 0)

75 
	`ußge
(
diff_°ages_ußge
);

76 i‡(
diff_›t_˙t
) {

77 
av
 +
diff_›t_˙t
;

78 
ac
 -
diff_›t_˙t
;

82 
	`ußge
(
diff_°ages_ußge
);

84 
ac
--; 
av
++;

87 i‡(!
diff_›ti⁄s
.
ouçut_f‹m©
)

88 
diff_›ti⁄s
.
ouçut_f‹m©
 = 
DIFF_FORMAT_RAW
;

90 i‡(
ac
 < 3 ||

91 
	`ssˇnf
(
av
[1], "%d", &
°age1
) != 1 ||

92 ! (0 <
°age1
 && stage1 <= 3) ||

93 
	`ssˇnf
(
av
[2], "%d", &
°age2
) != 1 ||

94 ! (0 <
°age2
 && stage2 <= 3))

95 
	`ußge
(
diff_°ages_ußge
);

97 
av
 += 3;

98 
∑th•ec
 = 
	`gë_∑th•ec
(
¥efix
, 
av
);

100 i‡(
	`diff_£tup_d⁄e
(&
diff_›ti⁄s
) < 0)

101 
	`ußge
(
diff_°ages_ußge
);

103 
	`diff_°ages
(
°age1
, 
°age2
, 
∑th•ec
);

104 
	`diffc‹e_°d
(&
diff_›ti⁄s
);

105 
	`diff_Êush
(&
diff_›ti⁄s
);

107 
	}
}

	@builtin-diff-tree.c

1 
	~"ˇche.h
"

2 
	~"diff.h
"

3 
	~"commô.h
"

4 
	~"log-åì.h
"

5 
	~"buûtö.h
"

7 
ªv_öfo
 
	glog_åì_›t
;

9 
	$diff_åì_commô_sha1
(c⁄° *
sha1
)

11 
commô
 *commô = 
	`lookup_commô_ª„ªn˚
(
sha1
);

12 i‡(!
commô
)

14  
	`log_åì_commô
(&
log_åì_›t
, 
commô
);

15 
	}
}

17 
	$diff_åì_°dö
(*
löe
)

19 
Àn
 = 
	`°æí
(
löe
);

20 
sha1
[20];

21 
commô
 *commit;

23 i‡(!
Àn
 || 
löe
[len-1] != '\n')

25 
löe
[
Àn
-1] = 0;

26 i‡(
	`gë_sha1_hex
(
löe
, 
sha1
))

28 
commô
 = 
	`lookup_commô
(
sha1
);

29 i‡(!
commô
 || 
	`∑r£_commô
(commit))

31 i‡(
	`is•a˚
(
löe
[40]Ë&& !
	`gë_sha1_hex
÷öe+41, 
sha1
)) {

33 
pos
 = 41;

34 
commô_li°
 **
µå
, *
∑ª¡s
;

37 
∑ª¡s
 = 
commô
->parents;Öarents; ) {

38 
commô_li°
 *
tmp
 = 
∑ª¡s
->
√xt
;

39 
	`‰ì
(
∑ª¡s
);

40 
∑ª¡s
 = 
tmp
;

42 
commô
->
∑ª¡s
 = 
NULL
;

43 
µå
 = &(
commô
->
∑ª¡s
);

44 
löe
[
pos
] && !
	`gë_sha1_hex
÷öê+Öos, 
sha1
)) {

45 
commô
 *
∑ª¡
 = 
	`lookup_commô
(
sha1
);

46 i‡(
∑ª¡
) {

47 
µå
 = &
	`commô_li°_ö£π
(
∑ª¡
,Ö±r)->
√xt
;

49 
pos
 += 41;

52  
	`log_åì_commô
(&
log_åì_›t
, 
commô
);

53 
	}
}

55 c⁄° 
	gdiff_åì_ußge
[] =

60 
COMMON_DIFF_OPTIONS_HELP
;

62 
	$cmd_diff_åì
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

64 
ƒ_sha1
;

65 
löe
[1000];

66 
obje˘
 *
åì1
, *
åì2
;

67 
ªv_öfo
 *
›t
 = &
log_åì_›t
;

68 
ªad_°dö
 = 0;

70 
	`öô_ªvisi⁄s
(
›t
, 
¥efix
);

71 
	`gô_c⁄fig
(
gô_deÁu…_c⁄fig
);

72 
ƒ_sha1
 = 0;

73 
›t
->
abbªv
 = 0;

74 
›t
->
diff
 = 1;

75 
¨gc
 = 
	`£tup_ªvisi⁄s
◊rgc, 
¨gv
, 
›t
, 
NULL
);

77 --
¨gc
 > 0) {

78 c⁄° *
¨g
 = *++
¨gv
;

80 i‡(!
	`°rcmp
(
¨g
, "--stdin")) {

81 
ªad_°dö
 = 1;

84 
	`ußge
(
diff_åì_ußge
);

87 i‡(!
›t
->
diff›t
.
ouçut_f‹m©
)

88 
›t
->
diff›t
.
ouçut_f‹m©
 = 
DIFF_FORMAT_RAW
;

95 
ƒ_sha1
 = 
›t
->
≥ndög
.
ƒ
;

96 
ƒ_sha1
) {

98 i‡(!
ªad_°dö
)

99 
	`ußge
(
diff_åì_ußge
);

102 
åì1
 = 
›t
->
≥ndög
.
obje˘s
[0].
ôem
;

103 
	`diff_åì_commô_sha1
(
åì1
->
sha1
);

106 
åì1
 = 
›t
->
≥ndög
.
obje˘s
[0].
ôem
;

107 
åì2
 = 
›t
->
≥ndög
.
obje˘s
[1].
ôem
;

108 i‡(
åì2
->
Êags
 & 
UNINTERESTING
) {

109 
obje˘
 *
tmp
 = 
åì2
;

110 
åì2
 = 
åì1
;

111 
åì1
 = 
tmp
;

113 
	`diff_åì_sha1
(
åì1
->
sha1
,

114 
åì2
->
sha1
,

115 "", &
›t
->
diff›t
);

116 
	`log_åì_diff_Êush
(
›t
);

120 i‡(!
ªad_°dö
)

123 i‡(
›t
->
diff›t
.
dëe˘_ª«me
)

124 
›t
->
diff›t
.
£tup
 |(
DIFF_SETUP_USE_SIZE_CACHE
 |

125 
DIFF_SETUP_USE_CACHE
);

126 
	`fgës
(
löe
, ÷öe), 
°dö
)) {

127 
sha1
[20];

129 i‡(
	`gë_sha1_hex
(
löe
, 
sha1
)) {

130 
	`Âuts
(
löe
, 
°dout
);

131 
	`fÊush
(
°dout
);

134 
	`diff_åì_°dö
(
löe
);

137 
	}
}

	@builtin-diff.c

6 
	~"ˇche.h
"

7 
	~"commô.h
"

8 
	~"blob.h
"

9 
	~"èg.h
"

10 
	~"diff.h
"

11 
	~"diffc‹e.h
"

12 
	~"ªvisi⁄.h
"

13 
	~"log-åì.h
"

14 
	~"buûtö.h
"

20 
	sbloböfo
 {

21 
	msha1
[20];

22 c⁄° *
	m«me
;

25 c⁄° 
	gbuûtö_diff_ußge
[] =

28 
	$buûtö_diff_fûes
(
ªv_öfo
 *
ªvs
,

29 
¨gc
, c⁄° **
¨gv
)

31 
sûít
 = 0;

32 1 < 
¨gc
) {

33 c⁄° *
¨g
 = 
¨gv
[1];

34 i‡(!
	`°rcmp
(
¨g
, "--base"))

35 
ªvs
->
max_cou¡
 = 1;

36 i‡(!
	`°rcmp
(
¨g
, "--ours"))

37 
ªvs
->
max_cou¡
 = 2;

38 i‡(!
	`°rcmp
(
¨g
, "--theirs"))

39 
ªvs
->
max_cou¡
 = 3;

40 i‡(!
	`°rcmp
(
¨g
, "-q"))

41 
sûít
 = 1;

43 
	`ußge
(
buûtö_diff_ußge
);

44 
¨gv
++; 
¨gc
--;

51 i‡(
ªvs
->
≥ndög
.
ƒ
 ||

52 
ªvs
->
mö_age
 != -1 ||

53 
ªvs
->
max_age
 != -1 ||

54 3 < 
ªvs
->
max_cou¡
)

55 
	`ußge
(
buûtö_diff_ußge
);

56 i‡(
ªvs
->
max_cou¡
 < 0 &&

57 (
ªvs
->
diff›t
.
ouçut_f‹m©
 & 
DIFF_FORMAT_PATCH
))

58 
ªvs
->
comböe_mîges
 =Ñevs->
dí£_comböed_mîges
 = 1;

59  
	`run_diff_fûes
(
ªvs
, 
sûít
);

60 
	}
}

62 
	$°uff_ch™ge
(
diff_›ti⁄s
 *
›t
,

63 
ﬁd_mode
, 
√w_mode
,

64 c⁄° *
ﬁd_sha1
,

65 c⁄° *
√w_sha1
,

66 c⁄° *
ﬁd_«me
,

67 c⁄° *
√w_«me
)

69 
diff_fûe•ec
 *
⁄e
, *
two
;

71 i‡(!
	`is_nuŒ_sha1
(
ﬁd_sha1
Ë&& !is_nuŒ_sha1(
√w_sha1
) &&

72 !
	`hashcmp
(
ﬁd_sha1
, 
√w_sha1
))

75 i‡(
›t
->
ªvî£_diff
) {

76 
tmp
;

77 c⁄° *
tmp_u
;

78 c⁄° *
tmp_c
;

79 
tmp
 = 
ﬁd_mode
; old_modê
√w_mode
;Çew_mode =Åmp;

80 
tmp_u
 = 
ﬁd_sha1
; old_sha1 = 
√w_sha1
;Çew_sha1 =Åmp_u;

81 
tmp_c
 = 
ﬁd_«me
; old_«mê
√w_«me
;Çew_name =Åmp_c;

83 
⁄e
 = 
	`Æloc_fûe•ec
(
ﬁd_«me
);

84 
two
 = 
	`Æloc_fûe•ec
(
√w_«me
);

85 
	`fûl_fûe•ec
(
⁄e
, 
ﬁd_sha1
, 
ﬁd_mode
);

86 
	`fûl_fûe•ec
(
two
, 
√w_sha1
, 
√w_mode
);

89 
	`diff_queue
(&
diff_queued_diff
, 
⁄e
, 
two
);

90 
	}
}

92 
	$buûtö_diff_b_f
(
ªv_öfo
 *
ªvs
,

93 
¨gc
, c⁄° **
¨gv
,

94 
bloböfo
 *
blob
,

95 c⁄° *
∑th
)

98 
°©
 
°
;

100 i‡(
¨gc
 > 1)

101 
	`ußge
(
buûtö_diff_ußge
);

103 i‡(
	`l°©
(
∑th
, &
°
))

104 
	`dõ
("'%s': %s", 
∑th
, 
	`°ªº‹
(
î∫o
));

105 i‡(!(
	`S_ISREG
(
°
.
°_mode
Ë|| 
	`S_ISLNK
(st.st_mode)))

106 
	`dõ
("'%s':ÇŸáÑeguœ∏fûê‹ symlök", 
∑th
);

107 
	`°uff_ch™ge
(&
ªvs
->
diff›t
,

108 
	`ˇn⁄_mode
(
°
.
°_mode
), canon_mode(st.st_mode),

109 
blob
[0].
sha1
, 
nuŒ_sha1
,

110 
∑th
,Öath);

111 
	`diffc‹e_°d
(&
ªvs
->
diff›t
);

112 
	`diff_Êush
(&
ªvs
->
diff›t
);

114 
	}
}

116 
	$buûtö_diff_blobs
(
ªv_öfo
 *
ªvs
,

117 
¨gc
, c⁄° **
¨gv
,

118 
bloböfo
 *
blob
)

120 
mode
 = 
	`ˇn⁄_mode
(
S_IFREG
 | 0644);

122 i‡(
¨gc
 > 1)

123 
	`ußge
(
buûtö_diff_ußge
);

125 
	`°uff_ch™ge
(&
ªvs
->
diff›t
,

126 
mode
, mode,

127 
blob
[0].
sha1
, blob[1].sha1,

128 
blob
[0].
«me
, blob[1].name);

129 
	`diffc‹e_°d
(&
ªvs
->
diff›t
);

130 
	`diff_Êush
(&
ªvs
->
diff›t
);

132 
	}
}

134 
	$buûtö_diff_ödex
(
ªv_öfo
 *
ªvs
,

135 
¨gc
, c⁄° **
¨gv
)

137 
ˇched
 = 0;

138 1 < 
¨gc
) {

139 c⁄° *
¨g
 = 
¨gv
[1];

140 i‡(!
	`°rcmp
(
¨g
, "--cached"))

141 
ˇched
 = 1;

143 
	`ußge
(
buûtö_diff_ußge
);

144 
¨gv
++; 
¨gc
--;

150 i‡(
ªvs
->
≥ndög
.
ƒ
 != 1 ||

151 
ªvs
->
max_cou¡
 !-1 ||Ñevs->
mö_age
 != -1 ||

152 
ªvs
->
max_age
 != -1)

153 
	`ußge
(
buûtö_diff_ußge
);

154  
	`run_diff_ödex
(
ªvs
, 
ˇched
);

155 
	}
}

157 
	$buûtö_diff_åì
(
ªv_öfo
 *
ªvs
,

158 
¨gc
, c⁄° **
¨gv
,

159 
obje˘_¨øy_íåy
 *
ít
)

161 c⁄° *(
sha1
[2]);

162 
sw≠
 = 0;

164 i‡(
¨gc
 > 1)

165 
	`ußge
(
buûtö_diff_ußge
);

170 i‡(
ít
[1].
ôem
->
Êags
 & 
UNINTERESTING
)

171 
sw≠
 = 1;

172 
sha1
[
sw≠
] = 
ít
[0].
ôem
->sha1;

173 
sha1
[1-
sw≠
] = 
ít
[1].
ôem
->sha1;

174 
	`diff_åì_sha1
(
sha1
[0], sha1[1], "", &
ªvs
->
diff›t
);

175 
	`log_åì_diff_Êush
(
ªvs
);

177 
	}
}

179 
	$buûtö_diff_comböed
(
ªv_öfo
 *
ªvs
,

180 
¨gc
, c⁄° **
¨gv
,

181 
obje˘_¨øy_íåy
 *
ít
,

182 
íts
)

184 c⁄° (*
∑ª¡
)[20];

185 
i
;

187 i‡(
¨gc
 > 1)

188 
	`ußge
(
buûtö_diff_ußge
);

190 i‡(!
ªvs
->
dí£_comböed_mîges
 && !ªvs->
comböe_mîges
)

191 
ªvs
->
dí£_comböed_mîges
 =Ñevs->
comböe_mîges
 = 1;

192 
∑ª¡
 = 
	`xmÆloc
(
íts
 * (*parent));

194 
i
 = 0; i < 
íts
; i++)

195 
	`hash˝y
((*)
∑ª¡
 + 
i
, 
ít
[
íts
 - 1 - i].
ôem
->
sha1
);

196 
	`diff_åì_comböed
(
∑ª¡
[0],Ö¨íà+ 1, 
íts
 - 1,

197 
ªvs
->
dí£_comböed_mîges
,Ñevs);

199 
	}
}

201 
	$add_hód
(
ªv_öfo
 *
ªvs
)

203 
sha1
[20];

204 
obje˘
 *
obj
;

205 i‡(
	`gë_sha1
("HEAD", 
sha1
))

207 
obj
 = 
	`∑r£_obje˘
(
sha1
);

208 i‡(!
obj
)

210 
	`add_≥ndög_obje˘
(
ªvs
, 
obj
, "HEAD");

211 
	}
}

213 
	$cmd_diff
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

215 
i
;

216 
ªv_öfo
 
ªv
;

217 
obje˘_¨øy_íåy
 
ít
[100];

218 
íts
 = 0, 
blobs
 = 0, 
∑ths
 = 0;

219 c⁄° *
∑th
 = 
NULL
;

220 
bloböfo
 
blob
[2];

242 
	`gô_c⁄fig
(
gô_diff_ui_c⁄fig
);

243 
	`öô_ªvisi⁄s
(&
ªv
, 
¥efix
);

245 
¨gc
 = 
	`£tup_ªvisi⁄s
◊rgc, 
¨gv
, &
ªv
, 
NULL
);

246 i‡(!
ªv
.
diff›t
.
ouçut_f‹m©
) {

247 
ªv
.
diff›t
.
ouçut_f‹m©
 = 
DIFF_FORMAT_PATCH
;

248 i‡(
	`diff_£tup_d⁄e
(&
ªv
.
diff›t
) < 0)

249 
	`dõ
("diff_setup_done failed");

255 i‡(!
ªv
.
≥ndög
.
ƒ
) {

256 
i
;

257 
i
 = 1; i < 
¨gc
; i++) {

258 c⁄° *
¨g
 = 
¨gv
[
i
];

259 i‡(!
	`°rcmp
(
¨g
, "--"))

261 i‡(!
	`°rcmp
(
¨g
, "--cached")) {

262 
	`add_hód
(&
ªv
);

268 
i
 = 0; i < 
ªv
.
≥ndög
.
ƒ
; i++) {

269 
obje˘_¨øy_íåy
 *
li°
 = 
ªv
.
≥ndög
.
obje˘s
+
i
;

270 
obje˘
 *
obj
 = 
li°
->
ôem
;

271 c⁄° *
«me
 = 
li°
->name;

272 
Êags
 = (
obj
->Êag†& 
UNINTERESTING
);

273 i‡(!
obj
->
∑r£d
)

274 
obj
 = 
	`∑r£_obje˘
(obj->
sha1
);

275 
obj
 = 
	`dîef_èg
(obj, 
NULL
, 0);

276 i‡(!
obj
)

277 
	`dõ
("övÆid obje˘ '%s' giví.", 
«me
);

278 i‡(
obj
->
ty≥
 =
OBJ_COMMIT
)

279 
obj
 = &((
commô
 *)obj)->
åì
->
obje˘
;

280 i‡(
obj
->
ty≥
 =
OBJ_TREE
) {

281 i‡(
	`ARRAY_SIZE
(
ít
Ë<
íts
)

282 
	`dõ
("moreÅhan %dÅrees given: '%s'",

283 (Ë
	`ARRAY_SIZE
(
ít
), 
«me
);

284 
obj
->
Êags
 |= flags;

285 
ít
[
íts
].
ôem
 = 
obj
;

286 
ít
[
íts
].
«me
 =Çame;

287 
íts
++;

290 i‡(
obj
->
ty≥
 =
OBJ_BLOB
) {

291 i‡(2 <
blobs
)

292 
	`dõ
("m‹êth™Åwÿblob†giví: '%s'", 
«me
);

293 
	`hash˝y
(
blob
[
blobs
].
sha1
, 
obj
->sha1);

294 
blob
[
blobs
].
«me
 =Çame;

295 
blobs
++;

299 
	`dõ
("unh™dÀd obje˘ '%s' giví.", 
«me
);

301 i‡(
ªv
.
¥u√_d©a
) {

302 c⁄° **
∑th•ec
 = 
ªv
.
¥u√_d©a
;

303 *
∑th•ec
) {

304 i‡(!
∑th
)

305 
∑th
 = *
∑th•ec
;

306 
∑ths
++;

307 
∑th•ec
++;

314 i‡(!
íts
) {

315 
blobs
) {

317  
	`buûtö_diff_fûes
(&
ªv
, 
¨gc
, 
¨gv
);

320 i‡(
∑ths
 != 1)

321 
	`ußge
(
buûtö_diff_ußge
);

322  
	`buûtö_diff_b_f
(&
ªv
, 
¨gc
, 
¨gv
, 
blob
, 
∑th
);

325 i‡(
∑ths
)

326 
	`ußge
(
buûtö_diff_ußge
);

327  
	`buûtö_diff_blobs
(&
ªv
, 
¨gc
, 
¨gv
, 
blob
);

330 
	`ußge
(
buûtö_diff_ußge
);

333 i‡(
blobs
)

334 
	`ußge
(
buûtö_diff_ußge
);

335 i‡(
íts
 == 1)

336  
	`buûtö_diff_ödex
(&
ªv
, 
¨gc
, 
¨gv
);

337 i‡(
íts
 == 2)

338  
	`buûtö_diff_åì
(&
ªv
, 
¨gc
, 
¨gv
, 
ít
);

339 i‡((
íts
 =3Ë&& (
ít
[0].
ôem
->
Êags
 & 
UNINTERESTING
)) {

344 
ít
[1] =Ént[2];

345  
	`buûtö_diff_åì
(&
ªv
, 
¨gc
, 
¨gv
, 
ít
);

348  
	`buûtö_diff_comböed
(&
ªv
, 
¨gc
, 
¨gv
,

349 
ít
, 
íts
);

350 
	`ußge
(
buûtö_diff_ußge
);

351 
	}
}

	@builtin-fmt-merge-msg.c

1 
	~"buûtö.h
"

2 
	~"ˇche.h
"

3 
	~"commô.h
"

4 
	~"diff.h
"

5 
	~"ªvisi⁄.h
"

6 
	~"èg.h
"

8 c⁄° *
	gfmt_mîge_msg_ußge
 =

11 
	gmîge_summ¨y
;

13 
	$fmt_mîge_msg_c⁄fig
(c⁄° *
key
, c⁄° *
vÆue
)

15 i‡(!
	`°rcmp
("mîge.summ¨y", 
key
))

16 
mîge_summ¨y
 = 
	`gô_c⁄fig_boﬁ
(
key
, 
vÆue
);

18 
	}
}

20 
	sli°
 {

21 **
	mli°
;

22 **
	m∑ylﬂd
;

23 
	mƒ
, 
	mÆloc
;

26 
	$≠≥nd_to_li°
(
li°
 *li°, *
vÆue
, *
∑ylﬂd
)

28 i‡(
li°
->
ƒ
 =li°->
Æloc
) {

29 
li°
->
Æloc
 += 32;

30 
li°
->li° = 
	`xªÆloc
÷i°->li°, (*Ë*Üi°->
Æloc
);

31 
li°
->
∑ylﬂd
 = 
	`xªÆloc
(list->payload,

32 (*Ë* 
li°
->
Æloc
);

34 
li°
->
∑ylﬂd
[li°->
ƒ
] =Öayload;

35 
li°
->li°[li°->
ƒ
++] = 
vÆue
;

36 
	}
}

38 
	$föd_ö_li°
(
li°
 *li°, *
vÆue
)

40 
i
;

42 
i
 = 0; i < 
li°
->
ƒ
; i++)

43 i‡(!
	`°rcmp
(
li°
->li°[
i
], 
vÆue
))

44  
i
;

47 
	}
}

49 
	$‰ì_li°
(
li°
 *list)

51 
i
;

53 i‡(
li°
->
Æloc
 == 0)

56 
i
 = 0; i < 
li°
->
ƒ
; i++) {

57 
	`‰ì
(
li°
->li°[
i
]);

58 
	`‰ì
(
li°
->
∑ylﬂd
[
i
]);

60 
	`‰ì
(
li°
->list);

61 
	`‰ì
(
li°
->
∑ylﬂd
);

62 
li°
->
ƒ
 =Üi°->
Æloc
 = 0;

63 
	}
}

65 
	s§c_d©a
 {

66 
li°
 
	mbønch
, 
	mèg
, 
	mr_bønch
, 
	mgíîic
;

67 
	mhód_°©us
;

70 
li°
 
	g§cs
 = { 
NULL
, NULL, 0, 0};

71 
li°
 
	g‹igös
 = { 
NULL
, NULL, 0, 0};

73 
	$h™dÀ_löe
(*
löe
)

75 
i
, 
Àn
 = 
	`°æí
(
löe
);

76 *
sha1
;

77 *
§c
, *
‹igö
;

78 
§c_d©a
 *src_data;

79 
puŒög_hód
 = 0;

81 i‡(
Àn
 < 43 || 
löe
[40] != '\t')

84 i‡(!
	`°∫cmp
(
löe
 + 41, "not-for-merge", 13))

87 i‡(
löe
[41] != '\t')

90 
löe
[40] = 0;

91 
sha1
 = 
	`xmÆloc
(20);

92 
i
 = 
	`gë_sha1
(
löe
, 
sha1
);

93 
löe
[40] = '\t';

94 i‡(
i
)

97 i‡(
löe
[
Àn
 - 1] == '\n')

98 
löe
[
Àn
 - 1] = 0;

99 
löe
 += 42;

101 
§c
 = 
	`°r°r
(
löe
, " of ");

102 i‡(
§c
) {

103 *
§c
 = 0;

104 
§c
 += 4;

105 
puŒög_hód
 = 0;

107 
§c
 = 
löe
;

108 
puŒög_hód
 = 1;

111 
i
 = 
	`föd_ö_li°
(&
§cs
, 
§c
);

112 i‡(
i
 < 0) {

113 
i
 = 
§cs
.
ƒ
;

114 
	`≠≥nd_to_li°
(&
§cs
, 
	`x°rdup
(
§c
),

115 
	`xˇŒoc
(1, (
§c_d©a
)));

117 
§c_d©a
 = 
§cs
.
∑ylﬂd
[
i
];

119 i‡(
puŒög_hód
) {

120 
‹igö
 = 
	`x°rdup
(
§c
);

121 
§c_d©a
->
hód_°©us
 |= 1;

122 } i‡(!
	`°∫cmp
(
löe
, "branch ", 7)) {

123 
‹igö
 = 
	`x°rdup
(
löe
 + 7);

124 
	`≠≥nd_to_li°
(&
§c_d©a
->
bønch
, 
‹igö
, 
NULL
);

125 
§c_d©a
->
hód_°©us
 |= 2;

126 } i‡(!
	`°∫cmp
(
löe
, "tag ", 4)) {

127 
‹igö
 = 
löe
;

128 
	`≠≥nd_to_li°
(&
§c_d©a
->
èg
, 
	`x°rdup
(
‹igö
 + 4), 
NULL
);

129 
§c_d©a
->
hód_°©us
 |= 2;

130 } i‡(!
	`°∫cmp
(
löe
, "remote branch ", 14)) {

131 
‹igö
 = 
	`x°rdup
(
löe
 + 14);

132 
	`≠≥nd_to_li°
(&
§c_d©a
->
r_bønch
, 
‹igö
, 
NULL
);

133 
§c_d©a
->
hód_°©us
 |= 2;

135 
‹igö
 = 
	`x°rdup
(
§c
);

136 
	`≠≥nd_to_li°
(&
§c_d©a
->
gíîic
, 
	`x°rdup
(
löe
), 
NULL
);

137 
§c_d©a
->
hód_°©us
 |= 2;

140 i‡(!
	`°rcmp
(".", 
§c
Ë|| !°rcmp(§c, 
‹igö
)) {

141 
Àn
 = 
	`°æí
(
‹igö
);

142 i‡(
‹igö
[0] ='\'' && origö[
Àn
 - 1] == '\'') {

143 *
√w_‹igö
 = 
	`xmÆloc
(
Àn
 - 1);

144 
	`mem˝y
(
√w_‹igö
, 
‹igö
 + 1, 
Àn
 - 2);

145 
√w_‹igö
[
Àn
 - 2] = 0;

146 
‹igö
 = 
√w_‹igö
;

148 
‹igö
 = 
	`x°rdup
(origin);

150 *
√w_‹igö
 = 
	`xmÆloc
(
	`°æí
(
‹igö
Ë+ såÀn(
§c
) + 5);

151 
	`•rötf
(
√w_‹igö
, "%†o‡%s", 
‹igö
, 
§c
);

152 
‹igö
 = 
√w_‹igö
;

154 
	`≠≥nd_to_li°
(&
‹igös
, 
‹igö
, 
sha1
);

156 
	}
}

158 
	$¥öt_joöed
(c⁄° *
söguœr
, c⁄° *
∂uøl
,

159 
li°
 *list)

161 i‡(
li°
->
ƒ
 == 0)

163 i‡(
li°
->
ƒ
 == 1) {

164 
	`¥ötf
("%s%s", 
söguœr
, 
li°
->list[0]);

166 
i
;

167 
	`¥ötf
("%s", 
∂uøl
);

168 
i
 = 0; i < 
li°
->
ƒ
 - 1; i++)

169 
	`¥ötf
("%s%s", 
i
 > 0 ? ", " : "", 
li°
->list[i]);

170 
	`¥ötf
("ánd %s", 
li°
->li°[li°->
ƒ
 - 1]);

172 
	}
}

174 
	$sh‹éog
(c⁄° *
«me
, *
sha1
,

175 
commô
 *
hód
, 
ªv_öfo
 *
ªv
, 
limô
)

177 
i
, 
cou¡
 = 0;

178 
commô
 *commit;

179 
obje˘
 *
bønch
;

180 
li°
 
subje˘s
 = { 
NULL
, NULL, 0, 0 };

181 
Êags
 = 
UNINTERESTING
 | 
TREECHANGE
 | 
SEEN
 | 
SHOWN
 | 
ADDED
;

183 
bønch
 = 
	`dîef_èg
(
	`∑r£_obje˘
(
sha1
), 
	`sha1_to_hex
(sha1), 40);

184 i‡(!
bønch
 || bønch->
ty≥
 !
OBJ_COMMIT
)

187 
	`£tup_ªvisi⁄s
(0, 
NULL
, 
ªv
, NULL);

188 
ªv
->
ign‹e_mîges
 = 1;

189 
	`add_≥ndög_obje˘
(
ªv
, 
bønch
, 
«me
);

190 
	`add_≥ndög_obje˘
(
ªv
, &
hód
->
obje˘
, "^HEAD");

191 
hód
->
obje˘
.
Êags
 |
UNINTERESTING
;

192 
	`¥ï¨e_ªvisi⁄_wÆk
(
ªv
);

193 (
commô
 = 
	`gë_ªvisi⁄
(
ªv
)Ë!
NULL
) {

194 *
⁄ñöe
, *
bﬁ
, *
eﬁ
;

197 i‡(
commô
->
∑ª¡s
 && commô->∑ª¡s->
√xt
)

200 
cou¡
++;

201 i‡(
subje˘s
.
ƒ
 > 
limô
)

204 
bﬁ
 = 
	`°r°r
(
commô
->
buf„r
, "\n\n");

205 i‡(!
bﬁ
) {

206 
	`≠≥nd_to_li°
(&
subje˘s
, 
	`x°rdup
(
	`sha1_to_hex
(

207 
commô
->
obje˘
.
sha1
)),

208 
NULL
);

212 
bﬁ
 += 2;

213 
eﬁ
 = 
	`°rchr
(
bﬁ
, '\n');

215 i‡(
eﬁ
) {

216 
Àn
 = 
eﬁ
 - 
bﬁ
;

217 
⁄ñöe
 = 
	`xmÆloc
(
Àn
 + 1);

218 
	`mem˝y
(
⁄ñöe
, 
bﬁ
, 
Àn
);

219 
⁄ñöe
[
Àn
] = 0;

221 
⁄ñöe
 = 
	`x°rdup
(
bﬁ
);

222 
	`≠≥nd_to_li°
(&
subje˘s
, 
⁄ñöe
, 
NULL
);

225 i‡(
cou¡
 > 
limô
)

226 
	`¥ötf
("\n* %s: (%d commôs)\n", 
«me
, 
cou¡
);

228 
	`¥ötf
("\n* %s:\n", 
«me
);

230 
i
 = 0; i < 
subje˘s
.
ƒ
; i++)

231 i‡(
i
 >
limô
)

232 
	`¥ötf
(" ...\n");

234 
	`¥ötf
(" %s\n", 
subje˘s
.
li°
[
i
]);

236 
	`˛ór_commô_m¨ks
((
commô
 *)
bønch
, 
Êags
);

237 
	`˛ór_commô_m¨ks
(
hód
, 
Êags
);

238 
	`‰ì_commô_li°
(
ªv
->
commôs
);

239 
ªv
->
commôs
 = 
NULL
;

240 
ªv
->
≥ndög
.
ƒ
 = 0;

242 
	`‰ì_li°
(&
subje˘s
);

243 
	}
}

245 
	$cmd_fmt_mîge_msg
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

247 
limô
 = 20, 
i
 = 0;

248 
löe
[1024];

249 
FILE
 *
ö
 = 
°dö
;

250 c⁄° *
£p
 = "";

251 
hód_sha1
[20];

252 c⁄° *
cuºít_bønch
;

254 
	`gô_c⁄fig
(
fmt_mîge_msg_c⁄fig
);

256 
¨gc
 > 1) {

257 i‡(!
	`°rcmp
(
¨gv
[1], "--summary"))

258 
mîge_summ¨y
 = 1;

259 i‡(!
	`°rcmp
(
¨gv
[1], "--no-summary"))

260 
mîge_summ¨y
 = 0;

261 i‡(!
	`°rcmp
(
¨gv
[1], "-F") || !strcmp(argv[1], "--file")) {

262 i‡(
¨gc
 < 2)

263 
	`dõ
 ("Which file?");

264 i‡(!
	`°rcmp
(
¨gv
[2], "-"))

265 
ö
 = 
°dö
;

267 
	`f˛o£
(
ö
);

268 
ö
 = 
	`f›í
(
¨gv
[2], "r");

270 
¨gc
--; 
¨gv
++;

273 
¨gc
--; 
¨gv
++;

276 i‡(
¨gc
 > 1)

277 
	`ußge
(
fmt_mîge_msg_ußge
);

280 
cuºít_bønch
 = 
	`ªsﬁve_ªf
("HEAD", 
hód_sha1
, 1, 
NULL
);

281 i‡(!
cuºít_bønch
)

282 
	`dõ
("No current branch");

283 i‡(!
	`°∫cmp
(
cuºít_bønch
, "refs/heads/", 11))

284 
cuºít_bønch
 += 11;

286 
	`fgës
(
löe
, ÷öe), 
ö
)) {

287 
i
++;

288 i‡(
löe
[0] == 0)

290 i‡(
	`h™dÀ_löe
(
löe
))

291 
	`dõ
 ("Eº‹ i¿löê%d: %s", 
i
, 
löe
);

294 
	`¥ötf
("Merge ");

295 
i
 = 0; i < 
§cs
.
ƒ
; i++) {

296 
§c_d©a
 *§c_d©®
§cs
.
∑ylﬂd
[
i
];

297 c⁄° *
sub£p
 = "";

299 
	`¥ötf
(
£p
);

300 
£p
 = "; ";

302 i‡(
§c_d©a
->
hód_°©us
 == 1) {

303 
	`¥ötf
(
§cs
.
li°
[
i
]);

306 i‡(
§c_d©a
->
hód_°©us
 == 3) {

307 
sub£p
 = ", ";

308 
	`¥ötf
("HEAD");

310 i‡(
§c_d©a
->
bønch
.
ƒ
) {

311 
	`¥ötf
(
sub£p
);

312 
sub£p
 = ", ";

313 
	`¥öt_joöed
("bønch ", "bønche†", &
§c_d©a
->
bønch
);

315 i‡(
§c_d©a
->
r_bønch
.
ƒ
) {

316 
	`¥ötf
(
sub£p
);

317 
sub£p
 = ", ";

318 
	`¥öt_joöed
("remote branch ", "remote branches ",

319 &
§c_d©a
->
r_bønch
);

321 i‡(
§c_d©a
->
èg
.
ƒ
) {

322 
	`¥ötf
(
sub£p
);

323 
sub£p
 = ", ";

324 
	`¥öt_joöed
("èg ", "èg†", &
§c_d©a
->
èg
);

326 i‡(
§c_d©a
->
gíîic
.
ƒ
) {

327 
	`¥ötf
(
sub£p
);

328 
	`¥öt_joöed
("commô ", "commô†", &
§c_d©a
->
gíîic
);

330 i‡(
	`°rcmp
(".", 
§cs
.
li°
[
i
]))

331 
	`¥ötf
(" o‡%s", 
§cs
.
li°
[
i
]);

334 i‡(!
	`°rcmp
("ma°î", 
cuºít_bønch
))

335 
	`putch¨
('\n');

337 
	`¥ötf
(" i¡ÿ%s\n", 
cuºít_bønch
);

339 i‡(
mîge_summ¨y
) {

340 
commô
 *
hód
;

341 
ªv_öfo
 
ªv
;

343 
hód
 = 
	`lookup_commô
(
hód_sha1
);

344 
	`öô_ªvisi⁄s
(&
ªv
, 
¥efix
);

345 
ªv
.
commô_f‹m©
 = 
CMIT_FMT_ONELINE
;

346 
ªv
.
ign‹e_mîges
 = 1;

347 
ªv
.
limôed
 = 1;

349 
i
 = 0; i < 
‹igös
.
ƒ
; i++)

350 
	`sh‹éog
(
‹igös
.
li°
[
i
], origös.
∑ylﬂd
[i],

351 
hód
, &
ªv
, 
limô
);

357 
	}
}

	@builtin-for-each-ref.c

1 
	~"ˇche.h
"

2 
	~"ªfs.h
"

3 
	~"obje˘.h
"

4 
	~"èg.h
"

5 
	~"commô.h
"

6 
	~"åì.h
"

7 
	~"blob.h
"

8 
	~"quŸe.h
"

11 
	#QUOTE_NONE
 0

	)

12 
	#QUOTE_SHELL
 1

	)

13 
	#QUOTE_PERL
 2

	)

14 
	#QUOTE_PYTHON
 3

	)

15 
	#QUOTE_TCL
 4

	)

17 íum { 
	mFIELD_STR
, 
	mFIELD_ULONG
, 
	mFIELD_TIME
 } 
	tcmp_ty≥
;

19 
	s©om_vÆue
 {

20 c⁄° *
	ms
;

21 
	mul
;

24 
	sªf_s‹t
 {

25 
ªf_s‹t
 *
	m√xt
;

26 
	m©om
;

27 
	mªvî£
 : 1;

30 
	sªföfo
 {

31 *
	mª‚ame
;

32 
	mobje˘«me
[20];

33 
©om_vÆue
 *
	mvÆue
;

37 c⁄° *
	m«me
;

38 
cmp_ty≥
 
	mcmp_ty≥
;

39 } 
	gvÆid_©om
[] = {

42 { "obje˘size", 
FIELD_ULONG
 },

46 { "num∑ª¡", 
FIELD_ULONG
 },

53 { "auth‹d©e", 
FIELD_TIME
 },

57 { "commôãrd©e", 
FIELD_TIME
 },

61 { "èggîd©e", 
FIELD_TIME
 },

63 { "¸ót‹d©e", 
FIELD_TIME
 },

79 c⁄° **
	gu£d_©om
;

80 
cmp_ty≥
 *
	gu£d_©om_ty≥
;

81 
	gu£d_©om_˙t
, 
	gs‹t_©om_limô
, 
	g√ed_ègged
;

86 
	$∑r£_©om
(c⁄° *
©om
, c⁄° *
ï
)

88 c⁄° *
•
;

89 *
n
;

90 
i
, 
©
;

92 
•
 = 
©om
;

93 i‡(*
•
 ='*' && s∞< 
ï
)

94 
•
++;

95 i‡(
ï
 <
•
)

96 
	`dõ
("mÆf‹med fõldÇame: %.*s", ()(
ï
-
©om
),átom);

99 
i
 = 0; i < 
u£d_©om_˙t
; i++) {

100 
Àn
 = 
	`°æí
(
u£d_©om
[
i
]);

101 i‡(
Àn
 =
ï
 - 
©om
 && !
	`memcmp
(
u£d_©om
[
i
],átom,Üen))

102  
i
;

106 
i
 = 0; i < 
	`ARRAY_SIZE
(
vÆid_©om
); i++) {

107 
Àn
 = 
	`°æí
(
vÆid_©om
[
i
].
«me
);

108 i‡(
Àn
 =
ï
 - 
•
 && !
	`memcmp
(
vÆid_©om
[
i
].
«me
, sp,Üen))

112 i‡(
	`ARRAY_SIZE
(
vÆid_©om
Ë<
i
)

113 
	`dõ
("unknow¿fõldÇame: %.*s", ()(
ï
-
©om
),átom);

116 
©
 = 
u£d_©om_˙t
;

117 
u£d_©om_˙t
++;

118 
u£d_©om
 = 
	`xªÆloc
(used_atom,

119 ( *
u£d_©om
Ë* 
u£d_©om_˙t
);

120 
u£d_©om_ty≥
 = 
	`xªÆloc
(used_atom_type,

121 ((*
u£d_©om_ty≥
Ë* 
u£d_©om_˙t
));

122 
n
 = 
	`xmÆloc
(
ï
 - 
©om
 + 1);

123 
	`mem˝y
(
n
, 
©om
, 
ï
 -átom);

124 
n
[
ï
-
©om
] = 0;

125 
u£d_©om
[
©
] = 
n
;

126 
u£d_©om_ty≥
[
©
] = 
vÆid_©om
[
i
].
cmp_ty≥
;

127  
©
;

128 
	}
}

133 c⁄° *
	$föd_√xt
(c⁄° *
˝
)

135 *
˝
) {

136 i‡(*
˝
 == '%') {

140 i‡(
˝
[1] == '(')

141  
˝
;

142 i‡(
˝
[1] == '%')

143 
˝
++;

146 
˝
++;

148  
NULL
;

149 
	}
}

155 
	$vîify_f‹m©
(c⁄° *
f‹m©
)

157 c⁄° *
˝
, *
•
;

158 
˝
 = 
f‹m©
; *˝ && (
•
 = 
	`föd_√xt
(cp)); ) {

159 c⁄° *
ï
 = 
	`°rchr
(
•
, ')');

160 i‡(!
ï
)

161 
	`dõ
("mÆf‹m©ãd f‹m© såög %s", 
•
);

163 
	`∑r£_©om
(
•
 + 2, 
ï
);

164 
˝
 = 
ï
 + 1;

166 
	}
}

174 *
	$gë_obj
(c⁄° *
sha1
, 
obje˘
 **
obj
, *
sz
, *
óãn
)

176 
ty≥
[20];

177 *
buf
 = 
	`ªad_sha1_fûe
(
sha1
, 
ty≥
, 
sz
);

179 i‡(
buf
)

180 *
obj
 = 
	`∑r£_obje˘_buf„r
(
sha1
, 
ty≥
, *
sz
, 
buf
, 
óãn
);

182 *
obj
 = 
NULL
;

183  
buf
;

184 
	}
}

187 
	$gøb_comm⁄_vÆues
(
©om_vÆue
 *
vÆ
, 
dîef
, 
obje˘
 *
obj
, *
buf
, 
sz
)

189 
i
;

191 
i
 = 0; i < 
u£d_©om_˙t
; i++) {

192 c⁄° *
«me
 = 
u£d_©om
[
i
];

193 
©om_vÆue
 *
v
 = &
vÆ
[
i
];

194 i‡(!!
dîef
 !(*
«me
 == '*'))

196 i‡(
dîef
)

197 
«me
++;

198 i‡(!
	`°rcmp
(
«me
, "objecttype"))

199 
v
->
s
 = 
ty≥_«mes
[
obj
->
ty≥
];

200 i‡(!
	`°rcmp
(
«me
, "objectsize")) {

201 *
s
 = 
	`xmÆloc
(40);

202 
	`•rötf
(
s
, "%lu", 
sz
);

203 
v
->
ul
 = 
sz
;

204 
v
->
s
 = s;

206 i‡(!
	`°rcmp
(
«me
, "objectname")) {

207 *
s
 = 
	`xmÆloc
(41);

208 
	`°r˝y
(
s
, 
	`sha1_to_hex
(
obj
->
sha1
));

209 
v
->
s
 = s;

212 
	}
}

215 
	$gøb_èg_vÆues
(
©om_vÆue
 *
vÆ
, 
dîef
, 
obje˘
 *
obj
, *
buf
, 
sz
)

217 
i
;

218 
èg
 *èg = (èg *Ë
obj
;

220 
i
 = 0; i < 
u£d_©om_˙t
; i++) {

221 c⁄° *
«me
 = 
u£d_©om
[
i
];

222 
©om_vÆue
 *
v
 = &
vÆ
[
i
];

223 i‡(!!
dîef
 !(*
«me
 == '*'))

225 i‡(
dîef
)

226 
«me
++;

227 i‡(!
	`°rcmp
(
«me
, "tag"))

228 
v
->
s
 = 
èg
->tag;

230 
	}
}

232 
	$num_∑ª¡s
(
commô
 *commit)

234 
commô_li°
 *
∑ª¡s
;

235 
i
;

237 
i
 = 0, 
∑ª¡s
 = 
commô
->parents;

238 
∑ª¡s
;

239 
∑ª¡s
 =Ö¨íts->
√xt
)

240 
i
++;

241  
i
;

242 
	}
}

245 
	$gøb_commô_vÆues
(
©om_vÆue
 *
vÆ
, 
dîef
, 
obje˘
 *
obj
, *
buf
, 
sz
)

247 
i
;

248 
commô
 *commô = (commô *Ë
obj
;

250 
i
 = 0; i < 
u£d_©om_˙t
; i++) {

251 c⁄° *
«me
 = 
u£d_©om
[
i
];

252 
©om_vÆue
 *
v
 = &
vÆ
[
i
];

253 i‡(!!
dîef
 !(*
«me
 == '*'))

255 i‡(
dîef
)

256 
«me
++;

257 i‡(!
	`°rcmp
(
«me
, "tree")) {

258 *
s
 = 
	`xmÆloc
(41);

259 
	`°r˝y
(
s
, 
	`sha1_to_hex
(
commô
->
åì
->
obje˘
.
sha1
));

260 
v
->
s
 = s;

262 i‡(!
	`°rcmp
(
«me
, "numparent")) {

263 *
s
 = 
	`xmÆloc
(40);

264 
	`•rötf
(
s
, "%lu", 
v
->
ul
);

265 
v
->
s
 = s;

266 
v
->
ul
 = 
	`num_∑ª¡s
(
commô
);

268 i‡(!
	`°rcmp
(
«me
, "parent")) {

269 
num
 = 
	`num_∑ª¡s
(
commô
);

270 
i
;

271 
commô_li°
 *
∑ª¡s
;

272 *
s
 = 
	`xmÆloc
(42 * 
num
);

273 
v
->
s
 = s;

274 
i
 = 0, 
∑ª¡s
 = 
commô
->parents;

275 
∑ª¡s
;

276 
∑ª¡s
 =Ö¨íts->
√xt
, 
i
 = i + 42) {

277 
commô
 *
∑ª¡
 = 
∑ª¡s
->
ôem
;

278 
	`°r˝y
(
s
+
i
, 
	`sha1_to_hex
(
∑ª¡
->
obje˘
.
sha1
));

279 i‡(
∑ª¡s
->
√xt
)

280 
s
[
i
+40] = ' ';

284 
	}
}

286 c⁄° *
	$föd_whﬁöe
(c⁄° *
who
, 
whﬁí
, c⁄° *
buf
, 
sz
)

288 c⁄° *
eﬁ
;

289 *
buf
) {

290 i‡(!
	`°∫cmp
(
buf
, 
who
, 
whﬁí
) &&

291 
buf
[
whﬁí
] == ' ')

292  
buf
 + 
whﬁí
 + 1;

293 
eﬁ
 = 
	`°rchr
(
buf
, '\n');

294 i‡(!
eﬁ
)

296 
eﬁ
++;

297 i‡(
eﬁ
[1] == '\n')

299 
buf
 = 
eﬁ
;

302 
	}
}

304 *
	$c›y_löe
(c⁄° *
buf
)

306 c⁄° *
eﬁ
 = 
	`°rchr
(
buf
, '\n');

307 *
löe
;

308 
Àn
;

309 i‡(!
eﬁ
)

311 
Àn
 = 
eﬁ
 - 
buf
;

312 
löe
 = 
	`xmÆloc
(
Àn
 + 1);

313 
	`mem˝y
(
löe
, 
buf
, 
Àn
);

314 
löe
[
Àn
] = 0;

315  
löe
;

316 
	}
}

318 *
	$c›y_«me
(c⁄° *
buf
)

320 c⁄° *
eﬁ
 = 
	`°rchr
(
buf
, '\n');

321 c⁄° *
e⁄ame
 = 
	`°r°r
(
buf
, " <");

322 *
löe
;

323 
Àn
;

324 i‡(!(
e⁄ame
 && 
eﬁ
 &&Éoname <Éol))

326 
Àn
 = 
e⁄ame
 - 
buf
;

327 
löe
 = 
	`xmÆloc
(
Àn
 + 1);

328 
	`mem˝y
(
löe
, 
buf
, 
Àn
);

329 
löe
[
Àn
] = 0;

330  
löe
;

331 
	}
}

333 *
	$c›y_emaû
(c⁄° *
buf
)

335 c⁄° *
emaû
 = 
	`°rchr
(
buf
, '<');

336 c⁄° *
e€maû
 = 
	`°rchr
(
emaû
, '>');

337 *
löe
;

338 
Àn
;

339 i‡(!
emaû
 || !
e€maû
)

341 
e€maû
++;

342 
Àn
 = 
e€maû
 - 
emaû
;

343 
löe
 = 
	`xmÆloc
(
Àn
 + 1);

344 
	`mem˝y
(
löe
, 
emaû
, 
Àn
);

345 
löe
[
Àn
] = 0;

346  
löe
;

347 
	}
}

349 
	$gøb_d©e
(c⁄° *
buf
, 
©om_vÆue
 *
v
)

351 c⁄° *
e€maû
 = 
	`°r°r
(
buf
, "> ");

352 *
z⁄e
;

353 
time°amp
;

354 
tz
;

356 i‡(!
e€maû
)

357 
bad
;

358 
time°amp
 = 
	`°πoul
(
e€maû
 + 2, &
z⁄e
, 10);

359 i‡(
time°amp
 =
ULONG_MAX
)

360 
bad
;

361 
tz
 = 
	`°πﬁ
(
z⁄e
, 
NULL
, 10);

362 i‡((
tz
 =
LONG_MIN
 ||Åz =
LONG_MAX
Ë&& 
î∫o
 =
ERANGE
)

363 
bad
;

364 
v
->
s
 = 
	`x°rdup
(
	`show_d©e
(
time°amp
, 
tz
, 0));

365 
v
->
ul
 = 
time°amp
;

367 
bad
:

368 
v
->
s
 = "";

369 
v
->
ul
 = 0;

370 
	}
}

373 
	$gøb_≥rs⁄
(c⁄° *
who
, 
©om_vÆue
 *
vÆ
, 
dîef
, 
obje˘
 *
obj
, *
buf
, 
sz
)

375 
i
;

376 
whﬁí
 = 
	`°æí
(
who
);

377 c⁄° *
whﬁöe
 = 
NULL
;

379 
i
 = 0; i < 
u£d_©om_˙t
; i++) {

380 c⁄° *
«me
 = 
u£d_©om
[
i
];

381 
©om_vÆue
 *
v
 = &
vÆ
[
i
];

382 i‡(!!
dîef
 !(*
«me
 == '*'))

384 i‡(
dîef
)

385 
«me
++;

386 i‡(
	`°∫cmp
(
who
, 
«me
, 
whﬁí
))

388 i‡(
«me
[
whﬁí
] != 0 &&

389 
	`°rcmp
(
«me
 + 
whﬁí
, "name") &&

390 
	`°rcmp
(
«me
 + 
whﬁí
, "email") &&

391 
	`°rcmp
(
«me
 + 
whﬁí
, "date"))

393 i‡(!
whﬁöe
)

394 
whﬁöe
 = 
	`föd_whﬁöe
(
who
, 
whﬁí
, 
buf
, 
sz
);

395 i‡(!
whﬁöe
)

397 i‡(
«me
[
whﬁí
] == 0)

398 
v
->
s
 = 
	`c›y_löe
(
whﬁöe
);

399 i‡(!
	`°rcmp
(
«me
 + 
whﬁí
, "name"))

400 
v
->
s
 = 
	`c›y_«me
(
whﬁöe
);

401 i‡(!
	`°rcmp
(
«me
 + 
whﬁí
, "email"))

402 
v
->
s
 = 
	`c›y_emaû
(
whﬁöe
);

403 i‡(!
	`°rcmp
(
«me
 + 
whﬁí
, "date"))

404 
	`gøb_d©e
(
whﬁöe
, 
v
);

410 i‡(
	`°rcmp
(
who
, "tagger") && strcmp(who, "committer"))

412 i‡(!
whﬁöe
)

413 
whﬁöe
 = 
	`föd_whﬁöe
(
who
, 
whﬁí
, 
buf
, 
sz
);

414 i‡(!
whﬁöe
)

416 
i
 = 0; i < 
u£d_©om_˙t
; i++) {

417 c⁄° *
«me
 = 
u£d_©om
[
i
];

418 
©om_vÆue
 *
v
 = &
vÆ
[
i
];

419 i‡(!!
dîef
 !(*
«me
 == '*'))

421 i‡(
dîef
)

422 
«me
++;

424 i‡(!
	`°rcmp
(
«me
, "creatordate"))

425 
	`gøb_d©e
(
whﬁöe
, 
v
);

426 i‡(!
	`°rcmp
(
«me
, "creator"))

427 
v
->
s
 = 
	`c›y_löe
(
whﬁöe
);

429 
	}
}

431 
	$föd_subpos
(c⁄° *
buf
, 
sz
, c⁄° **
sub
, c⁄° **
body
)

433 *
buf
) {

434 c⁄° *
eﬁ
 = 
	`°rchr
(
buf
, '\n');

435 i‡(!
eﬁ
)

437 i‡(
eﬁ
[1] == '\n') {

438 
buf
 = 
eﬁ
 + 1;

441 
buf
 = 
eﬁ
 + 1;

443 *
buf
 == '\n')

444 
buf
++;

445 i‡(!*
buf
)

447 *
sub
 = 
buf
;

448 
buf
 = 
	`°rchr
(buf, '\n');

449 i‡(!
buf
)

451 *
buf
 == '\n')

452 
buf
++;

453 *
body
 = 
buf
;

454 
	}
}

457 
	$gøb_sub_body_c⁄ã¡s
(
©om_vÆue
 *
vÆ
, 
dîef
, 
obje˘
 *
obj
, *
buf
, 
sz
)

459 
i
;

460 c⁄° *
subpos
 = 
NULL
, *
bodypos
 = NULL;

462 
i
 = 0; i < 
u£d_©om_˙t
; i++) {

463 c⁄° *
«me
 = 
u£d_©om
[
i
];

464 
©om_vÆue
 *
v
 = &
vÆ
[
i
];

465 i‡(!!
dîef
 !(*
«me
 == '*'))

467 i‡(
dîef
)

468 
«me
++;

469 i‡(
	`°rcmp
(
«me
, "subject") &&

470 
	`°rcmp
(
«me
, "body") &&

471 
	`°rcmp
(
«me
, "contents"))

473 i‡(!
subpos
)

474 
	`föd_subpos
(
buf
, 
sz
, &
subpos
, &
bodypos
);

475 i‡(!
subpos
)

478 i‡(!
	`°rcmp
(
«me
, "subject"))

479 
v
->
s
 = 
	`c›y_löe
(
subpos
);

480 i‡(!
	`°rcmp
(
«me
, "body"))

481 
v
->
s
 = 
	`x°rdup
(
bodypos
);

482 i‡(!
	`°rcmp
(
«me
, "contents"))

483 
v
->
s
 = 
	`x°rdup
(
subpos
);

485 
	}
}

490 
	$fûl_missög_vÆues
(
©om_vÆue
 *
vÆ
)

492 
i
;

493 
i
 = 0; i < 
u£d_©om_˙t
; i++) {

494 
©om_vÆue
 *
v
 = &
vÆ
[
i
];

495 i‡(
v
->
s
 =
NULL
)

496 
v
->
s
 = "";

498 
	}
}

507 
	$gøb_vÆues
(
©om_vÆue
 *
vÆ
, 
dîef
, 
obje˘
 *
obj
, *
buf
, 
sz
)

509 
	`gøb_comm⁄_vÆues
(
vÆ
, 
dîef
, 
obj
, 
buf
, 
sz
);

510 
obj
->
ty≥
) {

511 
OBJ_TAG
:

512 
	`gøb_èg_vÆues
(
vÆ
, 
dîef
, 
obj
, 
buf
, 
sz
);

513 
	`gøb_sub_body_c⁄ã¡s
(
vÆ
, 
dîef
, 
obj
, 
buf
, 
sz
);

514 
	`gøb_≥rs⁄
("èggî", 
vÆ
, 
dîef
, 
obj
, 
buf
, 
sz
);

516 
OBJ_COMMIT
:

517 
	`gøb_commô_vÆues
(
vÆ
, 
dîef
, 
obj
, 
buf
, 
sz
);

518 
	`gøb_sub_body_c⁄ã¡s
(
vÆ
, 
dîef
, 
obj
, 
buf
, 
sz
);

519 
	`gøb_≥rs⁄
("auth‹", 
vÆ
, 
dîef
, 
obj
, 
buf
, 
sz
);

520 
	`gøb_≥rs⁄
("commôãr", 
vÆ
, 
dîef
, 
obj
, 
buf
, 
sz
);

522 
OBJ_TREE
:

525 
OBJ_BLOB
:

529 
	`dõ
("Eh? Obje˘ o‡ty≥ %d?", 
obj
->
ty≥
);

531 
	}
}

536 
	$p›uœã_vÆue
(
ªföfo
 *
ªf
)

538 *
buf
;

539 
obje˘
 *
obj
;

540 
óãn
, 
i
;

541 
size
;

542 c⁄° *
ègged
;

544 
ªf
->
vÆue
 = 
	`xˇŒoc
((
©om_vÆue
), 
u£d_©om_˙t
);

546 
buf
 = 
	`gë_obj
(
ªf
->
obje˘«me
, &
obj
, &
size
, &
óãn
);

547 i‡(!
buf
)

548 
	`dõ
("missing object %s for %s",

549 
	`sha1_to_hex
(
ªf
->
obje˘«me
),Ñef->
ª‚ame
);

550 i‡(!
obj
)

551 
	`dõ
("parse_object_buffer failed on %s for %s",

552 
	`sha1_to_hex
(
ªf
->
obje˘«me
),Ñef->
ª‚ame
);

555 
i
 = 0; i < 
u£d_©om_˙t
; i++) {

556 c⁄° *
«me
 = 
u£d_©om
[
i
];

557 
©om_vÆue
 *
v
 = &
ªf
->
vÆue
[
i
];

558 i‡(!
	`°rcmp
(
«me
, "refname"))

559 
v
->
s
 = 
ªf
->
ª‚ame
;

560 i‡(!
	`°rcmp
(
«me
, "*refname")) {

561 
Àn
 = 
	`°æí
(
ªf
->
ª‚ame
);

562 *
s
 = 
	`xmÆloc
(
Àn
 + 4);

563 
	`•rötf
(
s
, "%s^{}", 
ªf
->
ª‚ame
);

564 
v
->
s
 = s;

568 
	`gøb_vÆues
(
ªf
->
vÆue
, 0, 
obj
, 
buf
, 
size
);

569 i‡(!
óãn
)

570 
	`‰ì
(
buf
);

575 i‡(!
√ed_ègged
 || (
obj
->
ty≥
 !
OBJ_TAG
))

581 
ègged
 = ((
èg
 *)
obj
)->ègged->
sha1
;

588 
buf
 = 
	`gë_obj
(
ègged
, &
obj
, &
size
, &
óãn
);

589 i‡(!
buf
)

590 
	`dõ
("missing object %s for %s",

591 
	`sha1_to_hex
(
ègged
), 
ªf
->
ª‚ame
);

592 i‡(!
obj
)

593 
	`dõ
("parse_object_buffer failed on %s for %s",

594 
	`sha1_to_hex
(
ègged
), 
ªf
->
ª‚ame
);

595 
	`gøb_vÆues
(
ªf
->
vÆue
, 1, 
obj
, 
buf
, 
size
);

596 i‡(!
óãn
)

597 
	`‰ì
(
buf
);

598 
	}
}

604 
	$gë_vÆue
(
ªföfo
 *
ªf
, 
©om
, 
©om_vÆue
 **
v
)

606 i‡(!
ªf
->
vÆue
) {

607 
	`p›uœã_vÆue
(
ªf
);

608 
	`fûl_missög_vÆues
(
ªf
->
vÆue
);

610 *
v
 = &
ªf
->
vÆue
[
©om
];

611 
	}
}

613 
	sgøb_ªf_cbd©a
 {

614 
ªföfo
 **
	mgøb_¨øy
;

615 c⁄° **
	mgøb_∑âîn
;

616 
	mgøb_˙t
;

624 
	$gøb_sögÀ_ªf
(c⁄° *
ª‚ame
, c⁄° *
sha1
, 
Êag
, *
cb_d©a
)

626 
gøb_ªf_cbd©a
 *
cb
 = 
cb_d©a
;

627 
ªföfo
 *
ªf
;

628 
˙t
;

630 i‡(*
cb
->
gøb_∑âîn
) {

631 c⁄° **
∑âîn
;

632 
«mñí
 = 
	`°æí
(
ª‚ame
);

633 
∑âîn
 = 
cb
->
gøb_∑âîn
; *pattern;Öattern++) {

634 c⁄° *
p
 = *
∑âîn
;

635 
∂í
 = 
	`°æí
(
p
);

637 i‡((
∂í
 <
«mñí
) &&

638 !
	`°∫cmp
(
ª‚ame
, 
p
, 
∂í
) &&

639 (
ª‚ame
[
∂í
] == '\0' ||

640 
ª‚ame
[
∂í
] == '/'))

642 i‡(!
	`‚m©ch
(
p
, 
ª‚ame
, 
FNM_PATHNAME
))

645 i‡(!*
∑âîn
)

653 
ªf
 = 
	`xˇŒoc
(1, (*ref));

654 
ªf
->
ª‚ame
 = 
	`x°rdup
(refname);

655 
	`hash˝y
(
ªf
->
obje˘«me
, 
sha1
);

657 
˙t
 = 
cb
->
gøb_˙t
;

658 
cb
->
gøb_¨øy
 = 
	`xªÆloc
(cb->grab_array,

659 (*
cb
->
gøb_¨øy
Ë* (
˙t
 + 1));

660 
cb
->
gøb_¨øy
[
˙t
++] = 
ªf
;

661 
cb
->
gøb_˙t
 = 
˙t
;

663 
	}
}

665 
	$cmp_ªf_s‹t
(
ªf_s‹t
 *
s
, 
ªföfo
 *
a
, ªföfÿ*
b
)

667 
©om_vÆue
 *
va
, *
vb
;

668 
cmp
;

669 
cmp_ty≥
 cmp_ty≥ = 
u£d_©om_ty≥
[
s
->
©om
];

671 
	`gë_vÆue
(
a
, 
s
->
©om
, &
va
);

672 
	`gë_vÆue
(
b
, 
s
->
©om
, &
vb
);

673 
cmp_ty≥
) {

674 
FIELD_STR
:

675 
cmp
 = 
	`°rcmp
(
va
->
s
, 
vb
->s);

678 i‡(
va
->
ul
 < 
vb
->ul)

679 
cmp
 = -1;

680 i‡(
va
->
ul
 =
vb
->ul)

681 
cmp
 = 0;

683 
cmp
 = 1;

686  (
s
->
ªvî£
Ë? -
cmp
 : cmp;

687 
	}
}

689 
ªf_s‹t
 *
	gªf_s‹t
;

690 
	$com∑ª_ªfs
(c⁄° *
a_
, c⁄° *
b_
)

692 
ªföfo
 *
a
 = *((ªföfÿ**)
a_
);

693 
ªföfo
 *
b
 = *((ªföfÿ**)
b_
);

694 
ªf_s‹t
 *
s
;

696 
s
 = 
ªf_s‹t
; s; s = s->
√xt
) {

697 
cmp
 = 
	`cmp_ªf_s‹t
(
s
, 
a
, 
b
);

698 i‡(
cmp
)

699  
cmp
;

702 
	}
}

704 
	$s‹t_ªfs
(
ªf_s‹t
 *
s‹t
, 
ªföfo
 **
ªfs
, 
num_ªfs
)

706 
ªf_s‹t
 = 
s‹t
;

707 
	`qs‹t
(
ªfs
, 
num_ªfs
, (
ªföfo
 *), 
com∑ª_ªfs
);

708 
	}
}

710 
	$¥öt_vÆue
(
ªföfo
 *
ªf
, 
©om
, 
quŸe_°yÀ
)

712 
©om_vÆue
 *
v
;

713 
	`gë_vÆue
(
ªf
, 
©om
, &
v
);

714 
quŸe_°yÀ
) {

715 
QUOTE_NONE
:

716 
	`Âuts
(
v
->
s
, 
°dout
);

718 
QUOTE_SHELL
:

719 
	`sq_quŸe_¥öt
(
°dout
, 
v
->
s
);

721 
QUOTE_PERL
:

722 
	`≥æ_quŸe_¥öt
(
°dout
, 
v
->
s
);

724 
QUOTE_PYTHON
:

725 
	`pyth⁄_quŸe_¥öt
(
°dout
, 
v
->
s
);

727 
QUOTE_TCL
:

728 
	`t˛_quŸe_¥öt
(
°dout
, 
v
->
s
);

731 
	}
}

733 
	$hex1
(
ch
)

735 i‡('0' <
ch
 && ch <= '9')

736  
ch
 - '0';

737 i‡('a' <
ch
 && ch <= 'f')

738  
ch
 - 'a' + 10;

739 i‡('A' <
ch
 && ch <= 'F')

740  
ch
 - 'A' + 10;

742 
	}
}

743 
	$hex2
(c⁄° *
˝
)

745 i‡(
˝
[0] && cp[1])

746  (
	`hex1
(
˝
[0]) << 4) | hex1(cp[1]);

749 
	}
}

751 
	$emô
(c⁄° *
˝
, c⁄° *
ï
)

753 *
˝
 && (!
ï
 || cp <Ép)) {

754 i‡(*
˝
 == '%') {

755 i‡(
˝
[1] == '%')

756 
˝
++;

758 
ch
 = 
	`hex2
(
˝
 + 1);

759 i‡(0 <
ch
) {

760 
	`putch¨
(
ch
);

761 
˝
 += 3;

766 
	`putch¨
(*
˝
);

767 
˝
++;

769 
	}
}

771 
	$show_ªf
(
ªföfo
 *
öfo
, c⁄° *
f‹m©
, 
quŸe_°yÀ
)

773 c⁄° *
˝
, *
•
, *
ï
;

775 
˝
 = 
f‹m©
; *˝ && (
•
 = 
	`föd_√xt
(˝)); c∞
ï
 + 1) {

776 
ï
 = 
	`°rchr
(
•
, ')');

777 i‡(
˝
 < 
•
)

778 
	`emô
(
˝
, 
•
);

779 
	`¥öt_vÆue
(
öfo
, 
	`∑r£_©om
(
•
 + 2, 
ï
), 
quŸe_°yÀ
);

781 i‡(*
˝
) {

782 
•
 = 
˝
 + 
	`°æí
(cp);

783 
	`emô
(
˝
, 
•
);

785 
	`putch¨
('\n');

786 
	}
}

788 
ªf_s‹t
 *
	$deÁu…_s‹t
()

790 c⁄° 
c°r_«me
[] = "refname";

792 
ªf_s‹t
 *
s‹t
 = 
	`xˇŒoc
(1, (*sort));

794 
s‹t
->
√xt
 = 
NULL
;

795 
s‹t
->
©om
 = 
	`∑r£_©om
(
c°r_«me
, c°r_«mê+ 
	`°æí
(cstr_name));

796  
s‹t
;

797 
	}
}

799 
	$cmd_f‹_óch_ªf
(
ac
, c⁄° **
av
, *
¥efix
)

801 
i
, 
num_ªfs
;

802 c⁄° *
f‹m©
 = 
NULL
;

803 
ªf_s‹t
 *
s‹t
 = 
NULL
, **
s‹t_èû
 = &sort;

804 
maxcou¡
 = 0;

805 
quŸe_°yÀ
 = -1;

806 
ªföfo
 **
ªfs
;

807 
gøb_ªf_cbd©a
 
cbd©a
;

809 
i
 = 1; i < 
ac
; i++) {

810 c⁄° *
¨g
 = 
av
[
i
];

811 i‡(
¨g
[0] != '-')

813 i‡(!
	`°rcmp
(
¨g
, "--")) {

814 
i
++;

817 i‡(!
	`°∫cmp
(
¨g
, "--format=", 9)) {

818 i‡(
f‹m©
)

819 
	`dõ
("moreÅhan one --format?");

820 
f‹m©
 = 
¨g
 + 9;

823 i‡(!
	`°rcmp
(
¨g
, "-s") || !strcmp(arg, "--shell") ) {

824 i‡(0 <
quŸe_°yÀ
)

825 
	`dõ
("moreÅhan one quoting style?");

826 
quŸe_°yÀ
 = 
QUOTE_SHELL
;

829 i‡(!
	`°rcmp
(
¨g
, "-p") || !strcmp(arg, "--perl") ) {

830 i‡(0 <
quŸe_°yÀ
)

831 
	`dõ
("moreÅhan one quoting style?");

832 
quŸe_°yÀ
 = 
QUOTE_PERL
;

835 i‡(!
	`°rcmp
(
¨g
, "--python") ) {

836 i‡(0 <
quŸe_°yÀ
)

837 
	`dõ
("moreÅhan one quoting style?");

838 
quŸe_°yÀ
 = 
QUOTE_PYTHON
;

841 i‡(!
	`°rcmp
(
¨g
, "--tcl") ) {

842 i‡(0 <
quŸe_°yÀ
)

843 
	`dõ
("moreÅhan one quoting style?");

844 
quŸe_°yÀ
 = 
QUOTE_TCL
;

847 i‡(!
	`°∫cmp
(
¨g
, "--count=", 8)) {

848 i‡(
maxcou¡
)

849 
	`dõ
("moreÅhan one --count?");

850 
maxcou¡
 = 
	`©oi
(
¨g
 + 8);

851 i‡(
maxcou¡
 <= 0)

852 
	`dõ
("Thênumbî %†didÇŸÖ¨£", 
¨g
);

855 i‡(!
	`°∫cmp
(
¨g
, "--sort=", 7)) {

856 
ªf_s‹t
 *
s
 = 
	`xˇŒoc
(1, (*s));

857 
Àn
;

859 
s
->
√xt
 = 
NULL
;

860 *
s‹t_èû
 = 
s
;

861 
s‹t_èû
 = &
s
->
√xt
;

863 
¨g
 += 7;

864 i‡(*
¨g
 == '-') {

865 
s
->
ªvî£
 = 1;

866 
¨g
++;

868 
Àn
 = 
	`°æí
(
¨g
);

869 
s‹t
->
©om
 = 
	`∑r£_©om
(
¨g
,árg+
Àn
);

874 i‡(
quŸe_°yÀ
 < 0)

875 
quŸe_°yÀ
 = 
QUOTE_NONE
;

877 i‡(!
s‹t
)

878 
s‹t
 = 
	`deÁu…_s‹t
();

879 
s‹t_©om_limô
 = 
u£d_©om_˙t
;

880 i‡(!
f‹m©
)

881 
f‹m©
 = "%(objectname) %(objecttype)\t%(refname)";

883 
	`vîify_f‹m©
(
f‹m©
);

885 
	`mem£t
(&
cbd©a
, 0, (cbdata));

886 
cbd©a
.
gøb_∑âîn
 = 
av
 + 
i
;

887 
	`f‹_óch_ªf
(
gøb_sögÀ_ªf
, &
cbd©a
);

888 
ªfs
 = 
cbd©a
.
gøb_¨øy
;

889 
num_ªfs
 = 
cbd©a
.
gøb_˙t
;

891 
i
 = 0; i < 
u£d_©om_˙t
; i++) {

892 i‡(
u£d_©om
[
i
][0] == '*') {

893 
√ed_ègged
 = 1;

898 
	`s‹t_ªfs
(
s‹t
, 
ªfs
, 
num_ªfs
);

900 i‡(!
maxcou¡
 || 
num_ªfs
 < maxcount)

901 
maxcou¡
 = 
num_ªfs
;

902 
i
 = 0; i < 
maxcou¡
; i++)

903 
	`show_ªf
(
ªfs
[
i
], 
f‹m©
, 
quŸe_°yÀ
);

905 
	}
}

	@builtin-fsck.c

1 
	~"ˇche.h
"

2 
	~"commô.h
"

3 
	~"åì.h
"

4 
	~"blob.h
"

5 
	~"èg.h
"

6 
	~"ªfs.h
"

7 
	~"∑ck.h
"

8 
	~"ˇche-åì.h
"

9 
	~"åì-wÆk.h
"

11 
	#REACHABLE
 0x0001

	)

12 
	#SEEN
 0x0002

	)

14 
	gshow_roŸ
;

15 
	gshow_ègs
;

16 
	gshow_uƒóchabÀ
;

17 
	gcheck_fuŒ
;

18 
	gcheck_°ri˘
;

19 
	gkìp_ˇche_obje˘s
;

20 
	ghód_sha1
[20];

22 #ifde‡
NO_D_INO_IN_DIRENT


23 
	#SORT_DIRENT
 0

	)

24 
	#DIRENT_SORT_HINT
(
de
Ë0

	)

26 
	#SORT_DIRENT
 1

	)

27 
	#DIRENT_SORT_HINT
(
de
Ë((de)->
d_öo
)

	)

30 
	$objªp‹t
(
obje˘
 *
obj
, c⁄° *
£vîôy
,

31 c⁄° *
îr
, 
va_li°
 
∑øms
)

33 
	`Ârötf
(
°dîr
, "%s in %s %s: ",

34 
£vîôy
, 
	`ty≥«me
(
obj
->
ty≥
), 
	`sha1_to_hex
(obj->
sha1
));

35 
	`vÂrötf
(
°dîr
, 
îr
, 
∑øms
);

36 
	`Âuts
("\n", 
°dîr
);

37 
	}
}

39 
	$objîr‹
(
obje˘
 *
obj
, c⁄° *
îr
, ...)

41 
va_li°
 
∑øms
;

42 
	`va_°¨t
(
∑øms
, 
îr
);

43 
	`objªp‹t
(
obj
, "îr‹", 
îr
, 
∑øms
);

44 
	`va_íd
(
∑øms
);

46 
	}
}

48 
	$objw¨nög
(
obje˘
 *
obj
, c⁄° *
îr
, ...)

50 
va_li°
 
∑øms
;

51 
	`va_°¨t
(
∑øms
, 
îr
);

52 
	`objªp‹t
(
obj
, "w¨nög", 
îr
, 
∑øms
);

53 
	`va_íd
(
∑øms
);

55 
	}
}

60 
	$check_ªachabÀ_obje˘
(
obje˘
 *
obj
)

62 c⁄° 
obje˘_ªfs
 *
ªfs
;

69 i‡(!
obj
->
∑r£d
) {

70 i‡(
	`has_sha1_fûe
(
obj
->
sha1
))

72 
	`¥ötf
("missög %†%s\n", 
	`ty≥«me
(
obj
->
ty≥
), 
	`sha1_to_hex
(obj->
sha1
));

79 
ªfs
 = 
	`lookup_obje˘_ªfs
(
obj
);

80 i‡(
ªfs
) {

81 
j
;

82 
j
 = 0; j < 
ªfs
->
cou¡
; j++) {

83 
obje˘
 *
ªf
 = 
ªfs
->ªf[
j
];

84 i‡(
ªf
->
∑r£d
 ||

85 (
	`has_sha1_fûe
(
ªf
->
sha1
)))

87 
	`¥ötf
("brokenÜink from %7s %s\n",

88 
	`ty≥«me
(
obj
->
ty≥
), 
	`sha1_to_hex
(obj->
sha1
));

89 
	`¥ötf
("Åo %7s %s\n",

90 
	`ty≥«me
(
ªf
->
ty≥
), 
	`sha1_to_hex
‘ef->
sha1
));

93 
	}
}

98 
	$check_uƒóchabÀ_obje˘
(
obje˘
 *
obj
)

106 i‡(!
obj
->
∑r£d
)

113 i‡(
show_uƒóchabÀ
) {

114 
	`¥ötf
("uƒóchabÀ %†%s\n", 
	`ty≥«me
(
obj
->
ty≥
), 
	`sha1_to_hex
(obj->
sha1
));

130 i‡(!
obj
->
u£d
) {

131 
	`¥ötf
("d™glög %†%s\n", 
	`ty≥«me
(
obj
->
ty≥
),

132 
	`sha1_to_hex
(
obj
->
sha1
));

141 
	}
}

143 
	$check_obje˘
(
obje˘
 *
obj
)

145 i‡(
obj
->
Êags
 & 
REACHABLE
)

146 
	`check_ªachabÀ_obje˘
(
obj
);

148 
	`check_uƒóchabÀ_obje˘
(
obj
);

149 
	}
}

151 
	$check_c⁄√˘ivôy
()

153 
i
, 
max
;

156 
max
 = 
	`gë_max_obje˘_ödex
();

157 
i
 = 0; i < 
max
; i++) {

158 
obje˘
 *
obj
 = 
	`gë_ödexed_obje˘
(
i
);

160 i‡(
obj
)

161 
	`check_obje˘
(
obj
);

163 
	}
}

173 
	#TREE_UNORDERED
 (-1)

	)

174 
	#TREE_HAS_DUPS
 (-2)

	)

176 
	$vîify_‹dîed
(
mode1
, c⁄° *
«me1
, 
mode2
, c⁄° *
«me2
)

178 
Àn1
 = 
	`°æí
(
«me1
);

179 
Àn2
 = 
	`°æí
(
«me2
);

180 
Àn
 = 
Àn1
 < 
Àn2
 ?Üen1 :Üen2;

181 
c1
, 
c2
;

182 
cmp
;

184 
cmp
 = 
	`memcmp
(
«me1
, 
«me2
, 
Àn
);

185 i‡(
cmp
 < 0)

187 i‡(
cmp
 > 0)

188  
TREE_UNORDERED
;

195 
c1
 = 
«me1
[
Àn
];

196 
c2
 = 
«me2
[
Àn
];

197 i‡(!
c1
 && !
c2
)

203  
TREE_HAS_DUPS
;

204 i‡(!
c1
 && 
	`S_ISDIR
(
mode1
))

205 
c1
 = '/';

206 i‡(!
c2
 && 
	`S_ISDIR
(
mode2
))

207 
c2
 = '/';

208  
c1
 < 
c2
 ? 0 : 
TREE_UNORDERED
;

209 
	}
}

211 
	$fsck_åì
(
åì
 *
ôem
)

213 
ªtvÆ
;

214 
has_fuŒ_∑th
 = 0;

215 
has_zîo_∑d
 = 0;

216 
has_bad_modes
 = 0;

217 
has_dup_íåõs
 = 0;

218 
nŸ_¥›îly_s‹ãd
 = 0;

219 
åì_desc
 
desc
;

220 
o_mode
;

221 c⁄° *
o_«me
;

222 c⁄° *
o_sha1
;

224 
desc
.
buf
 = 
ôem
->
buf„r
;

225 
desc
.
size
 = 
ôem
->size;

227 
o_mode
 = 0;

228 
o_«me
 = 
NULL
;

229 
o_sha1
 = 
NULL
;

230 
desc
.
size
) {

231 
mode
;

232 c⁄° *
«me
;

233 c⁄° *
sha1
;

235 
sha1
 = 
	`åì_íåy_exåa˘
(&
desc
, &
«me
, &
mode
);

237 i‡(
	`°rchr
(
«me
, '/'))

238 
has_fuŒ_∑th
 = 1;

239 
has_zîo_∑d
 |*(*)
desc
.
buf
 == '0';

240 
	`upd©e_åì_íåy
(&
desc
);

242 
mode
) {

246 
S_IFREG
 | 0755:

247 
S_IFREG
 | 0644:

248 
S_IFLNK
:

249 
S_IFDIR
:

256 
S_IFREG
 | 0664:

257 i‡(!
check_°ri˘
)

260 
has_bad_modes
 = 1;

263 i‡(
o_«me
) {

264 
	`vîify_‹dîed
(
o_mode
, 
o_«me
, 
mode
, 
«me
)) {

265 
TREE_UNORDERED
:

266 
nŸ_¥›îly_s‹ãd
 = 1;

268 
TREE_HAS_DUPS
:

269 
has_dup_íåõs
 = 1;

276 
o_mode
 = 
mode
;

277 
o_«me
 = 
«me
;

278 
o_sha1
 = 
sha1
;

280 
	`‰ì
(
ôem
->
buf„r
);

281 
ôem
->
buf„r
 = 
NULL
;

283 
ªtvÆ
 = 0;

284 i‡(
has_fuŒ_∑th
) {

285 
	`objw¨nög
(&
ôem
->
obje˘
, "contains fullÖathnames");

287 i‡(
has_zîo_∑d
) {

288 
	`objw¨nög
(&
ôem
->
obje˘
, "contains zero-padded file modes");

290 i‡(
has_bad_modes
) {

291 
	`objw¨nög
(&
ôem
->
obje˘
, "contains bad file modes");

293 i‡(
has_dup_íåõs
) {

294 
ªtvÆ
 = 
	`objîr‹
(&
ôem
->
obje˘
, "contains duplicate fileÉntries");

296 i‡(
nŸ_¥›îly_s‹ãd
) {

297 
ªtvÆ
 = 
	`objîr‹
(&
ôem
->
obje˘
, "notÖroperly sorted");

299  
ªtvÆ
;

300 
	}
}

302 
	$fsck_commô
(
commô
 *commit)

304 *
buf„r
 = 
commô
->buffer;

305 
åì_sha1
[20], 
sha1
[20];

307 i‡(
	`memcmp
(
buf„r
, "tree ", 5))

308  
	`objîr‹
(&
commô
->
obje˘
, "invalid format -Éxpected 'tree'Üine");

309 i‡(
	`gë_sha1_hex
(
buf„r
+5, 
åì_sha1
) || buffer[45] != '\n')

310  
	`objîr‹
(&
commô
->
obje˘
, "invalid 'tree'Üine format - bad sha1");

311 
buf„r
 += 46;

312 !
	`memcmp
(
buf„r
, "parent ", 7)) {

313 i‡(
	`gë_sha1_hex
(
buf„r
+7, 
sha1
) || buffer[47] != '\n')

314  
	`objîr‹
(&
commô
->
obje˘
, "invalid 'parent'Üine format - bad sha1");

315 
buf„r
 += 48;

317 i‡(
	`memcmp
(
buf„r
, "author ", 7))

318  
	`objîr‹
(&
commô
->
obje˘
, "invalid format -Éxpected 'author'Üine");

319 
	`‰ì
(
commô
->
buf„r
);

320 
commô
->
buf„r
 = 
NULL
;

321 i‡(!
commô
->
åì
)

322  
	`objîr‹
(&
commô
->
obje˘
, "couldÇŸÜﬂd commô'†åì %s", 
åì_sha1
);

323 i‡(!
commô
->
∑ª¡s
 && 
show_roŸ
)

324 
	`¥ötf
("roŸ %s\n", 
	`sha1_to_hex
(
commô
->
obje˘
.
sha1
));

325 i‡(!
commô
->
d©e
)

326 
	`¥ötf
("bad commit date in %s\n",

327 
	`sha1_to_hex
(
commô
->
obje˘
.
sha1
));

329 
	}
}

331 
	$fsck_èg
(
èg
 *tag)

333 
obje˘
 *
ègged
 = 
èg
->tagged;

335 i‡(!
ègged
) {

336  
	`objîr‹
(&
èg
->
obje˘
, "couldÇotÜoadÅagged object");

338 i‡(!
show_ègs
)

341 
	`¥ötf
("ègged %†%s", 
	`ty≥«me
(
ègged
->
ty≥
), 
	`sha1_to_hex
—agged->
sha1
));

342 
	`¥ötf
(" (%sËö %s\n", 
èg
->èg, 
	`sha1_to_hex
—ag->
obje˘
.
sha1
));

344 
	}
}

346 
	$fsck_sha1
(*
sha1
)

348 
obje˘
 *
obj
 = 
	`∑r£_obje˘
(
sha1
);

349 i‡(!
obj
)

350  
	`îr‹
("%s: obje˘ c‹ru± o∏missög", 
	`sha1_to_hex
(
sha1
));

351 i‡(
obj
->
Êags
 & 
SEEN
)

353 
obj
->
Êags
 |
SEEN
;

354 i‡(
obj
->
ty≥
 =
OBJ_BLOB
)

356 i‡(
obj
->
ty≥
 =
OBJ_TREE
)

357  
	`fsck_åì
((
åì
 *Ë
obj
);

358 i‡(
obj
->
ty≥
 =
OBJ_COMMIT
)

359  
	`fsck_commô
((
commô
 *Ë
obj
);

360 i‡(
obj
->
ty≥
 =
OBJ_TAG
)

361  
	`fsck_èg
((
èg
 *Ë
obj
);

363  
	`objîr‹
(
obj
, "unknow¿ty≥ '%d' (öã∫Æ fsckÉº‹)", obj->
ty≥
);

364 
	}
}

370 
	#MAX_SHA1_ENTRIES
 (1024)

	)

372 
	ssha1_íåy
 {

373 
	möo
;

374 
	msha1
[20];

378 
	mƒ
;

379 
sha1_íåy
 *
	míåy
[
MAX_SHA1_ENTRIES
];

380 } 
	gsha1_li°
;

382 
	$öo_com∑ª
(c⁄° *
_a
, c⁄° *
_b
)

384 c⁄° 
sha1_íåy
 *
a
 = 
_a
, *
b
 = 
_b
;

385 
öo1
 = 
a
->
öo
, 
öo2
 = 
b
->ino;

386  
öo1
 < 
öo2
 ? -1 : ino1 > ino2 ? 1 : 0;

387 
	}
}

389 
	$fsck_sha1_li°
()

391 
i
, 
ƒ
 = 
sha1_li°
.nr;

393 i‡(
SORT_DIRENT
)

394 
	`qs‹t
(
sha1_li°
.
íåy
, 
ƒ
,

395 (
sha1_íåy
 *), 
öo_com∑ª
);

396 
i
 = 0; i < 
ƒ
; i++) {

397 
sha1_íåy
 *
íåy
 = 
sha1_li°
.íåy[
i
];

398 *
sha1
 = 
íåy
->sha1;

400 
sha1_li°
.
íåy
[
i
] = 
NULL
;

401 
	`fsck_sha1
(
sha1
);

402 
	`‰ì
(
íåy
);

404 
sha1_li°
.
ƒ
 = 0;

405 
	}
}

407 
	$add_sha1_li°
(*
sha1
, 
öo
)

409 
sha1_íåy
 *
íåy
 = 
	`xmÆloc
((*entry));

410 
ƒ
;

412 
íåy
->
öo
 = ino;

413 
	`hash˝y
(
íåy
->
sha1
, sha1);

414 
ƒ
 = 
sha1_li°
.nr;

415 i‡(
ƒ
 =
MAX_SHA1_ENTRIES
) {

416 
	`fsck_sha1_li°
();

417 
ƒ
 = 0;

419 
sha1_li°
.
íåy
[
ƒ
] =Éntry;

420 
sha1_li°
.
ƒ
 = ++nr;

421 
	}
}

423 
	$fsck_dú
(
i
, *
∑th
)

425 
DIR
 *
dú
 = 
	`›ídú
(
∑th
);

426 
dúít
 *
de
;

428 i‡(!
dú
)

431 (
de
 = 
	`ªaddú
(
dú
)Ë!
NULL
) {

432 
«me
[100];

433 
sha1
[20];

434 
Àn
 = 
	`°æí
(
de
->
d_«me
);

436 
Àn
) {

438 i‡(
de
->
d_«me
[1] != '.')

441 i‡(
de
->
d_«me
[0] != '.')

445 
	`•rötf
(
«me
, "%02x", 
i
);

446 
	`mem˝y
(
«me
+2, 
de
->
d_«me
, 
Àn
+1);

447 i‡(
	`gë_sha1_hex
(
«me
, 
sha1
) < 0)

449 
	`add_sha1_li°
(
sha1
, 
	`DIRENT_SORT_HINT
(
de
));

452 
	`Ârötf
(
°dîr
, "bad sha1 fûe: %s/%s\n", 
∑th
, 
de
->
d_«me
);

454 
	`˛o£dú
(
dú
);

455 
	}
}

457 
	gdeÁu…_ªfs
;

459 
	$fsck_h™dÀ_ªÊog_ít
(*
osha1
, *
nsha1
,

460 c⁄° *
emaû
, 
time°amp
, 
tz
,

461 c⁄° *
mesßge
, *
cb_d©a
)

463 
obje˘
 *
obj
;

465 i‡(!
	`is_nuŒ_sha1
(
osha1
)) {

466 
obj
 = 
	`lookup_obje˘
(
osha1
);

467 i‡(
obj
) {

468 
obj
->
u£d
 = 1;

469 
	`m¨k_ªachabÀ
(
obj
, 
REACHABLE
);

472 
obj
 = 
	`lookup_obje˘
(
nsha1
);

473 i‡(
obj
) {

474 
obj
->
u£d
 = 1;

475 
	`m¨k_ªachabÀ
(
obj
, 
REACHABLE
);

478 
	}
}

480 
	$fsck_h™dÀ_ªÊog
(c⁄° *
log«me
, c⁄° *
sha1
, 
Êag
, *
cb_d©a
)

482 
	`f‹_óch_ªÊog_ít
(
log«me
, 
fsck_h™dÀ_ªÊog_ít
, 
NULL
);

484 
	}
}

486 
	$fsck_h™dÀ_ªf
(c⁄° *
ª‚ame
, c⁄° *
sha1
, 
Êag
, *
cb_d©a
)

488 
obje˘
 *
obj
;

490 
obj
 = 
	`lookup_obje˘
(
sha1
);

491 i‡(!
obj
) {

492 i‡(
	`has_sha1_fûe
(
sha1
)) {

493 
deÁu…_ªfs
++;

496 
	`îr‹
("%s: invÆid sha1Öoöã∏%s", 
ª‚ame
, 
	`sha1_to_hex
(
sha1
));

500 
deÁu…_ªfs
++;

501 
obj
->
u£d
 = 1;

502 
	`m¨k_ªachabÀ
(
obj
, 
REACHABLE
);

505 
	}
}

507 
	$gë_deÁu…_hóds
()

509 
	`f‹_óch_ªf
(
fsck_h™dÀ_ªf
, 
NULL
);

510 
	`f‹_óch_ªÊog
(
fsck_h™dÀ_ªÊog
, 
NULL
);

524 i‡(!
deÁu…_ªfs
) {

525 
	`îr‹
("No defaultÑeferences");

526 
show_uƒóchabÀ
 = 0;

528 
	}
}

530 
	$fsck_obje˘_dú
(c⁄° *
∑th
)

532 
i
;

533 
i
 = 0; i < 256; i++) {

534 
dú
[4096];

535 
	`•rötf
(
dú
, "%s/%02x", 
∑th
, 
i
);

536 
	`fsck_dú
(
i
, 
dú
);

538 
	`fsck_sha1_li°
();

539 
	}
}

541 
	$fsck_hód_lök
()

543 
sha1
[20];

544 
Êag
;

545 c⁄° *
hód_poöts_©
 = 
	`ªsﬁve_ªf
("HEAD", 
sha1
, 1, &
Êag
);

547 i‡(!
hód_poöts_©
 || !(
Êag
 & 
REF_ISSYMREF
))

548  
	`îr‹
("HEAD isÇotá symbolicÑef");

549 i‡(
	`°∫cmp
(
hód_poöts_©
, "refs/heads/", 11))

550  
	`îr‹
("HEADÖointsÅo something strange (%s)",

551 
hód_poöts_©
);

552 i‡(
	`is_nuŒ_sha1
(
sha1
))

553  
	`îr‹
("HEAD:Çotá valid gitÖointer");

555 
	}
}

557 
	$fsck_ˇche_åì
(
ˇche_åì
 *
ô
)

559 
i
;

560 
îr
 = 0;

562 i‡(0 <
ô
->
íåy_cou¡
) {

563 
obje˘
 *
obj
 = 
	`∑r£_obje˘
(
ô
->
sha1
);

564 i‡(!
obj
) {

565 
	`îr‹
("%s: invalid sha1Öointer in cache-tree",

566 
	`sha1_to_hex
(
ô
->
sha1
));

569 
	`m¨k_ªachabÀ
(
obj
, 
REACHABLE
);

570 
obj
->
u£d
 = 1;

571 i‡(
obj
->
ty≥
 !
OBJ_TREE
)

572 
îr
 |
	`objîr‹
(
obj
, "non-tree in cache-tree");

574 
i
 = 0; i < 
ô
->
subåì_ƒ
; i++)

575 
îr
 |
	`fsck_ˇche_åì
(
ô
->
down
[
i
]->
ˇche_åì
);

576  
îr
;

577 
	}
}

579 
	$cmd_fsck
(
¨gc
, **
¨gv
, c⁄° *
¥efix
)

581 
i
, 
hóds
;

583 
åack_obje˘_ªfs
 = 1;

585 
i
 = 1; i < 
¨gc
; i++) {

586 c⁄° *
¨g
 = 
¨gv
[
i
];

588 i‡(!
	`°rcmp
(
¨g
, "--unreachable")) {

589 
show_uƒóchabÀ
 = 1;

592 i‡(!
	`°rcmp
(
¨g
, "--tags")) {

593 
show_ègs
 = 1;

596 i‡(!
	`°rcmp
(
¨g
, "--root")) {

597 
show_roŸ
 = 1;

600 i‡(!
	`°rcmp
(
¨g
, "--cache")) {

601 
kìp_ˇche_obje˘s
 = 1;

604 i‡(!
	`°rcmp
(
¨g
, "--full")) {

605 
check_fuŒ
 = 1;

608 i‡(!
	`°rcmp
(
¨g
, "--strict")) {

609 
check_°ri˘
 = 1;

612 i‡(*
¨g
 == '-')

613 
	`ußge
("git-fsck [--tags] [--root] [[--unreachable] [--cache] [--full] [--strict] <head-sha1>*]");

616 
	`fsck_hód_lök
();

617 
	`fsck_obje˘_dú
(
	`gë_obje˘_dúe˘‹y
());

618 i‡(
check_fuŒ
) {

619 
Æã∫©e_obje˘_d©aba£
 *
Æt
;

620 
∑cked_gô
 *
p
;

621 
	`¥ï¨e_Æt_odb
();

622 
Æt
 = 
Æt_odb_li°
;á…;á… =á…->
√xt
) {

623 
«mebuf
[
PATH_MAX
];

624 
«mñí
 = 
Æt
->
«me
 -á…->
ba£
;

625 
	`mem˝y
(
«mebuf
, 
Æt
->
ba£
, 
«mñí
);

626 
«mebuf
[
«mñí
 - 1] = 0;

627 
	`fsck_obje˘_dú
(
«mebuf
);

629 
	`¥ï¨e_∑cked_gô
();

630 
p
 = 
∑cked_gô
;Ö;Ö =Ö->
√xt
)

632 
	`vîify_∑ck
(
p
, 0);

634 
p
 = 
∑cked_gô
;Ö;Ö =Ö->
√xt
) {

635 
num
 = 
	`num_∑cked_obje˘s
(
p
);

636 
i
 = 0; i < 
num
; i++) {

637 
sha1
[20];

638 
	`¡h_∑cked_obje˘_sha1
(
p
, 
i
, 
sha1
);

639 
	`fsck_sha1
(
sha1
);

644 
hóds
 = 0;

645 
i
 = 1; i < 
¨gc
; i++) {

646 c⁄° *
¨g
 = 
¨gv
[
i
];

648 i‡(*
¨g
 == '-')

651 i‡(!
	`gë_sha1
(
¨g
, 
hód_sha1
)) {

652 
obje˘
 *
obj
 = 
	`lookup_obje˘
(
hód_sha1
);

655 i‡(!
obj
)

658 
obj
->
u£d
 = 1;

659 
	`m¨k_ªachabÀ
(
obj
, 
REACHABLE
);

660 
hóds
++;

663 
	`îr‹
("övÆidÖ¨amëî:Éx≥˘ed sha1, gŸ '%s'", 
¨g
);

671 i‡(!
hóds
) {

672 
	`gë_deÁu…_hóds
();

673 
kìp_ˇche_obje˘s
 = 1;

676 i‡(
kìp_ˇche_obje˘s
) {

677 
i
;

678 
	`ªad_ˇche
();

679 
i
 = 0; i < 
a˘ive_ƒ
; i++) {

680 
blob
 *blob = 
	`lookup_blob
(
a˘ive_ˇche
[
i
]->
sha1
);

681 
obje˘
 *
obj
;

682 i‡(!
blob
)

684 
obj
 = &
blob
->
obje˘
;

685 
obj
->
u£d
 = 1;

686 
	`m¨k_ªachabÀ
(
obj
, 
REACHABLE
);

688 i‡(
a˘ive_ˇche_åì
)

689 
	`fsck_ˇche_åì
(
a˘ive_ˇche_åì
);

692 
	`check_c⁄√˘ivôy
();

694 
	}
}

	@builtin-grep.c

6 
	~"ˇche.h
"

7 
	~"blob.h
"

8 
	~"åì.h
"

9 
	~"commô.h
"

10 
	~"èg.h
"

11 
	~"åì-wÆk.h
"

12 
	~"buûtö.h
"

13 
	~"gªp.h
"

19 
	$∑th•ec_m©ches
(c⁄° **
∑ths
, c⁄° *
«me
)

21 
«mñí
, 
i
;

22 i‡(!
∑ths
 || !*paths)

24 
«mñí
 = 
	`°æí
(
«me
);

25 
i
 = 0; 
∑ths
[i]; i++) {

26 c⁄° *
m©ch
 = 
∑ths
[
i
];

27 
m©chÀn
 = 
	`°æí
(
m©ch
);

28 c⁄° *
˝
, *
mëa
;

30 i‡(!
m©chÀn
 ||

31 ((
m©chÀn
 <
«mñí
) &&

32 !
	`°∫cmp
(
«me
, 
m©ch
, 
m©chÀn
) &&

33 (
m©ch
[
m©chÀn
-1] == '/' ||

34 
«me
[
m©chÀn
] == '\0' ||Çame[matchlen] == '/')))

36 i‡(!
	`‚m©ch
(
m©ch
, 
«me
, 0))

38 i‡(
«me
[
«mñí
-1] != '/')

48 
˝
 = 
m©ch
, 
mëa
 = 
NULL
; c∞- m©ch < 
m©chÀn
; cp++) {

49 
ch
 = *
˝
;

50 i‡(
ch
 == '*' || ch == '[' || ch == '?') {

51 
mëa
 = 
˝
;

55 i‡(!
mëa
)

56 
mëa
 = 
˝
;

58 i‡(
«mñí
 <
mëa
 - 
m©ch
) {

64 i‡(!
	`memcmp
(
m©ch
, 
«me
, 
«mñí
))

69 i‡(
mëa
 - 
m©ch
 < 
«mñí
) {

75 i‡(!
	`memcmp
(
m©ch
, 
«me
, 
mëa
 - match))

81 
	}
}

83 
	$gªp_sha1
(
gªp_›t
 *
›t
, c⁄° *
sha1
, c⁄° *
«me
, 
åì_«me_Àn
)

85 
size
;

86 *
d©a
;

87 
ty≥
[20];

88 *
to_‰ì
 = 
NULL
;

89 
hô
;

91 
d©a
 = 
	`ªad_sha1_fûe
(
sha1
, 
ty≥
, &
size
);

92 i‡(!
d©a
) {

93 
	`îr‹
("'%s': u«bÀÅÿªad %s", 
«me
, 
	`sha1_to_hex
(
sha1
));

96 i‡(
›t
->
ªœtive
 && o±->
¥efix_Àngth
) {

97 
«me_buf
[
PATH_MAX
];

98 *
˝
;

99 
«me_Àn
 = 
	`°æí
(
«me
Ë- 
›t
->
¥efix_Àngth
 + 1;

101 i‡(!
åì_«me_Àn
)

102 
«me
 +
›t
->
¥efix_Àngth
;

104 i‡(
	`ARRAY_SIZE
(
«me_buf
Ë<
«me_Àn
)

105 
˝
 = 
to_‰ì
 = 
	`xmÆloc
(
«me_Àn
);

107 
˝
 = 
«me_buf
;

108 
	`mem˝y
(
˝
, 
«me
, 
åì_«me_Àn
);

109 
	`°r˝y
(
˝
 + 
åì_«me_Àn
,

110 
«me
 + 
åì_«me_Àn
 + 
›t
->
¥efix_Àngth
);

111 
«me
 = 
˝
;

114 
hô
 = 
	`gªp_buf„r
(
›t
, 
«me
, 
d©a
, 
size
);

115 
	`‰ì
(
d©a
);

116 
	`‰ì
(
to_‰ì
);

117  
hô
;

118 
	}
}

120 
	$gªp_fûe
(
gªp_›t
 *
›t
, c⁄° *
fûíame
)

122 
°©
 
°
;

123 
i
;

124 *
d©a
;

125 i‡(
	`l°©
(
fûíame
, &
°
) < 0) {

126 
îr_ªt
:

127 i‡(
î∫o
 !
ENOENT
)

128 
	`îr‹
("'%s': %s", 
fûíame
, 
	`°ªº‹
(
î∫o
));

131 i‡(!
°
.
°_size
)

133 i‡(!
	`S_ISREG
(
°
.
°_mode
))

135 
i
 = 
	`›í
(
fûíame
, 
O_RDONLY
);

136 i‡(
i
 < 0)

137 
îr_ªt
;

138 
d©a
 = 
	`xmÆloc
(
°
.
°_size
 + 1);

139 i‡(
°
.
°_size
 !
	`ªad_ö_fuŒ
(
i
, 
d©a
, st.st_size)) {

140 
	`îr‹
("'%s': sh‹àªad %s", 
fûíame
, 
	`°ªº‹
(
î∫o
));

141 
	`˛o£
(
i
);

142 
	`‰ì
(
d©a
);

145 
	`˛o£
(
i
);

146 i‡(
›t
->
ªœtive
 && o±->
¥efix_Àngth
)

147 
fûíame
 +
›t
->
¥efix_Àngth
;

148 
i
 = 
	`gªp_buf„r
(
›t
, 
fûíame
, 
d©a
, 
°
.
°_size
);

149 
	`‰ì
(
d©a
);

150  
i
;

151 
	}
}

153 
	$exec_gªp
(
¨gc
, c⁄° **
¨gv
)

155 
pid_t
 
pid
;

156 
°©us
;

158 
¨gv
[
¨gc
] = 
NULL
;

159 
pid
 = 
	`f‹k
();

160 i‡(
pid
 < 0)

161  
pid
;

162 i‡(!
pid
) {

163 
	`execvp
("gªp", (**Ë
¨gv
);

164 
	`exô
(255);

166 
	`waôpid
(
pid
, &
°©us
, 0) < 0) {

167 i‡(
î∫o
 =
EINTR
)

171 i‡(
	`WIFEXITED
(
°©us
)) {

172 i‡(!
	`WEXITSTATUS
(
°©us
))

177 
	}
}

179 
	#MAXARGS
 1000

	)

180 
	#ARGBUF
 4096

	)

181 
	#push_¨g
(
a
) do { \

182 i‡(
ƒ
 < 
MAXARGS
Ë
¨gv
[ƒ++] = (
a
); \

183 
	`dõ
("maximumÇumber ofárgsÉxceeded"); \

184 } 0)

	)

186 
	$exã∫Æ_gªp
(
gªp_›t
 *
›t
, c⁄° **
∑ths
, 
ˇched
)

188 
i
, 
ƒ
, 
¨gc
, 
hô
, 
Àn
, 
°©us
;

189 c⁄° *
¨gv
[
MAXARGS
+1];

190 
ønd¨g
[
ARGBUF
];

191 *
¨g±r
 = 
ønd¨g
;

192 
gªp_∑t
 *
p
;

194 i‡(
›t
->
exãnded
 || (›t->
ªœtive
 && o±->
¥efix_Àngth
))

196 
Àn
 = 
ƒ
 = 0;

197 
	`push_¨g
("grep");

198 i‡(
›t
->
fixed
)

199 
	`push_¨g
("-F");

200 i‡(
›t
->
löíum
)

201 
	`push_¨g
("-n");

202 i‡(!
›t
->
∑th«me
)

203 
	`push_¨g
("-h");

204 i‡(
›t
->
ªgÊags
 & 
REG_EXTENDED
)

205 
	`push_¨g
("-E");

206 i‡(
›t
->
ªgÊags
 & 
REG_ICASE
)

207 
	`push_¨g
("-i");

208 i‡(
›t
->
w‹d_ªgexp
)

209 
	`push_¨g
("-w");

210 i‡(
›t
->
«me_⁄ly
)

211 
	`push_¨g
("-l");

212 i‡(
›t
->
unm©ch_«me_⁄ly
)

213 
	`push_¨g
("-L");

214 i‡(
›t
->
cou¡
)

215 
	`push_¨g
("-c");

216 i‡(
›t
->
po°_c⁄ãxt
 || o±->
¥e_c⁄ãxt
) {

217 i‡(
›t
->
po°_c⁄ãxt
 !›t->
¥e_c⁄ãxt
) {

218 i‡(
›t
->
¥e_c⁄ãxt
) {

219 
	`push_¨g
("-B");

220 
Àn
 +
	`¢¥ötf
(
¨g±r
, (
ønd¨g
)-len,

221 "%u", 
›t
->
¥e_c⁄ãxt
);

222 i‡((
ønd¨g
Ë<
Àn
)

223 
	`dõ
("maximumÜength ofárgsÉxceeded");

224 
	`push_¨g
(
¨g±r
);

225 
¨g±r
 +
Àn
;

227 i‡(
›t
->
po°_c⁄ãxt
) {

228 
	`push_¨g
("-A");

229 
Àn
 +
	`¢¥ötf
(
¨g±r
, (
ønd¨g
)-len,

230 "%u", 
›t
->
po°_c⁄ãxt
);

231 i‡((
ønd¨g
Ë<
Àn
)

232 
	`dõ
("maximumÜength ofárgsÉxceeded");

233 
	`push_¨g
(
¨g±r
);

234 
¨g±r
 +
Àn
;

238 
	`push_¨g
("-C");

239 
Àn
 +
	`¢¥ötf
(
¨g±r
, (
ønd¨g
)-len,

240 "%u", 
›t
->
po°_c⁄ãxt
);

241 i‡((
ønd¨g
Ë<
Àn
)

242 
	`dõ
("maximumÜength ofárgsÉxceeded");

243 
	`push_¨g
(
¨g±r
);

244 
¨g±r
 +
Àn
;

247 
p
 = 
›t
->
∑âîn_li°
;Ö;Ö =Ö->
√xt
) {

248 
	`push_¨g
("-e");

249 
	`push_¨g
(
p
->
∑âîn
);

260 i‡(!
›t
->
«me_⁄ly
 && !›t->
unm©ch_«me_⁄ly
)

261 
	`push_¨g
("/dev/null");

263 
hô
 = 0;

264 
¨gc
 = 
ƒ
;

265 
i
 = 0; i < 
a˘ive_ƒ
; i++) {

266 
ˇche_íåy
 *
˚
 = 
a˘ive_ˇche
[
i
];

267 *
«me
;

268 i‡(!
	`S_ISREG
(
	`¡ohl
(
˚
->
˚_mode
)))

270 i‡(!
	`∑th•ec_m©ches
(
∑ths
, 
˚
->
«me
))

272 
«me
 = 
˚
->name;

273 i‡(
«me
[0] == '-') {

274 
Àn
 = 
	`˚_«mñí
(
˚
);

275 
«me
 = 
	`xmÆloc
(
Àn
 + 3);

276 
	`mem˝y
(
«me
, "./", 2);

277 
	`mem˝y
(
«me
 + 2, 
˚
->«me, 
Àn
 + 1);

279 
¨gv
[
¨gc
++] = 
«me
;

280 i‡(
¨gc
 < 
MAXARGS
 && !
	`˚_°age
(
˚
))

282 
°©us
 = 
	`exec_gªp
(
¨gc
, 
¨gv
);

283 i‡(0 < 
°©us
)

284 
hô
 = 1;

285 
¨gc
 = 
ƒ
;

286 i‡(
	`˚_°age
(
˚
)) {

288 
i
++;

289 } 
i
 < 
a˘ive_ƒ
 &&

290 !
	`°rcmp
(
˚
->
«me
, 
a˘ive_ˇche
[
i
]->name));

291 
i
--;

294 i‡(
¨gc
 > 
ƒ
) {

295 
°©us
 = 
	`exec_gªp
(
¨gc
, 
¨gv
);

296 i‡(0 < 
°©us
)

297 
hô
 = 1;

299  
hô
;

300 
	}
}

302 
	$gªp_ˇche
(
gªp_›t
 *
›t
, c⁄° **
∑ths
, 
ˇched
)

304 
hô
 = 0;

305 
ƒ
;

306 
	`ªad_ˇche
();

308 #ifde‡
__unix__


314 i‡(!
ˇched
) {

315 
hô
 = 
	`exã∫Æ_gªp
(
›t
, 
∑ths
, 
ˇched
);

316 i‡(
hô
 >= 0)

317  
hô
;

321 
ƒ
 = 0;Ç∏< 
a˘ive_ƒ
;Çr++) {

322 
ˇche_íåy
 *
˚
 = 
a˘ive_ˇche
[
ƒ
];

323 i‡(!
	`S_ISREG
(
	`¡ohl
(
˚
->
˚_mode
)))

325 i‡(!
	`∑th•ec_m©ches
(
∑ths
, 
˚
->
«me
))

327 i‡(
ˇched
) {

328 i‡(
	`˚_°age
(
˚
))

330 
hô
 |
	`gªp_sha1
(
›t
, 
˚
->
sha1
, ce->
«me
, 0);

333 
hô
 |
	`gªp_fûe
(
›t
, 
˚
->
«me
);

334 i‡(
	`˚_°age
(
˚
)) {

336 
ƒ
++;

337 } 
ƒ
 < 
a˘ive_ƒ
 &&

338 !
	`°rcmp
(
˚
->
«me
, 
a˘ive_ˇche
[
ƒ
]->name));

339 
ƒ
--;

342 
	`‰ì_gªp_∑âîns
(
›t
);

343  
hô
;

344 
	}
}

346 
	$gªp_åì
(
gªp_›t
 *
›t
, c⁄° **
∑ths
,

347 
åì_desc
 *
åì
,

348 c⁄° *
åì_«me
, c⁄° *
ba£
)

350 
Àn
;

351 
hô
 = 0;

352 
«me_íåy
 
íåy
;

353 *
down
;

354 
ä_Àn
 = 
	`°æí
(
åì_«me
);

355 *
∑th_buf
 = 
	`xmÆloc
(
PATH_MAX
 + 
ä_Àn
 + 100);

357 i‡(
ä_Àn
) {

358 
ä_Àn
 = 
	`•rötf
(
∑th_buf
, "%s:", 
åì_«me
);

359 
down
 = 
∑th_buf
 + 
ä_Àn
;

360 
	`°rˇt
(
down
, 
ba£
);

363 
down
 = 
∑th_buf
;

364 
	`°r˝y
(
down
, 
ba£
);

366 
Àn
 = 
	`°æí
(
∑th_buf
);

368 
	`åì_íåy
(
åì
, &
íåy
)) {

369 
	`°r˝y
(
∑th_buf
 + 
Àn
, 
íåy
.
∑th
);

371 i‡(
	`S_ISDIR
(
íåy
.
mode
))

376 
	`°r˝y
(
∑th_buf
 + 
Àn
 + 
íåy
.
∑thÀn
, "/");

378 i‡(!
	`∑th•ec_m©ches
(
∑ths
, 
down
))

380 i‡(
	`S_ISREG
(
íåy
.
mode
))

381 
hô
 |
	`gªp_sha1
(
›t
, 
íåy
.
sha1
, 
∑th_buf
, 
ä_Àn
);

382 i‡(
	`S_ISDIR
(
íåy
.
mode
)) {

383 
ty≥
[20];

384 
åì_desc
 
sub
;

385 *
d©a
;

386 
d©a
 = 
	`ªad_sha1_fûe
(
íåy
.
sha1
, 
ty≥
, &
sub
.
size
);

387 i‡(!
d©a
)

388 
	`dõ
("unableÅoÑeadÅree (%s)",

389 
	`sha1_to_hex
(
íåy
.
sha1
));

390 
sub
.
buf
 = 
d©a
;

391 
hô
 |
	`gªp_åì
(
›t
, 
∑ths
, &
sub
, 
åì_«me
, 
down
);

392 
	`‰ì
(
d©a
);

395  
hô
;

396 
	}
}

398 
	$gªp_obje˘
(
gªp_›t
 *
›t
, c⁄° **
∑ths
,

399 
obje˘
 *
obj
, c⁄° *
«me
)

401 i‡(
obj
->
ty≥
 =
OBJ_BLOB
)

402  
	`gªp_sha1
(
›t
, 
obj
->
sha1
, 
«me
, 0);

403 i‡(
obj
->
ty≥
 =
OBJ_COMMIT
 || obj->ty≥ =
OBJ_TREE
) {

404 
åì_desc
 
åì
;

405 *
d©a
;

406 
hô
;

407 
d©a
 = 
	`ªad_obje˘_wôh_ª„ªn˚
(
obj
->
sha1
, 
åì_ty≥
,

408 &
åì
.
size
, 
NULL
);

409 i‡(!
d©a
)

410 
	`dõ
("u«bÀÅÿªadÅªê(%s)", 
	`sha1_to_hex
(
obj
->
sha1
));

411 
åì
.
buf
 = 
d©a
;

412 
hô
 = 
	`gªp_åì
(
›t
, 
∑ths
, &
åì
, 
«me
, "");

413 
	`‰ì
(
d©a
);

414  
hô
;

416 
	`dõ
("u«bÀÅÿgª∞‰om obje˘ o‡ty≥ %s", 
	`ty≥«me
(
obj
->
ty≥
));

417 
	}
}

419 c⁄° 
	gbuûtö_gªp_ußge
[] =

422 c⁄° 
	gemsg_övÆid_c⁄ãxt_Àn
[] =

424 c⁄° 
	gemsg_missög_c⁄ãxt_Àn
[] =

426 c⁄° 
	gemsg_missög_¨gumít
[] =

429 
	$cmd_gªp
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

431 
hô
 = 0;

432 
ˇched
 = 0;

433 
£í_dashdash
 = 0;

434 
gªp_›t
 
›t
;

435 
obje˘_¨øy
 
li°
 = { 0, 0, 
NULL
 };

436 c⁄° **
∑ths
 = 
NULL
;

437 
i
;

439 
	`mem£t
(&
›t
, 0, (opt));

440 
›t
.
¥efix_Àngth
 = (
¥efix
 && *¥efixË? 
	`°æí
(prefix) : 0;

441 
›t
.
ªœtive
 = 1;

442 
›t
.
∑th«me
 = 1;

443 
›t
.
∑âîn_èû
 = &›t.
∑âîn_li°
;

444 
›t
.
ªgÊags
 = 
REG_NEWLINE
;

457 1 < 
¨gc
) {

458 c⁄° *
¨g
 = 
¨gv
[1];

459 
¨gc
--; 
¨gv
++;

460 i‡(!
	`°rcmp
("--ˇched", 
¨g
)) {

461 
ˇched
 = 1;

464 i‡(!
	`°rcmp
("-a", 
¨g
) ||

465 !
	`°rcmp
("--ãxt", 
¨g
)) {

466 
›t
.
bö¨y
 = 
GREP_BINARY_TEXT
;

469 i‡(!
	`°rcmp
("-i", 
¨g
) ||

470 !
	`°rcmp
("--ign‹e-ˇ£", 
¨g
)) {

471 
›t
.
ªgÊags
 |
REG_ICASE
;

474 i‡(!
	`°rcmp
("-I", 
¨g
)) {

475 
›t
.
bö¨y
 = 
GREP_BINARY_NOMATCH
;

478 i‡(!
	`°rcmp
("-v", 
¨g
) ||

479 !
	`°rcmp
("--övît-m©ch", 
¨g
)) {

480 
›t
.
övît
 = 1;

483 i‡(!
	`°rcmp
("-E", 
¨g
) ||

484 !
	`°rcmp
("--exãnded-ªgexp", 
¨g
)) {

485 
›t
.
ªgÊags
 |
REG_EXTENDED
;

488 i‡(!
	`°rcmp
("-F", 
¨g
) ||

489 !
	`°rcmp
("--fixed-°rögs", 
¨g
)) {

490 
›t
.
fixed
 = 1;

493 i‡(!
	`°rcmp
("-G", 
¨g
) ||

494 !
	`°rcmp
("--basic-ªgexp", 
¨g
)) {

495 
›t
.
ªgÊags
 &~
REG_EXTENDED
;

498 i‡(!
	`°rcmp
("-n", 
¨g
)) {

499 
›t
.
löíum
 = 1;

502 i‡(!
	`°rcmp
("-h", 
¨g
)) {

503 
›t
.
∑th«me
 = 0;

506 i‡(!
	`°rcmp
("-H", 
¨g
)) {

507 
›t
.
∑th«me
 = 1;

510 i‡(!
	`°rcmp
("-l", 
¨g
) ||

511 !
	`°rcmp
("--fûes-wôh-m©ches", 
¨g
)) {

512 
›t
.
«me_⁄ly
 = 1;

515 i‡(!
	`°rcmp
("-L", 
¨g
) ||

516 !
	`°rcmp
("--fûes-wôhout-m©ch", 
¨g
)) {

517 
›t
.
unm©ch_«me_⁄ly
 = 1;

520 i‡(!
	`°rcmp
("-c", 
¨g
) ||

521 !
	`°rcmp
("--cou¡", 
¨g
)) {

522 
›t
.
cou¡
 = 1;

525 i‡(!
	`°rcmp
("-w", 
¨g
) ||

526 !
	`°rcmp
("--w‹d-ªgexp", 
¨g
)) {

527 
›t
.
w‹d_ªgexp
 = 1;

530 i‡(!
	`°∫cmp
("-A", 
¨g
, 2) ||

531 !
	`°∫cmp
("-B", 
¨g
, 2) ||

532 !
	`°∫cmp
("-C", 
¨g
, 2) ||

533 (
¨g
[0] == '-' && '1' <=árg[1] &&árg[1] <= '9')) {

534 
num
;

535 c⁄° *
sˇn
;

536 
¨g
[1]) {

538 i‡(!
¨g
[2]) {

539 i‡(
¨gc
 <= 1)

540 
	`dõ
(
emsg_missög_c⁄ãxt_Àn
);

541 
sˇn
 = *++
¨gv
;

542 
¨gc
--;

545 
sˇn
 = 
¨g
 + 2;

548 
sˇn
 = 
¨g
 + 1;

551 i‡(
	`ssˇnf
(
sˇn
, "%u", &
num
) != 1)

552 
	`dõ
(
emsg_övÆid_c⁄ãxt_Àn
, 
sˇn
);

553 
¨g
[1]) {

555 
›t
.
po°_c⁄ãxt
 = 
num
;

559 
›t
.
po°_c⁄ãxt
 = 
num
;

561 
›t
.
¥e_c⁄ãxt
 = 
num
;

566 i‡(!
	`°rcmp
("-f", 
¨g
)) {

567 
FILE
 *
∑âîns
;

568 
 o
 = 0;

569 
buf
[1024];

570 i‡(
¨gc
 <= 1)

571 
	`dõ
(
emsg_missög_¨gumít
, 
¨g
);

572 
∑âîns
 = 
	`f›í
(
¨gv
[1], "r");

573 i‡(!
∑âîns
)

574 
	`dõ
("'%s': %s", 
¨gv
[1], 
	`°ªº‹
(
î∫o
));

575 
	`fgës
(
buf
, (buf), 
∑âîns
)) {

576 
Àn
 = 
	`°æí
(
buf
);

577 i‡(
buf
[
Àn
-1] == '\n')

578 
buf
[
Àn
-1] = 0;

580 i‡(!
buf
[0])

582 
	`≠≥nd_gªp_∑âîn
(&
›t
, 
	`x°rdup
(
buf
),

583 
¨gv
[1], ++
 o
,

584 
GREP_PATTERN
);

586 
	`f˛o£
(
∑âîns
);

587 
¨gv
++;

588 
¨gc
--;

591 i‡(!
	`°rcmp
("--nŸ", 
¨g
)) {

592 
	`≠≥nd_gªp_∑âîn
(&
›t
, 
¨g
, "commandÜine", 0,

593 
GREP_NOT
);

596 i‡(!
	`°rcmp
("--™d", 
¨g
)) {

597 
	`≠≥nd_gªp_∑âîn
(&
›t
, 
¨g
, "commandÜine", 0,

598 
GREP_AND
);

601 i‡(!
	`°rcmp
("--‹", 
¨g
))

603 i‡(!
	`°rcmp
("(", 
¨g
)) {

604 
	`≠≥nd_gªp_∑âîn
(&
›t
, 
¨g
, "commandÜine", 0,

605 
GREP_OPEN_PAREN
);

608 i‡(!
	`°rcmp
(")", 
¨g
)) {

609 
	`≠≥nd_gªp_∑âîn
(&
›t
, 
¨g
, "commandÜine", 0,

610 
GREP_CLOSE_PAREN
);

613 i‡(!
	`°rcmp
("--Æl-m©ch", 
¨g
)) {

614 
›t
.
Æl_m©ch
 = 1;

617 i‡(!
	`°rcmp
("-e", 
¨g
)) {

618 i‡(1 < 
¨gc
) {

619 
	`≠≥nd_gªp_∑âîn
(&
›t
, 
¨gv
[1],

621 
GREP_PATTERN
);

622 
¨gv
++;

623 
¨gc
--;

626 
	`dõ
(
emsg_missög_¨gumít
, 
¨g
);

628 i‡(!
	`°rcmp
("--fuŒ-«me", 
¨g
)) {

629 
›t
.
ªœtive
 = 0;

632 i‡(!
	`°rcmp
("--", 
¨g
)) {

634 
¨gv
--;

635 
¨gc
++;

638 i‡(*
¨g
 == '-')

639 
	`ußge
(
buûtö_gªp_ußge
);

642 i‡(!
›t
.
∑âîn_li°
) {

643 
	`≠≥nd_gªp_∑âîn
(&
›t
, 
¨g
, "commandÜine", 0,

644 
GREP_PATTERN
);

652 
¨gc
++; 
¨gv
--;

657 i‡(!
›t
.
∑âîn_li°
)

658 
	`dõ
("noÖattern given.");

659 i‡((
›t
.
ªgÊags
 !
REG_NEWLINE
Ë&& o±.
fixed
)

660 
	`dõ
("cannot mix --fixed-stringsándÑegexp");

661 
	`compûe_gªp_∑âîns
(&
›t
);

664 
i
 = 1; i < 
¨gc
; i++) {

665 c⁄° *
¨g
 = 
¨gv
[
i
];

666 
sha1
[20];

668 i‡(!
	`gë_sha1
(
¨g
, 
sha1
)) {

669 
obje˘
 *obje˘ = 
	`∑r£_obje˘
(
sha1
);

670 i‡(!
obje˘
)

671 
	`dõ
("bad obje˘ %s", 
¨g
);

672 
	`add_obje˘_¨øy
(
obje˘
, 
¨g
, &
li°
);

675 i‡(!
	`°rcmp
(
¨g
, "--")) {

676 
i
++;

677 
£í_dashdash
 = 1;

683 i‡(!
£í_dashdash
) {

684 
j
;

685 
j
 = 
i
; j < 
¨gc
; j++)

686 
	`vîify_fûíame
(
¥efix
, 
¨gv
[
j
]);

689 i‡(
i
 < 
¨gc
) {

690 
∑ths
 = 
	`gë_∑th•ec
(
¥efix
, 
¨gv
 + 
i
);

691 i‡(
›t
.
¥efix_Àngth
 && o±.
ªœtive
) {

693 
i
 = 0; 
∑ths
[i]; i++)

694 i‡(
	`°∫cmp
(
¥efix
, 
∑ths
[
i
], 
›t
.
¥efix_Àngth
))

695 
	`dõ
("git-grep: cannot generateÑelative filenames containing '..'");

698 i‡(
¥efix
) {

699 
∑ths
 = 
	`xˇŒoc
(2, (const *));

700 
∑ths
[0] = 
¥efix
;

701 
∑ths
[1] = 
NULL
;

704 i‡(!
li°
.
ƒ
)

705  !
	`gªp_ˇche
(&
›t
, 
∑ths
, 
ˇched
);

707 i‡(
ˇched
)

708 
	`dõ
("both --cachedándÅreesáre given.");

710 
i
 = 0; i < 
li°
.
ƒ
; i++) {

711 
obje˘
 *
ªÆ_obj
;

712 
ªÆ_obj
 = 
	`dîef_èg
(
li°
.
obje˘s
[
i
].
ôem
, 
NULL
, 0);

713 i‡(
	`gªp_obje˘
(&
›t
, 
∑ths
, 
ªÆ_obj
, 
li°
.
obje˘s
[
i
].
«me
))

714 
hô
 = 1;

716 
	`‰ì_gªp_∑âîns
(&
›t
);

717  !
hô
;

718 
	}
}

	@builtin-init-db.c

6 
	~"ˇche.h
"

7 
	~"buûtö.h
"

9 #i‚de‡
DEFAULT_GIT_TEMPLATE_DIR


10 
	#DEFAULT_GIT_TEMPLATE_DIR
 "/u§/sh¨e/gô-c‹e/ãm∂©es/"

	)

13 #ifde‡
NO_TRUSTABLE_FILEMODE


14 
	#TEST_FILEMODE
 0

	)

16 
	#TEST_FILEMODE
 1

	)

19 
	$ß„_¸óã_dú
(c⁄° *
dú
, 
sh¨e
)

21 i‡(
	`mkdú
(
dú
, 0777) < 0) {

22 i‡(
î∫o
 !
EEXIST
) {

23 
	`≥º‹
(
dú
);

24 
	`exô
(1);

27 i‡(
sh¨e
 && 
	`adju°_sh¨ed_≥rm
(
dú
))

28 
	`dõ
("CouldÇŸ makê%†wrôabÀ by group\n", 
dú
);

29 
	}
}

31 
	$c›y_fûe
(c⁄° *
d°
, c⁄° *
§c
, 
mode
)

33 
fdi
, 
fdo
, 
°©us
;

35 
mode
 = (mode & 0111) ? 0777 : 0666;

36 i‡((
fdi
 = 
	`›í
(
§c
, 
O_RDONLY
)) < 0)

37  
fdi
;

38 i‡((
fdo
 = 
	`›í
(
d°
, 
O_WRONLY
 | 
O_CREAT
 | 
O_EXCL
, 
mode
)) < 0) {

39 
	`˛o£
(
fdi
);

40  
fdo
;

42 
°©us
 = 
	`c›y_fd
(
fdi
, 
fdo
);

43 
	`˛o£
(
fdo
);

45 i‡(!
°©us
 && 
	`adju°_sh¨ed_≥rm
(
d°
))

48  
°©us
;

49 
	}
}

51 
	$c›y_ãm∂©es_1
(*
∑th
, 
ba£Àn
,

52 *
ãm∂©e
, 
ãm∂©e_ba£Àn
,

53 
DIR
 *
dú
)

55 
dúít
 *
de
;

64 
	`ß„_¸óã_dú
(
∑th
, 1);

65 (
de
 = 
	`ªaddú
(
dú
)Ë!
NULL
) {

66 
°©
 
°_gô
, 
°_ãm∂©e
;

67 
«mñí
;

68 
exi°s
 = 0;

70 i‡(
de
->
d_«me
[0] == '.')

72 
«mñí
 = 
	`°æí
(
de
->
d_«me
);

73 i‡((
PATH_MAX
 <
ba£Àn
 + 
«mñí
) ||

74 (
PATH_MAX
 <
ãm∂©e_ba£Àn
 + 
«mñí
))

75 
	`dõ
("öß√lyÜ⁄gÅem∂©ê«mê%s", 
de
->
d_«me
);

76 
	`mem˝y
(
∑th
 + 
ba£Àn
, 
de
->
d_«me
, 
«mñí
+1);

77 
	`mem˝y
(
ãm∂©e
 + 
ãm∂©e_ba£Àn
, 
de
->
d_«me
, 
«mñí
+1);

78 i‡(
	`l°©
(
∑th
, &
°_gô
)) {

79 i‡(
î∫o
 !
ENOENT
)

80 
	`dõ
("ˇ¬Ÿ sèà%s", 
∑th
);

83 
exi°s
 = 1;

85 i‡(
	`l°©
(
ãm∂©e
, &
°_ãm∂©e
))

86 
	`dõ
("ˇ¬Ÿ sèàãm∂©ê%s", 
ãm∂©e
);

88 i‡(
	`S_ISDIR
(
°_ãm∂©e
.
°_mode
)) {

89 
DIR
 *
subdú
 = 
	`›ídú
(
ãm∂©e
);

90 
ba£Àn_sub
 = 
ba£Àn
 + 
«mñí
;

91 
ãm∂©e_ba£Àn_sub
 = 
ãm∂©e_ba£Àn
 + 
«mñí
;

92 i‡(!
subdú
)

93 
	`dõ
("ˇ¬Ÿ o≥ndú %s", 
ãm∂©e
);

94 
∑th
[
ba£Àn_sub
++] =

95 
ãm∂©e
[
ãm∂©e_ba£Àn_sub
++] = '/';

96 
∑th
[
ba£Àn_sub
] =

97 
ãm∂©e
[
ãm∂©e_ba£Àn_sub
] = 0;

98 
	`c›y_ãm∂©es_1
(
∑th
, 
ba£Àn_sub
,

99 
ãm∂©e
, 
ãm∂©e_ba£Àn_sub
,

100 
subdú
);

101 
	`˛o£dú
(
subdú
);

103 i‡(
exi°s
)

105 i‡(
	`S_ISLNK
(
°_ãm∂©e
.
°_mode
)) {

106 
 k
[256];

107 
Àn
;

108 
Àn
 = 
	`ªadlök
(
ãm∂©e
, 
 k
, (lnk));

109 i‡(
Àn
 < 0)

110 
	`dõ
("ˇ¬ŸÑódlök %s", 
ãm∂©e
);

111 i‡((
 k
Ë<
Àn
)

112 
	`dõ
("öß√lyÜ⁄g symlök %s", 
ãm∂©e
);

113 
 k
[
Àn
] = 0;

114 i‡(
	`symlök
(
 k
, 
∑th
))

115 
	`dõ
("ˇ¬Ÿ symlök %†%s", 
 k
, 
∑th
);

117 i‡(
	`S_ISREG
(
°_ãm∂©e
.
°_mode
)) {

118 i‡(
	`c›y_fûe
(
∑th
, 
ãm∂©e
, 
°_ãm∂©e
.
°_mode
))

119 
	`dõ
("ˇ¬Ÿ c›y %†tÿ%s", 
ãm∂©e
, 
∑th
);

122 
	`îr‹
("ign‹ögÅem∂©ê%s", 
ãm∂©e
);

124 
	}
}

126 
	$c›y_ãm∂©es
(c⁄° *
gô_dú
, 
Àn
, c⁄° *
ãm∂©e_dú
)

128 
∑th
[
PATH_MAX
];

129 
ãm∂©e_∑th
[
PATH_MAX
];

130 
ãm∂©e_Àn
;

131 
DIR
 *
dú
;

133 i‡(!
ãm∂©e_dú
) {

134 
ãm∂©e_dú
 = 
	`gëív
(
TEMPLATE_DIR_ENVIRONMENT
);

135 i‡(!
ãm∂©e_dú
)

136 
ãm∂©e_dú
 = 
DEFAULT_GIT_TEMPLATE_DIR
;

138 
	`°r˝y
(
ãm∂©e_∑th
, 
ãm∂©e_dú
);

139 
ãm∂©e_Àn
 = 
	`°æí
(
ãm∂©e_∑th
);

140 i‡(
ãm∂©e_∑th
[
ãm∂©e_Àn
-1] != '/') {

141 
ãm∂©e_∑th
[
ãm∂©e_Àn
++] = '/';

142 
ãm∂©e_∑th
[
ãm∂©e_Àn
] = 0;

144 
dú
 = 
	`›ídú
(
ãm∂©e_∑th
);

145 i‡(!
dú
) {

146 
	`Ârötf
(
°dîr
, "warning:ÅemplatesÇot found %s\n",

147 
ãm∂©e_dú
);

152 
	`°r˝y
(
ãm∂©e_∑th
 + 
ãm∂©e_Àn
, "config");

153 
ªposô‹y_f‹m©_vîsi⁄
 = 0;

154 
	`gô_c⁄fig_‰om_fûe
(
check_ªposô‹y_f‹m©_vîsi⁄
,

155 
ãm∂©e_∑th
);

156 
ãm∂©e_∑th
[
ãm∂©e_Àn
] = 0;

158 i‡(
ªposô‹y_f‹m©_vîsi⁄
 &&

159 
ªposô‹y_f‹m©_vîsi⁄
 !
GIT_REPO_VERSION
) {

160 
	`Ârötf
(
°dîr
, "warning:Çot copyingÅemplates of "

162 
ªposô‹y_f‹m©_vîsi⁄
,

163 
ãm∂©e_dú
);

164 
	`˛o£dú
(
dú
);

168 
	`mem˝y
(
∑th
, 
gô_dú
, 
Àn
);

169 
∑th
[
Àn
] = 0;

170 
	`c›y_ãm∂©es_1
(
∑th
, 
Àn
,

171 
ãm∂©e_∑th
, 
ãm∂©e_Àn
,

172 
dú
);

173 
	`˛o£dú
(
dú
);

174 
	}
}

176 
	$¸óã_deÁu…_fûes
(c⁄° *
gô_dú
, c⁄° *
ãm∂©e_∑th
)

178 
Àn
 = 
	`°æí
(
gô_dú
);

179 
∑th
[
PATH_MAX
];

180 
sha1
[20];

181 
°©
 
°1
;

182 
ªpo_vîsi⁄_°rög
[10];

183 
ªöô
;

184 
fûemode
;

186 i‡(
Àn
 > (
∑th
)-50)

187 
	`dõ
("öß√ gô dúe˘‹y %s", 
gô_dú
);

188 
	`mem˝y
(
∑th
, 
gô_dú
, 
Àn
);

190 i‡(
Àn
 && 
∑th
[len-1] != '/')

191 
∑th
[
Àn
++] = '/';

196 
	`°r˝y
(
∑th
 + 
Àn
, "refs");

197 
	`ß„_¸óã_dú
(
∑th
, 1);

198 
	`°r˝y
(
∑th
 + 
Àn
, "refs/heads");

199 
	`ß„_¸óã_dú
(
∑th
, 1);

200 
	`°r˝y
(
∑th
 + 
Àn
, "refs/tags");

201 
	`ß„_¸óã_dú
(
∑th
, 1);

207 
∑th
[
Àn
] = 0;

208 
	`c›y_ãm∂©es
(
∑th
, 
Àn
, 
ãm∂©e_∑th
);

210 
	`gô_c⁄fig
(
gô_deÁu…_c⁄fig
);

216 i‡(
sh¨ed_ªposô‹y
) {

217 
∑th
[
Àn
] = 0;

218 
	`adju°_sh¨ed_≥rm
(
∑th
);

219 
	`°r˝y
(
∑th
 + 
Àn
, "refs");

220 
	`adju°_sh¨ed_≥rm
(
∑th
);

221 
	`°r˝y
(
∑th
 + 
Àn
, "refs/heads");

222 
	`adju°_sh¨ed_≥rm
(
∑th
);

223 
	`°r˝y
(
∑th
 + 
Àn
, "refs/tags");

224 
	`adju°_sh¨ed_≥rm
(
∑th
);

231 
	`°r˝y
(
∑th
 + 
Àn
, "HEAD");

232 
ªöô
 = !
	`ªad_ªf
("HEAD", 
sha1
);

233 i‡(!
ªöô
) {

234 i‡(
	`¸óã_symªf
("HEAD", "ªfs/hóds/ma°î", 
NULL
) < 0)

235 
	`exô
(1);

239 
	`•rötf
(
ªpo_vîsi⁄_°rög
, "%d", 
GIT_REPO_VERSION
);

240 
	`gô_c⁄fig_£t
("c‹e.ªposô‹yf‹m©vîsi⁄", 
ªpo_vîsi⁄_°rög
);

242 
∑th
[
Àn
] = 0;

243 
	`°r˝y
(
∑th
 + 
Àn
, "config");

246 
fûemode
 = 
TEST_FILEMODE
;

247 i‡(
TEST_FILEMODE
 && !
	`l°©
(
∑th
, &
°1
)) {

248 
°©
 
°2
;

249 
fûemode
 = (!
	`chmod
(
∑th
, 
°1
.
°_mode
 ^ 
S_IXUSR
) &&

250 !
	`l°©
(
∑th
, &
°2
) &&

251 
°1
.
°_mode
 !
°2
.st_mode);

253 
	`gô_c⁄fig_£t
("c‹e.fûemode", 
fûemode
 ? "true" : "false");

255 i‡(
	`is_b¨e_ªposô‹y
()) {

256 
	`gô_c⁄fig_£t
("core.bare", "true");

259 
	`gô_c⁄fig_£t
("core.bare", "false");

261 i‡(
log_Æl_ªf_upd©es
 == -1)

262 
	`gô_c⁄fig_£t
("core.logallrefupdates", "true");

264  
ªöô
;

265 
	}
}

267 c⁄° 
	göô_db_ußge
[] =

276 
	$cmd_öô_db
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

278 c⁄° *
gô_dú
;

279 c⁄° *
sha1_dú
;

280 c⁄° *
ãm∂©e_dú
 = 
NULL
;

281 *
∑th
;

282 
Àn
, 
i
, 
ªöô
;

284 
i
 = 1; i < 
¨gc
; i++, 
¨gv
++) {

285 c⁄° *
¨g
 = 
¨gv
[1];

286 i‡(!
	`°∫cmp
(
¨g
, "--template=", 11))

287 
ãm∂©e_dú
 = 
¨g
+11;

288 i‡(!
	`°rcmp
(
¨g
, "--shared"))

289 
sh¨ed_ªposô‹y
 = 
PERM_GROUP
;

290 i‡(!
	`°∫cmp
(
¨g
, "--shared=", 9))

291 
sh¨ed_ªposô‹y
 = 
	`gô_c⁄fig_≥rm
("¨g", 
¨g
+9);

293 
	`ußge
(
öô_db_ußge
);

299 
gô_dú
 = 
	`gëív
(
GIT_DIR_ENVIRONMENT
);

300 i‡(!
gô_dú
)

301 
gô_dú
 = 
DEFAULT_GIT_DIR_ENVIRONMENT
;

302 
	`ß„_¸óã_dú
(
gô_dú
, 0);

309 
	`check_ªposô‹y_f‹m©
();

311 
ªöô
 = 
	`¸óã_deÁu…_fûes
(
gô_dú
, 
ãm∂©e_dú
);

316 
sha1_dú
 = 
	`gë_obje˘_dúe˘‹y
();

317 
Àn
 = 
	`°æí
(
sha1_dú
);

318 
∑th
 = 
	`xmÆloc
(
Àn
 + 40);

319 
	`mem˝y
(
∑th
, 
sha1_dú
, 
Àn
);

321 
	`ß„_¸óã_dú
(
sha1_dú
, 1);

322 
	`°r˝y
(
∑th
+
Àn
, "/pack");

323 
	`ß„_¸óã_dú
(
∑th
, 1);

324 
	`°r˝y
(
∑th
+
Àn
, "/info");

325 
	`ß„_¸óã_dú
(
∑th
, 1);

327 i‡(
sh¨ed_ªposô‹y
) {

328 
buf
[10];

333 
	`•rötf
(
buf
, "%d", 
sh¨ed_ªposô‹y
);

334 
	`gô_c⁄fig_£t
("c‹e.sh¨edªposô‹y", 
buf
);

335 
	`gô_c⁄fig_£t
("receive.denyNonFastforwards", "true");

338 
	`¥ötf
("%s%s GitÑepository in %s/\n",

339 
ªöô
 ? "ReinitializedÉxisting" : "InitializedÉmpty",

340 
sh¨ed_ªposô‹y
 ? " shared" : "",

341 
gô_dú
);

344 
	}
}

	@builtin-log.c

7 
	~"ˇche.h
"

8 
	~"commô.h
"

9 
	~"diff.h
"

10 
	~"ªvisi⁄.h
"

11 
	~"log-åì.h
"

12 
	~"buûtö.h
"

13 
	~"èg.h
"

14 
	~"ªÊog-wÆk.h
"

16 
	gdeÁu…_show_roŸ
 = 1;

19 
add_hód
(
ªv_öfo
 *
ªvs
);

21 
	$cmd_log_öô
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
,

22 
ªv_öfo
 *
ªv
)

24 
i
;

26 
ªv
->
abbªv
 = 
DEFAULT_ABBREV
;

27 
ªv
->
commô_f‹m©
 = 
CMIT_FMT_DEFAULT
;

28 
ªv
->
vîbo£_hódî
 = 1;

29 
ªv
->
show_roŸ_diff
 = 
deÁu…_show_roŸ
;

30 
¨gc
 = 
	`£tup_ªvisi⁄s
◊rgc, 
¨gv
, 
ªv
, "HEAD");

31 i‡(
ªv
->
diff›t
.
pickaxe
 ||Ñev->diff›t.
fûãr
)

32 
ªv
->
Æways_show_hódî
 = 0;

33 
i
 = 1; i < 
¨gc
; i++) {

34 c⁄° *
¨g
 = 
¨gv
[
i
];

35 i‡(!
	`°∫cmp
(
¨g
, "--encoding=", 11)) {

36 
¨g
 += 11;

37 i‡(
	`°rcmp
(
¨g
, "none"))

38 
gô_log_ouçut_ícodög
 = 
	`°rdup
(
¨g
);

40 
gô_log_ouçut_ícodög
 = "";

43 
	`dõ
("uƒecognizedárgumít: %s", 
¨g
);

45 
	}
}

47 
	$cmd_log_wÆk
(
ªv_öfo
 *
ªv
)

49 
commô
 *commit;

51 
	`¥ï¨e_ªvisi⁄_wÆk
(
ªv
);

52 (
commô
 = 
	`gë_ªvisi⁄
(
ªv
)Ë!
NULL
) {

53 
	`log_åì_commô
(
ªv
, 
commô
);

54 i‡(!
ªv
->
ªÊog_öfo
) {

56 
	`‰ì
(
commô
->
buf„r
);

57 
commô
->
buf„r
 = 
NULL
;

59 
	`‰ì_commô_li°
(
commô
->
∑ª¡s
);

60 
commô
->
∑ª¡s
 = 
NULL
;

63 
	}
}

65 
	$gô_log_c⁄fig
(c⁄° *
v¨
, c⁄° *
vÆue
)

67 i‡(!
	`°rcmp
(
v¨
, "log.showroot")) {

68 
deÁu…_show_roŸ
 = 
	`gô_c⁄fig_boﬁ
(
v¨
, 
vÆue
);

71  
	`gô_diff_ui_c⁄fig
(
v¨
, 
vÆue
);

72 
	}
}

74 
	$cmd_wh©ch™ged
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

76 
ªv_öfo
 
ªv
;

78 
	`gô_c⁄fig
(
gô_log_c⁄fig
);

79 
	`öô_ªvisi⁄s
(&
ªv
, 
¥efix
);

80 
ªv
.
diff
 = 1;

81 
ªv
.
diff›t
.
ªcursive
 = 1;

82 
ªv
.
sim∂ify_hi°‹y
 = 0;

83 
	`cmd_log_öô
(
¨gc
, 
¨gv
, 
¥efix
, &
ªv
);

84 i‡(!
ªv
.
diff›t
.
ouçut_f‹m©
)

85 
ªv
.
diff›t
.
ouçut_f‹m©
 = 
DIFF_FORMAT_RAW
;

86  
	`cmd_log_wÆk
(&
ªv
);

87 
	}
}

89 
	$show_obje˘
(c⁄° *
sha1
, 
suµªss_hódî
)

91 
size
;

92 
ty≥
[20];

93 *
buf
 = 
	`ªad_sha1_fûe
(
sha1
, 
ty≥
, &
size
);

94 
off£t
 = 0;

96 i‡(!
buf
)

97  
	`îr‹
("CouldÇŸÑód obje˘ %s", 
	`sha1_to_hex
(
sha1
));

99 i‡(
suµªss_hódî
)

100 
off£t
 < 
size
 && 
buf
[offset++] != '\n') {

101 
√w_off£t
 = 
off£t
;

102 
√w_off£t
 < 
size
 && 
buf
[new_offset++] != '\n')

104 
off£t
 = 
√w_off£t
;

107 i‡(
off£t
 < 
size
)

108 
	`fwrôe
(
buf
 + 
off£t
, 
size
 - off£t, 1, 
°dout
);

109 
	`‰ì
(
buf
);

111 
	}
}

113 
	$show_åì_obje˘
(c⁄° *
sha1
,

114 c⁄° *
ba£
, 
ba£Àn
,

115 c⁄° *
∑th«me
, 
mode
, 
°age
)

117 
	`¥ötf
("%s%s\n", 
∑th«me
, 
	`S_ISDIR
(
mode
) ? "/" : "");

119 
	}
}

121 
	$cmd_show
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

123 
ªv_öfo
 
ªv
;

124 
obje˘_¨øy_íåy
 *
obje˘s
;

125 
i
, 
cou¡
, 
ªt
 = 0;

127 
	`gô_c⁄fig
(
gô_log_c⁄fig
);

128 
	`öô_ªvisi⁄s
(&
ªv
, 
¥efix
);

129 
ªv
.
diff
 = 1;

130 
ªv
.
diff›t
.
ªcursive
 = 1;

131 
ªv
.
comböe_mîges
 = 1;

132 
ªv
.
dí£_comböed_mîges
 = 1;

133 
ªv
.
Æways_show_hódî
 = 1;

134 
ªv
.
ign‹e_mîges
 = 0;

135 
ªv
.
no_wÆk
 = 1;

136 
	`cmd_log_öô
(
¨gc
, 
¨gv
, 
¥efix
, &
ªv
);

138 
cou¡
 = 
ªv
.
≥ndög
.
ƒ
;

139 
obje˘s
 = 
ªv
.
≥ndög
.objects;

140 
i
 = 0; i < 
cou¡
 && !
ªt
; i++) {

141 
obje˘
 *
o
 = 
obje˘s
[
i
].
ôem
;

142 c⁄° *
«me
 = 
obje˘s
[
i
].name;

143 
o
->
ty≥
) {

144 
OBJ_BLOB
:

145 
ªt
 = 
	`show_obje˘
(
o
->
sha1
, 0);

147 
OBJ_TAG
: {

148 
èg
 *
t
 = (èg *)
o
;

150 
	`¥ötf
("%stag %s%s\n\n",

151 
	`diff_gë_cﬁ‹
(
ªv
.
diff›t
.
cﬁ‹_diff
,

152 
DIFF_COMMIT
),

153 
t
->
èg
,

154 
	`diff_gë_cﬁ‹
(
ªv
.
diff›t
.
cﬁ‹_diff
,

155 
DIFF_RESET
));

156 
ªt
 = 
	`show_obje˘
(
o
->
sha1
, 1);

157 
obje˘s
[
i
].
ôem
 = (
obje˘
 *)
t
->
ègged
;

158 
i
--;

161 
OBJ_TREE
:

162 
	`¥ötf
("%stree %s%s\n\n",

163 
	`diff_gë_cﬁ‹
(
ªv
.
diff›t
.
cﬁ‹_diff
,

164 
DIFF_COMMIT
),

165 
«me
,

166 
	`diff_gë_cﬁ‹
(
ªv
.
diff›t
.
cﬁ‹_diff
,

167 
DIFF_RESET
));

168 
	`ªad_åì_ªcursive
((
åì
 *)
o
, "", 0, 0, 
NULL
,

169 
show_åì_obje˘
);

171 
OBJ_COMMIT
:

172 
ªv
.
≥ndög
.
ƒ
 =Ñev.≥ndög.
Æloc
 = 0;

173 
ªv
.
≥ndög
.
obje˘s
 = 
NULL
;

174 
	`add_obje˘_¨øy
(
o
, 
«me
, &
ªv
.
≥ndög
);

175 
ªt
 = 
	`cmd_log_wÆk
(&
ªv
);

178 
ªt
 = 
	`îr‹
("Unknow¿ty≥: %d", 
o
->
ty≥
);

181 
	`‰ì
(
obje˘s
);

182  
ªt
;

183 
	}
}

188 
	$cmd_log_ªÊog
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

190 
ªv_öfo
 
ªv
;

192 
	`gô_c⁄fig
(
gô_log_c⁄fig
);

193 
	`öô_ªvisi⁄s
(&
ªv
, 
¥efix
);

194 
	`öô_ªÊog_wÆk
(&
ªv
.
ªÊog_öfo
);

195 
ªv
.
abbªv_commô
 = 1;

196 
ªv
.
vîbo£_hódî
 = 1;

197 
	`cmd_log_öô
(
¨gc
, 
¨gv
, 
¥efix
, &
ªv
);

204 
ªv
.
commô_f‹m©
 = 
CMIT_FMT_ONELINE
;

205 
ªv
.
Æways_show_hódî
 = 1;

211 
	`£tup_∑gî
();

213  
	`cmd_log_wÆk
(&
ªv
);

214 
	}
}

216 
	$cmd_log
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

218 
ªv_öfo
 
ªv
;

220 
	`gô_c⁄fig
(
gô_log_c⁄fig
);

221 
	`öô_ªvisi⁄s
(&
ªv
, 
¥efix
);

222 
ªv
.
Æways_show_hódî
 = 1;

223 
	`cmd_log_öô
(
¨gc
, 
¨gv
, 
¥efix
, &
ªv
);

224  
	`cmd_log_wÆk
(&
ªv
);

225 
	}
}

227 
	$i°ôÀch¨
(
c
)

229  (
c
 >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') ||

230 (
c
 >= '0' && c <= '9') || c == '.' || c == '_';

231 
	}
}

233 *
	gexåa_hódîs
 = 
NULL
;

234 
	gexåa_hódîs_size
 = 0;

235 c⁄° *
	gfmt_∑tch_suffix
 = ".patch";

237 
	$gô_f‹m©_c⁄fig
(c⁄° *
v¨
, c⁄° *
vÆue
)

239 i‡(!
	`°rcmp
(
v¨
, "format.headers")) {

240 
Àn
;

242 i‡(!
vÆue
)

243 
	`dõ
("format.headers without value");

244 
Àn
 = 
	`°æí
(
vÆue
);

245 
exåa_hódîs_size
 +
Àn
 + 1;

246 
exåa_hódîs
 = 
	`xªÆloc
”xåa_hódîs, 
exåa_hódîs_size
);

247 
exåa_hódîs
[
exåa_hódîs_size
 - 
Àn
 - 1] = 0;

248 
	`°rˇt
(
exåa_hódîs
, 
vÆue
);

251 i‡(!
	`°rcmp
(
v¨
, "format.suffix")) {

252 i‡(!
vÆue
)

253 
	`dõ
("format.suffix without value");

254 
fmt_∑tch_suffix
 = 
	`x°rdup
(
vÆue
);

257 i‡(!
	`°rcmp
(
v¨
, "diff.color") || !strcmp(var, "color.diff")) {

260  
	`gô_log_c⁄fig
(
v¨
, 
vÆue
);

261 
	}
}

264 
FILE
 *
	gªÆ°dout
 = 
NULL
;

265 c⁄° *
	gouçut_dúe˘‹y
 = 
NULL
;

267 
	$ª›í_°dout
(
commô
 *commô, 
ƒ
, 
kìp_subje˘
)

269 
fûíame
[1024];

270 *
sﬁ
;

271 
Àn
 = 0;

272 
suffix_Àn
 = 
	`°æí
(
fmt_∑tch_suffix
) + 10;

274 i‡(
ouçut_dúe˘‹y
) {

275 
	`°æ˝y
(
fûíame
, 
ouçut_dúe˘‹y
, 1000);

276 
Àn
 = 
	`°æí
(
fûíame
);

277 i‡(
fûíame
[
Àn
 - 1] != '/')

278 
fûíame
[
Àn
++] = '/';

281 
	`•rötf
(
fûíame
 + 
Àn
, "%04d", 
ƒ
);

282 
Àn
 = 
	`°æí
(
fûíame
);

284 
sﬁ
 = 
	`°r°r
(
commô
->
buf„r
, "\n\n");

285 i‡(
sﬁ
) {

286 
j
, 
•a˚
 = 1;

288 
sﬁ
 += 2;

290 i‡(!
kìp_subje˘
 && !
	`°∫cmp
(
sﬁ
, "[PATCH", 6)) {

291 *
eos
 = 
	`°rchr
(
sﬁ
 + 6, ']');

292 i‡(
eos
) {

293 
	`is•a˚
(*
eos
))

294 
eos
++;

295 
sﬁ
 = 
eos
;

299 
j
 = 0;

300 
Àn
 < (
fûíame
Ë- 
suffix_Àn
 &&

301 
sﬁ
[
j
] && sol[j] != '\n';

302 
j
++) {

303 i‡(
	`i°ôÀch¨
(
sﬁ
[
j
])) {

304 i‡(
•a˚
) {

305 
fûíame
[
Àn
++] = '-';

306 
•a˚
 = 0;

308 
fûíame
[
Àn
++] = 
sﬁ
[
j
];

309 i‡(
sﬁ
[
j
] == '.')

310 
sﬁ
[
j
 + 1] == '.')

311 
j
++;

313 
•a˚
 = 1;

315 
fûíame
[
Àn
 - 1] == '.' || filename[len - 1] == '-')

316 
Àn
--;

318 
	`°r˝y
(
fûíame
 + 
Àn
, 
fmt_∑tch_suffix
);

319 
	`Ârötf
(
ªÆ°dout
, "%s\n", 
fûíame
);

320 
	`‰e›í
(
fûíame
, "w", 
°dout
);

321 
	}
}

323 
	$gë_∑tch_id
(
commô
 *commô, 
diff_›ti⁄s
 *
›ti⁄s
,

324 *
sha1
)

326 i‡(
commô
->
∑ª¡s
)

327 
	`diff_åì_sha1
(
commô
->
∑ª¡s
->
ôem
->
obje˘
.
sha1
,

328 
commô
->
obje˘
.
sha1
, "", 
›ti⁄s
);

330 
	`diff_roŸ_åì_sha1
(
commô
->
obje˘
.
sha1
, "", 
›ti⁄s
);

331 
	`diffc‹e_°d
(
›ti⁄s
);

332  
	`diff_Êush_∑tch_id
(
›ti⁄s
, 
sha1
);

333 
	}
}

335 
	$gë_∑tch_ids
(
ªv_öfo
 *
ªv
, 
diff_›ti⁄s
 *
›ti⁄s
, c⁄° *
¥efix
)

337 
ªv_öfo
 
check_ªv
;

338 
commô
 *commit;

339 
obje˘
 *
o1
, *
o2
;

340 
Êags1
, 
Êags2
;

341 
sha1
[20];

343 i‡(
ªv
->
≥ndög
.
ƒ
 != 2)

344 
	`dõ
("NeedÉxactly oneÑange.");

346 
o1
 = 
ªv
->
≥ndög
.
obje˘s
[0].
ôem
;

347 
Êags1
 = 
o1
->
Êags
;

348 
o2
 = 
ªv
->
≥ndög
.
obje˘s
[1].
ôem
;

349 
Êags2
 = 
o2
->
Êags
;

351 i‡((
Êags1
 & 
UNINTERESTING
Ë=(
Êags2
 & UNINTERESTING))

352 
	`dõ
("NotáÑange.");

354 
	`diff_£tup
(
›ti⁄s
);

355 
›ti⁄s
->
ªcursive
 = 1;

356 i‡(
	`diff_£tup_d⁄e
(
›ti⁄s
) < 0)

357 
	`dõ
("diff_setup_done failed");

360 
	`öô_ªvisi⁄s
(&
check_ªv
, 
¥efix
);

361 
o1
->
Êags
 ^
UNINTERESTING
;

362 
o2
->
Êags
 ^
UNINTERESTING
;

363 
	`add_≥ndög_obje˘
(&
check_ªv
, 
o1
, "o1");

364 
	`add_≥ndög_obje˘
(&
check_ªv
, 
o2
, "o2");

365 
	`¥ï¨e_ªvisi⁄_wÆk
(&
check_ªv
);

367 (
commô
 = 
	`gë_ªvisi⁄
(&
check_ªv
)Ë!
NULL
) {

369 i‡(
commô
->
∑ª¡s
 && commô->∑ª¡s->
√xt
)

372 i‡(!
	`gë_∑tch_id
(
commô
, 
›ti⁄s
, 
sha1
))

373 
	`¸óãd_obje˘
(
sha1
, 
	`xˇŒoc
(1, (
obje˘
)));

377 
	`˛ór_commô_m¨ks
((
commô
 *)
o1
,

378 
SEEN
 | 
UNINTERESTING
 | 
SHOWN
 | 
ADDED
);

379 
	`˛ór_commô_m¨ks
((
commô
 *)
o2
,

380 
SEEN
 | 
UNINTERESTING
 | 
SHOWN
 | 
ADDED
);

381 
o1
->
Êags
 = 
Êags1
;

382 
o2
->
Êags
 = 
Êags2
;

383 
	}
}

385 
	$gí_mesßge_id
(*
de°
, 
Àngth
, *
ba£
)

387 c⁄° *
commôãr
 = 
	`gô_commôãr_öfo
(-1);

388 c⁄° *
emaû_°¨t
 = 
	`°ºchr
(
commôãr
, '<');

389 c⁄° *
emaû_íd
 = 
	`°ºchr
(
commôãr
, '>');

390 if(!
emaû_°¨t
 || !
emaû_íd
 ||Émail_start >Émail_end - 1)

391 
	`dõ
("CouldÇotÉxtractÉmail from committer identity.");

392 
	`¢¥ötf
(
de°
, 
Àngth
, "%s.%lu.gô.%.*s", 
ba£
,

393 (Ë
	`time
(
NULL
),

394 ()(
emaû_íd
 - 
emaû_°¨t
 - 1),Émail_start + 1);

395 
	}
}

397 
	$cmd_f‹m©_∑tch
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

399 
commô
 *commit;

400 
commô
 **
li°
 = 
NULL
;

401 
ªv_öfo
 
ªv
;

402 
ƒ
 = 0, 
tŸÆ
, 
i
, 
j
;

403 
u£_°dout
 = 0;

404 
numbîed
 = 0;

405 
°¨t_numbî
 = -1;

406 
kìp_subje˘
 = 0;

407 
ign‹e_if_ö_up°ªam
 = 0;

408 
thªad
 = 0;

409 c⁄° *
ö_ª∂y_to
 = 
NULL
;

410 
diff_›ti⁄s
 
∑tch_id_›ts
;

411 *
add_signoff
 = 
NULL
;

412 
mesßge_id
[1024];

413 
ªf_mesßge_id
[1024];

415 
	`gô_c⁄fig
(
gô_f‹m©_c⁄fig
);

416 
	`öô_ªvisi⁄s
(&
ªv
, 
¥efix
);

417 
ªv
.
commô_f‹m©
 = 
CMIT_FMT_EMAIL
;

418 
ªv
.
vîbo£_hódî
 = 1;

419 
ªv
.
diff
 = 1;

420 
ªv
.
comböe_mîges
 = 0;

421 
ªv
.
ign‹e_mîges
 = 1;

422 
ªv
.
diff›t
.
msg_£p
 = "";

423 
ªv
.
diff›t
.
ªcursive
 = 1;

425 
ªv
.
exåa_hódîs
 =Éxtra_headers;

432 
i
 = 1, 
j
 = 1; i < 
¨gc
; i++) {

433 i‡(!
	`°rcmp
(
¨gv
[
i
], "--stdout"))

434 
u£_°dout
 = 1;

435 i‡(!
	`°rcmp
(
¨gv
[
i
], "-n") ||

436 !
	`°rcmp
(
¨gv
[
i
], "--numbered"))

437 
numbîed
 = 1;

438 i‡(!
	`°∫cmp
(
¨gv
[
i
], "--start-number=", 15))

439 
°¨t_numbî
 = 
	`°πﬁ
(
¨gv
[
i
] + 15, 
NULL
, 10);

440 i‡(!
	`°rcmp
(
¨gv
[
i
], "--start-number")) {

441 
i
++;

442 i‡(
i
 =
¨gc
)

443 
	`dõ
("NeedáÇumber for --start-number");

444 
°¨t_numbî
 = 
	`°πﬁ
(
¨gv
[
i
], 
NULL
, 10);

446 i‡(!
	`°rcmp
(
¨gv
[
i
], "-k") ||

447 !
	`°rcmp
(
¨gv
[
i
], "--keep-subject")) {

448 
kìp_subje˘
 = 1;

449 
ªv
.
tŸÆ
 = -1;

451 i‡(!
	`°rcmp
(
¨gv
[
i
], "--output-directory") ||

452 !
	`°rcmp
(
¨gv
[
i
], "-o")) {

453 
i
++;

454 i‡(
¨gc
 <
i
)

455 
	`dõ
("Which directory?");

456 i‡(
ouçut_dúe˘‹y
)

457 
	`dõ
("Two output directories?");

458 
ouçut_dúe˘‹y
 = 
¨gv
[
i
];

460 i‡(!
	`°rcmp
(
¨gv
[
i
], "--signoff") ||

461 !
	`°rcmp
(
¨gv
[
i
], "-s")) {

462 c⁄° *
commôãr
;

463 c⁄° *
ídpos
;

464 
commôãr
 = 
	`gô_commôãr_öfo
(1);

465 
ídpos
 = 
	`°rchr
(
commôãr
, '>');

466 i‡(!
ídpos
)

467 
	`dõ
("bogo†commôã∏öfÿ%s\n", 
commôãr
);

468 
add_signoff
 = 
	`xmÆloc
(
ídpos
 - 
commôãr
 + 2);

469 
	`mem˝y
(
add_signoff
, 
commôãr
, 
ídpos
 - committer + 1);

470 
add_signoff
[
ídpos
 - 
commôãr
 + 1] = 0;

472 i‡(!
	`°rcmp
(
¨gv
[
i
], "--attach"))

473 
ªv
.
mime_bound¨y
 = 
gô_vîsi⁄_°rög
;

474 i‡(!
	`°∫cmp
(
¨gv
[
i
], "--attach=", 9))

475 
ªv
.
mime_bound¨y
 = 
¨gv
[
i
] + 9;

476 i‡(!
	`°rcmp
(
¨gv
[
i
], "--ignore-if-in-upstream"))

477 
ign‹e_if_ö_up°ªam
 = 1;

478 i‡(!
	`°rcmp
(
¨gv
[
i
], "--thread"))

479 
thªad
 = 1;

480 i‡(!
	`°∫cmp
(
¨gv
[
i
], "--in-reply-to=", 14))

481 
ö_ª∂y_to
 = 
¨gv
[
i
] + 14;

482 i‡(!
	`°rcmp
(
¨gv
[
i
], "--in-reply-to")) {

483 
i
++;

484 i‡(
i
 =
¨gc
)

485 
	`dõ
("Needá Message-Id for --in-reply-to");

486 
ö_ª∂y_to
 = 
¨gv
[
i
];

488 i‡(!
	`°∫cmp
(
¨gv
[
i
], "--suffix=", 9))

489 
fmt_∑tch_suffix
 = 
¨gv
[
i
] + 9;

491 
¨gv
[
j
++] =árgv[
i
];

493 
¨gc
 = 
j
;

495 i‡(
°¨t_numbî
 < 0)

496 
°¨t_numbî
 = 1;

497 i‡(
numbîed
 && 
kìp_subje˘
)

498 
	`dõ
 ("-nánd -káre mutuallyÉxclusive.");

500 
¨gc
 = 
	`£tup_ªvisi⁄s
◊rgc, 
¨gv
, &
ªv
, "HEAD");

501 i‡(
¨gc
 > 1)

502 
	`dõ
 ("uƒecognizedárgumít: %s", 
¨gv
[1]);

504 i‡(!
ªv
.
diff›t
.
ouçut_f‹m©
)

505 
ªv
.
diff›t
.
ouçut_f‹m©
 = 
DIFF_FORMAT_DIFFSTAT
 | 
DIFF_FORMAT_SUMMARY
 | 
DIFF_FORMAT_PATCH
;

507 i‡(!
ªv
.
diff›t
.
ãxt
)

508 
ªv
.
diff›t
.
bö¨y
 = 1;

510 i‡(!
ouçut_dúe˘‹y
 && !
u£_°dout
)

511 
ouçut_dúe˘‹y
 = 
¥efix
;

513 i‡(
ouçut_dúe˘‹y
) {

514 i‡(
u£_°dout
)

515 
	`dõ
("standard output, or directory, which one?");

516 i‡(
	`mkdú
(
ouçut_dúe˘‹y
, 0777Ë< 0 && 
î∫o
 !
EEXIST
)

517 
	`dõ
("CouldÇot create directory %s",

518 
ouçut_dúe˘‹y
);

521 i‡(
ªv
.
≥ndög
.
ƒ
 == 1) {

522 i‡(
ªv
.
max_cou¡
 < 0) {

523 
ªv
.
≥ndög
.
obje˘s
[0].
ôem
->
Êags
 |
UNINTERESTING
;

524 
	`add_hód
(&
ªv
);

531 i‡(
ign‹e_if_ö_up°ªam
)

532 
	`gë_∑tch_ids
(&
ªv
, &
∑tch_id_›ts
, 
¥efix
);

534 i‡(!
u£_°dout
)

535 
ªÆ°dout
 = 
	`fd›í
(
	`dup
(1), "w");

537 
	`¥ï¨e_ªvisi⁄_wÆk
(&
ªv
);

538 (
commô
 = 
	`gë_ªvisi⁄
(&
ªv
)Ë!
NULL
) {

539 
sha1
[20];

542 i‡(
commô
->
∑ª¡s
 && commô->∑ª¡s->
√xt
)

545 i‡(
ign‹e_if_ö_up°ªam
 &&

546 !
	`gë_∑tch_id
(
commô
, &
∑tch_id_›ts
, 
sha1
) &&

547 
	`lookup_obje˘
(
sha1
))

550 
ƒ
++;

551 
li°
 = 
	`xªÆloc
÷i°, 
ƒ
 * (list[0]));

552 
li°
[
ƒ
 - 1] = 
commô
;

554 
tŸÆ
 = 
ƒ
;

555 i‡(
numbîed
)

556 
ªv
.
tŸÆ
 =ÅŸÆ + 
°¨t_numbî
 - 1;

557 
ªv
.
add_signoff
 =ádd_signoff;

558 
ªv
.
ªf_mesßge_id
 = 
ö_ª∂y_to
;

559 0 <--
ƒ
) {

560 
shown
;

561 
commô
 = 
li°
[
ƒ
];

562 
ªv
.
ƒ
 = 
tŸÆ
 -Ç∏+ (
°¨t_numbî
 - 1);

564 i‡(
thªad
) {

565 i‡(
ƒ
 =(
tŸÆ
 - 2)) {

566 
	`°∫˝y
(
ªf_mesßge_id
, 
mesßge_id
,

567 (
ªf_mesßge_id
));

568 
ªf_mesßge_id
[(ref_message_id)-1]='\0';

569 
ªv
.
ªf_mesßge_id
 =Ñef_message_id;

571 
	`gí_mesßge_id
(
mesßge_id
, (message_id),

572 
	`sha1_to_hex
(
commô
->
obje˘
.
sha1
));

573 
ªv
.
mesßge_id
 = message_id;

575 i‡(!
u£_°dout
)

576 
	`ª›í_°dout
(
commô
, 
ªv
.
ƒ
, 
kìp_subje˘
);

577 
shown
 = 
	`log_åì_commô
(&
ªv
, 
commô
);

578 
	`‰ì
(
commô
->
buf„r
);

579 
commô
->
buf„r
 = 
NULL
;

587 i‡(!
u£_°dout
)

588 
ªv
.
shown_⁄e
 = 0;

589 i‡(
shown
) {

590 i‡(
ªv
.
mime_bound¨y
)

591 
	`¥ötf
("\n--%s%s--\n\n\n",

592 
mime_bound¨y_Àadî
,

593 
ªv
.
mime_bound¨y
);

595 
	`¥ötf
("-- \n%s\n\n", 
gô_vîsi⁄_°rög
);

597 i‡(!
u£_°dout
)

598 
	`f˛o£
(
°dout
);

600 
	`‰ì
(
li°
);

602 
	}
}

604 
	$add_≥ndög_commô
(c⁄° *
¨g
, 
ªv_öfo
 *
ªvs
, 
Êags
)

606 
sha1
[20];

607 i‡(
	`gë_sha1
(
¨g
, 
sha1
) == 0) {

608 
commô
 *commô = 
	`lookup_commô_ª„ªn˚
(
sha1
);

609 i‡(
commô
) {

610 
commô
->
obje˘
.
Êags
 |= flags;

611 
	`add_≥ndög_obje˘
(
ªvs
, &
commô
->
obje˘
, 
¨g
);

616 
	}
}

618 c⁄° 
	gchîry_ußge
[] =

620 
	$cmd_chîry
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

622 
ªv_öfo
 
ªvs
;

623 
diff_›ti⁄s
 
∑tch_id_›ts
;

624 
commô
 *commit;

625 
commô_li°
 *
li°
 = 
NULL
;

626 c⁄° *
up°ªam
;

627 c⁄° *
hód
 = "HEAD";

628 c⁄° *
limô
 = 
NULL
;

629 
vîbo£
 = 0;

631 i‡(
¨gc
 > 1 && !
	`°rcmp
(
¨gv
[1], "-v")) {

632 
vîbo£
 = 1;

633 
¨gc
--;

634 
¨gv
++;

637 
¨gc
) {

639 
limô
 = 
¨gv
[3];

642 
hód
 = 
¨gv
[2];

645 
up°ªam
 = 
¨gv
[1];

648 
	`ußge
(
chîry_ußge
);

651 
	`öô_ªvisi⁄s
(&
ªvs
, 
¥efix
);

652 
ªvs
.
diff
 = 1;

653 
ªvs
.
comböe_mîges
 = 0;

654 
ªvs
.
ign‹e_mîges
 = 1;

655 
ªvs
.
diff›t
.
ªcursive
 = 1;

657 i‡(
	`add_≥ndög_commô
(
hód
, &
ªvs
, 0))

658 
	`dõ
("Unknow¿commô %s", 
hód
);

659 i‡(
	`add_≥ndög_commô
(
up°ªam
, &
ªvs
, 
UNINTERESTING
))

660 
	`dõ
("Unknow¿commô %s", 
up°ªam
);

663 i‡(
ªvs
.
≥ndög
.
ƒ
 == 2) {

664 
obje˘_¨øy_íåy
 *
o
 = 
ªvs
.
≥ndög
.
obje˘s
;

665 i‡(
	`hashcmp
(
o
[0].
ôem
->
sha1
, o[1].item->sha1) == 0)

669 
	`gë_∑tch_ids
(&
ªvs
, &
∑tch_id_›ts
, 
¥efix
);

671 i‡(
limô
 && 
	`add_≥ndög_commô
÷imô, &
ªvs
, 
UNINTERESTING
))

672 
	`dõ
("Unknow¿commô %s", 
limô
);

675 
	`¥ï¨e_ªvisi⁄_wÆk
(&
ªvs
);

676 (
commô
 = 
	`gë_ªvisi⁄
(&
ªvs
)Ë!
NULL
) {

678 i‡(
commô
->
∑ª¡s
 && commô->∑ª¡s->
√xt
)

681 
	`commô_li°_ö£π
(
commô
, &
li°
);

684 
li°
) {

685 
sha1
[20];

686 
sign
 = '+';

688 
commô
 = 
li°
->
ôem
;

689 i‡(!
	`gë_∑tch_id
(
commô
, &
∑tch_id_›ts
, 
sha1
) &&

690 
	`lookup_obje˘
(
sha1
))

691 
sign
 = '-';

693 i‡(
vîbo£
) {

694 
buf
[16384];

695 
	`¥ëty_¥öt_commô
(
CMIT_FMT_ONELINE
, 
commô
, ~0,

696 
buf
, (buf), 0, 
NULL
, NULL, 0);

697 
	`¥ötf
("%¯%†%s\n", 
sign
,

698 
	`sha1_to_hex
(
commô
->
obje˘
.
sha1
), 
buf
);

701 
	`¥ötf
("%¯%s\n", 
sign
,

702 
	`sha1_to_hex
(
commô
->
obje˘
.
sha1
));

705 
li°
 =Üi°->
√xt
;

709 
	}
}

	@builtin-ls-files.c

8 
	~"ˇche.h
"

9 
	~"quŸe.h
"

10 
	~"dú.h
"

11 
	~"buûtö.h
"

13 
	gabbªv
;

14 
	gshow_dñëed
;

15 
	gshow_ˇched
;

16 
	gshow_Ÿhîs
;

17 
	gshow_°age
;

18 
	gshow_unmîged
;

19 
	gshow_modifõd
;

20 
	gshow_kûÀd
;

21 
	gshow_vÆid_bô
;

22 
	glöe_ãrmö©‹
 = '\n';

24 
	g¥efix_Àn
;

25 
	g¥efix_off£t
;

26 c⁄° **
	g∑th•ec
;

27 
	gîr‹_unm©ch
;

28 *
	gps_m©ched
;

30 c⁄° *
	gèg_ˇched
 = "";

31 c⁄° *
	gèg_unmîged
 = "";

32 c⁄° *
	gèg_ªmoved
 = "";

33 c⁄° *
	gèg_Ÿhî
 = "";

34 c⁄° *
	gèg_kûÀd
 = "";

35 c⁄° *
	gèg_modifõd
 = "";

42 
	$m©ch
(c⁄° **
•ec
, *
ps_m©ched
,

43 c⁄° *
fûíame
, 
Àn
)

45 c⁄° *
m
;

47 (
m
 = *
•ec
++Ë!
NULL
) {

48 
m©chÀn
 = 
	`°æí
(
m
 + 
Àn
);

50 i‡(!
m©chÀn
)

51 
m©ched
;

52 i‡(!
	`°∫cmp
(
m
 + 
Àn
, 
fûíame
 +Üí, 
m©chÀn
)) {

53 i‡(
m
[
Àn
 + 
m©chÀn
 - 1] == '/')

54 
m©ched
;

55 
fûíame
[
Àn
 + 
m©chÀn
]) {

57 
m©ched
;

60 i‡(!
	`‚m©ch
(
m
 + 
Àn
, 
fûíame
 +Üen, 0))

61 
m©ched
;

62 i‡(
ps_m©ched
)

63 
ps_m©ched
++;

65 
m©ched
:

66 i‡(
ps_m©ched
)

67 *
ps_m©ched
 = 1;

71 
	}
}

73 
	$show_dú_íåy
(c⁄° *
èg
, 
dú_íåy
 *
ít
)

75 
Àn
 = 
¥efix_Àn
;

76 
off£t
 = 
¥efix_off£t
;

78 i‡(
Àn
 >
ít
->len)

79 
	`dõ
("git-ls-files: internalÉrror - directoryÉntryÇot superset ofÖrefix");

81 i‡(
∑th•ec
 && !
	`m©ch
’©h•ec, 
ps_m©ched
, 
ít
->
«me
, 
Àn
))

84 
	`Âuts
(
èg
, 
°dout
);

85 
	`wrôe_«me_quŸed
("", 0, 
ít
->
«me
 + 
off£t
, 
löe_ãrmö©‹
, 
°dout
);

86 
	`putch¨
(
löe_ãrmö©‹
);

87 
	}
}

89 
	$show_Ÿhî_fûes
(
dú_°ru˘
 *
dú
)

91 
i
;

92 
i
 = 0; i < 
dú
->
ƒ
; i++) {

96 
dú_íåy
 *
ít
 = 
dú
->
íåõs
[
i
];

97 
pos
 = 
	`ˇche_«me_pos
(
ít
->
«me
,É¡->
Àn
);

98 
ˇche_íåy
 *
˚
;

99 i‡(0 <
pos
)

100 
	`dõ
("bug in show-other-files");

101 
pos
 = -pos - 1;

102 i‡(
pos
 < 
a˘ive_ƒ
) {

103 
˚
 = 
a˘ive_ˇche
[
pos
];

104 i‡(
	`˚_«mñí
(
˚
Ë=
ít
->
Àn
 &&

105 !
	`memcmp
(
˚
->
«me
, 
ít
->«me,É¡->
Àn
))

108 
	`show_dú_íåy
(
èg_Ÿhî
, 
ít
);

110 
	}
}

112 
	$show_kûÀd_fûes
(
dú_°ru˘
 *
dú
)

114 
i
;

115 
i
 = 0; i < 
dú
->
ƒ
; i++) {

116 
dú_íåy
 *
ít
 = 
dú
->
íåõs
[
i
];

117 *
˝
, *
•
;

118 
pos
, 
Àn
, 
kûÀd
 = 0;

120 
˝
 = 
ít
->
«me
; c∞-É¡->«mê<É¡->
Àn
; c∞
•
 + 1) {

121 
•
 = 
	`°rchr
(
˝
, '/');

122 i‡(!
•
) {

126 
pos
 = 
	`ˇche_«me_pos
(
ít
->
«me
,É¡->
Àn
);

127 i‡(0 <
pos
)

128 
	`dõ
("bug in show-killed-files");

129 
pos
 = -pos - 1;

130 
pos
 < 
a˘ive_ƒ
 &&

131 
	`˚_°age
(
a˘ive_ˇche
[
pos
]))

132 
pos
++;

133 i‡(
a˘ive_ƒ
 <
pos
)

139 
Àn
 = 
	`˚_«mñí
(
a˘ive_ˇche
[
pos
]);

140 i‡((
ít
->
Àn
 <Üen) &&

141 !
	`°∫cmp
(
a˘ive_ˇche
[
pos
]->
«me
,

142 
ít
->
«me
,É¡->
Àn
) &&

143 
a˘ive_ˇche
[
pos
]->
«me
[
ít
->
Àn
] == '/')

144 
kûÀd
 = 1;

147 i‡(0 <
	`ˇche_«me_pos
(
ít
->
«me
, 
•
 -Ént->name)) {

152 
kûÀd
 = 1;

156 i‡(
kûÀd
)

157 
	`show_dú_íåy
(
èg_kûÀd
, 
dú
->
íåõs
[
i
]);

159 
	}
}

161 
	$show_˚_íåy
(c⁄° *
èg
, 
ˇche_íåy
 *
˚
)

163 
Àn
 = 
¥efix_Àn
;

164 
off£t
 = 
¥efix_off£t
;

166 i‡(
Àn
 >
	`˚_«mñí
(
˚
))

167 
	`dõ
("git-ls-files: internalÉrror - cacheÉntryÇot superset ofÖrefix");

169 i‡(
∑th•ec
 && !
	`m©ch
’©h•ec, 
ps_m©ched
, 
˚
->
«me
, 
Àn
))

172 i‡(
èg
 && *èg && 
show_vÆid_bô
 &&

173 (
˚
->
˚_Êags
 & 
	`ht⁄s
(
CE_VALID
))) {

174 
Æâag
[4];

175 
	`mem˝y
(
Æâag
, 
èg
, 3);

176 i‡(
	`ißÕha
(
èg
[0]))

177 
Æâag
[0] = 
	`tﬁowî
(
èg
[0]);

178 i‡(
èg
[0] == '?')

179 
Æâag
[0] = '!';

181 
Æâag
[0] = 'v';

182 
Æâag
[1] = 
èg
[0];

183 
Æâag
[2] = ' ';

184 
Æâag
[3] = 0;

186 
èg
 = 
Æâag
;

189 i‡(!
show_°age
) {

190 
	`Âuts
(
èg
, 
°dout
);

191 
	`wrôe_«me_quŸed
("", 0, 
˚
->
«me
 + 
off£t
,

192 
löe_ãrmö©‹
, 
°dout
);

193 
	`putch¨
(
löe_ãrmö©‹
);

196 
	`¥ötf
("%s%06o %s %d\t",

197 
èg
,

198 
	`¡ohl
(
˚
->
˚_mode
),

199 
abbªv
 ? 
	`föd_unique_abbªv
(
˚
->
sha1
,abbrev)

200 : 
	`sha1_to_hex
(
˚
->
sha1
),

201 
	`˚_°age
(
˚
));

202 
	`wrôe_«me_quŸed
("", 0, 
˚
->
«me
 + 
off£t
,

203 
löe_ãrmö©‹
, 
°dout
);

204 
	`putch¨
(
löe_ãrmö©‹
);

206 
	}
}

208 
	$show_fûes
(
dú_°ru˘
 *
dú
, c⁄° *
¥efix
)

210 
i
;

213 i‡(
show_Ÿhîs
 || 
show_kûÀd
) {

214 c⁄° *
∑th
 = ".", *
ba£
 = "";

215 
ba£Àn
 = 
¥efix_Àn
;

217 i‡(
ba£Àn
)

218 
∑th
 = 
ba£
 = 
¥efix
;

219 
	`ªad_dúe˘‹y
(
dú
, 
∑th
, 
ba£
, 
ba£Àn
);

220 i‡(
show_Ÿhîs
)

221 
	`show_Ÿhî_fûes
(
dú
);

222 i‡(
show_kûÀd
)

223 
	`show_kûÀd_fûes
(
dú
);

225 i‡(
show_ˇched
 | 
show_°age
) {

226 
i
 = 0; i < 
a˘ive_ƒ
; i++) {

227 
ˇche_íåy
 *
˚
 = 
a˘ive_ˇche
[
i
];

228 i‡(
	`ex˛uded
(
dú
, 
˚
->
«me
Ë!dú->
show_ign‹ed
)

230 i‡(
show_unmîged
 && !
	`˚_°age
(
˚
))

232 
	`show_˚_íåy
(
	`˚_°age
(
˚
Ë? 
èg_unmîged
 : 
èg_ˇched
, ce);

235 i‡(
show_dñëed
 | 
show_modifõd
) {

236 
i
 = 0; i < 
a˘ive_ƒ
; i++) {

237 
ˇche_íåy
 *
˚
 = 
a˘ive_ˇche
[
i
];

238 
°©
 
°
;

239 
îr
;

240 i‡(
	`ex˛uded
(
dú
, 
˚
->
«me
Ë!dú->
show_ign‹ed
)

242 
îr
 = 
	`l°©
(
˚
->
«me
, &
°
);

243 i‡(
show_dñëed
 && 
îr
)

244 
	`show_˚_íåy
(
èg_ªmoved
, 
˚
);

245 i‡(
show_modifõd
 && 
	`˚_modifõd
(
˚
, &
°
, 0))

246 
	`show_˚_íåy
(
èg_modifõd
, 
˚
);

249 
	}
}

254 
	$¥u√_ˇche
(c⁄° *
¥efix
)

256 
pos
 = 
	`ˇche_«me_pos
(
¥efix
, 
¥efix_Àn
);

257 
fú°
, 
œ°
;

259 i‡(
pos
 < 0)

260 
pos
 = -pos-1;

261 
a˘ive_ˇche
 +
pos
;

262 
a˘ive_ƒ
 -
pos
;

263 
fú°
 = 0;

264 
œ°
 = 
a˘ive_ƒ
;

265 
œ°
 > 
fú°
) {

266 
√xt
 = (
œ°
 + 
fú°
) >> 1;

267 
ˇche_íåy
 *
˚
 = 
a˘ive_ˇche
[
√xt
];

268 i‡(!
	`°∫cmp
(
˚
->
«me
, 
¥efix
, 
¥efix_Àn
)) {

269 
fú°
 = 
√xt
+1;

272 
œ°
 = 
√xt
;

274 
a˘ive_ƒ
 = 
œ°
;

275 
	}
}

277 c⁄° *
	$vîify_∑th•ec
(c⁄° *
¥efix
)

279 c⁄° **
p
, *
n
, *
¥ev
;

280 *
ªÆ_¥efix
;

281 
max
;

283 
¥ev
 = 
NULL
;

284 
max
 = 
PATH_MAX
;

285 
p
 = 
∑th•ec
; (
n
 = *pË!
NULL
;Ö++) {

286 
i
, 
Àn
 = 0;

287 
i
 = 0; i < 
max
; i++) {

288 
c
 = 
n
[
i
];

289 i‡(
¥ev
 &&Öªv[
i
] !
c
)

291 i‡(!
c
 || c == '*' || c == '?')

293 i‡(
c
 == '/')

294 
Àn
 = 
i
+1;

296 
¥ev
 = 
n
;

297 i‡(
Àn
 < 
max
) {

298 
max
 = 
Àn
;

299 i‡(!
max
)

304 i‡(
¥efix_off£t
 > 
max
 || 
	`memcmp
(
¥ev
, 
¥efix
,Örefix_offset))

305 
	`dõ
("git-ls-files: cannot generateÑelative filenames containing '..'");

307 
ªÆ_¥efix
 = 
NULL
;

308 
¥efix_Àn
 = 
max
;

309 i‡(
max
) {

310 
ªÆ_¥efix
 = 
	`xmÆloc
(
max
 + 1);

311 
	`mem˝y
(
ªÆ_¥efix
, 
¥ev
, 
max
);

312 
ªÆ_¥efix
[
max
] = 0;

314  
ªÆ_¥efix
;

315 
	}
}

317 c⁄° 
	gls_fûes_ußge
[] =

323 
	$cmd_ls_fûes
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

325 
i
;

326 
exc_giví
 = 0, 
ªquúe_w‹k_åì
 = 0;

327 
dú_°ru˘
 
dú
;

329 
	`mem£t
(&
dú
, 0, (dir));

330 i‡(
¥efix
)

331 
¥efix_off£t
 = 
	`°æí
(
¥efix
);

332 
	`gô_c⁄fig
(
gô_deÁu…_c⁄fig
);

334 
i
 = 1; i < 
¨gc
; i++) {

335 c⁄° *
¨g
 = 
¨gv
[
i
];

337 i‡(!
	`°rcmp
(
¨g
, "--")) {

338 
i
++;

341 i‡(!
	`°rcmp
(
¨g
, "-z")) {

342 
löe_ãrmö©‹
 = 0;

345 i‡(!
	`°rcmp
(
¨g
, "-t") || !strcmp(arg, "-v")) {

346 
èg_ˇched
 = "H ";

347 
èg_unmîged
 = "M ";

348 
èg_ªmoved
 = "R ";

349 
èg_modifõd
 = "C ";

350 
èg_Ÿhî
 = "? ";

351 
èg_kûÀd
 = "K ";

352 i‡(
¨g
[1] == 'v')

353 
show_vÆid_bô
 = 1;

356 i‡(!
	`°rcmp
(
¨g
, "-c") || !strcmp(arg, "--cached")) {

357 
show_ˇched
 = 1;

360 i‡(!
	`°rcmp
(
¨g
, "-d") || !strcmp(arg, "--deleted")) {

361 
show_dñëed
 = 1;

364 i‡(!
	`°rcmp
(
¨g
, "-m") || !strcmp(arg, "--modified")) {

365 
show_modifõd
 = 1;

366 
ªquúe_w‹k_åì
 = 1;

369 i‡(!
	`°rcmp
(
¨g
, "-o") || !strcmp(arg, "--others")) {

370 
show_Ÿhîs
 = 1;

371 
ªquúe_w‹k_åì
 = 1;

374 i‡(!
	`°rcmp
(
¨g
, "-i") || !strcmp(arg, "--ignored")) {

375 
dú
.
show_ign‹ed
 = 1;

376 
ªquúe_w‹k_åì
 = 1;

379 i‡(!
	`°rcmp
(
¨g
, "-s") || !strcmp(arg, "--stage")) {

380 
show_°age
 = 1;

383 i‡(!
	`°rcmp
(
¨g
, "-k") || !strcmp(arg, "--killed")) {

384 
show_kûÀd
 = 1;

385 
ªquúe_w‹k_åì
 = 1;

388 i‡(!
	`°rcmp
(
¨g
, "--directory")) {

389 
dú
.
show_Ÿhî_dúe˘‹õs
 = 1;

392 i‡(!
	`°rcmp
(
¨g
, "--no-empty-directory")) {

393 
dú
.
hide_em±y_dúe˘‹õs
 = 1;

396 i‡(!
	`°rcmp
(
¨g
, "-u") || !strcmp(arg, "--unmerged")) {

400 
show_°age
 = 1;

401 
show_unmîged
 = 1;

404 i‡(!
	`°rcmp
(
¨g
, "-x"Ë&& 
i
+1 < 
¨gc
) {

405 
exc_giví
 = 1;

406 
	`add_ex˛ude
(
¨gv
[++
i
], "", 0, &
dú
.
ex˛ude_li°
[
EXC_CMDL
]);

409 i‡(!
	`°∫cmp
(
¨g
, "--exclude=", 10)) {

410 
exc_giví
 = 1;

411 
	`add_ex˛ude
(
¨g
+10, "", 0, &
dú
.
ex˛ude_li°
[
EXC_CMDL
]);

414 i‡(!
	`°rcmp
(
¨g
, "-X"Ë&& 
i
+1 < 
¨gc
) {

415 
exc_giví
 = 1;

416 
	`add_ex˛udes_‰om_fûe
(&
dú
, 
¨gv
[++
i
]);

419 i‡(!
	`°∫cmp
(
¨g
, "--exclude-from=", 15)) {

420 
exc_giví
 = 1;

421 
	`add_ex˛udes_‰om_fûe
(&
dú
, 
¨g
+15);

424 i‡(!
	`°∫cmp
(
¨g
, "--exclude-per-directory=", 24)) {

425 
exc_giví
 = 1;

426 
dú
.
ex˛ude_≥r_dú
 = 
¨g
 + 24;

429 i‡(!
	`°rcmp
(
¨g
, "--full-name")) {

430 
¥efix_off£t
 = 0;

433 i‡(!
	`°rcmp
(
¨g
, "--error-unmatch")) {

434 
îr‹_unm©ch
 = 1;

437 i‡(!
	`°∫cmp
(
¨g
, "--abbrev=", 9)) {

438 
abbªv
 = 
	`°πoul
(
¨g
+9, 
NULL
, 10);

439 i‡(
abbªv
 &&ábbªv < 
MINIMUM_ABBREV
)

440 
abbªv
 = 
MINIMUM_ABBREV
;

441 i‡(
abbªv
 > 40)

442 
abbªv
 = 40;

445 i‡(!
	`°rcmp
(
¨g
, "--abbrev")) {

446 
abbªv
 = 
DEFAULT_ABBREV
;

449 i‡(*
¨g
 == '-')

450 
	`ußge
(
ls_fûes_ußge
);

454 i‡(
ªquúe_w‹k_åì
 &&

455 (
	`is_b¨e_ªposô‹y
(Ë|| 
	`is_öside_gô_dú
()))

456 
	`dõ
("This operation must beÑun iná workÅree");

458 
∑th•ec
 = 
	`gë_∑th•ec
(
¥efix
, 
¨gv
 + 
i
);

461 i‡(
∑th•ec
)

462 
¥efix
 = 
	`vîify_∑th•ec
(prefix);

465 i‡(
∑th•ec
 && 
îr‹_unm©ch
) {

466 
num
;

467 
num
 = 0; 
∑th•ec
[num];Çum++)

469 
ps_m©ched
 = 
	`xˇŒoc
(1, 
num
);

472 i‡(
dú
.
show_ign‹ed
 && !
exc_giví
) {

473 
	`Ârötf
(
°dîr
, "%s: --ignoredÇeeds someÉxcludeÖattern\n",

474 
¨gv
[0]);

475 
	`exô
(1);

479 i‡(!(
show_°age
 | 
show_dñëed
 | 
show_Ÿhîs
 | 
show_unmîged
 |

480 
show_kûÀd
 | 
show_modifõd
))

481 
show_ˇched
 = 1;

483 
	`ªad_ˇche
();

484 i‡(
¥efix
)

485 
	`¥u√_ˇche
(
¥efix
);

486 
	`show_fûes
(&
dú
, 
¥efix
);

488 i‡(
ps_m©ched
) {

492 
num
, 
îr‹s
 = 0;

493 
num
 = 0; 
∑th•ec
[num];Çum++) {

494 i‡(
ps_m©ched
[
num
])

496 
	`îr‹
("pathspec '%s' didÇot matchány file(s) knownÅo git.",

497 
∑th•ec
[
num
] + 
¥efix_off£t
);

498 
îr‹s
++;

501 i‡(
îr‹s
)

502 
	`Ârötf
(
°dîr
, "Did you forgetÅo 'gitádd'?\n");

504  
îr‹s
 ? 1 : 0;

508 
	}
}

	@builtin-ls-tree.c

6 
	~"ˇche.h
"

7 
	~"blob.h
"

8 
	~"åì.h
"

9 
	~"quŸe.h
"

10 
	~"buûtö.h
"

12 
	glöe_ãrmö©i⁄
 = '\n';

13 
	#LS_RECURSIVE
 1

	)

14 
	#LS_TREE_ONLY
 2

	)

15 
	#LS_SHOW_TREES
 4

	)

16 
	#LS_NAME_ONLY
 8

	)

17 
	gabbªv
;

18 
	gls_›ti⁄s
;

19 c⁄° **
	g∑th•ec
;

20 
	gchomp_¥efix
;

21 c⁄° *
	gls_åì_¥efix
;

23 c⁄° 
	gls_åì_ußge
[] =

26 
	$show_ªcursive
(c⁄° *
ba£
, 
ba£Àn
, c⁄° *
∑th«me
)

28 c⁄° **
s
;

30 i‡(
ls_›ti⁄s
 & 
LS_RECURSIVE
)

33 
s
 = 
∑th•ec
;

34 i‡(!
s
)

38 c⁄° *
•ec
 = *
s
++;

39 
Àn
, 
•e˛í
;

41 i‡(!
•ec
)

43 i‡(
	`°∫cmp
(
ba£
, 
•ec
, 
ba£Àn
))

45 
Àn
 = 
	`°æí
(
∑th«me
);

46 
•ec
 +
ba£Àn
;

47 
•e˛í
 = 
	`°æí
(
•ec
);

48 i‡(
•e˛í
 <
Àn
)

50 i‡(
	`memcmp
(
∑th«me
, 
•ec
, 
Àn
))

54 
	}
}

56 
	$show_åì
(c⁄° *
sha1
, c⁄° *
ba£
, 
ba£Àn
,

57 c⁄° *
∑th«me
, 
mode
, 
°age
)

59 
ªtvÆ
 = 0;

60 c⁄° *
ty≥
 = 
blob_ty≥
;

62 i‡(
	`S_ISDIR
(
mode
)) {

63 i‡(
	`show_ªcursive
(
ba£
, 
ba£Àn
, 
∑th«me
)) {

64 
ªtvÆ
 = 
READ_TREE_RECURSIVE
;

65 i‡(!(
ls_›ti⁄s
 & 
LS_SHOW_TREES
))

66  
ªtvÆ
;

68 
ty≥
 = 
åì_ty≥
;

70 i‡(
ls_›ti⁄s
 & 
LS_TREE_ONLY
)

73 i‡(
chomp_¥efix
 &&

74 (
ba£Àn
 < 
chomp_¥efix
 || 
	`memcmp
(
ls_åì_¥efix
, 
ba£
, chomp_prefix)))

77 i‡(!(
ls_›ti⁄s
 & 
LS_NAME_ONLY
))

78 
	`¥ötf
("%06ÿ%†%s\t", 
mode
, 
ty≥
,

79 
abbªv
 ? 
	`föd_unique_abbªv
(
sha1
,abbrev)

80 : 
	`sha1_to_hex
(
sha1
));

81 
	`wrôe_«me_quŸed
(
ba£
 + 
chomp_¥efix
, 
ba£Àn
 - chomp_prefix,

82 
∑th«me
,

83 
löe_ãrmö©i⁄
, 
°dout
);

84 
	`putch¨
(
löe_ãrmö©i⁄
);

85  
ªtvÆ
;

86 
	}
}

88 
	$cmd_ls_åì
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

90 
sha1
[20];

91 
åì
 *tree;

93 
	`gô_c⁄fig
(
gô_deÁu…_c⁄fig
);

94 
ls_åì_¥efix
 = 
¥efix
;

95 i‡(
¥efix
 && *prefix)

96 
chomp_¥efix
 = 
	`°æí
(
¥efix
);

97 1 < 
¨gc
 && 
¨gv
[1][0] == '-') {

98 
¨gv
[1][1]) {

100 
löe_ãrmö©i⁄
 = 0;

103 
ls_›ti⁄s
 |
LS_RECURSIVE
;

106 
ls_›ti⁄s
 |
LS_TREE_ONLY
;

109 
ls_›ti⁄s
 |
LS_SHOW_TREES
;

112 i‡(!
	`°rcmp
(
¨gv
[1]+2, "name-only") ||

113 !
	`°rcmp
(
¨gv
[1]+2, "name-status")) {

114 
ls_›ti⁄s
 |
LS_NAME_ONLY
;

117 i‡(!
	`°rcmp
(
¨gv
[1]+2, "full-name")) {

118 
chomp_¥efix
 = 0;

121 i‡(!
	`°∫cmp
(
¨gv
[1]+2, "abbrev=",7)) {

122 
abbªv
 = 
	`°πoul
(
¨gv
[1]+9, 
NULL
, 10);

123 i‡(
abbªv
 &&ábbªv < 
MINIMUM_ABBREV
)

124 
abbªv
 = 
MINIMUM_ABBREV
;

125 i‡(
abbªv
 > 40)

126 
abbªv
 = 40;

129 i‡(!
	`°rcmp
(
¨gv
[1]+2, "abbrev")) {

130 
abbªv
 = 
DEFAULT_ABBREV
;

135 
	`ußge
(
ls_åì_ußge
);

137 
¨gc
--; 
¨gv
++;

140 i‡–(
LS_TREE_ONLY
|
LS_RECURSIVE
) ==

141 ((
LS_TREE_ONLY
|
LS_RECURSIVE
Ë& 
ls_›ti⁄s
))

142 
ls_›ti⁄s
 |
LS_SHOW_TREES
;

144 i‡(
¨gc
 < 2)

145 
	`ußge
(
ls_åì_ußge
);

146 i‡(
	`gë_sha1
(
¨gv
[1], 
sha1
))

147 
	`dõ
("NŸá vÆid obje˘Çamê%s", 
¨gv
[1]);

149 
∑th•ec
 = 
	`gë_∑th•ec
(
¥efix
, 
¨gv
 + 2);

150 
åì
 = 
	`∑r£_åì_ödúe˘
(
sha1
);

151 i‡(!
åì
)

152 
	`dõ
("notáÅree object");

153 
	`ªad_åì_ªcursive
(
åì
, "", 0, 0, 
∑th•ec
, 
show_åì
);

156 
	}
}

	@builtin-mailinfo.c

5 
	~"ˇche.h
"

6 
	~"buûtö.h
"

7 
	~"utf8.h
"

9 
FILE
 *
	gcmômsg
, *
	g∑tchfûe
, *
	gfö
, *
	gfout
;

11 
	gkìp_subje˘
;

12 c⁄° *
	gmëaöfo_ch¨£t
;

13 
	glöe
[1000];

14 
	gd©e
[1000];

15 
	g«me
[1000];

16 
	gemaû
[1000];

17 
	gsubje˘
[1000];

20 
	mTE_DONTCARE
, 
	mTE_QP
, 
	mTE_BASE64
,

21 } 
	gå™s„r_ícodög
;

22 
	gch¨£t
[256];

24 
	gmu…ù¨t_bound¨y
[1000];

25 
	gmu…ù¨t_bound¨y_Àn
;

26 
	g∑tch_löes
;

28 *
	$ßnôy_check
(*
«me
, *
emaû
)

30 
Àn
 = 
	`°æí
(
«me
);

31 i‡(
Àn
 < 3 ||Üen > 60)

32  
emaû
;

33 i‡(
	`°rchr
(
«me
, '@') || strchr(name, '<') || strchr(name, '>'))

34  
emaû
;

35  
«me
;

36 
	}
}

38 
	$bogus_‰om
(*
löe
)

41 *
bø
, *
kë
, *
d°
, *
˝
;

46 i‡(*
emaû
)

49 
bø
 = 
	`°rchr
(
löe
, '<');

50 i‡(!
bø
)

52 
kë
 = 
	`°rchr
(
bø
, '>');

53 i‡(!
kë
)

56 
d°
 = 
emaû
, 
˝
 = 
bø
+1; c∞< 
kë
; )

57 *
d°
++ = *
˝
++;

58 *
d°
 = 0;

59 
˝
 = 
löe
; 
	`is•a˚
(*cp); cp++)

61 
bø
--; 
	`is•a˚
(*bra); bra--)

62 *
bø
 = 0;

63 
˝
 = 
	`ßnôy_check
(˝, 
emaû
);

64 
	`°r˝y
(
«me
, 
˝
);

66 
	}
}

68 
	$h™dÀ_‰om
(*
ö_löe
)

70 
löe
[1000];

71 *
©
;

72 *
d°
;

74 
	`°r˝y
(
löe
, 
ö_löe
);

75 
©
 = 
	`°rchr
(
löe
, '@');

76 i‡(!
©
)

77  
	`bogus_‰om
(
löe
);

82 i‡(*
emaû
 && 
	`°rchr
(
©
+1, '@'))

88 
©
 > 
löe
) {

89 
c
 = 
©
[-1];

90 i‡(
	`is•a˚
(
c
))

92 i‡(
c
 == '<') {

93 
©
[-1] = ' ';

96 
©
--;

98 
d°
 = 
emaû
;

100 
c
 = *
©
;

101 i‡(!
c
 || c ='>' || 
	`is•a˚
(c)) {

102 i‡(
c
 == '>')

103 *
©
 = ' ';

106 *
©
++ = ' ';

107 *
d°
++ = 
c
;

109 *
d°
++ = 0;

116 
©
 = 
löe
 + 
	`°æí
(line);

117 
©
 > 
löe
) {

118 
c
 = *--
©
;

119 i‡(!
	`is•a˚
(
c
)) {

120 
©
[(
c
 == ')') ? 0 : 1] = 0;

125 
©
 = 
löe
;

127 
c
 = *
©
;

128 i‡(!
c
 || !
	`is•a˚
(c)) {

129 i‡(
c
 == '(')

130 
©
++;

133 
©
++;

135 
©
 = 
	`ßnôy_check
◊t, 
emaû
);

136 
	`°r˝y
(
«me
, 
©
);

138 
	}
}

140 
	$h™dÀ_d©e
(*
löe
)

142 
	`°r˝y
(
d©e
, 
löe
);

144 
	}
}

146 
	$h™dÀ_subje˘
(*
löe
)

148 
	`°r˝y
(
subje˘
, 
löe
);

150 
	}
}

158 
	$¶uΩ_©å
(c⁄° *
löe
, c⁄° *
«me
, *
©å
)

160 c⁄° *
íds
, *
≠
 = 
	`°rˇ£°r
(
löe
, 
«me
);

161 
size_t
 
sz
;

163 i‡(!
≠
) {

164 *
©å
 = 0;

167 
≠
 +
	`°æí
(
«me
);

168 i‡(*
≠
 == '"') {

169 
≠
++;

170 
íds
 = "\"";

173 
íds
 = "; \t";

174 
sz
 = 
	`°rc•n
(
≠
, 
íds
);

175 
	`mem˝y
(
©å
, 
≠
, 
sz
);

176 
©å
[
sz
] = 0;

178 
	}
}

180 
	$h™dÀ_subc⁄ã¡_ty≥
(*
löe
)

185 i‡(
	`°rˇ£°r
(
löe
, "boundary=")) {

186 
	`Ârötf
(
°dîr
, "Not handlingÇested multipart message.\n");

187 
	`exô
(1);

189 
	`¶uΩ_©å
(
löe
, "ch¨£t=", 
ch¨£t
);

190 i‡(*
ch¨£t
) {

191 
i
, 
c
;

192 
i
 = 0; (
c
 = 
ch¨£t
[i]) != 0; i++)

193 
ch¨£t
[
i
] = 
	`tﬁowî
(
c
);

196 
	}
}

198 
	$h™dÀ_c⁄ã¡_ty≥
(*
löe
)

200 *
mu…ù¨t_bound¨y
 = 0;

201 i‡(
	`¶uΩ_©å
(
löe
, "bound¨y=", 
mu…ù¨t_bound¨y
 + 2)) {

202 
	`mem˝y
(
mu…ù¨t_bound¨y
, "--", 2);

203 
mu…ù¨t_bound¨y_Àn
 = 
	`°æí
(
mu…ù¨t_bound¨y
);

205 
	`¶uΩ_©å
(
löe
, "ch¨£t=", 
ch¨£t
);

207 
	}
}

209 
	$h™dÀ_c⁄ã¡_å™s„r_ícodög
(*
löe
)

211 i‡(
	`°rˇ£°r
(
löe
, "base64"))

212 
å™s„r_ícodög
 = 
TE_BASE64
;

213 i‡(
	`°rˇ£°r
(
löe
, "quoted-printable"))

214 
å™s„r_ícodög
 = 
TE_QP
;

216 
å™s„r_ícodög
 = 
TE_DONTCARE
;

218 
	}
}

220 
	$is_mu…ù¨t_bound¨y
(c⁄° *
löe
)

222  (!
	`memcmp
(
löe
, 
mu…ù¨t_bound¨y
, 
mu…ù¨t_bound¨y_Àn
));

223 
	}
}

225 
	$ót•a˚
(*
löe
)

227 
Àn
 = 
	`°æí
(
löe
);

228 
Àn
 > 0 && 
	`is•a˚
(
löe
[len-1]))

229 
löe
[--
Àn
] = 0;

230  
Àn
;

231 
	}
}

233 
	#SEEN_FROM
 01

	)

234 
	#SEEN_DATE
 02

	)

235 
	#SEEN_SUBJECT
 04

	)

236 
	#SEEN_BOGUS_UNIX_FROM
 010

	)

237 
	#SEEN_PREFIX
 020

	)

240 
	$h™dÀ_öbody_hódî
(*
£í
, *
löe
)

242 i‡(*
£í
 & 
SEEN_PREFIX
)

244 i‡(
	`is•a˚
(*
löe
)) {

245 *
˝
;

246 
˝
 = 
löe
 + 1; *cp; cp++) {

247 i‡(!
	`is•a˚
(*
˝
))

250 i‡(!*
˝
)

253 i‡(!
	`memcmp
(">From", 
löe
, 5Ë&& 
	`is•a˚
(line[5])) {

254 i‡(!(*
£í
 & 
SEEN_BOGUS_UNIX_FROM
)) {

255 *
£í
 |
SEEN_BOGUS_UNIX_FROM
;

259 i‡(!
	`memcmp
("From:", 
löe
, 5Ë&& 
	`is•a˚
(line[5])) {

260 i‡(!(*
£í
 & 
SEEN_FROM
Ë&& 
	`h™dÀ_‰om
(
löe
+6)) {

261 *
£í
 |
SEEN_FROM
;

265 i‡(!
	`memcmp
("D©e:", 
löe
, 5Ë&& 
	`is•a˚
(line[5])) {

266 i‡(!(*
£í
 & 
SEEN_DATE
)) {

267 
	`h™dÀ_d©e
(
löe
+6);

268 *
£í
 |
SEEN_DATE
;

272 i‡(!
	`memcmp
("Subje˘:", 
löe
, 8Ë&& 
	`is•a˚
(line[8])) {

273 i‡(!(*
£í
 & 
SEEN_SUBJECT
)) {

274 
	`h™dÀ_subje˘
(
löe
+9);

275 *
£í
 |
SEEN_SUBJECT
;

279 i‡(!
	`memcmp
("[PATCH]", 
löe
, 7Ë&& 
	`is•a˚
(line[7])) {

280 i‡(!(*
£í
 & 
SEEN_SUBJECT
)) {

281 
	`h™dÀ_subje˘
(
löe
);

282 *
£í
 |
SEEN_SUBJECT
;

286 *
£í
 |
SEEN_PREFIX
;

287 
	}
}

289 *
	$˛ónup_subje˘
(*
subje˘
)

291 i‡(
kìp_subje˘
)

292  
subje˘
;

294 *
p
;

295 
Àn
, 
ªmove
;

296 *
subje˘
) {

298 i‡(!
	`memcmp
("e:", 
subje˘
+1, 2)) {

299 
subje˘
 +=3;

304 
subje˘
++;

308 
p
 = 
	`°rchr
(
subje˘
, ']');

309 i‡(!
p
) {

310 
subje˘
++;

313 
Àn
 = 
	`°æí
(
p
);

314 
ªmove
 = 
p
 - 
subje˘
;

315 i‡(
ªmove
 <
Àn
 *2) {

316 
subje˘
 = 
p
+1;

321 
	`ót•a˚
(
subje˘
);

322  
subje˘
;

324 
	}
}

326 
	$˛ónup_•a˚
(*
buf
)

328 
c
;

329 (
c
 = *
buf
) != 0) {

330 
buf
++;

331 i‡(
	`is•a˚
(
c
)) {

332 
buf
[-1] = ' ';

333 
c
 = *
buf
;

334 
	`is•a˚
(
c
)) {

335 
Àn
 = 
	`°æí
(
buf
);

336 
	`memmove
(
buf
, buf+1, 
Àn
);

337 
c
 = *
buf
;

341 
	}
}

343 
decode_hódî
(*
ô
);

344 (*
	thódî_‚_t
)(*);

345 
	shódî_def
 {

346 c⁄° *
«me
;

347 
hódî_‚_t
 
func
;

348 
«mñí
;

351 
	$check_hódî
(*
löe
, 
hódî_def
 *
hódî
)

353 
i
;

355 i‡(
hódî
[0].
«mñí
 <= 0) {

356 
i
 = 0; 
hódî
[i].
«me
; i++)

357 
hódî
[
i
].
«mñí
 = 
	`°æí
(hódî[i].
«me
);

359 
i
 = 0; 
hódî
[i].
«me
; i++) {

360 
Àn
 = 
hódî
[
i
].
«mñí
;

361 i‡(!
	`°∫ˇ£cmp
(
löe
, 
hódî
[
i
].
«me
, 
Àn
) &&

362 
löe
[
Àn
] =':' && 
	`is•a˚
(line[len + 1])) {

366 
	`decode_hódî
(
löe
 + 
Àn
 + 2);

367 
hódî
[
i
].
	`func
(
löe
 + 
Àn
 + 2);

371 
	}
}

373 
	$check_subhódî_löe
(*
löe
)

375 
hódî_def
 
hódî
[] = {

376 { "C⁄ã¡-Ty≥", 
h™dÀ_subc⁄ã¡_ty≥
 },

378 
h™dÀ_c⁄ã¡_å™s„r_ícodög
 },

379 { 
NULL
 },

381 
	`check_hódî
(
löe
, 
hódî
);

382 
	}
}

383 
	$check_hódî_löe
(*
löe
)

385 
hódî_def
 
hódî
[] = {

386 { "From", 
h™dÀ_‰om
 },

387 { "D©e", 
h™dÀ_d©e
 },

388 { "Subje˘", 
h™dÀ_subje˘
 },

389 { "C⁄ã¡-Ty≥", 
h™dÀ_c⁄ã¡_ty≥
 },

391 
h™dÀ_c⁄ã¡_å™s„r_ícodög
 },

392 { 
NULL
 },

394 
	`check_hódî
(
löe
, 
hódî
);

395 
	}
}

397 
	$is_rfc2822_hódî
(*
löe
)

407 
ch
;

408 *
˝
 = 
löe
;

409 (
ch
 = *
˝
++)) {

410 i‡(
ch
 == ':')

411  
˝
 !
löe
;

412 i‡((33 <
ch
 && ch <= 57) ||

413 (59 <
ch
 && ch <= 126))

418 
	}
}

420 
	$ªad_⁄e_hódî_löe
(*
löe
, 
sz
, 
FILE
 *
ö
)

422 
ofs
 = 0;

423 
ofs
 < 
sz
) {

424 
≥ek
, 
Àn
;

425 i‡(
	`fgës
(
löe
 + 
ofs
, 
sz
 - ofs, 
ö
Ë=
NULL
)

427 
Àn
 = 
	`ót•a˚
(
löe
 + 
ofs
);

428 i‡((
Àn
 =0Ë|| !
	`is_rfc2822_hódî
(
löe
)) {

430 
löe
[
ofs
 + 
Àn
] = '\n';

431 
löe
[
ofs
 + 
Àn
 + 1] = '\0';

434 
ofs
 +
Àn
;

436 
≥ek
 = 
	`fgëc
(
ö
); 
	`ungëc
(peek, in);

437 i‡(
≥ek
 != ' ' &&Öeek != '\t')

441 i‡(!
ofs
 && (!
	`memcmp
(
löe
, "From ", 5) || !memcmp(line, ">From ", 6)))

442 
ofs
 = 1;

443  
ofs
;

444 
	}
}

446 
	$decode_q_£gmít
(*
ö
, *
Ÿ
, *
ï
, 
rfc2047
)

448 
c
;

449 (
c
 = *
ö
++Ë!0 && (ö <
ï
)) {

450 i‡(
c
 == '=') {

451 
d
 = *
ö
++;

452 i‡(
d
 == '\n' || !d)

454 *
Ÿ
++ = ((
	`hexvÆ
(
d
Ë<< 4Ë| hexvÆ(*
ö
++));

457 i‡(
rfc2047
 && 
c
 == '_')

458 
c
 = 0x20;

459 *
Ÿ
++ = 
c
;

461 *
Ÿ
 = 0;

463 
	}
}

465 
	$decode_b_£gmít
(*
ö
, *
Ÿ
, *
ï
)

468 
c
, 
pos
 = 0, 
acc
 = 0;

470 (
c
 = *
ö
++Ë!0 && (ö <
ï
)) {

471 i‡(
c
 == '+')

472 
c
 = 62;

473 i‡(
c
 == '/')

474 
c
 = 63;

475 i‡('A' <
c
 && c <= 'Z')

476 
c
 -= 'A';

477 i‡('a' <
c
 && c <= 'z')

478 
c
 -= 'a' - 26;

479 i‡('0' <
c
 && c <= '9')

480 
c
 -= '0' - 52;

481 i‡(
c
 == '=') {

486 
c
 = 0;

490 
pos
++) {

492 
acc
 = (
c
 << 2);

495 *
Ÿ
++ = (
acc
 | (
c
 >> 4));

496 
acc
 = (
c
 & 15) << 4;

499 *
Ÿ
++ = (
acc
 | (
c
 >> 2));

500 
acc
 = (
c
 & 3) << 6;

503 *
Ÿ
++ = (
acc
 | 
c
);

504 
acc
 = 
pos
 = 0;

508 *
Ÿ
 = 0;

510 
	}
}

512 
	$c⁄vît_to_utf8
(*
löe
, *
ch¨£t
)

514 
œtö_⁄e
[] = "latin1";

515 *
öput_ch¨£t
 = *
ch¨£t
 ? ch¨£à: 
œtö_⁄e
;

516 *
out
 = 
	`ªícode_°rög
(
löe
, 
mëaöfo_ch¨£t
, 
öput_ch¨£t
);

518 i‡(!
out
)

519 
	`dõ
("cannot convert from %sÅo %s\n",

520 
öput_ch¨£t
, 
mëaöfo_ch¨£t
);

521 
	`°r˝y
(
löe
, 
out
);

522 
	`‰ì
(
out
);

523 
	}
}

525 
	$decode_hódî_bq
(*
ô
)

527 *
ö
, *
out
, *
ï
, *
˝
, *
•
;

528 
outbuf
[1000];

529 
rfc2047
 = 0;

531 
ö
 = 
ô
;

532 
out
 = 
outbuf
;

533 (
ï
 = 
	`°r°r
(
ö
, "=?")Ë!
NULL
) {

534 
sz
, 
ícodög
;

535 
ch¨£t_q
[256], 
põ˚buf
[256];

536 
rfc2047
 = 1;

538 i‡(
ö
 !
ï
) {

539 
sz
 = 
ï
 - 
ö
;

540 
	`mem˝y
(
out
, 
ö
, 
sz
);

541 
out
 +
sz
;

542 
ö
 +
sz
;

548 
ï
 += 2;

549 
˝
 = 
	`°rchr
(
ï
, '?');

550 i‡(!
˝
)

551  
rfc2047
;

552 
•
 = 
ï
; s∞< 
˝
; sp++)

553 
ch¨£t_q
[
•
 - 
ï
] = 
	`tﬁowî
(*sp);

554 
ch¨£t_q
[
˝
 - 
ï
] = 0;

555 
ícodög
 = 
˝
[1];

556 i‡(!
ícodög
 || 
˝
[2] != '?')

557  
rfc2047
;

558 
ï
 = 
	`°r°r
(
˝
 + 3, "?=");

559 i‡(!
ï
)

560  
rfc2047
;

561 
	`tﬁowî
(
ícodög
)) {

563  
rfc2047
;

565 
sz
 = 
	`decode_b_£gmít
(
˝
 + 3, 
põ˚buf
, 
ï
);

568 
sz
 = 
	`decode_q_£gmít
(
˝
 + 3, 
põ˚buf
, 
ï
, 1);

571 i‡(
sz
 < 0)

572  
rfc2047
;

573 i‡(
mëaöfo_ch¨£t
)

574 
	`c⁄vît_to_utf8
(
põ˚buf
, 
ch¨£t_q
);

575 
	`°r˝y
(
out
, 
põ˚buf
);

576 
out
 +
	`°æí
(out);

577 
ö
 = 
ï
 + 2;

579 
	`°r˝y
(
out
, 
ö
);

580 
	`°r˝y
(
ô
, 
outbuf
);

581  
rfc2047
;

582 
	}
}

584 
	$decode_hódî
(*
ô
)

587 i‡(
	`decode_hódî_bq
(
ô
))

592 i‡(
mëaöfo_ch¨£t
)

593 
	`c⁄vît_to_utf8
(
ô
, "");

594 
	}
}

596 
	$decode_å™s„r_ícodög
(*
löe
)

598 *
ï
;

600 
å™s„r_ícodög
) {

601 
TE_QP
:

602 
ï
 = 
löe
 + 
	`°æí
(line);

603 
	`decode_q_£gmít
(
löe
,Üöe, 
ï
, 0);

605 
TE_BASE64
:

606 
ï
 = 
löe
 + 
	`°æí
(line);

607 
	`decode_b_£gmít
(
löe
,Üöe, 
ï
);

609 
TE_DONTCARE
:

612 
	}
}

614 
	$h™dÀ_öfo
()

616 *
sub
;

618 
sub
 = 
	`˛ónup_subje˘
(
subje˘
);

619 
	`˛ónup_•a˚
(
«me
);

620 
	`˛ónup_•a˚
(
d©e
);

621 
	`˛ónup_•a˚
(
emaû
);

622 
	`˛ónup_•a˚
(
sub
);

624 
	`Ârötf
(
fout
, "Author: %s\nEmail: %s\nSubject: %s\nDate: %s\n\n",

625 
«me
, 
emaû
, 
sub
, 
d©e
);

626 
	}
}

631 
	$h™dÀ_commô_msg
(*
£í
)

633 i‡(!
cmômsg
)

636 i‡(!
	`memcmp
("dif‡-", 
löe
, 6) ||

637 !
	`memcmp
("---", 
löe
, 3) ||

638 !
	`memcmp
("Index: ", 
löe
, 7))

640 i‡((
mu…ù¨t_bound¨y
[0] && 
	`is_mu…ù¨t_bound¨y
(
löe
))) {

652 
	`decode_å™s„r_ícodög
(
löe
);

653 i‡(
mëaöfo_ch¨£t
)

654 
	`c⁄vît_to_utf8
(
löe
, 
ch¨£t
);

656 
	`h™dÀ_öbody_hódî
(
£í
, 
löe
);

657 i‡(!(*
£í
 & 
SEEN_PREFIX
))

660 
	`Âuts
(
löe
, 
cmômsg
);

661 } 
	`fgës
(
löe
, ÷öe), 
fö
Ë!
NULL
);

662 
	`f˛o£
(
cmômsg
);

663 
cmômsg
 = 
NULL
;

665 
	}
}

670 
	$h™dÀ_∑tch
()

673 i‡(
mu…ù¨t_bound¨y
[0] && 
	`is_mu…ù¨t_bound¨y
(
löe
))

679 
	`decode_å™s„r_ícodög
(
löe
);

680 
	`Âuts
(
löe
, 
∑tchfûe
);

681 
∑tch_löes
++;

682 } 
	`fgës
(
löe
, ÷öe), 
fö
Ë!
NULL
);

683 
	}
}

691 
	$h™dÀ_mu…ù¨t_⁄e_∑π
(*
£í
)

693 
n
 = 0;

695 
	`fgës
(
löe
, ÷öe), 
fö
Ë!
NULL
) {

696 
agaö
:

697 
n
++;

698 i‡(
	`is_mu…ù¨t_bound¨y
(
löe
))

700 i‡(
	`h™dÀ_commô_msg
(
£í
))

701 
agaö
;

702 
	`h™dÀ_∑tch
();

705 i‡(
n
 == 0)

708 
	}
}

710 
	$h™dÀ_mu…ù¨t_body
()

712 
£í
 = 0;

713 
∑π_num
 = 0;

716 
	`fgës
(
löe
, ÷öe), 
fö
Ë!
NULL
)

717 i‡(
	`is_mu…ù¨t_bound¨y
(
löe
)) {

718 
∑π_num
 = 1;

721 i‡(!
∑π_num
)

725 
hdr
 = 
	`ªad_⁄e_hódî_löe
(
löe
, ÷öe), 
fö
);

726 i‡(!
hdr
) {

727 i‡(
	`h™dÀ_mu…ù¨t_⁄e_∑π
(&
£í
) < 0)

730 
å™s„r_ícodög
 = 
TE_DONTCARE
;

731 
ch¨£t
[0] = 0;

734 
	`check_subhódî_löe
(
löe
);

736 
	`f˛o£
(
∑tchfûe
);

737 i‡(!
∑tch_löes
) {

738 
	`Ârötf
(
°dîr
, "NoÖatch found\n");

739 
	`exô
(1);

741 
	}
}

744 
	$h™dÀ_body
()

746 
£í
 = 0;

748 
	`h™dÀ_commô_msg
(&
£í
);

749 
	`h™dÀ_∑tch
();

750 
	`f˛o£
(
∑tchfûe
);

751 i‡(!
∑tch_löes
) {

752 
	`Ârötf
(
°dîr
, "NoÖatch found\n");

753 
	`exô
(1);

755 
	}
}

757 
	$maûöfo
(
FILE
 *
ö
, FILE *
out
, 
ks
, c⁄° *
ícodög
,

758 c⁄° *
msg
, c⁄° *
∑tch
)

760 
kìp_subje˘
 = 
ks
;

761 
mëaöfo_ch¨£t
 = 
ícodög
;

762 
fö
 = 
ö
;

763 
fout
 = 
out
;

765 
cmômsg
 = 
	`f›í
(
msg
, "w");

766 i‡(!
cmômsg
) {

767 
	`≥º‹
(
msg
);

770 
∑tchfûe
 = 
	`f›í
(
∑tch
, "w");

771 i‡(!
∑tchfûe
) {

772 
	`≥º‹
(
∑tch
);

773 
	`f˛o£
(
cmômsg
);

777 
hdr
 = 
	`ªad_⁄e_hódî_löe
(
löe
, ÷öe), 
fö
);

778 i‡(!
hdr
) {

779 i‡(
mu…ù¨t_bound¨y
[0])

780 
	`h™dÀ_mu…ù¨t_body
();

782 
	`h™dÀ_body
();

783 
	`h™dÀ_öfo
();

786 
	`check_hódî_löe
(
löe
);

790 
	}
}

792 c⁄° 
	gmaûöfo_ußge
[] =

795 
	$cmd_maûöfo
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

797 c⁄° *
def_ch¨£t
;

802 
	`gô_c⁄fig
(
gô_deÁu…_c⁄fig
);

804 
def_ch¨£t
 = (
gô_commô_ícodög
 ? git_commit_encoding : "utf-8");

805 
mëaöfo_ch¨£t
 = 
def_ch¨£t
;

807 1 < 
¨gc
 && 
¨gv
[1][0] == '-') {

808 i‡(!
	`°rcmp
(
¨gv
[1], "-k"))

809 
kìp_subje˘
 = 1;

810 i‡(!
	`°rcmp
(
¨gv
[1], "-u"))

811 
mëaöfo_ch¨£t
 = 
def_ch¨£t
;

812 i‡(!
	`°rcmp
(
¨gv
[1], "-n"))

813 
mëaöfo_ch¨£t
 = 
NULL
;

814 i‡(!
	`°∫cmp
(
¨gv
[1], "--encoding=", 11))

815 
mëaöfo_ch¨£t
 = 
¨gv
[1] + 11;

817 
	`ußge
(
maûöfo_ußge
);

818 
¨gc
--; 
¨gv
++;

821 i‡(
¨gc
 != 3)

822 
	`ußge
(
maûöfo_ußge
);

824  !!
	`maûöfo
(
°dö
, 
°dout
, 
kìp_subje˘
, 
mëaöfo_ch¨£t
, 
¨gv
[1],árgv[2]);

825 
	}
}

	@builtin-mailsplit.c

7 
	~"ˇche.h
"

8 
	~"buûtö.h
"

10 c⁄° 
	ggô_maû•lô_ußge
[] =

13 
	$is_‰om_löe
(c⁄° *
löe
, 
Àn
)

15 c⁄° *
cﬁ⁄
;

17 i‡(
Àn
 < 20 || 
	`memcmp
("From ", 
löe
, 5))

20 
cﬁ⁄
 = 
löe
 + 
Àn
 - 2;

21 
löe
 += 5;

23 i‡(
cﬁ⁄
 < 
löe
)

25 i‡(*--
cﬁ⁄
 == ':')

29 i‡(!
	`isdigô
(
cﬁ⁄
[-4]) ||

30 !
	`isdigô
(
cﬁ⁄
[-2]) ||

31 !
	`isdigô
(
cﬁ⁄
[-1]) ||

32 !
	`isdigô
(
cﬁ⁄
[ 1]) ||

33 !
	`isdigô
(
cﬁ⁄
[ 2]))

37 i‡(
	`°πﬁ
(
cﬁ⁄
+3, 
NULL
, 10) <= 90)

42 
	}
}

45 
	gbuf
[4096];

52 
	$•lô_⁄e
(
FILE
 *
mbox
, c⁄° *
«me
, 
Ælow_b¨e
)

54 
FILE
 *
ouçut
 = 
NULL
;

55 
Àn
 = 
	`°æí
(
buf
);

56 
fd
;

57 
°©us
 = 0;

58 
is_b¨e
 = !
	`is_‰om_löe
(
buf
, 
Àn
);

60 i‡(
is_b¨e
 && !
Ælow_b¨e
)

61 
c‹ru±
;

63 
fd
 = 
	`›í
(
«me
, 
O_WRONLY
 | 
O_CREAT
 | 
O_EXCL
, 0666);

64 i‡(
fd
 < 0)

65 
	`dõ
("ˇ¬Ÿ o≥¿ouçuàfûê%s", 
«me
);

66 
ouçut
 = 
	`fd›í
(
fd
, "w");

72 
is_∑πül
 = (
buf
[
Àn
-1] != '\n');

74 i‡(
	`Âuts
(
buf
, 
ouçut
Ë=
EOF
)

75 
	`dõ
("cannot write output");

77 i‡(
	`fgës
(
buf
, (buf), 
mbox
Ë=
NULL
) {

78 i‡(
	`„of
(
mbox
)) {

79 
°©us
 = 1;

82 
	`dõ
("cannotÑead mbox");

84 
Àn
 = 
	`°æí
(
buf
);

85 i‡(!
is_∑πül
 && !
is_b¨e
 && 
	`is_‰om_löe
(
buf
, 
Àn
))

88 
	`f˛o£
(
ouçut
);

89  
°©us
;

91 
c‹ru±
:

92 i‡(
ouçut
)

93 
	`f˛o£
(
ouçut
);

94 
	`u∆ök
(
«me
);

95 
	`Ârötf
(
°dîr
, "corrupt mailbox\n");

96 
	`exô
(1);

97 
	}
}

99 
	$•lô_mbox
(c⁄° **
mbox
, c⁄° *
dú
, 
Ælow_b¨e
, 
ƒ_¥ec
, 
skù
)

101 *
«me
 = 
	`xmÆloc
(
	`°æí
(
dú
Ë+ 2 + 3 * (
skù
));

102 
ªt
 = -1;

104 *
mbox
) {

105 c⁄° *
fûe
 = *
mbox
++;

106 
FILE
 *
f
 = !
	`°rcmp
(
fûe
, "-"Ë? 
°dö
 : 
	`f›í
(file, "r");

107 
fûe_d⁄e
 = 0;

109 i‡–!
f
 ) {

110 
	`îr‹
("ˇ¬Ÿ o≥¿mbox %s", 
fûe
);

111 
out
;

114 i‡(
	`fgës
(
buf
, (buf), 
f
Ë=
NULL
) {

115 i‡(
f
 =
°dö
)

117 
	`îr‹
("ˇ¬ŸÑód mbox %s", 
fûe
);

118 
out
;

121 !
fûe_d⁄e
) {

122 
	`•rötf
(
«me
, "%s/%0*d", 
dú
, 
ƒ_¥ec
, ++
skù
);

123 
fûe_d⁄e
 = 
	`•lô_⁄e
(
f
, 
«me
, 
Ælow_b¨e
);

126 i‡(
f
 !
°dö
)

127 
	`f˛o£
(
f
);

129 
ªt
 = 
skù
;

130 
out
:

131 
	`‰ì
(
«me
);

132  
ªt
;

133 
	}
}

134 
	$cmd_maû•lô
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

136 
ƒ
 = 0, 
ƒ_¥ec
 = 4, 
ªt
;

137 
Ælow_b¨e
 = 0;

138 c⁄° *
dú
 = 
NULL
;

139 c⁄° **
¨gp
;

140 c⁄° *
°dö_⁄ly
[] = { "-", 
NULL
 };

142 
¨gp
 = 
¨gv
+1; *argp;árgp++) {

143 c⁄° *
¨g
 = *
¨gp
;

145 i‡(
¨g
[0] != '-')

148 i‡–
¨g
[1] == 'd' ) {

149 
ƒ_¥ec
 = 
	`°πﬁ
(
¨g
+2, 
NULL
, 10);

150 i‡(
ƒ_¥ec
 < 3 || 10 <=Çr_prec)

151 
	`ußge
(
gô_maû•lô_ußge
);

153 } i‡–
¨g
[1] == 'f' ) {

154 
ƒ
 = 
	`°πﬁ
(
¨g
+2, 
NULL
, 10);

155 } i‡–
¨g
[1] == 'b' && !arg[2] ) {

156 
Ælow_b¨e
 = 1;

157 } i‡–
¨g
[1] == 'o' &&árg[2] ) {

158 
dú
 = 
¨g
+2;

159 } i‡–
¨g
[1] == '-' && !arg[2] ) {

160 
¨gp
++;

163 
	`dõ
("unknow¿›ti⁄: %s", 
¨g
);

167 i‡–!
dú
 ) {

170 
¨gc
 - (
¨gp
-
¨gv
)) {

172 
dú
 = 
¨gp
[0];

173 
¨gp
 = 
°dö_⁄ly
;

176 
°dö_⁄ly
[0] = 
¨gp
[0];

177 
dú
 = 
¨gp
[1];

178 
¨gp
 = 
°dö_⁄ly
;

181 
	`ußge
(
gô_maû•lô_ußge
);

185 i‡–!*
¨gp
 )

186 
¨gp
 = 
°dö_⁄ly
;

189 
ªt
 = 
	`•lô_mbox
(
¨gp
, 
dú
, 
Ælow_b¨e
, 
ƒ_¥ec
, 
ƒ
);

190 i‡(
ªt
 != -1)

191 
	`¥ötf
("%d\n", 
ªt
);

193  
ªt
 == -1;

194 
	}
}

	@builtin-merge-file.c

1 
	~"ˇche.h
"

2 
	~"xdiff/xdiff.h
"

3 
	~"xdiff-öãrÁ˚.h
"

5 c⁄° 
	gmîge_fûe_ußge
[] =

8 
	$cmd_mîge_fûe
(
¨gc
, **
¨gv
, **
ívp
)

10 *
«mes
[3];

11 
mmfûe_t
 
mmfs
[3];

12 
mmbuf„r_t
 
ªsu…
 = {
NULL
, 0};

13 
xµ¨am_t
 
xµ
 = {
XDF_NEED_MINIMAL
};

14 
ªt
 = 0, 
i
 = 0, 
to_°dout
 = 0;

16 
¨gc
 > 4) {

17 i‡(!
	`°rcmp
(
¨gv
[1], "-L"Ë&& 
i
 < 3) {

18 
«mes
[
i
++] = 
¨gv
[2];

19 
¨gc
--;

20 
¨gv
++;

21 } i‡(!
	`°rcmp
(
¨gv
[1], "-p") ||

22 !
	`°rcmp
(
¨gv
[1], "--stdout"))

23 
to_°dout
 = 1;

24 i‡(!
	`°rcmp
(
¨gv
[1], "-q") ||

25 !
	`°rcmp
(
¨gv
[1], "--quiet"))

26 
	`‰e›í
("/dev/nuŒ", "w", 
°dîr
);

28 
	`ußge
(
mîge_fûe_ußge
);

29 
¨gc
--;

30 
¨gv
++;

33 i‡(
¨gc
 != 4)

34 
	`ußge
(
mîge_fûe_ußge
);

36 ; 
i
 < 3; i++)

37 
«mes
[
i
] = 
¨gv
[i + 1];

39 
i
 = 0; i < 3; i++)

40 i‡(
	`ªad_mmfûe
(
mmfs
 + 
i
, 
¨gv
[i + 1]))

43 
ªt
 = 
	`xdl_mîge
(
mmfs
 + 1, mmf†+ 0, 
«mes
[0], mmfs + 2,Çames[2],

44 &
xµ
, 
XDL_MERGE_ZEALOUS
, &
ªsu…
);

46 
i
 = 0; i < 3; i++)

47 
	`‰ì
(
mmfs
[
i
].
±r
);

49 i‡(
ªt
 >= 0) {

50 *
fûíame
 = 
¨gv
[1];

51 
FILE
 *
f
 = 
to_°dout
 ? 
°dout
 : 
	`f›í
(
fûíame
, "wb");

53 i‡(!
f
)

54 
ªt
 = 
	`îr‹
("CouldÇŸ o≥¿%†f‹ wrôög", 
fûíame
);

55 i‡(
	`fwrôe
(
ªsu…
.
±r
,Ñesu….
size
, 1, 
f
) != 1)

56 
ªt
 = 
	`îr‹
("CouldÇŸ wrôêtÿ%s", 
fûíame
);

57 i‡(
	`f˛o£
(
f
))

58 
ªt
 = 
	`îr‹
("CouldÇŸ clo£ %s", 
fûíame
);

59 
	`‰ì
(
ªsu…
.
±r
);

62  
ªt
;

63 
	}
}

	@builtin-mv.c

6 
	~"ˇche.h
"

7 
	~"buûtö.h
"

8 
	~"dú.h
"

9 
	~"ˇche-åì.h
"

10 
	~"∑th-li°.h
"

12 c⁄° 
	gbuûtö_mv_ußge
[] =

15 c⁄° **
	$c›y_∑th•ec
(c⁄° *
¥efix
, c⁄° **
∑th•ec
,

16 
cou¡
, 
ba£_«me
)

18 
i
;

19 c⁄° **
ªsu…
 = 
	`xmÆloc
((
cou¡
 + 1) * (const *));

20 
	`mem˝y
(
ªsu…
, 
∑th•ec
, 
cou¡
 * (const *));

21 
ªsu…
[
cou¡
] = 
NULL
;

22 
i
 = 0; i < 
cou¡
; i++) {

23 
Àngth
 = 
	`°æí
(
ªsu…
[
i
]);

24 i‡(
Àngth
 > 0 && 
ªsu…
[
i
][length - 1] == '/') {

25 *
wôhout_¶ash
 = 
	`xmÆloc
(
Àngth
);

26 
	`mem˝y
(
wôhout_¶ash
, 
ªsu…
[
i
], 
Àngth
 - 1);

27 
wôhout_¶ash
[
Àngth
 - 1] = '\0';

28 
ªsu…
[
i
] = 
wôhout_¶ash
;

30 i‡(
ba£_«me
) {

31 c⁄° *
œ°_¶ash
 = 
	`°ºchr
(
ªsu…
[
i
], '/');

32 i‡(
œ°_¶ash
)

33 
ªsu…
[
i
] = 
œ°_¶ash
 + 1;

36  
	`gë_∑th•ec
(
¥efix
, 
ªsu…
);

37 
	}
}

39 
	$show_li°
(c⁄° *
œbñ
, 
∑th_li°
 *
li°
)

41 i‡(
li°
->
ƒ
 > 0) {

42 
i
;

43 
	`¥ötf
("%s", 
œbñ
);

44 
i
 = 0; i < 
li°
->
ƒ
; i++)

45 
	`¥ötf
("%s%s", 
i
 > 0 ? ", " : "", 
li°
->
ôems
[i].
∑th
);

46 
	`putch¨
('\n');

48 
	}
}

50 c⁄° *
	$add_¶ash
(c⁄° *
∑th
)

52 
Àn
 = 
	`°æí
(
∑th
);

53 i‡(
∑th
[
Àn
 - 1] != '/') {

54 *
wôh_¶ash
 = 
	`xmÆloc
(
Àn
 + 2);

55 
	`mem˝y
(
wôh_¶ash
, 
∑th
, 
Àn
);

56 
wôh_¶ash
[
Àn
++] = '/';

57 
wôh_¶ash
[
Àn
] = 0;

58  
wôh_¶ash
;

60  
∑th
;

61 
	}
}

63 
lock_fûe
 
	glock_fûe
;

65 
	$cmd_mv
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

67 
i
, 
√wfd
, 
cou¡
;

68 
vîbo£
 = 0, 
show_⁄ly
 = 0, 
f‹˚
 = 0, 
ign‹e_îr‹s
 = 0;

69 c⁄° **
sour˚
, **
de°ö©i⁄
, **
de°_∑th
;

70 
	eupd©e_mode
 { 
BOTH
 = 0, 
WORKING_DIRECTORY
, 
INDEX
 } *
modes
;

71 
°©
 
°
;

72 
∑th_li°
 
ovîwrôãn
 = {
NULL
, 0, 0, 0};

73 
∑th_li°
 
§c_f‹_d°
 = {
NULL
, 0, 0, 0};

74 
∑th_li°
 
added
 = {
NULL
, 0, 0, 0};

75 
∑th_li°
 
dñëed
 = {
NULL
, 0, 0, 0};

76 
∑th_li°
 
ch™ged
 = {
NULL
, 0, 0, 0};

78 
	`gô_c⁄fig
(
gô_deÁu…_c⁄fig
);

80 
√wfd
 = 
	`hﬁd_lock_fûe_f‹_upd©e
(&
lock_fûe
, 
	`gë_ödex_fûe
(), 1);

81 i‡(
	`ªad_ˇche
() < 0)

82 
	`dõ
("index file corrupt");

84 
i
 = 1; i < 
¨gc
; i++) {

85 c⁄° *
¨g
 = 
¨gv
[
i
];

87 i‡(
¨g
[0] != '-')

89 i‡(!
	`°rcmp
(
¨g
, "--")) {

90 
i
++;

93 i‡(!
	`°rcmp
(
¨g
, "-n")) {

94 
show_⁄ly
 = 1;

97 i‡(!
	`°rcmp
(
¨g
, "-f")) {

98 
f‹˚
 = 1;

101 i‡(!
	`°rcmp
(
¨g
, "-k")) {

102 
ign‹e_îr‹s
 = 1;

105 
	`ußge
(
buûtö_mv_ußge
);

107 
cou¡
 = 
¨gc
 - 
i
 - 1;

108 i‡(
cou¡
 < 1)

109 
	`ußge
(
buûtö_mv_ußge
);

111 
sour˚
 = 
	`c›y_∑th•ec
(
¥efix
, 
¨gv
 + 
i
, 
cou¡
, 0);

112 
modes
 = 
	`xˇŒoc
(
cou¡
, (
upd©e_mode
));

113 
de°_∑th
 = 
	`c›y_∑th•ec
(
¥efix
, 
¨gv
 + 
¨gc
 - 1, 1, 0);

115 i‡(
de°_∑th
[0][0] == '\0')

117 
de°ö©i⁄
 = 
	`c›y_∑th•ec
(
de°_∑th
[0], 
¨gv
 + 
i
, 
cou¡
, 1);

118 i‡(!
	`l°©
(
de°_∑th
[0], &
°
) &&

119 
	`S_ISDIR
(
°
.
°_mode
)) {

120 
de°_∑th
[0] = 
	`add_¶ash
(dest_path[0]);

121 
de°ö©i⁄
 = 
	`c›y_∑th•ec
(
de°_∑th
[0], 
¨gv
 + 
i
, 
cou¡
, 1);

123 i‡(
cou¡
 != 1)

124 
	`ußge
(
buûtö_mv_ußge
);

125 
de°ö©i⁄
 = 
de°_∑th
;

129 
i
 = 0; i < 
cou¡
; i++) {

130 c⁄° *
§c
 = 
sour˚
[
i
], *
d°
 = 
de°ö©i⁄
[i];

131 
Àngth
, 
§c_is_dú
;

132 c⁄° *
bad
 = 
NULL
;

134 i‡(
show_⁄ly
)

135 
	`¥ötf
("CheckögÑíamêo‡'%s'Åÿ'%s'\n", 
§c
, 
d°
);

137 
Àngth
 = 
	`°æí
(
§c
);

138 i‡(
	`l°©
(
§c
, &
°
) < 0)

139 
bad
 = "bad source";

140 i‡(!
	`°∫cmp
(
§c
, 
d°
, 
Àngth
) &&

141 (
d°
[
Àngth
] == 0 || dst[length] == '/')) {

142 
bad
 = "canÇot move directory into itself";

143 } i‡((
§c_is_dú
 = 
	`S_ISDIR
(
°
.
°_mode
))

144 && 
	`l°©
(
d°
, &
°
) == 0)

145 
bad
 = "cannot move directory over file";

146 i‡(
§c_is_dú
) {

147 c⁄° *
§c_w_¶ash
 = 
	`add_¶ash
(
§c
);

148 
Àn_w_¶ash
 = 
Àngth
 + 1;

149 
fú°
, 
œ°
;

151 
modes
[
i
] = 
WORKING_DIRECTORY
;

153 
fú°
 = 
	`ˇche_«me_pos
(
§c_w_¶ash
, 
Àn_w_¶ash
);

154 i‡(
fú°
 >= 0)

155 
	`dõ
 ("Huh? %.*s is in index?",

156 
Àn_w_¶ash
, 
§c_w_¶ash
);

158 
fú°
 = -1 - first;

159 
œ°
 = 
fú°
;Üa° < 
a˘ive_ƒ
;Üast++) {

160 c⁄° *
∑th
 = 
a˘ive_ˇche
[
œ°
]->
«me
;

161 i‡(
	`°∫cmp
(
∑th
, 
§c_w_¶ash
, 
Àn_w_¶ash
))

164 
	`‰ì
((*)
§c_w_¶ash
);

166 i‡(
œ°
 - 
fú°
 < 1)

167 
bad
 = "source directory isÉmpty";

169 
j
, 
d°_Àn
;

171 i‡(
œ°
 - 
fú°
 > 0) {

172 
sour˚
 = 
	`xªÆloc
(source,

173 (
cou¡
 + 
œ°
 - 
fú°
)

175 
de°ö©i⁄
 = 
	`xªÆloc
(destination,

176 (
cou¡
 + 
œ°
 - 
fú°
)

178 
modes
 = 
	`xªÆloc
(modes,

179 (
cou¡
 + 
œ°
 - 
fú°
)

180 * (
upd©e_mode
));

183 
d°
 = 
	`add_¶ash
(dst);

184 
d°_Àn
 = 
	`°æí
(
d°
) - 1;

186 
j
 = 0; j < 
œ°
 - 
fú°
; j++) {

187 c⁄° *
∑th
 =

188 
a˘ive_ˇche
[
fú°
 + 
j
]->
«me
;

189 
sour˚
[
cou¡
 + 
j
] = 
∑th
;

190 
de°ö©i⁄
[
cou¡
 + 
j
] =

191 
	`¥efix_∑th
(
d°
, 
d°_Àn
,

192 
∑th
 + 
Àngth
);

193 
modes
[
cou¡
 + 
j
] = 
INDEX
;

195 
cou¡
 +
œ°
 - 
fú°
;

197 } i‡(
	`l°©
(
d°
, &
°
) == 0) {

198 
bad
 = "destinationÉxists";

199 i‡(
f‹˚
) {

204 i‡(
	`S_ISREG
(
°
.
°_mode
)) {

205 
	`Ârötf
(
°dîr
, "Warning: %s;"

207 
bad
);

208 
bad
 = 
NULL
;

209 
	`∑th_li°_ö£π
(
d°
, &
ovîwrôãn
);

211 
bad
 = "Cannot overwrite";

213 } i‡(
	`ˇche_«me_pos
(
§c
, 
Àngth
) < 0)

214 
bad
 = "not under version control";

215 i‡(
	`∑th_li°_has_∑th
(&
§c_f‹_d°
, 
d°
))

216 
bad
 = "multiple sources forÅhe sameÅarget";

218 
	`∑th_li°_ö£π
(
d°
, &
§c_f‹_d°
);

220 i‡(
bad
) {

221 i‡(
ign‹e_îr‹s
) {

222 i‡(--
cou¡
 > 0) {

223 
	`memmove
(
sour˚
 + 
i
, source + i + 1,

224 (
cou¡
 - 
i
) * (*));

225 
	`memmove
(
de°ö©i⁄
 + 
i
,

226 
de°ö©i⁄
 + 
i
 + 1,

227 (
cou¡
 - 
i
) * (*));

230 
	`dõ
 ("%s, source=%s, destination=%s",

231 
bad
, 
§c
, 
d°
);

235 
i
 = 0; i < 
cou¡
; i++) {

236 c⁄° *
§c
 = 
sour˚
[
i
], *
d°
 = 
de°ö©i⁄
[i];

237 
upd©e_mode
 
mode
 = 
modes
[
i
];

238 i‡(
show_⁄ly
 || 
vîbo£
)

239 
	`¥ötf
("Ríamög %†tÿ%s\n", 
§c
, 
d°
);

240 i‡(!
show_⁄ly
 && 
mode
 !
INDEX
 &&

241 
	`ª«me
(
§c
, 
d°
Ë< 0 && !
ign‹e_îr‹s
)

242 
	`dõ
 ("ª«mög %†Áûed: %s", 
§c
, 
	`°ªº‹
(
î∫o
));

244 i‡(
mode
 =
WORKING_DIRECTORY
)

247 i‡(
	`ˇche_«me_pos
(
§c
, 
	`°æí
(src)) >= 0) {

248 
	`∑th_li°_ö£π
(
§c
, &
dñëed
);

251 i‡(
	`∑th_li°_has_∑th
(&
ovîwrôãn
, 
d°
))

252 
	`∑th_li°_ö£π
(
d°
, &
ch™ged
);

254 
	`∑th_li°_ö£π
(
d°
, &
added
);

256 
	`∑th_li°_ö£π
(
d°
, &
added
);

259 i‡(
show_⁄ly
) {

260 
	`show_li°
("Ch™ged : ", &
ch™ged
);

261 
	`show_li°
("Addög : ", &
added
);

262 
	`show_li°
("Dñëög : ", &
dñëed
);

264 
i
 = 0; i < 
ch™ged
.
ƒ
; i++) {

265 c⁄° *
∑th
 = 
ch™ged
.
ôems
[
i
].path;

266 
j
 = 
	`ˇche_«me_pos
(
∑th
, 
	`°æí
(path));

267 
ˇche_íåy
 *
˚
 = 
a˘ive_ˇche
[
j
];

269 i‡(
j
 < 0)

270 
	`dõ
 ("Huh? Cachêíåy f‹ %†unknown?", 
∑th
);

271 
	`ª‰esh_ˇche_íåy
(
˚
, 0);

274 
i
 = 0; i < 
added
.
ƒ
; i++) {

275 c⁄° *
∑th
 = 
added
.
ôems
[
i
].path;

276 
	`add_fûe_to_ödex
(
∑th
, 
vîbo£
);

279 
i
 = 0; i < 
dñëed
.
ƒ
; i++) {

280 c⁄° *
∑th
 = 
dñëed
.
ôems
[
i
].path;

281 
	`ªmove_fûe_‰om_ˇche
(
∑th
);

282 
	`ˇche_åì_övÆid©e_∑th
(
a˘ive_ˇche_åì
, 
∑th
);

285 i‡(
a˘ive_ˇche_ch™ged
) {

286 i‡(
	`wrôe_ˇche
(
√wfd
, 
a˘ive_ˇche
, 
a˘ive_ƒ
) ||

287 
	`˛o£
(
√wfd
) ||

288 
	`commô_lock_fûe
(&
lock_fûe
))

289 
	`dõ
("UnableÅo writeÇew index file");

294 
	}
}

	@builtin-name-rev.c

1 
	~"buûtö.h
"

2 
	~"ˇche.h
"

3 
	~"commô.h
"

4 
	~"èg.h
"

5 
	~"ªfs.h
"

7 c⁄° 
	g«me_ªv_ußge
[] =

10 
	sªv_«me
 {

11 c⁄° *
	mtù_«me
;

12 
	mmîge_åavîßls
;

13 
	mgíî©i⁄
;

14 } 
	tªv_«me
;

16 
	gcutoff
 = 
LONG_MAX
;

18 
	$«me_ªv
(
commô
 *commit,

19 c⁄° *
tù_«me
, 
mîge_åavîßls
, 
gíî©i⁄
,

20 
dîef
)

22 
ªv_«me
 *
«me
 = (ªv_«mê*)
commô
->
utû
;

23 
commô_li°
 *
∑ª¡s
;

24 
∑ª¡_numbî
 = 1;

26 i‡(!
commô
->
obje˘
.
∑r£d
)

27 
	`∑r£_commô
(
commô
);

29 i‡(
commô
->
d©e
 < 
cutoff
)

32 i‡(
dîef
) {

33 *
√w_«me
 = 
	`xmÆloc
(
	`°æí
(
tù_«me
)+3);

34 
	`°r˝y
(
√w_«me
, 
tù_«me
);

35 
	`°rˇt
(
√w_«me
, "^0");

36 
tù_«me
 = 
√w_«me
;

38 i‡(
gíî©i⁄
)

39 
	`dõ
("gíî©i⁄: %d, buàdîef?", 
gíî©i⁄
);

42 i‡(
«me
 =
NULL
) {

43 
«me
 = 
	`xmÆloc
((
ªv_«me
));

44 
commô
->
utû
 = 
«me
;

45 
c›y_d©a
;

46 } i‡(
«me
->
mîge_åavîßls
 > merge_traversals ||

47 (
«me
->
mîge_åavîßls
 == merge_traversals &&

48 
«me
->
gíî©i⁄
 > generation)) {

49 
c›y_d©a
:

50 
«me
->
tù_«me
 =Åip_name;

51 
«me
->
mîge_åavîßls
 = merge_traversals;

52 
«me
->
gíî©i⁄
 = generation;

56 
∑ª¡s
 = 
commô
->parents;

57 
∑ª¡s
;

58 
∑ª¡s
 =Ö¨íts->
√xt
, 
∑ª¡_numbî
++) {

59 i‡(
∑ª¡_numbî
 > 1) {

60 *
√w_«me
 = 
	`xmÆloc
(
	`°æí
(
tù_«me
)+8);

62 i‡(
gíî©i⁄
 > 0)

63 
	`•rötf
(
√w_«me
, "%s~%d^%d", 
tù_«me
,

64 
gíî©i⁄
, 
∑ª¡_numbî
);

66 
	`•rötf
(
√w_«me
, "%s^%d", 
tù_«me
, 
∑ª¡_numbî
);

68 
	`«me_ªv
(
∑ª¡s
->
ôem
, 
√w_«me
,

69 
mîge_åavîßls
 + 1 , 0, 0);

71 
	`«me_ªv
(
∑ª¡s
->
ôem
, 
tù_«me
, 
mîge_åavîßls
,

72 
gíî©i⁄
 + 1, 0);

75 
	}
}

77 
	$«me_ªf
(c⁄° *
∑th
, c⁄° *
sha1
, 
Êags
, *
cb_d©a
)

79 
obje˘
 *
o
 = 
	`∑r£_obje˘
(
sha1
);

80 
ègs_⁄ly
 = *(*)
cb_d©a
;

81 
dîef
 = 0;

83 i‡(
ègs_⁄ly
 && 
	`°∫cmp
(
∑th
, "refs/tags/", 10))

86 
o
 && o->
ty≥
 =
OBJ_TAG
) {

87 
èg
 *
t
 = (èg *Ë
o
;

88 i‡(!
t
->
ègged
)

90 
o
 = 
	`∑r£_obje˘
(
t
->
ègged
->
sha1
);

91 
dîef
 = 1;

93 i‡(
o
 && o->
ty≥
 =
OBJ_COMMIT
) {

94 
commô
 *commô = (commô *)
o
;

96 i‡(!
	`°∫cmp
(
∑th
, "refs/heads/", 11))

97 
∑th
 =Öath + 11;

98 i‡(!
	`°∫cmp
(
∑th
, "refs/", 5))

99 
∑th
 =Öath + 5;

101 
	`«me_ªv
(
commô
, 
	`x°rdup
(
∑th
), 0, 0, 
dîef
);

104 
	}
}

107 c⁄° * 
	$gë_ªv_«me
(
obje˘
 *
o
)

109 
buf„r
[1024];

110 
ªv_«me
 *
n
;

111 
commô
 *
c
;

113 i‡(
o
->
ty≥
 !
OBJ_COMMIT
)

115 
c
 = (
commô
 *Ë
o
;

116 
n
 = 
c
->
utû
;

117 i‡(!
n
)

120 i‡(!
n
->
gíî©i⁄
)

121  
n
->
tù_«me
;

123 
	`¢¥ötf
(
buf„r
, (buf„r), "%s~%d", 
n
->
tù_«me
,Ç->
gíî©i⁄
);

125  
buf„r
;

126 
	}
}

128 
	$cmd_«me_ªv
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

130 
obje˘_¨øy
 
ªvs
 = { 0, 0, 
NULL
 };

131 
as_is
 = 0, 
Æl
 = 0, 
å™sf‹m_°dö
 = 0;

132 
ègs_⁄ly
 = 0;

134 
	`gô_c⁄fig
(
gô_deÁu…_c⁄fig
);

136 i‡(
¨gc
 < 2)

137 
	`ußge
(
«me_ªv_ußge
);

139 --
¨gc
, ++
¨gv
;árgc; --argc, ++argv) {

140 
sha1
[20];

141 
obje˘
 *
o
;

142 
commô
 *commit;

144 i‡(!
as_is
 && (*
¨gv
)[0] == '-') {

145 i‡(!
	`°rcmp
(*
¨gv
, "--")) {

146 
as_is
 = 1;

148 } i‡(!
	`°rcmp
(*
¨gv
, "--tags")) {

149 
ègs_⁄ly
 = 1;

151 } i‡(!
	`°rcmp
(*
¨gv
, "--all")) {

152 i‡(
¨gc
 > 1)

153 
	`dõ
("SpecifyÉitheráÜist, or --all,Çot both!");

154 
Æl
 = 1;

155 
cutoff
 = 0;

157 } i‡(!
	`°rcmp
(*
¨gv
, "--stdin")) {

158 i‡(
¨gc
 > 1)

159 
	`dõ
("SpecifyÉitheráÜist, or --stdin,Çot both!");

160 
å™sf‹m_°dö
 = 1;

161 
cutoff
 = 0;

164 
	`ußge
(
«me_ªv_ußge
);

167 i‡(
	`gë_sha1
(*
¨gv
, 
sha1
)) {

168 
	`Ârötf
(
°dîr
, "CouldÇot get sha1 for %s. Skipping.\n",

169 *
¨gv
);

173 
o
 = 
	`dîef_èg
(
	`∑r£_obje˘
(
sha1
), *
¨gv
, 0);

174 i‡(!
o
 || o->
ty≥
 !
OBJ_COMMIT
) {

175 
	`Ârötf
(
°dîr
, "CouldÇot get commit for %s. Skipping.\n",

176 *
¨gv
);

180 
commô
 = (commô *)
o
;

182 i‡(
cutoff
 > 
commô
->
d©e
)

183 
cutoff
 = 
commô
->
d©e
;

185 
	`add_obje˘_¨øy
((
obje˘
 *)
commô
, *
¨gv
, &
ªvs
);

188 
	`f‹_óch_ªf
(
«me_ªf
, &
ègs_⁄ly
);

190 i‡(
å™sf‹m_°dö
) {

191 
buf„r
[2048];

192 *
p
, *
p_°¨t
;

194 !
	`„of
(
°dö
)) {

195 
f‹ty
 = 0;

196 
p
 = 
	`fgës
(
buf„r
, (buf„r), 
°dö
);

197 i‡(!
p
)

200 
p_°¨t
 = 
p
; *p;Ö++) {

201 
	#ishex
(
x
Ë(
	`isdigô
((x)Ë|| ((xË>'a' && (xË<'f'))

	)

202 i‡(!
	`ishex
(*
p
))

203 
f‹ty
 = 0;

204 i‡(++
f‹ty
 == 40 &&

205 !
	`ishex
(*(
p
+1))) {

206 
sha1
[40];

207 c⁄° *
«me
 = "undefined";

208 
c
 = *(
p
+1);

210 
f‹ty
 = 0;

212 *(
p
+1) = 0;

213 i‡(!
	`gë_sha1
(
p
 - 39, 
sha1
)) {

214 
obje˘
 *
o
 =

215 
	`lookup_obje˘
(
sha1
);

216 i‡(
o
)

217 
«me
 = 
	`gë_ªv_«me
(
o
);

219 *(
p
+1Ë
c
;

221 i‡(!
	`°rcmp
(
«me
, "undefined"))

224 
	`fwrôe
(
p_°¨t
, 
p
 -Ö_start + 1, 1,

225 
°dout
);

226 
	`¥ötf
(" (%s)", 
«me
);

227 
p_°¨t
 = 
p
 + 1;

232 i‡(
p_°¨t
 !
p
)

233 
	`fwrôe
(
p_°¨t
, 
p
 -Ö_°¨t, 1, 
°dout
);

235 } i‡(
Æl
) {

236 
i
, 
max
;

238 
max
 = 
	`gë_max_obje˘_ödex
();

239 
i
 = 0; i < 
max
; i++) {

240 
obje˘
 * 
obj
 = 
	`gë_ödexed_obje˘
(
i
);

241 i‡(!
obj
)

243 
	`¥ötf
("%†%s\n", 
	`sha1_to_hex
(
obj
->
sha1
), 
	`gë_ªv_«me
(obj));

246 
i
;

247 
i
 = 0; i < 
ªvs
.
ƒ
; i++)

248 
	`¥ötf
("%s %s\n",

249 
ªvs
.
obje˘s
[
i
].
«me
,

250 
	`gë_ªv_«me
(
ªvs
.
obje˘s
[
i
].
ôem
));

254 
	}
}

	@builtin-pack-objects.c

1 
	~"buûtö.h
"

2 
	~"ˇche.h
"

3 
	~"obje˘.h
"

4 
	~"blob.h
"

5 
	~"commô.h
"

6 
	~"èg.h
"

7 
	~"åì.h
"

8 
	~"dñè.h
"

9 
	~"∑ck.h
"

10 
	~"csum-fûe.h
"

11 
	~"åì-wÆk.h
"

12 
	~"diff.h
"

13 
	~"ªvisi⁄.h
"

14 
	~"li°-obje˘s.h
"

16 c⁄° 
	g∑ck_ußge
[] = "\
-pack-objects [{ -q | --progress | --all-progress }] \n\
[--local] [--incremental] [--window=N] [--depth=N] \n\
[--no-reuse-delta] [--delta-base-offset] [--non-empty] \n\
[--revs [--unpacked | --all]*] [--reflog] [--stdout | base-name] \n\
[<ref-list | <object-list]";

23 
	sobje˘_íåy
 {

24 
	msha1
[20];

25 
	msize
;

26 
	moff£t
;

29 
	mdïth
;

30 
	mdñè_limô
;

31 
	mhash
;

32 
obje˘_ty≥
 
	mty≥
;

33 
obje˘_ty≥
 
	mö_∑ck_ty≥
;

34 
	mdñè_size
;

35 
	#ö_∑ck_hódî_size
 
dñè_size


	)

36 
obje˘_íåy
 *
	mdñè
;

37 
∑cked_gô
 *
	mö_∑ck
;

38 
	mö_∑ck_off£t
;

39 
obje˘_íåy
 *
	mdñè_chûd
;

40 
obje˘_íåy
 *
	mdñè_siblög
;

43 
	m¥e„ºed_ba£
;

62 
	gobje˘_li°_sha1
[20];

63 
	gn⁄_em±y
;

64 
	gno_ªu£_dñè
;

65 
	gloˇl
;

66 
	gö¸emíèl
;

67 
	gÆlow_ofs_dñè
;

69 
obje˘_íåy
 **
	gs‹ãd_by_sha
, **
	gs‹ãd_by_ty≥
;

70 
obje˘_íåy
 *
	gobje˘s
;

71 
	gƒ_obje˘s
, 
	gƒ_Æloc
, 
	gƒ_ªsu…
;

72 c⁄° *
	gba£_«me
;

73 
	g∑ck_fûe_sha1
[20];

74 
	g¥ogªss
 = 1;

75 vﬁ©ûê
sig_©omic_t
 
	g¥ogªss_upd©e
;

76 
	gwödow
 = 10;

77 
	g∑ck_to_°dout
;

78 
	gnum_¥e„ºed_ba£
;

86 *
	gobje˘_ix
;

87 
	gobje˘_ix_hashsz
;

103 
	sªvödex_íåy
 {

104 
	moff£t
;

105 
	mƒ
;

107 
	s∑ck_ªvödex
 {

108 
∑cked_gô
 *
	mp
;

109 
ªvödex_íåy
 *
	mªvödex
;

111 
∑ck_ªvödex
 *
	g∑ck_ªvödex
;

112 
	g∑ck_ªvödex_hashsz
;

117 
	gwrôãn
;

118 
	gwrôãn_dñè
;

119 
	gªu£d
;

120 
	gªu£d_dñè
;

122 
	$∑ck_ªvödex_ix
(
∑cked_gô
 *
p
)

124 
ui
 = ()
p
;

125 
i
;

127 
ui
 = ui ^ (ui >> 16);

128 
i
 = ()(
ui
 % 
∑ck_ªvödex_hashsz
);

129 
∑ck_ªvödex
[
i
].
p
) {

130 i‡(
∑ck_ªvödex
[
i
].
p
 ==Ö)

131  
i
;

132 i‡(++
i
 =
∑ck_ªvödex_hashsz
)

133 
i
 = 0;

135  -1 - 
i
;

136 
	}
}

138 
	$¥ï¨e_∑ck_ix
()

140 
num
;

141 
∑cked_gô
 *
p
;

142 
num
 = 0, 
p
 = 
∑cked_gô
;Ö;Ö =Ö->
√xt
)

143 
num
++;

144 i‡(!
num
)

146 
∑ck_ªvödex_hashsz
 = 
num
 * 11;

147 
∑ck_ªvödex
 = 
	`xˇŒoc
((*∑ck_ªvödex), 
∑ck_ªvödex_hashsz
);

148 
p
 = 
∑cked_gô
;Ö;Ö =Ö->
√xt
) {

149 
num
 = 
	`∑ck_ªvödex_ix
(
p
);

150 
num
 = - 1 -Çum;

151 
∑ck_ªvödex
[
num
].
p
 =Ö;

154 
	}
}

156 
	$cmp_off£t
(c⁄° *
a_
, c⁄° *
b_
)

158 c⁄° 
ªvödex_íåy
 *
a
 = 
a_
;

159 c⁄° 
ªvödex_íåy
 *
b
 = 
b_
;

160  (
a
->
off£t
 < 
b
->offset) ? -1 : (a->offset > b->offset) ? 1 : 0;

161 
	}
}

166 
	$¥ï¨e_∑ck_ªvödex
(
∑ck_ªvödex
 *
rix
)

168 
∑cked_gô
 *
p
 = 
rix
->p;

169 
num_ít
 = 
	`num_∑cked_obje˘s
(
p
);

170 
i
;

171 *
ödex
 = 
p
->
ödex_ba£
 + 256;

173 
rix
->
ªvödex
 = 
	`xmÆloc
((*rix->ªvödexË* (
num_ít
 + 1));

174 
i
 = 0; i < 
num_ít
; i++) {

175 
hl
 = *((*)((*Ë
ödex
 + 24*
i
));

176 
rix
->
ªvödex
[
i
].
off£t
 = 
	`¡ohl
(
hl
);

177 
rix
->
ªvödex
[
i
].
ƒ
 = i;

182 
rix
->
ªvödex
[
num_ít
].
off£t
 = 
p
->
∑ck_size
 - 20;

183 
rix
->
ªvödex
[
num_ít
].
ƒ
 = -1;

184 
	`qs‹t
(
rix
->
ªvödex
, 
num_ít
, (*rix->ªvödex), 
cmp_off£t
);

185 
	}
}

187 
ªvödex_íåy
 * 
	$föd_∑cked_obje˘
(
∑cked_gô
 *
p
,

188 
ofs
)

190 
num
;

191 
lo
, 
hi
;

192 
∑ck_ªvödex
 *
rix
;

193 
ªvödex_íåy
 *
ªvödex
;

194 
num
 = 
	`∑ck_ªvödex_ix
(
p
);

195 i‡(
num
 < 0)

196 
	`dõ
("internalÉrror:ÖackÑevindex uninitialized");

197 
rix
 = &
∑ck_ªvödex
[
num
];

198 i‡(!
rix
->
ªvödex
)

199 
	`¥ï¨e_∑ck_ªvödex
(
rix
);

200 
ªvödex
 = 
rix
->revindex;

201 
lo
 = 0;

202 
hi
 = 
	`num_∑cked_obje˘s
(
p
) + 1;

204 
mi
 = (
lo
 + 
hi
) / 2;

205 i‡(
ªvödex
[
mi
].
off£t
 =
ofs
) {

206  
ªvödex
 + 
mi
;

208 i‡(
ofs
 < 
ªvödex
[
mi
].
off£t
)

209 
hi
 = 
mi
;

211 
lo
 = 
mi
 + 1;

212 } 
lo
 < 
hi
);

213 
	`dõ
("internalÉrror:ÖackÑevindex corrupt");

214 
	}
}

216 
	$föd_∑cked_obje˘_size
(
∑cked_gô
 *
p
,

217 
ofs
)

219 
ªvödex_íåy
 *
íåy
 = 
	`föd_∑cked_obje˘
(
p
, 
ofs
);

220  
íåy
[1].
off£t
 - 
ofs
;

221 
	}
}

223 *
	$föd_∑cked_obje˘_«me
(
∑cked_gô
 *
p
,

224 
ofs
)

226 
ªvödex_íåy
 *
íåy
 = 
	`föd_∑cked_obje˘
(
p
, 
ofs
);

227  (*)(
p
->
ödex_ba£
 + 256Ë+ 24 * 
íåy
->
ƒ
 + 4;

228 
	}
}

230 *
	$dñè_agaö°
(*
buf
, 
size
, 
obje˘_íåy
 *
íåy
)

232 
Ÿhîsize
, 
dñè_size
;

233 
ty≥
[10];

234 *
Ÿhîbuf
 = 
	`ªad_sha1_fûe
(
íåy
->
dñè
->
sha1
, 
ty≥
, &
Ÿhîsize
);

235 *
dñè_buf
;

237 i‡(!
Ÿhîbuf
)

238 
	`dõ
("u«bÀÅÿªad %s", 
	`sha1_to_hex
(
íåy
->
dñè
->
sha1
));

239 
dñè_buf
 = 
	`diff_dñè
(
Ÿhîbuf
, 
Ÿhîsize
,

240 
buf
, 
size
, &
dñè_size
, 0);

241 i‡(!
dñè_buf
 || 
dñè_size
 !
íåy
->delta_size)

242 
	`dõ
("delta size changed");

243 
	`‰ì
(
buf
);

244 
	`‰ì
(
Ÿhîbuf
);

245  
dñè_buf
;

246 
	}
}

255 
	$ícode_hódî
(
obje˘_ty≥
 
ty≥
, 
size
, *
hdr
)

257 
n
 = 1;

258 
c
;

260 i‡(
ty≥
 < 
OBJ_COMMIT
 ||Åy≥ > 
OBJ_REF_DELTA
)

261 
	`dõ
("badÅy≥ %d", 
ty≥
);

263 
c
 = (
ty≥
 << 4Ë| (
size
 & 15);

264 
size
 >>= 4;

265 
size
) {

266 *
hdr
++ = 
c
 | 0x80;

267 
c
 = 
size
 & 0x7f;

268 
size
 >>= 7;

269 
n
++;

271 *
hdr
 = 
c
;

272  
n
;

273 
	}
}

279 
	$check_∑ck_öÊ©e
(
∑cked_gô
 *
p
,

280 
∑ck_wödow
 **
w_curs
,

281 
off£t
,

282 
Àn
,

283 
ex≥˘
)

285 
z_°ªam
 
°ªam
;

286 
Ákebuf
[4096], *
ö
;

287 
°
;

289 
	`mem£t
(&
°ªam
, 0, (stream));

290 
	`öÊ©eInô
(&
°ªam
);

292 
ö
 = 
	`u£_∑ck
(
p
, 
w_curs
, 
off£t
, &
°ªam
.
avaû_ö
);

293 
°ªam
.
√xt_ö
 = 
ö
;

294 
°ªam
.
√xt_out
 = 
Ákebuf
;

295 
°ªam
.
avaû_out
 = (
Ákebuf
);

296 
°
 = 
	`öÊ©e
(&
°ªam
, 
Z_FINISH
);

297 
off£t
 +
°ªam
.
√xt_ö
 - 
ö
;

298 } 
°
 =
Z_OK
 || sà=
Z_BUF_ERROR
);

299 
	`öÊ©eEnd
(&
°ªam
);

300  (
°
 =
Z_STREAM_END
 &&

301 
°ªam
.
tŸÆ_out
 =
ex≥˘
 &&

302 
°ªam
.
tŸÆ_ö
 =
Àn
) ? 0 : -1;

303 
	}
}

305 
	$c›y_∑ck_d©a
(
sha1fûe
 *
f
,

306 
∑cked_gô
 *
p
,

307 
∑ck_wödow
 **
w_curs
,

308 
off£t
,

309 
Àn
)

311 *
ö
;

312 
avaû
;

314 
Àn
) {

315 
ö
 = 
	`u£_∑ck
(
p
, 
w_curs
, 
off£t
, &
avaû
);

316 i‡(
avaû
 > 
Àn
)

317 
avaû
 = 
Àn
;

318 
	`sha1wrôe
(
f
, 
ö
, 
avaû
);

319 
off£t
 +
avaû
;

320 
Àn
 -
avaû
;

322 
	}
}

324 
	$check_loo£_öÊ©e
(*
d©a
, 
Àn
, 
ex≥˘
)

326 
z_°ªam
 
°ªam
;

327 
Ákebuf
[4096];

328 
°
;

330 
	`mem£t
(&
°ªam
, 0, (stream));

331 
°ªam
.
√xt_ö
 = 
d©a
;

332 
°ªam
.
avaû_ö
 = 
Àn
;

333 
°ªam
.
√xt_out
 = 
Ákebuf
;

334 
°ªam
.
avaû_out
 = (
Ákebuf
);

335 
	`öÊ©eInô
(&
°ªam
);

338 
°
 = 
	`öÊ©e
(&
°ªam
, 
Z_FINISH
);

339 i‡(
°
 =
Z_STREAM_END
 || sà=
Z_OK
) {

340 
°
 = (
°ªam
.
tŸÆ_out
 =
ex≥˘
 &&

341 
°ªam
.
tŸÆ_ö
 =
Àn
) ? 0 : -1;

344 i‡(
°
 !
Z_BUF_ERROR
) {

345 
°
 = -1;

348 
°ªam
.
√xt_out
 = 
Ákebuf
;

349 
°ªam
.
avaû_out
 = (
Ákebuf
);

351 
	`öÊ©eEnd
(&
°ªam
);

352  
°
;

353 
	}
}

355 
	$ªvÆid©e_loo£_obje˘
(
obje˘_íåy
 *
íåy
,

356 *
m≠
,

357 
m≠size
)

360 
obje˘_ty≥
 
ty≥
;

361 
size
, 
u£d
;

363 i‡(
∑ck_to_°dout
)

366 
u£d
 = 
	`u≈ack_obje˘_hódî_gíéy
(
m≠
, 
m≠size
, &
ty≥
, &
size
);

367 i‡(!
u£d
)

369 
m≠
 +
u£d
;

370 
m≠size
 -
u£d
;

371  
	`check_loo£_öÊ©e
(
m≠
, 
m≠size
, 
size
);

372 
	}
}

374 
	$wrôe_obje˘
(
sha1fûe
 *
f
,

375 
obje˘_íåy
 *
íåy
)

377 
size
;

378 
ty≥
[10];

379 *
buf
;

380 
hódî
[10];

381 
hdæí
, 
d©Æí
;

382 
obje˘_ty≥
 
obj_ty≥
;

383 
to_ªu£
 = 0;

385 
obj_ty≥
 = 
íåy
->
ty≥
;

386 i‡(! 
íåy
->
ö_∑ck
)

387 
to_ªu£
 = 0;

388 i‡(
obj_ty≥
 =
OBJ_REF_DELTA
 || obj_ty≥ =
OBJ_OFS_DELTA
)

389 
to_ªu£
 = 1;

390 i‡(
obj_ty≥
 !
íåy
->
ö_∑ck_ty≥
)

391 
to_ªu£
 = 0;

392 i‡(
íåy
->
dñè
)

393 
to_ªu£
 = 0;

395 
to_ªu£
 = 1;

399 i‡(!
íåy
->
ö_∑ck
 && !íåy->
dñè
) {

400 *
m≠
;

401 
m≠size
;

402 
m≠
 = 
	`m≠_sha1_fûe
(
íåy
->
sha1
, &
m≠size
);

403 i‡(
m≠
 && !
	`Àgacy_loo£_obje˘
(map)) {

405 i‡(
	`ªvÆid©e_loo£_obje˘
(
íåy
, 
m≠
, 
m≠size
))

406 
	`dõ
("corruptÜoose object %s",

407 
	`sha1_to_hex
(
íåy
->
sha1
));

408 
	`sha1wrôe
(
f
, 
m≠
, 
m≠size
);

409 
	`munm≠
(
m≠
, 
m≠size
);

410 
wrôãn
++;

411 
ªu£d
++;

412  
m≠size
;

414 i‡(
m≠
)

415 
	`munm≠
(
m≠
, 
m≠size
);

418 i‡(!
to_ªu£
) {

419 
buf
 = 
	`ªad_sha1_fûe
(
íåy
->
sha1
, 
ty≥
, &
size
);

420 i‡(!
buf
)

421 
	`dõ
("u«bÀÅÿªad %s", 
	`sha1_to_hex
(
íåy
->
sha1
));

422 i‡(
size
 !
íåy
->size)

423 
	`dõ
("object %s size inconsistency (%lu vs %lu)",

424 
	`sha1_to_hex
(
íåy
->
sha1
), 
size
,Éntry->size);

425 i‡(
íåy
->
dñè
) {

426 
buf
 = 
	`dñè_agaö°
(buf, 
size
, 
íåy
);

427 
size
 = 
íåy
->
dñè_size
;

428 
obj_ty≥
 = (
Ælow_ofs_dñè
 && 
íåy
->
dñè
->
off£t
) ?

429 
OBJ_OFS_DELTA
 : 
OBJ_REF_DELTA
;

435 
hdæí
 = 
	`ícode_hódî
(
obj_ty≥
, 
size
, 
hódî
);

436 
	`sha1wrôe
(
f
, 
hódî
, 
hdæí
);

438 i‡(
obj_ty≥
 =
OBJ_OFS_DELTA
) {

444 
ofs
 = 
íåy
->
off£t
 -É¡ry->
dñè
->offset;

445 
pos
 = (
hódî
) - 1;

446 
hódî
[
pos
] = 
ofs
 & 127;

447 
ofs
 >>= 7)

448 
hódî
[--
pos
] = 128 | (--
ofs
 & 127);

449 
	`sha1wrôe
(
f
, 
hódî
 + 
pos
, (header) -Öos);

450 
hdæí
 +(
hódî
Ë- 
pos
;

451 } i‡(
obj_ty≥
 =
OBJ_REF_DELTA
) {

456 
	`sha1wrôe
(
f
, 
íåy
->
dñè
->
sha1
, 20);

457 
hdæí
 += 20;

459 
d©Æí
 = 
	`sha1wrôe_com¥es£d
(
f
, 
buf
, 
size
);

460 
	`‰ì
(
buf
);

463 
∑cked_gô
 *
p
 = 
íåy
->
ö_∑ck
;

464 
∑ck_wödow
 *
w_curs
 = 
NULL
;

465 
off£t
;

467 i‡(
íåy
->
dñè
) {

468 
obj_ty≥
 = (
Ælow_ofs_dñè
 && 
íåy
->
dñè
->
off£t
) ?

469 
OBJ_OFS_DELTA
 : 
OBJ_REF_DELTA
;

470 
ªu£d_dñè
++;

472 
hdæí
 = 
	`ícode_hódî
(
obj_ty≥
, 
íåy
->
size
, 
hódî
);

473 
	`sha1wrôe
(
f
, 
hódî
, 
hdæí
);

474 i‡(
obj_ty≥
 =
OBJ_OFS_DELTA
) {

475 
ofs
 = 
íåy
->
off£t
 -É¡ry->
dñè
->offset;

476 
pos
 = (
hódî
) - 1;

477 
hódî
[
pos
] = 
ofs
 & 127;

478 
ofs
 >>= 7)

479 
hódî
[--
pos
] = 128 | (--
ofs
 & 127);

480 
	`sha1wrôe
(
f
, 
hódî
 + 
pos
, (header) -Öos);

481 
hdæí
 +(
hódî
Ë- 
pos
;

482 } i‡(
obj_ty≥
 =
OBJ_REF_DELTA
) {

483 
	`sha1wrôe
(
f
, 
íåy
->
dñè
->
sha1
, 20);

484 
hdæí
 += 20;

487 
off£t
 = 
íåy
->
ö_∑ck_off£t
 +É¡ry->
ö_∑ck_hódî_size
;

488 
d©Æí
 = 
	`föd_∑cked_obje˘_size
(
p
, 
íåy
->
ö_∑ck_off£t
)

489 - 
íåy
->
ö_∑ck_hódî_size
;

490 i‡(!
∑ck_to_°dout
 && 
	`check_∑ck_öÊ©e
(
p
, &
w_curs
,

491 
off£t
, 
d©Æí
, 
íåy
->
size
))

492 
	`dõ
("c‹ru± dñè i¿∑ck %s", 
	`sha1_to_hex
(
íåy
->
sha1
));

493 
	`c›y_∑ck_d©a
(
f
, 
p
, &
w_curs
, 
off£t
, 
d©Æí
);

494 
	`unu£_∑ck
(&
w_curs
);

495 
ªu£d
++;

497 i‡(
íåy
->
dñè
)

498 
wrôãn_dñè
++;

499 
wrôãn
++;

500  
hdæí
 + 
d©Æí
;

501 
	}
}

503 
	$wrôe_⁄e
(
sha1fûe
 *
f
,

504 
obje˘_íåy
 *
e
,

505 
off£t
)

507 i‡(
e
->
off£t
 ||É->
¥e„ºed_ba£
)

511  
off£t
;

513 i‡(
e
->
dñè
)

514 
off£t
 = 
	`wrôe_⁄e
(
f
, 
e
->
dñè
, offset);

515 
e
->
off£t
 = offset;

516  
off£t
 + 
	`wrôe_obje˘
(
f
, 
e
);

517 
	}
}

519 
	$wrôe_∑ck_fûe
()

521 
i
;

522 
sha1fûe
 *
f
;

523 
off£t
;

524 
∑ck_hódî
 
hdr
;

525 
œ°_≥r˚¡
 = 999;

526 
do_¥ogªss
 = 
¥ogªss
;

528 i‡(!
ba£_«me
) {

529 
f
 = 
	`sha1fd
(1, "<stdout>");

530 
do_¥ogªss
 >>= 1;

533 
f
 = 
	`sha1¸óã
("%s-%s.%s", 
ba£_«me
,

534 
	`sha1_to_hex
(
obje˘_li°_sha1
), "pack");

535 i‡(
do_¥ogªss
)

536 
	`Ârötf
(
°dîr
, "Wrôög %d obje˘s.\n", 
ƒ_ªsu…
);

538 
hdr
.
hdr_sig«tuª
 = 
	`ht⁄l
(
PACK_SIGNATURE
);

539 
hdr
.
hdr_vîsi⁄
 = 
	`ht⁄l
(
PACK_VERSION
);

540 
hdr
.
hdr_íåõs
 = 
	`ht⁄l
(
ƒ_ªsu…
);

541 
	`sha1wrôe
(
f
, &
hdr
, (hdr));

542 
off£t
 = (
hdr
);

543 i‡(!
ƒ_ªsu…
)

544 
d⁄e
;

545 
i
 = 0; i < 
ƒ_obje˘s
; i++) {

546 
off£t
 = 
	`wrôe_⁄e
(
f
, 
obje˘s
 + 
i
, offset);

547 i‡(
do_¥ogªss
) {

548 
≥r˚¡
 = 
wrôãn
 * 100 / 
ƒ_ªsu…
;

549 i‡(
¥ogªss_upd©e
 || 
≥r˚¡
 !
œ°_≥r˚¡
) {

550 
	`Ârötf
(
°dîr
, "%4u%% (%u/%u) done\r",

551 
≥r˚¡
, 
wrôãn
, 
ƒ_ªsu…
);

552 
¥ogªss_upd©e
 = 0;

553 
œ°_≥r˚¡
 = 
≥r˚¡
;

557 i‡(
do_¥ogªss
)

558 
	`Âutc
('\n', 
°dîr
);

559 
d⁄e
:

560 i‡(
wrôãn
 !
ƒ_ªsu…
)

561 
	`dõ
("wrŸê%d obje˘†whûêex≥˘ög %d", 
wrôãn
, 
ƒ_ªsu…
);

562 
	`sha1˛o£
(
f
, 
∑ck_fûe_sha1
, 1);

563 
	}
}

565 
	$wrôe_ödex_fûe
()

567 
i
;

568 
sha1fûe
 *
f
 = 
	`sha1¸óã
("%s-%s.%s", 
ba£_«me
,

569 
	`sha1_to_hex
(
obje˘_li°_sha1
), "idx");

570 
obje˘_íåy
 **
li°
 = 
s‹ãd_by_sha
;

571 
obje˘_íåy
 **
œ°
 = 
li°
 + 
ƒ_ªsu…
;

572 
uöt32_t
 
¨øy
[256];

579 
i
 = 0; i < 256; i++) {

580 
obje˘_íåy
 **
√xt
 = 
li°
;

581 
√xt
 < 
œ°
) {

582 
obje˘_íåy
 *
íåy
 = *
√xt
;

583 i‡(
íåy
->
sha1
[0] !
i
)

585 
√xt
++;

587 
¨øy
[
i
] = 
	`ht⁄l
(
√xt
 - 
s‹ãd_by_sha
);

588 
li°
 = 
√xt
;

590 
	`sha1wrôe
(
f
, 
¨øy
, 256 * 4);

595 
li°
 = 
s‹ãd_by_sha
;

596 
i
 = 0; i < 
ƒ_ªsu…
; i++) {

597 
obje˘_íåy
 *
íåy
 = *
li°
++;

598 
uöt32_t
 
off£t
 = 
	`ht⁄l
(
íåy
->offset);

599 
	`sha1wrôe
(
f
, &
off£t
, 4);

600 
	`sha1wrôe
(
f
, 
íåy
->
sha1
, 20);

602 
	`sha1wrôe
(
f
, 
∑ck_fûe_sha1
, 20);

603 
	`sha1˛o£
(
f
, 
NULL
, 1);

604 
	}
}

606 
	$loˇã_obje˘_íåy_hash
(c⁄° *
sha1
)

608 
i
;

609 
ui
;

610 
	`mem˝y
(&
ui
, 
sha1
, ());

611 
i
 = 
ui
 % 
obje˘_ix_hashsz
;

612 0 < 
obje˘_ix
[
i
]) {

613 i‡(!
	`hashcmp
(
sha1
, 
obje˘s
[
obje˘_ix
[
i
] - 1].sha1))

614  
i
;

615 i‡(++
i
 =
obje˘_ix_hashsz
)

616 
i
 = 0;

618  -1 - 
i
;

619 
	}
}

621 
obje˘_íåy
 *
	$loˇã_obje˘_íåy
(c⁄° *
sha1
)

623 
i
;

625 i‡(!
obje˘_ix_hashsz
)

626  
NULL
;

628 
i
 = 
	`loˇã_obje˘_íåy_hash
(
sha1
);

629 i‡(0 <
i
)

630  &
obje˘s
[
obje˘_ix
[
i
]-1];

631  
NULL
;

632 
	}
}

634 
	$ªhash_obje˘s
()

636 
i
;

637 
obje˘_íåy
 *
€
;

639 
obje˘_ix_hashsz
 = 
ƒ_obje˘s
 * 3;

640 i‡(
obje˘_ix_hashsz
 < 1024)

641 
obje˘_ix_hashsz
 = 1024;

642 
obje˘_ix
 = 
	`xªÆloc
(obje˘_ix, (Ë* 
obje˘_ix_hashsz
);

643 
	`mem£t
(
obje˘_ix
, 0, (Ë* 
obje˘_ix_hashsz
);

644 
i
 = 0, 
€
 = 
obje˘s
; i < 
ƒ_obje˘s
; i++, oe++) {

645 
ix
 = 
	`loˇã_obje˘_íåy_hash
(
€
->
sha1
);

646 i‡(0 <
ix
)

648 
ix
 = -1 - ix;

649 
obje˘_ix
[
ix
] = 
i
 + 1;

651 
	}
}

653 
	$«me_hash
(c⁄° *
«me
)

655 
c
;

656 
hash
 = 0;

663 (
c
 = *
«me
++) != 0) {

664 i‡(
	`is•a˚
(
c
))

666 
hash
 = (hash >> 2Ë+ (
c
 << 24);

668  
hash
;

669 
	}
}

671 
	$add_obje˘_íåy
(c⁄° *
sha1
, 
hash
, 
ex˛ude
)

673 
idx
 = 
ƒ_obje˘s
;

674 
obje˘_íåy
 *
íåy
;

675 
∑cked_gô
 *
p
;

676 
found_off£t
 = 0;

677 
∑cked_gô
 *
found_∑ck
 = 
NULL
;

678 
ix
, 
°©us
 = 0;

680 i‡(!
ex˛ude
) {

681 
p
 = 
∑cked_gô
;Ö;Ö =Ö->
√xt
) {

682 
off£t
 = 
	`föd_∑ck_íåy_⁄e
(
sha1
, 
p
);

683 i‡(
off£t
) {

684 i‡(
ö¸emíèl
)

686 i‡(
loˇl
 && !
p
->
∑ck_loˇl
)

688 i‡(!
found_∑ck
) {

689 
found_off£t
 = 
off£t
;

690 
found_∑ck
 = 
p
;

695 i‡((
íåy
 = 
	`loˇã_obje˘_íåy
(
sha1
)Ë!
NULL
)

696 
Æªady_added
;

698 i‡(
idx
 >
ƒ_Æloc
) {

699 
√eded
 = (
idx
 + 1024) * 3 / 2;

700 
obje˘s
 = 
	`xªÆloc
(obje˘s, 
√eded
 * (*
íåy
));

701 
ƒ_Æloc
 = 
√eded
;

703 
íåy
 = 
obje˘s
 + 
idx
;

704 
ƒ_obje˘s
 = 
idx
 + 1;

705 
	`mem£t
(
íåy
, 0, (*entry));

706 
	`hash˝y
(
íåy
->
sha1
, sha1);

707 
íåy
->
hash
 = hash;

709 i‡(
obje˘_ix_hashsz
 * 3 <
ƒ_obje˘s
 * 4)

710 
	`ªhash_obje˘s
();

712 
ix
 = 
	`loˇã_obje˘_íåy_hash
(
íåy
->
sha1
);

713 i‡(0 <
ix
)

714 
	`dõ
("internalÉrror in object hashing.");

715 
obje˘_ix
[-1 - 
ix
] = 
idx
 + 1;

717 
°©us
 = 1;

719 
Æªady_added
:

720 i‡(
¥ogªss_upd©e
) {

721 
	`Ârötf
(
°dîr
, "Cou¡ög obje˘s...%d\r", 
ƒ_obje˘s
);

722 
¥ogªss_upd©e
 = 0;

724 i‡(
ex˛ude
)

725 
íåy
->
¥e„ºed_ba£
 = 1;

727 i‡(
found_∑ck
) {

728 
íåy
->
ö_∑ck
 = 
found_∑ck
;

729 
íåy
->
ö_∑ck_off£t
 = 
found_off£t
;

732  
°©us
;

733 
	}
}

735 
	spba£_åì_ˇche
 {

736 
	msha1
[20];

737 
	mªf
;

738 
	mãmp‹¨y
;

739 *
	måì_d©a
;

740 
	måì_size
;

743 
	gpba£_åì_ˇche
 *(pbase_tree_cache[256]);

744 
	$pba£_åì_ˇche_ix
(c⁄° *
sha1
)

746  
sha1
[0] % 
	`ARRAY_SIZE
(
pba£_åì_ˇche
);

747 
	}
}

748 
	$pba£_åì_ˇche_ix_ö¸
(
ix
)

750  (
ix
+1Ë% 
	`ARRAY_SIZE
(
pba£_åì_ˇche
);

751 
	}
}

753 
	spba£_åì
 {

754 
pba£_åì
 *
	m√xt
;

760 
pba£_åì_ˇche
 
	mpˇche
;

761 } *
	gpba£_åì
;

763 
pba£_åì_ˇche
 *
	$pba£_åì_gë
(c⁄° *
sha1
)

765 
pba£_åì_ˇche
 *
ít
, *
√¡
;

766 *
d©a
;

767 
size
;

768 
ty≥
[20];

769 
√igh
;

770 
my_ix
 = 
	`pba£_åì_ˇche_ix
(
sha1
);

771 
avaûabÀ_ix
 = -1;

777 
√igh
 = 0;Çeigh < 8;Çeigh++) {

778 
ít
 = 
pba£_åì_ˇche
[
my_ix
];

779 i‡(
ít
 && !
	`hashcmp
”¡->
sha1
, sha1)) {

780 
ít
->
ªf
++;

781  
ít
;

783 i‡(((
avaûabÀ_ix
 < 0Ë&& (!
ít
 || !ít->
ªf
)) ||

784 ((0 <
avaûabÀ_ix
) &&

785 (!
ít
 && 
pba£_åì_ˇche
[
avaûabÀ_ix
])))

786 
avaûabÀ_ix
 = 
my_ix
;

787 i‡(!
ít
)

789 
my_ix
 = 
	`pba£_åì_ˇche_ix_ö¸
(my_ix);

795 
d©a
 = 
	`ªad_sha1_fûe
(
sha1
, 
ty≥
, &
size
);

796 i‡(!
d©a
)

797  
NULL
;

798 i‡(
	`°rcmp
(
ty≥
, 
åì_ty≥
)) {

799 
	`‰ì
(
d©a
);

800  
NULL
;

805 i‡(
avaûabÀ_ix
 < 0)

806 
ít
 = 
NULL
;

808 
ít
 = 
pba£_åì_ˇche
[
avaûabÀ_ix
];

809 
my_ix
 = 
avaûabÀ_ix
;

812 i‡(!
ít
) {

813 
√¡
 = 
	`xmÆloc
((*nent));

814 
√¡
->
ãmp‹¨y
 = (
avaûabÀ_ix
 < 0);

818 
	`‰ì
(
ít
->
åì_d©a
);

819 
√¡
 = 
ít
;

821 
	`hash˝y
(
√¡
->
sha1
, sha1);

822 
√¡
->
åì_d©a
 = 
d©a
;

823 
√¡
->
åì_size
 = 
size
;

824 
√¡
->
ªf
 = 1;

825 i‡(!
√¡
->
ãmp‹¨y
)

826 
pba£_åì_ˇche
[
my_ix
] = 
√¡
;

827  
√¡
;

828 
	}
}

830 
	$pba£_åì_put
(
pba£_åì_ˇche
 *
ˇche
)

832 i‡(!
ˇche
->
ãmp‹¨y
) {

833 
ˇche
->
ªf
--;

836 
	`‰ì
(
ˇche
->
åì_d©a
);

837 
	`‰ì
(
ˇche
);

838 
	}
}

840 
	$«me_cmp_Àn
(c⁄° *
«me
)

842 
i
;

843 
i
 = 0; 
«me
[i] &&Çame[i] != '\n' &&Çame[i] != '/'; i++)

845  
i
;

846 
	}
}

848 
	$add_pba£_obje˘
(
åì_desc
 *
åì
,

849 c⁄° *
«me
,

850 
cm∂í
,

851 c⁄° *
fuŒ«me
)

853 
«me_íåy
 
íåy
;

855 
	`åì_íåy
(
åì
,&
íåy
)) {

856 
size
;

857 
ty≥
[20];

859 i‡(
íåy
.
∑thÀn
 !
cm∂í
 ||

860 
	`memcmp
(
íåy
.
∑th
, 
«me
, 
cm∂í
) ||

861 !
	`has_sha1_fûe
(
íåy
.
sha1
) ||

862 
	`sha1_obje˘_öfo
(
íåy
.
sha1
, 
ty≥
, &
size
))

864 i‡(
«me
[
cm∂í
] != '/') {

865 
hash
 = 
	`«me_hash
(
fuŒ«me
);

866 
	`add_obje˘_íåy
(
íåy
.
sha1
, 
hash
, 1);

869 i‡(!
	`°rcmp
(
ty≥
, 
åì_ty≥
)) {

870 
åì_desc
 
sub
;

871 
pba£_åì_ˇche
 *
åì
;

872 c⁄° *
down
 = 
«me
+
cm∂í
+1;

873 
dow∆í
 = 
	`«me_cmp_Àn
(
down
);

875 
åì
 = 
	`pba£_åì_gë
(
íåy
.
sha1
);

876 i‡(!
åì
)

878 
sub
.
buf
 = 
åì
->
åì_d©a
;

879 
sub
.
size
 = 
åì
->
åì_size
;

881 
	`add_pba£_obje˘
(&
sub
, 
down
, 
dow∆í
, 
fuŒ«me
);

882 
	`pba£_åì_put
(
åì
);

885 
	}
}

887 *
	gd⁄e_pba£_∑ths
;

888 
	gd⁄e_pba£_∑ths_num
;

889 
	gd⁄e_pba£_∑ths_Æloc
;

890 
	$d⁄e_pba£_∑th_pos
(
hash
)

892 
lo
 = 0;

893 
hi
 = 
d⁄e_pba£_∑ths_num
;

894 
lo
 < 
hi
) {

895 
mi
 = (
hi
 + 
lo
) / 2;

896 i‡(
d⁄e_pba£_∑ths
[
mi
] =
hash
)

897  
mi
;

898 i‡(
d⁄e_pba£_∑ths
[
mi
] < 
hash
)

899 
hi
 = 
mi
;

901 
lo
 = 
mi
 + 1;

903  -
lo
-1;

904 
	}
}

906 
	$check_pba£_∑th
(
hash
)

908 
pos
 = (!
d⁄e_pba£_∑ths
Ë? -1 : 
	`d⁄e_pba£_∑th_pos
(
hash
);

909 i‡(0 <
pos
)

911 
pos
 = -pos - 1;

912 i‡(
d⁄e_pba£_∑ths_Æloc
 <
d⁄e_pba£_∑ths_num
) {

913 
d⁄e_pba£_∑ths_Æloc
 = 
	`Æloc_ƒ
(done_pbase_paths_alloc);

914 
d⁄e_pba£_∑ths
 = 
	`xªÆloc
(done_pbase_paths,

915 
d⁄e_pba£_∑ths_Æloc
 *

918 
d⁄e_pba£_∑ths_num
++;

919 i‡(
pos
 < 
d⁄e_pba£_∑ths_num
)

920 
	`memmove
(
d⁄e_pba£_∑ths
 + 
pos
 + 1,

921 
d⁄e_pba£_∑ths
 + 
pos
,

922 (
d⁄e_pba£_∑ths_num
 - 
pos
 - 1) * ());

923 
d⁄e_pba£_∑ths
[
pos
] = 
hash
;

925 
	}
}

927 
	$add_¥e„ºed_ba£_obje˘
(c⁄° *
«me
, 
hash
)

929 
pba£_åì
 *
ô
;

930 
cm∂í
 = 
	`«me_cmp_Àn
(
«me
);

932 i‡(
	`check_pba£_∑th
(
hash
))

935 
ô
 = 
pba£_åì
; it; iàô->
√xt
) {

936 i‡(
cm∂í
 == 0) {

937 
hash
 = 
	`«me_hash
("");

938 
	`add_obje˘_íåy
(
ô
->
pˇche
.
sha1
, 
hash
, 1);

941 
åì_desc
 
åì
;

942 
åì
.
buf
 = 
ô
->
pˇche
.
åì_d©a
;

943 
åì
.
size
 = 
ô
->
pˇche
.
åì_size
;

944 
	`add_pba£_obje˘
(&
åì
, 
«me
, 
cm∂í
,Çame);

947 
	}
}

949 
	$add_¥e„ºed_ba£
(*
sha1
)

951 
pba£_åì
 *
ô
;

952 *
d©a
;

953 
size
;

954 
åì_sha1
[20];

956 i‡(
wödow
 <
num_¥e„ºed_ba£
++)

959 
d©a
 = 
	`ªad_obje˘_wôh_ª„ªn˚
(
sha1
, 
åì_ty≥
, &
size
, 
åì_sha1
);

960 i‡(!
d©a
)

963 
ô
 = 
pba£_åì
; it; iàô->
√xt
) {

964 i‡(!
	`hashcmp
(
ô
->
pˇche
.
sha1
, 
åì_sha1
)) {

965 
	`‰ì
(
d©a
);

970 
ô
 = 
	`xˇŒoc
(1, (*it));

971 
ô
->
√xt
 = 
pba£_åì
;

972 
pba£_åì
 = 
ô
;

974 
	`hash˝y
(
ô
->
pˇche
.
sha1
, 
åì_sha1
);

975 
ô
->
pˇche
.
åì_d©a
 = 
d©a
;

976 
ô
->
pˇche
.
åì_size
 = 
size
;

977 
	}
}

979 
	$check_obje˘
(
obje˘_íåy
 *
íåy
)

981 
ty≥
[20];

983 i‡(
íåy
->
ö_∑ck
 && !íåy->
¥e„ºed_ba£
) {

984 
∑cked_gô
 *
p
 = 
íåy
->
ö_∑ck
;

985 
∑ck_wödow
 *
w_curs
 = 
NULL
;

986 
À·
 = 
p
->
∑ck_size
 - 
íåy
->
ö_∑ck_off£t
;

987 
size
, 
u£d
;

988 *
buf
;

989 
obje˘_íåy
 *
ba£_íåy
 = 
NULL
;

991 
buf
 = 
	`u£_∑ck
(
p
, &
w_curs
, 
íåy
->
ö_∑ck_off£t
, 
NULL
);

996 
u£d
 = 
	`u≈ack_obje˘_hódî_gíéy
(
buf
, 
À·
,

997 &
íåy
->
ö_∑ck_ty≥
, &
size
);

1003 i‡(!
no_ªu£_dñè
) {

1004 
c
, *
ba£_«me
;

1005 
ofs
;

1006 
u£d_0
;

1008 
íåy
->
ö_∑ck_ty≥
) {

1009 
OBJ_REF_DELTA
:

1010 
ba£_«me
 = 
	`u£_∑ck
(
p
, &
w_curs
,

1011 
íåy
->
ö_∑ck_off£t
 + 
u£d
, 
NULL
);

1012 
u£d
 += 20;

1014 
OBJ_OFS_DELTA
:

1015 
buf
 = 
	`u£_∑ck
(
p
, &
w_curs
,

1016 
íåy
->
ö_∑ck_off£t
 + 
u£d
, 
NULL
);

1017 
u£d_0
 = 0;

1018 
c
 = 
buf
[
u£d_0
++];

1019 
ofs
 = 
c
 & 127;

1020 
c
 & 128) {

1021 
ofs
 += 1;

1022 i‡(!
ofs
 || ofs & ~(~0UL >> 7))

1023 
	`dõ
("delta base offset overflow inÖack for %s",

1024 
	`sha1_to_hex
(
íåy
->
sha1
));

1025 
c
 = 
buf
[
u£d_0
++];

1026 
ofs
 = (of†<< 7Ë+ (
c
 & 127);

1028 i‡(
ofs
 >
íåy
->
ö_∑ck_off£t
)

1029 
	`dõ
("delta base offset out of bound for %s",

1030 
	`sha1_to_hex
(
íåy
->
sha1
));

1031 
ofs
 = 
íåy
->
ö_∑ck_off£t
 - ofs;

1032 
ba£_«me
 = 
	`föd_∑cked_obje˘_«me
(
p
, 
ofs
);

1033 
u£d
 +
u£d_0
;

1036 
ba£_«me
 = 
NULL
;

1038 i‡(
ba£_«me
)

1039 
ba£_íåy
 = 
	`loˇã_obje˘_íåy
(
ba£_«me
);

1041 
	`unu£_∑ck
(&
w_curs
);

1042 
íåy
->
ö_∑ck_hódî_size
 = 
u£d
;

1044 i‡(
ba£_íåy
) {

1053 
íåy
->
size
 = size;

1054 
íåy
->
dñè
 = 
ba£_íåy
;

1055 
íåy
->
ty≥
 =É¡ry->
ö_∑ck_ty≥
;

1057 
íåy
->
dñè_siblög
 = 
ba£_íåy
->
dñè_chûd
;

1058 
ba£_íåy
->
dñè_chûd
 = 
íåy
;

1065 i‡(
	`sha1_obje˘_öfo
(
íåy
->
sha1
, 
ty≥
, &íåy->
size
))

1066 
	`dõ
("unableÅo getÅype of object %s",

1067 
	`sha1_to_hex
(
íåy
->
sha1
));

1069 i‡(!
	`°rcmp
(
ty≥
, 
commô_ty≥
)) {

1070 
íåy
->
ty≥
 = 
OBJ_COMMIT
;

1071 } i‡(!
	`°rcmp
(
ty≥
, 
åì_ty≥
)) {

1072 
íåy
->
ty≥
 = 
OBJ_TREE
;

1073 } i‡(!
	`°rcmp
(
ty≥
, 
blob_ty≥
)) {

1074 
íåy
->
ty≥
 = 
OBJ_BLOB
;

1075 } i‡(!
	`°rcmp
(
ty≥
, 
èg_ty≥
)) {

1076 
íåy
->
ty≥
 = 
OBJ_TAG
;

1078 
	`dõ
("unableÅoÖack object %s ofÅype %s",

1079 
	`sha1_to_hex
(
íåy
->
sha1
), 
ty≥
);

1080 
	}
}

1082 
	$check_dñè_limô
(
obje˘_íåy
 *
me
, 
n
)

1084 
obje˘_íåy
 *
chûd
 = 
me
->
dñè_chûd
;

1085 
m
 = 
n
;

1086 
chûd
) {

1087 
c
 = 
	`check_dñè_limô
(
chûd
, 
n
 + 1);

1088 i‡(
m
 < 
c
)

1089 
m
 = 
c
;

1090 
chûd
 = chûd->
dñè_siblög
;

1092  
m
;

1093 
	}
}

1095 
	$gë_obje˘_dëaûs
()

1097 
i
;

1098 
obje˘_íåy
 *
íåy
;

1100 
	`¥ï¨e_∑ck_ix
();

1101 
i
 = 0, 
íåy
 = 
obje˘s
; i < 
ƒ_obje˘s
; i++,Éntry++)

1102 
	`check_obje˘
(
íåy
);

1104 i‡(
ƒ_obje˘s
 =
ƒ_ªsu…
) {

1115 
i
 = 0, 
íåy
 = 
obje˘s
; i < 
ƒ_obje˘s
; i++,Éntry++)

1116 i‡(!
íåy
->
dñè
 &&É¡ry->
dñè_chûd
)

1117 
íåy
->
dñè_limô
 =

1118 
	`check_dñè_limô
(
íåy
, 1);

1120 
	}
}

1122 (*
	tíåy_s‹t_t
)(c⁄° 
	tobje˘_íåy
 *, const object_entry *);

1124 
íåy_s‹t_t
 
cuºít_s‹t
;

1126 
	$s‹t_com∑øt‹
(c⁄° *
_a
, c⁄° *
_b
)

1128 
obje˘_íåy
 *
a
 = *(obje˘_íåy **)
_a
;

1129 
obje˘_íåy
 *
b
 = *(obje˘_íåy **)
_b
;

1130  
	`cuºít_s‹t
(
a
,
b
);

1131 
	}
}

1133 
obje˘_íåy
 **
	$¸óã_s‹ãd_li°
(
íåy_s‹t_t
 
s‹t
)

1135 
obje˘_íåy
 **
li°
 = 
	`xmÆloc
(
ƒ_obje˘s
 * (object_entry *));

1136 
i
;

1138 
i
 = 0; i < 
ƒ_obje˘s
; i++)

1139 
li°
[
i
] = 
obje˘s
 + i;

1140 
cuºít_s‹t
 = 
s‹t
;

1141 
	`qs‹t
(
li°
, 
ƒ_obje˘s
, (
obje˘_íåy
 *), 
s‹t_com∑øt‹
);

1142  
li°
;

1143 
	}
}

1145 
	$sha1_s‹t
(c⁄° 
obje˘_íåy
 *
a
, c⁄° obje˘_íåy *
b
)

1147  
	`hashcmp
(
a
->
sha1
, 
b
->sha1);

1148 
	}
}

1150 
obje˘_íåy
 **
	$¸óã_föÆ_obje˘_li°
()

1152 
obje˘_íåy
 **
li°
;

1153 
i
, 
j
;

1155 
i
 = 
ƒ_ªsu…
 = 0; i < 
ƒ_obje˘s
; i++)

1156 i‡(!
obje˘s
[
i
].
¥e„ºed_ba£
)

1157 
ƒ_ªsu…
++;

1158 
li°
 = 
	`xmÆloc
(
ƒ_ªsu…
 * (
obje˘_íåy
 *));

1159 
i
 = 
j
 = 0; i < 
ƒ_obje˘s
; i++) {

1160 i‡(!
obje˘s
[
i
].
¥e„ºed_ba£
)

1161 
li°
[
j
++] = 
obje˘s
 + 
i
;

1163 
cuºít_s‹t
 = 
sha1_s‹t
;

1164 
	`qs‹t
(
li°
, 
ƒ_ªsu…
, (
obje˘_íåy
 *), 
s‹t_com∑øt‹
);

1165  
li°
;

1166 
	}
}

1168 
	$ty≥_size_s‹t
(c⁄° 
obje˘_íåy
 *
a
, c⁄° obje˘_íåy *
b
)

1170 i‡(
a
->
ty≥
 < 
b
->type)

1172 i‡(
a
->
ty≥
 > 
b
->type)

1174 i‡(
a
->
hash
 < 
b
->hash)

1176 i‡(
a
->
hash
 > 
b
->hash)

1178 i‡(
a
->
¥e„ºed_ba£
 < 
b
->preferred_base)

1180 i‡(
a
->
¥e„ºed_ba£
 > 
b
->preferred_base)

1182 i‡(
a
->
size
 < 
b
->size)

1184 i‡(
a
->
size
 > 
b
->size)

1186  
a
 < 
b
 ? -1 : (a > b);

1187 
	}
}

1189 
	su≈acked
 {

1190 
obje˘_íåy
 *
	míåy
;

1191 *
	md©a
;

1192 
dñè_ödex
 *
	mödex
;

1203 
	$åy_dñè
(
u≈acked
 *
åg
, u≈acked *
§c
,

1204 
max_dïth
)

1206 
obje˘_íåy
 *
åg_íåy
 = 
åg
->
íåy
;

1207 
obje˘_íåy
 *
§c_íåy
 = 
§c
->
íåy
;

1208 
åg_size
, 
§c_size
, 
dñè_size
, 
sizediff
, 
max_size
, 
sz
;

1209 
ty≥
[10];

1210 *
dñè_buf
;

1213 i‡(
åg_íåy
->
ty≥
 !
§c_íåy
->type)

1219 i‡(
åg_íåy
->
¥e„ºed_ba£
)

1226 i‡(!
no_ªu£_dñè
 && 
åg_íåy
->
ö_∑ck
 &&

1227 
åg_íåy
->
ö_∑ck
 =
§c_íåy
->in_pack &&

1228 
åg_íåy
->
ö_∑ck_ty≥
 !
OBJ_REF_DELTA
 &&

1229 
åg_íåy
->
ö_∑ck_ty≥
 !
OBJ_OFS_DELTA
)

1237 i‡(
åg_íåy
->
dñè_chûd
) {

1238 i‡(
max_dïth
 <
åg_íåy
->
dñè_limô
)

1240 
max_dïth
 -
åg_íåy
->
dñè_limô
;

1242 i‡(
§c_íåy
->
dïth
 >
max_dïth
)

1246 
åg_size
 = 
åg_íåy
->
size
;

1247 
max_size
 = 
åg_size
/2 - 20;

1248 
max_size
 = max_sizê* (
max_dïth
 - 
§c_íåy
->
dïth
) / max_depth;

1249 i‡(
max_size
 == 0)

1251 i‡(
åg_íåy
->
dñè
 &&Årg_íåy->
dñè_size
 <
max_size
)

1252 
max_size
 = 
åg_íåy
->
dñè_size
-1;

1253 
§c_size
 = 
§c_íåy
->
size
;

1254 
sizediff
 = 
§c_size
 < 
åg_size
 ?Årg_size - src_size : 0;

1255 i‡(
sizediff
 >
max_size
)

1259 i‡(!
åg
->
d©a
) {

1260 
åg
->
d©a
 = 
	`ªad_sha1_fûe
(
åg_íåy
->
sha1
, 
ty≥
, &
sz
);

1261 i‡(
sz
 !
åg_size
)

1262 
	`dõ
("object %s inconsistent objectÜength (%lu vs %lu)",

1263 
	`sha1_to_hex
(
åg_íåy
->
sha1
), 
sz
, 
åg_size
);

1265 i‡(!
§c
->
d©a
) {

1266 
§c
->
d©a
 = 
	`ªad_sha1_fûe
(
§c_íåy
->
sha1
, 
ty≥
, &
sz
);

1267 i‡(
sz
 !
§c_size
)

1268 
	`dõ
("object %s inconsistent objectÜength (%lu vs %lu)",

1269 
	`sha1_to_hex
(
§c_íåy
->
sha1
), 
sz
, 
§c_size
);

1271 i‡(!
§c
->
ödex
) {

1272 
§c
->
ödex
 = 
	`¸óã_dñè_ödex
(§c->
d©a
, 
§c_size
);

1273 i‡(!
§c
->
ödex
)

1274 
	`dõ
("out of memory");

1277 
dñè_buf
 = 
	`¸óã_dñè
(
§c
->
ödex
, 
åg
->
d©a
, 
åg_size
, &
dñè_size
, 
max_size
);

1278 i‡(!
dñè_buf
)

1281 
åg_íåy
->
dñè
 = 
§c_íåy
;

1282 
åg_íåy
->
dñè_size
 = delta_size;

1283 
åg_íåy
->
dïth
 = 
§c_íåy
->depth + 1;

1284 
	`‰ì
(
dñè_buf
);

1286 
	}
}

1288 
	$¥ogªss_öãrvÆ
(
signum
)

1290 
¥ogªss_upd©e
 = 1;

1291 
	}
}

1293 
	$föd_dñès
(
obje˘_íåy
 **
li°
, 
wödow
, 
dïth
)

1295 
i
, 
idx
;

1296 
¨øy_size
 = 
wödow
 * (
u≈acked
);

1297 
u≈acked
 *
¨øy
 = 
	`xmÆloc
(
¨øy_size
);

1298 
¥o˚s£d
 = 0;

1299 
œ°_≥r˚¡
 = 999;

1301 
	`mem£t
(
¨øy
, 0, 
¨øy_size
);

1302 
i
 = 
ƒ_obje˘s
;

1303 
idx
 = 0;

1304 i‡(
¥ogªss
)

1305 
	`Ârötf
(
°dîr
, "Dñtifyög %d obje˘s.\n", 
ƒ_ªsu…
);

1307 --
i
 >= 0) {

1308 
obje˘_íåy
 *
íåy
 = 
li°
[
i
];

1309 
u≈acked
 *
n
 = 
¨øy
 + 
idx
;

1310 
j
;

1312 i‡(!
íåy
->
¥e„ºed_ba£
)

1313 
¥o˚s£d
++;

1315 i‡(
¥ogªss
) {

1316 
≥r˚¡
 = 
¥o˚s£d
 * 100 / 
ƒ_ªsu…
;

1317 i‡(
≥r˚¡
 !
œ°_≥r˚¡
 || 
¥ogªss_upd©e
) {

1318 
	`Ârötf
(
°dîr
, "%4u%% (%u/%u) done\r",

1319 
≥r˚¡
, 
¥o˚s£d
, 
ƒ_ªsu…
);

1320 
¥ogªss_upd©e
 = 0;

1321 
œ°_≥r˚¡
 = 
≥r˚¡
;

1325 i‡(
íåy
->
dñè
)

1331 i‡(
íåy
->
size
 < 50)

1333 
	`‰ì_dñè_ödex
(
n
->
ödex
);

1334 
n
->
ödex
 = 
NULL
;

1335 
	`‰ì
(
n
->
d©a
);

1336 
n
->
d©a
 = 
NULL
;

1337 
n
->
íåy
 =Éntry;

1339 
j
 = 
wödow
;

1340 --
j
 > 0) {

1341 
Ÿhî_idx
 = 
idx
 + 
j
;

1342 
u≈acked
 *
m
;

1343 i‡(
Ÿhî_idx
 >
wödow
)

1344 
Ÿhî_idx
 -
wödow
;

1345 
m
 = 
¨øy
 + 
Ÿhî_idx
;

1346 i‡(!
m
->
íåy
)

1348 i‡(
	`åy_dñè
(
n
, 
m
, 
dïth
) < 0)

1355 i‡(
íåy
->
dñè
 && 
dïth
 <=Éntry->depth)

1358 
idx
++;

1359 i‡(
idx
 >
wödow
)

1360 
idx
 = 0;

1363 i‡(
¥ogªss
)

1364 
	`Âutc
('\n', 
°dîr
);

1366 
i
 = 0; i < 
wödow
; ++i) {

1367 
	`‰ì_dñè_ödex
(
¨øy
[
i
].
ödex
);

1368 
	`‰ì
(
¨øy
[
i
].
d©a
);

1370 
	`‰ì
(
¨øy
);

1371 
	}
}

1373 
	$¥ï¨e_∑ck
(
wödow
, 
dïth
)

1375 
	`gë_obje˘_dëaûs
();

1376 
s‹ãd_by_ty≥
 = 
	`¸óã_s‹ãd_li°
(
ty≥_size_s‹t
);

1377 i‡(
wödow
 && 
dïth
)

1378 
	`föd_dñès
(
s‹ãd_by_ty≥
, 
wödow
+1, 
dïth
);

1379 
	}
}

1381 
	$ªu£_ˇched_∑ck
(*
sha1
)

1383 c⁄° 
ˇche
[] = "pack-cache/pack-%s.%s";

1384 *
ˇched_∑ck
, *
ˇched_idx
;

1385 
ifd
, 
ofd
, 
ifd_ix
 = -1;

1387 
ˇched_∑ck
 = 
	`gô_∑th
(
ˇche
, 
	`sha1_to_hex
(
sha1
), "pack");

1388 
ifd
 = 
	`›í
(
ˇched_∑ck
, 
O_RDONLY
);

1389 i‡(
ifd
 < 0)

1392 i‡(!
∑ck_to_°dout
) {

1393 
ˇched_idx
 = 
	`gô_∑th
(
ˇche
, 
	`sha1_to_hex
(
sha1
), "idx");

1394 
ifd_ix
 = 
	`›í
(
ˇched_idx
, 
O_RDONLY
);

1395 i‡(
ifd_ix
 < 0) {

1396 
	`˛o£
(
ifd
);

1401 i‡(
¥ogªss
)

1402 
	`Ârötf
(
°dîr
, "Reusög %d obje˘†∑ck %s\n", 
ƒ_obje˘s
,

1403 
	`sha1_to_hex
(
sha1
));

1405 i‡(
∑ck_to_°dout
) {

1406 i‡(
	`c›y_fd
(
ifd
, 1))

1407 
	`exô
(1);

1408 
	`˛o£
(
ifd
);

1411 
«me
[
PATH_MAX
];

1412 
	`¢¥ötf
(
«me
, (name),

1413 "%s-%s.%s", 
ba£_«me
, 
	`sha1_to_hex
(
sha1
), "pack");

1414 
ofd
 = 
	`›í
(
«me
, 
O_CREAT
 | 
O_EXCL
 | 
O_WRONLY
, 0666);

1415 i‡(
ofd
 < 0)

1416 
	`dõ
("u«bÀÅÿ›í %†(%s)", 
«me
, 
	`°ªº‹
(
î∫o
));

1417 i‡(
	`c›y_fd
(
ifd
, 
ofd
))

1418 
	`exô
(1);

1419 
	`˛o£
(
ifd
);

1421 
	`¢¥ötf
(
«me
, (name),

1422 "%s-%s.%s", 
ba£_«me
, 
	`sha1_to_hex
(
sha1
), "idx");

1423 
ofd
 = 
	`›í
(
«me
, 
O_CREAT
 | 
O_EXCL
 | 
O_WRONLY
, 0666);

1424 i‡(
ofd
 < 0)

1425 
	`dõ
("u«bÀÅÿ›í %†(%s)", 
«me
, 
	`°ªº‹
(
î∫o
));

1426 i‡(
	`c›y_fd
(
ifd_ix
, 
ofd
))

1427 
	`exô
(1);

1428 
	`˛o£
(
ifd_ix
);

1429 
	`puts
(
	`sha1_to_hex
(
sha1
));

1433 
	}
}

1435 
	$£tup_¥ogªss_sig«l
()

1437 
siga˘i⁄
 
ß
;

1438 
ôimîvÆ
 
v
;

1440 
	`mem£t
(&
ß
, 0, (sa));

1441 
ß
.
ß_h™dÀr
 = 
¥ogªss_öãrvÆ
;

1442 
	`sigem±y£t
(&
ß
.
ß_mask
);

1443 
ß
.
ß_Êags
 = 
SA_RESTART
;

1444 
	`siga˘i⁄
(
SIGALRM
, &
ß
, 
NULL
);

1446 
v
.
ô_öãrvÆ
.
tv_£c
 = 1;

1447 
v
.
ô_öãrvÆ
.
tv_u£c
 = 0;

1448 
v
.
ô_vÆue
 = v.
ô_öãrvÆ
;

1449 
	`£tôimî
(
ITIMER_REAL
, &
v
, 
NULL
);

1450 
	}
}

1452 
	$gô_∑ck_c⁄fig
(c⁄° *
k
, c⁄° *
v
)

1454 if(!
	`°rcmp
(
k
, "pack.window")) {

1455 
wödow
 = 
	`gô_c⁄fig_öt
(
k
, 
v
);

1458  
	`gô_deÁu…_c⁄fig
(
k
, 
v
);

1459 
	}
}

1461 
	$ªad_obje˘_li°_‰om_°dö
()

1463 
löe
[40 + 1 + 
PATH_MAX
 + 2];

1464 
sha1
[20];

1465 
hash
;

1468 i‡(!
	`fgës
(
löe
, ÷öe), 
°dö
)) {

1469 i‡(
	`„of
(
°dö
))

1471 i‡(!
	`„º‹
(
°dö
))

1472 
	`dõ
("fgetsÑeturned NULL,Çot EOF,ÇotÉrror!");

1473 i‡(
î∫o
 !
EINTR
)

1474 
	`dõ
("fgës: %s", 
	`°ªº‹
(
î∫o
));

1475 
	`˛óªº
(
°dö
);

1478 i‡(
löe
[0] == '-') {

1479 i‡(
	`gë_sha1_hex
(
löe
+1, 
sha1
))

1480 
	`dõ
("expectedÉdge sha1, got garbage:\n %s",

1481 
löe
);

1482 
	`add_¥e„ºed_ba£
(
sha1
);

1485 i‡(
	`gë_sha1_hex
(
löe
, 
sha1
))

1486 
	`dõ
("ex≥˘ed sha1, gŸ g¨bage:\¿%s", 
löe
);

1488 
hash
 = 
	`«me_hash
(
löe
+41);

1489 
	`add_¥e„ºed_ba£_obje˘
(
löe
+41, 
hash
);

1490 
	`add_obje˘_íåy
(
sha1
, 
hash
, 0);

1492 
	}
}

1494 
	$show_commô
(
commô
 *commit)

1496 
hash
 = 
	`«me_hash
("");

1497 
	`add_¥e„ºed_ba£_obje˘
("", 
hash
);

1498 
	`add_obje˘_íåy
(
commô
->
obje˘
.
sha1
, 
hash
, 0);

1499 
	}
}

1501 
	$show_obje˘
(
obje˘_¨øy_íåy
 *
p
)

1503 
hash
 = 
	`«me_hash
(
p
->
«me
);

1504 
	`add_¥e„ºed_ba£_obje˘
(
p
->
«me
, 
hash
);

1505 
	`add_obje˘_íåy
(
p
->
ôem
->
sha1
, 
hash
, 0);

1506 
	}
}

1508 
	$show_edge
(
commô
 *commit)

1510 
	`add_¥e„ºed_ba£
(
commô
->
obje˘
.
sha1
);

1511 
	}
}

1513 
	$gë_obje˘_li°
(
ac
, c⁄° **
av
)

1515 
ªv_öfo
 
ªvs
;

1516 
löe
[1000];

1517 
Êags
 = 0;

1519 
	`öô_ªvisi⁄s
(&
ªvs
, 
NULL
);

1520 
ßve_commô_buf„r
 = 0;

1521 
åack_obje˘_ªfs
 = 0;

1522 
	`£tup_ªvisi⁄s
(
ac
, 
av
, &
ªvs
, 
NULL
);

1524 
	`fgës
(
löe
, ÷öe), 
°dö
Ë!
NULL
) {

1525 
Àn
 = 
	`°æí
(
löe
);

1526 i‡(
löe
[
Àn
 - 1] == '\n')

1527 
löe
[--
Àn
] = 0;

1528 i‡(!
Àn
)

1530 i‡(*
löe
 == '-') {

1531 i‡(!
	`°rcmp
(
löe
, "--not")) {

1532 
Êags
 ^
UNINTERESTING
;

1535 
	`dõ
("nŸáÑev '%s'", 
löe
);

1537 i‡(
	`h™dÀ_ªvisi⁄_¨g
(
löe
, &
ªvs
, 
Êags
, 1))

1538 
	`dõ
("badÑevisi⁄ '%s'", 
löe
);

1541 
	`¥ï¨e_ªvisi⁄_wÆk
(&
ªvs
);

1542 
	`m¨k_edges_unöãª°ög
(
ªvs
.
commôs
, &ªvs, 
show_edge
);

1543 
	`åavî£_commô_li°
(&
ªvs
, 
show_commô
, 
show_obje˘
);

1544 
	}
}

1546 
	$cmd_∑ck_obje˘s
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

1548 
SHA_CTX
 
˘x
;

1549 
dïth
 = 10;

1550 
obje˘_íåy
 **
li°
;

1551 
u£_öã∫Æ_ªv_li°
 = 0;

1552 
thö
 = 0;

1553 
i
;

1554 c⁄° *
Ω_av
[64];

1555 
Ω_ac
;

1557 
Ω_av
[0] = "pack-objects";

1558 
Ω_av
[1] = "--objects";

1559 
Ω_ac
 = 2;

1561 
	`gô_c⁄fig
(
gô_∑ck_c⁄fig
);

1563 
¥ogªss
 = 
	`ißây
(2);

1564 
i
 = 1; i < 
¨gc
; i++) {

1565 c⁄° *
¨g
 = 
¨gv
[
i
];

1567 i‡(*
¨g
 != '-')

1570 i‡(!
	`°rcmp
("--n⁄-em±y", 
¨g
)) {

1571 
n⁄_em±y
 = 1;

1574 i‡(!
	`°rcmp
("--loˇl", 
¨g
)) {

1575 
loˇl
 = 1;

1578 i‡(!
	`°rcmp
("--ö¸emíèl", 
¨g
)) {

1579 
ö¸emíèl
 = 1;

1582 i‡(!
	`°∫cmp
("--wödow=", 
¨g
, 9)) {

1583 *
íd
;

1584 
wödow
 = 
	`°πoul
(
¨g
+9, &
íd
, 0);

1585 i‡(!
¨g
[9] || *
íd
)

1586 
	`ußge
(
∑ck_ußge
);

1589 i‡(!
	`°∫cmp
("--dïth=", 
¨g
, 8)) {

1590 *
íd
;

1591 
dïth
 = 
	`°πoul
(
¨g
+8, &
íd
, 0);

1592 i‡(!
¨g
[8] || *
íd
)

1593 
	`ußge
(
∑ck_ußge
);

1596 i‡(!
	`°rcmp
("--¥ogªss", 
¨g
)) {

1597 
¥ogªss
 = 1;

1600 i‡(!
	`°rcmp
("--Æl-¥ogªss", 
¨g
)) {

1601 
¥ogªss
 = 2;

1604 i‡(!
	`°rcmp
("-q", 
¨g
)) {

1605 
¥ogªss
 = 0;

1608 i‡(!
	`°rcmp
("--no-ªu£-dñè", 
¨g
)) {

1609 
no_ªu£_dñè
 = 1;

1612 i‡(!
	`°rcmp
("--dñè-ba£-off£t", 
¨g
)) {

1613 
Ælow_ofs_dñè
 = 1;

1616 i‡(!
	`°rcmp
("--°dout", 
¨g
)) {

1617 
∑ck_to_°dout
 = 1;

1620 i‡(!
	`°rcmp
("--ªvs", 
¨g
)) {

1621 
u£_öã∫Æ_ªv_li°
 = 1;

1624 i‡(!
	`°rcmp
("--u≈acked", 
¨g
) ||

1625 !
	`°∫cmp
("--u≈acked=", 
¨g
, 11) ||

1626 !
	`°rcmp
("--ªÊog", 
¨g
) ||

1627 !
	`°rcmp
("--Æl", 
¨g
)) {

1628 
u£_öã∫Æ_ªv_li°
 = 1;

1629 i‡(
	`ARRAY_SIZE
(
Ω_av
Ë- 1 <
Ω_ac
)

1630 
	`dõ
("too many internalÑev-list options");

1631 
Ω_av
[
Ω_ac
++] = 
¨g
;

1634 i‡(!
	`°rcmp
("--thö", 
¨g
)) {

1635 
u£_öã∫Æ_ªv_li°
 = 1;

1636 
thö
 = 1;

1637 
Ω_av
[1] = "--objects-edge";

1640 
	`ußge
(
∑ck_ußge
);

1656 i‡(!
∑ck_to_°dout
)

1657 
ba£_«me
 = 
¨gv
[
i
++];

1659 i‡(
∑ck_to_°dout
 !!
ba£_«me
)

1660 
	`ußge
(
∑ck_ußge
);

1662 i‡(!
∑ck_to_°dout
 && 
thö
)

1663 
	`dõ
("--thin cannot be usedÅo buildán indexableÖack.");

1665 
	`¥ï¨e_∑cked_gô
();

1667 i‡(
¥ogªss
) {

1668 
	`Ârötf
(
°dîr
, "GeneratingÖack...\n");

1669 
	`£tup_¥ogªss_sig«l
();

1672 i‡(!
u£_öã∫Æ_ªv_li°
)

1673 
	`ªad_obje˘_li°_‰om_°dö
();

1675 
Ω_av
[
Ω_ac
] = 
NULL
;

1676 
	`gë_obje˘_li°
(
Ω_ac
, 
Ω_av
);

1679 i‡(
¥ogªss
)

1680 
	`Ârötf
(
°dîr
, "D⁄êcou¡ög %d obje˘s.\n", 
ƒ_obje˘s
);

1681 
s‹ãd_by_sha
 = 
	`¸óã_föÆ_obje˘_li°
();

1682 i‡(
n⁄_em±y
 && !
ƒ_ªsu…
)

1685 
	`SHA1_Inô
(&
˘x
);

1686 
li°
 = 
s‹ãd_by_sha
;

1687 
i
 = 0; i < 
ƒ_ªsu…
; i++) {

1688 
obje˘_íåy
 *
íåy
 = *
li°
++;

1689 
	`SHA1_Upd©e
(&
˘x
, 
íåy
->
sha1
, 20);

1691 
	`SHA1_FöÆ
(
obje˘_li°_sha1
, &
˘x
);

1692 i‡(
¥ogªss
 && (
ƒ_obje˘s
 !
ƒ_ªsu…
))

1693 
	`Ârötf
(
°dîr
, "Resu… ha†%d obje˘s.\n", 
ƒ_ªsu…
);

1695 i‡(
	`ªu£_ˇched_∑ck
(
obje˘_li°_sha1
))

1698 i‡(
ƒ_ªsu…
)

1699 
	`¥ï¨e_∑ck
(
wödow
, 
dïth
);

1700 i‡(
¥ogªss
 =1 && 
∑ck_to_°dout
) {

1702 
ôimîvÆ
 
v
 = {{0,},};

1703 
	`£tôimî
(
ITIMER_REAL
, &
v
, 
NULL
);

1704 
	`sig«l
(
SIGALRM
, 
SIG_IGN
 );

1705 
¥ogªss_upd©e
 = 0;

1707 
	`wrôe_∑ck_fûe
();

1708 i‡(!
∑ck_to_°dout
) {

1709 
	`wrôe_ödex_fûe
();

1710 
	`puts
(
	`sha1_to_hex
(
obje˘_li°_sha1
));

1713 i‡(
¥ogªss
)

1714 
	`Ârötf
(
°dîr
, "Total %d (delta %d),Ñeused %d (delta %d)\n",

1715 
wrôãn
, 
wrôãn_dñè
, 
ªu£d
, 
ªu£d_dñè
);

1717 
	}
}

	@builtin-pack-refs.c

1 
	~"ˇche.h
"

2 
	~"ªfs.h
"

3 
	~"obje˘.h
"

4 
	~"èg.h
"

6 c⁄° 
	gbuûtö_∑ck_ªfs_ußge
[] =

9 
	sªf_to_¥u√
 {

10 
ªf_to_¥u√
 *
	m√xt
;

11 
	msha1
[20];

12 
	m«me
[
FLEX_ARRAY
];

15 
	s∑ck_ªfs_cb_d©a
 {

16 
	m¥u√
;

17 
	mÆl
;

18 
ªf_to_¥u√
 *
	mªf_to_¥u√
;

19 
FILE
 *
	mªfs_fûe
;

22 
	$do_nŸ_¥u√
(
Êags
)

27  (
Êags
 & (
REF_ISSYMREF
|
REF_ISPACKED
));

28 
	}
}

30 
	$h™dÀ_⁄e_ªf
(c⁄° *
∑th
, c⁄° *
sha1
,

31 
Êags
, *
cb_d©a
)

33 
∑ck_ªfs_cb_d©a
 *
cb
 = 
cb_d©a
;

34 
is_èg_ªf
;

37 i‡((
Êags
 & 
REF_ISSYMREF
))

39 
is_èg_ªf
 = !
	`°∫cmp
(
∑th
, "refs/tags/", 10);

42 i‡(!
cb
->
Æl
 && !
is_èg_ªf
 && !(
Êags
 & 
REF_ISPACKED
))

45 
	`Ârötf
(
cb
->
ªfs_fûe
, "%†%s\n", 
	`sha1_to_hex
(
sha1
), 
∑th
);

46 i‡(
is_èg_ªf
) {

47 
obje˘
 *
o
 = 
	`∑r£_obje˘
(
sha1
);

48 i‡(
o
->
ty≥
 =
OBJ_TAG
) {

49 
o
 = 
	`dîef_èg
(o, 
∑th
, 0);

50 i‡(
o
)

51 
	`Ârötf
(
cb
->
ªfs_fûe
, "^%s\n",

52 
	`sha1_to_hex
(
o
->
sha1
));

56 i‡(
cb
->
¥u√
 && !
	`do_nŸ_¥u√
(
Êags
)) {

57 
«mñí
 = 
	`°æí
(
∑th
) + 1;

58 
ªf_to_¥u√
 *
n
 = 
	`xˇŒoc
(1, (*nË+ 
«mñí
);

59 
	`hash˝y
(
n
->
sha1
, sha1);

60 
	`°r˝y
(
n
->
«me
, 
∑th
);

61 
n
->
√xt
 = 
cb
->
ªf_to_¥u√
;

62 
cb
->
ªf_to_¥u√
 = 
n
;

65 
	}
}

68 
	$¥u√_ªf
(
ªf_to_¥u√
 *
r
)

70 
ªf_lock
 *
lock
 = 
	`lock_ªf_sha1
(
r
->
«me
 + 5,Ñ->
sha1
);

72 i‡(
lock
) {

73 
	`u∆ök
(
	`gô_∑th
("%s", 
r
->
«me
));

74 
	`u∆ock_ªf
(
lock
);

76 
	}
}

78 
	$¥u√_ªfs
(
ªf_to_¥u√
 *
r
)

80 
r
) {

81 
	`¥u√_ªf
(
r
);

82 
r
 =Ñ->
√xt
;

84 
	}
}

86 
lock_fûe
 
	g∑cked
;

88 
	$cmd_∑ck_ªfs
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

90 
fd
, 
i
;

91 
∑ck_ªfs_cb_d©a
 
cbd©a
;

93 
	`mem£t
(&
cbd©a
, 0, (cbdata));

95 
cbd©a
.
¥u√
 = 1;

96 
i
 = 1; i < 
¨gc
; i++) {

97 c⁄° *
¨g
 = 
¨gv
[
i
];

98 i‡(!
	`°rcmp
(
¨g
, "--prune")) {

99 
cbd©a
.
¥u√
 = 1;

102 i‡(!
	`°rcmp
(
¨g
, "--no-prune")) {

103 
cbd©a
.
¥u√
 = 0;

106 i‡(!
	`°rcmp
(
¨g
, "--all")) {

107 
cbd©a
.
Æl
 = 1;

113 i‡(
i
 !
¨gc
)

114 
	`ußge
(
buûtö_∑ck_ªfs_ußge
);

116 
fd
 = 
	`hﬁd_lock_fûe_f‹_upd©e
(&
∑cked
, 
	`gô_∑th
("packed-refs"), 1);

117 
cbd©a
.
ªfs_fûe
 = 
	`fd›í
(
fd
, "w");

118 i‡(!
cbd©a
.
ªfs_fûe
)

119 
	`dõ
("unableÅo createÑef-pack file structure (%s)",

120 
	`°ªº‹
(
î∫o
));

123 
	`Ârötf
(
cbd©a
.
ªfs_fûe
, "#Öack-refs with:Öeeled \n");

125 
	`f‹_óch_ªf
(
h™dÀ_⁄e_ªf
, &
cbd©a
);

126 
	`fÊush
(
cbd©a
.
ªfs_fûe
);

127 
	`fsync
(
fd
);

128 
	`f˛o£
(
cbd©a
.
ªfs_fûe
);

129 i‡(
	`commô_lock_fûe
(&
∑cked
) < 0)

130 
	`dõ
("u«bÀÅÿovîwrôêﬁdÑef-∑ck fûê(%s)", 
	`°ªº‹
(
î∫o
));

131 i‡(
cbd©a
.
¥u√
)

132 
	`¥u√_ªfs
(
cbd©a
.
ªf_to_¥u√
);

134 
	}
}

	@builtin-prune-packed.c

1 
	~"buûtö.h
"

2 
	~"ˇche.h
"

4 c⁄° 
	g¥u√_∑cked_ußge
[] =

7 
	#DRY_RUN
 01

	)

8 
	#VERBOSE
 02

	)

10 
	$¥u√_dú
(
i
, 
DIR
 *
dú
, *
∑th«me
, 
Àn
, 
›ts
)

12 
dúít
 *
de
;

13 
hex
[40];

15 
	`•rötf
(
hex
, "%02x", 
i
);

16 (
de
 = 
	`ªaddú
(
dú
)Ë!
NULL
) {

17 
sha1
[20];

18 i‡(
	`°æí
(
de
->
d_«me
) != 38)

20 
	`mem˝y
(
hex
+2, 
de
->
d_«me
, 38);

21 i‡(
	`gë_sha1_hex
(
hex
, 
sha1
))

23 i‡(!
	`has_sha1_∑ck
(
sha1
, 
NULL
))

25 
	`mem˝y
(
∑th«me
 + 
Àn
, 
de
->
d_«me
, 38);

26 i‡(
›ts
 & 
DRY_RUN
)

27 
	`¥ötf
("rm -‡%s\n", 
∑th«me
);

28 i‡(
	`u∆ök
(
∑th«me
) < 0)

29 
	`îr‹
("u«bÀÅÿu∆ök %s", 
∑th«me
);

31 
∑th«me
[
Àn
] = 0;

32 
	`rmdú
(
∑th«me
);

33 
	}
}

35 
	$¥u√_∑cked_obje˘s
(
›ts
)

37 
i
;

38 
∑th«me
[
PATH_MAX
];

39 c⁄° *
dú
 = 
	`gë_obje˘_dúe˘‹y
();

40 
Àn
 = 
	`°æí
(
dú
);

42 i‡(
Àn
 > 
PATH_MAX
 - 42)

43 
	`dõ
("impossible object directory");

44 
	`mem˝y
(
∑th«me
, 
dú
, 
Àn
);

45 i‡(
Àn
 && 
∑th«me
[len-1] != '/')

46 
∑th«me
[
Àn
++] = '/';

47 
i
 = 0; i < 256; i++) {

48 
DIR
 *
d
;

50 
	`•rötf
(
∑th«me
 + 
Àn
, "%02x/", 
i
);

51 
d
 = 
	`›ídú
(
∑th«me
);

52 i‡(
›ts
 =
VERBOSE
 && (
d
 || 
i
 == 255))

53 
	`Ârötf
(
°dîr
, "Removing unused objects %d%%...\015",

54 ((
i
+1) * 100) / 256);

55 i‡(!
d
)

57 
	`¥u√_dú
(
i
, 
d
, 
∑th«me
, 
Àn
 + 3, 
›ts
);

58 
	`˛o£dú
(
d
);

60 i‡(
›ts
 =
VERBOSE
)

61 
	`Ârötf
(
°dîr
, "\nDone.\n");

62 
	}
}

64 
	$cmd_¥u√_∑cked
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

66 
i
;

67 
›ts
 = 
VERBOSE
;

69 
i
 = 1; i < 
¨gc
; i++) {

70 c⁄° *
¨g
 = 
¨gv
[
i
];

72 i‡(*
¨g
 == '-') {

73 i‡(!
	`°rcmp
(
¨g
, "-n"))

74 
›ts
 |
DRY_RUN
;

75 i‡(!
	`°rcmp
(
¨g
, "-q"))

76 
›ts
 &~
VERBOSE
;

78 
	`ußge
(
¥u√_∑cked_ußge
);

82 
	`ußge
(
¥u√_∑cked_ußge
);

84 
	`sync
();

85 
	`¥u√_∑cked_obje˘s
(
›ts
);

87 
	}
}

	@builtin-prune.c

1 
	~"ˇche.h
"

2 
	~"commô.h
"

3 
	~"diff.h
"

4 
	~"ªvisi⁄.h
"

5 
	~"buûtö.h
"

6 
	~"ªachabÀ.h
"

8 c⁄° 
	g¥u√_ußge
[] = "git-prune [-n]";

9 
	gshow_⁄ly
;

11 
	$¥u√_obje˘
(*
∑th
, c⁄° *
fûíame
, c⁄° *
sha1
)

13 
buf
[20];

14 c⁄° *
ty≥
;

16 i‡(
show_⁄ly
) {

17 i‡(
	`sha1_obje˘_öfo
(
sha1
, 
buf
, 
NULL
))

18 
ty≥
 = "unknown";

20 
ty≥
 = 
buf
;

21 
	`¥ötf
("%†%s\n", 
	`sha1_to_hex
(
sha1
), 
ty≥
);

24 
	`u∆ök
(
	`mk∑th
("%s/%s", 
∑th
, 
fûíame
));

25 
	`rmdú
(
∑th
);

27 
	}
}

29 
	$¥u√_dú
(
i
, *
∑th
)

31 
DIR
 *
dú
 = 
	`›ídú
(
∑th
);

32 
dúít
 *
de
;

34 i‡(!
dú
)

37 (
de
 = 
	`ªaddú
(
dú
)Ë!
NULL
) {

38 
«me
[100];

39 
sha1
[20];

40 
Àn
 = 
	`°æí
(
de
->
d_«me
);

42 
Àn
) {

44 i‡(
de
->
d_«me
[1] != '.')

47 i‡(
de
->
d_«me
[0] != '.')

51 
	`•rötf
(
«me
, "%02x", 
i
);

52 
	`mem˝y
(
«me
+2, 
de
->
d_«me
, 
Àn
+1);

53 i‡(
	`gë_sha1_hex
(
«me
, 
sha1
) < 0)

60 i‡(
	`lookup_obje˘
(
sha1
))

63 
	`¥u√_obje˘
(
∑th
, 
de
->
d_«me
, 
sha1
);

66 
	`Ârötf
(
°dîr
, "bad sha1 fûe: %s/%s\n", 
∑th
, 
de
->
d_«me
);

68 
	`˛o£dú
(
dú
);

70 
	}
}

72 
	$¥u√_obje˘_dú
(c⁄° *
∑th
)

74 
i
;

75 
i
 = 0; i < 256; i++) {

76 
dú
[4096];

77 
	`•rötf
(
dú
, "%s/%02x", 
∑th
, 
i
);

78 
	`¥u√_dú
(
i
, 
dú
);

80 
	}
}

82 
	$cmd_¥u√
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

84 
i
;

85 
ªv_öfo
 
ªvs
;

87 
i
 = 1; i < 
¨gc
; i++) {

88 c⁄° *
¨g
 = 
¨gv
[
i
];

89 i‡(!
	`°rcmp
(
¨g
, "-n")) {

90 
show_⁄ly
 = 1;

93 
	`ußge
(
¥u√_ußge
);

96 
ßve_commô_buf„r
 = 0;

97 
	`öô_ªvisi⁄s
(&
ªvs
, 
¥efix
);

98 
	`m¨k_ªachabÀ_obje˘s
(&
ªvs
, 1);

100 
	`¥u√_obje˘_dú
(
	`gë_obje˘_dúe˘‹y
());

102 
	`sync
();

103 
	`¥u√_∑cked_obje˘s
(
show_⁄ly
);

105 
	}
}

	@builtin-push.c

4 
	~"ˇche.h
"

5 
	~"ªfs.h
"

6 
	~"run-comm™d.h
"

7 
	~"buûtö.h
"

9 
	#MAX_URI
 (16)

	)

11 c⁄° 
	gpush_ußge
[] = "git-push [--all] [--tags] [--receive-pack=<git-receive-pack>] [--repo=all] [-f | --force] [-v] [<repository> <refspec>...]";

13 
	gÆl
, 
	gègs
, 
	gf‹˚
, 
	gthö
 = 1, 
	gvîbo£
;

14 c⁄° *
	gª˚ivïack
;

16 
	#BUF_SIZE
 (2084)

	)

17 
	gbuf„r
[
BUF_SIZE
];

19 c⁄° **
	gªf•ec
;

20 
	gªf•ec_ƒ
;

22 
	$add_ªf•ec
(c⁄° *
ªf
)

24 
ƒ
 = 
ªf•ec_ƒ
 + 1;

25 
ªf•ec
 = 
	`xªÆloc
‘ef•ec, 
ƒ
 * (*));

26 
ªf•ec
[
ƒ
-1] = 
ªf
;

27 
ªf•ec_ƒ
 = 
ƒ
;

28 
	}
}

30 
	$ex∑nd_⁄e_ªf
(c⁄° *
ªf
, c⁄° *
sha1
, 
Êag
, *
cb_d©a
)

33 
ªf
 += 5;

35 i‡(!
	`°∫cmp
(
ªf
, "tags/", 5))

36 
	`add_ªf•ec
(
	`x°rdup
(
ªf
));

38 
	}
}

40 
	$ex∑nd_ªf•ecs
()

42 i‡(
Æl
) {

43 i‡(
ªf•ec_ƒ
)

44 
	`dõ
("cannot mix '--all'ándáÑefspec");

52 i‡(!
ègs
)

54 
	`f‹_óch_ªf
(
ex∑nd_⁄e_ªf
, 
NULL
);

55 
	}
}

57 
	swûdˇrd_cb
 {

58 c⁄° *
	m‰om_¥efix
;

59 
	m‰om_¥efix_Àn
;

60 c⁄° *
	mto_¥efix
;

61 
	mto_¥efix_Àn
;

62 
	mf‹˚
;

65 
	$ex∑nd_wûdˇrd_ªf
(c⁄° *
ªf
, c⁄° *
sha1
, 
Êag
, *
cb_d©a
)

67 
wûdˇrd_cb
 *
cb
 = 
cb_d©a
;

68 
Àn
 = 
	`°æí
(
ªf
);

69 *
ex∑nded
, *
√wªf
;

71 i‡(
Àn
 < 
cb
->
‰om_¥efix_Àn
 ||

72 
	`memcmp
(
cb
->
‰om_¥efix
, 
ªf
, cb->
‰om_¥efix_Àn
))

74 
ex∑nded
 = 
	`xmÆloc
(
Àn
 * 2 + 
cb
->
f‹˚
 +

75 (
cb
->
to_¥efix_Àn
 - cb->
‰om_¥efix_Àn
) + 2);

76 
√wªf
 = 
ex∑nded
 + 
cb
->
f‹˚
;

77 i‡(
cb
->
f‹˚
)

78 
ex∑nded
[0] = '+';

79 
	`mem˝y
(
√wªf
, 
ªf
, 
Àn
);

80 
√wªf
[
Àn
] = ':';

81 
	`mem˝y
(
√wªf
 + 
Àn
 + 1, 
cb
->
to_¥efix
, cb->
to_¥efix_Àn
);

82 
	`°r˝y
(
√wªf
 + 
Àn
 + 1 + 
cb
->
to_¥efix_Àn
,

83 
ªf
 + 
cb
->
‰om_¥efix_Àn
);

84 
	`add_ªf•ec
(
ex∑nded
);

86 
	}
}

88 
	$wûdˇrd_ªf
(c⁄° *
ªf
)

90 
Àn
;

91 c⁄° *
cﬁ⁄
;

92 
wûdˇrd_cb
 
cb
;

94 
	`mem£t
(&
cb
, 0, (cb));

95 i‡(
ªf
[0] == '+') {

96 
cb
.
f‹˚
 = 1;

97 
ªf
++;

99 
Àn
 = 
	`°æí
(
ªf
);

100 
cﬁ⁄
 = 
	`°rchr
(
ªf
, ':');

101 i‡(! (
cﬁ⁄
 && 
ªf
 < colon &&

102 
cﬁ⁄
[-2] == '/' && colon[-1] == '*' &&

104 7 <
Àn
 &&

105 
ªf
[
Àn
-2] == '/' &&Ñef[len-1] == '*') )

107 
cb
.
‰om_¥efix
 = 
ªf
;

108 
cb
.
‰om_¥efix_Àn
 = 
cﬁ⁄
 - 
ªf
 - 1;

109 
cb
.
to_¥efix
 = 
cﬁ⁄
 + 1;

110 
cb
.
to_¥efix_Àn
 = 
Àn
 - (
cﬁ⁄
 - 
ªf
) - 2;

111 
	`f‹_óch_ªf
(
ex∑nd_wûdˇrd_ªf
, &
cb
);

113 
	}
}

115 
	$£t_ªf•ecs
(c⁄° **
ªfs
, 
ƒ
)

117 i‡(
ƒ
) {

118 
i
;

119 
i
 = 0; i < 
ƒ
; i++) {

120 c⁄° *
ªf
 = 
ªfs
[
i
];

121 i‡(!
	`°rcmp
("èg", 
ªf
)) {

122 *
èg
;

123 
Àn
;

124 i‡(
ƒ
 <++
i
)

125 
	`dõ
("tag shorthand without <tag>");

126 
Àn
 = 
	`°æí
(
ªfs
[
i
]) + 11;

127 
èg
 = 
	`xmÆloc
(
Àn
);

128 
	`°r˝y
(
èg
, "refs/tags/");

129 
	`°rˇt
(
èg
, 
ªfs
[
i
]);

130 
ªf
 = 
èg
;

132 i‡(
	`wûdˇrd_ªf
(
ªf
))

134 
	`add_ªf•ec
(
ªf
);

137 
	`ex∑nd_ªf•ecs
();

138 
	}
}

140 
	$gë_ªmŸes_uri
(c⁄° *
ªpo
, c⁄° *
uri
[
MAX_URI
])

142 
n
 = 0;

143 
FILE
 *
f
 = 
	`f›í
(
	`gô_∑th
("ªmŸes/%s", 
ªpo
), "r");

144 
has_ex∂icô_ªf•ec
 = 
ªf•ec_ƒ
 || 
Æl
 || 
ègs
;

146 i‡(!
f
)

148 
	`fgës
(
buf„r
, 
BUF_SIZE
, 
f
)) {

149 
is_ªf•ec
;

150 *
s
, *
p
;

152 i‡(!
	`°∫cmp
("URL:", 
buf„r
, 4)) {

153 
is_ªf•ec
 = 0;

154 
s
 = 
buf„r
 + 4;

155 } i‡(!
	`°∫cmp
("Push:", 
buf„r
, 5)) {

156 
is_ªf•ec
 = 1;

157 
s
 = 
buf„r
 + 5;

162 
	`is•a˚
(*
s
))

163 
s
++;

164 i‡(!*
s
)

168 
p
 = 
s
 + 
	`°æí
(s);

169 
	`is•a˚
(
p
[-1]))

170 *--
p
 = 0;

172 i‡(!
is_ªf•ec
) {

173 i‡(
n
 < 
MAX_URI
)

174 
uri
[
n
++] = 
	`x°rdup
(
s
);

176 
	`îr‹
("m‹êth™ %d URL'†•ecifõd, ign‹ögÅhêª°", 
MAX_URI
);

178 i‡(
is_ªf•ec
 && !
has_ex∂icô_ªf•ec
) {

179 i‡(!
	`wûdˇrd_ªf
(
s
))

180 
	`add_ªf•ec
(
	`x°rdup
(
s
));

183 
	`f˛o£
(
f
);

184 i‡(!
n
)

185 
	`dõ
("ªmŸê'%s' ha†nÿURL", 
ªpo
);

186  
n
;

187 
	}
}

189 c⁄° **
	gc⁄fig_uri
;

190 c⁄° *
	gc⁄fig_ªpo
;

191 
	gc⁄fig_ªpo_Àn
;

192 
	gc⁄fig_cuºít_uri
;

193 
	gc⁄fig_gë_ªf•ecs
;

194 
	gc⁄fig_gë_ª˚ivïack
;

196 
	$gë_ªmŸe_c⁄fig
(c⁄° * 
key
, c⁄° * 
vÆue
)

198 i‡(!
	`°∫cmp
(
key
, "remote.", 7) &&

199 !
	`°∫cmp
(
key
 + 7, 
c⁄fig_ªpo
, 
c⁄fig_ªpo_Àn
)) {

200 i‡(!
	`°rcmp
(
key
 + 7 + 
c⁄fig_ªpo_Àn
, ".url")) {

201 i‡(
c⁄fig_cuºít_uri
 < 
MAX_URI
)

202 
c⁄fig_uri
[
c⁄fig_cuºít_uri
++] = 
	`x°rdup
(
vÆue
);

204 
	`îr‹
("m‹êth™ %d URL'†•ecifõd, ign‹ögÅhêª°", 
MAX_URI
);

206 i‡(
c⁄fig_gë_ªf•ecs
 &&

207 !
	`°rcmp
(
key
 + 7 + 
c⁄fig_ªpo_Àn
, ".push")) {

208 i‡(!
	`wûdˇrd_ªf
(
vÆue
))

209 
	`add_ªf•ec
(
	`x°rdup
(
vÆue
));

211 i‡(
c⁄fig_gë_ª˚ivïack
 &&

212 !
	`°rcmp
(
key
 + 7 + 
c⁄fig_ªpo_Àn
, ".receivepack")) {

213 i‡(!
ª˚ivïack
) {

214 *
Ω
 = 
	`xmÆloc
(
	`°æí
(
vÆue
) + 16);

215 
	`•rötf
(
Ω
, "--ª˚ive-∑ck=%s", 
vÆue
);

216 
ª˚ivïack
 = 
Ω
;

218 
	`îr‹
("moreÅhan oneÑeceivepack given, usingÅhe first");

222 
	}
}

224 
	$gë_c⁄fig_ªmŸes_uri
(c⁄° *
ªpo
, c⁄° *
uri
[
MAX_URI
])

226 
c⁄fig_ªpo_Àn
 = 
	`°æí
(
ªpo
);

227 
c⁄fig_ªpo
 = 
ªpo
;

228 
c⁄fig_cuºít_uri
 = 0;

229 
c⁄fig_uri
 = 
uri
;

230 
c⁄fig_gë_ªf•ecs
 = !(
ªf•ec_ƒ
 || 
Æl
 || 
ègs
);

231 
c⁄fig_gë_ª˚ivïack
 = (
ª˚ivïack
 =
NULL
);

233 
	`gô_c⁄fig
(
gë_ªmŸe_c⁄fig
);

234  
c⁄fig_cuºít_uri
;

235 
	}
}

237 
	$gë_bønches_uri
(c⁄° *
ªpo
, c⁄° *
uri
[
MAX_URI
])

239 c⁄° *
¶ash
 = 
	`°rchr
(
ªpo
, '/');

240 
n
 = 
¶ash
 ? sœsh - 
ªpo
 : 1000;

241 
FILE
 *
f
 = 
	`f›í
(
	`gô_∑th
("bønches/%.*s", 
n
, 
ªpo
), "r");

242 *
s
, *
p
;

243 
Àn
;

245 i‡(!
f
)

247 
s
 = 
	`fgës
(
buf„r
, 
BUF_SIZE
, 
f
);

248 
	`f˛o£
(
f
);

249 i‡(!
s
)

251 
	`is•a˚
(*
s
))

252 
s
++;

253 i‡(!*
s
)

255 
p
 = 
s
 + 
	`°æí
(s);

256 
	`is•a˚
(
p
[-1]))

257 *--
p
 = 0;

258 
Àn
 = 
p
 - 
s
;

259 i‡(
¶ash
)

260 
Àn
 +
	`°æí
(
¶ash
);

261 
p
 = 
	`xmÆloc
(
Àn
 + 1);

262 
	`°r˝y
(
p
, 
s
);

263 i‡(
¶ash
)

264 
	`°rˇt
(
p
, 
¶ash
);

265 
uri
[0] = 
p
;

267 
	}
}

275 
	$ªad_c⁄fig
(c⁄° *
ªpo
, c⁄° *
uri
[
MAX_URI
])

277 
n
;

279 i‡(*
ªpo
 != '/') {

280 
n
 = 
	`gë_ªmŸes_uri
(
ªpo
, 
uri
);

281 i‡(
n
 > 0)

282  
n
;

284 
n
 = 
	`gë_c⁄fig_ªmŸes_uri
(
ªpo
, 
uri
);

285 i‡(
n
 > 0)

286  
n
;

288 
n
 = 
	`gë_bønches_uri
(
ªpo
, 
uri
);

289 i‡(
n
 > 0)

290  
n
;

293 
uri
[0] = 
ªpo
;

295 
	}
}

297 
	$do_push
(c⁄° *
ªpo
)

299 c⁄° *
uri
[
MAX_URI
];

300 
i
, 
n
;

301 
comm⁄_¨gc
;

302 c⁄° **
¨gv
;

303 
¨gc
;

305 
n
 = 
	`ªad_c⁄fig
(
ªpo
, 
uri
);

306 i‡(
n
 <= 0)

307 
	`dõ
("badÑïosô‹y '%s'", 
ªpo
);

309 
¨gv
 = 
	`xmÆloc
((
ªf•ec_ƒ
 + 10) * (*));

310 
¨gv
[0] = "dummy-send-pack";

311 
¨gc
 = 1;

312 i‡(
Æl
)

313 
¨gv
[
¨gc
++] = "--all";

314 i‡(
f‹˚
)

315 
¨gv
[
¨gc
++] = "--force";

316 i‡(
ª˚ivïack
)

317 
¨gv
[
¨gc
++] = 
ª˚ivïack
;

318 
comm⁄_¨gc
 = 
¨gc
;

320 
i
 = 0; i < 
n
; i++) {

321 
îr
;

322 
de°_¨gc
 = 
comm⁄_¨gc
;

323 
de°_ªf•ec_ƒ
 = 
ªf•ec_ƒ
;

324 c⁄° **
de°_ªf•ec
 = 
ªf•ec
;

325 c⁄° *
de°
 = 
uri
[
i
];

326 c⁄° *
£ndî
 = "git-send-pack";

327 i‡(!
	`°∫cmp
(
de°
, "http://", 7) ||

328 !
	`°∫cmp
(
de°
, "https://", 8))

329 
£ndî
 = "git-http-push";

330 i‡(
thö
)

331 
¨gv
[
de°_¨gc
++] = "--thin";

332 
¨gv
[0] = 
£ndî
;

333 
¨gv
[
de°_¨gc
++] = 
de°
;

334 
de°_ªf•ec_ƒ
--)

335 
¨gv
[
de°_¨gc
++] = *
de°_ªf•ec
++;

336 
¨gv
[
de°_¨gc
] = 
NULL
;

337 i‡(
vîbo£
)

338 
	`Ârötf
(
°dîr
, "PushögÅÿ%s\n", 
de°
);

339 
îr
 = 
	`run_comm™d_v
(
¨gv
);

340 i‡(!
îr
)

342 
îr
) {

343 -
ERR_RUN_COMMAND_FORK
:

344 
	`dõ
("u«bÀÅÿf‹k f‹ %s", 
£ndî
);

345 -
ERR_RUN_COMMAND_EXEC
:

346 
	`dõ
("u«bÀÅÿexe¯%s", 
£ndî
);

347 -
ERR_RUN_COMMAND_WAITPID
:

348 -
ERR_RUN_COMMAND_WAITPID_WRONG_PID
:

349 -
ERR_RUN_COMMAND_WAITPID_SIGNAL
:

350 -
ERR_RUN_COMMAND_WAITPID_NOEXIT
:

351 
	`dõ
("%†dõd wôh så™gêîr‹", 
£ndî
);

353  -
îr
;

357 
	}
}

359 
	$cmd_push
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

361 
i
;

362 c⁄° *
ªpo
 = "origin";

364 
i
 = 1; i < 
¨gc
; i++) {

365 c⁄° *
¨g
 = 
¨gv
[
i
];

367 i‡(
¨g
[0] != '-') {

368 
ªpo
 = 
¨g
;

369 
i
++;

372 i‡(!
	`°rcmp
(
¨g
, "-v")) {

373 
vîbo£
=1;

376 i‡(!
	`°∫cmp
(
¨g
, "--repo=", 7)) {

377 
ªpo
 = 
¨g
+7;

380 i‡(!
	`°rcmp
(
¨g
, "--all")) {

381 
Æl
 = 1;

384 i‡(!
	`°rcmp
(
¨g
, "--tags")) {

385 
ègs
 = 1;

388 i‡(!
	`°rcmp
(
¨g
, "--force") || !strcmp(arg, "-f")) {

389 
f‹˚
 = 1;

392 i‡(!
	`°rcmp
(
¨g
, "--thin")) {

393 
thö
 = 1;

396 i‡(!
	`°rcmp
(
¨g
, "--no-thin")) {

397 
thö
 = 0;

400 i‡(!
	`°∫cmp
(
¨g
, "--receive-pack=", 15)) {

401 
ª˚ivïack
 = 
¨g
;

404 i‡(!
	`°∫cmp
(
¨g
, "--exec=", 7)) {

405 
ª˚ivïack
 = 
¨g
;

408 
	`ußge
(
push_ußge
);

410 
	`£t_ªf•ecs
(
¨gv
 + 
i
, 
¨gc
 - i);

411  
	`do_push
(
ªpo
);

412 
	}
}

	@builtin-read-tree.c

7 
	~"ˇche.h
"

8 
	~"obje˘.h
"

9 
	~"åì.h
"

10 
	~"åì-wÆk.h
"

11 
	~"ˇche-åì.h
"

12 
	~"u≈ack-åìs.h
"

13 
	~"dú.h
"

14 
	~"buûtö.h
"

16 
obje˘_li°
 *
	gåìs
;

18 
	$li°_åì
(*
sha1
)

20 
åì
 *åì = 
	`∑r£_åì_ödúe˘
(
sha1
);

21 i‡(!
åì
)

23 
	`obje˘_li°_≠≥nd
(&
åì
->
obje˘
, &
åìs
);

25 
	}
}

27 
	$ªad_ˇche_unmîged
()

29 
i
;

30 
ˇche_íåy
 **
d°
;

31 
ˇche_íåy
 *
œ°
 = 
NULL
;

33 
	`ªad_ˇche
();

34 
d°
 = 
a˘ive_ˇche
;

35 
i
 = 0; i < 
a˘ive_ƒ
; i++) {

36 
ˇche_íåy
 *
˚
 = 
a˘ive_ˇche
[
i
];

37 i‡(
	`˚_°age
(
˚
)) {

38 i‡(
œ°
 && !
	`°rcmp
(
˚
->
«me
,Üast->name))

40 
	`ˇche_åì_övÆid©e_∑th
(
a˘ive_ˇche_åì
, 
˚
->
«me
);

41 
œ°
 = 
˚
;

42 
˚
->
˚_mode
 = 0;

43 
˚
->
˚_Êags
 &~
	`ht⁄s
(
CE_STAGEMASK
);

45 *
d°
++ = 
˚
;

47 
a˘ive_ƒ
 = 
d°
 - 
a˘ive_ˇche
;

48  !!
œ°
;

49 
	}
}

51 
	$¥ime_ˇche_åì_ªc
(
ˇche_åì
 *
ô
, 
åì
 *tree)

53 
åì_desc
 
desc
;

54 
«me_íåy
 
íåy
;

55 
˙t
;

57 
	`hash˝y
(
ô
->
sha1
, 
åì
->
obje˘
.sha1);

58 
desc
.
buf
 = 
åì
->
buf„r
;

59 
desc
.
size
 = 
åì
->size;

60 
˙t
 = 0;

61 
	`åì_íåy
(&
desc
, &
íåy
)) {

62 i‡(!
	`S_ISDIR
(
íåy
.
mode
))

63 
˙t
++;

65 
ˇche_åì_sub
 *
sub
;

66 
åì
 *
subåì
 = 
	`lookup_åì
(
íåy
.
sha1
);

67 i‡(!
subåì
->
obje˘
.
∑r£d
)

68 
	`∑r£_åì
(
subåì
);

69 
sub
 = 
	`ˇche_åì_sub
(
ô
, 
íåy
.
∑th
);

70 
sub
->
ˇche_åì
 = 
	`ˇche_åì
();

71 
	`¥ime_ˇche_åì_ªc
(
sub
->
ˇche_åì
, 
subåì
);

72 
˙t
 +
sub
->
ˇche_åì
->
íåy_cou¡
;

75 
ô
->
íåy_cou¡
 = 
˙t
;

76 
	}
}

78 
	$¥ime_ˇche_åì
()

80 
åì
 *åì = (åì *)
åìs
->
ôem
;

81 i‡(!
åì
)

83 
a˘ive_ˇche_åì
 = 
	`ˇche_åì
();

84 
	`¥ime_ˇche_åì_ªc
(
a˘ive_ˇche_åì
, 
åì
);

86 
	}
}

88 c⁄° 
	gªad_åì_ußge
[] = "git-read-tree (<sha> | [[-m [--aggressive] | --reset | --prefix=<prefix>] [-u | -i]] [--exclude-per-directory=<gitignore>] <sha1> [<sha2> [<sha3>]])";

90 
lock_fûe
 
	glock_fûe
;

92 
	$cmd_ªad_åì
(
¨gc
, c⁄° **
¨gv
, c⁄° *
unu£d_¥efix
)

94 
i
, 
√wfd
, 
°age
 = 0;

95 
sha1
[20];

96 
u≈ack_åìs_›ti⁄s
 
›ts
;

98 
	`mem£t
(&
›ts
, 0, (opts));

99 
›ts
.
hód_idx
 = -1;

101 
	`£tup_gô_dúe˘‹y
();

102 
	`gô_c⁄fig
(
gô_deÁu…_c⁄fig
);

104 
√wfd
 = 
	`hﬁd_lock_fûe_f‹_upd©e
(&
lock_fûe
, 
	`gë_ödex_fûe
(), 1);

106 
	`gô_c⁄fig
(
gô_deÁu…_c⁄fig
);

108 
i
 = 1; i < 
¨gc
; i++) {

109 c⁄° *
¨g
 = 
¨gv
[
i
];

114 i‡(!
	`°rcmp
(
¨g
, "-u")) {

115 
›ts
.
upd©e
 = 1;

119 i‡(!
	`°rcmp
(
¨g
, "-v")) {

120 
›ts
.
vîbo£_upd©e
 = 1;

127 i‡(!
	`°rcmp
(
¨g
, "-i")) {

128 
›ts
.
ödex_⁄ly
 = 1;

136 i‡(!
	`°∫cmp
(
¨g
, "--prefix=", 9)) {

137 i‡(
°age
 || 
›ts
.
mîge
 || o±s.
¥efix
)

138 
	`ußge
(
ªad_åì_ußge
);

139 
›ts
.
¥efix
 = 
¨g
 + 9;

140 
›ts
.
mîge
 = 1;

141 
°age
 = 1;

142 i‡(
	`ªad_ˇche_unmîged
())

143 
	`dõ
("youÇeedÅoÑesolve your current index first");

151 i‡(!
	`°rcmp
(
¨g
, "--reset")) {

152 i‡(
°age
 || 
›ts
.
mîge
 || o±s.
¥efix
)

153 
	`ußge
(
ªad_åì_ußge
);

154 
›ts
.
ª£t
 = 1;

155 
›ts
.
mîge
 = 1;

156 
°age
 = 1;

157 
	`ªad_ˇche_unmîged
();

161 i‡(!
	`°rcmp
(
¨g
, "--trivial")) {

162 
›ts
.
åivül_mîges_⁄ly
 = 1;

166 i‡(!
	`°rcmp
(
¨g
, "--aggressive")) {

167 
›ts
.
aggªssive
 = 1;

172 i‡(!
	`°rcmp
(
¨g
, "-m")) {

173 i‡(
°age
 || 
›ts
.
mîge
 || o±s.
¥efix
)

174 
	`ußge
(
ªad_åì_ußge
);

175 i‡(
	`ªad_ˇche_unmîged
())

176 
	`dõ
("youÇeedÅoÑesolve your current index first");

177 
°age
 = 1;

178 
›ts
.
mîge
 = 1;

182 i‡(!
	`°∫cmp
(
¨g
, "--exclude-per-directory=", 24)) {

183 
dú_°ru˘
 *
dú
;

185 i‡(
›ts
.
dú
)

186 
	`dõ
("moreÅhan one --exclude-per-directoryáre given.");

188 
dú
 = 
	`ˇŒoc
(1, (*
›ts
.dir));

189 
dú
->
show_ign‹ed
 = 1;

190 
dú
->
ex˛ude_≥r_dú
 = 
¨g
 + 24;

191 
›ts
.
dú
 = dir;

200 i‡(1 < 
›ts
.
ödex_⁄ly
 + o±s.
upd©e
)

201 
	`ußge
(
ªad_åì_ußge
);

203 i‡(
	`gë_sha1
(
¨g
, 
sha1
))

204 
	`dõ
("NŸá vÆid obje˘Çamê%s", 
¨g
);

205 i‡(
	`li°_åì
(
sha1
) < 0)

206 
	`dõ
("ÁûedÅÿu≈ackÅªêobje˘ %s", 
¨g
);

207 
°age
++;

209 i‡((
›ts
.
upd©e
||›ts.
ödex_⁄ly
Ë&& !›ts.
mîge
)

210 
	`ußge
(
ªad_åì_ußge
);

211 i‡((
›ts
.
dú
 && !›ts.
upd©e
))

212 
	`dõ
("--exclude-per-directory is meaningless unless -u");

214 i‡(
›ts
.
¥efix
) {

215 
pfxÀn
 = 
	`°æí
(
›ts
.
¥efix
);

216 
pos
;

217 i‡(
›ts
.
¥efix
[
pfxÀn
-1] != '/')

218 
	`dõ
("prefix mustÉnd with /");

219 i‡(
°age
 != 2)

220 
	`dõ
("binding mergeÅakes only oneÅree");

221 
pos
 = 
	`ˇche_«me_pos
(
›ts
.
¥efix
, 
pfxÀn
);

222 i‡(0 <
pos
)

223 
	`dõ
("corrupt index file");

224 
pos
 = -pos-1;

225 i‡(
pos
 < 
a˘ive_ƒ
 &&

226 !
	`°∫cmp
(
a˘ive_ˇche
[
pos
]->
«me
, 
›ts
.
¥efix
, 
pfxÀn
))

227 
	`dõ
("subdúe˘‹y '%s'áÃódyÉxi°s.", 
›ts
.
¥efix
);

228 
pos
 = 
	`ˇche_«me_pos
(
›ts
.
¥efix
, 
pfxÀn
-1);

229 i‡(0 <
pos
)

230 
	`dõ
("file '%.*s'álreadyÉxists.",

231 
pfxÀn
-1, 
›ts
.
¥efix
);

234 i‡(
›ts
.
mîge
) {

235 i‡(
°age
 < 2)

236 
	`dõ
("ju° how dÿyouÉx≥˘ mêtÿmîgê%dÅªes?", 
°age
-1);

237 
°age
 - 1) {

239 
›ts
.
‚
 = o±s.
¥efix
 ? 
böd_mîge
 : 
⁄eway_mîge
;

242 
›ts
.
‚
 = 
twoway_mîge
;

246 
›ts
.
‚
 = 
thªeway_mîge
;

247 
	`ˇche_åì_‰ì
(&
a˘ive_ˇche_åì
);

251 i‡(
°age
 - 1 >= 3)

252 
›ts
.
hód_idx
 = 
°age
 - 2;

254 
›ts
.
hód_idx
 = 1;

257 
	`u≈ack_åìs
(
åìs
, &
›ts
);

265 i‡(
åìs
 &&Åªes->
ôem
 && !
›ts
.
¥efix
 && (!›ts.
mîge
 || (
°age
 == 2))) {

266 
	`ˇche_åì_‰ì
(&
a˘ive_ˇche_åì
);

267 
	`¥ime_ˇche_åì
();

270 i‡(
	`wrôe_ˇche
(
√wfd
, 
a˘ive_ˇche
, 
a˘ive_ƒ
) ||

271 
	`˛o£
(
√wfd
Ë|| 
	`commô_lock_fûe
(&
lock_fûe
))

272 
	`dõ
("unableÅo writeÇew index file");

274 
	}
}

	@builtin-reflog.c

1 
	~"ˇche.h
"

2 
	~"buûtö.h
"

3 
	~"commô.h
"

4 
	~"ªfs.h
"

5 
	~"dú.h
"

6 
	~"åì-wÆk.h
"

7 
	~"diff.h
"

8 
	~"ªvisi⁄.h
"

9 
	~"ªachabÀ.h
"

15 c⁄° 
	gªÊog_expúe_ußge
[] =

18 
	gdeÁu…_ªÊog_expúe
;

19 
	gdeÁu…_ªÊog_expúe_uƒóchabÀ
;

21 
	scmd_ªÊog_expúe_cb
 {

22 
ªv_öfo
 
	mªvs
;

23 
	mdry_run
;

24 
	m°Æefix
;

25 
	mvîbo£
;

26 
	mexpúe_tŸÆ
;

27 
	mexpúe_uƒóchabÀ
;

30 
	sexpúe_ªÊog_cb
 {

31 
FILE
 *
	m√wlog
;

32 c⁄° *
	mªf
;

33 
commô
 *
	mªf_commô
;

34 
cmd_ªÊog_expúe_cb
 *
	mcmd
;

37 
	#INCOMPLETE
 (1u<<10)

	)

38 
	#STUDYING
 (1u<<11)

	)

40 
	$åì_is_com∂ëe
(c⁄° *
sha1
)

42 
åì_desc
 
desc
;

43 
«me_íåy
 
íåy
;

44 
com∂ëe
;

45 
åì
 *tree;

47 
åì
 = 
	`lookup_åì
(
sha1
);

48 i‡(!
åì
)

50 i‡(
åì
->
obje˘
.
Êags
 & 
SEEN
)

52 i‡(
åì
->
obje˘
.
Êags
 & 
INCOMPLETE
)

55 
desc
.
buf
 = 
åì
->
buf„r
;

56 
desc
.
size
 = 
åì
->size;

57 i‡(!
desc
.
buf
) {

58 
ty≥
[20];

59 *
d©a
 = 
	`ªad_sha1_fûe
(
sha1
, 
ty≥
, &
desc
.
size
);

60 i‡(!
d©a
) {

61 
åì
->
obje˘
.
Êags
 |
INCOMPLETE
;

64 
desc
.
buf
 = 
d©a
;

65 
åì
->
buf„r
 = 
d©a
;

67 
com∂ëe
 = 1;

68 
	`åì_íåy
(&
desc
, &
íåy
)) {

69 i‡(!
	`has_sha1_fûe
(
íåy
.
sha1
) ||

70 (
	`S_ISDIR
(
íåy
.
mode
Ë&& !
	`åì_is_com∂ëe
”¡ry.
sha1
))) {

71 
åì
->
obje˘
.
Êags
 |
INCOMPLETE
;

72 
com∂ëe
 = 0;

75 
	`‰ì
(
åì
->
buf„r
);

76 
åì
->
buf„r
 = 
NULL
;

78 i‡(
com∂ëe
)

79 
åì
->
obje˘
.
Êags
 |
SEEN
;

80  
com∂ëe
;

81 
	}
}

83 
	$commô_is_com∂ëe
(
commô
 *commit)

85 
obje˘_¨øy
 
°udy
;

86 
obje˘_¨øy
 
found
;

87 
is_öcom∂ëe
 = 0;

88 
i
;

91 i‡(
commô
->
obje˘
.
Êags
 & 
SEEN
)

93 i‡(
commô
->
obje˘
.
Êags
 & 
INCOMPLETE
)

102 
	`mem£t
(&
°udy
, 0, (study));

103 
	`mem£t
(&
found
, 0, (found));

104 
	`add_obje˘_¨øy
(&
commô
->
obje˘
, 
NULL
, &
°udy
);

105 
	`add_obje˘_¨øy
(&
commô
->
obje˘
, 
NULL
, &
found
);

106 
commô
->
obje˘
.
Êags
 |
STUDYING
;

107 
°udy
.
ƒ
) {

108 
commô
 *
c
;

109 
commô_li°
 *
∑ª¡
;

111 
c
 = (
commô
 *)
°udy
.
obje˘s
[--°udy.
ƒ
].
ôem
;

112 i‡(!
c
->
obje˘
.
∑r£d
 && !
	`∑r£_obje˘
(c->obje˘.
sha1
))

113 
c
->
obje˘
.
Êags
 |
INCOMPLETE
;

115 i‡(
c
->
obje˘
.
Êags
 & 
INCOMPLETE
) {

116 
is_öcom∂ëe
 = 1;

119 i‡(
c
->
obje˘
.
Êags
 & 
SEEN
)

121 
∑ª¡
 = 
c
->
∑ª¡s
;Ö¨ít;Ö¨íà∑ª¡->
√xt
) {

122 
commô
 *
p
 = 
∑ª¡
->
ôem
;

123 i‡(
p
->
obje˘
.
Êags
 & 
STUDYING
)

125 
p
->
obje˘
.
Êags
 |
STUDYING
;

126 
	`add_obje˘_¨øy
(&
p
->
obje˘
, 
NULL
, &
°udy
);

127 
	`add_obje˘_¨øy
(&
p
->
obje˘
, 
NULL
, &
found
);

130 i‡(!
is_öcom∂ëe
) {

135 
i
 = 0; i < 
found
.
ƒ
; i++) {

136 
commô
 *
c
 =

137 (
commô
 *)
found
.
obje˘s
[
i
].
ôem
;

138 i‡(!
	`åì_is_com∂ëe
(
c
->
åì
->
obje˘
.
sha1
)) {

139 
is_öcom∂ëe
 = 1;

140 
c
->
obje˘
.
Êags
 |
INCOMPLETE
;

143 i‡(!
is_öcom∂ëe
) {

145 
i
 = 0; i < 
found
.
ƒ
; i++)

146 
found
.
obje˘s
[
i
].
ôem
->
Êags
 |
SEEN
;

150 
i
 = 0; i < 
found
.
ƒ
; i++)

151 
found
.
obje˘s
[
i
].
ôem
->
Êags
 &~
STUDYING
;

152 i‡(
is_öcom∂ëe
)

153 
commô
->
obje˘
.
Êags
 |
INCOMPLETE
;

163 
i
 = 0; i < 
found
.
ƒ
; i++)

164 
found
.
obje˘s
[
i
].
ôem
->
Êags
 |
SEEN
;

167 
	`‰ì
(
°udy
.
obje˘s
);

168 
	`‰ì
(
found
.
obje˘s
);

169  !
is_öcom∂ëe
;

170 
	}
}

172 
	$kìp_íåy
(
commô
 **
ô
, *
sha1
)

174 
commô
 *commit;

176 i‡(
	`is_nuŒ_sha1
(
sha1
))

178 
commô
 = 
	`lookup_commô_ª„ªn˚_gíéy
(
sha1
, 1);

179 i‡(!
commô
)

190 i‡(!
	`commô_is_com∂ëe
(
commô
))

192 *
ô
 = 
commô
;

194 
	}
}

196 
	$expúe_ªÊog_ít
(*
osha1
, *
nsha1
,

197 c⁄° *
emaû
, 
time°amp
, 
tz
,

198 c⁄° *
mesßge
, *
cb_d©a
)

200 
expúe_ªÊog_cb
 *
cb
 = 
cb_d©a
;

201 
commô
 *
ﬁd
, *
√w
;

203 i‡(
time°amp
 < 
cb
->
cmd
->
expúe_tŸÆ
)

204 
¥u√
;

206 
ﬁd
 = 
√w
 = 
NULL
;

207 i‡(
cb
->
cmd
->
°Æefix
 &&

208 (!
	`kìp_íåy
(&
ﬁd
, 
osha1
Ë|| !kìp_íåy(&
√w
, 
nsha1
)))

209 
¥u√
;

211 i‡(
time°amp
 < 
cb
->
cmd
->
expúe_uƒóchabÀ
) {

212 i‡(!
cb
->
ªf_commô
)

213 
¥u√
;

214 i‡(!
ﬁd
 && !
	`is_nuŒ_sha1
(
osha1
))

215 
ﬁd
 = 
	`lookup_commô_ª„ªn˚_gíéy
(
osha1
, 1);

216 i‡(!
√w
 && !
	`is_nuŒ_sha1
(
nsha1
))

217 
√w
 = 
	`lookup_commô_ª„ªn˚_gíéy
(
nsha1
, 1);

218 i‡((
ﬁd
 && !
	`ö_mîge_ba£s
(ﬁd, 
cb
->
ªf_commô
)) ||

219 (
√w
 && !
	`ö_mîge_ba£s
“ew, 
cb
->
ªf_commô
)))

220 
¥u√
;

223 i‡(
cb
->
√wlog
) {

224 
sign
 = (
tz
 < 0) ? '-' : '+';

225 
z⁄e
 = (
tz
 < 0) ? (-tz) :Åz;

226 
	`Ârötf
(
cb
->
√wlog
, "%s %s %s %lu %c%04d\t%s",

227 
	`sha1_to_hex
(
osha1
), sha1_to_hex(
nsha1
),

228 
emaû
, 
time°amp
, 
sign
, 
z⁄e
,

229 
mesßge
);

231 i‡(
cb
->
cmd
->
vîbo£
)

232 
	`¥ötf
("kì∞%s", 
mesßge
);

234 
¥u√
:

235 i‡(!
cb
->
√wlog
 || cb->
cmd
->
vîbo£
)

236 
	`¥ötf
("%•ru√ %s", 
cb
->
√wlog
 ? "" : "would ", 
mesßge
);

238 
	}
}

240 
	$expúe_ªÊog
(c⁄° *
ªf
, c⁄° *
sha1
, 
unu£d
, *
cb_d©a
)

242 
cmd_ªÊog_expúe_cb
 *
cmd
 = 
cb_d©a
;

243 
expúe_ªÊog_cb
 
cb
;

244 
ªf_lock
 *
lock
;

245 *
log_fûe
, *
√wlog_∑th
 = 
NULL
;

246 
°©us
 = 0;

248 
	`mem£t
(&
cb
, 0, (cb));

252 
lock
 = 
	`lock_™y_ªf_f‹_upd©e
(
ªf
, 
sha1
);

253 i‡(!
lock
)

254  
	`îr‹
("ˇ¬ŸÜockÑe‡'%s'", 
ªf
);

255 
log_fûe
 = 
	`x°rdup
(
	`gô_∑th
("logs/%s", 
ªf
));

256 i‡(!
	`fûe_exi°s
(
log_fûe
))

257 
föish
;

258 i‡(!
cmd
->
dry_run
) {

259 
√wlog_∑th
 = 
	`x°rdup
(
	`gô_∑th
("logs/%s.lock", 
ªf
));

260 
cb
.
√wlog
 = 
	`f›í
(
√wlog_∑th
, "w");

263 
cb
.
ªf_commô
 = 
	`lookup_commô_ª„ªn˚_gíéy
(
sha1
, 1);

264 
cb
.
ªf
 =Ñef;

265 
cb
.
cmd
 = cmd;

266 
	`f‹_óch_ªÊog_ít
(
ªf
, 
expúe_ªÊog_ít
, &
cb
);

267 
föish
:

268 i‡(
cb
.
√wlog
) {

269 i‡(
	`f˛o£
(
cb
.
√wlog
))

270 
°©us
 |
	`îr‹
("%s: %s", 
	`°ªº‹
(
î∫o
),

271 
√wlog_∑th
);

272 i‡(
	`ª«me
(
√wlog_∑th
, 
log_fûe
)) {

273 
°©us
 |
	`îr‹
("cannotÑename %sÅo %s",

274 
√wlog_∑th
, 
log_fûe
);

275 
	`u∆ök
(
√wlog_∑th
);

278 
	`‰ì
(
√wlog_∑th
);

279 
	`‰ì
(
log_fûe
);

280 
	`u∆ock_ªf
(
lock
);

281  
°©us
;

282 
	}
}

284 
	$ªÊog_expúe_c⁄fig
(c⁄° *
v¨
, c⁄° *
vÆue
)

286 i‡(!
	`°rcmp
(
v¨
, "gc.reflogexpire"))

287 
deÁu…_ªÊog_expúe
 = 
	`≠¥oxid©e
(
vÆue
);

288 i‡(!
	`°rcmp
(
v¨
, "gc.reflogexpireunreachable"))

289 
deÁu…_ªÊog_expúe_uƒóchabÀ
 = 
	`≠¥oxid©e
(
vÆue
);

291  
	`gô_deÁu…_c⁄fig
(
v¨
, 
vÆue
);

293 
	}
}

295 
	$cmd_ªÊog_expúe
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

297 
cmd_ªÊog_expúe_cb
 
cb
;

298 
now
 = 
	`time
(
NULL
);

299 
i
, 
°©us
, 
do_Æl
;

301 
	`gô_c⁄fig
(
ªÊog_expúe_c⁄fig
);

303 
ßve_commô_buf„r
 = 0;

304 
do_Æl
 = 
°©us
 = 0;

305 
	`mem£t
(&
cb
, 0, (cb));

307 i‡(!
deÁu…_ªÊog_expúe_uƒóchabÀ
)

308 
deÁu…_ªÊog_expúe_uƒóchabÀ
 = 
now
 - 30 * 24 * 3600;

309 i‡(!
deÁu…_ªÊog_expúe
)

310 
deÁu…_ªÊog_expúe
 = 
now
 - 90 * 24 * 3600;

311 
cb
.
expúe_tŸÆ
 = 
deÁu…_ªÊog_expúe
;

312 
cb
.
expúe_uƒóchabÀ
 = 
deÁu…_ªÊog_expúe_uƒóchabÀ
;

320 
i
 = 1; i < 
¨gc
; i++) {

321 c⁄° *
¨g
 = 
¨gv
[
i
];

322 i‡(!
	`°rcmp
(
¨g
, "--dry-run") || !strcmp(arg, "-n"))

323 
cb
.
dry_run
 = 1;

324 i‡(!
	`°∫cmp
(
¨g
, "--expire=", 9))

325 
cb
.
expúe_tŸÆ
 = 
	`≠¥oxid©e
(
¨g
 + 9);

326 i‡(!
	`°∫cmp
(
¨g
, "--expire-unreachable=", 21))

327 
cb
.
expúe_uƒóchabÀ
 = 
	`≠¥oxid©e
(
¨g
 + 21);

328 i‡(!
	`°rcmp
(
¨g
, "--stale-fix"))

329 
cb
.
°Æefix
 = 1;

330 i‡(!
	`°rcmp
(
¨g
, "--all"))

331 
do_Æl
 = 1;

332 i‡(!
	`°rcmp
(
¨g
, "--verbose"))

333 
cb
.
vîbo£
 = 1;

334 i‡(!
	`°rcmp
(
¨g
, "--")) {

335 
i
++;

338 i‡(
¨g
[0] == '-')

339 
	`ußge
(
ªÊog_expúe_ußge
);

343 i‡(
cb
.
°Æefix
) {

344 
	`öô_ªvisi⁄s
(&
cb
.
ªvs
, 
¥efix
);

345 i‡(
cb
.
vîbo£
)

346 
	`¥ötf
("MarkingÑeachable objects...");

347 
	`m¨k_ªachabÀ_obje˘s
(&
cb
.
ªvs
, 0);

348 i‡(
cb
.
vîbo£
)

349 
	`putch¨
('\n');

352 i‡(
do_Æl
)

353 
°©us
 |
	`f‹_óch_ªÊog
(
expúe_ªÊog
, &
cb
);

354 
i
 < 
¨gc
) {

355 c⁄° *
ªf
 = 
¨gv
[
i
++];

356 
sha1
[20];

357 i‡(!
	`ªsﬁve_ªf
(
ªf
, 
sha1
, 1, 
NULL
)) {

358 
°©us
 |
	`îr‹
("%†poöt†nowhîe!", 
ªf
);

361 
°©us
 |
	`expúe_ªÊog
(
ªf
, 
sha1
, 0, &
cb
);

363  
°©us
;

364 
	}
}

370 c⁄° 
	gªÊog_ußge
[] =

373 
	$cmd_ªÊog
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

376 i‡(
¨gc
 < 2 || *
¨gv
[1] == '-')

377  
	`cmd_log_ªÊog
(
¨gc
, 
¨gv
, 
¥efix
);

379 i‡(!
	`°rcmp
(
¨gv
[1], "show"))

380  
	`cmd_log_ªÊog
(
¨gc
 - 1, 
¨gv
 + 1, 
¥efix
);

382 i‡(!
	`°rcmp
(
¨gv
[1], "expire"))

383  
	`cmd_ªÊog_expúe
(
¨gc
 - 1, 
¨gv
 + 1, 
¥efix
);

386 
	`ußge
(
ªÊog_ußge
);

387 
	}
}

	@builtin-rerere.c

1 
	~"ˇche.h
"

2 
	~"∑th-li°.h
"

3 
	~"xdiff/xdiff.h
"

4 
	~"xdiff-öãrÁ˚.h
"

6 
	~<time.h
>

8 c⁄° 
	ggô_ªªª_ußge
[] =

12 
	gcutoff_n‹esﬁve
 = 15;

13 
	gcutoff_ªsﬁve
 = 60;

15 *
	gmîge_º_∑th
;

17 c⁄° *
	$º_∑th
(c⁄° *
«me
, c⁄° *
fûe
)

19  
	`gô_∑th
("º-ˇche/%s/%s", 
«me
, 
fûe
);

20 
	}
}

22 
	$ªad_º
(
∑th_li°
 *
º
)

24 
sha1
[20];

25 
buf
[
PATH_MAX
];

26 
FILE
 *
ö
 = 
	`f›í
(
mîge_º_∑th
, "r");

27 i‡(!
ö
)

29 
	`‰ód
(
buf
, 40, 1, 
ö
) == 1) {

30 
i
;

31 *
«me
;

32 i‡(
	`gë_sha1_hex
(
buf
, 
sha1
))

33 
	`dõ
("corrupt MERGE_RR");

34 
buf
[40] = '\0';

35 
«me
 = 
	`x°rdup
(
buf
);

36 i‡(
	`fgëc
(
ö
) != '\t')

37 
	`dõ
("corrupt MERGE_RR");

38 
i
 = 0; i < (
buf
Ë&& (buf[i] = 
	`fgëc
(
ö
)); i++)

40 i‡(
i
 =(
buf
))

41 
	`dõ
("filenameÅooÜong");

42 
	`∑th_li°_ö£π
(
buf
, 
º
)->
utû
 = 
	`x°rdup
(
«me
);

44 
	`f˛o£
(
ö
);

45 
	}
}

47 
lock_fûe
 
	gwrôe_lock
;

49 
	$wrôe_º
(
∑th_li°
 *
º
, 
out_fd
)

51 
i
;

52 
i
 = 0; i < 
º
->
ƒ
; i++) {

53 c⁄° *
∑th
 = 
º
->
ôems
[
i
].path;

54 
Àngth
 = 
	`°æí
(
∑th
) + 1;

55 i‡(
	`wrôe_ö_fuŒ
(
out_fd
, 
º
->
ôems
[
i
].
utû
, 40) != 40 ||

56 
	`wrôe_ö_fuŒ
(
out_fd
, "\t", 1) != 1 ||

57 
	`wrôe_ö_fuŒ
(
out_fd
, 
∑th
, 
Àngth
) !=Üength)

58 
	`dõ
("unableÅo writeÑerereÑecord");

60 
	`˛o£
(
out_fd
);

61  
	`commô_lock_fûe
(&
wrôe_lock
);

62 
	}
}

64 
	sbuf„r
 {

65 *
	m±r
;

66 
	mƒ
, 
	mÆloc
;

69 
	$≠≥nd_löe
(
buf„r
 *buf„r, c⁄° *
löe
)

71 
Àn
 = 
	`°æí
(
löe
);

73 i‡(
buf„r
->
ƒ
 + 
Àn
 > buf„r->
Æloc
) {

74 
buf„r
->
Æloc
 = 
	`Æloc_ƒ
(buf„r->
ƒ
 + 
Àn
);

75 
buf„r
->
±r
 = 
	`xªÆloc
(buf„r->±r, buf„r->
Æloc
);

77 
	`mem˝y
(
buf„r
->
±r
 + buf„r->
ƒ
, 
löe
, 
Àn
);

78 
buf„r
->
ƒ
 +
Àn
;

79 
	}
}

81 
	$h™dÀ_fûe
(c⁄° *
∑th
,

82 *
sha1
, c⁄° *
ouçut
)

84 
SHA_CTX
 
˘x
;

85 
buf
[1024];

86 
hunk
 = 0, 
hunk_no
 = 0;

87 
buf„r
 
möus
 = { 
NULL
, 0, 0 }, 
∂us
 = { NULL, 0, 0 };

88 
buf„r
 *
⁄e
 = &
möus
, *
two
 = &
∂us
;

89 
FILE
 *
f
 = 
	`f›í
(
∑th
, "r");

90 
FILE
 *
out
;

92 i‡(!
f
)

93  
	`îr‹
("CouldÇŸ o≥¿%s", 
∑th
);

95 i‡(
ouçut
) {

96 
out
 = 
	`f›í
(
ouçut
, "w");

97 i‡(!
out
) {

98 
	`f˛o£
(
f
);

99  
	`îr‹
("CouldÇŸ wrôê%s", 
ouçut
);

102 
out
 = 
NULL
;

104 i‡(
sha1
)

105 
	`SHA1_Inô
(&
˘x
);

107 
	`fgës
(
buf
, (buf), 
f
)) {

108 i‡(!
	`°∫cmp
("<<<<<<< ", 
buf
, 8))

109 
hunk
 = 1;

110 i‡(!
	`°∫cmp
("=======", 
buf
, 7))

111 
hunk
 = 2;

112 i‡(!
	`°∫cmp
(">>>>>>> ", 
buf
, 8)) {

113 
hunk_no
++;

114 
hunk
 = 0;

115 i‡(
	`memcmp
(
⁄e
->
±r
, 
two
->±r, o√->
ƒ
 <Åwo->nr ?

116 
⁄e
->
ƒ
 : 
two
->nr) > 0) {

117 
buf„r
 *
sw≠
 = 
⁄e
;

118 
⁄e
 = 
two
;

119 
two
 = 
sw≠
;

121 i‡(
out
) {

122 
	`Âuts
("<<<<<<<\n", 
out
);

123 
	`fwrôe
(
⁄e
->
±r
, o√->
ƒ
, 1, 
out
);

124 
	`Âuts
("=======\n", 
out
);

125 
	`fwrôe
(
two
->
±r
,Åwo->
ƒ
, 1, 
out
);

126 
	`Âuts
(">>>>>>>\n", 
out
);

128 i‡(
sha1
) {

129 
	`SHA1_Upd©e
(&
˘x
, 
⁄e
->
±r
, o√->
ƒ
);

130 
	`SHA1_Upd©e
(&
˘x
, "\0", 1);

131 
	`SHA1_Upd©e
(&
˘x
, 
two
->
±r
,Åwo->
ƒ
);

132 
	`SHA1_Upd©e
(&
˘x
, "\0", 1);

134 } i‡(
hunk
 == 1)

135 
	`≠≥nd_löe
(
⁄e
, 
buf
);

136 i‡(
hunk
 == 2)

137 
	`≠≥nd_löe
(
two
, 
buf
);

138 i‡(
out
)

139 
	`Âuts
(
buf
, 
out
);

142 
	`f˛o£
(
f
);

143 i‡(
out
)

144 
	`f˛o£
(
out
);

145 i‡(
sha1
)

146 
	`SHA1_FöÆ
(
sha1
, &
˘x
);

147  
hunk_no
;

148 
	}
}

150 
	$föd_c⁄Êi˘
(
∑th_li°
 *
c⁄Êi˘
)

152 
i
;

153 i‡(
	`ªad_ˇche
() < 0)

154  
	`îr‹
("CouldÇotÑead index");

155 
i
 = 0; i + 2 < 
a˘ive_ƒ
; i++) {

156 
ˇche_íåy
 *
e1
 = 
a˘ive_ˇche
[
i
];

157 
ˇche_íåy
 *
e2
 = 
a˘ive_ˇche
[
i
 + 1];

158 
ˇche_íåy
 *
e3
 = 
a˘ive_ˇche
[
i
 + 2];

159 i‡(
	`˚_°age
(
e1
Ë=1 && ce_°age(
e2
) == 2 &&

160 
	`˚_°age
(
e3
Ë=3 && 
	`˚_ßme_«me
(
e1
, 
e2
) &&

161 
	`˚_ßme_«me
(
e1
, 
e3
)) {

162 
	`∑th_li°_ö£π
((c⁄° *)
e1
->
«me
, 
c⁄Êi˘
);

163 
i
 += 3;

167 
	}
}

169 
	$mîge
(c⁄° *
«me
, c⁄° *
∑th
)

171 
ªt
;

172 
mmfûe_t
 
cur
, 
ba£
, 
Ÿhî
;

173 
mmbuf„r_t
 
ªsu…
 = {
NULL
, 0};

174 
xµ¨am_t
 
xµ
 = {
XDF_NEED_MINIMAL
};

176 i‡(
	`h™dÀ_fûe
(
∑th
, 
NULL
, 
	`º_∑th
(
«me
, "thisimage")) < 0)

179 i‡(
	`ªad_mmfûe
(&
cur
, 
	`º_∑th
(
«me
, "thisimage")) ||

180 
	`ªad_mmfûe
(&
ba£
, 
	`º_∑th
(
«me
, "preimage")) ||

181 
	`ªad_mmfûe
(&
Ÿhî
, 
	`º_∑th
(
«me
, "postimage")))

183 
ªt
 = 
	`xdl_mîge
(&
ba£
, &
cur
, "", &
Ÿhî
, "",

184 &
xµ
, 
XDL_MERGE_ZEALOUS
, &
ªsu…
);

185 i‡(!
ªt
) {

186 
FILE
 *
f
 = 
	`f›í
(
∑th
, "w");

187 i‡(!
f
)

188  
	`îr‹
("CouldÇŸ wrôêtÿ%s", 
∑th
);

189 
	`fwrôe
(
ªsu…
.
±r
,Ñesu….
size
, 1, 
f
);

190 
	`f˛o£
(
f
);

193 
	`‰ì
(
cur
.
±r
);

194 
	`‰ì
(
ba£
.
±r
);

195 
	`‰ì
(
Ÿhî
.
±r
);

196 
	`‰ì
(
ªsu…
.
±r
);

198  
ªt
;

199 
	}
}

201 
	$u∆ök_º_ôem
(c⁄° *
«me
)

203 
	`u∆ök
(
	`º_∑th
(
«me
, "thisimage"));

204 
	`u∆ök
(
	`º_∑th
(
«me
, "preimage"));

205 
	`u∆ök
(
	`º_∑th
(
«me
, "postimage"));

206 
	`rmdú
(
	`gô_∑th
("º-ˇche/%s", 
«me
));

207 
	}
}

209 
	$g¨bage_cﬁÀ˘
(
∑th_li°
 *
º
)

211 
∑th_li°
 
to_ªmove
 = { 
NULL
, 0, 0, 1 };

212 
buf
[1024];

213 
DIR
 *
dú
;

214 
dúít
 *
e
;

215 
Àn
, 
i
, 
cutoff
;

216 
time_t
 
now
 = 
	`time
(
NULL
), 
thí
;

218 
	`°æ˝y
(
buf
, 
	`gô_∑th
("rr-cache"), (buf));

219 
Àn
 = 
	`°æí
(
buf
);

220 
dú
 = 
	`›ídú
(
buf
);

221 
	`°r˝y
(
buf
 + 
Àn
++, "/");

222 (
e
 = 
	`ªaddú
(
dú
))) {

223 c⁄° *
«me
 = 
e
->
d_«me
;

224 
°©
 
°
;

225 i‡(
«me
[0] == '.' && (name[1] == '\0' ||

226 (
«me
[1] == '.' &&Çame[2] == '\0')))

228 
i
 = 
	`¢¥ötf
(
buf
 + 
Àn
, (bufË-Üí, "%s", 
«me
);

229 
	`°æ˝y
(
buf
 + 
Àn
 + 
i
, "/preimage", (buf) -Üen - i);

230 i‡(
	`°©
(
buf
, &
°
))

232 
thí
 = 
°
.
°_mtime
;

233 
	`°æ˝y
(
buf
 + 
Àn
 + 
i
, "/postimage", (buf) -Üen - i);

234 
cutoff
 = 
	`°©
(
buf
, &
°
Ë? 
cutoff_n‹esﬁve
 : 
cutoff_ªsﬁve
;

235 i‡(
thí
 < 
now
 - 
cutoff
 * 86400) {

236 
buf
[
Àn
 + 
i
] = '\0';

237 
	`∑th_li°_ö£π
(
	`x°rdup
(
«me
), &
to_ªmove
);

240 
i
 = 0; i < 
to_ªmove
.
ƒ
; i++)

241 
	`u∆ök_º_ôem
(
to_ªmove
.
ôems
[
i
].
∑th
);

242 
	`∑th_li°_˛ór
(&
to_ªmove
, 0);

243 
	}
}

245 
	$outf
(*
dummy
, 
mmbuf„r_t
 *
±r
, 
nbuf
)

247 
i
;

248 
i
 = 0; i < 
nbuf
; i++)

249 i‡(
	`wrôe_ö_fuŒ
(1, 
±r
[
i
].±r,Öå[i].
size
) !=Ötr[i].size)

252 
	}
}

254 
	$diff_two
(c⁄° *
fûe1
, c⁄° *
œbñ1
,

255 c⁄° *
fûe2
, c⁄° *
œbñ2
)

257 
xµ¨am_t
 
xµ
;

258 
xdemôc⁄f_t
 
xecfg
;

259 
xdemôcb_t
 
ecb
;

260 
mmfûe_t
 
möus
, 
∂us
;

262 i‡(
	`ªad_mmfûe
(&
möus
, 
fûe1
Ë||Ñód_mmfûe(&
∂us
, 
fûe2
))

265 
	`¥ötf
("---á/%s\n+++ b/%s\n", 
œbñ1
, 
œbñ2
);

266 
	`fÊush
(
°dout
);

267 
xµ
.
Êags
 = 
XDF_NEED_MINIMAL
;

268 
xecfg
.
˘xÀn
 = 3;

269 
xecfg
.
Êags
 = 0;

270 
ecb
.
outf
 = outf;

271 
	`xdl_diff
(&
möus
, &
∂us
, &
xµ
, &
xecfg
, &
ecb
);

273 
	`‰ì
(
möus
.
±r
);

274 
	`‰ì
(
∂us
.
±r
);

276 
	}
}

278 
	$c›y_fûe
(c⁄° *
§c
, c⁄° *
de°
)

280 
FILE
 *
ö
, *
out
;

281 
buf„r
[32768];

282 
cou¡
;

284 i‡(!(
ö
 = 
	`f›í
(
§c
, "r")))

285  
	`îr‹
("CouldÇŸ o≥¿%s", 
§c
);

286 i‡(!(
out
 = 
	`f›í
(
de°
, "w")))

287  
	`îr‹
("CouldÇŸ o≥¿%s", 
de°
);

288 (
cou¡
 = 
	`‰ód
(
buf„r
, 1, (buf„r), 
ö
)))

289 
	`fwrôe
(
buf„r
, 1, 
cou¡
, 
out
);

290 
	`f˛o£
(
ö
);

291 
	`f˛o£
(
out
);

293 
	}
}

295 
	$do_∂aö_ªªª
(
∑th_li°
 *
º
, 
fd
)

297 
∑th_li°
 
c⁄Êi˘
 = { 
NULL
, 0, 0, 1 };

298 
i
;

300 
	`föd_c⁄Êi˘
(&
c⁄Êi˘
);

309 
i
 = 0; i < 
c⁄Êi˘
.
ƒ
; i++) {

310 c⁄° *
∑th
 = 
c⁄Êi˘
.
ôems
[
i
].path;

311 i‡(!
	`∑th_li°_has_∑th
(
º
, 
∑th
)) {

312 
sha1
[20];

313 *
hex
;

314 
ªt
;

315 
ªt
 = 
	`h™dÀ_fûe
(
∑th
, 
sha1
, 
NULL
);

316 i‡(
ªt
 < 1)

318 
hex
 = 
	`x°rdup
(
	`sha1_to_hex
(
sha1
));

319 
	`∑th_li°_ö£π
(
∑th
, 
º
)->
utû
 = 
hex
;

320 i‡(
	`mkdú
(
	`gô_∑th
("º-ˇche/%s", 
hex
), 0755))

322 
	`h™dÀ_fûe
(
∑th
, 
NULL
, 
	`º_∑th
(
hex
, "preimage"));

323 
	`Ârötf
(
°dîr
, "Rec‹dedÖªimagêf‹ '%s'\n", 
∑th
);

333 
i
 = 0; i < 
º
->
ƒ
; i++) {

334 
°©
 
°
;

335 
ªt
;

336 c⁄° *
∑th
 = 
º
->
ôems
[
i
].path;

337 c⁄° *
«me
 = (c⁄° *)
º
->
ôems
[
i
].
utû
;

339 i‡(!
	`°©
(
	`º_∑th
(
«me
, "¥eimage"), &
°
) &&

340 !
	`°©
(
	`º_∑th
(
«me
, "po°image"), &
°
)) {

341 i‡(!
	`mîge
(
«me
, 
∑th
)) {

342 
	`Ârötf
(
°dîr
, "Resolved '%s' using "

343 "¥eviou†ªsﬁuti⁄.\n", 
∑th
);

344 
èû_›timiz©i⁄
;

349 
ªt
 = 
	`h™dÀ_fûe
(
∑th
, 
NULL
, NULL);

350 i‡(
ªt
)

353 
	`Ârötf
(
°dîr
, "Rec‹dedÑesﬁuti⁄ f‹ '%s'.\n", 
∑th
);

354 
	`c›y_fûe
(
∑th
, 
	`º_∑th
(
«me
, "postimage"));

355 
èû_›timiz©i⁄
:

356 i‡(
i
 < 
º
->
ƒ
 - 1)

357 
	`memmove
(
º
->
ôems
 + 
i
,

358 
º
->
ôems
 + 
i
 + 1,

359 (
º
->
ôems
[0]Ë* (º->
ƒ
 - 
i
 - 1));

360 
º
->
ƒ
--;

361 
i
--;

364  
	`wrôe_º
(
º
, 
fd
);

365 
	}
}

367 
	$gô_ªªª_c⁄fig
(c⁄° *
v¨
, c⁄° *
vÆue
)

369 i‡(!
	`°rcmp
(
v¨
, "gc.rerereresolved"))

370 
cutoff_ªsﬁve
 = 
	`gô_c⁄fig_öt
(
v¨
, 
vÆue
);

371 i‡(!
	`°rcmp
(
v¨
, "gc.rerereunresolved"))

372 
cutoff_n‹esﬁve
 = 
	`gô_c⁄fig_öt
(
v¨
, 
vÆue
);

374  
	`gô_deÁu…_c⁄fig
(
v¨
, 
vÆue
);

376 
	}
}

378 
	$cmd_ªªª
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

380 
∑th_li°
 
mîge_º
 = { 
NULL
, 0, 0, 1 };

381 
i
, 
fd
 = -1;

382 
°©
 
°
;

384 i‡(
	`°©
(
	`gô_∑th
("º-ˇche"), &
°
Ë|| !
	`S_ISDIR
(°.
°_mode
))

387 
	`gô_c⁄fig
(
gô_ªªª_c⁄fig
);

389 
mîge_º_∑th
 = 
	`x°rdup
(
	`gô_∑th
("rr-cache/MERGE_RR"));

390 
fd
 = 
	`hﬁd_lock_fûe_f‹_upd©e
(&
wrôe_lock
, 
mîge_º_∑th
, 1);

391 
	`ªad_º
(&
mîge_º
);

393 i‡(
¨gc
 < 2)

394  
	`do_∂aö_ªªª
(&
mîge_º
, 
fd
);

395 i‡(!
	`°rcmp
(
¨gv
[1], "clear")) {

396 
i
 = 0; i < 
mîge_º
.
ƒ
; i++) {

397 c⁄° *
«me
 = (c⁄° *)
mîge_º
.
ôems
[
i
].
utû
;

398 i‡(!
	`°©
(
	`gô_∑th
("º-ˇche/%s", 
«me
), &
°
) &&

399 
	`S_ISDIR
(
°
.
°_mode
) &&

400 
	`°©
(
	`º_∑th
(
«me
, "po°image"), &
°
))

401 
	`u∆ök_º_ôem
(
«me
);

403 
	`u∆ök
(
mîge_º_∑th
);

404 } i‡(!
	`°rcmp
(
¨gv
[1], "gc"))

405 
	`g¨bage_cﬁÀ˘
(&
mîge_º
);

406 i‡(!
	`°rcmp
(
¨gv
[1], "status"))

407 
i
 = 0; i < 
mîge_º
.
ƒ
; i++)

408 
	`¥ötf
("%s\n", 
mîge_º
.
ôems
[
i
].
∑th
);

409 i‡(!
	`°rcmp
(
¨gv
[1], "diff"))

410 
i
 = 0; i < 
mîge_º
.
ƒ
; i++) {

411 c⁄° *
∑th
 = 
mîge_º
.
ôems
[
i
].path;

412 c⁄° *
«me
 = (c⁄° *)
mîge_º
.
ôems
[
i
].
utû
;

413 
	`diff_two
(
	`º_∑th
(
«me
, "¥eimage"), 
∑th
,Öath,Öath);

416 
	`ußge
(
gô_ªªª_ußge
);

418 
	`∑th_li°_˛ór
(&
mîge_º
, 1);

420 
	}
}

	@builtin-rev-list.c

1 
	~"ˇche.h
"

2 
	~"ªfs.h
"

3 
	~"èg.h
"

4 
	~"commô.h
"

5 
	~"åì.h
"

6 
	~"blob.h
"

7 
	~"åì-wÆk.h
"

8 
	~"diff.h
"

9 
	~"ªvisi⁄.h
"

10 
	~"li°-obje˘s.h
"

11 
	~"buûtö.h
"

15 
	#COUNTED
 (1u<<16)

	)

17 c⁄° 
	gªv_li°_ußge
[] =

42 
ªv_öfo
 
	gªvs
;

44 
	gbi£˘_li°
;

45 
	gshow_time°amp
;

46 
	ghdr_ãrmö©i⁄
;

47 c⁄° *
	ghódî_¥efix
;

49 
	$show_commô
(
commô
 *commit)

51 i‡(
show_time°amp
)

52 
	`¥ötf
("%lu ", 
commô
->
d©e
);

53 i‡(
hódî_¥efix
)

54 
	`Âuts
(
hódî_¥efix
, 
°dout
);

55 i‡(
commô
->
obje˘
.
Êags
 & 
BOUNDARY
)

56 
	`putch¨
('-');

57 i‡(
ªvs
.
À·_right
) {

58 i‡(
commô
->
obje˘
.
Êags
 & 
SYMMETRIC_LEFT
)

59 
	`putch¨
('<');

61 
	`putch¨
('>');

63 i‡(
ªvs
.
abbªv_commô
 &&Ñevs.
abbªv
)

64 
	`Âuts
(
	`föd_unique_abbªv
(
commô
->
obje˘
.
sha1
, 
ªvs
.
abbªv
),

65 
°dout
);

67 
	`Âuts
(
	`sha1_to_hex
(
commô
->
obje˘
.
sha1
), 
°dout
);

68 i‡(
ªvs
.
∑ª¡s
) {

69 
commô_li°
 *
∑ª¡s
 = 
commô
->parents;

70 
∑ª¡s
) {

71 
obje˘
 *
o
 = &(
∑ª¡s
->
ôem
->object);

72 
∑ª¡s
 =Ö¨íts->
√xt
;

73 i‡(
o
->
Êags
 & 
TMP_MARK
)

75 
	`¥ötf
(" %s", 
	`sha1_to_hex
(
o
->
sha1
));

76 
o
->
Êags
 |
TMP_MARK
;

82 
∑ª¡s
 = 
commô
->parents;

83 
∑ª¡s
;

84 
∑ª¡s
 =Ö¨íts->
√xt
)

85 
∑ª¡s
->
ôem
->
obje˘
.
Êags
 &~
TMP_MARK
;

87 i‡(
ªvs
.
commô_f‹m©
 =
CMIT_FMT_ONELINE
)

88 
	`putch¨
(' ');

90 
	`putch¨
('\n');

92 i‡(
ªvs
.
vîbo£_hódî
) {

93 
¥ëty_hódî
[16384];

94 
	`¥ëty_¥öt_commô
(
ªvs
.
commô_f‹m©
, 
commô
, ~0,

95 
¥ëty_hódî
, (pretty_header),

96 
ªvs
.
abbªv
, 
NULL
, NULL,Ñevs.
ªœtive_d©e
);

97 
	`¥ötf
("%s%c", 
¥ëty_hódî
, 
hdr_ãrmö©i⁄
);

99 
	`fÊush
(
°dout
);

100 i‡(
commô
->
∑ª¡s
) {

101 
	`‰ì_commô_li°
(
commô
->
∑ª¡s
);

102 
commô
->
∑ª¡s
 = 
NULL
;

104 
	`‰ì
(
commô
->
buf„r
);

105 
commô
->
buf„r
 = 
NULL
;

106 
	}
}

108 
	$show_obje˘
(
obje˘_¨øy_íåy
 *
p
)

113 c⁄° *
ï
 = 
	`°rchr
(
p
->
«me
, '\n');

114 i‡(
ï
) {

115 
	`¥ötf
("%†%.*s\n", 
	`sha1_to_hex
(
p
->
ôem
->
sha1
),

116 (Ë(
ï
 - 
p
->
«me
),

117 
p
->
«me
);

120 
	`¥ötf
("%†%s\n", 
	`sha1_to_hex
(
p
->
ôem
->
sha1
),Ö->
«me
);

121 
	}
}

123 
	$show_edge
(
commô
 *commit)

125 
	`¥ötf
("-%s\n", 
	`sha1_to_hex
(
commô
->
obje˘
.
sha1
));

126 
	}
}

135 
	$cou¡_di°™˚
(
commô_li°
 *
íåy
)

137 
ƒ
 = 0;

139 
íåy
) {

140 
commô
 *commô = 
íåy
->
ôem
;

141 
commô_li°
 *
p
;

143 i‡(
commô
->
obje˘
.
Êags
 & (
UNINTERESTING
 | 
COUNTED
))

145 i‡(!
ªvs
.
¥u√_‚
 || (
commô
->
obje˘
.
Êags
 & 
TREECHANGE
))

146 
ƒ
++;

147 
commô
->
obje˘
.
Êags
 |
COUNTED
;

148 
p
 = 
commô
->
∑ª¡s
;

149 
íåy
 = 
p
;

150 i‡(
p
) {

151 
p
 =Ö->
√xt
;

152 
p
) {

153 
ƒ
 +
	`cou¡_di°™˚
(
p
);

154 
p
 =Ö->
√xt
;

159  
ƒ
;

160 
	}
}

162 
	$˛ór_di°™˚
(
commô_li°
 *
li°
)

164 
li°
) {

165 
commô
 *commô = 
li°
->
ôem
;

166 
commô
->
obje˘
.
Êags
 &~
COUNTED
;

167 
li°
 =Üi°->
√xt
;

169 
	}
}

171 
commô_li°
 *
	$föd_bi£˘i⁄
(
commô_li°
 *
li°
)

173 
ƒ
, 
˛o£°
;

174 
commô_li°
 *
p
, *
be°
;

176 
ƒ
 = 0;

177 
p
 = 
li°
;

178 
p
) {

179 i‡(!
ªvs
.
¥u√_‚
 || (
p
->
ôem
->
obje˘
.
Êags
 & 
TREECHANGE
))

180 
ƒ
++;

181 
p
 =Ö->
√xt
;

183 
˛o£°
 = 0;

184 
be°
 = 
li°
;

186 
p
 = 
li°
;Ö;Ö =Ö->
√xt
) {

187 
di°™˚
;

189 i‡(
ªvs
.
¥u√_‚
 && !(
p
->
ôem
->
obje˘
.
Êags
 & 
TREECHANGE
))

192 
di°™˚
 = 
	`cou¡_di°™˚
(
p
);

193 
	`˛ór_di°™˚
(
li°
);

194 i‡(
ƒ
 - 
di°™˚
 < distance)

195 
di°™˚
 = 
ƒ
 - distance;

196 i‡(
di°™˚
 > 
˛o£°
) {

197 
be°
 = 
p
;

198 
˛o£°
 = 
di°™˚
;

201 i‡(
be°
)

202 
be°
->
√xt
 = 
NULL
;

203  
be°
;

204 
	}
}

206 
	$ªad_ªvisi⁄s_‰om_°dö
(
ªv_öfo
 *
ªvs
)

208 
löe
[1000];

210 
	`fgës
(
löe
, ÷öe), 
°dö
Ë!
NULL
) {

211 
Àn
 = 
	`°æí
(
löe
);

212 i‡(
löe
[
Àn
 - 1] == '\n')

213 
löe
[--
Àn
] = 0;

214 i‡(!
Àn
)

216 i‡(
löe
[0] == '-')

217 
	`dõ
("optionsÇot supported in --stdin mode");

218 i‡(
	`h™dÀ_ªvisi⁄_¨g
(
löe
, 
ªvs
, 0, 1))

219 
	`dõ
("badÑevisi⁄ '%s'", 
löe
);

221 
	}
}

223 
	$cmd_ªv_li°
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

225 
commô_li°
 *
li°
;

226 
i
;

227 
ªad_‰om_°dö
 = 0;

229 
	`öô_ªvisi⁄s
(&
ªvs
, 
¥efix
);

230 
ªvs
.
abbªv
 = 0;

231 
ªvs
.
commô_f‹m©
 = 
CMIT_FMT_UNSPECIFIED
;

232 
¨gc
 = 
	`£tup_ªvisi⁄s
◊rgc, 
¨gv
, &
ªvs
, 
NULL
);

234 
i
 = 1 ; i < 
¨gc
; i++) {

235 c⁄° *
¨g
 = 
¨gv
[
i
];

237 i‡(!
	`°rcmp
(
¨g
, "--header")) {

238 
ªvs
.
vîbo£_hódî
 = 1;

241 i‡(!
	`°rcmp
(
¨g
, "--timestamp")) {

242 
show_time°amp
 = 1;

245 i‡(!
	`°rcmp
(
¨g
, "--bisect")) {

246 
bi£˘_li°
 = 1;

249 i‡(!
	`°rcmp
(
¨g
, "--stdin")) {

250 i‡(
ªad_‰om_°dö
++)

251 
	`dõ
("--stdin givenÅwice?");

252 
	`ªad_ªvisi⁄s_‰om_°dö
(&
ªvs
);

255 
	`ußge
(
ªv_li°_ußge
);

258 i‡(
ªvs
.
commô_f‹m©
 !
CMIT_FMT_UNSPECIFIED
) {

260 
hdr_ãrmö©i⁄
 = '\n';

261 i‡(
ªvs
.
commô_f‹m©
 =
CMIT_FMT_ONELINE
)

262 
hódî_¥efix
 = "";

264 
hódî_¥efix
 = "commit ";

266 i‡(
ªvs
.
vîbo£_hódî
)

268 
ªvs
.
commô_f‹m©
 = 
CMIT_FMT_RAW
;

270 
li°
 = 
ªvs
.
commôs
;

272 i‡((!
li°
 &&

273 (!(
ªvs
.
èg_obje˘s
||ªvs.
åì_obje˘s
||ªvs.
blob_obje˘s
) &&

274 !
ªvs
.
≥ndög
.
ƒ
)) ||

275 
ªvs
.
diff
)

276 
	`ußge
(
ªv_li°_ußge
);

278 
ßve_commô_buf„r
 = 
ªvs
.
vîbo£_hódî
 ||Ñevs.
gªp_fûãr
;

279 
åack_obje˘_ªfs
 = 0;

280 i‡(
bi£˘_li°
)

281 
ªvs
.
limôed
 = 1;

283 
	`¥ï¨e_ªvisi⁄_wÆk
(&
ªvs
);

284 i‡(
ªvs
.
åì_obje˘s
)

285 
	`m¨k_edges_unöãª°ög
(
ªvs
.
commôs
, &ªvs, 
show_edge
);

287 i‡(
bi£˘_li°
)

288 
ªvs
.
commôs
 = 
	`föd_bi£˘i⁄
(revs.commits);

290 
	`åavî£_commô_li°
(&
ªvs
, 
show_commô
, 
show_obje˘
);

293 
	}
}

	@builtin-rev-parse.c

6 
	~"ˇche.h
"

7 
	~"commô.h
"

8 
	~"ªfs.h
"

9 
	~"quŸe.h
"

10 
	~"buûtö.h
"

12 
	#DO_REVS
 1

	)

13 
	#DO_NOREV
 2

	)

14 
	#DO_FLAGS
 4

	)

15 
	#DO_NONFLAGS
 8

	)

16 
	gfûãr
 = ~0;

18 c⁄° *
	gdef
;

20 
	#NORMAL
 0

	)

21 
	#REVERSED
 1

	)

22 
	gshow_ty≥
 = 
NORMAL
;

23 
	gsymbﬁic
;

24 
	gabbªv
;

25 
	gouçut_sq
;

27 
	gªvs_cou¡
;

34 
	$is_ªv_¨gumít
(c⁄° *
¨g
)

36 c⁄° *
ªv_¨gs
[] = {

56 
NULL


58 c⁄° **
p
 = 
ªv_¨gs
;

61 i‡((*
¨g
 ='-'Ë&& 
	`isdigô
(arg[1]))

65 c⁄° *
°r
 = *
p
++;

66 
Àn
;

67 i‡(!
°r
)

69 
Àn
 = 
	`°æí
(
°r
);

70 i‡(!
	`°rcmp
(
¨g
, 
°r
) ||

71 (
°r
[
Àn
-1] ='=' && !
	`°∫cmp
(
¨g
, str,Üen)))

74 
	}
}

77 
	$show
(c⁄° *
¨g
)

79 i‡(
ouçut_sq
) {

80 
sq
 = '\'', 
ch
;

82 
	`putch¨
(
sq
);

83 (
ch
 = *
¨g
++)) {

84 i‡(
ch
 =
sq
)

85 
	`Âuts
("'\\'", 
°dout
);

86 
	`putch¨
(
ch
);

88 
	`putch¨
(
sq
);

89 
	`putch¨
(' ');

92 
	`puts
(
¨g
);

93 
	}
}

96 
	$show_ªv
(
ty≥
, c⁄° *
sha1
, c⁄° *
«me
)

98 i‡(!(
fûãr
 & 
DO_REVS
))

100 
def
 = 
NULL
;

101 
ªvs_cou¡
++;

103 i‡(
ty≥
 !
show_ty≥
)

104 
	`putch¨
('^');

105 i‡(
symbﬁic
 && 
«me
)

106 
	`show
(
«me
);

107 i‡(
abbªv
)

108 
	`show
(
	`föd_unique_abbªv
(
sha1
, 
abbªv
));

110 
	`show
(
	`sha1_to_hex
(
sha1
));

111 
	}
}

114 
	$show_Êag
(c⁄° *
¨g
)

116 i‡(!(
fûãr
 & 
DO_FLAGS
))

118 i‡(
fûãr
 & (
	`is_ªv_¨gumít
(
¨g
Ë? 
DO_REVS
 : 
DO_NOREV
)) {

119 
	`show
(
¨g
);

123 
	}
}

125 
	$show_deÁu…
()

127 c⁄° *
s
 = 
def
;

129 i‡(
s
) {

130 
sha1
[20];

132 
def
 = 
NULL
;

133 i‡(!
	`gë_sha1
(
s
, 
sha1
)) {

134 
	`show_ªv
(
NORMAL
, 
sha1
, 
s
);

138 
	}
}

140 
	$show_ª„ªn˚
(c⁄° *
ª‚ame
, c⁄° *
sha1
, 
Êag
, *
cb_d©a
)

142 
	`show_ªv
(
NORMAL
, 
sha1
, 
ª‚ame
);

144 
	}
}

146 
	$show_d©e°rög
(c⁄° *
Êag
, c⁄° *
d©e°r
)

148 
buf„r
[100];

151 i‡((
fûãr
 & (
DO_FLAGS
 | 
DO_REVS
)) != (DO_FLAGS | DO_REVS))

153 
	`¢¥ötf
(
buf„r
, (buf„r), "%s%lu", 
Êag
, 
	`≠¥oxid©e
(
d©e°r
));

154 
	`show
(
buf„r
);

155 
	}
}

157 
	$show_fûe
(c⁄° *
¨g
)

159 
	`show_deÁu…
();

160 i‡((
fûãr
 & (
DO_NONFLAGS
|
DO_NOREV
)) == (DO_NONFLAGS|DO_NOREV)) {

161 
	`show
(
¨g
);

165 
	}
}

167 
	$åy_dif„ªn˚
(c⁄° *
¨g
)

169 *
dŸdŸ
;

170 
sha1
[20];

171 
íd
[20];

172 c⁄° *
√xt
;

173 c⁄° *
this
;

174 
symmëric
;

176 i‡(!(
dŸdŸ
 = 
	`°r°r
(
¨g
, "..")))

178 
√xt
 = 
dŸdŸ
 + 2;

179 
this
 = 
¨g
;

180 
symmëric
 = (*
√xt
 == '.');

182 *
dŸdŸ
 = 0;

183 
√xt
 +
symmëric
;

185 i‡(!*
√xt
)

186 
√xt
 = "HEAD";

187 i‡(
dŸdŸ
 =
¨g
)

188 
this
 = "HEAD";

189 i‡(!
	`gë_sha1
(
this
, 
sha1
Ë&& !gë_sha1(
√xt
, 
íd
)) {

190 
	`show_ªv
(
NORMAL
, 
íd
, 
√xt
);

191 
	`show_ªv
(
symmëric
 ? 
NORMAL
 : 
REVERSED
, 
sha1
, 
this
);

192 i‡(
symmëric
) {

193 
commô_li°
 *
ex˛ude
;

194 
commô
 *
a
, *
b
;

195 
a
 = 
	`lookup_commô_ª„ªn˚
(
sha1
);

196 
b
 = 
	`lookup_commô_ª„ªn˚
(
íd
);

197 
ex˛ude
 = 
	`gë_mîge_ba£s
(
a
, 
b
, 1);

198 
ex˛ude
) {

199 
commô_li°
 *
n
 = 
ex˛ude
->
√xt
;

200 
	`show_ªv
(
REVERSED
,

201 
ex˛ude
->
ôem
->
obje˘
.
sha1
,
NULL
);

202 
	`‰ì
(
ex˛ude
);

203 
ex˛ude
 = 
n
;

208 *
dŸdŸ
 = '.';

210 
	}
}

212 
	$cmd_ªv_∑r£
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

214 
i
, 
as_is
 = 0, 
vîify
 = 0;

215 
sha1
[20];

217 
	`gô_c⁄fig
(
gô_deÁu…_c⁄fig
);

219 
i
 = 1; i < 
¨gc
; i++) {

220 c⁄° *
¨g
 = 
¨gv
[
i
];

222 i‡(
as_is
) {

223 i‡(
	`show_fûe
(
¨g
Ë&& 
as_is
 < 2)

224 
	`vîify_fûíame
(
¥efix
, 
¨g
);

227 i‡(!
	`°rcmp
(
¨g
,"-n")) {

228 i‡(++
i
 >
¨gc
)

229 
	`dõ
("-nÑequiresánárgument");

230 i‡((
fûãr
 & 
DO_FLAGS
Ë&& (fûã∏& 
DO_REVS
)) {

231 
	`show
(
¨g
);

232 
	`show
(
¨gv
[
i
]);

236 i‡(!
	`°∫cmp
(
¨g
,"-n",2)) {

237 i‡((
fûãr
 & 
DO_FLAGS
Ë&& (fûã∏& 
DO_REVS
))

238 
	`show
(
¨g
);

242 i‡(*
¨g
 == '-') {

243 i‡(!
	`°rcmp
(
¨g
, "--")) {

244 
as_is
 = 2;

246 i‡(
fûãr
 & (
DO_FLAGS
 | 
DO_REVS
))

247 
	`show_fûe
(
¨g
);

250 i‡(!
	`°rcmp
(
¨g
, "--default")) {

251 
def
 = 
¨gv
[
i
+1];

252 
i
++;

255 i‡(!
	`°rcmp
(
¨g
, "--revs-only")) {

256 
fûãr
 &~
DO_NOREV
;

259 i‡(!
	`°rcmp
(
¨g
, "--no-revs")) {

260 
fûãr
 &~
DO_REVS
;

263 i‡(!
	`°rcmp
(
¨g
, "--flags")) {

264 
fûãr
 &~
DO_NONFLAGS
;

267 i‡(!
	`°rcmp
(
¨g
, "--no-flags")) {

268 
fûãr
 &~
DO_FLAGS
;

271 i‡(!
	`°rcmp
(
¨g
, "--verify")) {

272 
fûãr
 &~(
DO_FLAGS
|
DO_NOREV
);

273 
vîify
 = 1;

276 i‡(!
	`°rcmp
(
¨g
, "--short") ||

277 !
	`°∫cmp
(
¨g
, "--short=", 8)) {

278 
fûãr
 &~(
DO_FLAGS
|
DO_NOREV
);

279 
vîify
 = 1;

280 
abbªv
 = 
DEFAULT_ABBREV
;

281 i‡(
¨g
[7] == '=')

282 
abbªv
 = 
	`°πoul
(
¨g
 + 8, 
NULL
, 10);

283 i‡(
abbªv
 < 
MINIMUM_ABBREV
)

284 
abbªv
 = 
MINIMUM_ABBREV
;

285 i‡(40 <
abbªv
)

286 
abbªv
 = 40;

289 i‡(!
	`°rcmp
(
¨g
, "--sq")) {

290 
ouçut_sq
 = 1;

293 i‡(!
	`°rcmp
(
¨g
, "--not")) {

294 
show_ty≥
 ^
REVERSED
;

297 i‡(!
	`°rcmp
(
¨g
, "--symbolic")) {

298 
symbﬁic
 = 1;

301 i‡(!
	`°rcmp
(
¨g
, "--all")) {

302 
	`f‹_óch_ªf
(
show_ª„ªn˚
, 
NULL
);

305 i‡(!
	`°rcmp
(
¨g
, "--branches")) {

306 
	`f‹_óch_bønch_ªf
(
show_ª„ªn˚
, 
NULL
);

309 i‡(!
	`°rcmp
(
¨g
, "--tags")) {

310 
	`f‹_óch_èg_ªf
(
show_ª„ªn˚
, 
NULL
);

313 i‡(!
	`°rcmp
(
¨g
, "--remotes")) {

314 
	`f‹_óch_ªmŸe_ªf
(
show_ª„ªn˚
, 
NULL
);

317 i‡(!
	`°rcmp
(
¨g
, "--show-prefix")) {

318 i‡(
¥efix
)

319 
	`puts
(
¥efix
);

322 i‡(!
	`°rcmp
(
¨g
, "--show-cdup")) {

323 c⁄° *
pfx
 = 
¥efix
;

324 
pfx
) {

325 
pfx
 = 
	`°rchr
(pfx, '/');

326 i‡(
pfx
) {

327 
pfx
++;

328 
	`¥ötf
("../");

331 
	`putch¨
('\n');

334 i‡(!
	`°rcmp
(
¨g
, "--git-dir")) {

335 c⁄° *
gôdú
 = 
	`gëív
(
GIT_DIR_ENVIRONMENT
);

336 
cwd
[
PATH_MAX
];

337 i‡(
gôdú
) {

338 
	`puts
(
gôdú
);

341 i‡(!
¥efix
) {

342 
	`puts
(".git");

345 i‡(!
	`gëcwd
(
cwd
, 
PATH_MAX
))

346 
	`dõ
("unableÅo get current working directory");

347 
	`¥ötf
("%s/.gô\n", 
cwd
);

350 i‡(!
	`°rcmp
(
¨g
, "--is-inside-git-dir")) {

351 
	`¥ötf
("%s\n", 
	`is_öside_gô_dú
() ? "true"

355 i‡(!
	`°∫cmp
(
¨g
, "--since=", 8)) {

356 
	`show_d©e°rög
("--max-age=", 
¨g
+8);

359 i‡(!
	`°∫cmp
(
¨g
, "--after=", 8)) {

360 
	`show_d©e°rög
("--max-age=", 
¨g
+8);

363 i‡(!
	`°∫cmp
(
¨g
, "--before=", 9)) {

364 
	`show_d©e°rög
("--mö-age=", 
¨g
+9);

367 i‡(!
	`°∫cmp
(
¨g
, "--until=", 8)) {

368 
	`show_d©e°rög
("--mö-age=", 
¨g
+8);

371 i‡(
	`show_Êag
(
¨g
Ë&& 
vîify
)

372 
	`dõ
("Neededá singleÑevision");

377 i‡(
	`åy_dif„ªn˚
(
¨g
))

379 i‡(!
	`gë_sha1
(
¨g
, 
sha1
)) {

380 
	`show_ªv
(
NORMAL
, 
sha1
, 
¨g
);

383 i‡(*
¨g
 ='^' && !
	`gë_sha1
◊rg+1, 
sha1
)) {

384 
	`show_ªv
(
REVERSED
, 
sha1
, 
¨g
+1);

387 
as_is
 = 1;

388 i‡(!
	`show_fûe
(
¨g
))

390 i‡(
vîify
)

391 
	`dõ
("Neededá singleÑevision");

392 
	`vîify_fûíame
(
¥efix
, 
¨g
);

394 
	`show_deÁu…
();

395 i‡(
vîify
 && 
ªvs_cou¡
 != 1)

396 
	`dõ
("Neededá singleÑevision");

398 
	}
}

	@builtin-rm.c

6 
	~"ˇche.h
"

7 
	~"buûtö.h
"

8 
	~"dú.h
"

9 
	~"ˇche-åì.h
"

10 
	~"åì-wÆk.h
"

12 c⁄° 
	gbuûtö_rm_ußge
[] =

16 
	mƒ
, 
	mÆloc
;

17 c⁄° **
	m«me
;

18 } 
	gli°
;

20 
	$add_li°
(c⁄° *
«me
)

22 i‡(
li°
.
ƒ
 >li°.
Æloc
) {

23 
li°
.
Æloc
 = 
	`Æloc_ƒ
(list.alloc);

24 
li°
.
«me
 = 
	`xªÆloc
÷i°.«me,Üi°.
Æloc
 * (const *));

26 
li°
.
«me
[li°.
ƒ
++] =Çame;

27 
	}
}

29 
	$ªmove_fûe
(c⁄° *
«me
)

31 
ªt
;

32 *
¶ash
;

34 
ªt
 = 
	`u∆ök
(
«me
);

35 i‡(
ªt
 && 
î∫o
 =
ENOENT
)

37 
ªt
 = 
î∫o
 = 0;

39 i‡(!
ªt
 && (
¶ash
 = 
	`°ºchr
(
«me
, '/'))) {

40 *
n
 = 
	`x°rdup
(
«me
);

42 
n
[
¶ash
 - 
«me
] = 0;

43 
«me
 = 
n
;

44 } !
	`rmdú
(
«me
Ë&& (
¶ash
 = 
	`°ºchr
(name, '/')));

46  
ªt
;

47 
	}
}

49 
	$check_loˇl_mod
(*
hód
)

57 
i
, 
no_hód
;

58 
îrs
 = 0;

60 
no_hód
 = 
	`is_nuŒ_sha1
(
hód
);

61 
i
 = 0; i < 
li°
.
ƒ
; i++) {

62 
°©
 
°
;

63 
pos
;

64 
ˇche_íåy
 *
˚
;

65 c⁄° *
«me
 = 
li°
.«me[
i
];

66 
sha1
[20];

67 
mode
;

69 
pos
 = 
	`ˇche_«me_pos
(
«me
, 
	`°æí
(name));

70 i‡(
pos
 < 0)

72 
˚
 = 
a˘ive_ˇche
[
pos
];

74 i‡(
	`l°©
(
˚
->
«me
, &
°
) < 0) {

75 i‡(
î∫o
 !
ENOENT
)

76 
	`Ârötf
(
°dîr
, "warning: '%s': %s",

77 
˚
->
«me
, 
	`°ªº‹
(
î∫o
));

81 i‡(
	`S_ISDIR
(
°
.
°_mode
)) {

89 i‡(
	`˚_m©ch_°©
(
˚
, &
°
, 0))

90 
îrs
 = 
	`îr‹
("'%s' hasÜocal modifications "

91 "(höt:Åry -f)", 
˚
->
«me
);

92 i‡(
no_hód
)

98 i‡(
	`gë_åì_íåy
(
hód
, 
«me
, 
sha1
, &
mode
))

104 i‡(
˚
->
˚_mode
 !
	`¸óã_˚_mode
(
mode
) ||

105 
	`hashcmp
(
˚
->
sha1
, sha1))

106 
îrs
 = 
	`îr‹
("'%s' has changes staged inÅhe index "

107 "(höt:Åry -f)", 
«me
);

109  
îrs
;

110 
	}
}

112 
lock_fûe
 
	glock_fûe
;

114 
	$cmd_rm
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

116 
i
, 
√wfd
;

117 
show_⁄ly
 = 0, 
f‹˚
 = 0, 
ödex_⁄ly
 = 0, 
ªcursive
 = 0;

118 c⁄° **
∑th•ec
;

119 *
£í
;

121 
	`gô_c⁄fig
(
gô_deÁu…_c⁄fig
);

123 
√wfd
 = 
	`hﬁd_lock_fûe_f‹_upd©e
(&
lock_fûe
, 
	`gë_ödex_fûe
(), 1);

125 i‡(
	`ªad_ˇche
() < 0)

126 
	`dõ
("index file corrupt");

128 
i
 = 1 ; i < 
¨gc
 ; i++) {

129 c⁄° *
¨g
 = 
¨gv
[
i
];

131 i‡(*
¨g
 != '-')

133 i‡(!
	`°rcmp
(
¨g
, "--")) {

134 
i
++;

137 i‡(!
	`°rcmp
(
¨g
, "-n"))

138 
show_⁄ly
 = 1;

139 i‡(!
	`°rcmp
(
¨g
, "--cached"))

140 
ödex_⁄ly
 = 1;

141 i‡(!
	`°rcmp
(
¨g
, "-f"))

142 
f‹˚
 = 1;

143 i‡(!
	`°rcmp
(
¨g
, "-r"))

144 
ªcursive
 = 1;

146 
	`ußge
(
buûtö_rm_ußge
);

148 i‡(
¨gc
 <
i
)

149 
	`ußge
(
buûtö_rm_ußge
);

151 
∑th•ec
 = 
	`gë_∑th•ec
(
¥efix
, 
¨gv
 + 
i
);

152 
£í
 = 
NULL
;

153 
i
 = 0; 
∑th•ec
[i] ; i++)

155 
£í
 = 
	`xˇŒoc
(
i
, 1);

157 
i
 = 0; i < 
a˘ive_ƒ
; i++) {

158 
ˇche_íåy
 *
˚
 = 
a˘ive_ˇche
[
i
];

159 i‡(!
	`m©ch_∑th•ec
(
∑th•ec
, 
˚
->
«me
, 
	`˚_«mñí
(˚), 0, 
£í
))

161 
	`add_li°
(
˚
->
«me
);

164 i‡(
∑th•ec
) {

165 c⁄° *
m©ch
;

166 
i
 = 0; (
m©ch
 = 
∑th•ec
[i]Ë!
NULL
 ; i++) {

167 i‡(!
£í
[
i
])

168 
	`dõ
("pathspec '%s' didÇot matchány files",

169 
m©ch
);

170 i‡(!
ªcursive
 && 
£í
[
i
] =
MATCHED_RECURSIVELY
)

171 
	`dõ
("notÑemoving '%s'Ñecursively without -r",

172 *
m©ch
 ? match : ".");

186 i‡(!
f‹˚
) {

187 
sha1
[20];

188 i‡(
	`gë_sha1
("HEAD", 
sha1
))

189 
	`hash˛r
(
sha1
);

190 i‡(
	`check_loˇl_mod
(
sha1
))

191 
	`exô
(1);

198 
i
 = 0; i < 
li°
.
ƒ
; i++) {

199 c⁄° *
∑th
 = 
li°
.
«me
[
i
];

200 
	`¥ötf
("rm '%s'\n", 
∑th
);

202 i‡(
	`ªmove_fûe_‰om_ˇche
(
∑th
))

203 
	`dõ
("gô-rm: u«bÀÅÿªmovê%s", 
∑th
);

204 
	`ˇche_åì_övÆid©e_∑th
(
a˘ive_ˇche_åì
, 
∑th
);

207 i‡(
show_⁄ly
)

218 i‡(!
ödex_⁄ly
) {

219 
ªmoved
 = 0;

220 
i
 = 0; i < 
li°
.
ƒ
; i++) {

221 c⁄° *
∑th
 = 
li°
.
«me
[
i
];

222 i‡(!
	`ªmove_fûe
(
∑th
)) {

223 
ªmoved
 = 1;

226 i‡(!
ªmoved
)

227 
	`dõ
("gô-rm: %s: %s", 
∑th
, 
	`°ªº‹
(
î∫o
));

231 i‡(
a˘ive_ˇche_ch™ged
) {

232 i‡(
	`wrôe_ˇche
(
√wfd
, 
a˘ive_ˇche
, 
a˘ive_ƒ
) ||

233 
	`˛o£
(
√wfd
Ë|| 
	`commô_lock_fûe
(&
lock_fûe
))

234 
	`dõ
("UnableÅo writeÇew index file");

238 
	}
}

	@builtin-runstatus.c

1 
	~"ˇche.h
"

2 
	~"wt-°©us.h
"

4 
wt_°©us_u£_cﬁ‹
;

6 c⁄° 
	grun°©us_ußge
[] =

9 
	$cmd_run°©us
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

11 
wt_°©us
 
s
;

12 
i
;

14 
	`gô_c⁄fig
(
gô_°©us_c⁄fig
);

15 
	`wt_°©us_¥ï¨e
(&
s
);

17 
i
 = 1; i < 
¨gc
; i++) {

18 i‡(!
	`°rcmp
(
¨gv
[
i
], "--color"))

19 
wt_°©us_u£_cﬁ‹
 = 1;

20 i‡(!
	`°rcmp
(
¨gv
[
i
], "--nocolor"))

21 
wt_°©us_u£_cﬁ‹
 = 0;

22 i‡(!
	`°rcmp
(
¨gv
[
i
], "--amend")) {

23 
s
.
amíd
 = 1;

24 
s
.
ª„ªn˚
 = "HEAD^1";

26 i‡(!
	`°rcmp
(
¨gv
[
i
], "--verbose"))

27 
s
.
vîbo£
 = 1;

28 i‡(!
	`°rcmp
(
¨gv
[
i
], "--untracked"))

29 
s
.
u¡øcked
 = 1;

31 
	`ußge
(
run°©us_ußge
);

34 
	`wt_°©us_¥öt
(&
s
);

35  
s
.
commôabÀ
 ? 0 : 1;

36 
	}
}

	@builtin-shortlog.c

1 
	~"buûtö.h
"

2 
	~"ˇche.h
"

3 
	~"commô.h
"

4 
	~"diff.h
"

5 
	~"∑th-li°.h
"

6 
	~"ªvisi⁄.h
"

8 c⁄° 
	gsh‹éog_ußge
[] =

11 *
	gcomm⁄_ªpo_¥efix
;

13 
	$com∑ª_by_numbî
(c⁄° *
a1
, c⁄° *
a2
)

15 c⁄° 
∑th_li°_ôem
 *
i1
 = 
a1
, *
i2
 = 
a2
;

16 c⁄° 
∑th_li°
 *
l1
 = 
i1
->
utû
, *
l2
 = 
i2
->util;

18 i‡(
l1
->
ƒ
 < 
l2
->nr)

20 i‡(
l1
->
ƒ
 =
l2
->nr)

24 
	}
}

26 
∑th_li°
 
	gmaûm≠
 = {
NULL
, 0, 0, 0};

28 
	$ªad_maûm≠
(c⁄° *
fûíame
)

30 
buf„r
[1024];

31 
FILE
 *
f
 = 
	`f›í
(
fûíame
, "r");

33 i‡(
f
 =
NULL
)

35 
	`fgës
(
buf„r
, (buf„r), 
f
Ë!
NULL
) {

36 *
íd_of_«me
, *
À·_bøckë
, *
right_bøckë
;

37 *
«me
, *
emaû
;

38 
i
;

39 i‡(
buf„r
[0] == '#') {

40 c⁄° 
abbªv
[] = "#Ñepo-abbrev:";

41 
abbÀn
 = (
abbªv
) - 1;

42 
Àn
 = 
	`°æí
(
buf„r
);

44 i‡(
Àn
 && 
buf„r
[len - 1] == '\n')

45 
buf„r
[--
Àn
] = 0;

46 i‡(!
	`°∫cmp
(
buf„r
, 
abbªv
, 
abbÀn
)) {

47 *
˝
;

49 i‡(
comm⁄_ªpo_¥efix
)

50 
	`‰ì
(
comm⁄_ªpo_¥efix
);

51 
comm⁄_ªpo_¥efix
 = 
	`xmÆloc
(
Àn
);

53 
˝
 = 
buf„r
 + 
abbÀn
; 
	`is•a˚
(*cp); cp++)

55 
	`°r˝y
(
comm⁄_ªpo_¥efix
, 
˝
);

59 i‡((
À·_bøckë
 = 
	`°rchr
(
buf„r
, '<')Ë=
NULL
)

61 i‡((
right_bøckë
 = 
	`°rchr
(
À·_bøckë
 + 1, '>')Ë=
NULL
)

63 i‡(
right_bøckë
 =
À·_bøckë
 + 1)

65 
íd_of_«me
 = 
À·_bøckë
;Énd_of_«mê!
buf„r


66 && 
	`is•a˚
(
íd_of_«me
[-1]);Énd_of_name--)

68 i‡(
íd_of_«me
 =
buf„r
)

70 
«me
 = 
	`xmÆloc
(
íd_of_«me
 - 
buf„r
 + 1);

71 
	`°æ˝y
(
«me
, 
buf„r
, 
íd_of_«me
 - buffer + 1);

72 
emaû
 = 
	`xmÆloc
(
right_bøckë
 - 
À·_bøckë
);

73 
i
 = 0; i < 
right_bøckë
 - 
À·_bøckë
 - 1; i++)

74 
emaû
[
i
] = 
	`tﬁowî
(
À·_bøckë
[i + 1]);

75 
emaû
[
right_bøckë
 - 
À·_bøckë
 - 1] = '\0';

76 
	`∑th_li°_ö£π
(
emaû
, &
maûm≠
)->
utû
 = 
«me
;

78 
	`f˛o£
(
f
);

80 
	}
}

82 
	$m≠_emaû
(*
emaû
, *
«me
, 
maxÀn
)

84 *
p
;

85 
∑th_li°_ôem
 *
ôem
;

88 
p
 = 
	`°rchr
(
emaû
, '>');

89 i‡(!
p
)

92 *
p
 = '\0';

94 
p
 = 
emaû
; *p;Ö++)

95 *
p
 = 
	`tﬁowî
(*p);

96 
ôem
 = 
	`∑th_li°_lookup
(
emaû
, &
maûm≠
);

97 i‡(
ôem
 !
NULL
) {

98 c⁄° *
ªÆ«me
 = (c⁄° *)
ôem
->
utû
;

99 
	`°∫˝y
(
«me
, 
ªÆ«me
, 
maxÀn
);

103 
	}
}

105 
	$ö£π_auth‹_⁄ñöe
(
∑th_li°
 *
li°
,

106 c⁄° *
auth‹
, 
auth‹Àn
,

107 c⁄° *
⁄ñöe
, 
⁄ñöñí
)

109 c⁄° *
dŸ3
 = 
comm⁄_ªpo_¥efix
;

110 *
buf„r
, *
p
;

111 
∑th_li°_ôem
 *
ôem
;

112 
∑th_li°
 *
⁄ñöes
;

114 
auth‹Àn
 > 0 && 
	`is•a˚
(
auth‹
[authorlen - 1]))

115 
auth‹Àn
--;

117 
buf„r
 = 
	`xmÆloc
(
auth‹Àn
 + 1);

118 
	`mem˝y
(
buf„r
, 
auth‹
, 
auth‹Àn
);

119 
buf„r
[
auth‹Àn
] = '\0';

121 
ôem
 = 
	`∑th_li°_ö£π
(
buf„r
, 
li°
);

122 i‡(
ôem
->
utû
 =
NULL
)

123 
ôem
->
utû
 = 
	`xˇŒoc
(1, (
∑th_li°
));

125 
	`‰ì
(
buf„r
);

127 i‡(!
	`°∫cmp
(
⁄ñöe
, "[PATCH", 6)) {

128 *
eob
 = 
	`°rchr
(
⁄ñöe
, ']');

130 i‡(
eob
) {

131 
	`is•a˚
(
eob
[1]) &&Éob[1] != '\n')

132 
eob
++;

133 i‡(
eob
 - 
⁄ñöe
 < 
⁄ñöñí
) {

134 
⁄ñöñí
 -
eob
 - 
⁄ñöe
;

135 
⁄ñöe
 = 
eob
;

140 
⁄ñöñí
 > 0 && 
	`is•a˚
(
⁄ñöe
[0])) {

141 
⁄ñöe
++;

142 
⁄ñöñí
--;

145 
⁄ñöñí
 > 0 && 
	`is•a˚
(
⁄ñöe
[onelinelen - 1]))

146 
⁄ñöñí
--;

148 
buf„r
 = 
	`xmÆloc
(
⁄ñöñí
 + 1);

149 
	`mem˝y
(
buf„r
, 
⁄ñöe
, 
⁄ñöñí
);

150 
buf„r
[
⁄ñöñí
] = '\0';

152 i‡(
dŸ3
) {

153 
dŸ3Àn
 = 
	`°æí
(
dŸ3
);

154 i‡(
dŸ3Àn
 > 5) {

155 (
p
 = 
	`°r°r
(
buf„r
, 
dŸ3
)Ë!
NULL
) {

156 
èûÀn
 = 
	`°æí
(
p
Ë- 
dŸ3Àn
;

157 
	`mem˝y
(
p
, "/.../", 5);

158 
	`memmove
(
p
 + 5,Ö + 
dŸ3Àn
, 
èûÀn
 + 1);

163 
⁄ñöes
 = 
ôem
->
utû
;

164 i‡(
⁄ñöes
->
ƒ
 >⁄ñöes->
Æloc
) {

165 
⁄ñöes
->
Æloc
 = 
	`Æloc_ƒ
(⁄ñöes->
ƒ
);

166 
⁄ñöes
->
ôems
 = 
	`xªÆloc
(onelines->items,

167 
⁄ñöes
->
Æloc


168 * (
∑th_li°_ôem
));

171 
⁄ñöes
->
ôems
[⁄ñöes->
ƒ
].
utû
 = 
NULL
;

172 
⁄ñöes
->
ôems
[⁄ñöes->
ƒ
++].
∑th
 = 
buf„r
;

173 
	}
}

175 
	$ªad_‰om_°dö
(
∑th_li°
 *
li°
)

177 
buf„r
[1024];

179 
	`fgës
(
buf„r
, (buf„r), 
°dö
Ë!
NULL
) {

180 *
bob
;

181 i‡((
buf„r
[0] == 'A' || buffer[0] == 'a') &&

182 !
	`°∫cmp
(
buf„r
 + 1, "uthor: ", 7) &&

183 (
bob
 = 
	`°rchr
(
buf„r
 + 7, '<')Ë!
NULL
) {

184 
buf„r2
[1024], 
off£t
 = 0;

186 i‡(
	`m≠_emaû
(
bob
 + 1, 
buf„r
, (buffer)))

187 
bob
 = 
buf„r
 + 
	`°æí
(buffer);

189 
off£t
 = 8;

190 
buf„r
 + 
off£t
 < 
bob
 &&

191 
	`is•a˚
(
bob
[-1]))

192 
bob
--;

195 
	`fgës
(
buf„r2
, (buf„r2), 
°dö
) &&

196 
buf„r2
[0] != '\n')

198 i‡(
	`fgës
(
buf„r2
, (buf„r2), 
°dö
)) {

199 
l2
 = 
	`°æí
(
buf„r2
);

200 
i
;

201 
i
 = 0; i < 
l2
; i++)

202 i‡(!
	`is•a˚
(
buf„r2
[
i
]))

204 
	`ö£π_auth‹_⁄ñöe
(
li°
,

205 
buf„r
 + 
off£t
,

206 
bob
 - 
buf„r
 - 
off£t
,

207 
buf„r2
 + 
i
, 
l2
 - i);

211 
	}
}

213 
	$gë_‰om_ªv
(
ªv_öfo
 *
ªv
, 
∑th_li°
 *
li°
)

215 
s¸©ch
[1024];

216 
commô
 *commit;

218 
	`¥ï¨e_ªvisi⁄_wÆk
(
ªv
);

219 (
commô
 = 
	`gë_ªvisi⁄
(
ªv
)Ë!
NULL
) {

220 *
auth‹
 = 
NULL
, *
⁄ñöe
, *
buf„r
;

221 
auth‹Àn
 =áuth‹Àn, 
⁄ñöñí
;

224 
buf„r
 = 
commô
->buffer; buffer && *buffer != '\0' &&

225 *
buf„r
 != '\n'; ) {

226 *
eﬁ
 = 
	`°rchr
(
buf„r
, '\n');

228 i‡(
eﬁ
 =
NULL
)

229 
eﬁ
 = 
buf„r
 + 
	`°æí
(buffer);

231 
eﬁ
++;

233 i‡(!
	`°∫cmp
(
buf„r
, "author ", 7)) {

234 *
bøckë
 = 
	`°rchr
(
buf„r
, '<');

236 i‡(
bøckë
 =
NULL
 || bøckë > 
eﬁ
)

237 
	`dõ
("Invalid commit buffer: %s",

238 
	`sha1_to_hex
(
commô
->
obje˘
.
sha1
));

240 i‡(
	`m≠_emaû
(
bøckë
 + 1, 
s¸©ch
,

241 (
s¸©ch
))) {

242 
auth‹
 = 
s¸©ch
;

243 
auth‹Àn
 = 
	`°æí
(
s¸©ch
);

245 i‡(
bøckë
[-1] == ' ')

246 
bøckë
--;

248 
auth‹
 = 
buf„r
 + 7;

249 
auth‹Àn
 = 
bøckë
 - 
buf„r
 - 7;

252 
buf„r
 = 
eﬁ
;

255 i‡(
auth‹
 =
NULL
)

256 
	`dõ
 ("Missingáuthor: %s",

257 
	`sha1_to_hex
(
commô
->
obje˘
.
sha1
));

259 i‡(
buf„r
 =
NULL
 || *buffer == '\0') {

260 
⁄ñöe
 = "<none>";

261 
⁄ñöñí
 = (
⁄ñöe
) + 1;

263 *
eﬁ
;

265 
⁄ñöe
 = 
buf„r
 + 1;

266 
eﬁ
 = 
	`°rchr
(
⁄ñöe
, '\n');

267 i‡(
eﬁ
 =
NULL
)

268 
⁄ñöñí
 = 
	`°æí
(
⁄ñöe
);

270 
⁄ñöñí
 = 
eﬁ
 - 
⁄ñöe
;

273 
	`ö£π_auth‹_⁄ñöe
(
li°
,

274 
auth‹
, 
auth‹Àn
, 
⁄ñöe
, 
⁄ñöñí
);

277 
	}
}

279 
	$cmd_sh‹éog
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

281 
ªv_öfo
 
ªv
;

282 
∑th_li°
 
li°
 = { 
NULL
, 0, 0, 1 };

283 
i
, 
j
, 
s‹t_by_numbî
 = 0, 
summ¨y
 = 0;

286 
¨gc
 > 1) {

287 i‡(!
	`°rcmp
(
¨gv
[1], "-n") || !strcmp(argv[1], "--numbered"))

288 
s‹t_by_numbî
 = 1;

289 i‡(!
	`°rcmp
(
¨gv
[1], "-s") ||

290 !
	`°rcmp
(
¨gv
[1], "--summary"))

291 
summ¨y
 = 1;

292 i‡(!
	`°rcmp
(
¨gv
[1], "-h") || !strcmp(argv[1], "--help"))

293 
	`ußge
(
sh‹éog_ußge
);

296 
¨gv
++;

297 
¨gc
--;

299 
	`öô_ªvisi⁄s
(&
ªv
, 
¥efix
);

300 
¨gc
 = 
	`£tup_ªvisi⁄s
◊rgc, 
¨gv
, &
ªv
, 
NULL
);

301 i‡(
¨gc
 > 1)

302 
	`dõ
 ("uƒecognizedárgumít: %s", 
¨gv
[1]);

304 i‡(!
	`ac˚ss
(".maûm≠", 
R_OK
))

305 
	`ªad_maûm≠
(".mailmap");

307 i‡(
ªv
.
≥ndög
.
ƒ
 == 0)

308 
	`ªad_‰om_°dö
(&
li°
);

310 
	`gë_‰om_ªv
(&
ªv
, &
li°
);

312 i‡(
s‹t_by_numbî
)

313 
	`qs‹t
(
li°
.
ôems
,Üi°.
ƒ
, (
∑th_li°_ôem
),

314 
com∑ª_by_numbî
);

316 
i
 = 0; i < 
li°
.
ƒ
; i++) {

317 
∑th_li°
 *
⁄ñöes
 = 
li°
.
ôems
[
i
].
utû
;

319 i‡(
summ¨y
) {

320 
	`¥ötf
("%s: %d\n", 
li°
.
ôems
[
i
].
∑th
, 
⁄ñöes
->
ƒ
);

322 
	`¥ötf
("%†(%d):\n", 
li°
.
ôems
[
i
].
∑th
, 
⁄ñöes
->
ƒ
);

323 
j
 = 
⁄ñöes
->
ƒ
 - 1; j >= 0; j--)

324 
	`¥ötf
(" %s\n", 
⁄ñöes
->
ôems
[
j
].
∑th
);

325 
	`¥ötf
("\n");

328 
⁄ñöes
->
°rdup_∑ths
 = 1;

329 
	`∑th_li°_˛ór
(
⁄ñöes
, 1);

330 
	`‰ì
(
⁄ñöes
);

331 
li°
.
ôems
[
i
].
utû
 = 
NULL
;

334 
li°
.
°rdup_∑ths
 = 1;

335 
	`∑th_li°_˛ór
(&
li°
, 1);

336 
maûm≠
.
°rdup_∑ths
 = 1;

337 
	`∑th_li°_˛ór
(&
maûm≠
, 1);

340 
	}
}

	@builtin-show-branch.c

1 
	~"ˇche.h
"

2 
	~"commô.h
"

3 
	~"ªfs.h
"

4 
	~"buûtö.h
"

6 c⁄° 
	gshow_bønch_ußge
[] =

8 c⁄° 
	gshow_bønch_ußge_ªÊog
[] =

11 
	gdeÁu…_num
;

12 
	gdeÁu…_Æloc
;

13 c⁄° **
	gdeÁu…_¨g
;

15 
	#UNINTERESTING
 01

	)

17 
	#REV_SHIFT
 2

	)

18 
	#MAX_REVS
 (
FLAG_BITS
 - 
REV_SHIFT
Ë

	)

20 
	#DEFAULT_REFLOG
 4

	)

22 
commô
 *
	$öãª°ög
(
commô_li°
 *
li°
)

24 
li°
) {

25 
commô
 *commô = 
li°
->
ôem
;

26 
li°
 =Üi°->
√xt
;

27 i‡(
commô
->
obje˘
.
Êags
 & 
UNINTERESTING
)

29  
commô
;

31  
NULL
;

32 
	}
}

34 
commô
 *
	$p›_⁄e_commô
(
commô_li°
 **
li°_p
)

36 
commô
 *commit;

37 
commô_li°
 *
li°
;

38 
li°
 = *
li°_p
;

39 
commô
 = 
li°
->
ôem
;

40 *
li°_p
 = 
li°
->
√xt
;

41 
	`‰ì
(
li°
);

42  
commô
;

43 
	}
}

45 
	scommô_«me
 {

46 c⁄° *
	mhód_«me
;

47 
	mgíî©i⁄
;

53 
	$«me_commô
(
commô
 *commô, c⁄° *
hód_«me
, 
¡h
)

55 
commô_«me
 *
«me
;

56 i‡(!
commô
->
utû
)

57 
commô
->
utû
 = 
	`xmÆloc
((
commô_«me
));

58 
«me
 = 
commô
->
utû
;

59 
«me
->
hód_«me
 = head_name;

60 
«me
->
gíî©i⁄
 = 
¡h
;

61 
	}
}

68 
	$«me_∑ª¡
(
commô
 *commô, commô *
∑ª¡
)

70 
commô_«me
 *commô_«mê
commô
->
utû
;

71 
commô_«me
 *
∑ª¡_«me
 = 
∑ª¡
->
utû
;

72 i‡(!
commô_«me
)

74 i‡(!
∑ª¡_«me
 ||

75 
commô_«me
->
gíî©i⁄
 + 1 < 
∑ª¡_«me
->generation)

76 
	`«me_commô
(
∑ª¡
, 
commô_«me
->
hód_«me
,

77 
commô_«me
->
gíî©i⁄
 + 1);

78 
	}
}

80 
	$«me_fú°_∑ª¡_chaö
(
commô
 *
c
)

82 
i
 = 0;

83 
c
) {

84 
commô
 *
p
;

85 i‡(!
c
->
utû
)

87 i‡(!
c
->
∑ª¡s
)

89 
p
 = 
c
->
∑ª¡s
->
ôem
;

90 i‡(!
p
->
utû
) {

91 
	`«me_∑ª¡
(
c
, 
p
);

92 
i
++;

96 
c
 = 
p
;

98  
i
;

99 
	}
}

101 
	$«me_commôs
(
commô_li°
 *
li°
,

102 
commô
 **
ªv
,

103 **
ªf_«me
,

104 
num_ªv
)

106 
commô_li°
 *
˛
;

107 
commô
 *
c
;

108 
i
;

111 
˛
 = 
li°
; cl; c»˛->
√xt
) {

112 
c
 = 
˛
->
ôem
;

113 i‡(
c
->
utû
)

115 
i
 = 0; i < 
num_ªv
; i++) {

116 i‡(
ªv
[
i
] =
c
) {

117 
	`«me_commô
(
c
, 
ªf_«me
[
i
], 0);

125 
i
 = 0;

126 
˛
 = 
li°
; cl; c»˛->
√xt
) {

127 
i
 +
	`«me_fú°_∑ª¡_chaö
(
˛
->
ôem
);

129 } 
i
);

133 
i
 = 0;

134 
˛
 = 
li°
; cl; c»˛->
√xt
) {

135 
commô_li°
 *
∑ª¡s
;

136 
commô_«me
 *
n
;

137 
¡h
;

138 
c
 = 
˛
->
ôem
;

139 i‡(!
c
->
utû
)

141 
n
 = 
c
->
utû
;

142 
∑ª¡s
 = 
c
->parents;

143 
¡h
 = 0;

144 
∑ª¡s
) {

145 
commô
 *
p
 = 
∑ª¡s
->
ôem
;

146 
√w«me
[1000], *
í
;

147 
∑ª¡s
 =Ö¨íts->
√xt
;

148 
¡h
++;

149 i‡(
p
->
utû
)

151 
í
 = 
√w«me
;

152 
n
->
gíî©i⁄
) {

154 
í
 +
	`•rötf
”n, "%s", 
n
->
hód_«me
);

157 
í
 +
	`•rötf
”n, "%s^", 
n
->
hód_«me
);

160 
í
 +
	`•rötf
(en, "%s~%d",

161 
n
->
hód_«me
,Ç->
gíî©i⁄
);

164 i‡(
¡h
 == 1)

165 
í
 +
	`•rötf
(en, "^");

167 
í
 +
	`•rötf
”n, "^%d", 
¡h
);

168 
	`«me_commô
(
p
, 
	`x°rdup
(
√w«me
), 0);

169 
i
++;

170 
	`«me_fú°_∑ª¡_chaö
(
p
);

173 } 
i
);

174 
	}
}

176 
	$m¨k_£í
(
commô
 *commô, 
commô_li°
 **
£í_p
)

178 i‡(!
commô
->
obje˘
.
Êags
) {

179 
	`commô_li°_ö£π
(
commô
, 
£í_p
);

183 
	}
}

185 
	$joö_ªvs
(
commô_li°
 **
li°_p
,

186 
commô_li°
 **
£í_p
,

187 
num_ªv
, 
exåa
)

189 
Æl_mask
 = ((1u << (
REV_SHIFT
 + 
num_ªv
)) - 1);

190 
Æl_ªvs
 = 
Æl_mask
 & ~((1u << 
REV_SHIFT
) - 1);

192 *
li°_p
) {

193 
commô_li°
 *
∑ª¡s
;

194 
°ûl_öãª°ög
 = !!
	`öãª°ög
(*
li°_p
);

195 
commô
 *commô = 
	`p›_⁄e_commô
(
li°_p
);

196 
Êags
 = 
commô
->
obje˘
.Êag†& 
Æl_mask
;

198 i‡(!
°ûl_öãª°ög
 && 
exåa
 <= 0)

201 
	`m¨k_£í
(
commô
, 
£í_p
);

202 i‡((
Êags
 & 
Æl_ªvs
) ==áll_revs)

203 
Êags
 |
UNINTERESTING
;

204 
∑ª¡s
 = 
commô
->parents;

206 
∑ª¡s
) {

207 
commô
 *
p
 = 
∑ª¡s
->
ôem
;

208 
this_Êag
 = 
p
->
obje˘
.
Êags
;

209 
∑ª¡s
 =Ö¨íts->
√xt
;

210 i‡((
this_Êag
 & 
Êags
) == flags)

212 i‡(!
p
->
obje˘
.
∑r£d
)

213 
	`∑r£_commô
(
p
);

214 i‡(
	`m¨k_£í
(
p
, 
£í_p
Ë&& !
°ûl_öãª°ög
)

215 
exåa
--;

216 
p
->
obje˘
.
Êags
 |= flags;

217 
	`ö£π_by_d©e
(
p
, 
li°_p
);

229 
ch™ged
 = 0;

230 
commô_li°
 *
s
;

231 
s
 = *
£í_p
; s; s = s->
√xt
) {

232 
commô
 *
c
 = 
s
->
ôem
;

233 
commô_li°
 *
∑ª¡s
;

235 i‡(((
c
->
obje˘
.
Êags
 & 
Æl_ªvs
) !=áll_revs) &&

236 !(
c
->
obje˘
.
Êags
 & 
UNINTERESTING
))

245 
∑ª¡s
 = 
c
->parents;

246 
∑ª¡s
) {

247 
commô
 *
p
 = 
∑ª¡s
->
ôem
;

248 
∑ª¡s
 =Ö¨íts->
√xt
;

249 i‡(!(
p
->
obje˘
.
Êags
 & 
UNINTERESTING
)) {

250 
p
->
obje˘
.
Êags
 |
UNINTERESTING
;

251 
ch™ged
 = 1;

255 i‡(!
ch™ged
)

258 
	}
}

260 
	$show_⁄e_commô
(
commô
 *commô, 
no_«me
)

262 
¥ëty
[256], *
˝
;

263 
commô_«me
 *
«me
 = 
commô
->
utû
;

264 i‡(
commô
->
obje˘
.
∑r£d
)

265 
	`¥ëty_¥öt_commô
(
CMIT_FMT_ONELINE
, 
commô
, ~0,

266 
¥ëty
, ’ªây), 0, 
NULL
, NULL, 0);

268 
	`°r˝y
(
¥ëty
, "(unavailable)");

269 i‡(!
	`°∫cmp
(
¥ëty
, "[PATCH] ", 8))

270 
˝
 = 
¥ëty
 + 8;

272 
˝
 = 
¥ëty
;

274 i‡(!
no_«me
) {

275 i‡(
«me
 &&Çame->
hód_«me
) {

276 
	`¥ötf
("[%s", 
«me
->
hód_«me
);

277 i‡(
«me
->
gíî©i⁄
) {

278 i‡(
«me
->
gíî©i⁄
 == 1)

279 
	`¥ötf
("^");

281 
	`¥ötf
("~%d", 
«me
->
gíî©i⁄
);

283 
	`¥ötf
("] ");

286 
	`¥ötf
("[%s] ",

287 
	`föd_unique_abbªv
(
commô
->
obje˘
.
sha1
, 7));

289 
	`puts
(
˝
);

290 
	}
}

292 *
	gªf_«me
[
MAX_REVS
 + 1];

293 
	gªf_«me_˙t
;

295 c⁄° *
	$föd_digô_¥efix
(c⁄° *
s
, *
v
)

297 c⁄° *
p
;

298 
vî
;

299 
ch
;

301 
p
 = 
s
, 
vî
 = 0;

302 '0' <(
ch
 = *
p
) && ch <= '9';

303 
p
++)

304 
vî
 = vî * 10 + 
ch
 - '0';

305 *
v
 = 
vî
;

306  
p
;

307 
	}
}

310 
	$vîsi⁄_cmp
(c⁄° *
a
, c⁄° *
b
)

313 
va
, 
vb
;

315 
a
 = 
	`föd_digô_¥efix
◊, &
va
);

316 
b
 = 
	`föd_digô_¥efix
(b, &
vb
);

317 i‡(
va
 !
vb
)

318  
va
 - 
vb
;

321 
ˇ
 = *
a
;

322 
cb
 = *
b
;

323 i‡('0' <
ˇ
 && ca <= '9')

324 
ˇ
 = 0;

325 i‡('0' <
cb
 && cb <= '9')

326 
cb
 = 0;

327 i‡(
ˇ
 !
cb
)

328  
ˇ
 - 
cb
;

329 i‡(!
ˇ
)

331 
a
++;

332 
b
++;

334 i‡(!*
a
 && !*
b
)

337 
	}
}

339 
	$com∑ª_ªf_«me
(c⁄° *
a_
, c⁄° *
b_
)

341 c⁄° * c⁄°*
a
 = 
a_
, * c⁄°*
b
 = 
b_
;

342  
	`vîsi⁄_cmp
(*
a
, *
b
);

343 
	}
}

345 
	$s‹t_ªf_ønge
(
bŸtom
, 
t›
)

347 
	`qs‹t
(
ªf_«me
 + 
bŸtom
, 
t›
 - bottom, (ref_name[0]),

348 
com∑ª_ªf_«me
);

349 
	}
}

351 
	$≠≥nd_ªf
(c⁄° *
ª‚ame
, c⁄° *
sha1
,

352 
Ælow_dups
)

354 
commô
 *commô = 
	`lookup_commô_ª„ªn˚_gíéy
(
sha1
, 1);

355 
i
;

357 i‡(!
commô
)

360 i‡(!
Ælow_dups
) {

362 
i
 = 0; i < 
ªf_«me_˙t
; i++)

363 i‡(!
	`°rcmp
(
ª‚ame
, 
ªf_«me
[
i
]))

366 i‡(
MAX_REVS
 <
ªf_«me_˙t
) {

367 
	`Ârötf
(
°dîr
, "warning: ignoring %s; "

369 
ª‚ame
, 
MAX_REVS
);

372 
ªf_«me
[
ªf_«me_˙t
++] = 
	`x°rdup
(
ª‚ame
);

373 
ªf_«me
[
ªf_«me_˙t
] = 
NULL
;

375 
	}
}

377 
	$≠≥nd_hód_ªf
(c⁄° *
ª‚ame
, c⁄° *
sha1
, 
Êag
, *
cb_d©a
)

379 
tmp
[20];

380 
ofs
 = 11;

381 i‡(
	`°∫cmp
(
ª‚ame
, "ªfs/hóds/", 
ofs
))

386 i‡(
	`gë_sha1
(
ª‚ame
 + 
ofs
, 
tmp
Ë|| 
	`hashcmp
—mp, 
sha1
))

387 
ofs
 = 5;

388  
	`≠≥nd_ªf
(
ª‚ame
 + 
ofs
, 
sha1
, 0);

389 
	}
}

391 
	$≠≥nd_ªmŸe_ªf
(c⁄° *
ª‚ame
, c⁄° *
sha1
, 
Êag
, *
cb_d©a
)

393 
tmp
[20];

394 
ofs
 = 13;

395 i‡(
	`°∫cmp
(
ª‚ame
, "ªfs/ªmŸes/", 
ofs
))

400 i‡(
	`gë_sha1
(
ª‚ame
 + 
ofs
, 
tmp
Ë|| 
	`hashcmp
—mp, 
sha1
))

401 
ofs
 = 5;

402  
	`≠≥nd_ªf
(
ª‚ame
 + 
ofs
, 
sha1
, 0);

403 
	}
}

405 
	$≠≥nd_èg_ªf
(c⁄° *
ª‚ame
, c⁄° *
sha1
, 
Êag
, *
cb_d©a
)

407 i‡(
	`°∫cmp
(
ª‚ame
, "refs/tags/", 10))

409  
	`≠≥nd_ªf
(
ª‚ame
 + 5, 
sha1
, 0);

410 
	}
}

412 c⁄° *
	gm©ch_ªf_∑âîn
 = 
NULL
;

413 
	gm©ch_ªf_¶ash
 = 0;

414 
	$cou¡_¶ash
(c⁄° *
s
)

416 
˙t
 = 0;

417 *
s
)

418 i‡(*
s
++ == '/')

419 
˙t
++;

420  
˙t
;

421 
	}
}

423 
	$≠≥nd_m©chög_ªf
(c⁄° *
ª‚ame
, c⁄° *
sha1
, 
Êag
, *
cb_d©a
)

429 c⁄° *
èû
;

430 
¶ash
 = 
	`cou¡_¶ash
(
ª‚ame
);

431 
èû
 = 
ª‚ame
; *èû && 
m©ch_ªf_¶ash
 < 
¶ash
; )

432 i‡(*
èû
++ == '/')

433 
¶ash
--;

434 i‡(!*
èû
)

436 i‡(
	`‚m©ch
(
m©ch_ªf_∑âîn
, 
èû
, 0))

438 i‡(!
	`°∫cmp
("ªfs/hóds/", 
ª‚ame
, 11))

439  
	`≠≥nd_hód_ªf
(
ª‚ame
, 
sha1
, 
Êag
, 
cb_d©a
);

440 i‡(!
	`°∫cmp
("ªfs/ègs/", 
ª‚ame
, 10))

441  
	`≠≥nd_èg_ªf
(
ª‚ame
, 
sha1
, 
Êag
, 
cb_d©a
);

442  
	`≠≥nd_ªf
(
ª‚ame
, 
sha1
, 0);

443 
	}
}

445 
	$¢¨f_ªfs
(
hód
, 
ªmŸes
)

447 i‡(
hód
) {

448 
‹ig_˙t
 = 
ªf_«me_˙t
;

449 
	`f‹_óch_ªf
(
≠≥nd_hód_ªf
, 
NULL
);

450 
	`s‹t_ªf_ønge
(
‹ig_˙t
, 
ªf_«me_˙t
);

452 i‡(
ªmŸes
) {

453 
‹ig_˙t
 = 
ªf_«me_˙t
;

454 
	`f‹_óch_ªf
(
≠≥nd_ªmŸe_ªf
, 
NULL
);

455 
	`s‹t_ªf_ønge
(
‹ig_˙t
, 
ªf_«me_˙t
);

457 
	}
}

459 
	$ªv_is_hód
(*
hód
, 
hódÀn
, *
«me
,

460 *
hód_sha1
, *
sha1
)

462 i‡((!
hód
[0]) ||

463 (
hód_sha1
 && 
sha1
 && 
	`hashcmp
(head_sha1, sha1)))

465 i‡(!
	`°∫cmp
(
hód
, "refs/heads/", 11))

466 
hód
 += 11;

467 i‡(!
	`°∫cmp
(
«me
, "refs/heads/", 11))

468 
«me
 += 11;

469 i‡(!
	`°∫cmp
(
«me
, "heads/", 6))

470 
«me
 += 6;

471  !
	`°rcmp
(
hód
, 
«me
);

472 
	}
}

474 
	$show_mîge_ba£
(
commô_li°
 *
£í
, 
num_ªv
)

476 
Æl_mask
 = ((1u << (
REV_SHIFT
 + 
num_ªv
)) - 1);

477 
Æl_ªvs
 = 
Æl_mask
 & ~((1u << 
REV_SHIFT
) - 1);

478 
exô_°©us
 = 1;

480 
£í
) {

481 
commô
 *commô = 
	`p›_⁄e_commô
(&
£í
);

482 
Êags
 = 
commô
->
obje˘
.Êag†& 
Æl_mask
;

483 i‡(!(
Êags
 & 
UNINTERESTING
) &&

484 ((
Êags
 & 
Æl_ªvs
) ==áll_revs)) {

485 
	`puts
(
	`sha1_to_hex
(
commô
->
obje˘
.
sha1
));

486 
exô_°©us
 = 0;

487 
commô
->
obje˘
.
Êags
 |
UNINTERESTING
;

490  
exô_°©us
;

491 
	}
}

493 
	$show_ödïídít
(
commô
 **
ªv
,

494 
num_ªv
,

495 **
ªf_«me
,

496 *
ªv_mask
)

498 
i
;

500 
i
 = 0; i < 
num_ªv
; i++) {

501 
commô
 *commô = 
ªv
[
i
];

502 
Êag
 = 
ªv_mask
[
i
];

504 i‡(
commô
->
obje˘
.
Êags
 =
Êag
)

505 
	`puts
(
	`sha1_to_hex
(
commô
->
obje˘
.
sha1
));

506 
commô
->
obje˘
.
Êags
 |
UNINTERESTING
;

509 
	}
}

511 
	$≠≥nd_⁄e_ªv
(c⁄° *
av
)

513 
ªvkey
[20];

514 i‡(!
	`gë_sha1
(
av
, 
ªvkey
)) {

515 
	`≠≥nd_ªf
(
av
, 
ªvkey
, 0);

518 i‡(
	`°rchr
(
av
, '*') || strchr(av, '?') || strchr(av, '[')) {

520 
ßved_m©ches
 = 
ªf_«me_˙t
;

521 
m©ch_ªf_∑âîn
 = 
av
;

522 
m©ch_ªf_¶ash
 = 
	`cou¡_¶ash
(
av
);

523 
	`f‹_óch_ªf
(
≠≥nd_m©chög_ªf
, 
NULL
);

524 i‡(
ßved_m©ches
 =
ªf_«me_˙t
 &&

525 
ªf_«me_˙t
 < 
MAX_REVS
)

526 
	`îr‹
("nÿm©chögÑef†wôh %s", 
av
);

527 i‡(
ßved_m©ches
 + 1 < 
ªf_«me_˙t
)

528 
	`s‹t_ªf_ønge
(
ßved_m©ches
, 
ªf_«me_˙t
);

531 
	`dõ
("bad sha1Ñe„ªn˚ %s", 
av
);

532 
	}
}

534 
	$gô_show_bønch_c⁄fig
(c⁄° *
v¨
, c⁄° *
vÆue
)

536 i‡(!
	`°rcmp
(
v¨
, "showbranch.default")) {

537 i‡(
deÁu…_Æloc
 <
deÁu…_num
 + 1) {

538 
deÁu…_Æloc
 = default_alloc * 3 / 2 + 20;

539 
deÁu…_¨g
 = 
	`xªÆloc
(deÁu…_¨g,  *deÁu…_¨g * 
deÁu…_Æloc
);

541 
deÁu…_¨g
[
deÁu…_num
++] = 
	`x°rdup
(
vÆue
);

542 
deÁu…_¨g
[
deÁu…_num
] = 
NULL
;

546  
	`gô_deÁu…_c⁄fig
(
v¨
, 
vÆue
);

547 
	}
}

549 
	$omô_ö_dí£
(
commô
 *commô, commô **
ªv
, 
n
)

556 
i
, 
Êag
, 
cou¡
;

557 
i
 = 0; i < 
n
; i++)

558 i‡(
ªv
[
i
] =
commô
)

560 
Êag
 = 
commô
->
obje˘
.
Êags
;

561 
i
 = 
cou¡
 = 0; i < 
n
; i++) {

562 i‡(
Êag
 & (1u << (
i
 + 
REV_SHIFT
)))

563 
cou¡
++;

565 i‡(
cou¡
 == 1)

568 
	}
}

570 
	$∑r£_ªÊog_∑øm
(c⁄° *
¨g
, *
˙t
, c⁄° **
ba£
)

572 *
ï
;

573 *
˙t
 = 
	`°πoul
(
¨g
, &
ï
, 10);

574 i‡(*
ï
 == ',')

575 *
ba£
 = 
ï
 + 1;

576 i‡(*
ï
)

577 
	`dõ
("uƒecognizedÑeÊogÖ¨am '%s'", 
¨g
 + 9);

579 *
ba£
 = 
NULL
;

580 i‡(*
˙t
 <= 0)

581 *
˙t
 = 
DEFAULT_REFLOG
;

582 
	}
}

584 
	$cmd_show_bønch
(
ac
, c⁄° **
av
, c⁄° *
¥efix
)

586 
commô
 *
ªv
[
MAX_REVS
], *commit;

587 *
ªÊog_msg
[
MAX_REVS
];

588 
commô_li°
 *
li°
 = 
NULL
, *
£í
 = NULL;

589 
ªv_mask
[
MAX_REVS
];

590 
num_ªv
, 
i
, 
exåa
 = 0;

591 
Æl_hóds
 = 0, 
Æl_ªmŸes
 = 0;

592 
Æl_mask
, 
Æl_ªvs
;

593 
lifo
 = 1;

594 
hód
[128];

595 c⁄° *
hód_p
;

596 
hód_Àn
;

597 
hód_sha1
[20];

598 
mîge_ba£
 = 0;

599 
ödïídít
 = 0;

600 
no_«me
 = 0;

601 
sha1_«me
 = 0;

602 
shown_mîge_poöt
 = 0;

603 
wôh_cuºít_bønch
 = 0;

604 
hód_©
 = -1;

605 
t›ics
 = 0;

606 
dí£
 = 1;

607 
ªÊog
 = 0;

608 c⁄° *
ªÊog_ba£
 = 
NULL
;

610 
	`gô_c⁄fig
(
gô_show_bønch_c⁄fig
);

613 i‡(
ac
 =1 && 
deÁu…_num
) {

614 
ac
 = 
deÁu…_num
 + 1;

615 
av
 = 
deÁu…_¨g
 - 1;

618 1 < 
ac
 && 
av
[1][0] == '-') {

619 c⁄° *
¨g
 = 
av
[1];

620 i‡(!
	`°rcmp
(
¨g
, "--")) {

621 
ac
--; 
av
++;

624 i‡(!
	`°rcmp
(
¨g
, "--all") || !strcmp(arg, "-a"))

625 
Æl_hóds
 = 
Æl_ªmŸes
 = 1;

626 i‡(!
	`°rcmp
(
¨g
, "--remotes") || !strcmp(arg, "-r"))

627 
Æl_ªmŸes
 = 1;

628 i‡(!
	`°rcmp
(
¨g
, "--more"))

629 
exåa
 = 1;

630 i‡(!
	`°rcmp
(
¨g
, "--list"))

631 
exåa
 = -1;

632 i‡(!
	`°rcmp
(
¨g
, "--no-name"))

633 
no_«me
 = 1;

634 i‡(!
	`°rcmp
(
¨g
, "--current"))

635 
wôh_cuºít_bønch
 = 1;

636 i‡(!
	`°rcmp
(
¨g
, "--sha1-name"))

637 
sha1_«me
 = 1;

638 i‡(!
	`°∫cmp
(
¨g
, "--more=", 7))

639 
exåa
 = 
	`©oi
(
¨g
 + 7);

640 i‡(!
	`°rcmp
(
¨g
, "--merge-base"))

641 
mîge_ba£
 = 1;

642 i‡(!
	`°rcmp
(
¨g
, "--independent"))

643 
ödïídít
 = 1;

644 i‡(!
	`°rcmp
(
¨g
, "--topo-order"))

645 
lifo
 = 1;

646 i‡(!
	`°rcmp
(
¨g
, "--topics"))

647 
t›ics
 = 1;

648 i‡(!
	`°rcmp
(
¨g
, "--sparse"))

649 
dí£
 = 0;

650 i‡(!
	`°rcmp
(
¨g
, "--date-order"))

651 
lifo
 = 0;

652 i‡(!
	`°rcmp
(
¨g
, "--reflog") || !strcmp(arg, "-g")) {

653 
ªÊog
 = 
DEFAULT_REFLOG
;

655 i‡(!
	`°∫cmp
(
¨g
, "--reflog=", 9))

656 
	`∑r£_ªÊog_∑øm
(
¨g
 + 9, &
ªÊog
, &
ªÊog_ba£
);

657 i‡(!
	`°∫cmp
(
¨g
, "-g=", 3))

658 
	`∑r£_ªÊog_∑øm
(
¨g
 + 3, &
ªÊog
, &
ªÊog_ba£
);

660 
	`ußge
(
show_bønch_ußge
);

661 
ac
--; 
av
++;

663 
ac
--; 
av
++;

665 i‡(
exåa
 || 
ªÊog
) {

669 i‡(
ödïídít
 || 
mîge_ba£
)

670 
	`ußge
(
show_bønch_ußge
);

671 i‡(
ªÊog
 && ((0 < 
exåa
Ë|| 
Æl_hóds
 || 
Æl_ªmŸes
))

678 
	`ußge
(
show_bønch_ußge_ªÊog
);

682 i‡(
ac
 + 
Æl_hóds
 + 
Æl_ªmŸes
 == 0)

683 
Æl_hóds
 = 1;

685 i‡(
ªÊog
) {

686 
sha1
[20];

687 
¡h_desc
[256];

688 *
ªf
;

689 
ba£
 = 0;

691 i‡(
ac
 == 0) {

692 c⁄° *
Áke_av
[2];

693 c⁄° *
ª‚ame
;

695 
ª‚ame
 = 
	`ªsﬁve_ªf
("HEAD", 
sha1
, 1, 
NULL
);

696 
Áke_av
[0] = 
	`x°rdup
(
ª‚ame
);

697 
Áke_av
[1] = 
NULL
;

698 
av
 = 
Áke_av
;

699 
ac
 = 1;

701 i‡(
ac
 != 1)

702 
	`dõ
("--reflog optionÇeeds one branchÇame");

704 i‡(
MAX_REVS
 < 
ªÊog
)

705 
	`dõ
("Only %dÉntries can be shownát oneÅime.",

706 
MAX_REVS
);

707 i‡(!
	`dwim_ªf
(*
av
, 
	`°æí
(*av), 
sha1
, &
ªf
))

708 
	`dõ
("NÿsuchÑe‡%s", *
av
);

711 i‡(
ªÊog_ba£
) {

712 *
ï
;

713 
ba£
 = 
	`°πoul
(
ªÊog_ba£
, &
ï
, 10);

714 i‡(*
ï
) {

716 
©
;

717 
©
 = 
	`≠¥oxid©e
(
ªÊog_ba£
);

718 
	`ªad_ªf_©
(
ªf
, 
©
, -1, 
sha1
, 
NULL
,

719 
NULL
, NULL, &
ba£
);

723 
i
 = 0; i < 
ªÊog
; i++) {

724 *
logmsg
, *
msg
, *
m
;

725 
time°amp
;

726 
tz
;

728 i‡(
	`ªad_ªf_©
(
ªf
, 0, 
ba£
+
i
, 
sha1
, &
logmsg
,

729 &
time°amp
, &
tz
, 
NULL
)) {

730 
ªÊog
 = 
i
;

733 
msg
 = 
	`°rchr
(
logmsg
, '\t');

734 i‡(!
msg
)

735 
msg
 = "(none)";

737 
msg
++;

738 
m
 = 
	`xmÆloc
(
	`°æí
(
msg
) + 200);

739 
	`•rötf
(
m
, "(%s) %s",

740 
	`show_d©e
(
time°amp
, 
tz
, 1),

741 
msg
);

742 
ªÊog_msg
[
i
] = 
m
;

743 
	`‰ì
(
logmsg
);

744 
	`•rötf
(
¡h_desc
, "%s@{%d}", *
av
, 
ba£
+
i
);

745 
	`≠≥nd_ªf
(
¡h_desc
, 
sha1
, 1);

748 i‡(
Æl_hóds
 + 
Æl_ªmŸes
)

749 
	`¢¨f_ªfs
(
Æl_hóds
, 
Æl_ªmŸes
);

751 0 < 
ac
) {

752 
	`≠≥nd_⁄e_ªv
(*
av
);

753 
ac
--; 
av
++;

757 
hód_p
 = 
	`ªsﬁve_ªf
("HEAD", 
hód_sha1
, 1, 
NULL
);

758 i‡(
hód_p
) {

759 
hód_Àn
 = 
	`°æí
(
hód_p
);

760 
	`mem˝y
(
hód
, 
hód_p
, 
hód_Àn
 + 1);

763 
hód_Àn
 = 0;

764 
hód
[0] = 0;

767 i‡(
wôh_cuºít_bønch
 && 
hód_p
) {

768 
has_hód
 = 0;

769 
i
 = 0; !
has_hód
 && i < 
ªf_«me_˙t
; i++) {

773 i‡(
	`ªv_is_hód
(
hód
,

774 
hód_Àn
,

775 
ªf_«me
[
i
],

776 
hód_sha1
, 
NULL
))

777 
has_hód
++;

779 i‡(!
has_hód
) {

780 
pfxÀn
 = 
	`°æí
("refs/heads/");

781 
	`≠≥nd_⁄e_ªv
(
hód
 + 
pfxÀn
);

785 i‡(!
ªf_«me_˙t
) {

786 
	`Ârötf
(
°dîr
, "NoÑevsÅo be shown.\n");

787 
	`exô
(0);

790 
num_ªv
 = 0; 
ªf_«me
[num_rev];Çum_rev++) {

791 
ªvkey
[20];

792 
Êag
 = 1u << (
num_ªv
 + 
REV_SHIFT
);

794 i‡(
MAX_REVS
 <
num_ªv
)

795 
	`dõ
("ˇ¬Ÿ h™dÀ m‹êth™ %dÑevs.", 
MAX_REVS
);

796 i‡(
	`gë_sha1
(
ªf_«me
[
num_ªv
], 
ªvkey
))

797 
	`dõ
("'%s' i†nŸá vÆidÑef.", 
ªf_«me
[
num_ªv
]);

798 
commô
 = 
	`lookup_commô_ª„ªn˚
(
ªvkey
);

799 i‡(!
commô
)

800 
	`dõ
("cannot find commit %s (%s)",

801 
ªf_«me
[
num_ªv
], 
ªvkey
);

802 
	`∑r£_commô
(
commô
);

803 
	`m¨k_£í
(
commô
, &
£í
);

809 
commô
->
obje˘
.
Êags
 |
Êag
;

810 i‡(
commô
->
obje˘
.
Êags
 =
Êag
)

811 
	`ö£π_by_d©e
(
commô
, &
li°
);

812 
ªv
[
num_ªv
] = 
commô
;

814 
i
 = 0; i < 
num_ªv
; i++)

815 
ªv_mask
[
i
] = 
ªv
[i]->
obje˘
.
Êags
;

817 i‡(0 <
exåa
)

818 
	`joö_ªvs
(&
li°
, &
£í
, 
num_ªv
, 
exåa
);

820 
	`s‹t_by_d©e
(&
£í
);

822 i‡(
mîge_ba£
)

823  
	`show_mîge_ba£
(
£í
, 
num_ªv
);

825 i‡(
ödïídít
)

826  
	`show_ödïídít
(
ªv
, 
num_ªv
, 
ªf_«me
, 
ªv_mask
);

829 i‡(1 < 
num_ªv
 || 
exåa
 < 0) {

830 
i
 = 0; i < 
num_ªv
; i++) {

831 
j
;

832 
is_hód
 = 
	`ªv_is_hód
(
hód
,

833 
hód_Àn
,

834 
ªf_«me
[
i
],

835 
hód_sha1
,

836 
ªv
[
i
]->
obje˘
.
sha1
);

837 i‡(
exåa
 < 0)

838 
	`¥ötf
("%c [%s] ",

839 
is_hód
 ? '*' : ' ', 
ªf_«me
[
i
]);

841 
j
 = 0; j < 
i
; j++)

842 
	`putch¨
(' ');

843 
	`¥ötf
("%c [%s] ",

844 
is_hód
 ? '*' : '!', 
ªf_«me
[
i
]);

847 i‡(!
ªÊog
) {

849 
	`show_⁄e_commô
(
ªv
[
i
], 1);

852 
	`puts
(
ªÊog_msg
[
i
]);

854 i‡(
is_hód
)

855 
hód_©
 = 
i
;

857 i‡(0 <
exåa
) {

858 
i
 = 0; i < 
num_ªv
; i++)

859 
	`putch¨
('-');

860 
	`putch¨
('\n');

863 i‡(
exåa
 < 0)

864 
	`exô
(0);

867 
	`s‹t_ö_t›ﬁogiˇl_‹dî
(&
£í
, 
lifo
);

870 i‡(!
sha1_«me
 && !
no_«me
)

871 
	`«me_commôs
(
£í
, 
ªv
, 
ªf_«me
, 
num_ªv
);

873 
Æl_mask
 = ((1u << (
REV_SHIFT
 + 
num_ªv
)) - 1);

874 
Æl_ªvs
 = 
Æl_mask
 & ~((1u << 
REV_SHIFT
) - 1);

876 
£í
) {

877 
commô
 *commô = 
	`p›_⁄e_commô
(&
£í
);

878 
this_Êag
 = 
commô
->
obje˘
.
Êags
;

879 
is_mîge_poöt
 = ((
this_Êag
 & 
Æl_ªvs
) ==áll_revs);

881 
shown_mîge_poöt
 |
is_mîge_poöt
;

883 i‡(1 < 
num_ªv
) {

884 
is_mîge
 = !!(
commô
->
∑ª¡s
 &&

885 
commô
->
∑ª¡s
->
√xt
);

886 i‡(
t›ics
 &&

887 !
is_mîge_poöt
 &&

888 (
this_Êag
 & (1u << 
REV_SHIFT
)))

890 i‡(
dí£
 && 
is_mîge
 &&

891 
	`omô_ö_dí£
(
commô
, 
ªv
, 
num_ªv
))

893 
i
 = 0; i < 
num_ªv
; i++) {

894 
m¨k
;

895 i‡(!(
this_Êag
 & (1u << (
i
 + 
REV_SHIFT
))))

896 
m¨k
 = ' ';

897 i‡(
is_mîge
)

898 
m¨k
 = '-';

899 i‡(
i
 =
hód_©
)

900 
m¨k
 = '*';

902 
m¨k
 = '+';

903 
	`putch¨
(
m¨k
);

905 
	`putch¨
(' ');

907 
	`show_⁄e_commô
(
commô
, 
no_«me
);

909 i‡(
shown_mîge_poöt
 && --
exåa
 < 0)

913 
	}
}

	@builtin-show-ref.c

1 
	~"ˇche.h
"

2 
	~"ªfs.h
"

3 
	~"obje˘.h
"

4 
	~"èg.h
"

5 
	~"∑th-li°.h
"

7 c⁄° 
	gshow_ªf_ußge
[] = "git show-ref [-q|--quiet] [--verify] [-h|--head] [-d|--dereference] [-s|--hash[=<length>]] [--abbrev[=<length>]] [--tags] [--heads] [--] [pattern*] <Ñef-list";

9 
	gdîef_ègs
 = 0, 
	gshow_hód
 = 0, 
	gègs_⁄ly
 = 0, 
	ghóds_⁄ly
 = 0,

10 
	gfound_m©ch
 = 0, 
	gvîify
 = 0, 
	gquõt
 = 0, 
	ghash_⁄ly
 = 0, 
	gabbªv
 = 0;

11 c⁄° **
	g∑âîn
;

13 
	$show_⁄e
(c⁄° *
ª‚ame
, c⁄° *
sha1
)

15 c⁄° *
hex
 = 
	`föd_unique_abbªv
(
sha1
, 
abbªv
);

16 i‡(
hash_⁄ly
)

17 
	`¥ötf
("%s\n", 
hex
);

19 
	`¥ötf
("%†%s\n", 
hex
, 
ª‚ame
);

20 
	}
}

22 
	$show_ªf
(c⁄° *
ª‚ame
, c⁄° *
sha1
, 
Êag
, *
cbd©a
)

24 
obje˘
 *
obj
;

25 c⁄° *
hex
;

26 
≥ñed
[20];

28 i‡(
ègs_⁄ly
 || 
hóds_⁄ly
) {

29 
m©ch
;

31 
m©ch
 = 
hóds_⁄ly
 && !
	`°∫cmp
(
ª‚ame
, "refs/heads/", 11);

32 
m©ch
 |
ègs_⁄ly
 && !
	`°∫cmp
(
ª‚ame
, "refs/tags/", 10);

33 i‡(!
m©ch
)

36 i‡(
∑âîn
) {

37 
ªÊí
 = 
	`°æí
(
ª‚ame
);

38 c⁄° **
p
 = 
∑âîn
, *
m
;

39 (
m
 = *
p
++Ë!
NULL
) {

40 
Àn
 = 
	`°æí
(
m
);

41 i‡(
Àn
 > 
ªÊí
)

43 i‡(
	`memcmp
(
m
, 
ª‚ame
 + 
ªÊí
 - 
Àn
,Üen))

45 i‡(
Àn
 =
ªÊí
)

46 
m©ch
;

48 i‡(
vîify
)

50 i‡(
ª‚ame
[
ªÊí
 - 
Àn
 - 1] == '/')

51 
m©ch
;

56 
m©ch
:

57 
found_m©ch
++;

63 i‡(!
	`has_sha1_fûe
(
sha1
))

64 
	`dõ
("gô-show-ªf: badÑe‡%†(%s)", 
ª‚ame
,

65 
	`sha1_to_hex
(
sha1
));

67 i‡(
quõt
)

70 
	`show_⁄e
(
ª‚ame
, 
sha1
);

72 i‡(!
dîef_ègs
)

75 i‡((
Êag
 & 
REF_ISPACKED
Ë&& !
	`≥ñ_ªf
(
ª‚ame
, 
≥ñed
)) {

76 i‡(!
	`is_nuŒ_sha1
(
≥ñed
)) {

77 
hex
 = 
	`föd_unique_abbªv
(
≥ñed
, 
abbªv
);

78 
	`¥ötf
("%†%s^{}\n", 
hex
, 
ª‚ame
);

82 
obj
 = 
	`∑r£_obje˘
(
sha1
);

83 i‡(!
obj
)

84 
	`dõ
("gô-show-ªf: badÑe‡%†(%s)", 
ª‚ame
,

85 
	`sha1_to_hex
(
sha1
));

86 i‡(
obj
->
ty≥
 =
OBJ_TAG
) {

87 
obj
 = 
	`dîef_èg
(obj, 
ª‚ame
, 0);

88 
hex
 = 
	`föd_unique_abbªv
(
obj
->
sha1
, 
abbªv
);

89 
	`¥ötf
("%†%s^{}\n", 
hex
, 
ª‚ame
);

93 
	}
}

95 
	$add_exi°ög
(c⁄° *
ª‚ame
, c⁄° *
sha1
, 
Êag
, *
cbd©a
)

97 
∑th_li°
 *
li°
 = (∑th_li° *)
cbd©a
;

98 
	`∑th_li°_ö£π
(
ª‚ame
, 
li°
);

100 
	}
}

111 
	$ex˛ude_exi°ög
(c⁄° *
m©ch
)

113 
∑th_li°
 
exi°ög_ªfs
 = { 
NULL
, 0, 0, 0 };

114 
buf
[1024];

115 
m©chÀn
 = 
m©ch
 ? 
	`°æí
(match) : 0;

117 
	`f‹_óch_ªf
(
add_exi°ög
, &
exi°ög_ªfs
);

118 
	`fgës
(
buf
, (buf), 
°dö
)) {

119 *
ªf
;

120 
Àn
 = 
	`°æí
(
buf
);

122 i‡(
Àn
 > 0 && 
buf
[len - 1] == '\n')

123 
buf
[--
Àn
] = '\0';

124 i‡(3 <
Àn
 && !
	`°rcmp
(
buf
 +Üen - 3, "^{}")) {

125 
Àn
 -= 3;

126 
buf
[
Àn
] = '\0';

128 
ªf
 = 
buf
 + 
Àn
; buf <Ñef;Ñef--)

129 i‡(
	`is•a˚
(
ªf
[-1]))

131 i‡(
m©ch
) {

132 
ªÊí
 = 
buf
 + 
Àn
 - 
ªf
;

133 i‡(
ªÊí
 < 
m©chÀn
)

135 i‡(
	`°∫cmp
(
ªf
, 
m©ch
, 
m©chÀn
))

138 i‡(
	`check_ªf_f‹m©
(
ªf
)) {

139 
	`Ârötf
(
°dîr
, "w¨nög:Ñe‡'%s' ign‹ed\n", 
ªf
);

142 i‡(!
	`∑th_li°_has_∑th
(&
exi°ög_ªfs
, 
ªf
)) {

143 
	`¥ötf
("%s\n", 
buf
);

147 
	}
}

149 
	$cmd_show_ªf
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

151 
i
;

153 
i
 = 1; i < 
¨gc
; i++) {

154 c⁄° *
¨g
 = 
¨gv
[
i
];

155 i‡(*
¨g
 != '-') {

156 
∑âîn
 = 
¨gv
 + 
i
;

159 i‡(!
	`°rcmp
(
¨g
, "--")) {

160 
∑âîn
 = 
¨gv
 + 
i
 + 1;

161 i‡(!*
∑âîn
)

162 
∑âîn
 = 
NULL
;

165 i‡(!
	`°rcmp
(
¨g
, "-q") || !strcmp(arg, "--quiet")) {

166 
quõt
 = 1;

169 i‡(!
	`°rcmp
(
¨g
, "-h") || !strcmp(arg, "--head")) {

170 
show_hód
 = 1;

173 i‡(!
	`°rcmp
(
¨g
, "-d") || !strcmp(arg, "--dereference")) {

174 
dîef_ègs
 = 1;

177 i‡(!
	`°rcmp
(
¨g
, "-s") || !strcmp(arg, "--hash")) {

178 
hash_⁄ly
 = 1;

181 i‡(!
	`°∫cmp
(
¨g
, "--hash=", 7) ||

182 (!
	`°∫cmp
(
¨g
, "--abbrev", 8) &&

183 (
¨g
[8] == '=' ||árg[8] == '\0'))) {

184 i‡(
¨g
[2] != 'h' && !arg[8])

186 
abbªv
 = 
DEFAULT_ABBREV
;

189 *
íd
;

190 i‡(
¨g
[2] == 'h') {

191 
hash_⁄ly
 = 1;

192 
¨g
 += 7;

195 
¨g
 += 9;

196 
abbªv
 = 
	`°πoul
(
¨g
, &
íd
, 10);

197 i‡(*
íd
 || 
abbªv
 > 40)

198 
	`ußge
(
show_ªf_ußge
);

199 i‡(
abbªv
 < 
MINIMUM_ABBREV
)

200 
abbªv
 = 
MINIMUM_ABBREV
;

204 i‡(!
	`°rcmp
(
¨g
, "--verify")) {

205 
vîify
 = 1;

208 i‡(!
	`°rcmp
(
¨g
, "--tags")) {

209 
ègs_⁄ly
 = 1;

212 i‡(!
	`°rcmp
(
¨g
, "--heads")) {

213 
hóds_⁄ly
 = 1;

216 i‡(!
	`°rcmp
(
¨g
, "--exclude-existing"))

217  
	`ex˛ude_exi°ög
(
NULL
);

218 i‡(!
	`°∫cmp
(
¨g
, "--exclude-existing=", 19))

219  
	`ex˛ude_exi°ög
(
¨g
 + 19);

220 
	`ußge
(
show_ªf_ußge
);

223 i‡(
vîify
) {

224 
sha1
[20];

226 *
∑âîn
) {

227 i‡(!
	`°∫cmp
(*
∑âîn
, "refs/", 5) &&

228 
	`ªsﬁve_ªf
(*
∑âîn
, 
sha1
, 1, 
NULL
)) {

229 i‡(!
quõt
)

230 
	`show_⁄e
(*
∑âîn
, 
sha1
);

232 i‡(!
quõt
)

233 
	`dõ
("'%s' -ÇŸá vÆidÑef", *
∑âîn
);

236 
∑âîn
++;

241 i‡(
show_hód
)

242 
	`hód_ªf
(
show_ªf
, 
NULL
);

243 
	`f‹_óch_ªf
(
show_ªf
, 
NULL
);

244 i‡(!
found_m©ch
) {

245 i‡(
vîify
 && !
quõt
)

246 
	`dõ
("No match");

250 
	}
}

	@builtin-stripspace.c

1 
	~"buûtö.h
"

9 
	$˛ónup
(*
löe
)

11 
Àn
 = 
	`°æí
(
löe
);

13 i‡(
Àn
 && 
löe
[len-1] == '\n') {

14 i‡(
Àn
 == 1)

17 
c
 = 
löe
[
Àn
-2];

18 i‡(!
	`is•a˚
(
c
))

20 
löe
[
Àn
-2] = '\n';

21 
Àn
--;

22 
löe
[
Àn
] = 0;

23 } 
Àn
 > 1);

27 
	}
}

29 
	$°rù•a˚
(
FILE
 *
ö
, FILE *
out
)

31 
em±õs
 = -1;

32 
öcom∂ëe
 = 0;

33 
löe
[1024];

35 
	`fgës
(
löe
, ÷öe), 
ö
)) {

36 
öcom∂ëe
 = 
	`˛ónup
(
löe
);

39 i‡(
löe
[0] != '\n') {

40 i‡(
em±õs
 > 0)

41 
	`Âutc
('\n', 
out
);

42 
em±õs
 = 0;

43 
	`Âuts
(
löe
, 
out
);

46 i‡(
em±õs
 < 0)

48 
em±õs
++;

50 i‡(
öcom∂ëe
)

51 
	`Âutc
('\n', 
out
);

52 
	}
}

54 
	$cmd_°rù•a˚
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

56 
	`°rù•a˚
(
°dö
, 
°dout
);

58 
	}
}

	@builtin-symbolic-ref.c

1 
	~"buûtö.h
"

2 
	~"ˇche.h
"

3 
	~"ªfs.h
"

5 c⁄° 
	ggô_symbﬁic_ªf_ußge
[] =

8 
	$check_symªf
(c⁄° *
HEAD
, 
quõt
)

10 
sha1
[20];

11 
Êag
;

12 c⁄° *
ªfs_hóds_ma°î
 = 
	`ªsﬁve_ªf
(
HEAD
, 
sha1
, 0, &
Êag
);

14 i‡(!
ªfs_hóds_ma°î
)

15 
	`dõ
("NÿsuchÑef: %s", 
HEAD
);

16 i‡(!(
Êag
 & 
REF_ISSYMREF
)) {

17 i‡(!
quõt
)

18 
	`dõ
("ª‡%†i†nŸá symbﬁi¯ªf", 
HEAD
);

20 
	`exô
(1);

22 
	`puts
(
ªfs_hóds_ma°î
);

23 
	}
}

25 
	$cmd_symbﬁic_ªf
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

27 
quõt
 = 0;

28 c⁄° *
msg
 = 
NULL
;

30 
	`gô_c⁄fig
(
gô_deÁu…_c⁄fig
);

32 1 < 
¨gc
) {

33 c⁄° *
¨g
 = 
¨gv
[1];

34 i‡(
¨g
[0] != '-')

36 i‡(!
	`°rcmp
("-q", 
¨g
))

37 
quõt
 = 1;

38 i‡(!
	`°rcmp
("-m", 
¨g
)) {

39 
¨gc
--;

40 
¨gv
++;

41 i‡(
¨gc
 <= 1)

43 
msg
 = 
¨gv
[1];

44 i‡(!*
msg
)

45 
	`dõ
("RefusingÅoÖerform update withÉmpty message");

46 i‡(
	`°rchr
(
msg
, '\n'))

47 
	`dõ
("RefusingÅoÖerform update with \\n in message");

49 i‡(!
	`°rcmp
("--", 
¨g
)) {

50 
¨gc
--;

51 
¨gv
++;

55 
	`dõ
("unknow¿›ti⁄ %s", 
¨g
);

56 
¨gc
--;

57 
¨gv
++;

60 
¨gc
) {

62 
	`check_symªf
(
¨gv
[1], 
quõt
);

65 
	`¸óã_symªf
(
¨gv
[1],árgv[2], 
msg
);

68 
	`ußge
(
gô_symbﬁic_ªf_ußge
);

71 
	}
}

	@builtin-tar-tree.c

4 
	~"ˇche.h
"

5 
	~"commô.h
"

6 
	~"èr.h
"

7 
	~"buûtö.h
"

8 
	~"quŸe.h
"

10 c⁄° 
	gèr_åì_ußge
[] =

14 
	$cmd_èr_åì
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

26 
i
;

27 c⁄° **
«rgv
 = 
	`xˇŒoc
((*«rgv), 
¨gc
 + 2);

28 *
ba£dú_¨g
;

29 
«rgc
 = 0;

31 
«rgv
[
«rgc
++] = "git-archive";

32 
«rgv
[
«rgc
++] = "--format=tar";

34 i‡(2 <
¨gc
 && !
	`°∫cmp
("--ªmŸe=", 
¨gv
[1], 9)) {

35 
«rgv
[
«rgc
++] = 
¨gv
[1];

36 
¨gv
++;

37 
¨gc
--;

39 
¨gc
) {

41 
	`ußge
(
èr_åì_ußge
);

45 
ba£dú_¨g
 = 
	`xmÆloc
(
	`°æí
(
¨gv
[2]) + 11);

46 
	`•rötf
(
ba£dú_¨g
, "--¥efix=%s/", 
¨gv
[2]);

47 
«rgv
[
«rgc
++] = 
ba£dú_¨g
;

51 
«rgv
[
«rgc
++] = 
¨gv
[1];

53 
«rgv
[
«rgc
] = 
NULL
;

55 
	`Ârötf
(
°dîr
,

58 
i
 = 0; i < 
«rgc
; i++) {

59 
	`Âutc
(' ', 
°dîr
);

60 
	`sq_quŸe_¥öt
(
°dîr
, 
«rgv
[
i
]);

62 
	`Âutc
('\n', 
°dîr
);

63  
	`cmd_¨chive
(
«rgc
, 
«rgv
, 
¥efix
);

64 
	}
}

67 
	#RECORDSIZE
 (512)

	)

68 
	#HEADERSIZE
 (2 * 
RECORDSIZE
)

	)

70 
	$cmd_gë_èr_commô_id
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

72 
buf„r
[
HEADERSIZE
];

73 
u°¨_hódî
 *
hódî
 = (u°¨_hódî *)
buf„r
;

74 *
c⁄ã¡
 = 
buf„r
 + 
RECORDSIZE
;

75 
ssize_t
 
n
;

77 
n
 = 
	`ªad_ö_fuŒ
(0, 
buf„r
, 
HEADERSIZE
);

78 i‡(
n
 < 
HEADERSIZE
)

79 
	`dõ
("git-get-tar-commit-id:ÑeadÉrror");

80 i‡(
hódî
->
ty≥Êag
[0] != 'g')

82 i‡(
	`memcmp
(
c⁄ã¡
, "52 comment=", 11))

85 
n
 = 
	`wrôe_ö_fuŒ
(1, 
c⁄ã¡
 + 11, 41);

86 i‡(
n
 < 41)

87 
	`dõ
("git-get-tar-commit-id: writeÉrror");

90 
	}
}

	@builtin-unpack-objects.c

1 
	~"buûtö.h
"

2 
	~"ˇche.h
"

3 
	~"obje˘.h
"

4 
	~"dñè.h
"

5 
	~"∑ck.h
"

6 
	~"blob.h
"

7 
	~"commô.h
"

8 
	~"èg.h
"

9 
	~"åì.h
"

11 
	gdry_run
, 
	gquõt
, 
	gªcovî
, 
	ghas_îr‹s
;

12 c⁄° 
	gu≈ack_ußge
[] = "git-unpack-objects [-n] [-q] [-r] <Öack-file";

15 
	gbuf„r
[4096];

16 
	goff£t
, 
	gÀn
, 
	gc⁄sumed_byãs
;

17 
SHA_CTX
 
	g˘x
;

23 *
	$fûl
(
mö
)

25 i‡(
mö
 <
Àn
)

26  
buf„r
 + 
off£t
;

27 i‡(
mö
 > (
buf„r
))

28 
	`dõ
("ˇ¬Ÿ fû»%d byãs", 
mö
);

29 i‡(
off£t
) {

30 
	`SHA1_Upd©e
(&
˘x
, 
buf„r
, 
off£t
);

31 
	`memmove
(
buf„r
, buf„∏+ 
off£t
, 
Àn
);

32 
off£t
 = 0;

35 
ªt
 = 
	`xªad
(0, 
buf„r
 + 
Àn
, (buffer) -Üen);

36 i‡(
ªt
 <= 0) {

37 i‡(!
ªt
)

38 
	`dõ
("early EOF");

39 
	`dõ
("ªadÉº‹ o¿öput: %s", 
	`°ªº‹
(
î∫o
));

41 
Àn
 +
ªt
;

42 } 
Àn
 < 
mö
);

43  
buf„r
;

44 
	}
}

46 
	$u£
(
byãs
)

48 i‡(
byãs
 > 
Àn
)

49 
	`dõ
("used more bytesÅhan wereávailable");

50 
Àn
 -
byãs
;

51 
off£t
 +
byãs
;

52 
c⁄sumed_byãs
 +
byãs
;

53 
	}
}

55 *
	$gë_d©a
(
size
)

57 
z_°ªam
 
°ªam
;

58 *
buf
 = 
	`xmÆloc
(
size
);

60 
	`mem£t
(&
°ªam
, 0, (stream));

62 
°ªam
.
√xt_out
 = 
buf
;

63 
°ªam
.
avaû_out
 = 
size
;

64 
°ªam
.
√xt_ö
 = 
	`fûl
(1);

65 
°ªam
.
avaû_ö
 = 
Àn
;

66 
	`öÊ©eInô
(&
°ªam
);

69 
ªt
 = 
	`öÊ©e
(&
°ªam
, 0);

70 
	`u£
(
Àn
 - 
°ªam
.
avaû_ö
);

71 i‡(
°ªam
.
tŸÆ_out
 =
size
 && 
ªt
 =
Z_STREAM_END
)

73 i‡(
ªt
 !
Z_OK
) {

74 
	`îr‹
("öÊ©êªtu∫ed %d\n", 
ªt
);

75 
	`‰ì
(
buf
);

76 
buf
 = 
NULL
;

77 i‡(!
ªcovî
)

78 
	`exô
(1);

79 
has_îr‹s
 = 1;

82 
°ªam
.
√xt_ö
 = 
	`fûl
(1);

83 
°ªam
.
avaû_ö
 = 
Àn
;

85 
	`öÊ©eEnd
(&
°ªam
);

86  
buf
;

87 
	}
}

89 
	sdñè_öfo
 {

90 
	mba£_sha1
[20];

91 
	mba£_off£t
;

92 
	msize
;

93 *
	mdñè
;

94 
	mƒ
;

95 
dñè_öfo
 *
	m√xt
;

98 
dñè_öfo
 *
	gdñè_li°
;

100 
	$add_dñè_to_li°
(
ƒ
, c⁄° *
ba£_sha1
,

101 
ba£_off£t
,

102 *
dñè
, 
size
)

104 
dñè_öfo
 *
öfo
 = 
	`xmÆloc
((*info));

106 
	`hash˝y
(
öfo
->
ba£_sha1
, base_sha1);

107 
öfo
->
ba£_off£t
 = base_offset;

108 
öfo
->
size
 = size;

109 
öfo
->
dñè
 = delta;

110 
öfo
->
ƒ
 =Çr;

111 
öfo
->
√xt
 = 
dñè_li°
;

112 
dñè_li°
 = 
öfo
;

113 
	}
}

115 
	sobj_öfo
 {

116 
	moff£t
;

117 
	msha1
[20];

120 
obj_öfo
 *
	gobj_li°
;

122 
added_obje˘
(
ƒ
, c⁄° *
ty≥
, *
d©a
,

123 
size
);

125 
	$wrôe_obje˘
(
ƒ
, *
buf
, 
size
,

126 c⁄° *
ty≥
)

128 i‡(
	`wrôe_sha1_fûe
(
buf
, 
size
, 
ty≥
, 
obj_li°
[
ƒ
].
sha1
) < 0)

129 
	`dõ
("failedÅo write object");

130 
	`added_obje˘
(
ƒ
, 
ty≥
, 
buf
, 
size
);

131 
	}
}

133 
	$ªsﬁve_dñè
(
ƒ
, c⁄° *
ty≥
,

134 *
ba£
, 
ba£_size
,

135 *
dñè
, 
dñè_size
)

137 *
ªsu…
;

138 
ªsu…_size
;

140 
ªsu…
 = 
	`∑tch_dñè
(
ba£
, 
ba£_size
,

141 
dñè
, 
dñè_size
,

142 &
ªsu…_size
);

143 i‡(!
ªsu…
)

144 
	`dõ
("failedÅoápply delta");

145 
	`‰ì
(
dñè
);

146 
	`wrôe_obje˘
(
ƒ
, 
ªsu…
, 
ªsu…_size
, 
ty≥
);

147 
	`‰ì
(
ªsu…
);

148 
	}
}

150 
	$added_obje˘
(
ƒ
, c⁄° *
ty≥
, *
d©a
,

151 
size
)

153 
dñè_öfo
 **
p
 = &
dñè_li°
;

154 
dñè_öfo
 *
öfo
;

156 (
öfo
 = *
p
Ë!
NULL
) {

157 i‡(!
	`hashcmp
(
öfo
->
ba£_sha1
, 
obj_li°
[
ƒ
].
sha1
) ||

158 
öfo
->
ba£_off£t
 =
obj_li°
[
ƒ
].
off£t
) {

159 *
p
 = 
öfo
->
√xt
;

160 
p
 = &
dñè_li°
;

161 
	`ªsﬁve_dñè
(
öfo
->
ƒ
, 
ty≥
, 
d©a
, 
size
,

162 
öfo
->
dñè
, info->
size
);

163 
	`‰ì
(
öfo
);

166 
p
 = &
öfo
->
√xt
;

168 
	}
}

170 
	$u≈ack_n⁄_dñè_íåy
(
obje˘_ty≥
 
köd
, 
size
,

171 
ƒ
)

173 *
buf
 = 
	`gë_d©a
(
size
);

174 c⁄° *
ty≥
;

176 
köd
) {

177 
OBJ_COMMIT
: 
ty≥
 = 
commô_ty≥
; ;

178 
OBJ_TREE
: 
ty≥
 = 
åì_ty≥
; ;

179 
OBJ_BLOB
: 
ty≥
 = 
blob_ty≥
; ;

180 
OBJ_TAG
: 
ty≥
 = 
èg_ty≥
; ;

181 : 
	`dõ
("badÅy≥ %d", 
köd
);

183 i‡(!
dry_run
 && 
buf
)

184 
	`wrôe_obje˘
(
ƒ
, 
buf
, 
size
, 
ty≥
);

185 
	`‰ì
(
buf
);

186 
	}
}

188 
	$u≈ack_dñè_íåy
(
obje˘_ty≥
 
köd
, 
dñè_size
,

189 
ƒ
)

191 *
dñè_d©a
, *
ba£
;

192 
ba£_size
;

193 
ty≥
[20];

194 
ba£_sha1
[20];

196 i‡(
köd
 =
OBJ_REF_DELTA
) {

197 
	`hash˝y
(
ba£_sha1
, 
	`fûl
(20));

198 
	`u£
(20);

199 
dñè_d©a
 = 
	`gë_d©a
(
dñè_size
);

200 i‡(
dry_run
 || !
dñè_d©a
) {

201 
	`‰ì
(
dñè_d©a
);

204 i‡(!
	`has_sha1_fûe
(
ba£_sha1
)) {

205 
	`hash˝y
(
obj_li°
[
ƒ
].
sha1
, 
nuŒ_sha1
);

206 
	`add_dñè_to_li°
(
ƒ
, 
ba£_sha1
, 0, 
dñè_d©a
, 
dñè_size
);

210 
ba£_found
 = 0;

211 *
∑ck
, 
c
;

212 
ba£_off£t
;

213 
lo
, 
mid
, 
hi
;

215 
∑ck
 = 
	`fûl
(1);

216 
c
 = *
∑ck
;

217 
	`u£
(1);

218 
ba£_off£t
 = 
c
 & 127;

219 
c
 & 128) {

220 
ba£_off£t
 += 1;

221 i‡(!
ba£_off£t
 || base_offset & ~(~0UL >> 7))

222 
	`dõ
("offset value overflow for delta base object");

223 
∑ck
 = 
	`fûl
(1);

224 
c
 = *
∑ck
;

225 
	`u£
(1);

226 
ba£_off£t
 = (ba£_off£à<< 7Ë+ (
c
 & 127);

228 
ba£_off£t
 = 
obj_li°
[
ƒ
].
off£t
 - base_offset;

230 
dñè_d©a
 = 
	`gë_d©a
(
dñè_size
);

231 i‡(
dry_run
 || !
dñè_d©a
) {

232 
	`‰ì
(
dñè_d©a
);

235 
lo
 = 0;

236 
hi
 = 
ƒ
;

237 
lo
 < 
hi
) {

238 
mid
 = (
lo
 + 
hi
)/2;

239 i‡(
ba£_off£t
 < 
obj_li°
[
mid
].
off£t
) {

240 
hi
 = 
mid
;

241 } i‡(
ba£_off£t
 > 
obj_li°
[
mid
].
off£t
) {

242 
lo
 = 
mid
 + 1;

244 
	`hash˝y
(
ba£_sha1
, 
obj_li°
[
mid
].
sha1
);

245 
ba£_found
 = !
	`is_nuŒ_sha1
(
ba£_sha1
);

249 i‡(!
ba£_found
) {

252 
	`hash˝y
(
obj_li°
[
ƒ
].
sha1
, 
nuŒ_sha1
);

253 
	`add_dñè_to_li°
(
ƒ
, 
nuŒ_sha1
, 
ba£_off£t
, 
dñè_d©a
, 
dñè_size
);

258 
ba£
 = 
	`ªad_sha1_fûe
(
ba£_sha1
, 
ty≥
, &
ba£_size
);

259 i‡(!
ba£
) {

260 
	`îr‹
("failedÅoÑead delta-pack base object %s",

261 
	`sha1_to_hex
(
ba£_sha1
));

262 i‡(!
ªcovî
)

263 
	`exô
(1);

264 
has_îr‹s
 = 1;

267 
	`ªsﬁve_dñè
(
ƒ
, 
ty≥
, 
ba£
, 
ba£_size
, 
dñè_d©a
, 
dñè_size
);

268 
	`‰ì
(
ba£
);

269 
	}
}

271 
	$u≈ack_⁄e
(
ƒ
, 
tŸÆ
)

273 
shi·
;

274 *
∑ck
, 
c
;

275 
size
;

276 
obje˘_ty≥
 
ty≥
;

278 
obj_li°
[
ƒ
].
off£t
 = 
c⁄sumed_byãs
;

280 
∑ck
 = 
	`fûl
(1);

281 
c
 = *
∑ck
;

282 
	`u£
(1);

283 
ty≥
 = (
c
 >> 4) & 7;

284 
size
 = (
c
 & 15);

285 
shi·
 = 4;

286 
c
 & 0x80) {

287 
∑ck
 = 
	`fûl
(1);

288 
c
 = *
∑ck
;

289 
	`u£
(1);

290 
size
 +(
c
 & 0x7fË<< 
shi·
;

291 
shi·
 += 7;

293 i‡(!
quõt
) {

294 
œ°_£c
;

295 
œ°_≥r˚¡
;

296 
timevÆ
 
now
;

297 
≥r˚¡age
 = ((
ƒ
+1Ë* 100Ë/ 
tŸÆ
;

299 
	`gëtimeofday
(&
now
, 
NULL
);

300 i‡(
≥r˚¡age
 !
œ°_≥r˚¡
 || 
now
.
tv_£c
 !
œ°_£c
) {

301 
œ°_£c
 = 
now
.
tv_£c
;

302 
œ°_≥r˚¡
 = 
≥r˚¡age
;

303 
	`Ârötf
(
°dîr
, "%4u%% (%u/%u) done\r",

304 
≥r˚¡age
, (
ƒ
+1), 
tŸÆ
);

307 
ty≥
) {

308 
OBJ_COMMIT
:

309 
OBJ_TREE
:

310 
OBJ_BLOB
:

311 
OBJ_TAG
:

312 
	`u≈ack_n⁄_dñè_íåy
(
ty≥
, 
size
, 
ƒ
);

314 
OBJ_REF_DELTA
:

315 
OBJ_OFS_DELTA
:

316 
	`u≈ack_dñè_íåy
(
ty≥
, 
size
, 
ƒ
);

319 
	`îr‹
("bad obje˘Åy≥ %d", 
ty≥
);

320 
has_îr‹s
 = 1;

321 i‡(
ªcovî
)

323 
	`exô
(1);

325 
	}
}

327 
	$u≈ack_Æl
()

329 
i
;

330 
∑ck_hódî
 *
hdr
 = 
	`fûl
((pack_header));

331 
ƒ_obje˘s
 = 
	`¡ohl
(
hdr
->
hdr_íåõs
);

333 i‡(
	`¡ohl
(
hdr
->
hdr_sig«tuª
Ë!
PACK_SIGNATURE
)

334 
	`dõ
("badÖack file");

335 i‡(!
	`∑ck_vîsi⁄_ok
(
hdr
->
hdr_vîsi⁄
))

336 
	`dõ
("unknow¿∑ck fûêvîsi⁄ %d", 
	`¡ohl
(
hdr
->
hdr_vîsi⁄
));

337 
	`Ârötf
(
°dîr
, "U≈ackög %d obje˘s\n", 
ƒ_obje˘s
);

339 
obj_li°
 = 
	`xmÆloc
(
ƒ_obje˘s
 * (*obj_list));

340 
	`u£
((
∑ck_hódî
));

341 
i
 = 0; i < 
ƒ_obje˘s
; i++)

342 
	`u≈ack_⁄e
(
i
, 
ƒ_obje˘s
);

343 i‡(
dñè_li°
)

344 
	`dõ
("unresolved deltasÜeftáfter unpacking");

345 
	}
}

347 
	$cmd_u≈ack_obje˘s
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

349 
i
;

350 
sha1
[20];

352 
	`gô_c⁄fig
(
gô_deÁu…_c⁄fig
);

354 
quõt
 = !
	`ißây
(2);

356 
i
 = 1 ; i < 
¨gc
; i++) {

357 c⁄° *
¨g
 = 
¨gv
[
i
];

359 i‡(*
¨g
 == '-') {

360 i‡(!
	`°rcmp
(
¨g
, "-n")) {

361 
dry_run
 = 1;

364 i‡(!
	`°rcmp
(
¨g
, "-q")) {

365 
quõt
 = 1;

368 i‡(!
	`°rcmp
(
¨g
, "-r")) {

369 
ªcovî
 = 1;

372 i‡(!
	`°∫cmp
(
¨g
, "--pack_header=", 14)) {

373 
∑ck_hódî
 *
hdr
;

374 *
c
;

376 
hdr
 = (
∑ck_hódî
 *)
buf„r
;

377 
hdr
->
hdr_sig«tuª
 = 
	`ht⁄l
(
PACK_SIGNATURE
);

378 
hdr
->
hdr_vîsi⁄
 = 
	`ht⁄l
(
	`°πoul
(
¨g
 + 14, &
c
, 10));

379 i‡(*
c
 != ',')

380 
	`dõ
("bad %s", 
¨g
);

381 
hdr
->
hdr_íåõs
 = 
	`ht⁄l
(
	`°πoul
(
c
 + 1, &c, 10));

382 i‡(*
c
)

383 
	`dõ
("bad %s", 
¨g
);

384 
Àn
 = (*
hdr
);

387 
	`ußge
(
u≈ack_ußge
);

391 
	`ußge
(
u≈ack_ußge
);

393 
	`SHA1_Inô
(&
˘x
);

394 
	`u≈ack_Æl
();

395 
	`SHA1_Upd©e
(&
˘x
, 
buf„r
, 
off£t
);

396 
	`SHA1_FöÆ
(
sha1
, &
˘x
);

397 i‡(
	`hashcmp
(
	`fûl
(20), 
sha1
))

398 
	`dõ
("final sha1 didÇot match");

399 
	`u£
(20);

402 
Àn
) {

403 
ªt
 = 
	`xwrôe
(1, 
buf„r
 + 
off£t
, 
Àn
);

404 i‡(
ªt
 <= 0)

406 
Àn
 -
ªt
;

407 
off£t
 +
ªt
;

411 i‡(!
quõt
)

412 
	`Ârötf
(
°dîr
, "\n");

413  
has_îr‹s
;

414 
	}
}

	@builtin-update-index.c

6 
	~"ˇche.h
"

7 
	~"°rbuf.h
"

8 
	~"quŸe.h
"

9 
	~"ˇche-åì.h
"

10 
	~"åì-wÆk.h
"

11 
	~"buûtö.h
"

20 
	gÆlow_add
;

21 
	gÆlow_ªmove
;

22 
	gÆlow_ª∂a˚
;

23 
	göfo_⁄ly
;

24 
	gf‹˚_ªmove
;

25 
	gvîbo£
;

26 
	gm¨k_vÆid_⁄ly
;

27 
	#MARK_VALID
 1

	)

28 
	#UNMARK_VALID
 2

	)

30 
	$ªp‹t
(c⁄° *
fmt
, ...)

32 
va_li°
 
vp
;

34 i‡(!
vîbo£
)

37 
	`va_°¨t
(
vp
, 
fmt
);

38 
	`v¥ötf
(
fmt
, 
vp
);

39 
	`putch¨
('\n');

40 
	`va_íd
(
vp
);

41 
	}
}

43 
	$m¨k_vÆid
(c⁄° *
∑th
)

45 
«mñí
 = 
	`°æí
(
∑th
);

46 
pos
 = 
	`ˇche_«me_pos
(
∑th
, 
«mñí
);

47 i‡(0 <
pos
) {

48 
m¨k_vÆid_⁄ly
) {

49 
MARK_VALID
:

50 
a˘ive_ˇche
[
pos
]->
˚_Êags
 |
	`ht⁄s
(
CE_VALID
);

52 
UNMARK_VALID
:

53 
a˘ive_ˇche
[
pos
]->
˚_Êags
 &~
	`ht⁄s
(
CE_VALID
);

56 
	`ˇche_åì_övÆid©e_∑th
(
a˘ive_ˇche_åì
, 
∑th
);

57 
a˘ive_ˇche_ch™ged
 = 1;

61 
	}
}

63 
	$add_fûe_to_ˇche
(c⁄° *
∑th
)

65 
size
, 
«mñí
, 
›ti⁄
, 
°©us
;

66 
ˇche_íåy
 *
˚
;

67 
°©
 
°
;

69 
°©us
 = 
	`l°©
(
∑th
, &
°
);

74 
	`ˇche_åì_övÆid©e_∑th
(
a˘ive_ˇche_åì
, 
∑th
);

76 i‡(
°©us
 < 0 || 
	`S_ISDIR
(
°
.
°_mode
)) {

85 i‡(
°©us
 =0 || (
î∫o
 =
ENOENT
 ||Éºnÿ=
ENOTDIR
)) {

86 i‡(
Ælow_ªmove
) {

87 i‡(
	`ªmove_fûe_‰om_ˇche
(
∑th
))

88  
	`îr‹
("%s: cannotÑemove fromÅhe index",

89 
∑th
);

92 } i‡(
°©us
 < 0) {

93  
	`îr‹
("%s: doesÇotÉxistánd --removeÇotÖassed",

94 
∑th
);

97 i‡(0 =
°©us
)

98  
	`îr‹
("%s: isá directory -ádd files inside instead",

99 
∑th
);

101  
	`îr‹
("l°©(\"%s\"): %s", 
∑th
,

102 
	`°ªº‹
(
î∫o
));

105 
«mñí
 = 
	`°æí
(
∑th
);

106 
size
 = 
	`ˇche_íåy_size
(
«mñí
);

107 
˚
 = 
	`xˇŒoc
(1, 
size
);

108 
	`mem˝y
(
˚
->
«me
, 
∑th
, 
«mñí
);

109 
˚
->
˚_Êags
 = 
	`ht⁄s
(
«mñí
);

110 
	`fûl_°©_ˇche_öfo
(
˚
, &
°
);

112 
˚
->
˚_mode
 = 
	`¸óã_˚_mode
(
°
.
°_mode
);

113 i‡(!
åu°_execuèbÀ_bô
) {

117 
pos
 = 
	`ˇche_«me_pos
(
∑th
, 
«mñí
);

118 i‡(0 <
pos
)

119 
˚
->
˚_mode
 = 
a˘ive_ˇche
[
pos
]->ce_mode;

120 i‡(
	`S_ISREG
(
°
.
°_mode
))

121 
˚
->
˚_mode
 = 
	`¸óã_˚_mode
(
S_IFREG
 | 0666);

124 i‡(
	`ödex_∑th
(
˚
->
sha1
, 
∑th
, &
°
, !
öfo_⁄ly
))

126 
›ti⁄
 = 
Ælow_add
 ? 
ADD_CACHE_OK_TO_ADD
 : 0;

127 
›ti⁄
 |
Ælow_ª∂a˚
 ? 
ADD_CACHE_OK_TO_REPLACE
 : 0;

128 i‡(
	`add_ˇche_íåy
(
˚
, 
›ti⁄
))

129  
	`îr‹
("%s: cannotáddÅoÅhe index - missing --add option?",

130 
∑th
);

132 
	}
}

134 
	$add_ˇcheöfo
(
mode
, c⁄° *
sha1
,

135 c⁄° *
∑th
, 
°age
)

137 
size
, 
Àn
, 
›ti⁄
;

138 
ˇche_íåy
 *
˚
;

140 i‡(!
	`vîify_∑th
(
∑th
))

143 
Àn
 = 
	`°æí
(
∑th
);

144 
size
 = 
	`ˇche_íåy_size
(
Àn
);

145 
˚
 = 
	`xˇŒoc
(1, 
size
);

147 
	`hash˝y
(
˚
->
sha1
, sha1);

148 
	`mem˝y
(
˚
->
«me
, 
∑th
, 
Àn
);

149 
˚
->
˚_Êags
 = 
	`¸óã_˚_Êags
(
Àn
, 
°age
);

150 
˚
->
˚_mode
 = 
	`¸óã_˚_mode
(
mode
);

151 i‡(
assume_unch™ged
)

152 
˚
->
˚_Êags
 |
	`ht⁄s
(
CE_VALID
);

153 
›ti⁄
 = 
Ælow_add
 ? 
ADD_CACHE_OK_TO_ADD
 : 0;

154 
›ti⁄
 |
Ælow_ª∂a˚
 ? 
ADD_CACHE_OK_TO_REPLACE
 : 0;

155 i‡(
	`add_ˇche_íåy
(
˚
, 
›ti⁄
))

156  
	`îr‹
("%s: cannotáddÅoÅhe index - missing --add option?",

157 
∑th
);

158 
	`ªp‹t
("add '%s'", 
∑th
);

159 
	`ˇche_åì_övÆid©e_∑th
(
a˘ive_ˇche_åì
, 
∑th
);

161 
	}
}

163 
	$chmod_∑th
(
Êù
, c⁄° *
∑th
)

165 
pos
;

166 
ˇche_íåy
 *
˚
;

167 
mode
;

169 
pos
 = 
	`ˇche_«me_pos
(
∑th
, 
	`°æí
(path));

170 i‡(
pos
 < 0)

171 
Áû
;

172 
˚
 = 
a˘ive_ˇche
[
pos
];

173 
mode
 = 
	`¡ohl
(
˚
->
˚_mode
);

174 i‡(!
	`S_ISREG
(
mode
))

175 
Áû
;

176 
Êù
) {

178 
˚
->
˚_mode
 |
	`ht⁄l
(0111); ;

180 
˚
->
˚_mode
 &
	`ht⁄l
(~0111); ;

182 
Áû
;

184 
	`ˇche_åì_övÆid©e_∑th
(
a˘ive_ˇche_åì
, 
∑th
);

185 
a˘ive_ˇche_ch™ged
 = 1;

186 
	`ªp‹t
("chmod %cx '%s'", 
Êù
, 
∑th
);

188 
Áû
:

189 
	`dõ
("gô-upd©e-ödex: c™nŸ chmod %cx '%s'", 
Êù
, 
∑th
);

190 
	}
}

192 
	$upd©e_⁄e
(c⁄° *
∑th
, c⁄° *
¥efix
, 
¥efix_Àngth
)

194 c⁄° *
p
 = 
	`¥efix_∑th
(
¥efix
, 
¥efix_Àngth
, 
∑th
);

195 i‡(!
	`vîify_∑th
(
p
)) {

196 
	`Ârötf
(
°dîr
, "Ign‹ögÖ©h %s\n", 
∑th
);

197 
‰ì_ªtu∫
;

199 i‡(
m¨k_vÆid_⁄ly
) {

200 i‡(
	`m¨k_vÆid
(
p
))

201 
	`dõ
("U«bÀÅÿm¨k fûê%s", 
∑th
);

202 
‰ì_ªtu∫
;

204 
	`ˇche_åì_övÆid©e_∑th
(
a˘ive_ˇche_åì
, 
∑th
);

206 i‡(
f‹˚_ªmove
) {

207 i‡(
	`ªmove_fûe_‰om_ˇche
(
p
))

208 
	`dõ
("gô-upd©e-ödex: u«bÀÅÿªmovê%s", 
∑th
);

209 
	`ªp‹t
("ªmovê'%s'", 
∑th
);

210 
‰ì_ªtu∫
;

212 i‡(
	`add_fûe_to_ˇche
(
p
))

213 
	`dõ
("U«bÀÅÿ¥o˚s†fûê%s", 
∑th
);

214 
	`ªp‹t
("add '%s'", 
∑th
);

215 
‰ì_ªtu∫
:

216 i‡(
p
 < 
∑th
 ||Ö >Ö©h + 
	`°æí
(path))

217 
	`‰ì
((*)
p
);

218 
	}
}

220 
	$ªad_ödex_öfo
(
löe_ãrmö©i⁄
)

222 
°rbuf
 
buf
;

223 
	`°rbuf_öô
(&
buf
);

225 *
±r
, *
èb
;

226 *
∑th_«me
;

227 
sha1
[20];

228 
mode
;

229 
°age
;

247 
	`ªad_löe
(&
buf
, 
°dö
, 
löe_ãrmö©i⁄
);

248 i‡(
buf
.
eof
)

251 
mode
 = 
	`°πoul
(
buf
.buf, &
±r
, 8);

252 i‡(
±r
 =
buf
.buf || *ptr != ' ')

253 
bad_löe
;

255 
èb
 = 
	`°rchr
(
±r
, '\t');

256 i‡(!
èb
 ||Åab - 
±r
 < 41)

257 
bad_löe
;

259 i‡(
èb
[-2] == ' ' && '0' <=Åab[-1] &&Åab[-1] <= '3') {

260 
°age
 = 
èb
[-1] - '0';

261 
±r
 = 
èb
 + 1;

262 
èb
 =Åab - 2;

265 
°age
 = 0;

266 
±r
 = 
èb
 + 1;

269 i‡(
	`gë_sha1_hex
(
èb
 - 40, 
sha1
) ||Åab[-41] != ' ')

270 
bad_löe
;

272 i‡(
löe_ãrmö©i⁄
 && 
±r
[0] == '"')

273 
∑th_«me
 = 
	`unquŸe_c_°yÀ
(
±r
, 
NULL
);

275 
∑th_«me
 = 
±r
;

277 i‡(!
	`vîify_∑th
(
∑th_«me
)) {

278 
	`Ârötf
(
°dîr
, "Ign‹ögÖ©h %s\n", 
∑th_«me
);

279 i‡(
∑th_«me
 !
±r
)

280 
	`‰ì
(
∑th_«me
);

283 
	`ˇche_åì_övÆid©e_∑th
(
a˘ive_ˇche_åì
, 
∑th_«me
);

285 i‡(!
mode
) {

287 i‡(
	`ªmove_fûe_‰om_ˇche
(
∑th_«me
))

288 
	`dõ
("git-update-index: unableÅoÑemove %s",

289 
±r
);

296 
±r
[-42] =Ötr[-1] = 0;

297 i‡(
	`add_ˇcheöfo
(
mode
, 
sha1
, 
∑th_«me
, 
°age
))

298 
	`dõ
("git-update-index: unableÅo update %s",

299 
∑th_«me
);

301 i‡(
∑th_«me
 !
±r
)

302 
	`‰ì
(
∑th_«me
);

305 
bad_löe
:

306 
	`dõ
("mÆf‹med index infÿ%s", 
buf
.buf);

308 
	}
}

310 c⁄° 
	gupd©e_ödex_ußge
[] =

313 
	ghód_sha1
[20];

314 
	gmîge_hód_sha1
[20];

316 
ˇche_íåy
 *
	$ªad_⁄e_ít
(c⁄° *
which
,

317 *
ít
, c⁄° *
∑th
,

318 
«mñí
, 
°age
)

320 
mode
;

321 
sha1
[20];

322 
size
;

323 
ˇche_íåy
 *
˚
;

325 i‡(
	`gë_åì_íåy
(
ít
, 
∑th
, 
sha1
, &
mode
)) {

326 i‡(
which
)

327 
	`îr‹
("%s:ÇŸ i¿%†bønch.", 
∑th
, 
which
);

328  
NULL
;

330 i‡(
mode
 =
S_IFDIR
) {

331 i‡(
which
)

332 
	`îr‹
("%s:ÇŸá blob i¿%†bønch.", 
∑th
, 
which
);

333  
NULL
;

335 
size
 = 
	`ˇche_íåy_size
(
«mñí
);

336 
˚
 = 
	`xˇŒoc
(1, 
size
);

338 
	`hash˝y
(
˚
->
sha1
, sha1);

339 
	`mem˝y
(
˚
->
«me
, 
∑th
, 
«mñí
);

340 
˚
->
˚_Êags
 = 
	`¸óã_˚_Êags
(
«mñí
, 
°age
);

341 
˚
->
˚_mode
 = 
	`¸óã_˚_mode
(
mode
);

342  
˚
;

343 
	}
}

345 
	$uƒesﬁve_⁄e
(c⁄° *
∑th
)

347 
«mñí
 = 
	`°æí
(
∑th
);

348 
pos
;

349 
ªt
 = 0;

350 
ˇche_íåy
 *
˚_2
 = 
NULL
, *
˚_3
 = NULL;

353 
pos
 = 
	`ˇche_«me_pos
(
∑th
, 
«mñí
);

354 i‡(
pos
 < 0) {

359 
pos
 = -pos-1;

360 i‡(
pos
 < 
a˘ive_ƒ
) {

361 
ˇche_íåy
 *
˚
 = 
a˘ive_ˇche
[
pos
];

362 i‡(
	`˚_«mñí
(
˚
Ë=
«mñí
 &&

363 !
	`memcmp
(
˚
->
«me
, 
∑th
, 
«mñí
)) {

364 
	`Ârötf
(
°dîr
,

366 
∑th
);

367 
‰ì_ªtu∫
;

376 
˚_2
 = 
	`ªad_⁄e_ít
("our", 
hód_sha1
, 
∑th
, 
«mñí
, 2);

377 
˚_3
 = 
	`ªad_⁄e_ít
("theú", 
mîge_hód_sha1
, 
∑th
, 
«mñí
, 3);

379 i‡(!
˚_2
 || !
˚_3
) {

380 
ªt
 = -1;

381 
‰ì_ªtu∫
;

383 i‡(!
	`hashcmp
(
˚_2
->
sha1
, 
˚_3
->sha1) &&

384 
˚_2
->
˚_mode
 =
˚_3
->ce_mode) {

385 
	`Ârötf
(
°dîr
, "%s: identical in both, skipping.\n",

386 
∑th
);

387 
‰ì_ªtu∫
;

390 
	`ˇche_åì_övÆid©e_∑th
(
a˘ive_ˇche_åì
, 
∑th
);

391 
	`ªmove_fûe_‰om_ˇche
(
∑th
);

392 i‡(
	`add_ˇche_íåy
(
˚_2
, 
ADD_CACHE_OK_TO_ADD
)) {

393 
	`îr‹
("%s: c™nŸádd ou∏vîsi⁄Åÿthêödex.", 
∑th
);

394 
ªt
 = -1;

395 
‰ì_ªtu∫
;

397 i‡(!
	`add_ˇche_íåy
(
˚_3
, 
ADD_CACHE_OK_TO_ADD
))

399 
	`îr‹
("%s: c™nŸáddÅheú vîsi⁄Åÿthêödex.", 
∑th
);

400 
ªt
 = -1;

401 
‰ì_ªtu∫
:

402 
	`‰ì
(
˚_2
);

403 
	`‰ì
(
˚_3
);

404  
ªt
;

405 
	}
}

407 
	$ªad_hód_poöãrs
()

409 i‡(
	`ªad_ªf
("HEAD", 
hód_sha1
))

410 
	`dõ
("No HEAD --Ço initial commit yet?\n");

411 i‡(
	`ªad_ªf
("MERGE_HEAD", 
mîge_hód_sha1
)) {

412 
	`Ârötf
(
°dîr
, "Not inÅhe middle ofá merge.\n");

413 
	`exô
(0);

415 
	}
}

417 
	$do_uƒesﬁve
(
ac
, c⁄° **
av
,

418 c⁄° *
¥efix
, 
¥efix_Àngth
)

420 
i
;

421 
îr
 = 0;

426 
	`ªad_hód_poöãrs
();

428 
i
 = 1; i < 
ac
; i++) {

429 c⁄° *
¨g
 = 
av
[
i
];

430 c⁄° *
p
 = 
	`¥efix_∑th
(
¥efix
, 
¥efix_Àngth
, 
¨g
);

431 
îr
 |
	`uƒesﬁve_⁄e
(
p
);

432 i‡(
p
 < 
¨g
 ||Ö >árg + 
	`°æí
(arg))

433 
	`‰ì
((*)
p
);

435  
îr
;

436 
	}
}

438 
	$do_ªupd©e
(
ac
, c⁄° **
av
,

439 c⁄° *
¥efix
, 
¥efix_Àngth
)

444 
pos
;

445 
has_hód
 = 1;

446 c⁄° **
∑th•ec
 = 
	`gë_∑th•ec
(
¥efix
, 
av
 + 1);

448 i‡(
	`ªad_ªf
("HEAD", 
hód_sha1
))

452 
has_hód
 = 0;

453 
ªdo
:

454 
pos
 = 0;Öo†< 
a˘ive_ƒ
;Öos++) {

455 
ˇche_íåy
 *
˚
 = 
a˘ive_ˇche
[
pos
];

456 
ˇche_íåy
 *
ﬁd
 = 
NULL
;

457 
ßve_ƒ
;

459 i‡(
	`˚_°age
(
˚
Ë|| !
	`˚_∑th_m©ch
(˚, 
∑th•ec
))

461 i‡(
has_hód
)

462 
ﬁd
 = 
	`ªad_⁄e_ít
(
NULL
, 
hód_sha1
,

463 
˚
->
«me
, 
	`˚_«mñí
(ce), 0);

464 i‡(
ﬁd
 && 
˚
->
˚_mode
 == old->ce_mode &&

465 !
	`hashcmp
(
˚
->
sha1
, 
ﬁd
->sha1)) {

466 
	`‰ì
(
ﬁd
);

473 
ßve_ƒ
 = 
a˘ive_ƒ
;

474 
	`upd©e_⁄e
(
˚
->
«me
 + 
¥efix_Àngth
, 
¥efix
,Örefix_length);

475 i‡(
ßve_ƒ
 !
a˘ive_ƒ
)

476 
ªdo
;

479 
	}
}

481 
	$cmd_upd©e_ödex
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

483 
i
, 
√wfd
, 
íåõs
, 
has_îr‹s
 = 0, 
löe_ãrmö©i⁄
 = '\n';

484 
Ælow_›ti⁄s
 = 1;

485 
ªad_‰om_°dö
 = 0;

486 
¥efix_Àngth
 = 
¥efix
 ? 
	`°æí
(prefix) : 0;

487 
£t_execuèbÀ_bô
 = 0;

488 
ª‰esh_Êags
 = 0;

489 
lock_fûe
 *lock_file;

491 
	`gô_c⁄fig
(
gô_deÁu…_c⁄fig
);

494 
lock_fûe
 = 
	`xˇŒoc
(1, (lock_file));

496 
√wfd
 = 
	`hﬁd_lock_fûe_f‹_upd©e
(
lock_fûe
, 
	`gë_ödex_fûe
(), 1);

498 
íåõs
 = 
	`ªad_ˇche
();

499 i‡(
íåõs
 < 0)

500 
	`dõ
("cache corrupted");

502 
i
 = 1 ; i < 
¨gc
; i++) {

503 c⁄° *
∑th
 = 
¨gv
[
i
];

504 c⁄° *
p
;

506 i‡(
Ælow_›ti⁄s
 && *
∑th
 == '-') {

507 i‡(!
	`°rcmp
(
∑th
, "--")) {

508 
Ælow_›ti⁄s
 = 0;

511 i‡(!
	`°rcmp
(
∑th
, "-q")) {

512 
ª‰esh_Êags
 |
REFRESH_QUIET
;

515 i‡(!
	`°rcmp
(
∑th
, "--add")) {

516 
Ælow_add
 = 1;

519 i‡(!
	`°rcmp
(
∑th
, "--replace")) {

520 
Ælow_ª∂a˚
 = 1;

523 i‡(!
	`°rcmp
(
∑th
, "--remove")) {

524 
Ælow_ªmove
 = 1;

527 i‡(!
	`°rcmp
(
∑th
, "--unmerged")) {

528 
ª‰esh_Êags
 |
REFRESH_UNMERGED
;

531 i‡(!
	`°rcmp
(
∑th
, "--refresh")) {

532 
has_îr‹s
 |
	`ª‰esh_ˇche
(
ª‰esh_Êags
);

535 i‡(!
	`°rcmp
(
∑th
, "--really-refresh")) {

536 
has_îr‹s
 |
	`ª‰esh_ˇche
(
REFRESH_REALLY
 | 
ª‰esh_Êags
);

539 i‡(!
	`°rcmp
(
∑th
, "--cacheinfo")) {

540 
sha1
[20];

541 
mode
;

543 i‡(
i
+3 >
¨gc
)

544 
	`dõ
("git-update-index: --cacheinfo <mode> <sha1> <path>");

546 i‡((
	`ssˇnf
(
¨gv
[
i
+1], "%o", &
mode
) != 1) ||

547 
	`gë_sha1_hex
(
¨gv
[
i
+2], 
sha1
) ||

548 
	`add_ˇcheöfo
(
mode
, 
sha1
, 
¨gv
[
i
+3], 0))

549 
	`dõ
("git-update-index: --cacheinfo"

550 " c™nŸádd %s", 
¨gv
[
i
+3]);

551 
i
 += 3;

554 i‡(!
	`°rcmp
(
∑th
, "--chmod=-x") ||

555 !
	`°rcmp
(
∑th
, "--chmod=+x")) {

556 i‡(
¨gc
 <
i
+1)

557 
	`dõ
("gô-upd©e-ödex: %†<∑th>", 
∑th
);

558 
£t_execuèbÀ_bô
 = 
∑th
[8];

561 i‡(!
	`°rcmp
(
∑th
, "--assume-unchanged")) {

562 
m¨k_vÆid_⁄ly
 = 
MARK_VALID
;

565 i‡(!
	`°rcmp
(
∑th
, "--no-assume-unchanged")) {

566 
m¨k_vÆid_⁄ly
 = 
UNMARK_VALID
;

569 i‡(!
	`°rcmp
(
∑th
, "--info-only")) {

570 
öfo_⁄ly
 = 1;

573 i‡(!
	`°rcmp
(
∑th
, "--force-remove")) {

574 
f‹˚_ªmove
 = 1;

577 i‡(!
	`°rcmp
(
∑th
, "-z")) {

578 
löe_ãrmö©i⁄
 = 0;

581 i‡(!
	`°rcmp
(
∑th
, "--stdin")) {

582 i‡(
i
 !
¨gc
 - 1)

583 
	`dõ
("--stdin must beátÅheÉnd");

584 
ªad_‰om_°dö
 = 1;

587 i‡(!
	`°rcmp
(
∑th
, "--index-info")) {

588 i‡(
i
 !
¨gc
 - 1)

589 
	`dõ
("--index-info must beátÅheÉnd");

590 
Ælow_add
 = 
Ælow_ª∂a˚
 = 
Ælow_ªmove
 = 1;

591 
	`ªad_ödex_öfo
(
löe_ãrmö©i⁄
);

594 i‡(!
	`°rcmp
(
∑th
, "--unresolve")) {

595 
has_îr‹s
 = 
	`do_uƒesﬁve
(
¨gc
 - 
i
, 
¨gv
 + i,

596 
¥efix
, 
¥efix_Àngth
);

597 i‡(
has_îr‹s
)

598 
a˘ive_ˇche_ch™ged
 = 0;

599 
föish
;

601 i‡(!
	`°rcmp
(
∑th
, "--again") || !strcmp(path, "-g")) {

602 
has_îr‹s
 = 
	`do_ªupd©e
(
¨gc
 - 
i
, 
¨gv
 + i,

603 
¥efix
, 
¥efix_Àngth
);

604 i‡(
has_îr‹s
)

605 
a˘ive_ˇche_ch™ged
 = 0;

606 
föish
;

608 i‡(!
	`°rcmp
(
∑th
, "--ignore-missing")) {

609 
ª‰esh_Êags
 |
REFRESH_IGNORE_MISSING
;

612 i‡(!
	`°rcmp
(
∑th
, "--verbose")) {

613 
vîbo£
 = 1;

616 i‡(!
	`°rcmp
(
∑th
, "-h") || !strcmp(path, "--help"))

617 
	`ußge
(
upd©e_ödex_ußge
);

618 
	`dõ
("unknow¿›ti⁄ %s", 
∑th
);

620 
p
 = 
	`¥efix_∑th
(
¥efix
, 
¥efix_Àngth
, 
∑th
);

621 
	`upd©e_⁄e
(
p
, 
NULL
, 0);

622 i‡(
£t_execuèbÀ_bô
)

623 
	`chmod_∑th
(
£t_execuèbÀ_bô
, 
p
);

624 i‡(
p
 < 
∑th
 ||Ö >Ö©h + 
	`°æí
(path))

625 
	`‰ì
((*)
p
);

627 i‡(
ªad_‰om_°dö
) {

628 
°rbuf
 
buf
;

629 
	`°rbuf_öô
(&
buf
);

631 *
∑th_«me
;

632 c⁄° *
p
;

633 
	`ªad_löe
(&
buf
, 
°dö
, 
löe_ãrmö©i⁄
);

634 i‡(
buf
.
eof
)

636 i‡(
löe_ãrmö©i⁄
 && 
buf
.buf[0] == '"')

637 
∑th_«me
 = 
	`unquŸe_c_°yÀ
(
buf
.buf, 
NULL
);

639 
∑th_«me
 = 
buf
.buf;

640 
p
 = 
	`¥efix_∑th
(
¥efix
, 
¥efix_Àngth
, 
∑th_«me
);

641 
	`upd©e_⁄e
(
p
, 
NULL
, 0);

642 i‡(
£t_execuèbÀ_bô
)

643 
	`chmod_∑th
(
£t_execuèbÀ_bô
, 
p
);

644 i‡(
p
 < 
∑th_«me
 ||Ö >Ö©h_«mê+ 
	`°æí
(path_name))

645 
	`‰ì
((*Ë
p
);

646 i‡(
∑th_«me
 !
buf
.buf)

647 
	`‰ì
(
∑th_«me
);

651 
föish
:

652 i‡(
a˘ive_ˇche_ch™ged
) {

653 i‡(
	`wrôe_ˇche
(
√wfd
, 
a˘ive_ˇche
, 
a˘ive_ƒ
) ||

654 
	`˛o£
(
√wfd
Ë|| 
	`commô_lock_fûe
(
lock_fûe
))

655 
	`dõ
("UnableÅo writeÇew index file");

658 
	`rﬁlback_lock_fûe
(
lock_fûe
);

660  
has_îr‹s
 ? 1 : 0;

661 
	}
}

	@builtin-update-ref.c

1 
	~"ˇche.h
"

2 
	~"ªfs.h
"

3 
	~"buûtö.h
"

5 c⁄° 
	ggô_upd©e_ªf_ußge
[] =

8 
	$cmd_upd©e_ªf
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

10 c⁄° *
ª‚ame
=
NULL
, *
vÆue
=NULL, *
ﬁdvÆ
=NULL, *
msg
=NULL;

11 
ªf_lock
 *
lock
;

12 
sha1
[20], 
ﬁdsha1
[20];

13 
i
, 
dñëe
;

15 
dñëe
 = 0;

16 
	`gô_c⁄fig
(
gô_deÁu…_c⁄fig
);

18 
i
 = 1; i < 
¨gc
; i++) {

19 i‡(!
	`°rcmp
("-m", 
¨gv
[
i
])) {

20 i‡(
i
+1 >
¨gc
)

21 
	`ußge
(
gô_upd©e_ªf_ußge
);

22 
msg
 = 
¨gv
[++
i
];

23 i‡(!*
msg
)

24 
	`dõ
("RefusingÅoÖerform update withÉmpty message.");

25 i‡(
	`°rchr
(
msg
, '\n'))

26 
	`dõ
("RefusingÅoÖerform update with \\n in message.");

29 i‡(!
	`°rcmp
("-d", 
¨gv
[
i
])) {

30 
dñëe
 = 1;

33 i‡(!
ª‚ame
) {

34 
ª‚ame
 = 
¨gv
[
i
];

37 i‡(!
vÆue
) {

38 
vÆue
 = 
¨gv
[
i
];

41 i‡(!
ﬁdvÆ
) {

42 
ﬁdvÆ
 = 
¨gv
[
i
];

46 i‡(!
ª‚ame
 || !
vÆue
)

47 
	`ußge
(
gô_upd©e_ªf_ußge
);

49 i‡(
	`gë_sha1
(
vÆue
, 
sha1
))

50 
	`dõ
("%s:ÇŸá vÆid SHA1", 
vÆue
);

52 i‡(
dñëe
) {

53 i‡(
ﬁdvÆ
)

54 
	`ußge
(
gô_upd©e_ªf_ußge
);

55  
	`dñëe_ªf
(
ª‚ame
, 
sha1
);

58 
	`hash˛r
(
ﬁdsha1
);

59 i‡(
ﬁdvÆ
 && *ﬁdvÆ && 
	`gë_sha1
(ﬁdvÆ, 
ﬁdsha1
))

60 
	`dõ
("%s:ÇŸá vÆid old SHA1", 
ﬁdvÆ
);

62 
lock
 = 
	`lock_™y_ªf_f‹_upd©e
(
ª‚ame
, 
ﬁdvÆ
 ? 
ﬁdsha1
 : 
NULL
);

63 i‡(!
lock
)

64 
	`dõ
("%s: c™nŸÜockÅhêªf", 
ª‚ame
);

65 i‡(
	`wrôe_ªf_sha1
(
lock
, 
sha1
, 
msg
) < 0)

66 
	`dõ
("%s: c™nŸ upd©êthêªf", 
ª‚ame
);

68 
	}
}

	@builtin-upload-archive.c

4 
	~"ˇche.h
"

5 
	~"buûtö.h
"

6 
	~"¨chive.h
"

7 
	~"pkt-löe.h
"

8 
	~"sideb™d.h
"

10 c⁄° 
	gu∂ﬂd_¨chive_ußge
[] =

13 c⁄° 
	gdódchûd
[] =

16 c⁄° 
	glo°chûd
[] =

20 
	$run_u∂ﬂd_¨chive
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

22 
¨chivî
 
¨
;

23 c⁄° *
£¡_¨gv
[
MAX_ARGS
];

24 c⁄° *
¨g_cmd
 = "argument ";

25 *
p
, 
buf
[4096];

26 
åìish_idx
;

27 
£¡_¨gc
;

28 
Àn
;

30 i‡(
¨gc
 != 2)

31 
	`ußge
(
u∂ﬂd_¨chive_ußge
);

33 i‡(
	`°æí
(
¨gv
[1]Ë> (
buf
))

34 
	`dõ
("insanelyÜongÑepositoryÇame");

36 
	`°r˝y
(
buf
, 
¨gv
[1]);

38 i‡(!
	`íãr_ªpo
(
buf
, 0))

39 
	`dõ
("notá gitárchive");

42 
£¡_¨gc
 = 1;

43 
£¡_¨gv
[0] = "git-upload-archive";

44 
p
 = 
buf
;;) {

46 
Àn
 = 
	`∑ckë_ªad_löe
(0, 
p
, (
buf
 +  buf) -Ö);

47 i‡(
Àn
 == 0)

49 i‡(
£¡_¨gc
 > 
MAX_ARGS
 - 2)

50 
	`dõ
("Too many options (>29)");

52 i‡(
p
[
Àn
-1] == '\n') {

53 
p
[--
Àn
] = 0;

55 i‡(
Àn
 < 
	`°æí
(
¨g_cmd
) ||

56 
	`°∫cmp
(
¨g_cmd
, 
p
, 
	`°æí
(arg_cmd)))

57 
	`dõ
("'argument'Åoken or flushÉxpected");

59 
Àn
 -
	`°æí
(
¨g_cmd
);

60 
	`memmove
(
p
,Ö + 
	`°æí
(
¨g_cmd
), 
Àn
);

61 
£¡_¨gv
[
£¡_¨gc
++] = 
p
;

62 
p
 +
Àn
;

63 *
p
++ = 0;

65 
£¡_¨gv
[
£¡_¨gc
] = 
NULL
;

68 
åìish_idx
 = 
	`∑r£_¨chive_¨gs
(
£¡_¨gc
, 
£¡_¨gv
, &
¨
);

70 
	`∑r£_åìish_¨g
(
£¡_¨gv
 + 
åìish_idx
, &
¨
.
¨gs
, 
¥efix
);

71 
	`∑r£_∑th•ec_¨g
(
£¡_¨gv
 + 
åìish_idx
 + 1, &
¨
.
¨gs
);

73  
¨
.
	`wrôe_¨chive
(&¨.
¨gs
);

74 
	}
}

76 
	$îr‹_˛¡
(c⁄° *
fmt
, ...)

78 
buf
[1024];

79 
va_li°
 
∑øms
;

80 
Àn
;

82 
	`va_°¨t
(
∑øms
, 
fmt
);

83 
Àn
 = 
	`v•rötf
(
buf
, 
fmt
, 
∑øms
);

84 
	`va_íd
(
∑øms
);

85 
	`£nd_sideb™d
(1, 3, 
buf
, 
Àn
, 
LARGE_PACKET_MAX
);

86 
	`dõ
("£¡Éº‹Åÿthê˛õ¡: %s", 
buf
);

87 
	}
}

89 
	$¥o˚ss_öput
(
chûd_fd
, 
b™d
)

91 
buf
[16384];

92 
ssize_t
 
sz
 = 
	`ªad
(
chûd_fd
, 
buf
, (buf));

93 i‡(
sz
 < 0) {

94 i‡(
î∫o
 !
EAGAIN
 &&Éºnÿ!
EINTR
)

95 
	`îr‹_˛¡
("ªadÉº‹: %s\n", 
	`°ªº‹
(
î∫o
));

98 
	`£nd_sideb™d
(1, 
b™d
, 
buf
, 
sz
, 
LARGE_PACKET_MAX
);

99 
	}
}

101 
	$cmd_u∂ﬂd_¨chive
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

103 
pid_t
 
wrôî
;

104 
fd1
[2], 
fd2
[2];

112 i‡(
	`pùe
(
fd1
Ë< 0 ||Öùe(
fd2
) < 0) {

113 
îr
 = 
î∫o
;

114 
	`∑ckë_wrôe
(1, "NACKÖipe failed onÅheÑemote side\n");

115 
	`dõ
("u∂ﬂd-¨chive: %s", 
	`°ªº‹
(
îr
));

117 
wrôî
 = 
	`f‹k
();

118 i‡(
wrôî
 < 0) {

119 
îr
 = 
î∫o
;

120 
	`∑ckë_wrôe
(1, "NACK fork failed onÅheÑemote side\n");

121 
	`dõ
("u∂ﬂd-¨chive: %s", 
	`°ªº‹
(
îr
));

123 i‡(!
wrôî
) {

125 
	`dup2
(
fd1
[1], 1);

126 
	`dup2
(
fd2
[1], 2);

127 
	`˛o£
(
fd1
[1]); clo£(
fd2
[1]);

128 
	`˛o£
(
fd1
[0]); clo£(
fd2
[0]);

130 
	`exô
(
	`run_u∂ﬂd_¨chive
(
¨gc
, 
¨gv
, 
¥efix
));

134 
	`˛o£
(
fd1
[1]); clo£(
fd2
[1]);

135 
	`∑ckë_wrôe
(1, "ACK\n");

136 
	`∑ckë_Êush
(1);

139 
pﬁlfd
 
pfd
[2];

140 
°©us
;

142 
pfd
[0].
fd
 = 
fd1
[0];

143 
pfd
[0].
evíts
 = 
POLLIN
;

144 
pfd
[1].
fd
 = 
fd2
[0];

145 
pfd
[1].
evíts
 = 
POLLIN
;

146 i‡(
	`pﬁl
(
pfd
, 2, -1) < 0) {

147 i‡(
î∫o
 !
EINTR
) {

148 
	`îr‹
("poll failedÑesuming: %s",

149 
	`°ªº‹
(
î∫o
));

150 
	`¶ìp
(1);

154 i‡(
pfd
[0].
ªvíts
 & 
POLLIN
)

156 
	`¥o˚ss_öput
(
pfd
[0].
fd
, 1);

157 i‡(
pfd
[1].
ªvíts
 & 
POLLIN
)

159 
	`¥o˚ss_öput
(
pfd
[1].
fd
, 2);

161 i‡((
pfd
[0].
ªvíts
 |Öfd[1].ªvítsË& 
POLLIN
)

164 i‡(
	`waôpid
(
wrôî
, &
°©us
, 0) < 0)

165 
	`îr‹_˛¡
("%s", 
lo°chûd
);

166 i‡(!
	`WIFEXITED
(
°©us
Ë|| 
	`WEXITSTATUS
(status) > 0)

167 
	`îr‹_˛¡
("%s", 
dódchûd
);

168 
	`∑ckë_Êush
(1);

172 
	}
}

	@builtin-verify-pack.c

1 
	~"buûtö.h
"

2 
	~"ˇche.h
"

3 
	~"∑ck.h
"

5 
	$vîify_⁄e_∑ck
(c⁄° *
∑th
, 
vîbo£
)

7 
¨g
[
PATH_MAX
];

8 
Àn
;

9 
∑cked_gô
 *
∑ck
;

10 
îr
;

12 
Àn
 = 
	`°æ˝y
(
¨g
, 
∑th
, 
PATH_MAX
);

13 i‡(
Àn
 >
PATH_MAX
)

14  
	`îr‹
("«mêtoÿl⁄g: %s", 
∑th
);

20 i‡(
	`has_exãnsi⁄
(
¨g
, ".pack")) {

21 
	`°r˝y
(
¨g
 + 
Àn
 - 5, ".idx");

22 
Àn
--;

23 } i‡(!
	`has_exãnsi⁄
(
¨g
, ".idx")) {

24 i‡(
Àn
 + 4 >
PATH_MAX
)

25  
	`îr‹
("«mêtoÿl⁄g: %s.idx", 
¨g
);

26 
	`°r˝y
(
¨g
 + 
Àn
, ".idx");

27 
Àn
 += 4;

34 i‡(
Àn
 + 1 >
PATH_MAX
) {

35 
¨g
[
Àn
 - 4] = '\0';

36  
	`îr‹
("«mêtoÿl⁄g: %s.∑ck", 
¨g
);

39 
∑ck
 = 
	`add_∑cked_gô
(
¨g
, 
Àn
, 1);

40 i‡(!
∑ck
)

41  
	`îr‹
("∑ckfûê%†nŸ found.", 
¨g
);

43 
îr
 = 
	`vîify_∑ck
(
∑ck
, 
vîbo£
);

44 
	`‰ì
(
∑ck
);

46  
îr
;

47 
	}
}

49 c⁄° 
	gvîify_∑ck_ußge
[] = "git-verify-pack [-v] <pack>...";

51 
	$cmd_vîify_∑ck
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

53 
îr
 = 0;

54 
vîbo£
 = 0;

55 
no_m‹e_›ti⁄s
 = 0;

56 
nŸhög_d⁄e
 = 1;

58 
	`gô_c⁄fig
(
gô_deÁu…_c⁄fig
);

59 1 < 
¨gc
) {

60 i‡(!
no_m‹e_›ti⁄s
 && 
¨gv
[1][0] == '-') {

61 i‡(!
	`°rcmp
("-v", 
¨gv
[1]))

62 
vîbo£
 = 1;

63 i‡(!
	`°rcmp
("--", 
¨gv
[1]))

64 
no_m‹e_›ti⁄s
 = 1;

66 
	`ußge
(
vîify_∑ck_ußge
);

69 i‡(
	`vîify_⁄e_∑ck
(
¨gv
[1], 
vîbo£
))

70 
îr
 = 1;

71 
nŸhög_d⁄e
 = 0;

73 
¨gc
--; 
¨gv
++;

76 i‡(
nŸhög_d⁄e
)

77 
	`ußge
(
vîify_∑ck_ußge
);

79  
îr
;

80 
	}
}

	@builtin-write-tree.c

6 
	~"buûtö.h
"

7 
	~"ˇche.h
"

8 
	~"åì.h
"

9 
	~"ˇche-åì.h
"

11 c⁄° 
	gwrôe_åì_ußge
[] =

14 
	$wrôe_åì
(*
sha1
, 
missög_ok
, c⁄° *
¥efix
)

16 
íåõs
, 
was_vÆid
, 
√wfd
;

19 
lock_fûe
 *lock_fûê
	`xˇŒoc
(1, (lock_file));

21 
√wfd
 = 
	`hﬁd_lock_fûe_f‹_upd©e
(
lock_fûe
, 
	`gë_ödex_fûe
(), 0);

23 
íåõs
 = 
	`ªad_ˇche
();

24 i‡(
íåõs
 < 0)

25 
	`dõ
("git-write-tree:ÉrrorÑeading cache");

27 i‡(!
a˘ive_ˇche_åì
)

28 
a˘ive_ˇche_åì
 = 
	`ˇche_åì
();

30 
was_vÆid
 = 
	`ˇche_åì_fuŒy_vÆid
(
a˘ive_ˇche_åì
);

32 i‡(!
was_vÆid
) {

33 i‡(
	`ˇche_åì_upd©e
(
a˘ive_ˇche_åì
,

34 
a˘ive_ˇche
, 
a˘ive_ƒ
,

35 
missög_ok
, 0) < 0)

36 
	`dõ
("git-write-tree:Érror buildingÅrees");

37 i‡(0 <
√wfd
) {

38 i‡(!
	`wrôe_ˇche
(
√wfd
, 
a˘ive_ˇche
, 
a˘ive_ƒ
)

39 && !
	`˛o£
(
√wfd
))

40 
	`commô_lock_fûe
(
lock_fûe
);

50 i‡(
¥efix
) {

51 
ˇche_åì
 *
subåì
 =

52 
	`ˇche_åì_föd
(
a˘ive_ˇche_åì
, 
¥efix
);

53 
	`hash˝y
(
sha1
, 
subåì
->sha1);

56 
	`hash˝y
(
sha1
, 
a˘ive_ˇche_åì
->sha1);

58 
	`rﬁlback_lock_fûe
(
lock_fûe
);

61 
	}
}

63 
	$cmd_wrôe_åì
(
¨gc
, c⁄° **
¨gv
, c⁄° *
unu£d_¥efix
)

65 
missög_ok
 = 0, 
ªt
;

66 c⁄° *
¥efix
 = 
NULL
;

67 
sha1
[20];

69 1 < 
¨gc
) {

70 c⁄° *
¨g
 = 
¨gv
[1];

71 i‡(!
	`°rcmp
(
¨g
, "--missing-ok"))

72 
missög_ok
 = 1;

73 i‡(!
	`°∫cmp
(
¨g
, "--prefix=", 9))

74 
¥efix
 = 
¨g
 + 9;

76 
	`ußge
(
wrôe_åì_ußge
);

77 
¨gc
--; 
¨gv
++;

80 i‡(
¨gc
 > 2)

81 
	`dõ
("too many options");

83 
ªt
 = 
	`wrôe_åì
(
sha1
, 
missög_ok
, 
¥efix
);

84 
	`¥ötf
("%s\n", 
	`sha1_to_hex
(
sha1
));

86  
ªt
;

87 
	}
}

	@builtin.h

1 #i‚de‡
BUILTIN_H


2 
	#BUILTIN_H


	)

4 
	~"gô-com∑t-utû.h
"

6 c⁄° 
gô_vîsi⁄_°rög
[];

7 c⁄° 
gô_ußge_°rög
[];

9 
hñp_unknown_cmd
(c⁄° *
cmd
);

10 
maûöfo
(
FILE
 *
ö
, FILE *
out
, 
ks
, c⁄° *
ícodög
, c⁄° *
msg
, c⁄° *
∑tch
);

11 
•lô_mbox
(c⁄° **
mbox
, c⁄° *
dú
, 
Ælow_b¨e
, 
ƒ_¥ec
, 
skù
);

12 
°rù•a˚
(
FILE
 *
ö
, FILE *
out
);

13 
wrôe_åì
(*
sha1
, 
missög_ok
, c⁄° *
¥efix
);

14 
¥u√_∑cked_obje˘s
();

16 
cmd_add
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

17 
cmd_™nŸ©e
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

18 
cmd_≠∂y
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

19 
cmd_¨chive
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

20 
cmd_bœme
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

21 
cmd_bønch
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

22 
cmd_ˇt_fûe
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

23 
cmd_checkout_ödex
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

24 
cmd_check_ªf_f‹m©
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

25 
cmd_chîry
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

26 
cmd_commô_åì
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

27 
cmd_cou¡_obje˘s
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

28 
cmd_des¸ibe
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

29 
cmd_diff_fûes
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

30 
cmd_diff_ödex
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

31 
cmd_diff
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

32 
cmd_diff_°ages
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

33 
cmd_diff_åì
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

34 
cmd_fmt_mîge_msg
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

35 
cmd_f‹_óch_ªf
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

36 
cmd_f‹m©_∑tch
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

37 
cmd_fsck
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

38 
cmd_gë_èr_commô_id
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

39 
cmd_gªp
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

40 
cmd_hñp
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

41 
cmd_öô_db
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

42 
cmd_log
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

43 
cmd_log_ªÊog
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

44 
cmd_ls_fûes
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

45 
cmd_ls_åì
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

46 
cmd_maûöfo
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

47 
cmd_maû•lô
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

48 
cmd_mîge_fûe
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

49 
cmd_mv
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

50 
cmd_«me_ªv
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

51 
cmd_∑ck_obje˘s
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

52 
cmd_pickaxe
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

53 
cmd_¥u√
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

54 
cmd_¥u√_∑cked
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

55 
cmd_push
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

56 
cmd_ªad_åì
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

57 
cmd_ªÊog
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

58 
cmd_c⁄fig
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

59 
cmd_ªªª
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

60 
cmd_ªv_li°
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

61 
cmd_ªv_∑r£
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

62 
cmd_rm
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

63 
cmd_run°©us
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

64 
cmd_sh‹éog
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

65 
cmd_show
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

66 
cmd_show_bønch
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

67 
cmd_°rù•a˚
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

68 
cmd_symbﬁic_ªf
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

69 
cmd_èr_åì
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

70 
cmd_u≈ack_obje˘s
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

71 
cmd_upd©e_ödex
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

72 
cmd_upd©e_ªf
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

73 
cmd_u∂ﬂd_¨chive
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

74 
cmd_u∂ﬂd_èr
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

75 
cmd_vîsi⁄
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

76 
cmd_wh©ch™ged
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

77 
cmd_wrôe_åì
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

78 
cmd_vîify_∑ck
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

79 
cmd_show_ªf
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

80 
cmd_∑ck_ªfs
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
);

	@cache-tree.c

1 
	~"ˇche.h
"

2 
	~"åì.h
"

3 
	~"ˇche-åì.h
"

5 #i‚de‡
DEBUG


6 
	#DEBUG
 0

	)

9 
ˇche_åì
 *
	$ˇche_åì
()

11 
ˇche_åì
 *
ô
 = 
	`xˇŒoc
(1, (cache_tree));

12 
ô
->
íåy_cou¡
 = -1;

13  
ô
;

14 
	}
}

16 
	$ˇche_åì_‰ì
(
ˇche_åì
 **
ô_p
)

18 
i
;

19 
ˇche_åì
 *
ô
 = *
ô_p
;

21 i‡(!
ô
)

23 
i
 = 0; i < 
ô
->
subåì_ƒ
; i++)

24 i‡(
ô
->
down
[
i
])

25 
	`ˇche_åì_‰ì
(&
ô
->
down
[
i
]->
ˇche_åì
);

26 
	`‰ì
(
ô
->
down
);

27 
	`‰ì
(
ô
);

28 *
ô_p
 = 
NULL
;

29 
	}
}

31 
	$subåì_«me_cmp
(c⁄° *
⁄e
, 
⁄ñí
,

32 c⁄° *
two
, 
twﬁí
)

34 i‡(
⁄ñí
 < 
twﬁí
)

36 i‡(
twﬁí
 < 
⁄ñí
)

38  
	`memcmp
(
⁄e
, 
two
, 
⁄ñí
);

39 
	}
}

41 
	$subåì_pos
(
ˇche_åì
 *
ô
, c⁄° *
∑th
, 
∑thÀn
)

43 
ˇche_åì_sub
 **
down
 = 
ô
->down;

44 
lo
, 
hi
;

45 
lo
 = 0;

46 
hi
 = 
ô
->
subåì_ƒ
;

47 
lo
 < 
hi
) {

48 
mi
 = (
lo
 + 
hi
) / 2;

49 
ˇche_åì_sub
 *
mdl
 = 
down
[
mi
];

50 
cmp
 = 
	`subåì_«me_cmp
(
∑th
, 
∑thÀn
,

51 
mdl
->
«me
, mdl->
«mñí
);

52 i‡(!
cmp
)

53  
mi
;

54 i‡(
cmp
 < 0)

55 
hi
 = 
mi
;

57 
lo
 = 
mi
 + 1;

59  -
lo
-1;

60 
	}
}

62 
ˇche_åì_sub
 *
	$föd_subåì
(
ˇche_åì
 *
ô
,

63 c⁄° *
∑th
,

64 
∑thÀn
,

65 
¸óã
)

67 
ˇche_åì_sub
 *
down
;

68 
pos
 = 
	`subåì_pos
(
ô
, 
∑th
, 
∑thÀn
);

69 i‡(0 <
pos
)

70  
ô
->
down
[
pos
];

71 i‡(!
¸óã
)

72  
NULL
;

74 
pos
 = -pos-1;

75 i‡(
ô
->
subåì_Æloc
 <ô->
subåì_ƒ
) {

76 
ô
->
subåì_Æloc
 = 
	`Æloc_ƒ
(it->subtree_alloc);

77 
ô
->
down
 = 
	`xªÆloc
(ô->down, it->
subåì_Æloc
 *

78 (*
ô
->
down
));

80 
ô
->
subåì_ƒ
++;

82 
down
 = 
	`xmÆloc
((*downË+ 
∑thÀn
 + 1);

83 
down
->
ˇche_åì
 = 
NULL
;

84 
down
->
«mñí
 = 
∑thÀn
;

85 
	`mem˝y
(
down
->
«me
, 
∑th
, 
∑thÀn
);

86 
down
->
«me
[
∑thÀn
] = 0;

88 i‡(
pos
 < 
ô
->
subåì_ƒ
)

89 
	`memmove
(
ô
->
down
 + 
pos
 + 1,

90 
ô
->
down
 + 
pos
,

91 (
down
Ë* (
ô
->
subåì_ƒ
 - 
pos
 - 1));

92 
ô
->
down
[
pos
] = down;

93  
down
;

94 
	}
}

96 
ˇche_åì_sub
 *
	$ˇche_åì_sub
(
ˇche_åì
 *
ô
, c⁄° *
∑th
)

98 
∑thÀn
 = 
	`°æí
(
∑th
);

99  
	`föd_subåì
(
ô
, 
∑th
, 
∑thÀn
, 1);

100 
	}
}

102 
	$ˇche_åì_övÆid©e_∑th
(
ˇche_åì
 *
ô
, c⁄° *
∑th
)

111 c⁄° *
¶ash
;

112 
«mñí
;

113 
ˇche_åì_sub
 *
down
;

115 #i‡
DEBUG


116 
	`Ârötf
(
°dîr
, "ˇche-åì invÆid©ê<%s>\n", 
∑th
);

119 i‡(!
ô
)

121 
¶ash
 = 
	`°rchr
(
∑th
, '/');

122 
ô
->
íåy_cou¡
 = -1;

123 i‡(!
¶ash
) {

124 
pos
;

125 
«mñí
 = 
	`°æí
(
∑th
);

126 
pos
 = 
	`subåì_pos
(
ô
, 
∑th
, 
«mñí
);

127 i‡(0 <
pos
) {

128 
	`ˇche_åì_‰ì
(&
ô
->
down
[
pos
]->
ˇche_åì
);

129 
	`‰ì
(
ô
->
down
[
pos
]);

136 
	`memmove
(
ô
->
down
+
pos
, it->down+pos+1,

137 (
ˇche_åì_sub
 *) *

138 (
ô
->
subåì_ƒ
 - 
pos
 - 1));

139 
ô
->
subåì_ƒ
--;

143 
«mñí
 = 
¶ash
 - 
∑th
;

144 
down
 = 
	`föd_subåì
(
ô
, 
∑th
, 
«mñí
, 0);

145 i‡(
down
)

146 
	`ˇche_åì_övÆid©e_∑th
(
down
->
ˇche_åì
, 
¶ash
 + 1);

147 
	}
}

149 
	$vîify_ˇche
(
ˇche_íåy
 **
ˇche
,

150 
íåõs
)

152 
i
, 
fu¬y
;

155 
fu¬y
 = 0;

156 
i
 = 0; i < 
íåõs
; i++) {

157 
ˇche_íåy
 *
˚
 = 
ˇche
[
i
];

158 i‡(
	`˚_°age
(
˚
)) {

159 i‡(10 < ++
fu¬y
) {

160 
	`Ârötf
(
°dîr
, "...\n");

163 
	`Ârötf
(
°dîr
, "%s: unmerged (%s)\n",

164 
˚
->
«me
, 
	`sha1_to_hex
(˚->
sha1
));

167 i‡(
fu¬y
)

174 
fu¬y
 = 0;

175 
i
 = 0; i < 
íåõs
 - 1; i++) {

180 c⁄° *
this_«me
 = 
ˇche
[
i
]->
«me
;

181 c⁄° *
√xt_«me
 = 
ˇche
[
i
+1]->
«me
;

182 
this_Àn
 = 
	`°æí
(
this_«me
);

183 i‡(
this_Àn
 < 
	`°æí
(
√xt_«me
) &&

184 
	`°∫cmp
(
this_«me
, 
√xt_«me
, 
this_Àn
) == 0 &&

185 
√xt_«me
[
this_Àn
] == '/') {

186 i‡(10 < ++
fu¬y
) {

187 
	`Ârötf
(
°dîr
, "...\n");

190 
	`Ârötf
(
°dîr
, "You have both %sánd %s\n",

191 
this_«me
, 
√xt_«me
);

194 i‡(
fu¬y
)

197 
	}
}

199 
	$disˇrd_unu£d_subåìs
(
ˇche_åì
 *
ô
)

201 
ˇche_åì_sub
 **
down
 = 
ô
->down;

202 
ƒ
 = 
ô
->
subåì_ƒ
;

203 
d°
, 
§c
;

204 
d°
 = 
§c
 = 0; sr¯< 
ƒ
; src++) {

205 
ˇche_åì_sub
 *
s
 = 
down
[
§c
];

206 i‡(
s
->
u£d
)

207 
down
[
d°
++] = 
s
;

209 
	`ˇche_åì_‰ì
(&
s
->
ˇche_åì
);

210 
	`‰ì
(
s
);

211 
ô
->
subåì_ƒ
--;

214 
	}
}

216 
	$ˇche_åì_fuŒy_vÆid
(
ˇche_åì
 *
ô
)

218 
i
;

219 i‡(!
ô
)

221 i‡(
ô
->
íåy_cou¡
 < 0 || !
	`has_sha1_fûe
(ô->
sha1
))

223 
i
 = 0; i < 
ô
->
subåì_ƒ
; i++) {

224 i‡(!
	`ˇche_åì_fuŒy_vÆid
(
ô
->
down
[
i
]->
ˇche_åì
))

228 
	}
}

230 
	$upd©e_⁄e
(
ˇche_åì
 *
ô
,

231 
ˇche_íåy
 **
ˇche
,

232 
íåõs
,

233 c⁄° *
ba£
,

234 
ba£Àn
,

235 
missög_ok
,

236 
dryrun
)

238 
size
, 
off£t
;

239 *
buf„r
;

240 
i
;

242 i‡(0 <
ô
->
íåy_cou¡
 && 
	`has_sha1_fûe
(ô->
sha1
))

243  
ô
->
íåy_cou¡
;

250 
i
 = 0; i < 
ô
->
subåì_ƒ
; i++)

251 
ô
->
down
[
i
]->
u£d
 = 0;

256 
i
 = 0; i < 
íåõs
; i++) {

257 
ˇche_íåy
 *
˚
 = 
ˇche
[
i
];

258 
ˇche_åì_sub
 *
sub
;

259 c⁄° *
∑th
, *
¶ash
;

260 
∑thÀn
, 
subÀn
, 
sub˙t
;

262 
∑th
 = 
˚
->
«me
;

263 
∑thÀn
 = 
	`˚_«mñí
(
˚
);

264 i‡(
∑thÀn
 <
ba£Àn
 || 
	`memcmp
(
ba£
, 
∑th
, baselen))

267 
¶ash
 = 
	`°rchr
(
∑th
 + 
ba£Àn
, '/');

268 i‡(!
¶ash
)

275 
subÀn
 = 
¶ash
 - (
∑th
 + 
ba£Àn
);

276 
sub
 = 
	`föd_subåì
(
ô
, 
∑th
 + 
ba£Àn
, 
subÀn
, 1);

277 i‡(!
sub
->
ˇche_åì
)

278 
sub
->
ˇche_åì
 = 
	`ˇche_åì
();

279 
sub˙t
 = 
	`upd©e_⁄e
(
sub
->
ˇche_åì
,

280 
ˇche
 + 
i
, 
íåõs
 - i,

281 
∑th
,

282 
ba£Àn
 + 
subÀn
 + 1,

283 
missög_ok
,

284 
dryrun
);

285 i‡(
sub˙t
 < 0)

286  
sub˙t
;

287 
i
 +
sub˙t
 - 1;

288 
sub
->
u£d
 = 1;

291 
	`disˇrd_unu£d_subåìs
(
ô
);

296 
size
 = 8192;

297 
buf„r
 = 
	`xmÆloc
(
size
);

298 
off£t
 = 0;

300 
i
 = 0; i < 
íåõs
; i++) {

301 
ˇche_íåy
 *
˚
 = 
ˇche
[
i
];

302 
ˇche_åì_sub
 *
sub
;

303 c⁄° *
∑th
, *
¶ash
;

304 
∑thÀn
, 
íéí
;

305 c⁄° *
sha1
;

306 
mode
;

308 
∑th
 = 
˚
->
«me
;

309 
∑thÀn
 = 
	`˚_«mñí
(
˚
);

310 i‡(
∑thÀn
 <
ba£Àn
 || 
	`memcmp
(
ba£
, 
∑th
, baselen))

313 
¶ash
 = 
	`°rchr
(
∑th
 + 
ba£Àn
, '/');

314 i‡(
¶ash
) {

315 
íéí
 = 
¶ash
 - (
∑th
 + 
ba£Àn
);

316 
sub
 = 
	`föd_subåì
(
ô
, 
∑th
 + 
ba£Àn
, 
íéí
, 0);

317 i‡(!
sub
)

318 
	`dõ
("cache-tree.c: '%.*s' in '%s'Çot found",

319 
íéí
, 
∑th
 + 
ba£Àn
,Öath);

320 
i
 +
sub
->
ˇche_åì
->
íåy_cou¡
 - 1;

321 
sha1
 = 
sub
->
ˇche_åì
->sha1;

322 
mode
 = 
S_IFDIR
;

325 
sha1
 = 
˚
->sha1;

326 
mode
 = 
	`¡ohl
(
˚
->
˚_mode
);

327 
íéí
 = 
∑thÀn
 - 
ba£Àn
;

329 i‡(!
missög_ok
 && !
	`has_sha1_fûe
(
sha1
))

330  
	`îr‹
("övÆid obje˘ %s", 
	`sha1_to_hex
(
sha1
));

332 i‡(!
˚
->
˚_mode
)

335 i‡(
size
 < 
off£t
 + 
íéí
 + 100) {

336 
size
 = 
	`Æloc_ƒ
(
off£t
 + 
íéí
 + 100);

337 
buf„r
 = 
	`xªÆloc
(buf„r, 
size
);

339 
off£t
 +
	`•rötf
(
buf„r
 + offset,

340 "%ÿ%.*s", 
mode
, 
íéí
, 
∑th
 + 
ba£Àn
);

341 
buf„r
[
off£t
++] = 0;

342 
	`hash˝y
((*)
buf„r
 + 
off£t
, 
sha1
);

343 
off£t
 += 20;

345 #i‡
DEBUG


346 
	`Ârötf
(
°dîr
, "cache-tree update-one %o %.*s\n",

347 
mode
, 
íéí
, 
∑th
 + 
ba£Àn
);

351 i‡(
dryrun
)

352 
	`hash_sha1_fûe
(
buf„r
, 
off£t
, 
åì_ty≥
, 
ô
->
sha1
);

354 
	`wrôe_sha1_fûe
(
buf„r
, 
off£t
, 
åì_ty≥
, 
ô
->
sha1
);

355 
	`‰ì
(
buf„r
);

356 
ô
->
íåy_cou¡
 = 
i
;

357 #i‡
DEBUG


358 
	`Ârötf
(
°dîr
, "cache-tree update-one (%dÉnt, %d subtree) %s\n",

359 
ô
->
íåy_cou¡
, it->
subåì_ƒ
,

360 
	`sha1_to_hex
(
ô
->
sha1
));

362  
i
;

363 
	}
}

365 
	$ˇche_åì_upd©e
(
ˇche_åì
 *
ô
,

366 
ˇche_íåy
 **
ˇche
,

367 
íåõs
,

368 
missög_ok
,

369 
dryrun
)

371 
i
;

372 
i
 = 
	`vîify_ˇche
(
ˇche
, 
íåõs
);

373 i‡(
i
)

374  
i
;

375 
i
 = 
	`upd©e_⁄e
(
ô
, 
ˇche
, 
íåõs
, "", 0, 
missög_ok
, 
dryrun
);

376 i‡(
i
 < 0)

377  
i
;

379 
	}
}

381 *
	$wrôe_⁄e
(
ˇche_åì
 *
ô
,

382 *
∑th
,

383 
∑thÀn
,

384 *
buf„r
,

385 *
size
,

386 *
off£t
)

388 
i
;

396 i‡(*
size
 < *
off£t
 + 
∑thÀn
 + 100) {

397 *
size
 = 
	`Æloc_ƒ
(*
off£t
 + 
∑thÀn
 + 100);

398 
buf„r
 = 
	`xªÆloc
(buf„r, *
size
);

400 *
off£t
 +
	`•rötf
(
buf„r
 + *offset, "%.*s%c%d %d\n",

401 
∑thÀn
, 
∑th
, 0,

402 
ô
->
íåy_cou¡
, it->
subåì_ƒ
);

404 #i‡
DEBUG


405 i‡(0 <
ô
->
íåy_cou¡
)

406 
	`Ârötf
(
°dîr
, "cache-tree <%.*s> (%dÉnt, %d subtree) %s\n",

407 
∑thÀn
, 
∑th
, 
ô
->
íåy_cou¡
, it->
subåì_ƒ
,

408 
	`sha1_to_hex
(
ô
->
sha1
));

410 
	`Ârötf
(
°dîr
, "cache-tree <%.*s> (%d subtree) invalid\n",

411 
∑thÀn
, 
∑th
, 
ô
->
subåì_ƒ
);

414 i‡(0 <
ô
->
íåy_cou¡
) {

415 
	`hash˝y
((*)
buf„r
 + *
off£t
, 
ô
->
sha1
);

416 *
off£t
 += 20;

418 
i
 = 0; i < 
ô
->
subåì_ƒ
; i++) {

419 
ˇche_åì_sub
 *
down
 = 
ô
->down[
i
];

420 i‡(
i
) {

421 
ˇche_åì_sub
 *
¥ev
 = 
ô
->
down
[
i
-1];

422 i‡(
	`subåì_«me_cmp
(
down
->
«me
, down->
«mñí
,

423 
¥ev
->
«me
,Öªv->
«mñí
) <= 0)

424 
	`dõ
("fatal - unsorted cache subtree");

426 
buf„r
 = 
	`wrôe_⁄e
(
down
->
ˇche_åì
, down->
«me
, down->
«mñí
,

427 
buf„r
, 
size
, 
off£t
);

429  
buf„r
;

430 
	}
}

432 *
	$ˇche_åì_wrôe
(
ˇche_åì
 *
roŸ
, *
size_p
)

434 
∑th
[
PATH_MAX
];

435 
size
 = 8192;

436 *
buf„r
 = 
	`xmÆloc
(
size
);

438 *
size_p
 = 0;

439 
∑th
[0] = 0;

440  
	`wrôe_⁄e
(
roŸ
, 
∑th
, 0, 
buf„r
, &
size
, 
size_p
);

441 
	}
}

443 
ˇche_åì
 *
	$ªad_⁄e
(c⁄° **
buf„r
, *
size_p
)

445 c⁄° *
buf
 = *
buf„r
;

446 
size
 = *
size_p
;

447 c⁄° *
˝
;

448 *
ï
;

449 
ˇche_åì
 *
ô
;

450 
i
, 
subåì_ƒ
;

452 
ô
 = 
NULL
;

454 
size
 && *
buf
) {

455 
size
--;

456 
buf
++;

458 i‡(!
size
)

459 
‰ì_ªtu∫
;

460 
buf
++; 
size
--;

461 
ô
 = 
	`ˇche_åì
();

463 
˝
 = 
buf
;

464 
ô
->
íåy_cou¡
 = 
	`°πﬁ
(
˝
, &
ï
, 10);

465 i‡(
˝
 =
ï
)

466 
‰ì_ªtu∫
;

467 
˝
 = 
ï
;

468 
subåì_ƒ
 = 
	`°πﬁ
(
˝
, &
ï
, 10);

469 i‡(
˝
 =
ï
)

470 
‰ì_ªtu∫
;

471 
size
 && *
buf
 && *buf != '\n') {

472 
size
--;

473 
buf
++;

475 i‡(!
size
)

476 
‰ì_ªtu∫
;

477 
buf
++; 
size
--;

478 i‡(0 <
ô
->
íåy_cou¡
) {

479 i‡(
size
 < 20)

480 
‰ì_ªtu∫
;

481 
	`hash˝y
(
ô
->
sha1
, (*)
buf
);

482 
buf
 += 20;

483 
size
 -= 20;

486 #i‡
DEBUG


487 i‡(0 <
ô
->
íåy_cou¡
)

488 
	`Ârötf
(
°dîr
, "cache-tree <%s> (%dÉnt, %d subtree) %s\n",

489 *
buf„r
, 
ô
->
íåy_cou¡
, 
subåì_ƒ
,

490 
	`sha1_to_hex
(
ô
->
sha1
));

492 
	`Ârötf
(
°dîr
, "cache-tree <%s> (%d subtrees) invalid\n",

493 *
buf„r
, 
subåì_ƒ
);

501 
ô
->
subåì_Æloc
 = 
subåì_ƒ
 + 2;

502 
ô
->
down
 = 
	`xˇŒoc
(ô->
subåì_Æloc
, (
ˇche_åì_sub
 *));

503 
i
 = 0; i < 
subåì_ƒ
; i++) {

505 
ˇche_åì
 *
sub
;

506 
ˇche_åì_sub
 *
subåì
;

507 c⁄° *
«me
 = 
buf
;

509 
sub
 = 
	`ªad_⁄e
(&
buf
, &
size
);

510 i‡(!
sub
)

511 
‰ì_ªtu∫
;

512 
subåì
 = 
	`ˇche_åì_sub
(
ô
, 
«me
);

513 
subåì
->
ˇche_åì
 = 
sub
;

515 i‡(
subåì_ƒ
 !
ô
->subtree_nr)

516 
	`dõ
("cache-tree: internalÉrror");

517 *
buf„r
 = 
buf
;

518 *
size_p
 = 
size
;

519  
ô
;

521 
‰ì_ªtu∫
:

522 
	`ˇche_åì_‰ì
(&
ô
);

523  
NULL
;

524 
	}
}

526 
ˇche_åì
 *
	$ˇche_åì_ªad
(c⁄° *
buf„r
, 
size
)

528 i‡(
buf„r
[0])

529  
NULL
;

530  
	`ªad_⁄e
(&
buf„r
, &
size
);

531 
	}
}

533 
ˇche_åì
 *
	$ˇche_åì_föd
(
ˇche_åì
 *
ô
, c⁄° *
∑th
)

535 *
∑th
) {

536 c⁄° *
¶ash
;

537 
ˇche_åì_sub
 *
sub
;

539 
¶ash
 = 
	`°rchr
(
∑th
, '/');

540 i‡(!
¶ash
)

541 
¶ash
 = 
∑th
 + 
	`°æí
(path);

545 
sub
 = 
	`föd_subåì
(
ô
, 
∑th
, 
¶ash
 -Öath, 0);

546 i‡(!
sub
)

547  
NULL
;

548 
ô
 = 
sub
->
ˇche_åì
;

549 i‡(
¶ash
)

550 *
¶ash
 && *slash == '/')

551 
¶ash
++;

552 i‡(!
¶ash
 || !*slash)

553  
ô
;

554 
∑th
 = 
¶ash
;

556  
ô
;

557 
	}
}

	@cache-tree.h

1 #i‚de‡
CACHE_TREE_H


2 
	#CACHE_TREE_H


	)

4 
	gˇche_åì
;

5 
	sˇche_åì_sub
 {

6 
ˇche_åì
 *
	mˇche_åì
;

7 
	m«mñí
;

8 
	mu£d
;

9 
	m«me
[
FLEX_ARRAY
];

12 
	sˇche_åì
 {

13 
	míåy_cou¡
;

14 
	msha1
[20];

15 
	msubåì_ƒ
;

16 
	msubåì_Æloc
;

17 
ˇche_åì_sub
 **
	mdown
;

20 
ˇche_åì
 *cache_tree();

21 
ˇche_åì_‰ì
(
ˇche_åì
 **);

22 
ˇche_åì_övÆid©e_∑th
(
ˇche_åì
 *, const *);

23 
ˇche_åì_sub
 *ˇche_åì_sub(
ˇche_åì
 *, const *);

25 *
ˇche_åì_wrôe
(
ˇche_åì
 *
roŸ
, *
size_p
);

26 
ˇche_åì
 *
ˇche_åì_ªad
(c⁄° *
buf„r
, 
size
);

28 
ˇche_åì_fuŒy_vÆid
(
ˇche_åì
 *);

29 
ˇche_åì_upd©e
(
ˇche_åì
 *, 
ˇche_íåy
 **, , , );

31 
ˇche_åì
 *
ˇche_åì_föd
(cache_tree *, const *);

	@cache.h

1 #i‚de‡
CACHE_H


2 
	#CACHE_H


	)

4 
	~"gô-com∑t-utû.h
"

6 #ö˛udê
SHA1_HEADER


7 
	~<zlib.h
>

9 #i‡
ZLIB_VERNUM
 < 0x1200

10 
	#deÊ©eBound
(
c
,
s
Ë((sË+ (((sË+ 7Ë>> 3Ë+ (((sË+ 63Ë>> 6Ë+ 11)

	)

13 #i‡
deföed
(
DT_UNKNOWN
Ë&& !deföed(
NO_D_TYPE_IN_DIRENT
)

14 
	#DTYPE
(
de
Ë((de)->
d_ty≥
)

	)

16 #unde‡
DT_UNKNOWN


17 #unde‡
DT_DIR


18 #unde‡
DT_REG


19 #unde‡
DT_LNK


20 
	#DT_UNKNOWN
 0

	)

21 
	#DT_DIR
 1

	)

22 
	#DT_REG
 2

	)

23 
	#DT_LNK
 3

	)

24 
	#DTYPE
(
de
Ë
DT_UNKNOWN


	)

46 
	#DEFAULT_GIT_PORT
 9418

	)

52 
	#CACHE_SIGNATURE
 0x44495243

	)

53 
	sˇche_hódî
 {

54 
	mhdr_sig«tuª
;

55 
	mhdr_vîsi⁄
;

56 
	mhdr_íåõs
;

64 
	sˇche_time
 {

65 
	m£c
;

66 
	mn£c
;

77 
	sˇche_íåy
 {

78 
ˇche_time
 
	m˚_˘ime
;

79 
ˇche_time
 
	m˚_mtime
;

80 
	m˚_dev
;

81 
	m˚_öo
;

82 
	m˚_mode
;

83 
	m˚_uid
;

84 
	m˚_gid
;

85 
	m˚_size
;

86 
	msha1
[20];

87 
	m˚_Êags
;

88 
	m«me
[
FLEX_ARRAY
];

91 
	#CE_NAMEMASK
 (0x0fff)

	)

92 
	#CE_STAGEMASK
 (0x3000)

	)

93 
	#CE_UPDATE
 (0x4000)

	)

94 
	#CE_VALID
 (0x8000)

	)

95 
	#CE_STAGESHIFT
 12

	)

97 
	#¸óã_˚_Êags
(
Àn
, 
°age
Ë
	`ht⁄s
(÷íË| ((°ageË<< 
CE_STAGESHIFT
))

	)

98 
	#˚_«mñí
(
˚
Ë(
CE_NAMEMASK
 & 
	`¡ohs
((˚)->
˚_Êags
))

	)

99 
	#˚_size
(
˚
Ë
	`ˇche_íåy_size
(
	`˚_«mñí
(˚))

	)

100 
	#˚_°age
(
˚
Ë((
CE_STAGEMASK
 & 
	`¡ohs
((˚)->
˚_Êags
)Ë>> 
CE_STAGESHIFT
)

	)

102 
	#˚_≥rmissi⁄s
(
mode
Ë(((modeË& 0100Ë? 0755 : 0644)

	)

103 
ölöe
 
	$¸óã_˚_mode
(
mode
)

105 i‡(
	`S_ISLNK
(
mode
))

106  
	`ht⁄l
(
S_IFLNK
);

107  
	`ht⁄l
(
S_IFREG
 | 
	`˚_≥rmissi⁄s
(
mode
));

108 
	}
}

109 
	#ˇn⁄_mode
(
mode
) \

110 (
	`S_ISREG
(
mode
Ë? (
S_IFREG
 | 
	`˚_≥rmissi⁄s
(mode)) : \

111 
	`S_ISLNK
(
mode
Ë? 
S_IFLNK
 : 
S_IFDIR
)

	)

113 
	#ˇche_íåy_size
(
Àn
Ë((
	`off£tof
(
ˇche_íåy
,
«me
Ë+ (ÀnË+ 8Ë& ~7)

	)

115 
ˇche_íåy
 **
a˘ive_ˇche
;

116 
a˘ive_ƒ
, 
a˘ive_Æloc
, 
a˘ive_ˇche_ch™ged
;

117 
ˇche_åì
 *
a˘ive_ˇche_åì
;

118 
ˇche_î∫o
;

120 
	#GIT_DIR_ENVIRONMENT
 "GIT_DIR"

	)

121 
	#DEFAULT_GIT_DIR_ENVIRONMENT
 ".gô"

	)

122 
	#DB_ENVIRONMENT
 "GIT_OBJECT_DIRECTORY"

	)

123 
	#INDEX_ENVIRONMENT
 "GIT_INDEX_FILE"

	)

124 
	#GRAFT_ENVIRONMENT
 "GIT_GRAFT_FILE"

	)

125 
	#TEMPLATE_DIR_ENVIRONMENT
 "GIT_TEMPLATE_DIR"

	)

126 
	#CONFIG_ENVIRONMENT
 "GIT_CONFIG"

	)

127 
	#CONFIG_LOCAL_ENVIRONMENT
 "GIT_CONFIG_LOCAL"

	)

128 
	#EXEC_PATH_ENVIRONMENT
 "GIT_EXEC_PATH"

	)

130 
is_b¨e_ªposô‹y_cfg
;

131 
is_b¨e_ªposô‹y
();

132 
is_öside_gô_dú
();

133 c⁄° *
gë_gô_dú
();

134 *
gë_obje˘_dúe˘‹y
();

135 *
gë_ªfs_dúe˘‹y
();

136 *
gë_ödex_fûe
();

137 *
gë_gø·_fûe
();

139 
	#ALTERNATE_DB_ENVIRONMENT
 "GIT_ALTERNATE_OBJECT_DIRECTORIES"

	)

141 c⁄° **
gë_∑th•ec
(c⁄° *
¥efix
, c⁄° **
∑th•ec
);

142 c⁄° *
£tup_gô_dúe˘‹y_gíéy
(*);

143 c⁄° *
£tup_gô_dúe˘‹y
();

144 c⁄° *
¥efix_∑th
(c⁄° *
¥efix
, 
Àn
, c⁄° *
∑th
);

145 c⁄° *
¥efix_fûíame
(c⁄° *
¥efix
, 
Àn
, c⁄° *
∑th
);

146 
vîify_fûíame
(c⁄° *
¥efix
, c⁄° *
«me
);

147 
vîify_n⁄_fûíame
(c⁄° *
¥efix
, c⁄° *
«me
);

149 
	#Æloc_ƒ
(
x
Ë(((x)+16)*3/2)

	)

152 
ªad_ˇche
();

153 
ªad_ˇche_‰om
(c⁄° *
∑th
);

154 
wrôe_ˇche
(
√wfd
, 
ˇche_íåy
 **
ˇche
, 
íåõs
);

155 
disˇrd_ˇche
();

156 
vîify_∑th
(c⁄° *
∑th
);

157 
ˇche_«me_pos
(c⁄° *
«me
, 
«mñí
);

158 
	#ADD_CACHE_OK_TO_ADD
 1

	)

159 
	#ADD_CACHE_OK_TO_REPLACE
 2

	)

160 
	#ADD_CACHE_SKIP_DFCHECK
 4

	)

161 
add_ˇche_íåy
(
ˇche_íåy
 *
˚
, 
›ti⁄
);

162 
ˇche_íåy
 *
ª‰esh_ˇche_íåy
(ˇche_íåy *
˚
, 
ªÆly
);

163 
ªmove_ˇche_íåy_©
(
pos
);

164 
ªmove_fûe_‰om_ˇche
(c⁄° *
∑th
);

165 
add_fûe_to_ödex
(c⁄° *
∑th
, 
vîbo£
);

166 
˚_ßme_«me
(
ˇche_íåy
 *
a
, ˇche_íåy *
b
);

167 
˚_m©ch_°©
(
ˇche_íåy
 *
˚
, 
°©
 *
°
, );

168 
˚_modifõd
(
ˇche_íåy
 *
˚
, 
°©
 *
°
, );

169 
˚_∑th_m©ch
(c⁄° 
ˇche_íåy
 *
˚
, c⁄° **
∑th•ec
);

170 
ödex_fd
(*
sha1
, 
fd
, 
°©
 *
°
, 
wrôe_obje˘
, c⁄° *
ty≥
);

171 
ªad_pùe
(
fd
, ** 
ªtu∫_buf
, * 
ªtu∫_size
);

172 
ödex_pùe
(*
sha1
, 
fd
, c⁄° *
ty≥
, 
wrôe_obje˘
);

173 
ödex_∑th
(*
sha1
, c⁄° *
∑th
, 
°©
 *
°
, 
wrôe_obje˘
);

174 
fûl_°©_ˇche_öfo
(
ˇche_íåy
 *
˚
, 
°©
 *
°
);

176 
	#REFRESH_REALLY
 0x0001

	)

177 
	#REFRESH_UNMERGED
 0x0002

	)

178 
	#REFRESH_QUIET
 0x0004

	)

179 
	#REFRESH_IGNORE_MISSING
 0x0008

	)

180 
ª‰esh_ˇche
(
Êags
);

182 
	slock_fûe
 {

183 
lock_fûe
 *
	m√xt
;

184 
	m⁄_li°
;

185 
	mfûíame
[
PATH_MAX
];

187 
hﬁd_lock_fûe_f‹_upd©e
(
lock_fûe
 *, c⁄° *
∑th
, );

188 
commô_lock_fûe
(
lock_fûe
 *);

189 
rﬁlback_lock_fûe
(
lock_fûe
 *);

190 
dñëe_ªf
(c⁄° *, *
sha1
);

193 
u£_Àgacy_hódîs
;

194 
åu°_execuèbÀ_bô
;

195 
assume_unch™ged
;

196 
¥e„r_symlök_ªfs
;

197 
log_Æl_ªf_upd©es
;

198 
w¨n_ambiguous_ªfs
;

199 
sh¨ed_ªposô‹y
;

200 c⁄° *
≠∂y_deÁu…_whôe•a˚
;

201 
zlib_com¥essi⁄_Àvñ
;

202 
size_t
 
∑cked_gô_wödow_size
;

203 
size_t
 
∑cked_gô_limô
;

205 
	#GIT_REPO_VERSION
 0

	)

206 
ªposô‹y_f‹m©_vîsi⁄
;

207 
check_ªposô‹y_f‹m©
();

209 
	#MTIME_CHANGED
 0x0001

	)

210 
	#CTIME_CHANGED
 0x0002

	)

211 
	#OWNER_CHANGED
 0x0004

	)

212 
	#MODE_CHANGED
 0x0008

	)

213 
	#INODE_CHANGED
 0x0010

	)

214 
	#DATA_CHANGED
 0x0020

	)

215 
	#TYPE_CHANGED
 0x0040

	)

218 *
	$mk∑th
(c⁄° *
fmt
, ...Ë
	`__©åibuã__
((
	`f‹m©
 (
¥ötf
, 1, 2)));

219 *
	$gô_∑th
(c⁄° *
fmt
, ...Ë
	`__©åibuã__
((
	`f‹m©
 (
¥ötf
, 1, 2)));

220 *
	`sha1_fûe_«me
(c⁄° *
sha1
);

221 *
	`sha1_∑ck_«me
(c⁄° *
sha1
);

222 *
	`sha1_∑ck_ödex_«me
(c⁄° *
sha1
);

223 c⁄° *
	`föd_unique_abbªv
(c⁄° *
sha1
, );

224 c⁄° 
nuŒ_sha1
[20];

225 
ölöe
 
	$is_nuŒ_sha1
(c⁄° *
sha1
)

227  !
	`memcmp
(
sha1
, 
nuŒ_sha1
, 20);

228 
	}
}

229 
ölöe
 
	$hashcmp
(c⁄° *
sha1
, c⁄° *
sha2
)

231  
	`memcmp
(
sha1
, 
sha2
, 20);

232 
	}
}

233 
ölöe
 
	$hash˝y
(*
sha_d°
, c⁄° *
sha_§c
)

235 
	`mem˝y
(
sha_d°
, 
sha_§c
, 20);

236 
	}
}

237 
ölöe
 
	$hash˛r
(*
hash
)

239 
	`mem£t
(
hash
, 0, 20);

240 
	}
}

242 
gô_mk°emp
(*
∑th
, 
size_t
 
n
, c⁄° *
ãm∂©e
);

244 
	esh¨edªpo
 {

245 
	mPERM_UMASK
 = 0,

246 
	mPERM_GROUP
,

247 
	mPERM_EVERYBODY


249 
gô_c⁄fig_≥rm
(c⁄° *
v¨
, c⁄° *
vÆue
);

250 
adju°_sh¨ed_≥rm
(c⁄° *
∑th
);

251 
ß„_¸óã_Àadög_dúe˘‹õs
(*
∑th
);

252 *
íãr_ªpo
(*
∑th
, 
°ri˘
);

255 
sha1_obje˘_öfo
(const *, *, *);

256 * 
u≈ack_sha1_fûe
(*
m≠
, 
m≠size
, *
ty≥
, *
size
);

257 * 
ªad_sha1_fûe
(c⁄° *
sha1
, *
ty≥
, *
size
);

258 
hash_sha1_fûe
(*
buf
, 
Àn
, c⁄° *
ty≥
, *
sha1
);

259 
wrôe_sha1_fûe
(*
buf
, 
Àn
, c⁄° *
ty≥
, *
ªtu∫_sha1
);

260 
¥ëíd_sha1_fûe
(*, , const *, *);

262 
check_sha1_sig«tuª
(c⁄° *
sha1
, *
buf
, 
size
, c⁄° *
ty≥
);

264 
wrôe_sha1_‰om_fd
(c⁄° *
sha1
, 
fd
, *
buf„r
,

265 
size_t
 
bufsize
, size_à*
buÂo¢
);

266 
wrôe_sha1_to_fd
(
fd
, c⁄° *
sha1
);

267 
move_ãmp_to_fûe
(c⁄° *
tmpfûe
, c⁄° *
fûíame
);

269 
has_sha1_∑ck
(c⁄° *
sha1
, c⁄° **
ign‹e
);

270 
has_sha1_fûe
(c⁄° *
sha1
);

271 *
m≠_sha1_fûe
(c⁄° *
sha1
, *);

272 
Àgacy_loo£_obje˘
(*);

274 
has_∑ck_fûe
(c⁄° *
sha1
);

275 
has_∑ck_ödex
(c⁄° *
sha1
);

277 
	eobje˘_ty≥
 {

278 
	mOBJ_NONE
 = 0,

279 
	mOBJ_COMMIT
 = 1,

280 
	mOBJ_TREE
 = 2,

281 
	mOBJ_BLOB
 = 3,

282 
	mOBJ_TAG
 = 4,

284 
	mOBJ_OFS_DELTA
 = 6,

285 
	mOBJ_REF_DELTA
 = 7,

286 
	mOBJ_BAD
,

289 sig√d 
hexvÆ_èbÀ
[256];

290 
ölöe
 
	$hexvÆ
(
c
)

292  
hexvÆ_èbÀ
[
c
];

293 
	}
}

296 
	#MINIMUM_ABBREV
 4

	)

297 
	#DEFAULT_ABBREV
 7

	)

299 
gë_sha1
(c⁄° *
°r
, *
sha1
);

300 
gë_sha1_hex
(c⁄° *
hex
, *
sha1
);

301 *
sha1_to_hex
(c⁄° *
sha1
);

302 
ªad_ªf
(c⁄° *
fûíame
, *
sha1
);

303 c⁄° *
ªsﬁve_ªf
(c⁄° *
∑th
, *
sha1
, , *);

304 
dwim_ªf
(c⁄° *
°r
, 
Àn
, *
sha1
, **
ªf
);

305 
dwim_log
(c⁄° *
°r
, 
Àn
, *
sha1
, **
ªf
);

307 
¸óã_symªf
(c⁄° *
ªf
, c⁄° *
ªfs_hóds_ma°î
, c⁄° *
logmsg
);

308 
vÆid©e_hódªf
(c⁄° *
ªf
);

310 
ba£_«me_com∑ª
(c⁄° *
«me1
, 
Àn1
, 
mode1
, c⁄° *
«me2
, 
Àn2
, 
mode2
);

311 
ˇche_«me_com∑ª
(c⁄° *
«me1
, 
Àn1
, c⁄° *
«me2
, 
Àn2
);

313 *
ªad_obje˘_wôh_ª„ªn˚
(c⁄° *
sha1
,

314 c⁄° *
ªquúed_ty≥
,

315 *
size
,

316 *
sha1_ªt
);

318 c⁄° *
show_d©e
(
time
, 
timez⁄e
, 
ªœtive
);

319 c⁄° *
show_rfc2822_d©e
(
time
, 
timez⁄e
);

320 
∑r£_d©e
(c⁄° *
d©e
, *
buf
, 
bufsize
);

321 
d©e°amp
(*
buf
, 
bufsize
);

322 
≠¥oxid©e
(const *);

324 c⁄° *
gô_auth‹_öfo
();

325 c⁄° *
gô_commôãr_öfo
();

326 c⁄° *
fmt_idít
(c⁄° *
«me
, c⁄° *
emaû
, c⁄° *
d©e_°r
, );

328 
	scheckout
 {

329 c⁄° *
	mba£_dú
;

330 
	mba£_dú_Àn
;

331 
	mf‹˚
:1,

332 
	mquõt
:1,

333 
	mnŸ_√w
:1,

334 
	mª‰esh_ˇche
:1;

337 
checkout_íåy
(
ˇche_íåy
 *
˚
, 
checkout
 *
°©e
, *
t›©h
);

339 
	sÆã∫©e_obje˘_d©aba£
 {

340 
Æã∫©e_obje˘_d©aba£
 *
√xt
;

341 *
«me
;

342 
ba£
[
FLEX_ARRAY
];

343 } *
Æt_odb_li°
;

344 
¥ï¨e_Æt_odb
();

346 
	s∑ck_wödow
 {

347 
∑ck_wödow
 *
	m√xt
;

348 *
	mba£
;

349 
off_t
 
	moff£t
;

350 
size_t
 
	mÀn
;

351 
	mœ°_u£d
;

352 
	möu£_˙t
;

355 
	s∑cked_gô
 {

356 
∑cked_gô
 *
√xt
;

357 
∑ck_wödow
 *
wödows
;

358 
uöt32_t
 *
ödex_ba£
;

359 
off_t
 
ödex_size
;

360 
off_t
 
∑ck_size
;

361 
∑ck_fd
;

362 
∑ck_loˇl
;

363 
sha1
[20];

365 
∑ck_«me
[
FLEX_ARRAY
];

366 } *
∑cked_gô
;

368 
	s∑ck_íåy
 {

369 
	moff£t
;

370 
	msha1
[20];

371 
∑cked_gô
 *
	mp
;

374 
	sªf
 {

375 
ªf
 *
	m√xt
;

376 
	mﬁd_sha1
[20];

377 
	m√w_sha1
[20];

378 
	mf‹˚
;

379 
ªf
 *
	m≥î_ªf
;

380 
	m«me
[
FLEX_ARRAY
];

383 
	#REF_NORMAL
 (1u << 0)

	)

384 
	#REF_HEADS
 (1u << 1)

	)

385 
	#REF_TAGS
 (1u << 2)

	)

387 
pid_t
 
gô_c⁄√˘
(
fd
[2], *
uæ
, c⁄° *
¥og
);

388 
föish_c⁄√˘
(
pid_t
 
pid
);

389 
∑th_m©ch
(c⁄° *
∑th
, 
ƒ
, **
m©ch
);

390 
m©ch_ªfs
(
ªf
 *
§c
, ª‡*
d°
, ª‡***
d°_èû
,

391 
ƒ_ªf•ec
, **
ªf•ec
, 
Æl
);

392 
gë_ack
(
fd
, *
ªsu…_sha1
);

393 
ªf
 **
gë_ªmŸe_hóds
(
ö
, ª‡**
li°
, 
ƒ_m©ch
, **
m©ch
, 
Êags
);

394 
£rvî_suµ‹ts
(c⁄° *
„©uª
);

396 
∑cked_gô
 *
∑r£_∑ck_ödex
(*
sha1
);

397 
∑cked_gô
 *
∑r£_∑ck_ödex_fûe
(c⁄° *
sha1
,

398 *
idx_∑th
);

400 
¥ï¨e_∑cked_gô
();

401 
ª¥ï¨e_∑cked_gô
();

402 
ö°Æl_∑cked_gô
(
∑cked_gô
 *
∑ck
);

404 
∑cked_gô
 *
föd_sha1_∑ck
(c⁄° *
sha1
,

405 
∑cked_gô
 *
∑cks
);

407 
∑ck_ªp‹t
();

408 * 
u£_∑ck
(
∑cked_gô
 *, 
∑ck_wödow
 **, , *);

409 
unu£_∑ck
(
∑ck_wödow
 **);

410 
∑cked_gô
 *
add_∑cked_gô
(*, , );

411 
num_∑cked_obje˘s
(c⁄° 
∑cked_gô
 *
p
);

412 
¡h_∑cked_obje˘_sha1
(c⁄° 
∑cked_gô
 *, , *);

413 
föd_∑ck_íåy_⁄e
(c⁄° *, 
∑cked_gô
 *);

414 *
u≈ack_íåy
(
∑cked_gô
 *, , *, *);

415 
u≈ack_obje˘_hódî_gíéy
(c⁄° *
buf
, 
Àn
, 
obje˘_ty≥
 *
ty≥
, *
sizï
);

416 
∑cked_obje˘_öfo_dëaû
(
∑cked_gô
 *, , *, *, *, *, *);

419 
upd©e_£rvî_öfo
();

421 (*
	tc⁄fig_‚_t
)(const *, const *);

422 
	`gô_deÁu…_c⁄fig
(const *, const *);

423 
	`gô_c⁄fig_‰om_fûe
(
c⁄fig_‚_t
 
‚
, const *);

424 
	`gô_c⁄fig
(
c⁄fig_‚_t
 
‚
);

425 
	`gô_c⁄fig_öt
(const *, const *);

426 
	`gô_c⁄fig_boﬁ
(const *, const *);

427 
	`gô_c⁄fig_£t
(const *, const *);

428 
	`gô_c⁄fig_£t_mu…iv¨
(const *, const *, const *, );

429 
	`gô_c⁄fig_ª«me_£˘i⁄
(const *, const *);

430 
	`check_ªposô‹y_f‹m©_vîsi⁄
(c⁄° *
v¨
, c⁄° *
vÆue
);

432 
	#MAX_GITNAME
 (1000)

	)

433 
gô_deÁu…_emaû
[
MAX_GITNAME
];

434 
gô_deÁu…_«me
[
MAX_GITNAME
];

436 *
gô_commô_ícodög
;

437 *
gô_log_ouçut_ícodög
;

439 
	`c›y_fd
(
ifd
, 
ofd
);

440 
	`ªad_ö_fuŒ
(
fd
, *
buf
, 
size_t
 
cou¡
);

441 
	`wrôe_ö_fuŒ
(
fd
, c⁄° *
buf
, 
size_t
 
cou¡
);

442 
	`wrôe_‹_dõ
(
fd
, c⁄° *
buf
, 
size_t
 
cou¡
);

443 
	`wrôe_‹_whöe
(
fd
, c⁄° *
buf
, 
size_t
 
cou¡
, c⁄° *
msg
);

444 
	`wrôe_‹_whöe_pùe
(
fd
, c⁄° *
buf
, 
size_t
 
cou¡
, c⁄° *
msg
);

447 
	`£tup_∑gî
();

448 
∑gî_ö_u£
;

449 
∑gî_u£_cﬁ‹
;

452 
	`decode_85
(*
d°
, *
löe
, 
löñí
);

453 
	`ícode_85
(*
buf
, *
d©a
, 
byãs
);

456 
blob
;

457 
åì
;

458 
commô
;

459 
èg
;

460 
blob
 *
	`Æloc_blob_node
();

461 
åì
 *
	`Æloc_åì_node
();

462 
commô
 *
	`Æloc_commô_node
();

463 
èg
 *
	`Æloc_èg_node
();

464 
	`Æloc_ªp‹t
();

467 
	`nfva•rötf
(**
°r
, c⁄° *
fmt
, 
va_li°
 
va
);

468 
	`åa˚_¥ötf
(c⁄° *
f‹m©
, ...);

469 
	`åa˚_¨gv_¥ötf
(c⁄° **
¨gv
, 
cou¡
, c⁄° *
f‹m©
, ...);

	@check-racy.c

1 
	~"ˇche.h
"

3 
	$maö
(
ac
, **
av
)

5 
i
;

6 
dúty
, 
˛ón
, 
øcy
;

8 
dúty
 = 
˛ón
 = 
øcy
 = 0;

9 
	`ªad_ˇche
();

10 
i
 = 0; i < 
a˘ive_ƒ
; i++) {

11 
ˇche_íåy
 *
˚
 = 
a˘ive_ˇche
[
i
];

12 
°©
 
°
;

14 i‡(
	`l°©
(
˚
->
«me
, &
°
)) {

15 
	`îr‹
("l°©(%s): %s", 
˚
->
«me
, 
	`°ªº‹
(
î∫o
));

19 i‡(
	`˚_m©ch_°©
(
˚
, &
°
, 0))

20 
dúty
++;

21 i‡(
	`˚_m©ch_°©
(
˚
, &
°
, 2))

22 
øcy
++;

24 
˛ón
++;

26 
	`¥ötf
("dúty %d, cÀ™ %d,Ñacy %d\n", 
dúty
, 
˛ón
, 
øcy
);

28 
	}
}

	@color.c

1 
	~"ˇche.h
"

2 
	~"cﬁ‹.h
"

4 
	#COLOR_RESET
 "\033[m"

	)

6 
	$∑r£_cﬁ‹
(c⁄° *
«me
, 
Àn
)

8 c⁄° * c⁄° 
cﬁ‹_«mes
[] = {

12 *
íd
;

13 
i
;

14 
i
 = 0; i < 
	`ARRAY_SIZE
(
cﬁ‹_«mes
); i++) {

15 c⁄° *
°r
 = 
cﬁ‹_«mes
[
i
];

16 i‡(!
	`°∫ˇ£cmp
(
«me
, 
°r
, 
Àn
) && !str[len])

17  
i
 - 1;

19 
i
 = 
	`°πﬁ
(
«me
, &
íd
, 10);

20 i‡(*
«me
 && !*
íd
 && 
i
 >= -1 && i <= 255)

21  
i
;

23 
	}
}

25 
	$∑r£_©å
(c⁄° *
«me
, 
Àn
)

27 c⁄° 
©å_vÆues
[] = { 1, 2, 4, 5, 7 };

28 c⁄° * c⁄° 
©å_«mes
[] = {

31 
i
;

32 
i
 = 0; i < 
	`ARRAY_SIZE
(
©å_«mes
); i++) {

33 c⁄° *
°r
 = 
©å_«mes
[
i
];

34 i‡(!
	`°∫ˇ£cmp
(
«me
, 
°r
, 
Àn
) && !str[len])

35  
©å_vÆues
[
i
];

38 
	}
}

40 
	$cﬁ‹_∑r£
(c⁄° *
vÆue
, c⁄° *
v¨
, *
d°
)

42 c⁄° *
±r
 = 
vÆue
;

43 
©å
 = -1;

44 
fg
 = -2;

45 
bg
 = -2;

47 i‡(!
	`°rˇ£cmp
(
vÆue
, "reset")) {

48 
	`°r˝y
(
d°
, "\033[m");

53 *
±r
) {

54 c⁄° *
w‹d
 = 
±r
;

55 
vÆ
, 
Àn
 = 0;

57 
w‹d
[
Àn
] && !
	`is•a˚
(word[len]))

58 
Àn
++;

60 
±r
 = 
w‹d
 + 
Àn
;

61 *
±r
 && 
	`is•a˚
(*ptr))

62 
±r
++;

64 
vÆ
 = 
	`∑r£_cﬁ‹
(
w‹d
, 
Àn
);

65 i‡(
vÆ
 >= -1) {

66 i‡(
fg
 == -2) {

67 
fg
 = 
vÆ
;

70 i‡(
bg
 == -2) {

71 
bg
 = 
vÆ
;

74 
bad
;

76 
vÆ
 = 
	`∑r£_©å
(
w‹d
, 
Àn
);

77 i‡(
vÆ
 < 0 || 
©å
 != -1)

78 
bad
;

79 
©å
 = 
vÆ
;

82 i‡(
©å
 >0 || 
fg
 >0 || 
bg
 >= 0) {

83 
£p
 = 0;

85 *
d°
++ = '\033';

86 *
d°
++ = '[';

87 i‡(
©å
 >= 0) {

88 *
d°
++ = '0' + 
©å
;

89 
£p
++;

91 i‡(
fg
 >= 0) {

92 i‡(
£p
++)

93 *
d°
++ = ';';

94 i‡(
fg
 < 8) {

95 *
d°
++ = '3';

96 *
d°
++ = '0' + 
fg
;

98 
d°
 +
	`•rötf
(d°, "38;5;%d", 
fg
);

101 i‡(
bg
 >= 0) {

102 i‡(
£p
++)

103 *
d°
++ = ';';

104 i‡(
bg
 < 8) {

105 *
d°
++ = '4';

106 *
d°
++ = '0' + 
bg
;

108 
d°
 +
	`•rötf
(d°, "48;5;%d", 
bg
);

111 *
d°
++ = 'm';

113 *
d°
 = 0;

115 
bad
:

116 
	`dõ
("bad c⁄fig vÆuê'%s' f‹ v¨übÀ '%s'", 
vÆue
, 
v¨
);

117 
	}
}

119 
	$gô_c⁄fig_cﬁ‹boﬁ
(c⁄° *
v¨
, c⁄° *
vÆue
)

121 i‡(!
vÆue
)

123 i‡(!
	`°rˇ£cmp
(
vÆue
, "auto")) {

124 i‡(
	`ißây
(1Ë|| (
∑gî_ö_u£
 && 
∑gî_u£_cﬁ‹
)) {

125 *
ãrm
 = 
	`gëív
("TERM");

126 i‡(
ãrm
 && 
	`°rcmp
(term, "dumb"))

131 i‡(!
	`°rˇ£cmp
(
vÆue
, "never"))

133 i‡(!
	`°rˇ£cmp
(
vÆue
, "always"))

135  
	`gô_c⁄fig_boﬁ
(
v¨
, 
vÆue
);

136 
	}
}

138 
	$cﬁ‹_v¥ötf
(c⁄° *
cﬁ‹
, c⁄° *
fmt
,

139 
va_li°
 
¨gs
, c⁄° *
åaû
)

141 
r
 = 0;

143 i‡(*
cﬁ‹
)

144 
r
 +
	`¥ötf
("%s", 
cﬁ‹
);

145 
r
 +
	`v¥ötf
(
fmt
, 
¨gs
);

146 i‡(*
cﬁ‹
)

147 
r
 +
	`¥ötf
("%s", 
COLOR_RESET
);

148 i‡(
åaû
)

149 
r
 +
	`¥ötf
("%s", 
åaû
);

150  
r
;

151 
	}
}

155 
	$cﬁ‹_¥ötf
(c⁄° *
cﬁ‹
, c⁄° *
fmt
, ...)

157 
va_li°
 
¨gs
;

158 
r
;

159 
	`va_°¨t
(
¨gs
, 
fmt
);

160 
r
 = 
	`cﬁ‹_v¥ötf
(
cﬁ‹
, 
fmt
, 
¨gs
, 
NULL
);

161 
	`va_íd
(
¨gs
);

162  
r
;

163 
	}
}

165 
	$cﬁ‹_¥ötf_ 
(c⁄° *
cﬁ‹
, c⁄° *
fmt
, ...)

167 
va_li°
 
¨gs
;

168 
r
;

169 
	`va_°¨t
(
¨gs
, 
fmt
);

170 
r
 = 
	`cﬁ‹_v¥ötf
(
cﬁ‹
, 
fmt
, 
¨gs
, "\n");

171 
	`va_íd
(
¨gs
);

172  
r
;

173 
	}
}

	@color.h

1 #i‚de‡
COLOR_H


2 
	#COLOR_H


	)

5 
	#COLOR_MAXLEN
 24

	)

7 
gô_c⁄fig_cﬁ‹boﬁ
(c⁄° *
v¨
, c⁄° *
vÆue
);

8 
cﬁ‹_∑r£
(c⁄° *
v¨
, c⁄° *
vÆue
, *
d°
);

9 
cﬁ‹_¥ötf
(c⁄° *
cﬁ‹
, c⁄° *
fmt
, ...);

10 
cﬁ‹_¥ötf_ 
(c⁄° *
cﬁ‹
, c⁄° *
fmt
, ...);

	@combine-diff.c

1 
	~"ˇche.h
"

2 
	~"commô.h
"

3 
	~"blob.h
"

4 
	~"diff.h
"

5 
	~"diffc‹e.h
"

6 
	~"quŸe.h
"

7 
	~"xdiff-öãrÁ˚.h
"

8 
	~"log-åì.h
"

10 
comböe_diff_∑th
 *
	$öãr£˘_∑ths
(
comböe_diff_∑th
 *
cuº
, 
n
, 
num_∑ª¡
)

12 
diff_queue_°ru˘
 *
q
 = &
diff_queued_diff
;

13 
comböe_diff_∑th
 *
p
;

14 
i
;

16 i‡(!
n
) {

17 
comböe_diff_∑th
 *
li°
 = 
NULL
, **
èû
 = &list;

18 
i
 = 0; i < 
q
->
ƒ
; i++) {

19 
Àn
;

20 c⁄° *
∑th
;

21 i‡(
	`diff_unmodifõd_∑ú
(
q
->
queue
[
i
]))

23 
∑th
 = 
q
->
queue
[
i
]->
two
->path;

24 
Àn
 = 
	`°æí
(
∑th
);

25 
p
 = 
	`xmÆloc
(
	`comböe_diff_∑th_size
(
num_∑ª¡
, 
Àn
));

26 
p
->
∑th
 = (*Ë&’->
∑ª¡
[
num_∑ª¡
]);

27 
	`mem˝y
(
p
->
∑th
,Ö©h, 
Àn
);

28 
p
->
∑th
[
Àn
] = 0;

29 
p
->
Àn
 =Üen;

30 
p
->
√xt
 = 
NULL
;

31 
	`mem£t
(
p
->
∑ª¡
, 0,

32 (
p
->
∑ª¡
[0]Ë* 
num_∑ª¡
);

34 
	`hash˝y
(
p
->
sha1
, 
q
->
queue
[
i
]->
two
->sha1);

35 
p
->
mode
 = 
q
->
queue
[
i
]->
two
->mode;

36 
	`hash˝y
(
p
->
∑ª¡
[
n
].
sha1
, 
q
->
queue
[
i
]->
⁄e
->sha1);

37 
p
->
∑ª¡
[
n
].
mode
 = 
q
->
queue
[
i
]->
⁄e
->mode;

38 
p
->
∑ª¡
[
n
].
°©us
 = 
q
->
queue
[
i
]->status;

39 *
èû
 = 
p
;

40 
èû
 = &
p
->
√xt
;

42  
li°
;

45 
p
 = 
cuº
;Ö;Ö =Ö->
√xt
) {

46 
found
 = 0;

47 i‡(!
p
->
Àn
)

49 
i
 = 0; i < 
q
->
ƒ
; i++) {

50 c⁄° *
∑th
;

51 
Àn
;

53 i‡(
	`diff_unmodifõd_∑ú
(
q
->
queue
[
i
]))

55 
∑th
 = 
q
->
queue
[
i
]->
two
->path;

56 
Àn
 = 
	`°æí
(
∑th
);

57 i‡(
Àn
 =
p
->À¿&& !
	`memcmp
(
∑th
,Ö->path,Üen)) {

58 
found
 = 1;

59 
	`hash˝y
(
p
->
∑ª¡
[
n
].
sha1
, 
q
->
queue
[
i
]->
⁄e
->sha1);

60 
p
->
∑ª¡
[
n
].
mode
 = 
q
->
queue
[
i
]->
⁄e
->mode;

61 
p
->
∑ª¡
[
n
].
°©us
 = 
q
->
queue
[
i
]->status;

65 i‡(!
found
)

66 
p
->
Àn
 = 0;

68  
cuº
;

69 
	}
}

72 
	sŒöe
 {

73 
Œöe
 *
	m√xt
;

74 
	mÀn
;

75 
	m∑ª¡_m≠
;

76 
	mlöe
[
FLEX_ARRAY
];

80 
	s¶öe
 {

81 
Œöe
 *
	mlo°_hód
, **
	mlo°_èû
;

82 *
	mbﬁ
;

83 
	mÀn
;

88 
	mÊag
;

89 *
	mp_ o
;

92 *
	$gøb_blob
(c⁄° *
sha1
, *
size
)

94 *
blob
;

95 
ty≥
[20];

96 i‡(
	`is_nuŒ_sha1
(
sha1
)) {

98 *
size
 = 0;

99  
	`xˇŒoc
(1, 1);

101 
blob
 = 
	`ªad_sha1_fûe
(
sha1
, 
ty≥
, 
size
);

102 i‡(
	`°rcmp
(
ty≥
, 
blob_ty≥
))

103 
	`dõ
("obje˘ '%s' i†nŸá blob!", 
	`sha1_to_hex
(
sha1
));

104  
blob
;

105 
	}
}

107 
	$≠≥nd_lo°
(
¶öe
 *¶öe, 
n
, c⁄° *
löe
, 
Àn
)

109 
Œöe
 *lline;

110 
this_mask
 = (1UL<<
n
);

111 i‡(
löe
[
Àn
-1] == '\n')

112 
Àn
--;

115 i‡(
¶öe
->
lo°_hód
) {

116 
Œöe
 *
œ°_⁄e
 = 
NULL
;

118 
Œöe
 = 
¶öe
->
lo°_hód
;

119 
Œöe
;

120 
Œöe
 =Ülöe->
√xt
)

121 i‡(
Œöe
->
∑ª¡_m≠
 & 
this_mask
)

122 
œ°_⁄e
 = 
Œöe
;

123 
Œöe
 = 
œ°_⁄e
 ?Üa°_⁄e->
√xt
 : 
¶öe
->
lo°_hód
;

124 
Œöe
) {

125 i‡(
Œöe
->
Àn
 ==Üen &&

126 !
	`memcmp
(
Œöe
->
löe
,Üöe, 
Àn
)) {

127 
Œöe
->
∑ª¡_m≠
 |
this_mask
;

130 
Œöe
 =Ülöe->
√xt
;

134 
Œöe
 = 
	`xmÆloc
((*ŒöeË+ 
Àn
 + 1);

135 
Œöe
->
Àn
 =Üen;

136 
Œöe
->
√xt
 = 
NULL
;

137 
Œöe
->
∑ª¡_m≠
 = 
this_mask
;

138 
	`mem˝y
(
Œöe
->
löe
,Üöe, 
Àn
);

139 
Œöe
->
löe
[
Àn
] = 0;

140 *
¶öe
->
lo°_èû
 = 
Œöe
;

141 
¶öe
->
lo°_èû
 = &
Œöe
->
√xt
;

142 
	}
}

144 
	scomböe_diff_°©e
 {

145 
xdiff_emô_°©e
 
	mxm
;

147 
	m o
;

148 
	mob
, 
	m⁄
, 
	mnb
, 
	m¬
;

149 
	mnmask
;

150 
	mnum_∑ª¡
;

151 
	mn
;

152 
¶öe
 *
	m¶öe
;

153 
¶öe
 *
	mlo°_buckë
;

156 
	$c⁄sume_löe
(*
°©e_
, *
löe
, 
Àn
)

158 
comböe_diff_°©e
 *
°©e
 = 
°©e_
;

159 i‡(5 < 
Àn
 && !
	`memcmp
("@@ -", 
löe
, 4)) {

160 i‡(
	`∑r£_hunk_hódî
(
löe
, 
Àn
,

161 &
°©e
->
ob
, &°©e->
⁄
,

162 &
°©e
->
nb
, &°©e->
¬
))

164 
°©e
->
 o
 = sèã->
nb
;

165 i‡(!
°©e
->
nb
)

169 
°©e
->
nb
 = 1;

170 i‡(
°©e
->
¬
 == 0)

176 
°©e
->
lo°_buckë
 = &°©e->
¶öe
[°©e->
nb
];

178 
°©e
->
lo°_buckë
 = &°©e->
¶öe
[°©e->
nb
-1];

179 i‡(!
°©e
->
¶öe
[°©e->
nb
-1].
p_ o
)

180 
°©e
->
¶öe
[°©e->
nb
-1].
p_ o
 =

181 
	`xˇŒoc
(
°©e
->
num_∑ª¡
,

183 
°©e
->
¶öe
[°©e->
nb
-1].
p_ o
[°©e->
n
] = sèã->
ob
;

186 i‡(!
°©e
->
lo°_buckë
)

188 
löe
[0]) {

190 
	`≠≥nd_lo°
(
°©e
->
lo°_buckë
, sèã->
n
, 
löe
+1, 
Àn
-1);

193 
°©e
->
¶öe
[°©e->
 o
-1].
Êag
 |°©e->
nmask
;

194 
°©e
->
 o
++;

197 
	}
}

199 
	$comböe_diff
(c⁄° *
∑ª¡
, 
mmfûe_t
 *
ªsu…_fûe
,

200 
¶öe
 *¶öe, 
˙t
, 
n
,

201 
num_∑ª¡
)

203 
p_ o
, 
 o
;

204 
nmask
 = (1UL << 
n
);

205 
xµ¨am_t
 
xµ
;

206 
xdemôc⁄f_t
 
xecfg
;

207 
mmfûe_t
 
∑ª¡_fûe
;

208 
xdemôcb_t
 
ecb
;

209 
comböe_diff_°©e
 
°©e
;

210 
sz
;

212 i‡(!
˙t
)

215 
∑ª¡_fûe
.
±r
 = 
	`gøb_blob
(
∑ª¡
, &
sz
);

216 
∑ª¡_fûe
.
size
 = 
sz
;

217 
xµ
.
Êags
 = 
XDF_NEED_MINIMAL
;

218 
xecfg
.
˘xÀn
 = 0;

219 
xecfg
.
Êags
 = 0;

220 
ecb
.
outf
 = 
xdiff_outf
;

221 
ecb
.
¥iv
 = &
°©e
;

222 
	`mem£t
(&
°©e
, 0, (state));

223 
°©e
.
xm
.
c⁄sume
 = 
c⁄sume_löe
;

224 
°©e
.
nmask
 =Çmask;

225 
°©e
.
¶öe
 = sline;

226 
°©e
.
 o
 = 1;

227 
°©e
.
num_∑ª¡
 =Çum_parent;

228 
°©e
.
n
 =Ç;

230 
	`xdl_diff
(&
∑ª¡_fûe
, 
ªsu…_fûe
, &
xµ
, &
xecfg
, &
ecb
);

231 
	`‰ì
(
∑ª¡_fûe
.
±r
);

240 
 o
 = 0, 
p_ o
 = 1;Ünÿ<
˙t
;Üno++) {

241 
Œöe
 *
Œ
;

242 
¶öe
[
 o
].
p_ o
[
n
] =Ö_lno;

245 
Œ
 = 
¶öe
[
 o
].
lo°_hód
;

246 
Œ
) {

247 i‡(
Œ
->
∑ª¡_m≠
 & 
nmask
)

248 
p_ o
++;

249 
Œ
 =Ül->
√xt
;

251 i‡(
 o
 < 
˙t
 && !(
¶öe
[ o].
Êag
 & 
nmask
))

252 
p_ o
++;

254 
¶öe
[
 o
].
p_ o
[
n
] =Ö_lno;

255 
	}
}

257 
	gc⁄ãxt
 = 3;

258 
	gcomböe_m¨kî
 = '@';

260 
	$öãª°ög
(
¶öe
 *¶öe, 
Æl_mask
)

265  ((
¶öe
->
Êag
 & 
Æl_mask
Ë|| slöe->
lo°_hód
);

266 
	}
}

268 
	$adju°_hunk_èû
(
¶öe
 *sline,

269 
Æl_mask
,

270 
hunk_begö
,

271 
i
)

280 i‡((
hunk_begö
 + 1 <
i
Ë&& !(
¶öe
[i-1].
Êag
 & 
Æl_mask
))

281 
i
--;

282  
i
;

283 
	}
}

285 
	$föd_√xt
(
¶öe
 *sline,

286 
m¨k
,

287 
i
,

288 
˙t
,

289 
look_f‹_unöãª°ög
)

298 
i
 <
˙t
)

299 i‡(
look_f‹_unöãª°ög


300 ? !(
¶öe
[
i
].
Êag
 & 
m¨k
)

301 : (
¶öe
[
i
].
Êag
 & 
m¨k
))

302  
i
;

304 
i
++;

305  
i
;

306 
	}
}

308 
	$give_c⁄ãxt
(
¶öe
 *¶öe, 
˙t
, 
num_∑ª¡
)

310 
Æl_mask
 = (1UL<<
num_∑ª¡
) - 1;

311 
m¨k
 = (1UL<<
num_∑ª¡
);

312 
i
;

323 
i
 = 
	`föd_√xt
(
¶öe
, 
m¨k
, 0, 
˙t
, 0);

324 i‡(
˙t
 < 
i
)

327 
i
 <
˙t
) {

328 
j
 = (
c⁄ãxt
 < 
i
) ? (i - context) : 0;

329 
k
;

332 
j
 < 
i
)

333 
¶öe
[
j
++].
Êag
 |
m¨k
;

335 
agaö
:

339 
j
 = 
	`föd_√xt
(
¶öe
, 
m¨k
, 
i
, 
˙t
, 1);

340 i‡(
˙t
 < 
j
)

344 
k
 = 
	`föd_√xt
(
¶öe
, 
m¨k
, 
j
, 
˙t
, 0);

345 
j
 = 
	`adju°_hunk_èû
(
¶öe
, 
Æl_mask
, 
i
, j);

347 i‡(
k
 < 
j
 + 
c⁄ãxt
) {

351 
j
 < 
k
)

352 
¶öe
[
j
++].
Êag
 |
m¨k
;

353 
i
 = 
k
;

354 
agaö
;

361 
i
 = 
k
;

362 
k
 = (
j
 + 
c⁄ãxt
 < 
˙t
+1) ? j + context : cnt+1;

363 
j
 < 
k
)

364 
¶öe
[
j
++].
Êag
 |
m¨k
;

367 
	}
}

369 
	$make_hunks
(
¶öe
 *¶öe, 
˙t
,

370 
num_∑ª¡
, 
dí£
)

372 
Æl_mask
 = (1UL<<
num_∑ª¡
) - 1;

373 
m¨k
 = (1UL<<
num_∑ª¡
);

374 
i
;

375 
has_öãª°ög
 = 0;

377 
i
 = 0; i <
˙t
; i++) {

378 i‡(
	`öãª°ög
(&
¶öe
[
i
], 
Æl_mask
))

379 
¶öe
[
i
].
Êag
 |
m¨k
;

381 
¶öe
[
i
].
Êag
 &~
m¨k
;

383 i‡(!
dí£
)

384  
	`give_c⁄ãxt
(
¶öe
, 
˙t
, 
num_∑ª¡
);

390 
i
 = 0;

391 
i
 <
˙t
) {

392 
j
, 
hunk_begö
, 
hunk_íd
;

393 
ßme_diff
;

394 
i
 <
˙t
 && !(
¶öe
[i].
Êag
 & 
m¨k
))

395 
i
++;

396 i‡(
˙t
 < 
i
)

398 
hunk_begö
 = 
i
;

399 
j
 = 
i
 + 1; j <
˙t
; j++) {

400 i‡(!(
¶öe
[
j
].
Êag
 & 
m¨k
)) {

405 
œ
;

406 
c⁄tö
 = 0;

407 
œ
 = 
	`adju°_hunk_èû
(
¶öe
, 
Æl_mask
,

408 
hunk_begö
, 
j
);

409 
œ
 = (œ + 
c⁄ãxt
 < 
˙t
 + 1) ?

410 (
œ
 + 
c⁄ãxt
Ë: 
˙t
 + 1;

411 
j
 <--
œ
) {

412 i‡(
¶öe
[
œ
].
Êag
 & 
m¨k
) {

413 
c⁄tö
 = 1;

417 i‡(!
c⁄tö
)

419 
j
 = 
œ
;

422 
hunk_íd
 = 
j
;

443 
ßme_diff
 = 0;

444 
has_öãª°ög
 = 0;

445 
j
 = 
i
; j < 
hunk_íd
 && !
has_öãª°ög
; j++) {

446 
this_diff
 = 
¶öe
[
j
].
Êag
 & 
Æl_mask
;

447 
Œöe
 *
Œ
 = 
¶öe
[
j
].
lo°_hód
;

448 i‡(
this_diff
) {

452 i‡(!
ßme_diff
)

453 
ßme_diff
 = 
this_diff
;

454 i‡(
ßme_diff
 !
this_diff
) {

455 
has_öãª°ög
 = 1;

459 
Œ
 && !
has_öãª°ög
) {

463 
this_diff
 = 
Œ
->
∑ª¡_m≠
;

464 i‡(!
ßme_diff
)

465 
ßme_diff
 = 
this_diff
;

466 i‡(
ßme_diff
 !
this_diff
) {

467 
has_öãª°ög
 = 1;

469 
Œ
 =Ül->
√xt
;

473 i‡(!
has_öãª°ög
 && 
ßme_diff
 !
Æl_mask
) {

475 
j
 = 
hunk_begö
; j < 
hunk_íd
; j++)

476 
¶öe
[
j
].
Êag
 &~
m¨k
;

478 
i
 = 
hunk_íd
;

481 
has_öãª°ög
 = 
	`give_c⁄ãxt
(
¶öe
, 
˙t
, 
num_∑ª¡
);

482  
has_öãª°ög
;

483 
	}
}

485 
	$show_∑ª¡_ o
(
¶öe
 *¶öe, 
l0
, 
l1
, 
n
, 
nuŒ_c⁄ãxt
)

487 
l0
 = 
¶öe
[l0].
p_ o
[
n
];

488 
l1
 = 
¶öe
[l1].
p_ o
[
n
];

489 
	`¥ötf
(" -%lu,%lu", 
l0
, 
l1
-l0-
nuŒ_c⁄ãxt
);

490 
	}
}

492 
	$hunk_commít_löe
(c⁄° *
bﬁ
)

494 
ch
;

496 i‡(!
bﬁ
)

498 
ch
 = *
bﬁ
 & 0xff;

499  (
	`ißÕha
(
ch
) || ch == '_' || ch == '$');

500 
	}
}

502 
	$dump_¶öe
(
¶öe
 *¶öe, 
˙t
, 
num_∑ª¡
,

503 
u£_cﬁ‹
)

505 
m¨k
 = (1UL<<
num_∑ª¡
);

506 
i
;

507 
 o
 = 0;

508 c⁄° *
c_‰ag
 = 
	`diff_gë_cﬁ‹
(
u£_cﬁ‹
, 
DIFF_FRAGINFO
);

509 c⁄° *
c_√w
 = 
	`diff_gë_cﬁ‹
(
u£_cﬁ‹
, 
DIFF_FILE_NEW
);

510 c⁄° *
c_ﬁd
 = 
	`diff_gë_cﬁ‹
(
u£_cﬁ‹
, 
DIFF_FILE_OLD
);

511 c⁄° *
c_∂aö
 = 
	`diff_gë_cﬁ‹
(
u£_cﬁ‹
, 
DIFF_PLAIN
);

512 c⁄° *
c_ª£t
 = 
	`diff_gë_cﬁ‹
(
u£_cﬁ‹
, 
DIFF_RESET
);

514 i‡(!
˙t
)

518 
¶öe
 *
¶
 = &¶öe[
 o
];

519 
hunk_íd
;

520 
æöes
;

521 c⁄° *
hunk_commít
 = 
NULL
;

522 
nuŒ_c⁄ãxt
 = 0;

524 
 o
 <
˙t
 && !(
¶öe
[ o].
Êag
 & 
m¨k
)) {

525 i‡(
	`hunk_commít_löe
(
¶öe
[
 o
].
bﬁ
))

526 
hunk_commít
 = 
¶öe
[
 o
].
bﬁ
;

527 
 o
++;

529 i‡(
˙t
 < 
 o
)

532 
hunk_íd
 = 
 o
 + 1; hunk_íd <
˙t
; hunk_end++)

533 i‡(!(
¶öe
[
hunk_íd
].
Êag
 & 
m¨k
))

536 
æöes
 = 
hunk_íd
 - 
 o
;

537 i‡(
˙t
 < 
hunk_íd
)

538 
æöes
--;

540 i‡(!
c⁄ãxt
) {

550 
j
;

551 
j
 = 
 o
; j < 
hunk_íd
; j++)

552 i‡(!(
¶öe
[
j
].
Êag
 & (
m¨k
-1)))

553 
nuŒ_c⁄ãxt
++;

554 
æöes
 -
nuŒ_c⁄ãxt
;

557 
	`Âuts
(
c_‰ag
, 
°dout
);

558 
i
 = 0; i <
num_∑ª¡
; i++Ë
	`putch¨
(
comböe_m¨kî
);

559 
i
 = 0; i < 
num_∑ª¡
; i++)

560 
	`show_∑ª¡_ o
(
¶öe
, 
 o
, 
hunk_íd
, 
i
, 
nuŒ_c⁄ãxt
);

561 
	`¥ötf
(" +%lu,%lu ", 
 o
+1, 
æöes
);

562 
i
 = 0; i <
num_∑ª¡
; i++Ë
	`putch¨
(
comböe_m¨kî
);

564 i‡(
hunk_commít
) {

565 
commít_íd
 = 0;

566 
i
 = 0; i < 40; i++) {

567 
ch
 = 
hunk_commít
[
i
] & 0xff;

568 i‡(!
ch
 || ch == '\n')

570 i‡(!
	`is•a˚
(
ch
))

571 
commít_íd
 = 
i
;

573 i‡(
commít_íd
)

574 
	`putch¨
(' ');

575 
i
 = 0; i < 
commít_íd
; i++)

576 
	`putch¨
(
hunk_commít
[
i
]);

579 
	`¥ötf
("%s\n", 
c_ª£t
);

580 
 o
 < 
hunk_íd
) {

581 
Œöe
 *
Œ
;

582 
j
;

583 
p_mask
;

584 
¶
 = &
¶öe
[
 o
++];

585 
Œ
 = 
¶
->
lo°_hód
;

586 
Œ
) {

587 
	`Âuts
(
c_ﬁd
, 
°dout
);

588 
j
 = 0; j < 
num_∑ª¡
; j++) {

589 i‡(
Œ
->
∑ª¡_m≠
 & (1UL<<
j
))

590 
	`putch¨
('-');

592 
	`putch¨
(' ');

594 
	`¥ötf
("%s%s\n", 
Œ
->
löe
, 
c_ª£t
);

595 
Œ
 =Ül->
√xt
;

597 i‡(
˙t
 < 
 o
)

599 
p_mask
 = 1;

600 i‡(!(
¶
->
Êag
 & (
m¨k
-1))) {

605 i‡(!
c⁄ãxt
)

607 
	`Âuts
(
c_∂aö
, 
°dout
);

610 
	`Âuts
(
c_√w
, 
°dout
);

611 
j
 = 0; j < 
num_∑ª¡
; j++) {

612 i‡(
p_mask
 & 
¶
->
Êag
)

613 
	`putch¨
('+');

615 
	`putch¨
(' ');

616 
p_mask
 <<= 1;

618 
	`¥ötf
("%.*s%s\n", 
¶
->
Àn
, sl->
bﬁ
, 
c_ª£t
);

621 
	}
}

623 
	$ªu£_comböe_diff
(
¶öe
 *¶öe, 
˙t
,

624 
i
, 
j
)

630 
 o
, 
imask
, 
jmask
;

631 
imask
 = (1UL<<
i
);

632 
jmask
 = (1UL<<
j
);

634 
 o
 = 0;Ünÿ<
˙t
;Üno++) {

635 
Œöe
 *
Œ
 = 
¶öe
->
lo°_hód
;

636 
¶öe
->
p_ o
[
i
] = slöe->p_ o[
j
];

637 
Œ
) {

638 i‡(
Œ
->
∑ª¡_m≠
 & 
jmask
)

639 
Œ
->
∑ª¡_m≠
 |
imask
;

640 
Œ
 =Ül->
√xt
;

642 i‡(
¶öe
->
Êag
 & 
jmask
)

643 
¶öe
->
Êag
 |
imask
;

644 
¶öe
++;

647 
¶öe
->
p_ o
[
i
] = slöe->p_ o[
j
];

648 
	}
}

650 
	$dump_quŸed_∑th
(c⁄° *
¥efix
, c⁄° *
∑th
,

651 c⁄° *
c_mëa
, c⁄° *
c_ª£t
)

653 
	`¥ötf
("%s%s", 
c_mëa
, 
¥efix
);

654 i‡(
	`quŸe_c_°yÀ
(
∑th
, 
NULL
, NULL, 0))

655 
	`quŸe_c_°yÀ
(
∑th
, 
NULL
, 
°dout
, 0);

657 
	`¥ötf
("%s", 
∑th
);

658 
	`¥ötf
("%s\n", 
c_ª£t
);

659 
	}
}

661 
	$show_∑tch_diff
(
comböe_diff_∑th
 *
ñem
, 
num_∑ª¡
,

662 
dí£
, 
ªv_öfo
 *
ªv
)

664 
diff_›ti⁄s
 *
›t
 = &
ªv
->
diff›t
;

665 
ªsu…_size
, 
˙t
, 
 o
;

666 *
ªsu…
, *
˝
;

667 
¶öe
 *sline;

668 
mode_dif„rs
 = 0;

669 
i
, 
show_hunks
;

670 
w‹kög_åì_fûe
 = 
	`is_nuŒ_sha1
(
ñem
->
sha1
);

671 
abbªv
 = 
›t
->
fuŒ_ödex
 ? 40 : 
DEFAULT_ABBREV
;

672 
mmfûe_t
 
ªsu…_fûe
;

674 
c⁄ãxt
 = 
›t
->context;

676 i‡(!
w‹kög_åì_fûe
)

677 
ªsu…
 = 
	`gøb_blob
(
ñem
->
sha1
, &
ªsu…_size
);

680 
°©
 
°
;

681 
fd
;

682 i‡(0 <(
fd
 = 
	`›í
(
ñem
->
∑th
, 
O_RDONLY
)) &&

683 !
	`f°©
(
fd
, &
°
)) {

684 
Àn
 = 
°
.
°_size
;

685 
sz
 = 0;

687 
ñem
->
mode
 = 
	`ˇn⁄_mode
(
°
.
°_mode
);

688 
ªsu…_size
 = 
Àn
;

689 
ªsu…
 = 
	`xmÆloc
(
Àn
 + 1);

690 
sz
 < 
Àn
) {

691 
d⁄e
 = 
	`xªad
(
fd
, 
ªsu…
+
sz
, 
Àn
-sz);

692 i‡(
d⁄e
 == 0)

694 i‡(
d⁄e
 < 0)

695 
	`dõ
("ªadÉº‹ '%s'", 
ñem
->
∑th
);

696 
sz
 +
d⁄e
;

698 
ªsu…
[
Àn
] = 0;

702 
ªsu…_size
 = 0;

703 
ñem
->
mode
 = 0;

704 
ªsu…
 = 
	`xˇŒoc
(1, 1);

706 i‡(0 <
fd
)

707 
	`˛o£
(
fd
);

710 
˙t
 = 0, 
˝
 = 
ªsu…
; c∞<Ñesu… + 
ªsu…_size
; cp++) {

711 i‡(*
˝
 == '\n')

712 
˙t
++;

714 i‡(
ªsu…_size
 && 
ªsu…
[result_size-1] != '\n')

715 
˙t
++;

717 
¶öe
 = 
	`xˇŒoc
(
˙t
+2, (*sline));

718 
¶öe
[0].
bﬁ
 = 
ªsu…
;

719 
 o
 = 0;Ünÿ<
˙t
 + 1;Üno++) {

720 
¶öe
[
 o
].
lo°_èû
 = &¶öe[ o].
lo°_hód
;

721 
¶öe
[
 o
].
Êag
 = 0;

723 
 o
 = 0, 
˝
 = 
ªsu…
; c∞<Ñesu… + 
ªsu…_size
; cp++) {

724 i‡(*
˝
 == '\n') {

725 
¶öe
[
 o
].
Àn
 = 
˝
 - slöe[ o].
bﬁ
;

726 
 o
++;

727 i‡(
 o
 < 
˙t
)

728 
¶öe
[
 o
].
bﬁ
 = 
˝
 + 1;

731 i‡(
ªsu…_size
 && 
ªsu…
[result_size-1] != '\n')

732 
¶öe
[
˙t
-1].
Àn
 = 
ªsu…_size
 - (¶öe[˙t-1].
bﬁ
 - 
ªsu…
);

734 
ªsu…_fûe
.
±r
 = 
ªsu…
;

735 
ªsu…_fûe
.
size
 = 
ªsu…_size
;

740 
¶öe
[0].
p_ o
 = 
	`xˇŒoc
((
˙t
+2Ë* 
num_∑ª¡
, ());

741 
 o
 = 0;Ünÿ<
˙t
;Üno++)

742 
¶öe
[
 o
+1].
p_ o
 = slöe[ o].p_ ÿ+ 
num_∑ª¡
;

744 
i
 = 0; i < 
num_∑ª¡
; i++) {

745 
j
;

746 
j
 = 0; j < 
i
; j++) {

747 i‡(!
	`hashcmp
(
ñem
->
∑ª¡
[
i
].
sha1
,

748 
ñem
->
∑ª¡
[
j
].
sha1
)) {

749 
	`ªu£_comböe_diff
(
¶öe
, 
˙t
, 
i
, 
j
);

753 i‡(
i
 <
j
)

754 
	`comböe_diff
(
ñem
->
∑ª¡
[
i
].
sha1
, &
ªsu…_fûe
, 
¶öe
,

755 
˙t
, 
i
, 
num_∑ª¡
);

756 i‡(
ñem
->
∑ª¡
[
i
].
mode
 !=Élem->mode)

757 
mode_dif„rs
 = 1;

760 
show_hunks
 = 
	`make_hunks
(
¶öe
, 
˙t
, 
num_∑ª¡
, 
dí£
);

762 i‡(
show_hunks
 || 
mode_dif„rs
 || 
w‹kög_åì_fûe
) {

763 c⁄° *
abb
;

764 
u£_cﬁ‹
 = 
›t
->
cﬁ‹_diff
;

765 c⁄° *
c_mëa
 = 
	`diff_gë_cﬁ‹
(
u£_cﬁ‹
, 
DIFF_METAINFO
);

766 c⁄° *
c_ª£t
 = 
	`diff_gë_cﬁ‹
(
u£_cﬁ‹
, 
DIFF_RESET
);

767 
added
 = 0;

768 
dñëed
 = 0;

770 i‡(
ªv
->
logöfo
 && !ªv->
no_commô_id
)

771 
	`show_log
(
ªv
, 
›t
->
msg_£p
);

772 
	`dump_quŸed_∑th
(
dí£
 ? "diff --cc " : "diff --combined ",

773 
ñem
->
∑th
, 
c_mëa
, 
c_ª£t
);

774 
	`¥ötf
("%södex ", 
c_mëa
);

775 
i
 = 0; i < 
num_∑ª¡
; i++) {

776 
abb
 = 
	`föd_unique_abbªv
(
ñem
->
∑ª¡
[
i
].
sha1
,

777 
abbªv
);

778 
	`¥ötf
("%s%s", 
i
 ? "," : "", 
abb
);

780 
abb
 = 
	`föd_unique_abbªv
(
ñem
->
sha1
, 
abbªv
);

781 
	`¥ötf
("..%s%s\n", 
abb
, 
c_ª£t
);

783 i‡(
mode_dif„rs
) {

784 
dñëed
 = !
ñem
->
mode
;

787 
added
 = !
dñëed
;

788 
i
 = 0; 
added
 && i < 
num_∑ª¡
; i++)

789 i‡(
ñem
->
∑ª¡
[
i
].
°©us
 !=

790 
DIFF_STATUS_ADDED
)

791 
added
 = 0;

792 i‡(
added
)

793 
	`¥ötf
("%snew file mode %06o",

794 
c_mëa
, 
ñem
->
mode
);

796 i‡(
dñëed
)

797 
	`¥ötf
("%sdñëed fûê", 
c_mëa
);

798 
	`¥ötf
("mode ");

799 
i
 = 0; i < 
num_∑ª¡
; i++) {

800 
	`¥ötf
("%s%06o", 
i
 ? "," : "",

801 
ñem
->
∑ª¡
[
i
].
mode
);

803 i‡(
ñem
->
mode
)

804 
	`¥ötf
("..%06o", 
ñem
->
mode
);

806 
	`¥ötf
("%s\n", 
c_ª£t
);

808 i‡(
added
)

809 
	`dump_quŸed_∑th
("--- /dev/", "nuŒ", 
c_mëa
, 
c_ª£t
);

811 
	`dump_quŸed_∑th
("---á/", 
ñem
->
∑th
, 
c_mëa
, 
c_ª£t
);

812 i‡(
dñëed
)

813 
	`dump_quŸed_∑th
("+++ /dev/", "nuŒ", 
c_mëa
, 
c_ª£t
);

815 
	`dump_quŸed_∑th
("+++ b/", 
ñem
->
∑th
, 
c_mëa
, 
c_ª£t
);

816 
	`dump_¶öe
(
¶öe
, 
˙t
, 
num_∑ª¡
, 
›t
->
cﬁ‹_diff
);

818 
	`‰ì
(
ªsu…
);

820 
 o
 = 0;Ünÿ< 
˙t
;Üno++) {

821 i‡(
¶öe
[
 o
].
lo°_hód
) {

822 
Œöe
 *
Œ
 = 
¶öe
[
 o
].
lo°_hód
;

823 
Œ
) {

824 
Œöe
 *
tmp
 = 
Œ
;

825 
Œ
 =Ül->
√xt
;

826 
	`‰ì
(
tmp
);

830 
	`‰ì
(
¶öe
[0].
p_ o
);

831 
	`‰ì
(
¶öe
);

832 
	}
}

834 
	#COLONS
 "::::::::::::::::::::::::::::::::"

	)

836 
	$show_øw_diff
(
comböe_diff_∑th
 *
p
, 
num_∑ª¡
, 
ªv_öfo
 *
ªv
)

838 
diff_›ti⁄s
 *
›t
 = &
ªv
->
diff›t
;

839 
i
, 
off£t
;

840 c⁄° *
¥efix
;

841 
löe_ãrmö©i⁄
, 
öãr_«me_ãrmö©i⁄
;

843 
löe_ãrmö©i⁄
 = 
›t
->line_termination;

844 
öãr_«me_ãrmö©i⁄
 = '\t';

845 i‡(!
löe_ãrmö©i⁄
)

846 
öãr_«me_ãrmö©i⁄
 = 0;

848 i‡(
ªv
->
logöfo
 && !ªv->
no_commô_id
)

849 
	`show_log
(
ªv
, 
›t
->
msg_£p
);

851 i‡(
›t
->
ouçut_f‹m©
 & 
DIFF_FORMAT_RAW
) {

852 
off£t
 = 
	`°æí
(
COLONS
Ë- 
num_∑ª¡
;

853 i‡(
off£t
 < 0)

854 
off£t
 = 0;

855 
¥efix
 = 
COLONS
 + 
off£t
;

858 
i
 = 0; i < 
num_∑ª¡
; i++) {

859 
	`¥ötf
("%s%06o", 
¥efix
, 
p
->
∑ª¡
[
i
].
mode
);

860 
¥efix
 = " ";

862 
	`¥ötf
("%s%06o", 
¥efix
, 
p
->
mode
);

865 
i
 = 0; i < 
num_∑ª¡
; i++)

866 
	`¥ötf
(" %s", 
	`diff_unique_abbªv
(
p
->
∑ª¡
[
i
].
sha1
,

867 
›t
->
abbªv
));

868 
	`¥ötf
(" %†", 
	`diff_unique_abbªv
(
p
->
sha1
, 
›t
->
abbªv
));

871 i‡(
›t
->
ouçut_f‹m©
 & (
DIFF_FORMAT_RAW
 | 
DIFF_FORMAT_NAME_STATUS
)) {

872 
i
 = 0; i < 
num_∑ª¡
; i++)

873 
	`putch¨
(
p
->
∑ª¡
[
i
].
°©us
);

874 
	`putch¨
(
öãr_«me_ãrmö©i⁄
);

877 i‡(
löe_ãrmö©i⁄
) {

878 i‡(
	`quŸe_c_°yÀ
(
p
->
∑th
, 
NULL
, NULL, 0))

879 
	`quŸe_c_°yÀ
(
p
->
∑th
, 
NULL
, 
°dout
, 0);

881 
	`¥ötf
("%s", 
p
->
∑th
);

882 
	`putch¨
(
löe_ãrmö©i⁄
);

885 
	`¥ötf
("%s%c", 
p
->
∑th
, 
löe_ãrmö©i⁄
);

887 
	}
}

889 
	$show_comböed_diff
(
comböe_diff_∑th
 *
p
,

890 
num_∑ª¡
,

891 
dí£
,

892 
ªv_öfo
 *
ªv
)

894 
diff_›ti⁄s
 *
›t
 = &
ªv
->
diff›t
;

895 i‡(!
p
->
Àn
)

897 i‡(
›t
->
ouçut_f‹m©
 & (
DIFF_FORMAT_RAW
 |

898 
DIFF_FORMAT_NAME
 |

899 
DIFF_FORMAT_NAME_STATUS
))

900 
	`show_øw_diff
(
p
, 
num_∑ª¡
, 
ªv
);

901 i‡(
›t
->
ouçut_f‹m©
 & 
DIFF_FORMAT_PATCH
)

902 
	`show_∑tch_diff
(
p
, 
num_∑ª¡
, 
dí£
, 
ªv
);

903 
	}
}

905 
	$diff_åì_comböed
(c⁄° *
sha1
,

906 c⁄° 
∑ª¡
[][20],

907 
num_∑ª¡
,

908 
dí£
,

909 
ªv_öfo
 *
ªv
)

911 
diff_›ti⁄s
 *
›t
 = &
ªv
->
diff›t
;

912 
diff_›ti⁄s
 
diff›ts
;

913 
comböe_diff_∑th
 *
p
, *
∑ths
 = 
NULL
;

914 
i
, 
num_∑ths
, 
√ed£p
, 
show_log_fú°
;

916 
diff›ts
 = *
›t
;

917 
diff›ts
.
ouçut_f‹m©
 = 
DIFF_FORMAT_NO_OUTPUT
;

918 
diff›ts
.
ªcursive
 = 1;

920 
show_log_fú°
 = !!
ªv
->
logöfo
 && !ªv->
no_commô_id
;

921 
√ed£p
 = 0;

923 
i
 = 0; i < 
num_∑ª¡
; i++) {

927 
°©_›t
 = (
›t
->
ouçut_f‹m©
 &

928 (
DIFF_FORMAT_NUMSTAT
|
DIFF_FORMAT_DIFFSTAT
));

929 i‡(
i
 =0 && 
°©_›t
)

930 
diff›ts
.
ouçut_f‹m©
 = 
°©_›t
;

932 
diff›ts
.
ouçut_f‹m©
 = 
DIFF_FORMAT_NO_OUTPUT
;

933 
	`diff_åì_sha1
(
∑ª¡
[
i
], 
sha1
, "", &
diff›ts
);

934 
	`diffc‹e_°d
(&
diff›ts
);

935 
∑ths
 = 
	`öãr£˘_∑ths
’©hs, 
i
, 
num_∑ª¡
);

937 i‡(
show_log_fú°
 && 
i
 == 0) {

938 
	`show_log
(
ªv
, 
›t
->
msg_£p
);

939 i‡(
ªv
->
vîbo£_hódî
 && 
›t
->
ouçut_f‹m©
)

940 
	`putch¨
(
›t
->
löe_ãrmö©i⁄
);

942 
	`diff_Êush
(&
diff›ts
);

946 
num_∑ths
 = 0, 
p
 = 
∑ths
;Ö;Ö =Ö->
√xt
) {

947 i‡(
p
->
Àn
)

948 
num_∑ths
++;

950 i‡(
num_∑ths
) {

951 i‡(
›t
->
ouçut_f‹m©
 & (
DIFF_FORMAT_RAW
 |

952 
DIFF_FORMAT_NAME
 |

953 
DIFF_FORMAT_NAME_STATUS
)) {

954 
p
 = 
∑ths
;Ö;Ö =Ö->
√xt
) {

955 i‡(
p
->
Àn
)

956 
	`show_øw_diff
(
p
, 
num_∑ª¡
, 
ªv
);

958 
√ed£p
 = 1;

960 i‡(
›t
->
ouçut_f‹m©
 &

961 (
DIFF_FORMAT_NUMSTAT
|
DIFF_FORMAT_DIFFSTAT
))

962 
√ed£p
 = 1;

963 i‡(
›t
->
ouçut_f‹m©
 & 
DIFF_FORMAT_PATCH
) {

964 i‡(
√ed£p
)

965 
	`putch¨
(
›t
->
löe_ãrmö©i⁄
);

966 
p
 = 
∑ths
;Ö;Ö =Ö->
√xt
) {

967 i‡(
p
->
Àn
)

968 
	`show_∑tch_diff
(
p
, 
num_∑ª¡
, 
dí£
,

969 
ªv
);

975 
∑ths
) {

976 
comböe_diff_∑th
 *
tmp
 = 
∑ths
;

977 
∑ths
 =Ö©hs->
√xt
;

978 
	`‰ì
(
tmp
);

980 
	}
}

982 
	$diff_åì_comböed_mîge
(c⁄° *
sha1
,

983 
dí£
, 
ªv_öfo
 *
ªv
)

985 
num_∑ª¡
;

986 c⁄° (*
∑ª¡
)[20];

987 
commô
 *commô = 
	`lookup_commô
(
sha1
);

988 
commô_li°
 *
∑ª¡s
;

991 
∑ª¡s
 = 
commô
->∑ª¡s, 
num_∑ª¡
 = 0;

992 
∑ª¡s
;

993 
∑ª¡s
 =Ö¨íts->
√xt
, 
num_∑ª¡
++)

996 
∑ª¡
 = 
	`xmÆloc
(
num_∑ª¡
 * (*parent));

997 
∑ª¡s
 = 
commô
->∑ª¡s, 
num_∑ª¡
 = 0;

998 
∑ª¡s
;

999 
∑ª¡s
 =Ö¨íts->
√xt
, 
num_∑ª¡
++)

1000 
	`hash˝y
((*)(
∑ª¡
 + 
num_∑ª¡
),

1001 
∑ª¡s
->
ôem
->
obje˘
.
sha1
);

1002 
	`diff_åì_comböed
(
sha1
, 
∑ª¡
, 
num_∑ª¡
, 
dí£
, 
ªv
);

1003 
	}
}

	@commit.c

1 
	~"ˇche.h
"

2 
	~"èg.h
"

3 
	~"commô.h
"

4 
	~"pkt-löe.h
"

5 
	~"utf8.h
"

7 
	gßve_commô_buf„r
 = 1;

9 
	ss‹t_node


15 
	mödegªe
;

21 
commô_li°
 * 
	mli°_ôem
;

25 c⁄° *
	gcommô_ty≥
 = "commit";

27 
	scmt_fmt_m≠
 {

28 c⁄° *
	mn
;

29 
size_t
 
	mcmp_Àn
;

30 
cmô_fmt
 
	mv
;

31 } 
	gcmt_fmts
[] = {

32 { "øw", 1, 
CMIT_FMT_RAW
 },

33 { "medium", 1, 
CMIT_FMT_MEDIUM
 },

34 { "sh‹t", 1, 
CMIT_FMT_SHORT
 },

35 { "emaû", 1, 
CMIT_FMT_EMAIL
 },

36 { "fuŒ", 5, 
CMIT_FMT_FULL
 },

37 { "fuŒî", 5, 
CMIT_FMT_FULLER
 },

38 { "⁄ñöe", 1, 
CMIT_FMT_ONELINE
 },

41 
cmô_fmt
 
	$gë_commô_f‹m©
(c⁄° *
¨g
)

43 
i
;

45 i‡(!
¨g
 || !*arg)

46  
CMIT_FMT_DEFAULT
;

47 i‡(*
¨g
 == '=')

48 
¨g
++;

49 
i
 = 0; i < 
	`ARRAY_SIZE
(
cmt_fmts
); i++) {

50 i‡(!
	`°∫cmp
(
¨g
, 
cmt_fmts
[
i
].
n
, cmt_fmts[i].
cmp_Àn
) &&

51 !
	`°∫cmp
(
¨g
, 
cmt_fmts
[
i
].
n
, 
	`°æí
(arg)))

52  
cmt_fmts
[
i
].
v
;

55 
	`dõ
("övÆid --¥ëty f‹m©: %s", 
¨g
);

56 
	}
}

58 
commô
 *
	$check_commô
(
obje˘
 *
obj
,

59 c⁄° *
sha1
,

60 
quõt
)

62 i‡(
obj
->
ty≥
 !
OBJ_COMMIT
) {

63 i‡(!
quõt
)

64 
	`îr‹
("Object %s isá %s,Çotá commit",

65 
	`sha1_to_hex
(
sha1
), 
	`ty≥«me
(
obj
->
ty≥
));

66  
NULL
;

68  (
commô
 *Ë
obj
;

69 
	}
}

71 
commô
 *
	$lookup_commô_ª„ªn˚_gíéy
(c⁄° *
sha1
,

72 
quõt
)

74 
obje˘
 *
obj
 = 
	`dîef_èg
(
	`∑r£_obje˘
(
sha1
), 
NULL
, 0);

76 i‡(!
obj
)

77  
NULL
;

78  
	`check_commô
(
obj
, 
sha1
, 
quõt
);

79 
	}
}

81 
commô
 *
	$lookup_commô_ª„ªn˚
(c⁄° *
sha1
)

83  
	`lookup_commô_ª„ªn˚_gíéy
(
sha1
, 0);

84 
	}
}

86 
commô
 *
	$lookup_commô
(c⁄° *
sha1
)

88 
obje˘
 *
obj
 = 
	`lookup_obje˘
(
sha1
);

89 i‡(!
obj
) {

90 
commô
 *
ªt
 = 
	`Æloc_commô_node
();

91 
	`¸óãd_obje˘
(
sha1
, &
ªt
->
obje˘
);

92 
ªt
->
obje˘
.
ty≥
 = 
OBJ_COMMIT
;

93  
ªt
;

95 i‡(!
obj
->
ty≥
)

96 
obj
->
ty≥
 = 
OBJ_COMMIT
;

97  
	`check_commô
(
obj
, 
sha1
, 0);

98 
	}
}

100 
	$∑r£_commô_d©e
(c⁄° *
buf
)

102 
d©e
;

104 i‡(
	`memcmp
(
buf
, "author", 6))

106 *
buf
++ != '\n')

108 i‡(
	`memcmp
(
buf
, "committer", 9))

110 *
buf
++ != '>')

112 
d©e
 = 
	`°πoul
(
buf
, 
NULL
, 10);

113 i‡(
d©e
 =
ULONG_MAX
)

114 
d©e
 = 0;

115  
d©e
;

116 
	}
}

118 
commô_gø·
 **
	gcommô_gø·
;

119 
	gcommô_gø·_Æloc
, 
	gcommô_gø·_ƒ
;

121 
	$commô_gø·_pos
(c⁄° *
sha1
)

123 
lo
, 
hi
;

124 
lo
 = 0;

125 
hi
 = 
commô_gø·_ƒ
;

126 
lo
 < 
hi
) {

127 
mi
 = (
lo
 + 
hi
) / 2;

128 
commô_gø·
 *
gø·
 = commô_gø·[
mi
];

129 
cmp
 = 
	`hashcmp
(
sha1
, 
gø·
->sha1);

130 i‡(!
cmp
)

131  
mi
;

132 i‡(
cmp
 < 0)

133 
hi
 = 
mi
;

135 
lo
 = 
mi
 + 1;

137  -
lo
 - 1;

138 
	}
}

140 
	$ªgi°î_commô_gø·
(
commô_gø·
 *
gø·
, 
ign‹e_dups
)

142 
pos
 = 
	`commô_gø·_pos
(
gø·
->
sha1
);

144 i‡(0 <
pos
) {

145 i‡(
ign‹e_dups
)

146 
	`‰ì
(
gø·
);

148 
	`‰ì
(
commô_gø·
[
pos
]);

149 
commô_gø·
[
pos
] = 
gø·
;

153 
pos
 = -pos - 1;

154 i‡(
commô_gø·_Æloc
 <++
commô_gø·_ƒ
) {

155 
commô_gø·_Æloc
 = 
	`Æloc_ƒ
(commit_graft_alloc);

156 
commô_gø·
 = 
	`xªÆloc
(commit_graft,

157 (*
commô_gø·
) *

158 
commô_gø·_Æloc
);

160 i‡(
pos
 < 
commô_gø·_ƒ
)

161 
	`memmove
(
commô_gø·
 + 
pos
 + 1,

162 
commô_gø·
 + 
pos
,

163 (
commô_gø·_ƒ
 - 
pos
 - 1) *

164 (*
commô_gø·
));

165 
commô_gø·
[
pos
] = 
gø·
;

167 
	}
}

169 
commô_gø·
 *
	$ªad_gø·_löe
(*
buf
, 
Àn
)

172 
i
;

173 
commô_gø·
 *
gø·
 = 
NULL
;

175 i‡(
buf
[
Àn
-1] == '\n')

176 
buf
[--
Àn
] = 0;

177 i‡(
buf
[0] == '#' || buf[0] == '\0')

178  
NULL
;

179 i‡((
Àn
 + 1) % 41) {

180 
bad_gø·_d©a
:

181 
	`îr‹
("bad gø· d©a: %s", 
buf
);

182 
	`‰ì
(
gø·
);

183  
NULL
;

185 
i
 = (
Àn
 + 1) / 41 - 1;

186 
gø·
 = 
	`xmÆloc
((*gø·Ë+ 20 * 
i
);

187 
gø·
->
ƒ_∑ª¡
 = 
i
;

188 i‡(
	`gë_sha1_hex
(
buf
, 
gø·
->
sha1
))

189 
bad_gø·_d©a
;

190 
i
 = 40; i < 
Àn
; i += 41) {

191 i‡(
buf
[
i
] != ' ')

192 
bad_gø·_d©a
;

193 i‡(
	`gë_sha1_hex
(
buf
 + 
i
 + 1, 
gø·
->
∑ª¡
[i/41]))

194 
bad_gø·_d©a
;

196  
gø·
;

197 
	}
}

199 
	$ªad_gø·_fûe
(c⁄° *
gø·_fûe
)

201 
FILE
 *
Â
 = 
	`f›í
(
gø·_fûe
, "r");

202 
buf
[1024];

203 i‡(!
Â
)

205 
	`fgës
(
buf
, (buf), 
Â
)) {

207 
Àn
 = 
	`°æí
(
buf
);

208 
commô_gø·
 *
gø·
 = 
	`ªad_gø·_löe
(
buf
, 
Àn
);

209 i‡(!
gø·
)

211 i‡(
	`ªgi°î_commô_gø·
(
gø·
, 1))

212 
	`îr‹
("du∂iˇã gø· d©a: %s", 
buf
);

214 
	`f˛o£
(
Â
);

216 
	}
}

218 
	$¥ï¨e_commô_gø·
()

220 
commô_gø·_¥ï¨ed
;

221 *
gø·_fûe
;

223 i‡(
commô_gø·_¥ï¨ed
)

225 
gø·_fûe
 = 
	`gë_gø·_fûe
();

226 
	`ªad_gø·_fûe
(
gø·_fûe
);

228 
	`is_ªposô‹y_shÆlow
();

229 
commô_gø·_¥ï¨ed
 = 1;

230 
	}
}

232 
commô_gø·
 *
	$lookup_commô_gø·
(c⁄° *
sha1
)

234 
pos
;

235 
	`¥ï¨e_commô_gø·
();

236 
pos
 = 
	`commô_gø·_pos
(
sha1
);

237 i‡(
pos
 < 0)

238  
NULL
;

239  
commô_gø·
[
pos
];

240 
	}
}

242 
	$wrôe_shÆlow_commôs
(
fd
, 
u£_∑ck_¥Ÿocﬁ
)

244 
i
, 
cou¡
 = 0;

245 
i
 = 0; i < 
commô_gø·_ƒ
; i++)

246 i‡(
commô_gø·
[
i
]->
ƒ_∑ª¡
 < 0) {

247 c⁄° *
hex
 =

248 
	`sha1_to_hex
(
commô_gø·
[
i
]->
sha1
);

249 
cou¡
++;

250 i‡(
u£_∑ck_¥Ÿocﬁ
)

251 
	`∑ckë_wrôe
(
fd
, "shÆlow %s", 
hex
);

253 i‡(
	`wrôe_ö_fuŒ
(
fd
, 
hex
, 40) != 40)

255 i‡(
	`wrôe_ö_fuŒ
(
fd
, "\n", 1) != 1)

259  
cou¡
;

260 
	}
}

262 
	$uƒegi°î_shÆlow
(c⁄° *
sha1
)

264 
pos
 = 
	`commô_gø·_pos
(
sha1
);

265 i‡(
pos
 < 0)

267 i‡(
pos
 + 1 < 
commô_gø·_ƒ
)

268 
	`mem˝y
(
commô_gø·
 + 
pos
, commit_graft +Öos + 1,

269 (
commô_gø·
 *)

270 * (
commô_gø·_ƒ
 - 
pos
 - 1));

271 
commô_gø·_ƒ
--;

273 
	}
}

275 
	$∑r£_commô_buf„r
(
commô
 *
ôem
, *
buf„r
, 
size
)

277 *
èû
 = 
buf„r
;

278 *
buÂå
 = 
buf„r
;

279 
∑ª¡
[20];

280 
commô_li°
 **
µå
;

281 
commô_gø·
 *
gø·
;

282 
n_ªfs
 = 0;

284 i‡(
ôem
->
obje˘
.
∑r£d
)

286 
ôem
->
obje˘
.
∑r£d
 = 1;

287 
èû
 +
size
;

288 i‡(
èû
 <
buÂå
 + 5 || 
	`memcmp
(bufptr, "tree ", 5))

289  
	`îr‹
("bogu†commô obje˘ %s", 
	`sha1_to_hex
(
ôem
->
obje˘
.
sha1
));

290 i‡(
èû
 <
buÂå
 + 45 || 
	`gë_sha1_hex
(buÂå + 5, 
∑ª¡
) < 0)

291  
	`îr‹
("badÅreeÖointer in commit %s",

292 
	`sha1_to_hex
(
ôem
->
obje˘
.
sha1
));

293 
ôem
->
åì
 = 
	`lookup_åì
(
∑ª¡
);

294 i‡(
ôem
->
åì
)

295 
n_ªfs
++;

296 
buÂå
 += 46;

297 
µå
 = &
ôem
->
∑ª¡s
;

299 
gø·
 = 
	`lookup_commô_gø·
(
ôem
->
obje˘
.
sha1
);

300 
buÂå
 + 48 < 
èû
 && !
	`memcmp
(bufptr, "parent ", 7)) {

301 
commô
 *
√w_∑ª¡
;

303 i‡(
èû
 <
buÂå
 + 48 ||

304 
	`gë_sha1_hex
(
buÂå
 + 7, 
∑ª¡
) ||

305 
buÂå
[47] != '\n')

306  
	`îr‹
("badÖ¨ít†ö commô %s", 
	`sha1_to_hex
(
ôem
->
obje˘
.
sha1
));

307 
buÂå
 += 48;

308 i‡(
gø·
)

310 
√w_∑ª¡
 = 
	`lookup_commô
(
∑ª¡
);

311 i‡(
√w_∑ª¡
) {

312 
µå
 = &
	`commô_li°_ö£π
(
√w_∑ª¡
,Ö±r)->
√xt
;

313 
n_ªfs
++;

316 i‡(
gø·
) {

317 
i
;

318 
commô
 *
√w_∑ª¡
;

319 
i
 = 0; i < 
gø·
->
ƒ_∑ª¡
; i++) {

320 
√w_∑ª¡
 = 
	`lookup_commô
(
gø·
->
∑ª¡
[
i
]);

321 i‡(!
√w_∑ª¡
)

323 
µå
 = &
	`commô_li°_ö£π
(
√w_∑ª¡
,Ö±r)->
√xt
;

324 
n_ªfs
++;

327 
ôem
->
d©e
 = 
	`∑r£_commô_d©e
(
buÂå
);

329 i‡(
åack_obje˘_ªfs
) {

330 
i
 = 0;

331 
commô_li°
 *
p
;

332 
obje˘_ªfs
 *
ªfs
 = 
	`Æloc_obje˘_ªfs
(
n_ªfs
);

333 i‡(
ôem
->
åì
)

334 
ªfs
->
ªf
[
i
++] = &
ôem
->
åì
->
obje˘
;

335 
p
 = 
ôem
->
∑ª¡s
;Ö;Ö =Ö->
√xt
)

336 
ªfs
->
ªf
[
i
++] = &
p
->
ôem
->
obje˘
;

337 
	`£t_obje˘_ªfs
(&
ôem
->
obje˘
, 
ªfs
);

341 
	}
}

343 
	$∑r£_commô
(
commô
 *
ôem
)

345 
ty≥
[20];

346 *
buf„r
;

347 
size
;

348 
ªt
;

350 i‡(
ôem
->
obje˘
.
∑r£d
)

352 
buf„r
 = 
	`ªad_sha1_fûe
(
ôem
->
obje˘
.
sha1
, 
ty≥
, &
size
);

353 i‡(!
buf„r
)

354  
	`îr‹
("CouldÇotÑead %s",

355 
	`sha1_to_hex
(
ôem
->
obje˘
.
sha1
));

356 i‡(
	`°rcmp
(
ty≥
, 
commô_ty≥
)) {

357 
	`‰ì
(
buf„r
);

358  
	`îr‹
("Object %sÇotá commit",

359 
	`sha1_to_hex
(
ôem
->
obje˘
.
sha1
));

361 
ªt
 = 
	`∑r£_commô_buf„r
(
ôem
, 
buf„r
, 
size
);

362 i‡(
ßve_commô_buf„r
 && !
ªt
) {

363 
ôem
->
buf„r
 = buffer;

366 
	`‰ì
(
buf„r
);

367  
ªt
;

368 
	}
}

370 
commô_li°
 *
	$commô_li°_ö£π
(
commô
 *
ôem
, 
commô_li°
 **
li°_p
)

372 
commô_li°
 *
√w_li°
 = 
	`xmÆloc
((commit_list));

373 
√w_li°
->
ôem
 = item;

374 
√w_li°
->
√xt
 = *
li°_p
;

375 *
li°_p
 = 
√w_li°
;

376  
√w_li°
;

377 
	}
}

379 
	$‰ì_commô_li°
(
commô_li°
 *
li°
)

381 
li°
) {

382 
commô_li°
 *
ãmp
 = 
li°
;

383 
li°
 = 
ãmp
->
√xt
;

384 
	`‰ì
(
ãmp
);

386 
	}
}

388 
commô_li°
 * 
	$ö£π_by_d©e
(
commô
 *
ôem
, 
commô_li°
 **
li°
)

390 
commô_li°
 **
µ
 = 
li°
;

391 
commô_li°
 *
p
;

392 (
p
 = *
µ
Ë!
NULL
) {

393 i‡(
p
->
ôem
->
d©e
 < item->date) {

396 
µ
 = &
p
->
√xt
;

398  
	`commô_li°_ö£π
(
ôem
, 
µ
);

399 
	}
}

402 
	$s‹t_by_d©e
(
commô_li°
 **
li°
)

404 
commô_li°
 *
ªt
 = 
NULL
;

405 *
li°
) {

406 
	`ö£π_by_d©e
((*
li°
)->
ôem
, &
ªt
);

407 *
li°
 = (*li°)->
√xt
;

409 *
li°
 = 
ªt
;

410 
	}
}

412 
commô
 *
	$p›_mo°_ª˚¡_commô
(
commô_li°
 **
li°
,

413 
m¨k
)

415 
commô
 *
ªt
 = (*
li°
)->
ôem
;

416 
commô_li°
 *
∑ª¡s
 = 
ªt
->parents;

417 
commô_li°
 *
ﬁd
 = *
li°
;

419 *
li°
 = (*li°)->
√xt
;

420 
	`‰ì
(
ﬁd
);

422 
∑ª¡s
) {

423 
commô
 *commô = 
∑ª¡s
->
ôem
;

424 
	`∑r£_commô
(
commô
);

425 i‡(!(
commô
->
obje˘
.
Êags
 & 
m¨k
)) {

426 
commô
->
obje˘
.
Êags
 |
m¨k
;

427 
	`ö£π_by_d©e
(
commô
, 
li°
);

429 
∑ª¡s
 =Ö¨íts->
√xt
;

431  
ªt
;

432 
	}
}

434 
	$˛ór_commô_m¨ks
(
commô
 *commô, 
m¨k
)

436 
commô_li°
 *
∑ª¡s
;

438 
commô
->
obje˘
.
Êags
 &~
m¨k
;

439 
∑ª¡s
 = 
commô
->parents;

440 
∑ª¡s
) {

441 
commô
 *
∑ª¡
 = 
∑ª¡s
->
ôem
;

444 i‡(
m¨k
 & 
∑ª¡
->
obje˘
.
Êags
)

445 
	`˛ór_commô_m¨ks
(
∑ª¡
, 
m¨k
);

446 
∑ª¡s
 =Ö¨íts->
√xt
;

448 
	}
}

453 
	$gë_⁄e_löe
(c⁄° *
msg
, 
Àn
)

455 
ªt
 = 0;

457 
Àn
--) {

458 
c
 = *
msg
++;

459 i‡(!
c
)

461 
ªt
++;

462 i‡(
c
 == '\n')

465  
ªt
;

466 
	}
}

469 
	$n⁄_ascii
(
ch
)

471 
ch
 = (ch & 0xff);

472  ((
ch
 & 0x80) || (ch == 0x1b));

473 
	}
}

475 
	$is_rfc2047_•ecül
(
ch
)

477  (
	`n⁄_ascii
(
ch
) || (ch == '=') || (ch == '?') || (ch == '_'));

478 
	}
}

480 
	$add_rfc2047
(*
buf
, c⁄° *
löe
, 
Àn
,

481 c⁄° *
ícodög
)

483 *
bp
 = 
buf
;

484 
i
, 
√edquŸe
;

485 
q_ícodög
[128];

486 c⁄° *
q_ícodög_fmt
 = "=?%s?q?";

488 
i
 = 
√edquŸe
 = 0; !√edquŸê&& i < 
Àn
; i++) {

489 
ch
 = 
löe
[
i
];

490 i‡(
	`n⁄_ascii
(
ch
))

491 
√edquŸe
++;

492 i‡((
i
 + 1 < 
Àn
) &&

493 (
ch
 ='=' && 
löe
[
i
+1] == '?'))

494 
√edquŸe
++;

496 i‡(!
√edquŸe
)

497  
	`•rötf
(
buf
, "%.*s", 
Àn
, 
löe
);

499 
i
 = 
	`¢¥ötf
(
q_ícodög
, (q_ícodög), 
q_ícodög_fmt
, 
ícodög
);

500 i‡((
q_ícodög
Ë< 
i
)

501 
	`dõ
("Inß√lyÜ⁄gÉncodögÇamê%s", 
ícodög
);

502 
	`mem˝y
(
bp
, 
q_ícodög
, 
i
);

503 
bp
 +
i
;

504 
i
 = 0; i < 
Àn
; i++) {

505 
ch
 = 
löe
[
i
] & 0xFF;

506 i‡(
	`is_rfc2047_•ecül
(
ch
)) {

507 
	`•rötf
(
bp
, "=%02X", 
ch
);

508 
bp
 += 3;

510 i‡(
ch
 == ' ')

511 *
bp
++ = '_';

513 *
bp
++ = 
ch
;

515 
	`mem˝y
(
bp
, "?=", 2);

516 
bp
 += 2;

517  
bp
 - 
buf
;

518 
	}
}

520 
	$add_u£r_öfo
(c⁄° *
wh©
, 
cmô_fmt
 
fmt
, *
buf
,

521 c⁄° *
löe
, 
ªœtive_d©e
,

522 c⁄° *
ícodög
)

524 *
d©e
;

525 
«mñí
;

526 
time
;

527 
tz
, 
ªt
;

528 c⁄° *
fûÀr
 = " ";

530 i‡(
fmt
 =
CMIT_FMT_ONELINE
)

532 
d©e
 = 
	`°rchr
(
löe
, '>');

533 i‡(!
d©e
)

535 
«mñí
 = ++
d©e
 - 
löe
;

536 
time
 = 
	`°πoul
(
d©e
, &date, 10);

537 
tz
 = 
	`°πﬁ
(
d©e
, 
NULL
, 10);

539 i‡(
fmt
 =
CMIT_FMT_EMAIL
) {

540 *
«me_èû
 = 
	`°rchr
(
löe
, '<');

541 
di•œy_«me_Àngth
;

542 i‡(!
«me_èû
)

544 
löe
 < 
«me_èû
 && 
	`is•a˚
(name_tail[-1]))

545 
«me_èû
--;

546 
di•œy_«me_Àngth
 = 
«me_èû
 - 
löe
;

547 
fûÀr
 = "";

548 
	`°r˝y
(
buf
, "From: ");

549 
ªt
 = 
	`°æí
(
buf
);

550 
ªt
 +
	`add_rfc2047
(
buf
 +Ñë, 
löe
, 
di•œy_«me_Àngth
,

551 
ícodög
);

552 
	`mem˝y
(
buf
 + 
ªt
, 
«me_èû
, 
«mñí
 - 
di•œy_«me_Àngth
);

553 
ªt
 +
«mñí
 - 
di•œy_«me_Àngth
;

554 
buf
[
ªt
++] = '\n';

557 
ªt
 = 
	`•rötf
(
buf
, "%s: %.*s%.*s\n", 
wh©
,

558 (
fmt
 =
CMIT_FMT_FULLER
) ? 4 : 0,

559 
fûÀr
, 
«mñí
, 
löe
);

561 
fmt
) {

562 
CMIT_FMT_MEDIUM
:

563 
ªt
 +
	`•rötf
(
buf
 +Ñet, "Date: %s\n",

564 
	`show_d©e
(
time
, 
tz
, 
ªœtive_d©e
));

566 
CMIT_FMT_EMAIL
:

567 
ªt
 +
	`•rötf
(
buf
 +Ñet, "Date: %s\n",

568 
	`show_rfc2822_d©e
(
time
, 
tz
));

570 
CMIT_FMT_FULLER
:

571 
ªt
 +
	`•rötf
(
buf
 +Ñë, "%sD©e: %s\n", 
wh©
,

572 
	`show_d©e
(
time
, 
tz
, 
ªœtive_d©e
));

578  
ªt
;

579 
	}
}

581 
	$is_em±y_löe
(c⁄° *
löe
, *
Àn_p
)

583 
Àn
 = *
Àn_p
;

584 
Àn
 && 
	`is•a˚
(
löe
[len-1]))

585 
Àn
--;

586 *
Àn_p
 = 
Àn
;

587  !
Àn
;

588 
	}
}

590 
	$add_mîge_öfo
(
cmô_fmt
 
fmt
, *
buf
, c⁄° 
commô
 *commô, 
abbªv
)

592 
commô_li°
 *
∑ª¡
 = 
commô
->
∑ª¡s
;

593 
off£t
;

595 i‡((
fmt
 =
CMIT_FMT_ONELINE
Ë|| (fmà=
CMIT_FMT_EMAIL
) ||

596 !
∑ª¡
 || !∑ª¡->
√xt
)

599 
off£t
 = 
	`•rötf
(
buf
, "Merge:");

601 
∑ª¡
) {

602 
commô
 *
p
 = 
∑ª¡
->
ôem
;

603 c⁄° *
hex
 = 
NULL
;

604 c⁄° *
dŸs
;

605 i‡(
abbªv
)

606 
hex
 = 
	`föd_unique_abbªv
(
p
->
obje˘
.
sha1
, 
abbªv
);

607 i‡(!
hex
)

608 
hex
 = 
	`sha1_to_hex
(
p
->
obje˘
.
sha1
);

609 
dŸs
 = (
abbªv
 && 
	`°æí
(
hex
) != 40) ? "..." : "";

610 
∑ª¡
 =Ö¨ít->
√xt
;

612 
off£t
 +
	`•rötf
(
buf
 + off£t, " %s%s", 
hex
, 
dŸs
);

614 
buf
[
off£t
++] = '\n';

615  
off£t
;

616 
	}
}

618 *
	$gë_hódî
(c⁄° 
commô
 *commô, c⁄° *
key
)

620 
key_Àn
 = 
	`°æí
(
key
);

621 c⁄° *
löe
 = 
commô
->
buf„r
;

624 c⁄° *
eﬁ
 = 
	`°rchr
(
löe
, '\n'), *
√xt
;

626 i‡(
löe
 =
eﬁ
)

627  
NULL
;

628 i‡(!
eﬁ
) {

629 
eﬁ
 = 
löe
 + 
	`°æí
(line);

630 
√xt
 = 
NULL
;

632 
√xt
 = 
eﬁ
 + 1;

633 i‡(!
	`°∫cmp
(
löe
, 
key
, 
key_Àn
) &&Üine[key_len] == ' ') {

634 
Àn
 = 
eﬁ
 - 
löe
 - 
key_Àn
;

635 *
ªt
 = 
	`xmÆloc
(
Àn
);

636 
	`mem˝y
(
ªt
, 
löe
 + 
key_Àn
 + 1, 
Àn
 - 1);

637 
ªt
[
Àn
 - 1] = '\0';

638  
ªt
;

640 
löe
 = 
√xt
;

642 
	}
}

644 *
	$ª∂a˚_ícodög_hódî
(*
buf
, *
ícodög
)

646 *
ícodög_hódî
 = 
	`°r°r
(
buf
, "\nencoding ");

647 *
íd_of_ícodög_hódî
;

648 
ícodög_hódî_pos
;

649 
ícodög_hódî_Àn
;

650 
√w_Àn
;

651 
√ed_Àn
;

652 
buÊí
 = 
	`°æí
(
buf
) + 1;

654 i‡(!
ícodög_hódî
)

655  
buf
;

656 
ícodög_hódî
++;

657 
íd_of_ícodög_hódî
 = 
	`°rchr
(
ícodög_hódî
, '\n');

658 i‡(!
íd_of_ícodög_hódî
)

659  
buf
;

660 
íd_of_ícodög_hódî
++;

662 
ícodög_hódî_Àn
 = 
íd_of_ícodög_hódî
 - 
ícodög_hódî
;

663 
ícodög_hódî_pos
 = 
ícodög_hódî
 - 
buf
;

665 i‡(
	`is_ícodög_utf8
(
ícodög
)) {

667 
	`memmove
(
ícodög_hódî
, 
íd_of_ícodög_hódî
,

668 
buÊí
 - (
ícodög_hódî_pos
 + 
ícodög_hódî_Àn
));

669  
buf
;

671 
√w_Àn
 = 
	`°æí
(
ícodög
);

672 
√ed_Àn
 = 
√w_Àn
 + 
	`°æí
("encoding \n");

673 i‡(
ícodög_hódî_Àn
 < 
√ed_Àn
) {

674 
buf
 = 
	`xªÆloc
(buf, 
buÊí
 + (
√ed_Àn
 - 
ícodög_hódî_Àn
));

675 
ícodög_hódî
 = 
buf
 + 
ícodög_hódî_pos
;

676 
íd_of_ícodög_hódî
 = 
ícodög_hódî
 + 
ícodög_hódî_Àn
;

678 
	`memmove
(
íd_of_ícodög_hódî
 + (
√ed_Àn
 - 
ícodög_hódî_Àn
),

679 
íd_of_ícodög_hódî
,

680 
buÊí
 - (
ícodög_hódî_pos
 + 
ícodög_hódî_Àn
));

681 
	`mem˝y
(
ícodög_hódî
 + 9, 
ícodög
, 
	`°æí
(encoding));

682 
ícodög_hódî
[9 + 
√w_Àn
] = '\n';

683  
buf
;

684 
	}
}

686 *
	$logmsg_ªícode
(c⁄° 
commô
 *commit,

687 *
ouçut_ícodög
)

689 *
ícodög
;

690 *
out
;

691 *
utf8
 = "utf-8";

693 i‡(!*
ouçut_ícodög
)

694  
NULL
;

695 
ícodög
 = 
	`gë_hódî
(
commô
, "encoding");

696 i‡(!
ícodög
)

697 
ícodög
 = 
utf8
;

698 i‡(!
	`°rcmp
(
ícodög
, 
ouçut_ícodög
))

699 
out
 = 
	`°rdup
(
commô
->
buf„r
);

701 
out
 = 
	`ªícode_°rög
(
commô
->
buf„r
,

702 
ouçut_ícodög
, 
ícodög
);

703 i‡(
out
)

704 
out
 = 
	`ª∂a˚_ícodög_hódî
(out, 
ouçut_ícodög
);

706 i‡(
ícodög
 !
utf8
)

707 
	`‰ì
(
ícodög
);

708 i‡(!
out
)

709  
NULL
;

710  
out
;

711 
	}
}

713 
	$¥ëty_¥öt_commô
(
cmô_fmt
 
fmt
,

714 c⁄° 
commô
 *commit,

715 
Àn
,

716 *
buf
, 
•a˚
,

717 
abbªv
, c⁄° *
subje˘
,

718 c⁄° *
a·î_subje˘
,

719 
ªœtive_d©e
)

721 
hdr
 = 1, 
body
 = 0, 
£í_tôÀ
 = 0;

722 
off£t
 = 0;

723 
ödít
 = 4;

724 
∑ª¡s_shown
 = 0;

725 c⁄° *
msg
 = 
commô
->
buf„r
;

726 
∂aö_n⁄_ascii
 = 0;

727 *
ªícoded
;

728 *
ícodög
;

730 
ícodög
 = (
gô_log_ouçut_ícodög


731 ? 
gô_log_ouçut_ícodög


732 : 
gô_commô_ícodög
);

733 i‡(!
ícodög
)

734 
ícodög
 = "utf-8";

735 
ªícoded
 = 
	`logmsg_ªícode
(
commô
, 
ícodög
);

736 i‡(
ªícoded
)

737 
msg
 = 
ªícoded
;

739 i‡(
fmt
 =
CMIT_FMT_ONELINE
 || fmà=
CMIT_FMT_EMAIL
)

740 
ödít
 = 0;

748 i‡(
fmt
 =
CMIT_FMT_EMAIL
 && !
a·î_subje˘
) {

749 
i
, 
ch
, 
ö_body
;

751 
ö_body
 = 
i
 = 0; (
ch
 = 
msg
[i]Ë&& i < 
Àn
; i++) {

752 i‡(!
ö_body
) {

757 i‡(
ch
 == '\n' &&

758 
i
 + 1 < 
Àn
 && 
msg
[i+1] == '\n')

759 
ö_body
 = 1;

761 i‡(
	`n⁄_ascii
(
ch
)) {

762 
∂aö_n⁄_ascii
 = 1;

769 c⁄° *
löe
 = 
msg
;

770 
löñí
 = 
	`gë_⁄e_löe
(
msg
, 
Àn
);

772 i‡(!
löñí
)

779 i‡(
off£t
 + 
löñí
 + 20 > 
•a˚
) {

780 
	`mem˝y
(
buf
 + 
off£t
, " ...\n", 8);

781 
off£t
 += 8;

785 
msg
 +
löñí
;

786 
Àn
 -
löñí
;

787 i‡(
hdr
) {

788 i‡(
löñí
 == 1) {

789 
hdr
 = 0;

790 i‡((
fmt
 !
CMIT_FMT_ONELINE
Ë&& !
subje˘
)

791 
buf
[
off£t
++] = '\n';

794 i‡(
fmt
 =
CMIT_FMT_RAW
) {

795 
	`mem˝y
(
buf
 + 
off£t
, 
löe
, 
löñí
);

796 
off£t
 +
löñí
;

799 i‡(!
	`memcmp
(
löe
, "parent ", 7)) {

800 i‡(
löñí
 != 48)

801 
	`dõ
("badÖarentÜine in commit");

805 i‡(!
∑ª¡s_shown
) {

806 
off£t
 +
	`add_mîge_öfo
(
fmt
, 
buf
 + offset,

807 
commô
, 
abbªv
);

808 
∑ª¡s_shown
 = 1;

816 i‡(!
	`memcmp
(
löe
, "author ", 7))

817 
off£t
 +
	`add_u£r_öfo
("Auth‹", 
fmt
,

818 
buf
 + 
off£t
,

819 
löe
 + 7,

820 
ªœtive_d©e
,

821 
ícodög
);

822 i‡(!
	`memcmp
(
löe
, "committer ", 10) &&

823 (
fmt
 =
CMIT_FMT_FULL
 || fmà=
CMIT_FMT_FULLER
))

824 
off£t
 +
	`add_u£r_öfo
("Commô", 
fmt
,

825 
buf
 + 
off£t
,

826 
löe
 + 10,

827 
ªœtive_d©e
,

828 
ícodög
);

832 i‡(!
subje˘
)

833 
body
 = 1;

835 i‡(
	`is_em±y_löe
(
löe
, &
löñí
)) {

836 i‡(!
£í_tôÀ
)

838 i‡(!
body
)

840 i‡(
subje˘
)

842 i‡(
fmt
 =
CMIT_FMT_SHORT
)

846 
£í_tôÀ
 = 1;

847 i‡(
subje˘
) {

848 
¶í
 = 
	`°æí
(
subje˘
);

849 
	`mem˝y
(
buf
 + 
off£t
, 
subje˘
, 
¶í
);

850 
off£t
 +
¶í
;

851 
off£t
 +
	`add_rfc2047
(
buf
 + off£t, 
löe
, 
löñí
,

852 
ícodög
);

855 
	`mem£t
(
buf
 + 
off£t
, ' ', 
ödít
);

856 
	`mem˝y
(
buf
 + 
off£t
 + 
ödít
, 
löe
, 
löñí
);

857 
off£t
 +
löñí
 + 
ödít
;

859 
buf
[
off£t
++] = '\n';

860 i‡(
fmt
 =
CMIT_FMT_ONELINE
)

862 i‡(
subje˘
 && 
∂aö_n⁄_ascii
) {

863 
sz
;

864 
hódî
[512];

865 c⁄° *
hódî_fmt
 =

868 
sz
 = 
	`¢¥ötf
(
hódî
, (hódî), 
hódî_fmt
,

869 
ícodög
);

870 i‡((
hódî
Ë< 
sz
)

871 
	`dõ
("EncodögÇamê%†toÿl⁄g", 
ícodög
);

872 
	`mem˝y
(
buf
 + 
off£t
, 
hódî
, 
sz
);

873 
off£t
 +
sz
;

875 i‡(
a·î_subje˘
) {

876 
¶í
 = 
	`°æí
(
a·î_subje˘
);

877 i‡(
¶í
 > 
•a˚
 - 
off£t
 - 1)

878 
¶í
 = 
•a˚
 - 
off£t
 - 1;

879 
	`mem˝y
(
buf
 + 
off£t
, 
a·î_subje˘
, 
¶í
);

880 
off£t
 +
¶í
;

881 
a·î_subje˘
 = 
NULL
;

883 
subje˘
 = 
NULL
;

885 
off£t
 && 
	`is•a˚
(
buf
[offset-1]))

886 
off£t
--;

888 i‡(
fmt
 !
CMIT_FMT_ONELINE
)

889 
buf
[
off£t
++] = '\n';

894 i‡(
fmt
 =
CMIT_FMT_EMAIL
 && !
body
)

895 
buf
[
off£t
++] = '\n';

896 
buf
[
off£t
] = '\0';

898 
	`‰ì
(
ªícoded
);

899  
off£t
;

900 
	}
}

902 
commô
 *
	$p›_commô
(
commô_li°
 **
°ack
)

904 
commô_li°
 *
t›
 = *
°ack
;

905 
commô
 *
ôem
 = 
t›
 ?Å›->ôem : 
NULL
;

907 i‡(
t›
) {

908 *
°ack
 = 
t›
->
√xt
;

909 
	`‰ì
(
t›
);

911  
ôem
;

912 
	}
}

914 
	$cou¡_∑ª¡s
(
commô
 * commit)

916 
cou¡
;

917 
commô_li°
 * 
∑ª¡s
 = 
commô
->parents;

918 
cou¡
 = 0; 
∑ª¡s
;Ö¨ít†∑ª¡s->
√xt
,count++)

920  
cou¡
;

921 
	}
}

923 
	$t›o_s‹t_deÁu…_£âî
(
commô
 *
c
, *
d©a
)

925 
c
->
utû
 = 
d©a
;

926 
	}
}

928 *
	$t›o_s‹t_deÁu…_gëãr
(
commô
 *
c
)

930  
c
->
utû
;

931 
	}
}

936 
	$s‹t_ö_t›ﬁogiˇl_‹dî
(
commô_li°
 ** 
li°
, 
lifo
)

938 
	`s‹t_ö_t›ﬁogiˇl_‹dî_‚
(
li°
, 
lifo
, 
t›o_s‹t_deÁu…_£âî
,

939 
t›o_s‹t_deÁu…_gëãr
);

940 
	}
}

942 
	$s‹t_ö_t›ﬁogiˇl_‹dî_‚
(
commô_li°
 ** 
li°
, 
lifo
,

943 
t›o_s‹t_£t_‚_t
 
£âî
,

944 
t›o_s‹t_gë_‚_t
 
gëãr
)

946 
commô_li°
 * 
√xt
 = *
li°
;

947 
commô_li°
 * 
w‹k
 = 
NULL
, **
ö£π
;

948 
commô_li°
 ** 
µå
 = 
li°
;

949 
s‹t_node
 * 
nodes
;

950 
s‹t_node
 * 
√xt_nodes
;

951 
cou¡
 = 0;

954 
√xt
) {

955 
√xt
 =Çext->next;

956 
cou¡
++;

959 i‡(!
cou¡
)

962 
nodes
 = 
	`xˇŒoc
(
cou¡
, (*nodes));

964 
√xt_nodes
 = 
nodes
;

965 
√xt
=*
li°
;

966 
√xt
) {

967 
√xt_nodes
->
li°_ôem
 = 
√xt
;

968 
	`£âî
(
√xt
->
ôem
, 
√xt_nodes
);

969 
√xt_nodes
++;

970 
√xt
 =Çext->next;

973 
√xt
=*
li°
;

974 
√xt
) {

975 
commô_li°
 * 
∑ª¡s
 = 
√xt
->
ôem
->parents;

976 
∑ª¡s
) {

977 
commô
 * 
∑ª¡
=
∑ª¡s
->
ôem
;

978 
s‹t_node
 * 
≤
 = (s‹t_nodê*Ë
	`gëãr
(
∑ª¡
);

980 i‡(
≤
)

981 
≤
->
ödegªe
++;

982 
∑ª¡s
ı¨íts->
√xt
;

984 
√xt
=next->next;

993 
√xt
=*
li°
;

994 
ö£π
 = &
w‹k
;

995 
√xt
) {

996 
s‹t_node
 * 
node
 = (s‹t_nodê*Ë
	`gëãr
(
√xt
->
ôem
);

998 i‡(
node
->
ödegªe
 == 0) {

999 
ö£π
 = &
	`commô_li°_ö£π
(
√xt
->
ôem
, insert)->next;

1001 
√xt
=next->next;

1005 i‡(!
lifo
)

1006 
	`s‹t_by_d©e
(&
w‹k
);

1007 
w‹k
) {

1008 
commô
 * 
w‹k_ôem
 = 
	`p›_commô
(&
w‹k
);

1009 
s‹t_node
 * 
w‹k_node
 = (s‹t_nodê*Ë
	`gëãr
(
w‹k_ôem
);

1010 
commô_li°
 * 
∑ª¡s
 = 
w‹k_ôem
->parents;

1012 
∑ª¡s
) {

1013 
commô
 * 
∑ª¡
=
∑ª¡s
->
ôem
;

1014 
s‹t_node
 * 
≤
 = (s‹t_nodê*Ë
	`gëãr
(
∑ª¡
);

1016 i‡(
≤
) {

1022 
≤
->
ödegªe
--;

1023 i‡(!
≤
->
ödegªe
) {

1024 i‡(!
lifo
)

1025 
	`ö£π_by_d©e
(
∑ª¡
, &
w‹k
);

1027 
	`commô_li°_ö£π
(
∑ª¡
, &
w‹k
);

1030 
∑ª¡s
ı¨íts->
√xt
;

1036 *
µå
 = 
w‹k_node
->
li°_ôem
;

1037 
µå
 = &(*µå)->
√xt
;

1038 *
µå
 = 
NULL
;

1039 
	`£âî
(
w‹k_ôem
, 
NULL
);

1041 
	`‰ì
(
nodes
);

1042 
	}
}

1047 
	#PARENT1
 (1u<<16)

	)

1048 
	#PARENT2
 (1u<<17)

	)

1049 
	#STALE
 (1u<<18)

	)

1050 
	#RESULT
 (1u<<19)

	)

1052 c⁄° 
	gÆl_Êags
 = (
PARENT1
 | 
PARENT2
 | 
STALE
 | 
RESULT
);

1054 
commô
 *
	$öãª°ög
(
commô_li°
 *
li°
)

1056 
li°
) {

1057 
commô
 *commô = 
li°
->
ôem
;

1058 
li°
 =Üi°->
√xt
;

1059 i‡(
commô
->
obje˘
.
Êags
 & 
STALE
)

1061  
commô
;

1063  
NULL
;

1064 
	}
}

1066 
commô_li°
 *
	$mîge_ba£s
(
commô
 *
⁄e
, commô *
two
)

1068 
commô_li°
 *
li°
 = 
NULL
;

1069 
commô_li°
 *
ªsu…
 = 
NULL
;

1071 i‡(
⁄e
 =
two
)

1075  
	`commô_li°_ö£π
(
⁄e
, &
ªsu…
);

1077 
	`∑r£_commô
(
⁄e
);

1078 
	`∑r£_commô
(
two
);

1080 
⁄e
->
obje˘
.
Êags
 |
PARENT1
;

1081 
two
->
obje˘
.
Êags
 |
PARENT2
;

1082 
	`ö£π_by_d©e
(
⁄e
, &
li°
);

1083 
	`ö£π_by_d©e
(
two
, &
li°
);

1085 
	`öãª°ög
(
li°
)) {

1086 
commô
 *commit;

1087 
commô_li°
 *
∑ª¡s
;

1088 
commô_li°
 *
n
;

1089 
Êags
;

1091 
commô
 = 
li°
->
ôem
;

1092 
n
 = 
li°
->
√xt
;

1093 
	`‰ì
(
li°
);

1094 
li°
 = 
n
;

1096 
Êags
 = 
commô
->
obje˘
.Êag†& (
PARENT1
 | 
PARENT2
 | 
STALE
);

1097 i‡(
Êags
 =(
PARENT1
 | 
PARENT2
)) {

1098 i‡(!(
commô
->
obje˘
.
Êags
 & 
RESULT
)) {

1099 
commô
->
obje˘
.
Êags
 |
RESULT
;

1100 
	`ö£π_by_d©e
(
commô
, &
ªsu…
);

1103 
Êags
 |
STALE
;

1105 
∑ª¡s
 = 
commô
->parents;

1106 
∑ª¡s
) {

1107 
commô
 *
p
 = 
∑ª¡s
->
ôem
;

1108 
∑ª¡s
 =Ö¨íts->
√xt
;

1109 i‡((
p
->
obje˘
.
Êags
 & flags) == flags)

1111 
	`∑r£_commô
(
p
);

1112 
p
->
obje˘
.
Êags
 |= flags;

1113 
	`ö£π_by_d©e
(
p
, &
li°
);

1118 
	`‰ì_commô_li°
(
li°
);

1119 
li°
 = 
ªsu…
;Ñesu… = 
NULL
;

1120 
li°
) {

1121 
commô_li°
 *
n
 = 
li°
->
√xt
;

1122 i‡(!(
li°
->
ôem
->
obje˘
.
Êags
 & 
STALE
))

1123 
	`ö£π_by_d©e
(
li°
->
ôem
, &
ªsu…
);

1124 
	`‰ì
(
li°
);

1125 
li°
 = 
n
;

1127  
ªsu…
;

1128 
	}
}

1130 
commô_li°
 *
	$gë_mîge_ba£s
(
commô
 *
⁄e
,

1131 
commô
 *
two
,

1132 
˛ónup
)

1134 
commô_li°
 *
li°
;

1135 
commô
 **
r¶t
;

1136 
commô_li°
 *
ªsu…
;

1137 
˙t
, 
i
, 
j
;

1139 
ªsu…
 = 
	`mîge_ba£s
(
⁄e
, 
two
);

1140 i‡(
⁄e
 =
two
)

1141  
ªsu…
;

1142 i‡(!
ªsu…
 || !ªsu…->
√xt
) {

1143 i‡(
˛ónup
) {

1144 
	`˛ór_commô_m¨ks
(
⁄e
, 
Æl_Êags
);

1145 
	`˛ór_commô_m¨ks
(
two
, 
Æl_Êags
);

1147  
ªsu…
;

1151 
˙t
 = 0;

1152 
li°
 = 
ªsu…
;

1153 
li°
) {

1154 
li°
 =Üi°->
√xt
;

1155 
˙t
++;

1157 
r¶t
 = 
	`xˇŒoc
(
˙t
, (*rslt));

1158 
li°
 = 
ªsu…
, 
i
 = 0;Üi°;Üi° =Üi°->
√xt
)

1159 
r¶t
[
i
++] = 
li°
->
ôem
;

1160 
	`‰ì_commô_li°
(
ªsu…
);

1162 
	`˛ór_commô_m¨ks
(
⁄e
, 
Æl_Êags
);

1163 
	`˛ór_commô_m¨ks
(
two
, 
Æl_Êags
);

1164 
i
 = 0; i < 
˙t
 - 1; i++) {

1165 
j
 = 
i
+1; j < 
˙t
; j++) {

1166 i‡(!
r¶t
[
i
] || !r¶t[
j
])

1168 
ªsu…
 = 
	`mîge_ba£s
(
r¶t
[
i
],Ñ¶t[
j
]);

1169 
	`˛ór_commô_m¨ks
(
r¶t
[
i
], 
Æl_Êags
);

1170 
	`˛ór_commô_m¨ks
(
r¶t
[
j
], 
Æl_Êags
);

1171 
li°
 = 
ªsu…
;Üi°;Üi° =Üi°->
√xt
) {

1172 i‡(
r¶t
[
i
] =
li°
->
ôem
)

1173 
r¶t
[
i
] = 
NULL
;

1174 i‡(
r¶t
[
j
] =
li°
->
ôem
)

1175 
r¶t
[
j
] = 
NULL
;

1181 
ªsu…
 = 
NULL
;

1182 
i
 = 0; i < 
˙t
; i++) {

1183 i‡(
r¶t
[
i
])

1184 
	`ö£π_by_d©e
(
r¶t
[
i
], &
ªsu…
);

1186 
	`‰ì
(
r¶t
);

1187  
ªsu…
;

1188 
	}
}

1190 
	$ö_mîge_ba£s
(
commô
 *
ªv1
, commô *
ªv2
)

1192 
commô_li°
 *
ba£s
, *
b
;

1193 
ªt
 = 0;

1195 
ba£s
 = 
	`gë_mîge_ba£s
(
ªv1
, 
ªv2
, 1);

1196 
b
 = 
ba£s
; b; b = b->
√xt
) {

1197 i‡(!
	`hashcmp
(
ªv1
->
obje˘
.
sha1
, 
b
->
ôem
->object.sha1)) {

1198 
ªt
 = 1;

1203 
	`‰ì_commô_li°
(
ba£s
);

1204  
ªt
;

1205 
	}
}

	@commit.h

1 #i‚de‡
COMMIT_H


2 
	#COMMIT_H


	)

4 
	~"obje˘.h
"

5 
	~"åì.h
"

7 
	scommô_li°
 {

8 
commô
 *
	môem
;

9 
commô_li°
 *
	m√xt
;

12 
	scommô
 {

13 
obje˘
 
	mobje˘
;

14 *
	mutû
;

15 
	md©e
;

16 
commô_li°
 *
	m∑ª¡s
;

17 
åì
 *
	måì
;

18 *
	mbuf„r
;

21 
ßve_commô_buf„r
;

22 c⁄° *
commô_ty≥
;

24 
commô
 *
lookup_commô
(c⁄° *
sha1
);

25 
commô
 *
lookup_commô_ª„ªn˚
(c⁄° *
sha1
);

26 
commô
 *
lookup_commô_ª„ªn˚_gíéy
(c⁄° *
sha1
,

27 
quõt
);

29 
∑r£_commô_buf„r
(
commô
 *
ôem
, *
buf„r
, 
size
);

31 
∑r£_commô
(
commô
 *
ôem
);

33 
commô_li°
 * 
commô_li°_ö£π
(
commô
 *
ôem
, commô_li° **
li°_p
);

34 
commô_li°
 * 
ö£π_by_d©e
(
commô
 *
ôem
, commô_li° **
li°
);

36 
‰ì_commô_li°
(
commô_li°
 *
li°
);

38 
s‹t_by_d©e
(
commô_li°
 **
li°
);

41 
	ecmô_fmt
 {

42 
	mCMIT_FMT_RAW
,

43 
	mCMIT_FMT_MEDIUM
,

44 
	mCMIT_FMT_DEFAULT
 = 
CMIT_FMT_MEDIUM
,

45 
	mCMIT_FMT_SHORT
,

46 
	mCMIT_FMT_FULL
,

47 
	mCMIT_FMT_FULLER
,

48 
	mCMIT_FMT_ONELINE
,

49 
	mCMIT_FMT_EMAIL
,

51 
	mCMIT_FMT_UNSPECIFIED
,

54 
cmô_fmt
 
gë_commô_f‹m©
(c⁄° *
¨g
);

55 
¥ëty_¥öt_commô
(
cmô_fmt
 
fmt
, c⁄° 
commô
 *, 
Àn
, *
buf
, 
•a˚
, 
abbªv
, c⁄° *
subje˘
, c⁄° *
a·î_subje˘
, 
ªœtive_d©e
);

60 
commô
 *
p›_mo°_ª˚¡_commô
(
commô_li°
 **
li°
,

61 
m¨k
);

63 
commô
 *
p›_commô
(
commô_li°
 **
°ack
);

65 
˛ór_commô_m¨ks
(
commô
 *commô, 
m¨k
);

67 
cou¡_∑ª¡s
(
commô
 * commit);

87 (*
	tt›o_s‹t_£t_‚_t
)(
	tcommô
*, *
	td©a
);

88 * (*
	tt›o_s‹t_gë_‚_t
)(
	tcommô
*);

90 
	`t›o_s‹t_deÁu…_£âî
(
commô
 *
c
, *
d©a
);

91 *
	`t›o_s‹t_deÁu…_gëãr
(
commô
 *
c
);

93 
	`s‹t_ö_t›ﬁogiˇl_‹dî
(
commô_li°
 ** 
li°
, 
lifo
);

94 
	`s‹t_ö_t›ﬁogiˇl_‹dî_‚
(
commô_li°
 ** 
li°
, 
lifo
,

95 
t›o_s‹t_£t_‚_t
 
£âî
,

96 
t›o_s‹t_gë_‚_t
 
gëãr
);

98 
	scommô_gø·
 {

99 
sha1
[20];

100 
ƒ_∑ª¡
;

101 
∑ª¡
[
FLEX_ARRAY
][20];

104 
commô_gø·
 *
	`ªad_gø·_löe
(*
buf
, 
Àn
);

105 
	`ªgi°î_commô_gø·
(
commô_gø·
 *, );

106 
	`ªad_gø·_fûe
(c⁄° *
gø·_fûe
);

108 
commô_li°
 *
	`gë_mîge_ba£s
(
commô
 *
ªv1
, commô *
ªv2
, 
˛ónup
);

110 
	`ªgi°î_shÆlow
(c⁄° *
sha1
);

111 
	`uƒegi°î_shÆlow
(c⁄° *
sha1
);

112 
	`wrôe_shÆlow_commôs
(
fd
, 
u£_∑ck_¥Ÿocﬁ
);

113 
	`is_ªposô‹y_shÆlow
();

114 
commô_li°
 *
	`gë_shÆlow_commôs
(
obje˘_¨øy
 *
hóds
,

115 
dïth
, 
shÆlow_Êag
, 
nŸ_shÆlow_Êag
);

117 
	`ö_mîge_ba£s
(
commô
 *
ªv1
, commô *
ªv2
);

	@compat/inet_ntop.c

18 
	~<î∫o.h
>

19 
	~<sys/ty≥s.h
>

20 
	~<sys/sockë.h
>

21 
	~<sys/sockë.h
>

22 
	~<√töë/ö.h
>

23 
	~<¨∑/öë.h
>

24 
	~<°dio.h
>

25 
	~<°rög.h
>

27 #i‚de‡
NS_INADDRSZ


28 
	#NS_INADDRSZ
 4

	)

30 #i‚de‡
NS_IN6ADDRSZ


31 
	#NS_IN6ADDRSZ
 16

	)

33 #i‚de‡
NS_INT16SZ


34 
	#NS_INT16SZ
 2

	)

54 
	$öë_¡›4
(
§c
, 
d°
, 
size
)

55 c⁄° 
u_ch¨
 *
§c
;

56 *
d°
;

57 
size_t
 
size
;

59 c⁄° 
fmt
[] = "%u.%u.%u.%u";

60 
tmp
[ "255.255.255.255"];

61 
≈röãd
;

63 
≈röãd
 = 
	`¢¥ötf
(
tmp
, —mp), 
fmt
, 
§c
[0], src[1], src[2], src[3]);

64 i‡(
≈röãd
 < 0)

65  (
NULL
);

66 i‡((
size_t
)
≈röãd
 > 
size
) {

67 
î∫o
 = 
ENOSPC
;

68  (
NULL
);

70 
	`°r˝y
(
d°
, 
tmp
);

71  (
d°
);

72 
	}
}

74 #i‚de‡
NO_IPV6


82 
	$öë_¡›6
(
§c
, 
d°
, 
size
)

83 c⁄° 
u_ch¨
 *
§c
;

84 *
d°
;

85 
size_t
 
size
;

94 
tmp
[ "ffff:ffff:ffff:ffff:ffff:ffff:255.255.255.255"], *
ç
;

95 °ru˘ { 
ba£
, 
Àn
; } 
be°
, 
cur
;

96 
w‹ds
[
NS_IN6ADDRSZ
 / 
NS_INT16SZ
];

97 
i
;

104 
	`mem£t
(
w‹ds
, '\0',  words);

105 
i
 = 0; i < 
NS_IN6ADDRSZ
; i++)

106 
w‹ds
[
i
 / 2] |(
§c
[i] << ((1 - (i % 2)) << 3));

107 
be°
.
ba£
 = -1;

108 
cur
.
ba£
 = -1;

109 
i
 = 0; i < (
NS_IN6ADDRSZ
 / 
NS_INT16SZ
); i++) {

110 i‡(
w‹ds
[
i
] == 0) {

111 i‡(
cur
.
ba£
 == -1)

112 
cur
.
ba£
 = 
i
, cur.
Àn
 = 1;

114 
cur
.
Àn
++;

116 i‡(
cur
.
ba£
 != -1) {

117 i‡(
be°
.
ba£
 =-1 || 
cur
.
Àn
 > best.len)

118 
be°
 = 
cur
;

119 
cur
.
ba£
 = -1;

123 i‡(
cur
.
ba£
 != -1) {

124 i‡(
be°
.
ba£
 =-1 || 
cur
.
Àn
 > best.len)

125 
be°
 = 
cur
;

127 i‡(
be°
.
ba£
 !-1 && be°.
Àn
 < 2)

128 
be°
.
ba£
 = -1;

133 
ç
 = 
tmp
;

134 
i
 = 0; i < (
NS_IN6ADDRSZ
 / 
NS_INT16SZ
); i++) {

136 i‡(
be°
.
ba£
 !-1 && 
i
 >= best.base &&

137 
i
 < (
be°
.
ba£
 + be°.
Àn
)) {

138 i‡(
i
 =
be°
.
ba£
)

139 *
ç
++ = ':';

143 i‡(
i
 != 0)

144 *
ç
++ = ':';

146 i‡(
i
 =6 && 
be°
.
ba£
 == 0 &&

147 (
be°
.
Àn
 =6 || (be°.À¿=5 && 
w‹ds
[5] == 0xffff))) {

148 i‡(!
	`öë_¡›4
(
§c
+12, 
ç
,  
tmp
 - (tp -Åmp)))

149  (
NULL
);

150 
ç
 +
	`°æí
(tp);

153 
ç
 +
	`¢¥ötf
—p,  
tmp
 - (ç -Åmp), "%x", 
w‹ds
[
i
]);

156 i‡(
be°
.
ba£
 !-1 && (be°.ba£ + be°.
Àn
) ==

157 (
NS_IN6ADDRSZ
 / 
NS_INT16SZ
))

158 *
ç
++ = ':';

159 *
ç
++ = '\0';

164 i‡((
size_t
)(
ç
 - 
tmp
Ë> 
size
) {

165 
î∫o
 = 
ENOSPC
;

166  (
NULL
);

168 
	`°r˝y
(
d°
, 
tmp
);

169  (
d°
);

170 
	}
}

182 
	$öë_¡›
(
af
, 
§c
, 
d°
, 
size
)

183 
af
;

184 c⁄° *
§c
;

185 *
d°
;

186 
size_t
 
size
;

188 
af
) {

189 
AF_INET
:

190  (
	`öë_¡›4
(
§c
, 
d°
, 
size
));

191 #i‚de‡
NO_IPV6


192 
AF_INET6
:

193  (
	`öë_¡›6
(
§c
, 
d°
, 
size
));

196 
î∫o
 = 
EAFNOSUPPORT
;

197  (
NULL
);

200 
	}
}

	@compat/inet_pton.c

18 
	~<î∫o.h
>

19 
	~<sys/ty≥s.h
>

20 
	~<sys/sockë.h
>

21 
	~<sys/sockë.h
>

22 
	~<√töë/ö.h
>

23 
	~<¨∑/öë.h
>

24 
	~<°dio.h
>

25 
	~<°rög.h
>

27 #i‚de‡
NS_INT16SZ


28 
	#NS_INT16SZ
 2

	)

31 #i‚de‡
NS_INADDRSZ


32 
	#NS_INADDRSZ
 4

	)

35 #i‚de‡
NS_IN6ADDRSZ


36 
	#NS_IN6ADDRSZ
 16

	)

44 
öë_±⁄4
(c⁄° *
§c
, *
d°
);

45 
öë_±⁄6
(c⁄° *
§c
, *
d°
);

58 
	$öë_±⁄4
(c⁄° *
§c
, *
d°
)

60 c⁄° 
digôs
[] = "0123456789";

61 
ßw_digô
, 
o˘ës
, 
ch
;

62 
tmp
[
NS_INADDRSZ
], *
ç
;

64 
ßw_digô
 = 0;

65 
o˘ës
 = 0;

66 *(
ç
 = 
tmp
) = 0;

67 (
ch
 = *
§c
++) != '\0') {

68 c⁄° *
pch
;

70 i‡((
pch
 = 
	`°rchr
(
digôs
, 
ch
)Ë!
NULL
) {

71 
√w
 = *
ç
 * 10 + (
pch
 - 
digôs
);

73 i‡(
√w
 > 255)

75 *
ç
 = 
√w
;

76 i‡(! 
ßw_digô
) {

77 i‡(++
o˘ës
 > 4)

79 
ßw_digô
 = 1;

81 } i‡(
ch
 ='.' && 
ßw_digô
) {

82 i‡(
o˘ës
 == 4)

84 *++
ç
 = 0;

85 
ßw_digô
 = 0;

89 i‡(
o˘ës
 < 4)

91 
	`mem˝y
(
d°
, 
tmp
, 
NS_INADDRSZ
);

93 
	}
}

109 #i‚de‡
NO_IPV6


111 
	$öë_±⁄6
(c⁄° *
§c
, *
d°
)

113 c⁄° 
xdigôs_l
[] = "0123456789abcdef",

114 
xdigôs_u
[] = "0123456789ABCDEF";

115 
tmp
[
NS_IN6ADDRSZ
], *
ç
, *
ídp
, *
cﬁ⁄p
;

116 c⁄° *
xdigôs
, *
cuπok
;

117 
ch
, 
ßw_xdigô
;

118 
vÆ
;

120 
	`mem£t
((
ç
 = 
tmp
), '\0', 
NS_IN6ADDRSZ
);

121 
ídp
 = 
ç
 + 
NS_IN6ADDRSZ
;

122 
cﬁ⁄p
 = 
NULL
;

124 i‡(*
§c
 == ':')

125 i‡(*++
§c
 != ':')

127 
cuπok
 = 
§c
;

128 
ßw_xdigô
 = 0;

129 
vÆ
 = 0;

130 (
ch
 = *
§c
++) != '\0') {

131 c⁄° *
pch
;

133 i‡((
pch
 = 
	`°rchr
((
xdigôs
 = 
xdigôs_l
), 
ch
)Ë=
NULL
)

134 
pch
 = 
	`°rchr
((
xdigôs
 = 
xdigôs_u
), 
ch
);

135 i‡(
pch
 !
NULL
) {

136 
vÆ
 <<= 4;

137 
vÆ
 |(
pch
 - 
xdigôs
);

138 i‡(
vÆ
 > 0xffff)

140 
ßw_xdigô
 = 1;

143 i‡(
ch
 == ':') {

144 
cuπok
 = 
§c
;

145 i‡(!
ßw_xdigô
) {

146 i‡(
cﬁ⁄p
)

148 
cﬁ⁄p
 = 
ç
;

151 i‡(
ç
 + 
NS_INT16SZ
 > 
ídp
)

153 *
ç
++ = (Ë(
vÆ
 >> 8) & 0xff;

154 *
ç
++ = (Ë
vÆ
 & 0xff;

155 
ßw_xdigô
 = 0;

156 
vÆ
 = 0;

159 i‡(
ch
 ='.' && ((
ç
 + 
NS_INADDRSZ
Ë<
ídp
) &&

160 
	`öë_±⁄4
(
cuπok
, 
ç
) > 0) {

161 
ç
 +
NS_INADDRSZ
;

162 
ßw_xdigô
 = 0;

167 i‡(
ßw_xdigô
) {

168 i‡(
ç
 + 
NS_INT16SZ
 > 
ídp
)

170 *
ç
++ = (Ë(
vÆ
 >> 8) & 0xff;

171 *
ç
++ = (Ë
vÆ
 & 0xff;

173 i‡(
cﬁ⁄p
 !
NULL
) {

178 c⁄° 
n
 = 
ç
 - 
cﬁ⁄p
;

179 
i
;

181 
i
 = 1; i <
n
; i++) {

182 
ídp
[- 
i
] = 
cﬁ⁄p
[
n
 - i];

183 
cﬁ⁄p
[
n
 - 
i
] = 0;

185 
ç
 = 
ídp
;

187 i‡(
ç
 !
ídp
)

189 
	`mem˝y
(
d°
, 
tmp
, 
NS_IN6ADDRSZ
);

191 
	}
}

206 
	$öë_±⁄
(
af
, c⁄° *
§c
, *
d°
)

208 
af
) {

209 
AF_INET
:

210  (
	`öë_±⁄4
(
§c
, 
d°
));

211 #i‚de‡
NO_IPV6


212 
AF_INET6
:

213  (
	`öë_±⁄6
(
§c
, 
d°
));

216 
î∫o
 = 
EAFNOSUPPORT
;

220 
	}
}

	@compat/mmap.c

1 
	~"../gô-com∑t-utû.h
"

3 *
	$gô_mm≠
(*
°¨t
, 
size_t
 
Àngth
, 
¥Ÿ
, 
Êags
, 
fd
, 
off_t
 
off£t
)

5 
size_t
 
n
 = 0;

7 i‡(
°¨t
 !
NULL
 || !(
Êags
 & 
MAP_PRIVATE
))

8 
	`dõ
("Invalid usage of mmap when built with NO_MMAP");

10 
°¨t
 = 
	`xmÆloc
(
Àngth
);

11 i‡(
°¨t
 =
NULL
) {

12 
î∫o
 = 
ENOMEM
;

13  
MAP_FAILED
;

16 
n
 < 
Àngth
) {

17 
ssize_t
 
cou¡
 = 
	`¥ód
(
fd
, (*)
°¨t
 + 
n
, 
Àngth
 -Ç, 
off£t
 +Ç);

19 i‡(
cou¡
 == 0) {

20 
	`mem£t
((*)
°¨t
+
n
, 0, 
Àngth
-n);

24 i‡(
cou¡
 < 0) {

25 i‡(
î∫o
 =
EAGAIN
 ||Éºnÿ=
EINTR
)

27 
	`‰ì
(
°¨t
);

28 
î∫o
 = 
EACCES
;

29  
MAP_FAILED
;

32 
n
 +
cou¡
;

35  
°¨t
;

36 
	}
}

38 
	$gô_munm≠
(*
°¨t
, 
size_t
 
Àngth
)

40 
	`‰ì
(
°¨t
);

42 
	}
}

	@compat/pread.c

1 
	~"../gô-com∑t-utû.h
"

3 
ssize_t
 
	$gô_¥ód
(
fd
, *
buf
, 
size_t
 
cou¡
, 
off_t
 
off£t
)

5 
off_t
 
cuºít_off£t
;

6 
ssize_t
 
rc
;

8 
cuºít_off£t
 = 
	`l£ek
(
fd
, 0, 
SEEK_CUR
);

10 i‡(
	`l£ek
(
fd
, 
off£t
, 
SEEK_SET
) < 0)

13 
rc
 = 
	`ªad_ö_fuŒ
(
fd
, 
buf
, 
cou¡
);

15 i‡(
cuºít_off£t
 !
	`l£ek
(
fd
, cuºít_off£t, 
SEEK_SET
))

17  
rc
;

18 
	}
}

	@compat/setenv.c

1 
	~"../gô-com∑t-utû.h
"

3 
	$gô£ãnv
(c⁄° *
«me
, c⁄° *
vÆue
, 
ª∂a˚
)

5 
out
;

6 
size_t
 
«mñí
, 
vÆuñí
;

7 *
ív°r
;

9 i‡(!
«me
 || !
vÆue
)  -1;

10 i‡(!
ª∂a˚
) {

11 *
ﬁdvÆ
 = 
NULL
;

12 
ﬁdvÆ
 = 
	`gëív
(
«me
);

13 i‡(
ﬁdvÆ
)  0;

16 
«mñí
 = 
	`°æí
(
«me
);

17 
vÆuñí
 = 
	`°æí
(
vÆue
);

18 
ív°r
 = 
	`mÆloc
((
«mñí
 + 
vÆuñí
 + 2));

19 i‡(!
ív°r
)  -1;

21 
	`mem˝y
(
ív°r
, 
«me
, 
«mñí
);

22 
ív°r
[
«mñí
] = '=';

23 
	`mem˝y
(
ív°r
 + 
«mñí
 + 1, 
vÆue
, 
vÆuñí
);

24 
ív°r
[
«mñí
 + 
vÆuñí
 + 1] = 0;

26 
out
 = 
	`puãnv
(
ív°r
);

33  
out
;

34 
	}
}

	@compat/strcasestr.c

1 
	~"../gô-com∑t-utû.h
"

3 *
	$gô°rˇ£°r
(c⁄° *
hay°ack
, c⁄° *
√edÀ
)

5 
∆í
 = 
	`°æí
(
√edÀ
);

6 
hÀn
 = 
	`°æí
(
hay°ack
Ë- 
∆í
 + 1;

7 
i
;

9 
i
 = 0; i < 
hÀn
; i++) {

10 
j
;

11 
j
 = 0; j < 
∆í
; j++) {

12 
c1
 = 
hay°ack
[
i
+
j
];

13 
c2
 = 
√edÀ
[
j
];

14 i‡(
	`touµî
(
c1
Ë!touµî(
c2
))

15 
√xt
;

17  (*Ë
hay°ack
 + 
i
;

18 
√xt
:

21  
NULL
;

22 
	}
}

	@compat/strlcpy.c

1 
	~"../gô-com∑t-utû.h
"

3 
size_t
 
	$gô°æ˝y
(*
de°
, c⁄° *
§c
, 
size_t
 
size
)

5 
size_t
 
ªt
 = 
	`°æí
(
§c
);

7 i‡(
size
) {

8 
size_t
 
Àn
 = (
ªt
 >
size
) ? size - 1 :Ñet;

9 
	`mem˝y
(
de°
, 
§c
, 
Àn
);

10 
de°
[
Àn
] = '\0';

12  
ªt
;

13 
	}
}

	@compat/unsetenv.c

1 
	~"../gô-com∑t-utû.h
"

3 
	$gôun£ãnv
 (c⁄° *
«me
)

5 **
ívú⁄
;

6 
§c
, 
d°
;

7 
size_t
 
nm 
;

9 
nm 
 = 
	`°æí
(
«me
);

11 
§c
 = 
d°
 = 0; 
ívú⁄
[src]; ++src) {

12 
size_t
 
í 
;

13 
í 
 = 
	`°æí
(
ívú⁄
[
§c
]);

14 i‡(
í 
 > 
nm 
) {

16 i‡(0 =
	`°∫cmp
 (
ívú⁄
[
§c
], 
«me
, 
nm 
)

17 && '=' =
ívú⁄
[
§c
][
nm 
])

21 
ívú⁄
[
d°
] =Énvú⁄[
§c
];

22 ++
d°
;

24 
ívú⁄
[
d°
] = 
NULL
;

25 
	}
}

	@config.c

8 
	~"ˇche.h
"

10 
	#MAXNAME
 (256)

	)

12 
FILE
 *
	gc⁄fig_fûe
;

13 c⁄° *
	gc⁄fig_fûe_«me
;

14 
	gc⁄fig_löír
;

15 
	$gë_√xt_ch¨
()

17 
c
;

18 
FILE
 *
f
;

20 
c
 = '\n';

21 i‡((
f
 = 
c⁄fig_fûe
Ë!
NULL
) {

22 
c
 = 
	`fgëc
(
f
);

23 i‡(
c
 == '\r') {

25 
c
 = 
	`fgëc
(
f
);

26 i‡(
c
 != '\n') {

27 
	`ungëc
(
c
, 
f
);

28 
c
 = '\r';

31 i‡(
c
 == '\n')

32 
c⁄fig_löír
++;

33 i‡(
c
 =
EOF
) {

34 
c⁄fig_fûe
 = 
NULL
;

35 
c
 = '\n';

38  
c
;

39 
	}
}

41 *
	$∑r£_vÆue
()

43 
vÆue
[1024];

44 
quŸe
 = 0, 
commít
 = 0, 
Àn
 = 0, 
•a˚
 = 0;

47 
c
 = 
	`gë_√xt_ch¨
();

48 i‡(
Àn
 >(
vÆue
))

49  
NULL
;

50 i‡(
c
 == '\n') {

51 i‡(
quŸe
)

52  
NULL
;

53 
vÆue
[
Àn
] = 0;

54  
vÆue
;

56 i‡(
commít
)

58 i‡(
	`is•a˚
(
c
Ë&& !
quŸe
) {

59 
•a˚
 = 1;

62 i‡(!
quŸe
) {

63 i‡(
c
 == ';' || c == '#') {

64 
commít
 = 1;

68 i‡(
•a˚
) {

69 i‡(
Àn
)

70 
vÆue
[
Àn
++] = ' ';

71 
•a˚
 = 0;

73 i‡(
c
 == '\\') {

74 
c
 = 
	`gë_√xt_ch¨
();

75 
c
) {

79 
c
 = '\t';

82 
c
 = '\b';

85 
c
 = '\n';

92  
NULL
;

94 
vÆue
[
Àn
++] = 
c
;

97 i‡(
c
 == '"') {

98 
quŸe
 = 1-quote;

101 
vÆue
[
Àn
++] = 
c
;

103 
	}
}

105 
ölöe
 
	$iskeych¨
(
c
)

107  
	`iß um
(
c
) || c == '-';

108 
	}
}

110 
	$gë_vÆue
(
c⁄fig_‚_t
 
‚
, *
«me
, 
Àn
)

112 
c
;

113 *
vÆue
;

117 
c
 = 
	`gë_√xt_ch¨
();

118 i‡(
c
 =
EOF
)

120 i‡(!
	`iskeych¨
(
c
))

122 
«me
[
Àn
++] = 
	`tﬁowî
(
c
);

123 i‡(
Àn
 >
MAXNAME
)

126 
«me
[
Àn
] = 0;

127 
c
 == ' ' || c == '\t')

128 
c
 = 
	`gë_√xt_ch¨
();

130 
vÆue
 = 
NULL
;

131 i‡(
c
 != '\n') {

132 i‡(
c
 != '=')

134 
vÆue
 = 
	`∑r£_vÆue
();

135 i‡(!
vÆue
)

138  
	`‚
(
«me
, 
vÆue
);

139 
	}
}

141 
	$gë_exãnded_ba£_v¨
(*
«me
, 
ba£Àn
, 
c
)

144 i‡(
c
 == '\n')

146 
c
 = 
	`gë_√xt_ch¨
();

147 } 
	`is•a˚
(
c
));

150 i‡(
c
 != '"')

152 
«me
[
ba£Àn
++] = '.';

155 
c
 = 
	`gë_√xt_ch¨
();

156 i‡(
c
 == '\n')

158 i‡(
c
 == '"')

160 i‡(
c
 == '\\') {

161 
c
 = 
	`gë_√xt_ch¨
();

162 i‡(
c
 == '\n')

165 
«me
[
ba£Àn
++] = 
c
;

166 i‡(
ba£Àn
 > 
MAXNAME
 / 2)

171 i‡(
	`gë_√xt_ch¨
() != ']')

173  
ba£Àn
;

174 
	}
}

176 
	$gë_ba£_v¨
(*
«me
)

178 
ba£Àn
 = 0;

181 
c
 = 
	`gë_√xt_ch¨
();

182 i‡(
c
 =
EOF
)

184 i‡(
c
 == ']')

185  
ba£Àn
;

186 i‡(
	`is•a˚
(
c
))

187  
	`gë_exãnded_ba£_v¨
(
«me
, 
ba£Àn
, 
c
);

188 i‡(!
	`iskeych¨
(
c
) && c != '.')

190 i‡(
ba£Àn
 > 
MAXNAME
 / 2)

192 
«me
[
ba£Àn
++] = 
	`tﬁowî
(
c
);

194 
	}
}

196 
	$gô_∑r£_fûe
(
c⁄fig_‚_t
 
‚
)

198 
commít
 = 0;

199 
ba£Àn
 = 0;

200 
v¨
[
MAXNAME
];

203 
c
 = 
	`gë_√xt_ch¨
();

204 i‡(
c
 == '\n') {

206 i‡(!
c⁄fig_fûe
)

208 
commít
 = 0;

211 i‡(
commít
 || 
	`is•a˚
(
c
))

213 i‡(
c
 == '#' || c == ';') {

214 
commít
 = 1;

217 i‡(
c
 == '[') {

218 
ba£Àn
 = 
	`gë_ba£_v¨
(
v¨
);

219 i‡(
ba£Àn
 <= 0)

221 
v¨
[
ba£Àn
++] = '.';

222 
v¨
[
ba£Àn
] = 0;

225 i‡(!
	`ißÕha
(
c
))

227 
v¨
[
ba£Àn
] = 
	`tﬁowî
(
c
);

228 i‡(
	`gë_vÆue
(
‚
, 
v¨
, 
ba£Àn
+1) < 0)

231 
	`dõ
("bad c⁄fig fûêlöê%d i¿%s", 
c⁄fig_löír
, 
c⁄fig_fûe_«me
);

232 
	}
}

234 
	$gô_c⁄fig_öt
(c⁄° *
«me
, c⁄° *
vÆue
)

236 i‡(
vÆue
 && *value) {

237 *
íd
;

238 
vÆ
 = 
	`°πﬁ
(
vÆue
, &
íd
, 0);

239 i‡(!*
íd
)

240  
vÆ
;

241 i‡(!
	`°rˇ£cmp
(
íd
, "k"))

242  
vÆ
 * 1024;

243 i‡(!
	`°rˇ£cmp
(
íd
, "m"))

244  
vÆ
 * 1024 * 1024;

245 i‡(!
	`°rˇ£cmp
(
íd
, "g"))

246  
vÆ
 * 1024 * 1024 * 1024;

248 
	`dõ
("bad c⁄fig vÆuêf‹ '%s' i¿%s", 
«me
, 
c⁄fig_fûe_«me
);

249 
	}
}

251 
	$gô_c⁄fig_boﬁ
(c⁄° *
«me
, c⁄° *
vÆue
)

253 i‡(!
vÆue
)

255 i‡(!*
vÆue
)

257 i‡(!
	`°rˇ£cmp
(
vÆue
, "true") || !strcasecmp(value, "yes"))

259 i‡(!
	`°rˇ£cmp
(
vÆue
, "false") || !strcasecmp(value, "no"))

261  
	`gô_c⁄fig_öt
(
«me
, 
vÆue
) != 0;

262 
	}
}

264 
	$gô_deÁu…_c⁄fig
(c⁄° *
v¨
, c⁄° *
vÆue
)

267 i‡(!
	`°rcmp
(
v¨
, "core.filemode")) {

268 
åu°_execuèbÀ_bô
 = 
	`gô_c⁄fig_boﬁ
(
v¨
, 
vÆue
);

272 i‡(!
	`°rcmp
(
v¨
, "core.bare")) {

273 
is_b¨e_ªposô‹y_cfg
 = 
	`gô_c⁄fig_boﬁ
(
v¨
, 
vÆue
);

277 i‡(!
	`°rcmp
(
v¨
, "core.ignorestat")) {

278 
assume_unch™ged
 = 
	`gô_c⁄fig_boﬁ
(
v¨
, 
vÆue
);

282 i‡(!
	`°rcmp
(
v¨
, "core.prefersymlinkrefs")) {

283 
¥e„r_symlök_ªfs
 = 
	`gô_c⁄fig_boﬁ
(
v¨
, 
vÆue
);

287 i‡(!
	`°rcmp
(
v¨
, "core.logallrefupdates")) {

288 
log_Æl_ªf_upd©es
 = 
	`gô_c⁄fig_boﬁ
(
v¨
, 
vÆue
);

292 i‡(!
	`°rcmp
(
v¨
, "core.warnambiguousrefs")) {

293 
w¨n_ambiguous_ªfs
 = 
	`gô_c⁄fig_boﬁ
(
v¨
, 
vÆue
);

297 i‡(!
	`°rcmp
(
v¨
, "core.legacyheaders")) {

298 
u£_Àgacy_hódîs
 = 
	`gô_c⁄fig_boﬁ
(
v¨
, 
vÆue
);

302 i‡(!
	`°rcmp
(
v¨
, "core.compression")) {

303 
Àvñ
 = 
	`gô_c⁄fig_öt
(
v¨
, 
vÆue
);

304 i‡(
Àvñ
 == -1)

305 
Àvñ
 = 
Z_DEFAULT_COMPRESSION
;

306 i‡(
Àvñ
 < 0 ||Üevñ > 
Z_BEST_COMPRESSION
)

307 
	`dõ
("bad zlib com¥essi⁄Üevñ %d", 
Àvñ
);

308 
zlib_com¥essi⁄_Àvñ
 = 
Àvñ
;

312 i‡(!
	`°rcmp
(
v¨
, "core.packedgitwindowsize")) {

313 
pgsz
 = 
	`gë∑gesize
();

314 
∑cked_gô_wödow_size
 = 
	`gô_c⁄fig_öt
(
v¨
, 
vÆue
);

315 
∑cked_gô_wödow_size
 /
pgsz
;

316 i‡(
∑cked_gô_wödow_size
 < 2)

317 
∑cked_gô_wödow_size
 = 2;

318 
∑cked_gô_wödow_size
 *
pgsz
;

322 i‡(!
	`°rcmp
(
v¨
, "core.packedgitlimit")) {

323 
∑cked_gô_limô
 = 
	`gô_c⁄fig_öt
(
v¨
, 
vÆue
);

327 i‡(!
	`°rcmp
(
v¨
, "user.name")) {

328 
	`°æ˝y
(
gô_deÁu…_«me
, 
vÆue
, (git_default_name));

332 i‡(!
	`°rcmp
(
v¨
, "user.email")) {

333 
	`°æ˝y
(
gô_deÁu…_emaû
, 
vÆue
, (git_default_email));

337 i‡(!
	`°rcmp
(
v¨
, "i18n.commitencoding")) {

338 
gô_commô_ícodög
 = 
	`°rdup
(
vÆue
);

342 i‡(!
	`°rcmp
(
v¨
, "i18n.logoutputencoding")) {

343 
gô_log_ouçut_ícodög
 = 
	`°rdup
(
vÆue
);

348 i‡(!
	`°rcmp
(
v¨
, "pager.color") || !strcmp(var, "color.pager")) {

349 
∑gî_u£_cﬁ‹
 = 
	`gô_c⁄fig_boﬁ
(
v¨
,
vÆue
);

355 
	}
}

357 
	$gô_c⁄fig_‰om_fûe
(
c⁄fig_‚_t
 
‚
, c⁄° *
fûíame
)

359 
ªt
;

360 
FILE
 *
f
 = 
	`f›í
(
fûíame
, "r");

362 
ªt
 = -1;

363 i‡(
f
) {

364 
c⁄fig_fûe
 = 
f
;

365 
c⁄fig_fûe_«me
 = 
fûíame
;

366 
c⁄fig_löír
 = 1;

367 
ªt
 = 
	`gô_∑r£_fûe
(
‚
);

368 
	`f˛o£
(
f
);

369 
c⁄fig_fûe_«me
 = 
NULL
;

371  
ªt
;

372 
	}
}

374 
	$gô_c⁄fig
(
c⁄fig_‚_t
 
‚
)

376 
ªt
 = 0;

377 *
ªpo_c⁄fig
 = 
NULL
;

378 c⁄° *
home
 = 
NULL
, *
fûíame
;

384 
fûíame
 = 
	`gëív
(
CONFIG_ENVIRONMENT
);

385 i‡(!
fûíame
) {

386 
home
 = 
	`gëív
("HOME");

387 
fûíame
 = 
	`gëív
(
CONFIG_LOCAL_ENVIRONMENT
);

388 i‡(!
fûíame
)

389 
fûíame
 = 
ªpo_c⁄fig
 = 
	`x°rdup
(
	`gô_∑th
("config"));

392 i‡(
home
) {

393 *
u£r_c⁄fig
 = 
	`x°rdup
(
	`mk∑th
("%s/.gôc⁄fig", 
home
));

394 i‡(!
	`ac˚ss
(
u£r_c⁄fig
, 
R_OK
))

395 
ªt
 = 
	`gô_c⁄fig_‰om_fûe
(
‚
, 
u£r_c⁄fig
);

396 
	`‰ì
(
u£r_c⁄fig
);

399 
ªt
 +
	`gô_c⁄fig_‰om_fûe
(
‚
, 
fûíame
);

400 
	`‰ì
(
ªpo_c⁄fig
);

401  
ªt
;

402 
	}
}

408 
	#MAX_MATCHES
 512

	)

411 
	mba£Àn
;

412 * 
	mkey
;

413 
	mdo_nŸ_m©ch
;

414 
ªgex_t
* 
	mvÆue_ªgex
;

415 
	mmu…i_ª∂a˚
;

416 
off_t
 
	moff£t
[
MAX_MATCHES
];

417 íum { 
	mSTART
, 
	mSECTION_SEEN
, 
	mSECTION_END_SEEN
, 
	mKEY_SEEN
 } 
	m°©e
;

418 
	m£í
;

419 } 
	g°‹e
;

421 
	$m©ches
(c⁄° * 
key
, c⁄° * 
vÆue
)

423  !
	`°rcmp
(
key
, 
°‹e
.key) &&

424 (
°‹e
.
vÆue_ªgex
 =
NULL
 ||

425 (
°‹e
.
do_nŸ_m©ch
 ^

426 !
	`ªgexec
(
°‹e
.
vÆue_ªgex
, 
vÆue
, 0, 
NULL
, 0)));

427 
	}
}

429 
	$°‹e_aux
(c⁄° * 
key
, c⁄° * 
vÆue
)

431 
°‹e
.
°©e
) {

432 
KEY_SEEN
:

433 i‡(
	`m©ches
(
key
, 
vÆue
)) {

434 i‡(
°‹e
.
£í
 =1 && st‹e.
mu…i_ª∂a˚
 == 0) {

435 
	`Ârötf
(
°dîr
,

437 
key
);

438 } i‡(
°‹e
.
£í
 >
MAX_MATCHES
) {

439 
	`Ârötf
(
°dîr
, "Too many matches\n");

443 
°‹e
.
off£t
[°‹e.
£í
] = 
	`·ñl
(
c⁄fig_fûe
);

444 
°‹e
.
£í
++;

447 
SECTION_SEEN
:

448 i‡(
	`°∫cmp
(
key
, 
°‹e
.key, st‹e.
ba£Àn
+1)) {

449 
°‹e
.
°©e
 = 
SECTION_END_SEEN
;

453 
°‹e
.
off£t
[°‹e.
£í
] = 
	`·ñl
(
c⁄fig_fûe
);

455 
SECTION_END_SEEN
:

456 
START
:

457 i‡(
	`m©ches
(
key
, 
vÆue
)) {

458 
°‹e
.
off£t
[°‹e.
£í
] = 
	`·ñl
(
c⁄fig_fûe
);

459 
°‹e
.
°©e
 = 
KEY_SEEN
;

460 
°‹e
.
£í
++;

462 i‡(
	`°ºchr
(
key
, '.'Ë- key =
°‹e
.
ba£Àn
 &&

463 !
	`°∫cmp
(
key
, 
°‹e
.key, st‹e.
ba£Àn
)) {

464 
°‹e
.
°©e
 = 
SECTION_SEEN
;

465 
°‹e
.
off£t
[°‹e.
£í
] = 
	`·ñl
(
c⁄fig_fûe
);

470 
	}
}

472 
	$wrôe_îr‹
()

474 
	`Ârötf
(
°dîr
, "FailedÅo writeÇew configuration file\n");

478 
	}
}

480 
	$°‹e_wrôe_£˘i⁄
(
fd
, c⁄° * 
key
)

482 c⁄° *
dŸ
 = 
	`°rchr
(
key
, '.');

483 
Àn1
 = 
°‹e
.
ba£Àn
, 
Àn2
 = -1;

485 
dŸ
 = 
	`°rchr
(
key
, '.');

486 i‡(
dŸ
) {

487 
dŸÀn
 = 
dŸ
 - 
key
;

488 i‡(
dŸÀn
 < 
Àn1
) {

489 
Àn2
 = 
Àn1
 - 
dŸÀn
 - 1;

490 
Àn1
 = 
dŸÀn
;

494 i‡(
	`wrôe_ö_fuŒ
(
fd
, "[", 1) != 1 ||

495 
	`wrôe_ö_fuŒ
(
fd
, 
key
, 
Àn1
) !=Üen1)

497 i‡(
Àn2
 >= 0) {

498 i‡(
	`wrôe_ö_fuŒ
(
fd
, " \"", 2) != 2)

500 --
Àn2
 >= 0) {

501 
c
 = *++
dŸ
;

502 i‡(
c
 == '"')

503 i‡(
	`wrôe_ö_fuŒ
(
fd
, "\\", 1) != 1)

505 i‡(
	`wrôe_ö_fuŒ
(
fd
, &
c
, 1) != 1)

508 i‡(
	`wrôe_ö_fuŒ
(
fd
, "\"", 1) != 1)

511 i‡(
	`wrôe_ö_fuŒ
(
fd
, "]\n", 2) != 2)

515 
	}
}

517 
	$°‹e_wrôe_∑ú
(
fd
, c⁄° * 
key
, c⁄° * 
vÆue
)

519 
i
;

520 
Àngth
 = 
	`°æí
(
key
+
°‹e
.
ba£Àn
+1);

521 
quŸe
 = 0;

524 i‡(
vÆue
[0] == ' ')

525 
quŸe
 = 1;

526 
i
 = 0; 
vÆue
[i]; i++)

527 i‡(
vÆue
[
i
] == ';' || value[i] == '#')

528 
quŸe
 = 1;

529 i‡(
vÆue
[
i
-1] == ' ')

530 
quŸe
 = 1;

532 i‡(
	`wrôe_ö_fuŒ
(
fd
, "\t", 1) != 1 ||

533 
	`wrôe_ö_fuŒ
(
fd
, 
key
+
°‹e
.
ba£Àn
+1, 
Àngth
) !=Üength ||

534 
	`wrôe_ö_fuŒ
(
fd
, " = ", 3) != 3)

536 i‡(
quŸe
 && 
	`wrôe_ö_fuŒ
(
fd
, "\"", 1) != 1)

538 
i
 = 0; 
vÆue
[i]; i++)

539 
vÆue
[
i
]) {

541 i‡(
	`wrôe_ö_fuŒ
(
fd
, "\\n", 2) != 2)

545 i‡(
	`wrôe_ö_fuŒ
(
fd
, "\\t", 2) != 2)

550 i‡(
	`wrôe_ö_fuŒ
(
fd
, "\\", 1) != 1)

553 i‡(
	`wrôe_ö_fuŒ
(
fd
, 
vÆue
+
i
, 1) != 1)

557 i‡(
quŸe
 && 
	`wrôe_ö_fuŒ
(
fd
, "\"", 1) != 1)

559 i‡(
	`wrôe_ö_fuŒ
(
fd
, "\n", 1) != 1)

562 
	}
}

564 
	$föd_begönög_of_löe
(c⁄° * 
c⁄ã¡s
, 
size
,

565 
off£t_
, * 
found_bøckë
)

567 
equÆ_off£t
 = 
size
, 
bøckë_off£t
 = size;

568 
off£t
;

570 
off£t
 = 
off£t_
-2; offset > 0

571 && 
c⁄ã¡s
[
off£t
] != '\n'; offset--)

572 
c⁄ã¡s
[
off£t
]) {

573 '=': 
equÆ_off£t
 = 
off£t
; ;

574 ']': 
bøckë_off£t
 = 
off£t
; ;

576 i‡(
bøckë_off£t
 < 
equÆ_off£t
) {

577 *
found_bøckë
 = 1;

578 
off£t
 = 
bøckë_off£t
+1;

580 
off£t
++;

582  
off£t
;

583 
	}
}

585 
	$gô_c⁄fig_£t
(c⁄° * 
key
, c⁄° * 
vÆue
)

587  
	`gô_c⁄fig_£t_mu…iv¨
(
key
, 
vÆue
, 
NULL
, 0);

588 
	}
}

613 
	$gô_c⁄fig_£t_mu…iv¨
(c⁄° * 
key
, c⁄° * 
vÆue
,

614 c⁄° * 
vÆue_ªgex
, 
mu…i_ª∂a˚
)

616 
i
, 
dŸ
;

617 
fd
 = -1, 
ö_fd
;

618 
ªt
;

619 * 
c⁄fig_fûíame
;

620 * 
lock_fûe
;

621 c⁄° * 
œ°_dŸ
 = 
	`°ºchr
(
key
, '.');

623 
c⁄fig_fûíame
 = 
	`gëív
(
CONFIG_ENVIRONMENT
);

624 i‡(!
c⁄fig_fûíame
) {

625 
c⁄fig_fûíame
 = 
	`gëív
(
CONFIG_LOCAL_ENVIRONMENT
);

626 i‡(!
c⁄fig_fûíame
)

627 
c⁄fig_fûíame
 = 
	`gô_∑th
("config");

629 
c⁄fig_fûíame
 = 
	`x°rdup
(config_filename);

630 
lock_fûe
 = 
	`x°rdup
(
	`mk∑th
("%s.lock", 
c⁄fig_fûíame
));

637 i‡(
œ°_dŸ
 =
NULL
) {

638 
	`Ârötf
(
°dîr
, "key d€†nŸ c⁄èöá se˘i⁄: %s\n", 
key
);

639 
ªt
 = 2;

640 
out_‰ì
;

642 
°‹e
.
ba£Àn
 = 
œ°_dŸ
 - 
key
;

644 
°‹e
.
mu…i_ª∂a˚
 = multi_replace;

649 
°‹e
.
key
 = 
	`xmÆloc
(
	`°æí
(key) + 1);

650 
dŸ
 = 0;

651 
i
 = 0; 
key
[i]; i++) {

652 
c
 = 
key
[
i
];

653 i‡(
c
 == '.')

654 
dŸ
 = 1;

656 i‡(!
dŸ
 || 
i
 > 
°‹e
.
ba£Àn
) {

657 i‡(!
	`iskeych¨
(
c
Ë|| (
i
 =
°‹e
.
ba£Àn
+1 && !
	`ißÕha
(c))) {

658 
	`Ârötf
(
°dîr
, "övÆid key: %s\n", 
key
);

659 
	`‰ì
(
°‹e
.
key
);

660 
ªt
 = 1;

661 
out_‰ì
;

663 
c
 = 
	`tﬁowî
(c);

664 } i‡(
c
 == '\n') {

665 
	`Ârötf
(
°dîr
, "övÆid key (√wlöe): %s\n", 
key
);

666 
	`‰ì
(
°‹e
.
key
);

667 
ªt
 = 1;

668 
out_‰ì
;

670 
°‹e
.
key
[
i
] = 
c
;

672 
°‹e
.
key
[
i
] = 0;

678 
fd
 = 
	`›í
(
lock_fûe
, 
O_WRONLY
 | 
O_CREAT
 | 
O_EXCL
, 0666);

679 i‡(
fd
 < 0 || 
	`adju°_sh¨ed_≥rm
(
lock_fûe
)) {

680 
	`Ârötf
(
°dîr
, "couldÇotÜock config file\n");

681 
	`‰ì
(
°‹e
.
key
);

682 
ªt
 = -1;

683 
out_‰ì
;

689 
ö_fd
 = 
	`›í
(
c⁄fig_fûíame
, 
O_RDONLY
);

690 i‡–
ö_fd
 < 0 ) {

691 
	`‰ì
(
°‹e
.
key
);

693 i‡–
ENOENT
 !
î∫o
 ) {

694 
	`îr‹
("›íög %s: %s", 
c⁄fig_fûíame
,

695 
	`°ªº‹
(
î∫o
));

696 
ªt
 = 3;

697 
out_‰ì
;

700 i‡(
vÆue
 =
NULL
) {

701 
ªt
 = 5;

702 
out_‰ì
;

705 
°‹e
.
key
 = (*)key;

706 i‡(!
	`°‹e_wrôe_£˘i⁄
(
fd
, 
key
) ||

707 !
	`°‹e_wrôe_∑ú
(
fd
, 
key
, 
vÆue
))

708 
wrôe_îr_out
;

710 
°©
 
°
;

711 * 
c⁄ã¡s
;

712 
i
, 
c›y_begö
, 
c›y_íd
, 
√w_löe
 = 0;

714 i‡(
vÆue_ªgex
 =
NULL
)

715 
°‹e
.
vÆue_ªgex
 = 
NULL
;

717 i‡(
vÆue_ªgex
[0] == '!') {

718 
°‹e
.
do_nŸ_m©ch
 = 1;

719 
vÆue_ªgex
++;

721 
°‹e
.
do_nŸ_m©ch
 = 0;

723 
°‹e
.
vÆue_ªgex
 = (
ªgex_t
*)
	`xmÆloc
((regex_t));

724 i‡(
	`ªgcomp
(
°‹e
.
vÆue_ªgex
, value_regex,

725 
REG_EXTENDED
)) {

726 
	`Ârötf
(
°dîr
, "InvalidÖattern: %s\n",

727 
vÆue_ªgex
);

728 
	`‰ì
(
°‹e
.
vÆue_ªgex
);

729 
ªt
 = 6;

730 
out_‰ì
;

734 
°‹e
.
off£t
[0] = 0;

735 
°‹e
.
°©e
 = 
START
;

736 
°‹e
.
£í
 = 0;

744 i‡(
	`gô_c⁄fig_‰om_fûe
(
°‹e_aux
, 
c⁄fig_fûíame
)) {

745 
	`Ârötf
(
°dîr
, "invalid config file\n");

746 
	`‰ì
(
°‹e
.
key
);

747 i‡(
°‹e
.
vÆue_ªgex
 !
NULL
) {

748 
	`ªg‰ì
(
°‹e
.
vÆue_ªgex
);

749 
	`‰ì
(
°‹e
.
vÆue_ªgex
);

751 
ªt
 = 3;

752 
out_‰ì
;

755 
	`‰ì
(
°‹e
.
key
);

756 i‡(
°‹e
.
vÆue_ªgex
 !
NULL
) {

757 
	`ªg‰ì
(
°‹e
.
vÆue_ªgex
);

758 
	`‰ì
(
°‹e
.
vÆue_ªgex
);

762 i‡((
°‹e
.
£í
 =0 && 
vÆue
 =
NULL
) ||

763 (
°‹e
.
£í
 > 1 && 
mu…i_ª∂a˚
 == 0)) {

764 
ªt
 = 5;

765 
out_‰ì
;

768 
	`f°©
(
ö_fd
, &
°
);

769 
c⁄ã¡s
 = 
	`xmm≠
(
NULL
, 
°
.
°_size
, 
PROT_READ
,

770 
MAP_PRIVATE
, 
ö_fd
, 0);

771 
	`˛o£
(
ö_fd
);

773 i‡(
°‹e
.
£í
 == 0)

774 
°‹e
.
£í
 = 1;

776 
i
 = 0, 
c›y_begö
 = 0; i < 
°‹e
.
£í
; i++) {

777 i‡(
°‹e
.
off£t
[
i
] == 0) {

778 
°‹e
.
off£t
[
i
] = 
c›y_íd
 = 
°
.
°_size
;

779 } i‡(
°‹e
.
°©e
 !
KEY_SEEN
) {

780 
c›y_íd
 = 
°‹e
.
off£t
[
i
];

782 
c›y_íd
 = 
	`föd_begönög_of_löe
(

783 
c⁄ã¡s
, 
°
.
°_size
,

784 
°‹e
.
off£t
[
i
]-2, &
√w_löe
);

787 i‡(
c›y_íd
 > 
c›y_begö
) {

788 i‡(
	`wrôe_ö_fuŒ
(
fd
, 
c⁄ã¡s
 + 
c›y_begö
,

789 
c›y_íd
 - 
c›y_begö
) <

790 
c›y_íd
 - 
c›y_begö
)

791 
wrôe_îr_out
;

792 i‡(
√w_löe
 &&

793 
	`wrôe_ö_fuŒ
(
fd
, "\n", 1) != 1)

794 
wrôe_îr_out
;

796 
c›y_begö
 = 
°‹e
.
off£t
[
i
];

800 i‡(
vÆue
 !
NULL
) {

801 i‡(
°‹e
.
°©e
 =
START
) {

802 i‡(!
	`°‹e_wrôe_£˘i⁄
(
fd
, 
key
))

803 
wrôe_îr_out
;

805 i‡(!
	`°‹e_wrôe_∑ú
(
fd
, 
key
, 
vÆue
))

806 
wrôe_îr_out
;

810 i‡(
c›y_begö
 < 
°
.
°_size
)

811 i‡(
	`wrôe_ö_fuŒ
(
fd
, 
c⁄ã¡s
 + 
c›y_begö
,

812 
°
.
°_size
 - 
c›y_begö
) <

813 
°
.
°_size
 - 
c›y_begö
)

814 
wrôe_îr_out
;

816 
	`munm≠
(
c⁄ã¡s
, 
°
.
°_size
);

817 
	`u∆ök
(
c⁄fig_fûíame
);

820 i‡(
	`ª«me
(
lock_fûe
, 
c⁄fig_fûíame
) < 0) {

821 
	`Ârötf
(
°dîr
, "CouldÇotÑenameÅheÜock file?\n");

822 
ªt
 = 4;

823 
out_‰ì
;

826 
ªt
 = 0;

828 
out_‰ì
:

829 i‡(0 <
fd
)

830 
	`˛o£
(
fd
);

831 
	`‰ì
(
c⁄fig_fûíame
);

832 i‡(
lock_fûe
) {

833 
	`u∆ök
(
lock_fûe
);

834 
	`‰ì
(
lock_fûe
);

836  
ªt
;

838 
wrôe_îr_out
:

839 
ªt
 = 
	`wrôe_îr‹
();

840 
out_‰ì
;

842 
	}
}

844 
	$gô_c⁄fig_ª«me_£˘i⁄
(c⁄° *
ﬁd_«me
, c⁄° *
√w_«me
)

846 
ªt
 = 0;

847 *
c⁄fig_fûíame
;

848 
lock_fûe
 *
lock
 = 
	`xˇŒoc
((lock_file), 1);

849 
out_fd
;

850 
buf
[1024];

852 
c⁄fig_fûíame
 = 
	`gëív
(
CONFIG_ENVIRONMENT
);

853 i‡(!
c⁄fig_fûíame
) {

854 
c⁄fig_fûíame
 = 
	`gëív
(
CONFIG_LOCAL_ENVIRONMENT
);

855 i‡(!
c⁄fig_fûíame
)

856 
c⁄fig_fûíame
 = 
	`gô_∑th
("config");

858 
c⁄fig_fûíame
 = 
	`x°rdup
(config_filename);

859 
out_fd
 = 
	`hﬁd_lock_fûe_f‹_upd©e
(
lock
, 
c⁄fig_fûíame
, 0);

860 i‡(
out_fd
 < 0) {

861 
ªt
 = 
	`îr‹
("CouldÇotÜock config file!");

862 
out
;

865 i‡(!(
c⁄fig_fûe
 = 
	`f›í
(
c⁄fig_fûíame
, "rb"))) {

866 
ªt
 = 
	`îr‹
("CouldÇot open config file!");

867 
out
;

870 
	`fgës
(
buf
, (buf), 
c⁄fig_fûe
)) {

871 
i
;

872 
Àngth
;

873 
i
 = 0; 
buf
[i] && 
	`is•a˚
(buf[i]); i++)

875 i‡(
buf
[
i
] == '[') {

877 
j
 = 0, 
dŸ
 = 0;

878 
i
++; 
buf
[i] && buf[i] != ']'; i++) {

879 i‡(!
dŸ
 && 
	`is•a˚
(
buf
[
i
])) {

880 
dŸ
 = 1;

881 i‡(
ﬁd_«me
[
j
++] != '.')

883 
i
++; 
	`is•a˚
(
buf
[i]); i++)

885 i‡(
buf
[
i
] != '"')

889 i‡(
buf
[
i
] ='\\' && 
dŸ
)

890 
i
++;

891 i‡(
buf
[
i
] ='"' && 
dŸ
) {

892 
i
++; 
	`is•a˚
(
buf
[i]); i++)

896 i‡(
buf
[
i
] !
ﬁd_«me
[
j
++])

899 i‡(
buf
[
i
] =']' && 
ﬁd_«me
[
j
] == 0) {

901 
ªt
++;

902 
°‹e
.
ba£Àn
 = 
	`°æí
(
√w_«me
);

903 i‡(!
	`°‹e_wrôe_£˘i⁄
(
out_fd
, 
√w_«me
)) {

904 
ªt
 = 
	`wrôe_îr‹
();

905 
out
;

910 
Àngth
 = 
	`°æí
(
buf
);

911 i‡(
	`wrôe_ö_fuŒ
(
out_fd
, 
buf
, 
Àngth
) !=Üength) {

912 
ªt
 = 
	`wrôe_îr‹
();

913 
out
;

916 
	`f˛o£
(
c⁄fig_fûe
);

917 i‡(
	`˛o£
(
out_fd
Ë|| 
	`commô_lock_fûe
(
lock
) < 0)

918 
ªt
 = 
	`îr‹
("Cannot commit config file!");

919 
out
:

920 
	`‰ì
(
c⁄fig_fûíame
);

921  
ªt
;

922 
	}
}

	@connect.c

1 
	~"gô-com∑t-utû.h
"

2 
	~"ˇche.h
"

3 
	~"pkt-löe.h
"

4 
	~"quŸe.h
"

5 
	~"ªfs.h
"

7 *
	g£rvî_ˇ∑bûôõs
;

9 
	$check_ªf
(c⁄° *
«me
, 
Àn
, 
Êags
)

11 i‡(!
Êags
)

14 i‡(
Àn
 < 5 || 
	`memcmp
(
«me
, "refs/", 5))

18 
«me
 += 5;

19 
Àn
 -= 5;

22 i‡((
Êags
 & 
REF_NORMAL
Ë&& 
	`check_ªf_f‹m©
(
«me
) < 0)

26 i‡((
Êags
 & 
REF_HEADS
Ë&& !
	`memcmp
(
«me
, "heads/", 6))

30 i‡((
Êags
 & 
REF_TAGS
Ë&& !
	`memcmp
(
«me
, "tags/", 5))

34  !(
Êags
 & ~
REF_NORMAL
);

35 
	}
}

40 
ªf
 **
	$gë_ªmŸe_hóds
(
ö
, 
ªf
 **
li°
,

41 
ƒ_m©ch
, **
m©ch
,

42 
Êags
)

44 *
li°
 = 
NULL
;

46 
ªf
 *ref;

47 
ﬁd_sha1
[20];

48 
buf„r
[1000];

49 *
«me
;

50 
Àn
, 
«me_Àn
;

52 
Àn
 = 
	`∑ckë_ªad_löe
(
ö
, 
buf„r
, (buffer));

53 i‡(!
Àn
)

55 i‡(
buf„r
[
Àn
-1] == '\n')

56 
buf„r
[--
Àn
] = 0;

58 i‡(
Àn
 < 42 || 
	`gë_sha1_hex
(
buf„r
, 
ﬁd_sha1
) || buffer[40] != ' ')

59 
	`dõ
("¥ŸocﬁÉº‹:Éx≥˘ed sha/ªf, gŸ '%s'", 
buf„r
);

60 
«me
 = 
buf„r
 + 41;

62 
«me_Àn
 = 
	`°æí
(
«me
);

63 i‡(
Àn
 !
«me_Àn
 + 41) {

64 i‡(
£rvî_ˇ∑bûôõs
)

65 
	`‰ì
(
£rvî_ˇ∑bûôõs
);

66 
£rvî_ˇ∑bûôõs
 = 
	`x°rdup
(
«me
 + 
«me_Àn
 + 1);

69 i‡(!
	`check_ªf
(
«me
, 
«me_Àn
, 
Êags
))

71 i‡(
ƒ_m©ch
 && !
	`∑th_m©ch
(
«me
,Çr_m©ch, 
m©ch
))

73 
ªf
 = 
	`xˇŒoc
(1, (*ªfË+ 
Àn
 - 40);

74 
	`hash˝y
(
ªf
->
ﬁd_sha1
, old_sha1);

75 
	`mem˝y
(
ªf
->
«me
, 
buf„r
 + 41, 
Àn
 - 40);

76 *
li°
 = 
ªf
;

77 
li°
 = &
ªf
->
√xt
;

79  
li°
;

80 
	}
}

82 
	$£rvî_suµ‹ts
(c⁄° *
„©uª
)

84  
£rvî_ˇ∑bûôõs
 &&

85 
	`°r°r
(
£rvî_ˇ∑bûôõs
, 
„©uª
Ë!
NULL
;

86 
	}
}

88 
	$gë_ack
(
fd
, *
ªsu…_sha1
)

90 
löe
[1000];

91 
Àn
 = 
	`∑ckë_ªad_löe
(
fd
, 
löe
, (line));

93 i‡(!
Àn
)

94 
	`dõ
("git-fetch-pack:Éxpected ACK/NAK, got EOF");

95 i‡(
löe
[
Àn
-1] == '\n')

96 
löe
[--
Àn
] = 0;

97 i‡(!
	`°rcmp
(
löe
, "NAK"))

99 i‡(!
	`°∫cmp
(
löe
, "ACK ", 4)) {

100 i‡(!
	`gë_sha1_hex
(
löe
+4, 
ªsu…_sha1
)) {

101 i‡(
	`°r°r
(
löe
+45, "continue"))

106 
	`dõ
("gô-„tch_∑ck:Éx≥˘ed ACK/NAK, gŸ '%s'", 
löe
);

107 
	}
}

109 
	$∑th_m©ch
(c⁄° *
∑th
, 
ƒ
, **
m©ch
)

111 
i
;

112 
∑thÀn
 = 
	`°æí
(
∑th
);

114 
i
 = 0; i < 
ƒ
; i++) {

115 *
s
 = 
m©ch
[
i
];

116 
Àn
 = 
	`°æí
(
s
);

118 i‡(!
Àn
 ||Üí > 
∑thÀn
)

120 i‡(
	`memcmp
(
∑th
 + 
∑thÀn
 - 
Àn
, 
s
,Üen))

122 i‡(
∑thÀn
 > 
Àn
 && 
∑th
[pathlen -Üen - 1] != '/')

124 *
s
 = 0;

125  (
i
 + 1);

128 
	}
}

130 
	sªf•ec
 {

131 *
	m§c
;

132 *
	md°
;

133 
	mf‹˚
;

143 
ªf•ec
 *
	$∑r£_ªf_•ec
(
ƒ_ªf•ec
, **
ªf•ec
)

145 
i
;

146 
ªf•ec
 *
rs
 = 
	`xˇŒoc
((*rs), (
ƒ_ªf•ec
 + 1));

147 
i
 = 0; i < 
ƒ_ªf•ec
; i++) {

148 *
•
, *
dp
, *
ï
;

149 
•
 = 
ªf•ec
[
i
];

150 i‡(*
•
 == '+') {

151 
rs
[
i
].
f‹˚
 = 1;

152 
•
++;

154 
ï
 = 
	`°rchr
(
•
, ':');

155 i‡(
ï
) {

156 
dp
 = 
ï
 + 1;

157 *
ï
 = 0;

160 
dp
 = 
•
;

161 
rs
[
i
].
§c
 = 
•
;

162 
rs
[
i
].
d°
 = 
dp
;

164 
rs
[
ƒ_ªf•ec
].
§c
 =Ñs[ƒ_ªf•ec].
d°
 = 
NULL
;

165  
rs
;

166 
	}
}

168 
	$cou¡_ªf•ec_m©ch
(c⁄° *
∑âîn
,

169 
ªf
 *
ªfs
,

170 
ªf
 **
m©ched_ªf
)

172 
∑éí
 = 
	`°æí
(
∑âîn
);

173 
ªf
 *
m©ched_wók
 = 
NULL
;

174 
ªf
 *
m©ched
 = 
NULL
;

175 
wók_m©ch
 = 0;

176 
m©ch
 = 0;

178 
wók_m©ch
 = 
m©ch
 = 0; 
ªfs
;Ñef†ªfs->
√xt
) {

179 *
«me
 = 
ªfs
->name;

180 
«mñí
 = 
	`°æí
(
«me
);

181 
wók_m©ch
;

183 i‡(
«mñí
 < 
∑éí
 ||

184 
	`memcmp
(
«me
 + 
«mñí
 - 
∑éí
, 
∑âîn
,Öatlen))

186 i‡(
«mñí
 !
∑éí
 && 
«me
[namelen -Öatlen - 1] != '/')

197 i‡(
«mñí
 !
∑éí
 &&

198 
∑éí
 !
«mñí
 - 5 &&

199 
	`°∫cmp
(
«me
, "refs/heads/", 11) &&

200 
	`°∫cmp
(
«me
, "refs/tags/", 10)) {

208 
m©ched_wók
 = 
ªfs
;

209 
wók_m©ch
++;

212 
m©ched
 = 
ªfs
;

213 
m©ch
++;

216 i‡(!
m©ched
) {

217 *
m©ched_ªf
 = 
m©ched_wók
;

218  
wók_m©ch
;

221 *
m©ched_ªf
 = 
m©ched
;

222  
m©ch
;

224 
	}
}

226 
	$lök_d°_èû
(
ªf
 *ªf, ª‡***
èû
)

228 **
èû
 = 
ªf
;

229 *
èû
 = &
ªf
->
√xt
;

230 **
èû
 = 
NULL
;

231 
	}
}

233 
ªf
 *
	$åy_ex∂icô_obje˘_«me
(c⁄° *
«me
)

235 
sha1
[20];

236 
ªf
 *ref;

237 
Àn
;

239 i‡(!*
«me
) {

240 
ªf
 = 
	`xˇŒoc
(1, (*ref) + 20);

241 
	`°r˝y
(
ªf
->
«me
, "(delete)");

242 
	`hash˛r
(
ªf
->
√w_sha1
);

243  
ªf
;

245 i‡(
	`gë_sha1
(
«me
, 
sha1
))

246  
NULL
;

247 
Àn
 = 
	`°æí
(
«me
) + 1;

248 
ªf
 = 
	`xˇŒoc
(1, (*ªfË+ 
Àn
);

249 
	`mem˝y
(
ªf
->
«me
,Çame, 
Àn
);

250 
	`hash˝y
(
ªf
->
√w_sha1
, 
sha1
);

251  
ªf
;

252 
	}
}

254 
	$m©ch_ex∂icô_ªfs
(
ªf
 *
§c
, ª‡*
d°
,

255 
ªf
 ***
d°_èû
, 
ªf•ec
 *
rs
)

257 
i
, 
îrs
;

258 
i
 = 
îrs
 = 0; 
rs
[i].
§c
; i++) {

259 
ªf
 *
m©ched_§c
, *
m©ched_d°
;

261 
m©ched_§c
 = 
m©ched_d°
 = 
NULL
;

262 
	`cou¡_ªf•ec_m©ch
(
rs
[
i
].
§c
, src, &
m©ched_§c
)) {

270 
m©ched_§c
 = 
	`åy_ex∂icô_obje˘_«me
(
rs
[
i
].
§c
);

271 i‡(
m©ched_§c
)

273 
îrs
 = 1;

274 
	`îr‹
("srcÑefspec %s doesÇot matchány.",

275 
rs
[
i
].
§c
);

278 
îrs
 = 1;

279 
	`îr‹
("srcÑefspec %s matches moreÅhan one.",

280 
rs
[
i
].
§c
);

283 
	`cou¡_ªf•ec_m©ch
(
rs
[
i
].
d°
, d°, &
m©ched_d°
)) {

287 i‡(!
	`memcmp
(
rs
[
i
].
d°
, "refs/", 5)) {

288 
Àn
 = 
	`°æí
(
rs
[
i
].
d°
) + 1;

289 
m©ched_d°
 = 
	`xˇŒoc
(1, (*
d°
Ë+ 
Àn
);

290 
	`mem˝y
(
m©ched_d°
->
«me
, 
rs
[
i
].
d°
, 
Àn
);

291 
	`lök_d°_èû
(
m©ched_d°
, 
d°_èû
);

293 i‡(!
	`°rcmp
(
rs
[
i
].
§c
,Ñs[i].
d°
) &&

294 
m©ched_§c
) {

298 
Àn
 = 
	`°æí
(
m©ched_§c
->
«me
) + 1;

299 
m©ched_d°
 = 
	`xˇŒoc
(1, (*
d°
Ë+ 
Àn
);

300 
	`mem˝y
(
m©ched_d°
->
«me
, 
m©ched_§c
->name,

301 
Àn
);

302 
	`lök_d°_èû
(
m©ched_d°
, 
d°_èû
);

305 
îrs
 = 1;

306 
	`îr‹
("dstÑefspec %s doesÇot matchány "

308 "nŸ sèπ wôhÑefs/.", 
rs
[
i
].
d°
);

312 
îrs
 = 1;

313 
	`îr‹
("dstÑefspec %s matches moreÅhan one.",

314 
rs
[
i
].
d°
);

317 i‡(
îrs
)

319 i‡(
m©ched_d°
->
≥î_ªf
) {

320 
îrs
 = 1;

321 
	`îr‹
("dstÑef %sÑeceives from moreÅhan one src.",

322 
m©ched_d°
->
«me
);

325 
m©ched_d°
->
≥î_ªf
 = 
m©ched_§c
;

326 
m©ched_d°
->
f‹˚
 = 
rs
[
i
].force;

329  -
îrs
;

330 
	}
}

332 
ªf
 *
	$föd_ªf_by_«me
(
ªf
 *
li°
, c⁄° *
«me
)

334  ; 
li°
;Üi° =Üi°->
√xt
)

335 i‡(!
	`°rcmp
(
li°
->
«me
,Çame))

336  
li°
;

337  
NULL
;

338 
	}
}

340 
	$m©ch_ªfs
(
ªf
 *
§c
, ª‡*
d°
, ª‡***
d°_èû
,

341 
ƒ_ªf•ec
, **
ªf•ec
, 
Æl
)

343 
ªf•ec
 *
rs
 = 
	`∑r£_ªf_•ec
(
ƒ_ªf•ec
,Ñefspec);

345 i‡(
ƒ_ªf•ec
)

346  
	`m©ch_ex∂icô_ªfs
(
§c
, 
d°
, 
d°_èû
, 
rs
);

349  ; 
§c
; sr¯§c->
√xt
) {

350 
ªf
 *
d°_≥î
;

351 i‡(
§c
->
≥î_ªf
)

353 
d°_≥î
 = 
	`föd_ªf_by_«me
(
d°
, 
§c
->
«me
);

354 i‡((
d°_≥î
 && d°_≥î->
≥î_ªf
Ë|| (!d°_≥î && !
Æl
))

356 i‡(!
d°_≥î
) {

358 
Àn
 = 
	`°æí
(
§c
->
«me
) + 1;

359 
d°_≥î
 = 
	`xˇŒoc
(1, (*d°_≥îË+ 
Àn
);

360 
	`mem˝y
(
d°_≥î
->
«me
, 
§c
->«me, 
Àn
);

361 
	`hash˝y
(
d°_≥î
->
√w_sha1
, 
§c
->new_sha1);

362 
	`lök_d°_èû
(
d°_≥î
, 
d°_èû
);

364 
d°_≥î
->
≥î_ªf
 = 
§c
;

367 
	}
}

369 
	e¥Ÿocﬁ
 {

370 
	mPROTO_LOCAL
 = 1,

371 
	mPROTO_SSH
,

372 
	mPROTO_GIT
,

375 
¥Ÿocﬁ
 
	$gë_¥Ÿocﬁ
(c⁄° *
«me
)

377 i‡(!
	`°rcmp
(
«me
, "ssh"))

378  
PROTO_SSH
;

379 i‡(!
	`°rcmp
(
«me
, "git"))

380  
PROTO_GIT
;

381 i‡(!
	`°rcmp
(
«me
, "git+ssh"))

382  
PROTO_SSH
;

383 i‡(!
	`°rcmp
(
«me
, "ssh+git"))

384  
PROTO_SSH
;

385 
	`dõ
("I d⁄'àh™dÀÖrŸocﬁ '%s'", 
«me
);

386 
	}
}

388 
	#STR_
(
s
Ë#s

	)

389 
	#STR
(
s
Ë
	`STR_
(s)

	)

391 #i‚de‡
NO_IPV6


396 
	$gô_t˝_c⁄√˘_sock
(*
ho°
)

398 
sockfd
 = -1, 
ßved_î∫o
 = 0;

399 *
cﬁ⁄
, *
íd
;

400 c⁄° *
p‹t
 = 
	`STR
(
DEFAULT_GIT_PORT
);

401 
addröfo
 
höts
, *
ai0
, *
ai
;

402 
gai
;

404 i‡(
ho°
[0] == '[') {

405 
íd
 = 
	`°rchr
(
ho°
 + 1, ']');

406 i‡(
íd
) {

407 *
íd
 = 0;

408 
íd
++;

409 
ho°
++;

411 
íd
 = 
ho°
;

413 
íd
 = 
ho°
;

414 
cﬁ⁄
 = 
	`°rchr
(
íd
, ':');

416 i‡(
cﬁ⁄
) {

417 *
cﬁ⁄
 = 0;

418 
p‹t
 = 
cﬁ⁄
 + 1;

421 
	`mem£t
(&
höts
, 0, (hints));

422 
höts
.
ai_sockty≥
 = 
SOCK_STREAM
;

423 
höts
.
ai_¥Ÿocﬁ
 = 
IPPROTO_TCP
;

425 
gai
 = 
	`gëaddröfo
(
ho°
, 
p‹t
, &
höts
, &
ai
);

426 i‡(
gai
)

427 
	`dõ
("U«bÀÅÿlook u∞%†(%s)", 
ho°
, 
	`gai_°ªº‹
(
gai
));

429 
ai0
 = 
ai
;ái;áòai->
ai_√xt
) {

430 
sockfd
 = 
	`sockë
(
ai
->
ai_Ámûy
,

431 
ai
->
ai_sockty≥
,ái->
ai_¥Ÿocﬁ
);

432 i‡(
sockfd
 < 0) {

433 
ßved_î∫o
 = 
î∫o
;

436 i‡(
	`c⁄√˘
(
sockfd
, 
ai
->
ai_addr
,ái->
ai_addæí
) < 0) {

437 
ßved_î∫o
 = 
î∫o
;

438 
	`˛o£
(
sockfd
);

439 
sockfd
 = -1;

445 
	`‰ìaddröfo
(
ai0
);

447 i‡(
sockfd
 < 0)

448 
	`dõ
("u«bÀÅÿc⁄√˘á sockë (%s)", 
	`°ªº‹
(
ßved_î∫o
));

450  
sockfd
;

451 
	}
}

458 
	$gô_t˝_c⁄√˘_sock
(*
ho°
)

460 
sockfd
 = -1, 
ßved_î∫o
 = 0;

461 *
cﬁ⁄
, *
íd
;

462 *
p‹t
 = 
	`STR
(
DEFAULT_GIT_PORT
), *
ï
;

463 
ho°ít
 *
he
;

464 
sockaddr_ö
 
ß
;

465 **
≠
;

466 
≈‹t
;

468 i‡(
ho°
[0] == '[') {

469 
íd
 = 
	`°rchr
(
ho°
 + 1, ']');

470 i‡(
íd
) {

471 *
íd
 = 0;

472 
íd
++;

473 
ho°
++;

475 
íd
 = 
ho°
;

477 
íd
 = 
ho°
;

478 
cﬁ⁄
 = 
	`°rchr
(
íd
, ':');

480 i‡(
cﬁ⁄
) {

481 *
cﬁ⁄
 = 0;

482 
p‹t
 = 
cﬁ⁄
 + 1;

485 
he
 = 
	`gëho°by«me
(
ho°
);

486 i‡(!
he
)

487 
	`dõ
("U«bÀÅÿlook u∞%†(%s)", 
ho°
, 
	`h°ªº‹
(
h_î∫o
));

488 
≈‹t
 = 
	`°πoul
(
p‹t
, &
ï
, 10);

489 i‡–
ï
 =
p‹t
 || *ep ) {

491 
£rvít
 *
£
 = 
	`gë£rvby«me
(
p‹t
,"tcp");

492 i‡–!
£
 )

493 
	`dõ
("Unknow¿p‹à%s\n", 
p‹t
);

494 
≈‹t
 = 
£
->
s_p‹t
;

497 
≠
 = 
he
->
h_addr_li°
; *ap;áp++) {

498 
sockfd
 = 
	`sockë
(
he
->
h_addπy≥
, 
SOCK_STREAM
, 0);

499 i‡(
sockfd
 < 0) {

500 
ßved_î∫o
 = 
î∫o
;

504 
	`mem£t
(&
ß
, 0,  sa);

505 
ß
.
sö_Ámûy
 = 
he
->
h_addπy≥
;

506 
ß
.
sö_p‹t
 = 
	`ht⁄s
(
≈‹t
);

507 
	`mem˝y
(&
ß
.
sö_addr
, *
≠
, 
he
->
h_Àngth
);

509 i‡(
	`c⁄√˘
(
sockfd
, (
sockaddr
 *)&
ß
,  sa) < 0) {

510 
ßved_î∫o
 = 
î∫o
;

511 
	`˛o£
(
sockfd
);

512 
sockfd
 = -1;

518 i‡(
sockfd
 < 0)

519 
	`dõ
("u«bÀÅÿc⁄√˘á sockë (%s)", 
	`°ªº‹
(
ßved_î∫o
));

521  
sockfd
;

522 
	}
}

527 
	$gô_t˝_c⁄√˘
(
fd
[2], *
ho°
)

529 
sockfd
 = 
	`gô_t˝_c⁄√˘_sock
(
ho°
);

531 
fd
[0] = 
sockfd
;

532 
fd
[1] = 
	`dup
(
sockfd
);

533 
	}
}

536 *
	ggô_¥oxy_comm™d
;

537 c⁄° *
	grho°_«me
;

538 
	grho°_Àn
;

540 
	$gô_¥oxy_comm™d_›ti⁄s
(c⁄° *
v¨
, c⁄° *
vÆue
)

542 i‡(!
	`°rcmp
(
v¨
, "core.gitproxy")) {

543 c⁄° *
f‹_pos
;

544 
m©chÀn
 = -1;

545 
ho°Àn
;

547 i‡(
gô_¥oxy_comm™d
)

555 
f‹_pos
 = 
	`°r°r
(
vÆue
, " for ");

556 i‡(!
f‹_pos
)

558 
m©chÀn
 = 
	`°æí
(
vÆue
);

560 
ho°Àn
 = 
	`°æí
(
f‹_pos
 + 5);

561 i‡(
rho°_Àn
 < 
ho°Àn
)

562 
m©chÀn
 = -1;

563 i‡(!
	`°∫cmp
(
f‹_pos
 + 5,

564 
rho°_«me
 + 
rho°_Àn
 - 
ho°Àn
,

565 
ho°Àn
) &&

566 ((
rho°_Àn
 =
ho°Àn
) ||

567 
rho°_«me
[
rho°_Àn
 - 
ho°Àn
 -1] == '.'))

568 
m©chÀn
 = 
f‹_pos
 - 
vÆue
;

570 
m©chÀn
 = -1;

572 i‡(0 <
m©chÀn
) {

574 i‡(
m©chÀn
 == 4 &&

575 !
	`memcmp
(
vÆue
, "none", 4))

576 
m©chÀn
 = 0;

577 
gô_¥oxy_comm™d
 = 
	`xmÆloc
(
m©chÀn
 + 1);

578 
	`mem˝y
(
gô_¥oxy_comm™d
, 
vÆue
, 
m©chÀn
);

579 
gô_¥oxy_comm™d
[
m©chÀn
] = 0;

584  
	`gô_deÁu…_c⁄fig
(
v¨
, 
vÆue
);

585 
	}
}

587 
	$gô_u£_¥oxy
(c⁄° *
ho°
)

589 
rho°_«me
 = 
ho°
;

590 
rho°_Àn
 = 
	`°æí
(
ho°
);

591 
gô_¥oxy_comm™d
 = 
	`gëív
("GIT_PROXY_COMMAND");

592 
	`gô_c⁄fig
(
gô_¥oxy_comm™d_›ti⁄s
);

593 
rho°_«me
 = 
NULL
;

594  (
gô_¥oxy_comm™d
 && *git_proxy_command);

595 
	}
}

597 
	$gô_¥oxy_c⁄√˘
(
fd
[2], *
ho°
)

599 c⁄° *
p‹t
 = 
	`STR
(
DEFAULT_GIT_PORT
);

600 *
cﬁ⁄
, *
íd
;

601 
pùefd
[2][2];

602 
pid_t
 
pid
;

604 i‡(
ho°
[0] == '[') {

605 
íd
 = 
	`°rchr
(
ho°
 + 1, ']');

606 i‡(
íd
) {

607 *
íd
 = 0;

608 
íd
++;

609 
ho°
++;

611 
íd
 = 
ho°
;

613 
íd
 = 
ho°
;

614 
cﬁ⁄
 = 
	`°rchr
(
íd
, ':');

616 i‡(
cﬁ⁄
) {

617 *
cﬁ⁄
 = 0;

618 
p‹t
 = 
cﬁ⁄
 + 1;

621 i‡(
	`pùe
(
pùefd
[0]) < 0 ||Öipe(pipefd[1]) < 0)

622 
	`dõ
("unableÅo createÖipeÖair for communication");

623 
pid
 = 
	`f‹k
();

624 i‡(!
pid
) {

625 
	`dup2
(
pùefd
[1][0], 0);

626 
	`dup2
(
pùefd
[0][1], 1);

627 
	`˛o£
(
pùefd
[0][0]);

628 
	`˛o£
(
pùefd
[0][1]);

629 
	`˛o£
(
pùefd
[1][0]);

630 
	`˛o£
(
pùefd
[1][1]);

631 
	`exe˛p
(
gô_¥oxy_comm™d
, gô_¥oxy_comm™d, 
ho°
, 
p‹t
, 
NULL
);

632 
	`dõ
("exec failed");

634 i‡(
pid
 < 0)

635 
	`dõ
("fork failed");

636 
fd
[0] = 
pùefd
[0][0];

637 
fd
[1] = 
pùefd
[1][1];

638 
	`˛o£
(
pùefd
[0][1]);

639 
	`˛o£
(
pùefd
[1][0]);

640 
	}
}

642 
	#MAX_CMD_LEN
 1024

	)

653 
pid_t
 
	$gô_c⁄√˘
(
fd
[2], *
uæ
, c⁄° *
¥og
)

655 *
ho°
, *
∑th
 = 
uæ
;

656 *
íd
;

657 
c
;

658 
pùefd
[2][2];

659 
pid_t
 
pid
;

660 
¥Ÿocﬁ
ÖrŸocﬁ = 
PROTO_LOCAL
;

661 
‰ì_∑th
 = 0;

666 
	`sig«l
(
SIGCHLD
, 
SIG_DFL
);

668 
ho°
 = 
	`°r°r
(
uæ
, "://");

669 if(
ho°
) {

670 *
ho°
 = '\0';

671 
¥Ÿocﬁ
 = 
	`gë_¥Ÿocﬁ
(
uæ
);

672 
ho°
 += 3;

673 
c
 = '/';

675 
ho°
 = 
uæ
;

676 
c
 = ':';

679 i‡(
ho°
[0] == '[') {

680 
íd
 = 
	`°rchr
(
ho°
 + 1, ']');

681 i‡(
íd
) {

682 *
íd
 = 0;

683 
íd
++;

684 
ho°
++;

686 
íd
 = 
ho°
;

688 
íd
 = 
ho°
;

690 
∑th
 = 
	`°rchr
(
íd
, 
c
);

691 i‡(
c
 == ':') {

692 i‡(
∑th
) {

693 
¥Ÿocﬁ
 = 
PROTO_SSH
;

694 *
∑th
++ = '\0';

696 
∑th
 = 
ho°
;

699 i‡(!
∑th
 || !*path)

700 
	`dõ
("NoÖath specified. See 'man git-pull' for valid url syntax");

706 i‡(
¥Ÿocﬁ
 !
PROTO_LOCAL
 && 
ho°
 !
uæ
) {

707 *
±r
 = 
∑th
;

708 i‡(
∑th
[1] == '~')

709 
∑th
++;

711 
∑th
 = 
	`x°rdup
(
±r
);

712 
‰ì_∑th
 = 1;

715 *
±r
 = '\0';

718 i‡(
¥Ÿocﬁ
 =
PROTO_GIT
) {

722 *
èrgë_ho°
 = 
	`x°rdup
(
ho°
);

723 i‡(
	`gô_u£_¥oxy
(
ho°
))

724 
	`gô_¥oxy_c⁄√˘
(
fd
, 
ho°
);

726 
	`gô_t˝_c⁄√˘
(
fd
, 
ho°
);

731 
	`∑ckë_wrôe
(
fd
[1],

733 
¥og
, 
∑th
, 0,

734 
èrgë_ho°
, 0);

735 
	`‰ì
(
èrgë_ho°
);

736 i‡(
‰ì_∑th
)

737 
	`‰ì
(
∑th
);

741 i‡(
	`pùe
(
pùefd
[0]) < 0 ||Öipe(pipefd[1]) < 0)

742 
	`dõ
("unableÅo createÖipeÖair for communication");

743 
pid
 = 
	`f‹k
();

744 i‡(
pid
 < 0)

745 
	`dõ
("unableÅo fork");

746 i‡(!
pid
) {

747 
comm™d
[
MAX_CMD_LEN
];

748 *
po¢
 = 
comm™d
;

749 
size
 = 
MAX_CMD_LEN
;

750 
of
 = 0;

752 
of
 |
	`add_to_°rög
(&
po¢
, &
size
, 
¥og
, 0);

753 
of
 |
	`add_to_°rög
(&
po¢
, &
size
, " ", 0);

754 
of
 |
	`add_to_°rög
(&
po¢
, &
size
, 
∑th
, 1);

756 i‡(
of
)

757 
	`dõ
("commandÜineÅooÜong");

759 
	`dup2
(
pùefd
[1][0], 0);

760 
	`dup2
(
pùefd
[0][1], 1);

761 
	`˛o£
(
pùefd
[0][0]);

762 
	`˛o£
(
pùefd
[0][1]);

763 
	`˛o£
(
pùefd
[1][0]);

764 
	`˛o£
(
pùefd
[1][1]);

765 i‡(
¥Ÿocﬁ
 =
PROTO_SSH
) {

766 c⁄° *
ssh
, *
ssh_ba£«me
;

767 
ssh
 = 
	`gëív
("GIT_SSH");

768 i‡(!
ssh
) ssh = "ssh";

769 
ssh_ba£«me
 = 
	`°ºchr
(
ssh
, '/');

770 i‡(!
ssh_ba£«me
)

771 
ssh_ba£«me
 = 
ssh
;

773 
ssh_ba£«me
++;

774 
	`exe˛p
(
ssh
, 
ssh_ba£«me
, 
ho°
, 
comm™d
, 
NULL
);

777 
	`un£ãnv
(
ALTERNATE_DB_ENVIRONMENT
);

778 
	`un£ãnv
(
DB_ENVIRONMENT
);

779 
	`un£ãnv
(
GIT_DIR_ENVIRONMENT
);

780 
	`un£ãnv
(
GRAFT_ENVIRONMENT
);

781 
	`un£ãnv
(
INDEX_ENVIRONMENT
);

782 
	`exe˛p
("sh", "sh", "-c", 
comm™d
, 
NULL
);

784 
	`dõ
("exec failed");

786 
fd
[0] = 
pùefd
[0][0];

787 
fd
[1] = 
pùefd
[1][1];

788 
	`˛o£
(
pùefd
[0][1]);

789 
	`˛o£
(
pùefd
[1][0]);

790 i‡(
‰ì_∑th
)

791 
	`‰ì
(
∑th
);

792  
pid
;

793 
	}
}

795 
	$föish_c⁄√˘
(
pid_t
 
pid
)

797 i‡(
pid
 == 0)

800 
	`waôpid
(
pid
, 
NULL
, 0) < 0) {

801 i‡(
î∫o
 !
EINTR
)

805 
	}
}

	@convert-objects.c

1 
	~"ˇche.h
"

2 
	~"blob.h
"

3 
	~"commô.h
"

4 
	~"åì.h
"

6 
	síåy
 {

7 
	mﬁd_sha1
[20];

8 
	m√w_sha1
[20];

9 
	mc⁄vîãd
;

12 
	#MAXOBJECTS
 (1000000)

	)

14 
íåy
 *
	gc⁄vît
[
MAXOBJECTS
];

15 
	gƒ_c⁄vît
;

17 
íåy
 * 
c⁄vît_íåy
(*
sha1
);

19 
íåy
 *
	$ö£π_√w
(*
sha1
, 
pos
)

21 
íåy
 *
√w
 = 
	`xˇŒoc
(1, (entry));

22 
	`hash˝y
(
√w
->
ﬁd_sha1
, 
sha1
);

23 
	`memmove
(
c⁄vît
 + 
pos
 + 1, c⁄vîà+Öos, (
ƒ_c⁄vît
 -ÖosË* (
íåy
 *));

24 
c⁄vît
[
pos
] = 
√w
;

25 
ƒ_c⁄vît
++;

26 i‡(
ƒ_c⁄vît
 =
MAXOBJECTS
)

27 
	`dõ
("you're kidding me - hit maximum objectÜimit");

28  
√w
;

29 
	}
}

31 
íåy
 *
	$lookup_íåy
(*
sha1
)

33 
low
 = 0, 
high
 = 
ƒ_c⁄vît
;

35 
low
 < 
high
) {

36 
√xt
 = (
low
 + 
high
) / 2;

37 
íåy
 *
n
 = 
c⁄vît
[
√xt
];

38 
cmp
 = 
	`hashcmp
(
sha1
, 
n
->
ﬁd_sha1
);

39 i‡(!
cmp
)

40  
n
;

41 i‡(
cmp
 < 0) {

42 
high
 = 
√xt
;

45 
low
 = 
√xt
+1;

47  
	`ö£π_√w
(
sha1
, 
low
);

48 
	}
}

50 
	$c⁄vît_bö¨y_sha1
(*
buf„r
)

52 
íåy
 *íåy = 
	`c⁄vît_íåy
(
buf„r
);

53 
	`hash˝y
(
buf„r
, 
íåy
->
√w_sha1
);

54 
	}
}

56 
	$c⁄vît_ascii_sha1
(*
buf„r
)

58 
sha1
[20];

59 
íåy
 *entry;

61 i‡(
	`gë_sha1_hex
(
buf„r
, 
sha1
))

62 
	`dõ
("ex≥˘ed sha1, gŸ '%s'", (*Ë
buf„r
);

63 
íåy
 = 
	`c⁄vît_íåy
(
sha1
);

64 
	`mem˝y
(
buf„r
, 
	`sha1_to_hex
(
íåy
->
√w_sha1
), 40);

65 
	}
}

67 
	$c⁄vît_mode
(
mode
)

69 
√wmode
;

71 
√wmode
 = 
mode
 & 
S_IFMT
;

72 i‡(
	`S_ISREG
(
mode
))

73 
√wmode
 |(
mode
 & 0100) ? 0755 : 0644;

74  
√wmode
;

75 
	}
}

77 
	$wrôe_subdúe˘‹y
(*
buf„r
, 
size
, c⁄° *
ba£
, 
ba£Àn
, *
ªsu…_sha1
)

79 *
√w
 = 
	`xmÆloc
(
size
);

80 
√wÀn
 = 0;

81 
u£d
;

83 
u£d
 = 0;

84 
size
) {

85 
Àn
 = 21 + 
	`°æí
(
buf„r
);

86 *
∑th
 = 
	`°rchr
(
buf„r
, ' ');

87 *
sha1
;

88 
mode
;

89 *
¶ash
, *
‹ig∑th
;

91 i‡(!
∑th
 || 
	`ssˇnf
(
buf„r
, "%o", &
mode
) != 1)

92 
	`dõ
("badÅree conversion");

93 
mode
 = 
	`c⁄vît_mode
(mode);

94 
∑th
++;

95 i‡(
	`memcmp
(
∑th
, 
ba£
, 
ba£Àn
))

97 
‹ig∑th
 = 
∑th
;

98 
∑th
 +
ba£Àn
;

99 
¶ash
 = 
	`°rchr
(
∑th
, '/');

100 i‡(!
¶ash
) {

101 
√wÀn
 +
	`•rötf
(
√w
 +ÇewÀn, "%ÿ%s", 
mode
, 
∑th
);

102 
√w
[
√wÀn
++] = '\0';

103 
	`hash˝y
((*)
√w
 + 
√wÀn
, (*Ë
buf„r
 + 
Àn
 - 20);

104 
√wÀn
 += 20;

106 
u£d
 +
Àn
;

107 
size
 -
Àn
;

108 
buf„r
 = (*Ëbuf„∏+ 
Àn
;

112 
√wÀn
 +
	`•rötf
(
√w
 +ÇewÀn, "%ÿ%.*s", 
S_IFDIR
, ()(
¶ash
 - 
∑th
),Öath);

113 
√w
[
√wÀn
++] = 0;

114 
sha1
 = (*)(
√w
 + 
√wÀn
);

115 
√wÀn
 += 20;

117 
Àn
 = 
	`wrôe_subdúe˘‹y
(
buf„r
, 
size
, 
‹ig∑th
, 
¶ash
-‹ig∑th+1, 
sha1
);

119 
u£d
 +
Àn
;

120 
size
 -
Àn
;

121 
buf„r
 = (*Ëbuf„∏+ 
Àn
;

124 
	`wrôe_sha1_fûe
(
√w
, 
√wÀn
, 
åì_ty≥
, 
ªsu…_sha1
);

125 
	`‰ì
(
√w
);

126  
u£d
;

127 
	}
}

129 
	$c⁄vît_åì
(*
buf„r
, 
size
, *
ªsu…_sha1
)

131 *
‹ig_buf„r
 = 
buf„r
;

132 
‹ig_size
 = 
size
;

134 
size
) {

135 
Àn
 = 1+
	`°æí
(
buf„r
);

137 
	`c⁄vît_bö¨y_sha1
((*Ë
buf„r
 + 
Àn
);

139 
Àn
 += 20;

140 i‡(
Àn
 > 
size
)

141 
	`dõ
("corruptÅree object");

142 
size
 -
Àn
;

143 
buf„r
 = (*Ëbuf„∏+ 
Àn
;

146 
	`wrôe_subdúe˘‹y
(
‹ig_buf„r
, 
‹ig_size
, "", 0, 
ªsu…_sha1
);

147 
	}
}

149 
	$∑r£_ﬁd°yÀ_d©e
(c⁄° *
buf
)

151 
c
, *
p
;

152 
buf„r
[100];

153 
tm
Åm;

154 c⁄° *
f‹m©s
[] = {

160 
NULL


163 c⁄° *
timez⁄es
[] = {

164 "PDT", "PST", "CEST", 
NULL


166 c⁄° **
fmt
 = 
f‹m©s
;

168 
p
 = 
buf„r
;

169 
	`is•a˚
(
c
 = *
buf
))

170 
buf
++;

171 (
c
 = *
buf
++) != '\n')

172 *
p
++ = 
c
;

173 *
p
++ = 0;

174 
buf
 = 
buf„r
;

175 
	`mem£t
(&
tm
, 0, (tm));

177 c⁄° *
√xt
 = 
	`°Ωtime
(
buf
, *
fmt
, &
tm
);

178 i‡(
√xt
) {

179 i‡(!*
√xt
)

180  
	`mktime
(&
tm
);

181 
buf
 = 
√xt
;

183 c⁄° **
p
 = 
timez⁄es
;

184 
	`is•a˚
(*
buf
))

185 
buf
++;

186 *
p
) {

187 i‡(!
	`memcmp
(
buf
, *
p
, 
	`°æí
(*p))) {

188 
buf
 +
	`°æí
(*
p
);

191 
p
++;

194 
fmt
++;

195 } *
buf
 && *
fmt
);

196 
	`¥ötf
("À·: %s\n", 
buf
);

197  
	`mktime
(&
tm
);

198 
	}
}

200 
	$c⁄vît_d©e_löe
(*
d°
, **
buf
, *
•
)

202 
size
 = *
•
;

203 *
löe
 = *
buf
;

204 *
√xt
 = 
	`°rchr
(
löe
, '\n');

205 *
d©e
 = 
	`°rchr
(
löe
, '>');

206 
Àn
;

208 i‡(!
√xt
 || !
d©e
)

209 
	`dõ
("missög o∏badáuth‹/commôã∏löê%s", 
löe
);

210 
√xt
++; 
d©e
 += 2;

212 *
buf
 = 
√xt
;

213 *
•
 = 
size
 - (
√xt
 - 
löe
);

215 
Àn
 = 
d©e
 - 
löe
;

216 
	`mem˝y
(
d°
, 
löe
, 
Àn
);

217 
d°
 +
Àn
;

220 i‡(
	`isdigô
(*
d©e
)) {

221 
d©ñí
 = 
√xt
 - 
d©e
;

222 
	`mem˝y
(
d°
, 
d©e
, 
d©ñí
);

223  
Àn
 + 
d©ñí
;

230 i‡(*
d©e
 ='\n' && 
	`°rchr
(
√xt
, '>'))

231 
d©e
 = 
	`°rchr
(
√xt
, '>')+2;

233  
Àn
 + 
	`•rötf
(
d°
, "%lu -0700\n", 
	`∑r£_ﬁd°yÀ_d©e
(
d©e
));

234 
	}
}

236 
	$c⁄vît_d©e
(*
buf„r
, 
size
, *
ªsu…_sha1
)

238 *
√w
 = 
	`xmÆloc
(
size
 + 100);

239 
√wÀn
 = 0;

242 
	`mem˝y
(
√w
 + 
√wÀn
, 
buf„r
, 46);

243 
√wÀn
 += 46;

244 
buf„r
 = (*) buffer + 46;

245 
size
 -= 46;

248 !
	`memcmp
(
buf„r
, "parent ", 7)) {

249 
	`mem˝y
(
√w
 + 
√wÀn
, 
buf„r
, 48);

250 
√wÀn
 += 48;

251 
buf„r
 = (*) buffer + 48;

252 
size
 -= 48;

256 
√wÀn
 +
	`c⁄vît_d©e_löe
(
√w
 +ÇewÀn, &
buf„r
, &
size
);

258 
√wÀn
 +
	`c⁄vît_d©e_löe
(
√w
 +ÇewÀn, &
buf„r
, &
size
);

261 
	`mem˝y
(
√w
 + 
√wÀn
, 
buf„r
, 
size
);

262 
√wÀn
 +
size
;

264 
	`wrôe_sha1_fûe
(
√w
, 
√wÀn
, 
commô_ty≥
, 
ªsu…_sha1
);

265 
	`‰ì
(
√w
);

266 
	}
}

268 
	$c⁄vît_commô
(*
buf„r
, 
size
, *
ªsu…_sha1
)

270 *
‹ig_buf„r
 = 
buf„r
;

271 
‹ig_size
 = 
size
;

273 i‡(
	`memcmp
(
buf„r
, "tree ", 5))

274 
	`dõ
("Bad commô '%s'", (*Ë
buf„r
);

275 
	`c⁄vît_ascii_sha1
((*Ë
buf„r
 + 5);

276 
buf„r
 = (*) buffer + 46;

277 !
	`memcmp
(
buf„r
, "parent ", 7)) {

278 
	`c⁄vît_ascii_sha1
((*Ë
buf„r
 + 7);

279 
buf„r
 = (*) buffer + 48;

281 
	`c⁄vît_d©e
(
‹ig_buf„r
, 
‹ig_size
, 
ªsu…_sha1
);

282 
	}
}

284 
íåy
 * 
	$c⁄vît_íåy
(*
sha1
)

286 
íåy
 *íåy = 
	`lookup_íåy
(
sha1
);

287 
ty≥
[20];

288 *
buf„r
, *
d©a
;

289 
size
;

291 i‡(
íåy
->
c⁄vîãd
)

292  
íåy
;

293 
d©a
 = 
	`ªad_sha1_fûe
(
sha1
, 
ty≥
, &
size
);

294 i‡(!
d©a
)

295 
	`dõ
("u«bÀÅÿªad obje˘ %s", 
	`sha1_to_hex
(
sha1
));

297 
buf„r
 = 
	`xmÆloc
(
size
);

298 
	`mem˝y
(
buf„r
, 
d©a
, 
size
);

300 i‡(!
	`°rcmp
(
ty≥
, 
blob_ty≥
)) {

301 
	`wrôe_sha1_fûe
(
buf„r
, 
size
, 
blob_ty≥
, 
íåy
->
√w_sha1
);

302 } i‡(!
	`°rcmp
(
ty≥
, 
åì_ty≥
))

303 
	`c⁄vît_åì
(
buf„r
, 
size
, 
íåy
->
√w_sha1
);

304 i‡(!
	`°rcmp
(
ty≥
, 
commô_ty≥
))

305 
	`c⁄vît_commô
(
buf„r
, 
size
, 
íåy
->
√w_sha1
);

307 
	`dõ
("unknow¿obje˘Åy≥ '%s' i¿%s", 
ty≥
, 
	`sha1_to_hex
(
sha1
));

308 
íåy
->
c⁄vîãd
 = 1;

309 
	`‰ì
(
buf„r
);

310 
	`‰ì
(
d©a
);

311  
íåy
;

312 
	}
}

314 
	$maö
(
¨gc
, **
¨gv
)

316 
sha1
[20];

317 
íåy
 *entry;

319 
	`£tup_gô_dúe˘‹y
();

321 i‡(
¨gc
 != 2)

322 
	`ußge
("git-convert-objects <sha1>");

323 i‡(
	`gë_sha1
(
¨gv
[1], 
sha1
))

324 
	`dõ
("NŸá vÆid obje˘Çamê%s", 
¨gv
[1]);

326 
íåy
 = 
	`c⁄vît_íåy
(
sha1
);

327 
	`¥ötf
("√w sha1: %s\n", 
	`sha1_to_hex
(
íåy
->
√w_sha1
));

329 
	}
}

	@copy.c

1 
	~"ˇche.h
"

3 
	$c›y_fd
(
ifd
, 
ofd
)

6 
Àn
;

7 
buf„r
[8192];

8 *
buf
 = 
buf„r
;

9 
Àn
 = 
	`xªad
(
ifd
, 
buf„r
, (buffer));

10 i‡(!
Àn
)

12 i‡(
Àn
 < 0) {

13 
ªad_îr‹
;

14 
ªad_îr‹
 = 
î∫o
;

15 
	`˛o£
(
ifd
);

16  
	`îr‹
("copy-fd:ÑeadÑeturned %s",

17 
	`°ªº‹
(
ªad_îr‹
));

19 
Àn
) {

20 
wrôãn
 = 
	`xwrôe
(
ofd
, 
buf
, 
Àn
);

21 i‡(
wrôãn
 > 0) {

22 
buf
 +
wrôãn
;

23 
Àn
 -
wrôãn
;

25 i‡(!
wrôãn
) {

26 
	`˛o£
(
ifd
);

27  
	`îr‹
("copy-fd: writeÑeturned 0");

29 
	`˛o£
(
ifd
);

30  
	`îr‹
("copy-fd: writeÑeturned %s",

31 
	`°ªº‹
(
î∫o
));

35 
	`˛o£
(
ifd
);

37 
	}
}

	@csum-file.c

10 
	~"ˇche.h
"

11 
	~"csum-fûe.h
"

13 
	$sha1Êush
(
sha1fûe
 *
f
, 
cou¡
)

15 *
buf
 = 
f
->
buf„r
;

18 
ªt
 = 
	`xwrôe
(
f
->
fd
, 
buf
, 
cou¡
);

19 i‡(
ªt
 > 0) {

20 
buf
 = (*Ëbu‡+ 
ªt
;

21 
cou¡
 -
ªt
;

22 i‡(
cou¡
)

26 i‡(!
ªt
)

27 
	`dõ
("sha1 fûê'%s' wrôêîr‹. Ouào‡disk•a˚", 
f
->
«me
);

28 
	`dõ
("sha1 fûê'%s' wrôêîr‹ (%s)", 
f
->
«me
, 
	`°ªº‹
(
î∫o
));

30 
	}
}

32 
	$sha1˛o£
(
sha1fûe
 *
f
, *
ªsu…
, 
upd©e
)

34 
off£t
 = 
f
->offset;

35 i‡(
off£t
) {

36 
	`SHA1_Upd©e
(&
f
->
˘x
, f->
buf„r
, 
off£t
);

37 
	`sha1Êush
(
f
, 
off£t
);

39 
	`SHA1_FöÆ
(
f
->
buf„r
, &f->
˘x
);

40 i‡(
ªsu…
)

41 
	`hash˝y
(
ªsu…
, 
f
->
buf„r
);

42 i‡(
upd©e
)

43 
	`sha1Êush
(
f
, 20);

44 i‡(
	`˛o£
(
f
->
fd
))

45 
	`dõ
("%s: sha1 fûêîr‹ o¿˛o£ (%s)", 
f
->
«me
, 
	`°ªº‹
(
î∫o
));

46 
	`‰ì
(
f
);

48 
	}
}

50 
	$sha1wrôe
(
sha1fûe
 *
f
, *
buf
, 
cou¡
)

52 
cou¡
) {

53 
off£t
 = 
f
->offset;

54 
À·
 = (
f
->
buf„r
Ë- 
off£t
;

55 
ƒ
 = 
cou¡
 > 
À·
 ?Üeft : count;

57 
	`mem˝y
(
f
->
buf„r
 + 
off£t
, 
buf
, 
ƒ
);

58 
cou¡
 -
ƒ
;

59 
off£t
 +
ƒ
;

60 
buf
 = (*Ëbu‡+ 
ƒ
;

61 
À·
 -
ƒ
;

62 i‡(!
À·
) {

63 
	`SHA1_Upd©e
(&
f
->
˘x
, f->
buf„r
, 
off£t
);

64 
	`sha1Êush
(
f
, 
off£t
);

65 
off£t
 = 0;

67 
f
->
off£t
 = offset;

70 
	}
}

72 
sha1fûe
 *
	$sha1¸óã
(c⁄° *
fmt
, ...)

74 
sha1fûe
 *
f
;

75 
Àn
;

76 
va_li°
 
¨g
;

77 
fd
;

79 
f
 = 
	`xmÆloc
((*f));

81 
	`va_°¨t
(
¨g
, 
fmt
);

82 
Àn
 = 
	`v¢¥ötf
(
f
->
«me
, (f->«me), 
fmt
, 
¨g
);

83 
	`va_íd
(
¨g
);

84 i‡(
Àn
 >
PATH_MAX
)

85 
	`dõ
("you wascally wabbit, you");

86 
f
->
«mñí
 = 
Àn
;

88 
fd
 = 
	`›í
(
f
->
«me
, 
O_CREAT
 | 
O_EXCL
 | 
O_WRONLY
, 0666);

89 i‡(
fd
 < 0)

90 
	`dõ
("u«bÀÅÿ›í %†(%s)", 
f
->
«me
, 
	`°ªº‹
(
î∫o
));

91 
f
->
fd
 = fd;

92 
f
->
îr‹
 = 0;

93 
f
->
off£t
 = 0;

94 
	`SHA1_Inô
(&
f
->
˘x
);

95  
f
;

96 
	}
}

98 
sha1fûe
 *
	$sha1fd
(
fd
, c⁄° *
«me
)

100 
sha1fûe
 *
f
;

101 
Àn
;

103 
f
 = 
	`xmÆloc
((*f));

105 
Àn
 = 
	`°æí
(
«me
);

106 i‡(
Àn
 >
PATH_MAX
)

107 
	`dõ
("you wascally wabbit, you");

108 
f
->
«mñí
 = 
Àn
;

109 
	`mem˝y
(
f
->
«me
,Çame, 
Àn
+1);

111 
f
->
fd
 = fd;

112 
f
->
îr‹
 = 0;

113 
f
->
off£t
 = 0;

114 
	`SHA1_Inô
(&
f
->
˘x
);

115  
f
;

116 
	}
}

118 
	$sha1wrôe_com¥es£d
(
sha1fûe
 *
f
, *
ö
, 
size
)

120 
z_°ªam
 
°ªam
;

121 
maxsize
;

122 *
out
;

124 
	`mem£t
(&
°ªam
, 0, (stream));

125 
	`deÊ©eInô
(&
°ªam
, 
zlib_com¥essi⁄_Àvñ
);

126 
maxsize
 = 
	`deÊ©eBound
(&
°ªam
, 
size
);

127 
out
 = 
	`xmÆloc
(
maxsize
);

130 
°ªam
.
√xt_ö
 = 
ö
;

131 
°ªam
.
avaû_ö
 = 
size
;

133 
°ªam
.
√xt_out
 = 
out
;

134 
°ªam
.
avaû_out
 = 
maxsize
;

136 
	`deÊ©e
(&
°ªam
, 
Z_FINISH
Ë=
Z_OK
)

138 
	`deÊ©eEnd
(&
°ªam
);

140 
size
 = 
°ªam
.
tŸÆ_out
;

141 
	`sha1wrôe
(
f
, 
out
, 
size
);

142 
	`‰ì
(
out
);

143  
size
;

144 
	}
}

	@csum-file.h

1 #i‚de‡
CSUM_FILE_H


2 
	#CSUM_FILE_H


	)

5 
	ssha1fûe
 {

6 
	mfd
, 
	mîr‹
;

7 
	moff£t
, 
	m«mñí
;

8 
SHA_CTX
 
	m˘x
;

9 
	m«me
[
PATH_MAX
];

10 
	mbuf„r
[8192];

13 
sha1fûe
 *
sha1fd
(
fd
, c⁄° *
«me
);

14 
sha1fûe
 *
	$sha1¸óã
(c⁄° *
fmt
, ...Ë
	`__©åibuã__
((
	`f‹m©
 (
¥ötf
, 1, 2)));

15 
	`sha1˛o£
(
sha1fûe
 *, *, );

16 
	`sha1wrôe
(
sha1fûe
 *, *, );

17 
	`sha1wrôe_com¥es£d
(
sha1fûe
 *, *, );

	@ctype.c

6 
	~"ˇche.h
"

8 
	#SS
 
GIT_SPACE


	)

9 
	#AA
 
GIT_ALPHA


	)

10 
	#DD
 
GIT_DIGIT


	)

12 
	gß√_˘y≥
[256] = {

13 0, 0, 0, 0, 0, 0, 0, 0, 0, 
SS
, SS, 0, 0, SS, 0, 0,

15 
SS
, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

16 
DD
, DD, DD, DD, DD, DD, DD, DD, DD, DD, 0, 0, 0, 0, 0, 0,

17 0, 
AA
, AA, AA, AA, AA, AA, AA, AA, AA, AA, AA, AA, AA, AA, AA,

18 
AA
, AA, AA, AA, AA, AA, AA, AA, AA, AA, AA, 0, 0, 0, 0, 0,

19 0, 
AA
, AA, AA, AA, AA, AA, AA, AA, AA, AA, AA, AA, AA, AA, AA,

20 
AA
, AA, AA, AA, AA, AA, AA, AA, AA, AA, AA, 0, 0, 0, 0, 0,

	@daemon.c

1 
	~"ˇche.h
"

2 
	~"pkt-löe.h
"

3 
	~"exec_cmd.h
"

4 
	~"öãΩﬁ©e.h
"

6 
	~<sy¶og.h
>

8 #i‚de‡
HOST_NAME_MAX


9 
	#HOST_NAME_MAX
 256

	)

12 
	glog_sy¶og
;

13 
	gvîbo£
;

14 
	gªu£addr
;

16 c⁄° 
	gd´m⁄_ußge
[] =

28 **
	gok_∑ths
;

29 
	g°ri˘_∑ths
;

32 
	gexp‹t_Æl_åìs
;

35 *
	gba£_∑th
;

36 *
	göãΩﬁ©ed_∑th
;

39 
	gßw_exãnded_¨gs
;

45 c⁄° *
	gu£r_∑th
;

48 
	gtimeout
;

49 
	göô_timeout
;

55 
	#INTERP_SLOT_HOST
 (0)

	)

56 
	#INTERP_SLOT_CANON_HOST
 (1)

	)

57 
	#INTERP_SLOT_IP
 (2)

	)

58 
	#INTERP_SLOT_PORT
 (3)

	)

59 
	#INTERP_SLOT_DIR
 (4)

	)

60 
	#INTERP_SLOT_PERCENT
 (5)

	)

62 
öãΩ
 
	göãΩ_èbÀ
[] = {

72 
	$logªp‹t
(
¥i‹ôy
, c⁄° *
îr
, 
va_li°
 
∑øms
)

76 
buf
[1024];

77 
buÊí
;

78 
maxÀn
, 
msgÀn
;

81 
buÊí
 = 
	`¢¥ötf
(
buf
, (buf), "[%ld] ", (Ë
	`gëpid
());

83 
maxÀn
 = (
buf
Ë- 
buÊí
 - 1;

84 
msgÀn
 = 
	`v¢¥ötf
(
buf
 + 
buÊí
, 
maxÀn
, 
îr
, 
∑øms
);

86 i‡(
log_sy¶og
) {

87 
	`sy¶og
(
¥i‹ôy
, "%s", 
buf
);

96 i‡(
msgÀn
 > 
maxÀn
 - 1)

97 
msgÀn
 = 
maxÀn
 - 1;

98 i‡(
msgÀn
 < 0)

99 
msgÀn
 = 0;

100 
buÊí
 +
msgÀn
;

102 
buf
[
buÊí
++] = '\n';

103 
buf
[
buÊí
] = '\0';

105 
	`wrôe_ö_fuŒ
(2, 
buf
, 
buÊí
);

106 
	}
}

108 
	$logîr‹
(c⁄° *
îr
, ...)

110 
va_li°
 
∑øms
;

111 
	`va_°¨t
(
∑øms
, 
îr
);

112 
	`logªp‹t
(
LOG_ERR
, 
îr
, 
∑øms
);

113 
	`va_íd
(
∑øms
);

114 
	}
}

116 
	$logöfo
(c⁄° *
îr
, ...)

118 
va_li°
 
∑øms
;

119 i‡(!
vîbo£
)

121 
	`va_°¨t
(
∑øms
, 
îr
);

122 
	`logªp‹t
(
LOG_INFO
, 
îr
, 
∑øms
);

123 
	`va_íd
(
∑øms
);

124 
	}
}

126 
NORETURN
 
	$d´m⁄_dõ
(c⁄° *
îr
, 
va_li°
 
∑øms
)

128 
	`logªp‹t
(
LOG_ERR
, 
îr
, 
∑øms
);

129 
	`exô
(1);

130 
	}
}

132 
	$avoid_Æüs
(*
p
)

134 
¶
, 
ndŸ
;

145 i‡(!
p
 || (*p != '/' && *p != '~'))

147 
¶
 = 1; 
ndŸ
 = 0;

148 
p
++;

151 
ch
 = *
p
++;

152 i‡(
¶
) {

153 i‡(
ch
 == '.')

154 
ndŸ
++;

155 i‡(
ch
 == '/') {

156 i‡(
ndŸ
 < 3)

159 
ndŸ
 = 0;

161 i‡(
ch
 == 0) {

162 i‡(0 < 
ndŸ
 &&Çdot < 3)

168 
¶
 = 
ndŸ
 = 0;

170 i‡(
ch
 == 0)

172 i‡(
ch
 == '/') {

173 
¶
 = 1;

174 
ndŸ
 = 0;

177 
	}
}

179 *
	$∑th_ok
(
öãΩ
 *
ôabÀ
)

181 
Ω©h
[
PATH_MAX
];

182 
öãΩ_∑th
[
PATH_MAX
];

183 *
∑th
;

184 *
dú
;

186 
dú
 = 
ôabÀ
[
INTERP_SLOT_DIR
].
vÆue
;

188 i‡(
	`avoid_Æüs
(
dú
)) {

189 
	`logîr‹
("'%s':álü£d", 
dú
);

190  
NULL
;

193 i‡(*
dú
 == '~') {

194 i‡(!
u£r_∑th
) {

195 
	`logîr‹
("'%s': U£r-∑thÇŸáŒowed", 
dú
);

196  
NULL
;

198 i‡(*
u£r_∑th
) {

203 
«mÀn
, 
ª°Àn
 = 
	`°æí
(
dú
);

204 *
¶ash
 = 
	`°rchr
(
dú
, '/');

205 i‡(!
¶ash
)

206 
¶ash
 = 
dú
 + 
ª°Àn
;

207 
«mÀn
 = 
¶ash
 - 
dú
;

208 
ª°Àn
 -
«mÀn
;

209 
	`logöfo
("u£Ω©h <%s>,Ñeque° <%s>,ÇamÀ¿%d,Ñe°À¿%d, sœsh <%s>", 
u£r_∑th
, 
dú
, 
«mÀn
, 
ª°Àn
, 
¶ash
);

210 
	`¢¥ötf
(
Ω©h
, 
PATH_MAX
, "%.*s/%s%.*s",

211 
«mÀn
, 
dú
, 
u£r_∑th
, 
ª°Àn
, 
¶ash
);

212 
dú
 = 
Ω©h
;

215 i‡(
öãΩﬁ©ed_∑th
 && 
ßw_exãnded_¨gs
) {

216 i‡(*
dú
 != '/') {

218 
	`logîr‹
("'%s': N⁄-absﬁuãÖ©h díõd (öãΩﬁ©ed-∑thá˘ive)", 
dú
);

219  
NULL
;

222 
	`öãΩﬁ©e
(
öãΩ_∑th
, 
PATH_MAX
, 
öãΩﬁ©ed_∑th
,

223 
öãΩ_èbÀ
, 
	`ARRAY_SIZE
(interp_table));

224 
	`logöfo
("I¡îpﬁ©ed dú '%s'", 
öãΩ_∑th
);

226 
dú
 = 
öãΩ_∑th
;

228 i‡(
ba£_∑th
) {

229 i‡(*
dú
 != '/') {

231 
	`logîr‹
("'%s': N⁄-absﬁuãÖ©h díõd (ba£-∑thá˘ive)", 
dú
);

232  
NULL
;

234 
	`¢¥ötf
(
Ω©h
, 
PATH_MAX
, "%s%s", 
ba£_∑th
, 
dú
);

235 
dú
 = 
Ω©h
;

238 
∑th
 = 
	`íãr_ªpo
(
dú
, 
°ri˘_∑ths
);

240 i‡(!
∑th
) {

241 
	`logîr‹
("'%s': u«bÀÅÿchdú o∏nŸá gôárchive", 
dú
);

242  
NULL
;

245 i‡–
ok_∑ths
 && *ok_paths ) {

246 **
µ
;

247 
∑thÀn
 = 
	`°æí
(
∑th
);

256  
µ
 = 
ok_∑ths
 ; *pp ;Öp++ ) {

257 
Àn
 = 
	`°æí
(*
µ
);

258 i‡(
Àn
 <
∑thÀn
 &&

259 !
	`memcmp
(*
µ
, 
∑th
, 
Àn
) &&

260 (
∑th
[
Àn
] == '\0' ||

261 (!
°ri˘_∑ths
 && 
∑th
[
Àn
] == '/')))

262  
∑th
;

267 i‡(!
°ri˘_∑ths
)

268  
∑th
;

271 
	`logîr‹
("'%s':ÇŸ i¿whôñi°", 
∑th
);

272  
NULL
;

273 
	}
}

275 (*
	td´m⁄_£rvi˚_‚
)();

276 
	sd´m⁄_£rvi˚
 {

277 c⁄° *
«me
;

278 c⁄° *
c⁄fig_«me
;

279 
d´m⁄_£rvi˚_‚
 
‚
;

280 
íabÀd
;

281 
ovîridabÀ
;

284 
d´m⁄_£rvi˚
 *
£rvi˚_lookög_©
;

285 
£rvi˚_íabÀd
;

287 
	$gô_d´m⁄_c⁄fig
(c⁄° *
v¨
, c⁄° *
vÆue
)

289 i‡(!
	`°∫cmp
(
v¨
, "daemon.", 7) &&

290 !
	`°rcmp
(
v¨
 + 7, 
£rvi˚_lookög_©
->
c⁄fig_«me
)) {

291 
£rvi˚_íabÀd
 = 
	`gô_c⁄fig_boﬁ
(
v¨
, 
vÆue
);

297 
	}
}

299 
	$run_£rvi˚
(
öãΩ
 *
ôabÀ
, 
d´m⁄_£rvi˚
 *
£rvi˚
)

301 c⁄° *
∑th
;

302 
íabÀd
 = 
£rvi˚
->enabled;

304 
	`logöfo
("Request %s for '%s'",

305 
£rvi˚
->
«me
,

306 
ôabÀ
[
INTERP_SLOT_DIR
].
vÆue
);

308 i‡(!
íabÀd
 && !
£rvi˚
->
ovîridabÀ
) {

309 
	`logîr‹
("'%s': sîvi˚ÇŸÉ«bÀd.", 
£rvi˚
->
«me
);

310 
î∫o
 = 
EACCES
;

314 i‡(!(
∑th
 = 
	`∑th_ok
(
ôabÀ
)))

328 i‡(!
exp‹t_Æl_åìs
 && 
	`ac˚ss
("gô-d´m⁄-exp‹t-ok", 
F_OK
)) {

329 
	`logîr‹
("'%s':Ñïosô‹yÇŸÉxp‹ãd.", 
∑th
);

330 
î∫o
 = 
EACCES
;

334 i‡(
£rvi˚
->
ovîridabÀ
) {

335 
£rvi˚_lookög_©
 = 
£rvi˚
;

336 
£rvi˚_íabÀd
 = -1;

337 
	`gô_c⁄fig
(
gô_d´m⁄_c⁄fig
);

338 i‡(0 <
£rvi˚_íabÀd
)

339 
íabÀd
 = 
£rvi˚_íabÀd
;

341 i‡(!
íabÀd
) {

342 
	`logîr‹
("'%s': serviceÇotÉnabled for '%s'",

343 
£rvi˚
->
«me
, 
∑th
);

344 
î∫o
 = 
EACCES
;

352 
	`sig«l
(
SIGTERM
, 
SIG_IGN
);

354  
£rvi˚
->
	`‚
();

355 
	}
}

357 
	$u∂ﬂd_∑ck
()

360 
timeout_buf
[64];

362 
	`¢¥ötf
(
timeout_buf
, Åimeout_buf, "--timeout=%u", 
timeout
);

365 
	`exe˛_gô_cmd
("u∂ﬂd-∑ck", "--°ri˘", 
timeout_buf
, ".", 
NULL
);

367 
	}
}

369 
	$u∂ﬂd_¨chive
()

371 
	`exe˛_gô_cmd
("u∂ﬂd-¨chive", ".", 
NULL
);

373 
	}
}

375 
	$ª˚ive_∑ck
()

377 
	`exe˛_gô_cmd
("ª˚ive-∑ck", ".", 
NULL
);

379 
	}
}

381 
d´m⁄_£rvi˚
 
	gd´m⁄_£rvi˚
[] = {

382 { "u∂ﬂd-¨chive", "u∂ﬂd¨ch", 
u∂ﬂd_¨chive
, 0, 1 },

383 { "u∂ﬂd-∑ck", "u∂ﬂd∑ck", 
u∂ﬂd_∑ck
, 1, 1 },

384 { "ª˚ive-∑ck", "ª˚ivïack", 
ª˚ive_∑ck
, 0, 1 },

387 
	$íabÀ_£rvi˚
(c⁄° *
«me
, 
ía
) {

388 
i
;

389 
i
 = 0; i < 
	`ARRAY_SIZE
(
d´m⁄_£rvi˚
); i++) {

390 i‡(!
	`°rcmp
(
d´m⁄_£rvi˚
[
i
].
«me
,Çame)) {

391 
d´m⁄_£rvi˚
[
i
].
íabÀd
 = 
ía
;

395 
	`dõ
("Nÿsuch sîvi˚ %s", 
«me
);

396 
	}
}

398 
	$make_£rvi˚_ovîridabÀ
(c⁄° *
«me
, 
ía
) {

399 
i
;

400 
i
 = 0; i < 
	`ARRAY_SIZE
(
d´m⁄_£rvi˚
); i++) {

401 i‡(!
	`°rcmp
(
d´m⁄_£rvi˚
[
i
].
«me
,Çame)) {

402 
d´m⁄_£rvi˚
[
i
].
ovîridabÀ
 = 
ía
;

406 
	`dõ
("Nÿsuch sîvi˚ %s", 
«me
);

407 
	}
}

413 
	$∑r£_exåa_¨gs
(
öãΩ
 *
èbÀ
, *
exåa_¨gs
, 
buÊí
)

415 *
vÆ
;

416 
vÆÀn
;

417 *
íd
 = 
exåa_¨gs
 + 
buÊí
;

419 
exåa_¨gs
 < 
íd
 && *extra_args) {

420 
ßw_exãnded_¨gs
 = 1;

421 i‡(
	`°∫ˇ£cmp
("ho°=", 
exåa_¨gs
, 5) == 0) {

422 
vÆ
 = 
exåa_¨gs
 + 5;

423 
vÆÀn
 = 
	`°æí
(
vÆ
) + 1;

424 i‡(*
vÆ
) {

426 *
ho°
 = 
vÆ
;

427 *
p‹t
 = 
	`°ºchr
(
ho°
, ':');

428 i‡(
p‹t
) {

429 *
p‹t
 = 0;

430 
p‹t
++;

431 
	`öãΩ_£t_íåy
(
èbÀ
, 
INTERP_SLOT_PORT
, 
p‹t
);

433 
	`öãΩ_£t_íåy
(
èbÀ
, 
INTERP_SLOT_HOST
, 
ho°
);

437 
exåa_¨gs
 = 
vÆ
 + 
vÆÀn
;

440 
	}
}

442 
	$fûl_ö_exåa_èbÀ_íåõs
(
öãΩ
 *
ôabÀ
)

444 *
hp
;

449 
hp
 = 
öãΩ_èbÀ
[
INTERP_SLOT_HOST
].
vÆue
;

450 i‡(!
hp
)

452  ; *
hp
; hp++)

453 *
hp
 = 
	`tﬁowî
(*hp);

458 #i‚de‡
NO_IPV6


460 
addröfo
 
höts
;

461 
addröfo
 *
ai
, *
ai0
;

462 
gai
;

463 
addrbuf
[
HOST_NAME_MAX
 + 1];

465 
	`mem£t
(&
höts
, 0, (hints));

466 
höts
.
ai_Êags
 = 
AI_CANONNAME
;

468 
gai
 = 
	`gëaddröfo
(
öãΩ_èbÀ
[
INTERP_SLOT_HOST
].
vÆue
, 0, &
höts
, &
ai0
);

469 i‡(!
gai
) {

470 
ai
 = 
ai0
;ái;áòai->
ai_√xt
) {

471 
sockaddr_ö
 *
sö_addr
 = (*)
ai
->
ai_addr
;

473 
	`öë_¡›
(
AF_INET
, &
sö_addr
->sin_addr,

474 
addrbuf
, (addrbuf));

475 
	`öãΩ_£t_íåy
(
öãΩ_èbÀ
,

476 
INTERP_SLOT_CANON_HOST
, 
ai
->
ai_ˇn⁄«me
);

477 
	`öãΩ_£t_íåy
(
öãΩ_èbÀ
,

478 
INTERP_SLOT_IP
, 
addrbuf
);

481 
	`‰ìaddröfo
(
ai0
);

486 
ho°ít
 *
hít
;

487 
sockaddr_ö
 
ß
;

488 **
≠
;

489 
addrbuf
[
HOST_NAME_MAX
 + 1];

491 
hít
 = 
	`gëho°by«me
(
öãΩ_èbÀ
[
INTERP_SLOT_HOST
].
vÆue
);

493 
≠
 = 
hít
->
h_addr_li°
;

494 
	`mem£t
(&
ß
, 0,  sa);

495 
ß
.
sö_Ámûy
 = 
hít
->
h_addπy≥
;

496 
ß
.
sö_p‹t
 = 
	`ht⁄s
(0);

497 
	`mem˝y
(&
ß
.
sö_addr
, *
≠
, 
hít
->
h_Àngth
);

499 
	`öë_¡›
(
hít
->
h_addπy≥
, &
ß
.
sö_addr
,

500 
addrbuf
, (addrbuf));

502 
	`öãΩ_£t_íåy
(
öãΩ_èbÀ
, 
INTERP_SLOT_CANON_HOST
, 
hít
->
h_«me
);

503 
	`öãΩ_£t_íåy
(
öãΩ_èbÀ
, 
INTERP_SLOT_IP
, 
addrbuf
);

506 
	}
}

509 
	$execuã
(
sockaddr
 *
addr
)

511 
löe
[1000];

512 
pkéí
, 
Àn
, 
i
;

514 i‡(
addr
) {

515 
addrbuf
[256] = "";

516 
p‹t
 = -1;

518 i‡(
addr
->
ß_Ámûy
 =
AF_INET
) {

519 
sockaddr_ö
 *
sö_addr
 = (*Ë
addr
;

520 
	`öë_¡›
(
addr
->
ß_Ámûy
, &
sö_addr
->sö_addr, 
addrbuf
, (addrbuf));

521 
p‹t
 = 
sö_addr
->
sö_p‹t
;

522 #i‚de‡
NO_IPV6


523 } i‡(
addr
 &&áddr->
ß_Ámûy
 =
AF_INET6
) {

524 
sockaddr_ö6
 *
sö6_addr
 = (*Ë
addr
;

526 *
buf
 = 
addrbuf
;

527 *
buf
++ = '['; *buf = '\0';

528 
	`öë_¡›
(
AF_INET6
, &
sö6_addr
->sö6_addr, 
buf
, (
addrbuf
) - 1);

529 
	`°rˇt
(
buf
, "]");

531 
p‹t
 = 
sö6_addr
->
sö6_p‹t
;

534 
	`logöfo
("C⁄√˘i⁄ from %s:%d", 
addrbuf
, 
p‹t
);

537 
	`Æ¨m
(
öô_timeout
 ? inô_timeouà: 
timeout
);

538 
pkéí
 = 
	`∑ckë_ªad_löe
(0, 
löe
, (line));

539 
	`Æ¨m
(0);

541 
Àn
 = 
	`°æí
(
löe
);

542 i‡(
pkéí
 !
Àn
)

543 
	`logöfo
("Extendedáttributes (%d bytes)Éxist <%.*s>",

544 (Ë
pkéí
 - 
Àn
,

545 (Ë
pkéí
 - 
Àn
, 
löe
 +Üen + 1);

546 i‡(
Àn
 && 
löe
[len-1] == '\n') {

547 
löe
[--
Àn
] = 0;

548 
pkéí
--;

554 
	`öãΩ_˛ór_èbÀ
(
öãΩ_èbÀ
, 
	`ARRAY_SIZE
(interp_table));

555 
	`öãΩ_£t_íåy
(
öãΩ_èbÀ
, 
INTERP_SLOT_PERCENT
, "%");

557 i‡(
Àn
 !
pkéí
) {

558 
	`∑r£_exåa_¨gs
(
öãΩ_èbÀ
, 
löe
 + 
Àn
 + 1, 
pkéí
 -Üen - 1);

559 
	`fûl_ö_exåa_èbÀ_íåõs
(
öãΩ_èbÀ
);

562 
i
 = 0; i < 
	`ARRAY_SIZE
(
d´m⁄_£rvi˚
); i++) {

563 
d´m⁄_£rvi˚
 *
s
 = &(d´m⁄_£rvi˚[
i
]);

564 
«mñí
 = 
	`°æí
(
s
->
«me
);

565 i‡(!
	`°∫cmp
("gô-", 
löe
, 4) &&

566 !
	`°∫cmp
(
s
->
«me
, 
löe
 + 4, 
«mñí
) &&

567 
löe
[
«mñí
 + 4] == ' ') {

572 
	`öãΩ_£t_íåy
(
öãΩ_èbÀ
,

573 
INTERP_SLOT_DIR
, 
löe
 + 
«mñí
 + 5);

574  
	`run_£rvi˚
(
öãΩ_èbÀ
, 
s
);

578 
	`logîr‹
("PrŸocﬁÉº‹: '%s'", 
löe
);

580 
	}
}

593 
	#MAX_CHILDREN
 128

	)

595 
	gmax_c⁄√˘i⁄s
 = 25;

598 vﬁ©ûê
	gchûdªn_ª≠ed
;

599 
pid_t
 
	gdód_chûd
[
MAX_CHILDREN
];

602 
	gchûdªn_•aw√d
;

603 
	gchûdªn_dñëed
;

605 
	schûd
 {

606 
pid_t
 
	mpid
;

607 
	maddæí
;

608 
sockaddr_°‹age
 
	maddªss
;

609 } 
	glive_chûd
[
MAX_CHILDREN
];

611 
	$add_chûd
(
idx
, 
pid_t
 
pid
, 
sockaddr
 *
addr
, 
addæí
)

613 
live_chûd
[
idx
].
pid
 =Öid;

614 
live_chûd
[
idx
].
addæí
 =áddrlen;

615 
	`mem˝y
(&
live_chûd
[
idx
].
addªss
, 
addr
, 
addæí
);

616 
	}
}

624 
	$ªmove_chûd
(
pid_t
 
pid
, 
dñëed
, 
•aw√d
)

626 
chûd
 
n
;

628 
dñëed
 %
MAX_CHILDREN
;

629 
•aw√d
 %
MAX_CHILDREN
;

630 i‡(
live_chûd
[
dñëed
].
pid
 ==Öid) {

631 
live_chûd
[
dñëed
].
pid
 = -1;

634 
n
 = 
live_chûd
[
dñëed
];

636 
chûd
 
m
;

637 
dñëed
 = (dñëed + 1Ë% 
MAX_CHILDREN
;

638 i‡(
dñëed
 =
•aw√d
)

639 
	`dõ
("couldÇŸ föd dód chûd %d\n", 
pid
);

640 
m
 = 
live_chûd
[
dñëed
];

641 
live_chûd
[
dñëed
] = 
n
;

642 i‡(
m
.
pid
 ==Öid)

644 
n
 = 
m
;

646 
	}
}

662 
	$kûl_some_chûdªn
(
signo
, 
°¨t
, 
°›
)

664 
°¨t
 %
MAX_CHILDREN
;

665 
°›
 %
MAX_CHILDREN
;

666 
°¨t
 !
°›
) {

667 i‡(!(
°¨t
 & 3))

668 
	`kûl
(
live_chûd
[
°¨t
].
pid
, 
signo
);

669 
°¨t
 = (°¨à+ 1Ë% 
MAX_CHILDREN
;

671 
	}
}

673 
	$check_max_c⁄√˘i⁄s
()

676 
a˘ive
;

677 
•aw√d
, 
ª≠ed
, 
dñëed
;

679 
•aw√d
 = 
chûdªn_•aw√d
;

680 
ª≠ed
 = 
chûdªn_ª≠ed
;

681 
dñëed
 = 
chûdªn_dñëed
;

683 
dñëed
 < 
ª≠ed
) {

684 
pid_t
 
pid
 = 
dód_chûd
[
dñëed
 % 
MAX_CHILDREN
];

685 
	`ªmove_chûd
(
pid
, 
dñëed
, 
•aw√d
);

686 
dñëed
++;

688 
chûdªn_dñëed
 = 
dñëed
;

690 
a˘ive
 = 
•aw√d
 - 
dñëed
;

691 i‡(
a˘ive
 <
max_c⁄√˘i⁄s
)

695 
	`kûl_some_chûdªn
(
SIGTERM
, 
dñëed
, 
•aw√d
);

696 i‡(
a˘ive
 <
max_c⁄√˘i⁄s
 << 1)

700 
	`kûl_some_chûdªn
(
SIGKILL
, 
dñëed
, 
•aw√d
);

701 
	`¶ìp
(1);

703 
	}
}

705 
	$h™dÀ
(
öcomög
, 
sockaddr
 *
addr
, 
addæí
)

707 
pid_t
 
pid
 = 
	`f‹k
();

709 i‡(
pid
) {

710 
idx
;

712 
	`˛o£
(
öcomög
);

713 i‡(
pid
 < 0)

716 
idx
 = 
chûdªn_•aw√d
 % 
MAX_CHILDREN
;

717 
chûdªn_•aw√d
++;

718 
	`add_chûd
(
idx
, 
pid
, 
addr
, 
addæí
);

720 
	`check_max_c⁄√˘i⁄s
();

724 
	`dup2
(
öcomög
, 0);

725 
	`dup2
(
öcomög
, 1);

726 
	`˛o£
(
öcomög
);

728 
	`exô
(
	`execuã
(
addr
));

729 
	}
}

731 
	$chûd_h™dÀr
(
signo
)

734 
°©us
;

735 
pid_t
 
pid
 = 
	`waôpid
(-1, &
°©us
, 
WNOHANG
);

737 i‡(
pid
 > 0) {

738 
ª≠ed
 = 
chûdªn_ª≠ed
;

739 
dód_chûd
[
ª≠ed
 % 
MAX_CHILDREN
] = 
pid
;

740 
chûdªn_ª≠ed
 = 
ª≠ed
 + 1;

742 i‡(
vîbo£
) {

743 c⁄° *
dód
 = "";

744 i‡(!
	`WIFEXITED
(
°©us
Ë|| 
	`WEXITSTATUS
(status) > 0)

745 
dód
 = " (withÉrror)";

746 i‡(
log_sy¶og
)

747 
	`sy¶og
(
LOG_INFO
, "[%d] Disc⁄√˘ed%s", 
pid
, 
dód
);

749 
	`Ârötf
(
°dîr
, "[%d] Disc⁄√˘ed%s\n", 
pid
, 
dód
);

755 
	}
}

757 
	$£t_ªu£_addr
(
sockfd
)

759 
⁄
 = 1;

761 i‡(!
ªu£addr
)

763  
	`£tsock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_REUSEADDR
,

764 &
⁄
, (on));

765 
	}
}

767 #i‚de‡
NO_IPV6


769 
	$sock£tup
(*
li°í_addr
, 
li°í_p‹t
, **
sockli°_p
)

771 
socknum
 = 0, *
sockli°
 = 
NULL
;

772 
maxfd
 = -1;

773 
pbuf
[
NI_MAXSERV
];

774 
addröfo
 
höts
, *
ai0
, *
ai
;

775 
gai
;

777 
	`•rötf
(
pbuf
, "%d", 
li°í_p‹t
);

778 
	`mem£t
(&
höts
, 0, (hints));

779 
höts
.
ai_Ámûy
 = 
AF_UNSPEC
;

780 
höts
.
ai_sockty≥
 = 
SOCK_STREAM
;

781 
höts
.
ai_¥Ÿocﬁ
 = 
IPPROTO_TCP
;

782 
höts
.
ai_Êags
 = 
AI_PASSIVE
;

784 
gai
 = 
	`gëaddröfo
(
li°í_addr
, 
pbuf
, &
höts
, &
ai0
);

785 i‡(
gai
)

786 
	`dõ
("gëaddröfo(ËÁûed: %s\n", 
	`gai_°ªº‹
(
gai
));

788 
ai
 = 
ai0
;ái;áòai->
ai_√xt
) {

789 
sockfd
;

791 
sockfd
 = 
	`sockë
(
ai
->
ai_Ámûy
,ái->
ai_sockty≥
,ái->
ai_¥Ÿocﬁ
);

792 i‡(
sockfd
 < 0)

794 i‡(
sockfd
 >
FD_SETSIZE
) {

795 
	`îr‹
("tooÜarge socket descriptor.");

796 
	`˛o£
(
sockfd
);

800 #ifde‡
IPV6_V6ONLY


801 i‡(
ai
->
ai_Ámûy
 =
AF_INET6
) {

802 
⁄
 = 1;

803 
	`£tsock›t
(
sockfd
, 
IPPROTO_IPV6
, 
IPV6_V6ONLY
,

804 &
⁄
, (on));

809 i‡(
	`£t_ªu£_addr
(
sockfd
)) {

810 
	`˛o£
(
sockfd
);

814 i‡(
	`böd
(
sockfd
, 
ai
->
ai_addr
,ái->
ai_addæí
) < 0) {

815 
	`˛o£
(
sockfd
);

818 i‡(
	`li°í
(
sockfd
, 5) < 0) {

819 
	`˛o£
(
sockfd
);

823 
sockli°
 = 
	`xªÆloc
(sockli°, (Ë* (
socknum
 + 1));

824 
sockli°
[
socknum
++] = 
sockfd
;

826 i‡(
maxfd
 < 
sockfd
)

827 
maxfd
 = 
sockfd
;

830 
	`‰ìaddröfo
(
ai0
);

832 *
sockli°_p
 = 
sockli°
;

833  
socknum
;

834 
	}
}

838 
	$sock£tup
(*
li°í_addr
, 
li°í_p‹t
, **
sockli°_p
)

840 
sockaddr_ö
 
sö
;

841 
sockfd
;

843 
	`mem£t
(&
sö
, 0,  sin);

844 
sö
.
sö_Ámûy
 = 
AF_INET
;

845 
sö
.
sö_p‹t
 = 
	`ht⁄s
(
li°í_p‹t
);

847 i‡(
li°í_addr
) {

849 i‡(
	`öë_±⁄
(
AF_INET
, 
li°í_addr
, &
sö
.
sö_addr
.
s_addr
) <= 0)

852 
sö
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

855 
sockfd
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

856 i‡(
sockfd
 < 0)

859 i‡(
	`£t_ªu£_addr
(
sockfd
)) {

860 
	`˛o£
(
sockfd
);

864 i‡–
	`böd
(
sockfd
, (
sockaddr
 *)&
sö
,  sin) < 0 ) {

865 
	`˛o£
(
sockfd
);

869 i‡(
	`li°í
(
sockfd
, 5) < 0) {

870 
	`˛o£
(
sockfd
);

874 *
sockli°_p
 = 
	`xmÆloc
(());

875 **
sockli°_p
 = 
sockfd
;

877 
	}
}

881 
	$£rvi˚_lo›
(
socknum
, *
sockli°
)

883 
pﬁlfd
 *
pfd
;

884 
i
;

886 
pfd
 = 
	`xˇŒoc
(
socknum
, (
pﬁlfd
));

888 
i
 = 0; i < 
socknum
; i++) {

889 
pfd
[
i
].
fd
 = 
sockli°
[i];

890 
pfd
[
i
].
evíts
 = 
POLLIN
;

893 
	`sig«l
(
SIGCHLD
, 
chûd_h™dÀr
);

896 
i
;

898 i‡(
	`pﬁl
(
pfd
, 
socknum
, -1) < 0) {

899 i‡(
î∫o
 !
EINTR
) {

900 
	`îr‹
("poll failed,Ñesuming: %s",

901 
	`°ªº‹
(
î∫o
));

902 
	`¶ìp
(1);

907 
i
 = 0; i < 
socknum
; i++) {

908 i‡(
pfd
[
i
].
ªvíts
 & 
POLLIN
) {

909 
sockaddr_°‹age
 
ss
;

910 
s¶í
 = (
ss
);

911 
öcomög
 = 
	`ac˚±
(
pfd
[
i
].
fd
, (
sockaddr
 *)&
ss
, &
s¶í
);

912 i‡(
öcomög
 < 0) {

913 
î∫o
) {

914 
EAGAIN
:

915 
EINTR
:

916 
ECONNABORTED
:

919 
	`dõ
("ac˚±Ñëu∫ed %s", 
	`°ªº‹
(
î∫o
));

922 
	`h™dÀ
(
öcomög
, (
sockaddr
 *)&
ss
, 
s¶í
);

926 
	}
}

929 
	$ßnôize_°dfds
()

931 
fd
 = 
	`›í
("/dev/nuŒ", 
O_RDWR
, 0);

932 
fd
 != -1 && fd < 2)

933 
fd
 = 
	`dup
(fd);

934 i‡(
fd
 == -1)

935 
	`dõ
("›í /dev/nuŒ o∏du∞Áûed: %s", 
	`°ªº‹
(
î∫o
));

936 i‡(
fd
 > 2)

937 
	`˛o£
(
fd
);

938 
	}
}

940 
	$d´m⁄ize
()

942 
	`f‹k
()) {

946 
	`dõ
("f‹k faûed: %s", 
	`°ªº‹
(
î∫o
));

948 
	`exô
(0);

950 i‡(
	`£tsid
() == -1)

951 
	`dõ
("£tsid faûed: %s", 
	`°ªº‹
(
î∫o
));

952 
	`˛o£
(0);

953 
	`˛o£
(1);

954 
	`˛o£
(2);

955 
	`ßnôize_°dfds
();

956 
	}
}

958 
	$°‹e_pid
(c⁄° *
∑th
)

960 
FILE
 *
f
 = 
	`f›í
(
∑th
, "w");

961 i‡(!
f
)

962 
	`dõ
("ˇ¬Ÿ o≥¿pid fûê%s: %s", 
∑th
, 
	`°ªº‹
(
î∫o
));

963 
	`Ârötf
(
f
, "%d\n", 
	`gëpid
());

964 
	`f˛o£
(
f
);

965 
	}
}

967 
	$£rve
(*
li°í_addr
, 
li°í_p‹t
, 
∑sswd
 *
∑ss
, 
gid_t
 
gid
)

969 
socknum
, *
sockli°
;

971 
socknum
 = 
	`sock£tup
(
li°í_addr
, 
li°í_p‹t
, &
sockli°
);

972 i‡(
socknum
 == 0)

973 
	`dõ
("unableÅoállocateányÜisten sockets on host %sÖort %u",

974 
li°í_addr
, 
li°í_p‹t
);

976 i‡(
∑ss
 && 
gid
 &&

977 (
	`öôgroups
(
∑ss
->
pw_«me
, 
gid
Ë|| 
	`£tgid
 (gid) ||

978 
	`£tuid
(
∑ss
->
pw_uid
)))

979 
	`dõ
("cannot dropÖrivileges");

981  
	`£rvi˚_lo›
(
socknum
, 
sockli°
);

982 
	}
}

984 
	$maö
(
¨gc
, **
¨gv
)

986 
li°í_p‹t
 = 0;

987 *
li°í_addr
 = 
NULL
;

988 
öëd_mode
 = 0;

989 c⁄° *
pid_fûe
 = 
NULL
, *
u£r_«me
 = NULL, *
group_«me
 = NULL;

990 
dëach
 = 0;

991 
∑sswd
 *
∑ss
 = 
NULL
;

992 
group
 *group;

993 
gid_t
 
gid
 = 0;

994 
i
;

999 
	`sig«l
(
SIGCHLD
, 
SIG_DFL
);

1001 
i
 = 1; i < 
¨gc
; i++) {

1002 *
¨g
 = 
¨gv
[
i
];

1004 i‡(!
	`°∫cmp
(
¨g
, "--listen=", 9)) {

1005 *
p
 = 
¨g
 + 9;

1006 *
ph
 = 
li°í_addr
 = 
	`xmÆloc
(
	`°æí
(
¨g
 + 9) + 1);

1007 *
p
)

1008 *
ph
++ = 
	`tﬁowî
(*
p
++);

1009 *
ph
 = 0;

1012 i‡(!
	`°∫cmp
(
¨g
, "--port=", 7)) {

1013 *
íd
;

1014 
n
;

1015 
n
 = 
	`°πoul
(
¨g
+7, &
íd
, 0);

1016 i‡(
¨g
[7] && !*
íd
) {

1017 
li°í_p‹t
 = 
n
;

1021 i‡(!
	`°rcmp
(
¨g
, "--inetd")) {

1022 
öëd_mode
 = 1;

1023 
log_sy¶og
 = 1;

1026 i‡(!
	`°rcmp
(
¨g
, "--verbose")) {

1027 
vîbo£
 = 1;

1030 i‡(!
	`°rcmp
(
¨g
, "--syslog")) {

1031 
log_sy¶og
 = 1;

1034 i‡(!
	`°rcmp
(
¨g
, "--export-all")) {

1035 
exp‹t_Æl_åìs
 = 1;

1038 i‡(!
	`°∫cmp
(
¨g
, "--timeout=", 10)) {

1039 
timeout
 = 
	`©oi
(
¨g
+10);

1042 i‡(!
	`°∫cmp
(
¨g
, "--init-timeout=", 15)) {

1043 
öô_timeout
 = 
	`©oi
(
¨g
+15);

1046 i‡(!
	`°rcmp
(
¨g
, "--strict-paths")) {

1047 
°ri˘_∑ths
 = 1;

1050 i‡(!
	`°∫cmp
(
¨g
, "--base-path=", 12)) {

1051 
ba£_∑th
 = 
¨g
+12;

1054 i‡(!
	`°∫cmp
(
¨g
, "--interpolated-path=", 20)) {

1055 
öãΩﬁ©ed_∑th
 = 
¨g
+20;

1058 i‡(!
	`°rcmp
(
¨g
, "--reuseaddr")) {

1059 
ªu£addr
 = 1;

1062 i‡(!
	`°rcmp
(
¨g
, "--user-path")) {

1063 
u£r_∑th
 = "";

1066 i‡(!
	`°∫cmp
(
¨g
, "--user-path=", 12)) {

1067 
u£r_∑th
 = 
¨g
 + 12;

1070 i‡(!
	`°∫cmp
(
¨g
, "--pid-file=", 11)) {

1071 
pid_fûe
 = 
¨g
 + 11;

1074 i‡(!
	`°rcmp
(
¨g
, "--detach")) {

1075 
dëach
 = 1;

1076 
log_sy¶og
 = 1;

1079 i‡(!
	`°∫cmp
(
¨g
, "--user=", 7)) {

1080 
u£r_«me
 = 
¨g
 + 7;

1083 i‡(!
	`°∫cmp
(
¨g
, "--group=", 8)) {

1084 
group_«me
 = 
¨g
 + 8;

1087 i‡(!
	`°∫cmp
(
¨g
, "--enable=", 9)) {

1088 
	`íabÀ_£rvi˚
(
¨g
 + 9, 1);

1091 i‡(!
	`°∫cmp
(
¨g
, "--disable=", 10)) {

1092 
	`íabÀ_£rvi˚
(
¨g
 + 10, 0);

1095 i‡(!
	`°∫cmp
(
¨g
, "--allow-override=", 17)) {

1096 
	`make_£rvi˚_ovîridabÀ
(
¨g
 + 17, 1);

1099 i‡(!
	`°∫cmp
(
¨g
, "--forbid-override=", 18)) {

1100 
	`make_£rvi˚_ovîridabÀ
(
¨g
 + 18, 0);

1103 i‡(!
	`°rcmp
(
¨g
, "--")) {

1104 
ok_∑ths
 = &
¨gv
[
i
+1];

1106 } i‡(
¨g
[0] != '-') {

1107 
ok_∑ths
 = &
¨gv
[
i
];

1111 
	`ußge
(
d´m⁄_ußge
);

1114 i‡(
öëd_mode
 && (
group_«me
 || 
u£r_«me
))

1115 
	`dõ
("--useránd --groupáre incompatible with --inetd");

1117 i‡(
öëd_mode
 && (
li°í_p‹t
 || 
li°í_addr
))

1118 
	`dõ
("--listen=ánd --port=áre incompatible with --inetd");

1119 i‡(
li°í_p‹t
 == 0)

1120 
li°í_p‹t
 = 
DEFAULT_GIT_PORT
;

1122 i‡(
group_«me
 && !
u£r_«me
)

1123 
	`dõ
("--group supplied without --user");

1125 i‡(
u£r_«me
) {

1126 
∑ss
 = 
	`gëpw«m
(
u£r_«me
);

1127 i‡(!
∑ss
)

1128 
	`dõ
("u£∏nŸ found - %s", 
u£r_«me
);

1130 i‡(!
group_«me
)

1131 
gid
 = 
∑ss
->
pw_gid
;

1133 
group
 = 
	`gëg∫am
(
group_«me
);

1134 i‡(!
group
)

1135 
	`dõ
("grou∞nŸ found - %s", 
group_«me
);

1137 
gid
 = 
group
->
gr_gid
;

1141 i‡(
log_sy¶og
) {

1142 
	`›ílog
("gô-d´m⁄", 0, 
LOG_DAEMON
);

1143 
	`£t_dõ_routöe
(
d´m⁄_dõ
);

1146 i‡(
°ri˘_∑ths
 && (!
ok_∑ths
 || !*ok_paths))

1147 
	`dõ
("option --strict-pathsÑequiresá whitelist");

1149 i‡(
öëd_mode
) {

1150 
sockaddr_°‹age
 
ss
;

1151 
sockaddr
 *
≥î
 = (sockadd∏*)&
ss
;

1152 
sockÀn_t
 
¶í
 = (
ss
);

1154 
	`‰e›í
("/dev/nuŒ", "w", 
°dîr
);

1156 i‡(
	`gë≥î«me
(0, 
≥î
, &
¶í
))

1157 
≥î
 = 
NULL
;

1159  
	`execuã
(
≥î
);

1162 i‡(
dëach
)

1163 
	`d´m⁄ize
();

1165 
	`ßnôize_°dfds
();

1167 i‡(
pid_fûe
)

1168 
	`°‹e_pid
(
pid_fûe
);

1170  
	`£rve
(
li°í_addr
, 
li°í_p‹t
, 
∑ss
, 
gid
);

1171 
	}
}

	@date.c

7 
	~"ˇche.h
"

9 
time_t
 
	$my_mktime
(
tm
 *tm)

11 c⁄° 
mdays
[] = {

14 
yór
 = 
tm
->
tm_yór
 - 70;

15 
m⁄th
 = 
tm
->
tm_m⁄
;

16 
day
 = 
tm
->
tm_mday
;

18 i‡(
yór
 < 0 || year > 129)

20 i‡(
m⁄th
 < 0 || month > 11)

22 i‡(
m⁄th
 < 2 || (
yór
 + 2) % 4)

23 
day
--;

24  (
yór
 * 365 + (yó∏+ 1Ë/ 4 + 
mdays
[
m⁄th
] + 
day
) * 24*60*60UL +

25 
tm
->
tm_hour
 * 60*60 +Åm->
tm_mö
 * 60 +Åm->
tm_£c
;

26 
	}
}

28 c⁄° *
	gm⁄th_«mes
[] = {

33 c⁄° *
	gwìkday_«mes
[] = {

37 
time_t
 
	$gm_time_t
(
time
, 
tz
)

39 
möuãs
;

41 
möuãs
 = 
tz
 < 0 ? -tz :Åz;

42 
möuãs
 = (minutes / 100)*60 + (minutes % 100);

43 
möuãs
 = 
tz
 < 0 ? -minutes : minutes;

44  
time
 + 
möuãs
 * 60;

45 
	}
}

52 
tm
 *
	$time_to_tm
(
time
, 
tz
)

54 
time_t
 
t
 = 
	`gm_time_t
(
time
, 
tz
);

55  
	`gmtime
(&
t
);

56 
	}
}

58 c⁄° *
	$show_d©e
(
time
, 
tz
, 
ªœtive
)

60 
tm
 *tm;

61 
timebuf
[200];

63 i‡(
ªœtive
) {

64 
diff
;

65 
timevÆ
 
now
;

66 
	`gëtimeofday
(&
now
, 
NULL
);

67 i‡(
now
.
tv_£c
 < 
time
)

69 
diff
 = 
now
.
tv_£c
 - 
time
;

70 i‡(
diff
 < 90) {

71 
	`¢¥ötf
(
timebuf
, —imebuf), "%lu sec⁄d†ago", 
diff
);

72  
timebuf
;

75 
diff
 = (diff + 30) / 60;

76 i‡(
diff
 < 90) {

77 
	`¢¥ötf
(
timebuf
, —imebuf), "%lu möuã†ago", 
diff
);

78  
timebuf
;

81 
diff
 = (diff + 30) / 60;

82 i‡(
diff
 < 36) {

83 
	`¢¥ötf
(
timebuf
, —imebuf), "%lu hour†ago", 
diff
);

84  
timebuf
;

87 
diff
 = (diff + 12) / 24;

88 i‡(
diff
 < 14) {

89 
	`¢¥ötf
(
timebuf
, —imebuf), "%lu day†ago", 
diff
);

90  
timebuf
;

93 i‡(
diff
 < 70) {

94 
	`¢¥ötf
(
timebuf
, —imebuf), "%lu wìk†ago", (
diff
 + 3) / 7);

95  
timebuf
;

98 i‡(
diff
 < 360) {

99 
	`¢¥ötf
(
timebuf
, —imebuf), "%lu m⁄th†ago", (
diff
 + 15) / 30);

100  
timebuf
;

105 
tm
 = 
	`time_to_tm
(
time
, 
tz
);

106 i‡(!
tm
)

107  
NULL
;

108 
	`•rötf
(
timebuf
, "%.3s %.3s %d %02d:%02d:%02d %d %+05d",

109 
wìkday_«mes
[
tm
->
tm_wday
],

110 
m⁄th_«mes
[
tm
->
tm_m⁄
],

111 
tm
->
tm_mday
,

112 
tm
->
tm_hour
,Åm->
tm_mö
,Åm->
tm_£c
,

113 
tm
->
tm_yór
 + 1900, 
tz
);

114  
timebuf
;

115 
	}
}

117 c⁄° *
	$show_rfc2822_d©e
(
time
, 
tz
)

119 
tm
 *tm;

120 
timebuf
[200];

122 
tm
 = 
	`time_to_tm
(
time
, 
tz
);

123 i‡(!
tm
)

124  
NULL
;

125 
	`•rötf
(
timebuf
, "%.3s, %d %.3s %d %02d:%02d:%02d %+05d",

126 
wìkday_«mes
[
tm
->
tm_wday
],Åm->
tm_mday
,

127 
m⁄th_«mes
[
tm
->
tm_m⁄
],Åm->
tm_yór
 + 1900,

128 
tm
->
tm_hour
,Åm->
tm_mö
,Åm->
tm_£c
, 
tz
);

129  
timebuf
;

130 
	}
}

139 c⁄° *
	m«me
;

140 
	moff£t
;

141 
	md°
;

142 } 
	gtimez⁄e_«mes
[] = {

190 
	$m©ch_°rög
(c⁄° *
d©e
, c⁄° *
°r
)

192 
i
 = 0;

194 
i
 = 0; *
d©e
; d©e++, 
°r
++, i++) {

195 i‡(*
d©e
 =*
°r
)

197 i‡(
	`touµî
(*
d©e
Ë=touµî(*
°r
))

199 i‡(!
	`iß um
(*
d©e
))

203  
i
;

204 
	}
}

206 
	$skù_Æpha
(c⁄° *
d©e
)

208 
i
 = 0;

210 
i
++;

211 } 
	`ißÕha
(
d©e
[
i
]));

212  
i
;

213 
	}
}

218 
	$m©ch_Æpha
(c⁄° *
d©e
, 
tm
 *tm, *
off£t
)

220 
i
;

222 
i
 = 0; i < 12; i++) {

223 
m©ch
 = 
	`m©ch_°rög
(
d©e
, 
m⁄th_«mes
[
i
]);

224 i‡(
m©ch
 >= 3) {

225 
tm
->
tm_m⁄
 = 
i
;

226  
m©ch
;

230 
i
 = 0; i < 7; i++) {

231 
m©ch
 = 
	`m©ch_°rög
(
d©e
, 
wìkday_«mes
[
i
]);

232 i‡(
m©ch
 >= 3) {

233 
tm
->
tm_wday
 = 
i
;

234  
m©ch
;

238 
i
 = 0; i < 
	`ARRAY_SIZE
(
timez⁄e_«mes
); i++) {

239 
m©ch
 = 
	`m©ch_°rög
(
d©e
, 
timez⁄e_«mes
[
i
].
«me
);

240 i‡(
m©ch
 >= 3) {

241 
off
 = 
timez⁄e_«mes
[
i
].
off£t
;

244 
off
 +
timez⁄e_«mes
[
i
].
d°
;

247 i‡(*
off£t
 == -1)

248 *
off£t
 = 60*
off
;

250  
m©ch
;

254 i‡(
	`m©ch_°rög
(
d©e
, "PM") == 2) {

255 
tm
->
tm_hour
 = (tm->tm_hour % 12) + 12;

259 i‡(
	`m©ch_°rög
(
d©e
, "AM") == 2) {

260 
tm
->
tm_hour
 = (tm->tm_hour % 12) + 0;

265  
	`skù_Æpha
(
d©e
);

266 
	}
}

268 
	$is_d©e
(
yór
, 
m⁄th
, 
day
, 
tm
 *
now_tm
, 
time_t
 
now
, tm *tm)

270 i‡(
m⁄th
 > 0 && m⁄th < 13 && 
day
 > 0 && day < 32) {

271 
tm
 
check
 = *tm;

272 
tm
 *
r
 = (
now_tm
 ? &
check
 :Åm);

273 
time_t
 
•ecifõd
;

275 
r
->
tm_m⁄
 = 
m⁄th
 - 1;

276 
r
->
tm_mday
 = 
day
;

277 i‡(
yór
 == -1) {

278 i‡(!
now_tm
)

280 
r
->
tm_yór
 = 
now_tm
->tm_year;

282 i‡(
yór
 >= 1970 && year < 2100)

283 
r
->
tm_yór
 = 
yór
 - 1900;

284 i‡(
yór
 > 70 && year < 100)

285 
r
->
tm_yór
 = 
yór
;

286 i‡(
yór
 < 38)

287 
r
->
tm_yór
 = 
yór
 + 100;

290 i‡(!
now_tm
)

293 
•ecifõd
 = 
	`my_mktime
(
r
);

299 i‡(
now
 + 10*24*3600 < 
•ecifõd
)

301 
tm
->
tm_m⁄
 = 
r
->tm_mon;

302 
tm
->
tm_mday
 = 
r
->tm_mday;

303 i‡(
yór
 != -1)

304 
tm
->
tm_yór
 = 
r
->tm_year;

308 
	}
}

310 
	$m©ch_mu…i_numbî
(
num
, 
c
, c⁄° *
d©e
, *
íd
, 
tm
 *tm)

312 
time_t
 
now
;

313 
tm
 
now_tm
;

314 
tm
 *
ªfu£_futuª
;

315 
num2
, 
num3
;

317 
num2
 = 
	`°πﬁ
(
íd
+1, &end, 10);

318 
num3
 = -1;

319 i‡(*
íd
 =
c
 && 
	`isdigô
(end[1]))

320 
num3
 = 
	`°πﬁ
(
íd
+1, &end, 10);

323 
c
) {

325 i‡(
num3
 < 0)

326 
num3
 = 0;

327 i‡(
num
 < 25 && 
num2
 >0 &&Çum2 < 60 && 
num3
 >= 0 &&Çum3 <= 60) {

328 
tm
->
tm_hour
 = 
num
;

329 
tm
->
tm_mö
 = 
num2
;

330 
tm
->
tm_£c
 = 
num3
;

338 
now
 = 
	`time
(
NULL
);

339 
ªfu£_futuª
 = 
NULL
;

340 i‡(
	`gmtime_r
(&
now
, &
now_tm
))

341 
ªfu£_futuª
 = &
now_tm
;

343 i‡(
num
 > 70) {

345 i‡(
	`is_d©e
(
num
, 
num2
, 
num3
, 
ªfu£_futuª
, 
now
, 
tm
))

348 i‡(
	`is_d©e
(
num
, 
num3
, 
num2
, 
ªfu£_futuª
, 
now
, 
tm
))

355 i‡(
c
 != '.' &&

356 
	`is_d©e
(
num3
, 
num
, 
num2
, 
ªfu£_futuª
, 
now
, 
tm
))

359 i‡(
	`is_d©e
(
num3
, 
num2
, 
num
, 
ªfu£_futuª
, 
now
, 
tm
))

362 i‡(
c
 == '.' &&

363 
	`is_d©e
(
num3
, 
num
, 
num2
, 
ªfu£_futuª
, 
now
, 
tm
))

367  
íd
 - 
d©e
;

368 
	}
}

373 
	$m©ch_digô
(c⁄° *
d©e
, 
tm
 *tm, *
off£t
, *
tm_gmt
)

375 
n
;

376 *
íd
;

377 
num
;

379 
num
 = 
	`°πoul
(
d©e
, &
íd
, 10);

384 i‡(
num
 > 946684800) {

385 
time_t
 
time
 = 
num
;

386 i‡(
	`gmtime_r
(&
time
, 
tm
)) {

387 *
tm_gmt
 = 1;

388  
íd
 - 
d©e
;

395 *
íd
) {

400 i‡(
	`isdigô
(
íd
[1])) {

401 
m©ch
 = 
	`m©ch_mu…i_numbî
(
num
, *
íd
, 
d©e
,Énd, 
tm
);

402 i‡(
m©ch
)

403  
m©ch
;

412 
n
 = 0;

414 
n
++;

415 } 
	`isdigô
(
d©e
[
n
]));

418 i‡(
n
 == 4) {

419 i‡(
num
 <1400 && *
off£t
 == -1) {

420 
möuãs
 = 
num
 % 100;

421 
hours
 = 
num
 / 100;

422 *
off£t
 = 
hours
*60 + 
möuãs
;

423 } i‡(
num
 > 1900 &&Çum < 2100)

424 
tm
->
tm_yór
 = 
num
 - 1900;

425  
n
;

435 i‡(
num
 > 0 &&Çum < 32 && 
tm
->
tm_mday
 < 0) {

436 
tm
->
tm_mday
 = 
num
;

437  
n
;

441 i‡(
n
 =2 && 
tm
->
tm_yór
 < 0) {

442 i‡(
num
 < 10 && 
tm
->
tm_mday
 >= 0) {

443 
tm
->
tm_yór
 = 
num
 + 100;

444  
n
;

446 i‡(
num
 >= 70) {

447 
tm
->
tm_yór
 = 
num
;

448  
n
;

452 i‡(
num
 > 0 &&Çum < 32) {

453 
tm
->
tm_mday
 = 
num
;

454 } i‡(
num
 > 1900) {

455 
tm
->
tm_yór
 = 
num
 - 1900;

456 } i‡(
num
 > 70) {

457 
tm
->
tm_yór
 = 
num
;

458 } i‡(
num
 > 0 &&Çum < 13) {

459 
tm
->
tm_m⁄
 = 
num
-1;

462  
n
;

463 
	}
}

465 
	$m©ch_tz
(c⁄° *
d©e
, *
ofÂ
)

467 *
íd
;

468 
off£t
 = 
	`°πoul
(
d©e
+1, &
íd
, 10);

469 
mö
, 
hour
;

470 
n
 = 
íd
 - 
d©e
 - 1;

472 
mö
 = 
off£t
 % 100;

473 
hour
 = 
off£t
 / 100;

480 i‡(
mö
 < 60 && 
n
 > 2) {

481 
off£t
 = 
hour
*60+
mö
;

482 i‡(*
d©e
 == '-')

483 
off£t
 = -offset;

485 *
ofÂ
 = 
off£t
;

487  
íd
 - 
d©e
;

488 
	}
}

490 
	$d©e_°rög
(
d©e
, 
off£t
, *
buf
, 
Àn
)

492 
sign
 = '+';

494 i‡(
off£t
 < 0) {

495 
off£t
 = -offset;

496 
sign
 = '-';

498  
	`¢¥ötf
(
buf
, 
Àn
, "%lu %c%02d%02d", 
d©e
, 
sign
, 
off£t
 / 60, offset % 60);

499 
	}
}

503 
	$∑r£_d©e
(c⁄° *
d©e
, *
ªsu…
, 
maxÀn
)

505 
tm
Åm;

506 
off£t
, 
tm_gmt
;

507 
time_t
 
thí
;

509 
	`mem£t
(&
tm
, 0, (tm));

510 
tm
.
tm_yór
 = -1;

511 
tm
.
tm_m⁄
 = -1;

512 
tm
.
tm_mday
 = -1;

513 
tm
.
tm_isd°
 = -1;

514 
off£t
 = -1;

515 
tm_gmt
 = 0;

518 
m©ch
 = 0;

519 
c
 = *
d©e
;

522 i‡(!
c
 || c == '\n')

525 i‡(
	`ißÕha
(
c
))

526 
m©ch
 = 
	`m©ch_Æpha
(
d©e
, &
tm
, &
off£t
);

527 i‡(
	`isdigô
(
c
))

528 
m©ch
 = 
	`m©ch_digô
(
d©e
, &
tm
, &
off£t
, &
tm_gmt
);

529 i‡((
c
 ='-' || c ='+'Ë&& 
	`isdigô
(
d©e
[1]))

530 
m©ch
 = 
	`m©ch_tz
(
d©e
, &
off£t
);

532 i‡(!
m©ch
) {

534 
m©ch
 = 1;

537 
d©e
 +
m©ch
;

541 
thí
 = 
	`my_mktime
(&
tm
);

542 i‡(
off£t
 == -1)

543 
off£t
 = (
thí
 - 
	`mktime
(&
tm
)) / 60;

545 i‡(
thí
 == -1)

548 i‡(!
tm_gmt
)

549 
thí
 -
off£t
 * 60;

550  
	`d©e_°rög
(
thí
, 
off£t
, 
ªsu…
, 
maxÀn
);

551 
	}
}

553 
	$d©e°amp
(*
buf
, 
bufsize
)

555 
time_t
 
now
;

556 
off£t
;

558 
	`time
(&
now
);

560 
off£t
 = 
	`my_mktime
(
	`loˇ…ime
(&
now
)) -Çow;

561 
off£t
 /= 60;

563 
	`d©e_°rög
(
now
, 
off£t
, 
buf
, 
bufsize
);

564 
	}
}

566 
	$upd©e_tm
(
tm
 *tm, 
£c
)

568 
time_t
 
n
 = 
	`mktime
(
tm
Ë- 
£c
;

569 
	`loˇ…ime_r
(&
n
, 
tm
);

570 
	}
}

572 
	$d©e_ye°îday
(
tm
 *tm, *
num
)

574 
	`upd©e_tm
(
tm
, 24*60*60);

575 
	}
}

577 
	$d©e_time
(
tm
 *tm, 
hour
)

579 i‡(
tm
->
tm_hour
 < 
hour
)

580 
	`d©e_ye°îday
(
tm
, 
NULL
);

581 
tm
->
tm_hour
 = 
hour
;

582 
tm
->
tm_mö
 = 0;

583 
tm
->
tm_£c
 = 0;

584 
	}
}

586 
	$d©e_midnight
(
tm
 *tm, *
num
)

588 
	`d©e_time
(
tm
, 0);

589 
	}
}

591 
	$d©e_no⁄
(
tm
 *tm, *
num
)

593 
	`d©e_time
(
tm
, 12);

594 
	}
}

596 
	$d©e_ãa
(
tm
 *tm, *
num
)

598 
	`d©e_time
(
tm
, 17);

599 
	}
}

601 
	$d©e_pm
(
tm
 *tm, *
num
)

603 
hour
, 
n
 = *
num
;

604 *
num
 = 0;

606 
hour
 = 
tm
->
tm_hour
;

607 i‡(
n
) {

608 
hour
 = 
n
;

609 
tm
->
tm_mö
 = 0;

610 
tm
->
tm_£c
 = 0;

612 
tm
->
tm_hour
 = (
hour
 % 12) + 12;

613 
	}
}

615 
	$d©e_am
(
tm
 *tm, *
num
)

617 
hour
, 
n
 = *
num
;

618 *
num
 = 0;

620 
hour
 = 
tm
->
tm_hour
;

621 i‡(
n
) {

622 
hour
 = 
n
;

623 
tm
->
tm_mö
 = 0;

624 
tm
->
tm_£c
 = 0;

626 
tm
->
tm_hour
 = (
hour
 % 12);

627 
	}
}

629 c⁄° 
	s•ecül
 {

630 c⁄° *
	m«me
;

631 (*
	m‚
)(
	mtm
 *, *);

632 } 
	g•ecül
[] = {

633 { "ye°îday", 
d©e_ye°îday
 },

634 { "no⁄", 
d©e_no⁄
 },

635 { "midnight", 
d©e_midnight
 },

636 { "ãa", 
d©e_ãa
 },

637 { "PM", 
d©e_pm
 },

638 { "AM", 
d©e_am
 },

639 { 
NULL
 }

642 c⁄° *
	gnumbî_«me
[] = {

647 c⁄° 
	sty≥Àn
 {

648 c⁄° *
	mty≥
;

649 
	mÀngth
;

650 } 
	gty≥Àn
[] = {

656 { 
NULL
 }

659 c⁄° *
	$≠¥oxid©e_Æpha
(c⁄° *
d©e
, 
tm
 *tm, *
num
)

661 c⁄° 
ty≥Àn
 *
é
;

662 c⁄° 
•ecül
 *
s
;

663 c⁄° *
íd
 = 
d©e
;

664 
i
;

666 
	`ißÕha
(*++
íd
));

669 
i
 = 0; i < 12; i++) {

670 
m©ch
 = 
	`m©ch_°rög
(
d©e
, 
m⁄th_«mes
[
i
]);

671 i‡(
m©ch
 >= 3) {

672 
tm
->
tm_m⁄
 = 
i
;

673  
íd
;

677 
s
 = 
•ecül
; s->
«me
; s++) {

678 
Àn
 = 
	`°æí
(
s
->
«me
);

679 i‡(
	`m©ch_°rög
(
d©e
, 
s
->
«me
Ë=
Àn
) {

680 
s
->
	`‚
(
tm
, 
num
);

681  
íd
;

685 i‡(!*
num
) {

686 
i
 = 1; i < 11; i++) {

687 
Àn
 = 
	`°æí
(
numbî_«me
[
i
]);

688 i‡(
	`m©ch_°rög
(
d©e
, 
numbî_«me
[
i
]Ë=
Àn
) {

689 *
num
 = 
i
;

690  
íd
;

693 i‡(
	`m©ch_°rög
(
d©e
, "last") == 4)

694 *
num
 = 1;

695  
íd
;

698 
é
 = 
ty≥Àn
;

699 
é
->
ty≥
) {

700 
Àn
 = 
	`°æí
(
é
->
ty≥
);

701 i‡(
	`m©ch_°rög
(
d©e
, 
é
->
ty≥
Ë>
Àn
-1) {

702 
	`upd©e_tm
(
tm
, 
é
->
Àngth
 * *
num
);

703 *
num
 = 0;

704  
íd
;

706 
é
++;

709 
i
 = 0; i < 7; i++) {

710 
m©ch
 = 
	`m©ch_°rög
(
d©e
, 
wìkday_«mes
[
i
]);

711 i‡(
m©ch
 >= 3) {

712 
diff
, 
n
 = *
num
 -1;

713 *
num
 = 0;

715 
diff
 = 
tm
->
tm_wday
 - 
i
;

716 i‡(
diff
 <= 0)

717 
n
++;

718 
diff
 +7*
n
;

720 
	`upd©e_tm
(
tm
, 
diff
 * 24 * 60 * 60);

721  
íd
;

725 i‡(
	`m©ch_°rög
(
d©e
, "months") >= 5) {

726 
n
 = 
tm
->
tm_m⁄
 - *
num
;

727 *
num
 = 0;

728 
n
 < 0) {

729 
n
 += 12;

730 
tm
->
tm_yór
--;

732 
tm
->
tm_m⁄
 = 
n
;

733  
íd
;

736 i‡(
	`m©ch_°rög
(
d©e
, "years") >= 4) {

737 
tm
->
tm_yór
 -*
num
;

738 *
num
 = 0;

739  
íd
;

742  
íd
;

743 
	}
}

745 c⁄° *
	$≠¥oxid©e_digô
(c⁄° *
d©e
, 
tm
 *tm, *
num
)

747 *
íd
;

748 
numbî
 = 
	`°πoul
(
d©e
, &
íd
, 10);

750 *
íd
) {

755 i‡(
	`isdigô
(
íd
[1])) {

756 
m©ch
 = 
	`m©ch_mu…i_numbî
(
numbî
, *
íd
, 
d©e
,Énd, 
tm
);

757 i‡(
m©ch
)

758  
d©e
 + 
m©ch
;

762 *
num
 = 
numbî
;

763  
íd
;

764 
	}
}

766 
	$≠¥oxid©e
(c⁄° *
d©e
)

768 
numbî
 = 0;

769 
tm
Åm, 
now
;

770 
timevÆ
 
tv
;

771 
buf„r
[50];

773 i‡(
	`∑r£_d©e
(
d©e
, 
buf„r
, (buffer)) > 0)

774  
	`°πoul
(
buf„r
, 
NULL
, 10);

776 
	`gëtimeofday
(&
tv
, 
NULL
);

777 
	`loˇ…ime_r
(&
tv
.
tv_£c
, &
tm
);

778 
now
 = 
tm
;

780 
c
 = *
d©e
;

781 i‡(!
c
)

783 
d©e
++;

784 i‡(
	`isdigô
(
c
)) {

785 
d©e
 = 
	`≠¥oxid©e_digô
(d©e-1, &
tm
, &
numbî
);

788 i‡(
	`ißÕha
(
c
))

789 
d©e
 = 
	`≠¥oxid©e_Æpha
(d©e-1, &
tm
, &
numbî
);

791 i‡(
numbî
 > 0 &&Çumber < 32)

792 
tm
.
tm_mday
 = 
numbî
;

793 i‡(
tm
.
tm_m⁄
 > 
now
.tm_m⁄ &&Åm.
tm_yór
 ==Çow.tm_year)

794 
tm
.
tm_yór
--;

795  
	`mktime
(&
tm
);

796 
	}
}

	@delta.h

1 #i‚de‡
DELTA_H


2 
	#DELTA_H


	)

5 
	gdñè_ödex
;

16 
dñè_ödex
 *

17 
¸óã_dñè_ödex
(c⁄° *
buf
, 
bufsize
);

24 
‰ì_dñè_ödex
(
dñè_ödex
 *
ödex
);

37 
¸óã_dñè
(c⁄° 
dñè_ödex
 *
ödex
,

38 c⁄° *
buf
, 
bufsize
,

39 *
dñè_size
, 
max_dñè_size
);

49 
ölöe
 *

50 
	$diff_dñè
(c⁄° *
§c_buf
, 
§c_bufsize
,

51 c⁄° *
åg_buf
, 
åg_bufsize
,

52 *
dñè_size
, 
max_dñè_size
)

54 
dñè_ödex
 *
ödex
 = 
	`¸óã_dñè_ödex
(
§c_buf
, 
§c_bufsize
);

55 i‡(
ödex
) {

56 *
dñè
 = 
	`¸óã_dñè
(
ödex
, 
åg_buf
, 
åg_bufsize
,

57 
dñè_size
, 
max_dñè_size
);

58 
	`‰ì_dñè_ödex
(
ödex
);

59  
dñè
;

61  
NULL
;

62 
	}
}

71 *
∑tch_dñè
(c⁄° *
§c_buf
, 
§c_size
,

72 c⁄° *
dñè_buf
, 
dñè_size
,

73 *
d°_size
);

76 
	#DELTA_SIZE_MIN
 4

	)

82 
ölöe
 
	$gë_dñè_hdr_size
(c⁄° **
d©≠
,

83 c⁄° *
t›
)

85 c⁄° *
d©a
 = *
d©≠
;

86 
cmd
;

87 
size
 = 0;

88 
i
 = 0;

90 
cmd
 = *
d©a
++;

91 
size
 |(
cmd
 & ~0x80Ë<< 
i
;

92 
i
 += 7;

93 } 
cmd
 & 0x80 && 
d©a
 < 
t›
);

94 *
d©≠
 = 
d©a
;

95  
size
;

96 
	}
}

	@diff-delta.c

21 
	~"gô-com∑t-utû.h
"

22 
	~"dñè.h
"

25 
	#HASH_LIMIT
 64

	)

27 
	#RABIN_SHIFT
 23

	)

28 
	#RABIN_WINDOW
 16

	)

30 c⁄° 
	gT
[256] = {

76 c⁄° 
	gU
[256] = {

122 
	södex_íåy
 {

123 c⁄° *
	m±r
;

124 
	mvÆ
;

125 
ödex_íåy
 *
	m√xt
;

128 
	sdñè_ödex
 {

129 c⁄° *
	m§c_buf
;

130 
	m§c_size
;

131 
	mhash_mask
;

132 
ödex_íåy
 *
	mhash
[
FLEX_ARRAY
];

135 
dñè_ödex
 * 
	$¸óã_dñè_ödex
(c⁄° *
buf
, 
bufsize
)

137 
i
, 
hsize
, 
hmask
, 
íåõs
, 
¥ev_vÆ
, *
hash_cou¡
;

138 c⁄° *
d©a
, *
buf„r
 = 
buf
;

139 
dñè_ödex
 *
ödex
;

140 
ödex_íåy
 *
íåy
, **
hash
;

141 *
mem
;

142 
memsize
;

144 i‡(!
buf
 || !
bufsize
)

145  
NULL
;

150 
íåõs
 = (
bufsize
 - 1Ë/ 
RABIN_WINDOW
;

151 
hsize
 = 
íåõs
 / 4;

152 
i
 = 4; (1u << iË< 
hsize
 && i < 31; i++);

153 
hsize
 = 1 << 
i
;

154 
hmask
 = 
hsize
 - 1;

157 
memsize
 = (*
ödex
) +

158 (*
hash
Ë* 
hsize
 +

159 (*
íåy
Ë* 
íåõs
;

160 
mem
 = 
	`mÆloc
(
memsize
);

161 i‡(!
mem
)

162  
NULL
;

163 
ödex
 = 
mem
;

164 
mem
 = 
ödex
 + 1;

165 
hash
 = 
mem
;

166 
mem
 = 
hash
 + 
hsize
;

167 
íåy
 = 
mem
;

169 
ödex
->
§c_buf
 = 
buf
;

170 
ödex
->
§c_size
 = 
bufsize
;

171 
ödex
->
hash_mask
 = 
hmask
;

172 
	`mem£t
(
hash
, 0, 
hsize
 * (*hash));

175 
hash_cou¡
 = 
	`ˇŒoc
(
hsize
, (*hash_count));

176 i‡(!
hash_cou¡
) {

177 
	`‰ì
(
ödex
);

178  
NULL
;

182 
¥ev_vÆ
 = ~0;

183 
d©a
 = 
buf„r
 + 
íåõs
 * 
RABIN_WINDOW
 - RABIN_WINDOW;

184 
d©a
 >
buf„r
;

185 
d©a
 -
RABIN_WINDOW
) {

186 
vÆ
 = 0;

187 
i
 = 1; i <
RABIN_WINDOW
; i++)

188 
vÆ
 = ((vÆ << 8Ë| 
d©a
[
i
]Ë^ 
T
[vÆ >> 
RABIN_SHIFT
];

189 i‡(
vÆ
 =
¥ev_vÆ
) {

191 
íåy
[-1].
±r
 = 
d©a
 + 
RABIN_WINDOW
;

193 
¥ev_vÆ
 = 
vÆ
;

194 
i
 = 
vÆ
 & 
hmask
;

195 
íåy
->
±r
 = 
d©a
 + 
RABIN_WINDOW
;

196 
íåy
->
vÆ
 = val;

197 
íåy
->
√xt
 = 
hash
[
i
];

198 
hash
[
i
] = 
íåy
++;

199 
hash_cou¡
[
i
]++;

215 
i
 = 0; i < 
hsize
; i++) {

216 i‡(
hash_cou¡
[
i
] < 
HASH_LIMIT
)

218 
íåy
 = 
hash
[
i
];

220 
ödex_íåy
 *
kìp
 = 
íåy
;

221 
skù
 = 
hash_cou¡
[
i
] / 
HASH_LIMIT
 / 2;

223 
íåy
 =É¡ry->
√xt
;

224 } --
skù
 && 
íåy
);

225 
kìp
->
√xt
 = 
íåy
;

226 } 
íåy
);

228 
	`‰ì
(
hash_cou¡
);

230  
ödex
;

231 
	}
}

233 
	$‰ì_dñè_ödex
(
dñè_ödex
 *
ödex
)

235 
	`‰ì
(
ödex
);

236 
	}
}

242 
	#MAX_OP_SIZE
 (5 + 5 + 1 + 
RABIN_WINDOW
 + 7)

	)

245 
	$¸óã_dñè
(c⁄° 
dñè_ödex
 *
ödex
,

246 c⁄° *
åg_buf
, 
åg_size
,

247 *
dñè_size
, 
max_size
)

249 
i
, 
ouços
, 
outsize
, 
vÆ
;

250 
ös˙t
;

251 c⁄° *
ªf_d©a
, *
ªf_t›
, *
d©a
, *
t›
;

252 *
out
;

254 i‡(!
åg_buf
 || !
åg_size
)

255  
NULL
;

257 
ouços
 = 0;

258 
outsize
 = 8192;

259 i‡(
max_size
 && 
outsize
 >= max_size)

260 
outsize
 = 
max_size
 + 
MAX_OP_SIZE
 + 1;

261 
out
 = 
	`mÆloc
(
outsize
);

262 i‡(!
out
)

263  
NULL
;

266 
i
 = 
ödex
->
§c_size
;

267 
i
 >= 0x80) {

268 
out
[
ouços
++] = 
i
 | 0x80;

269 
i
 >>= 7;

271 
out
[
ouços
++] = 
i
;

274 
i
 = 
åg_size
;

275 
i
 >= 0x80) {

276 
out
[
ouços
++] = 
i
 | 0x80;

277 
i
 >>= 7;

279 
out
[
ouços
++] = 
i
;

281 
ªf_d©a
 = 
ödex
->
§c_buf
;

282 
ªf_t›
 = 
ªf_d©a
 + 
ödex
->
§c_size
;

283 
d©a
 = 
åg_buf
;

284 
t›
 = (c⁄° *Ë
åg_buf
 + 
åg_size
;

286 
ouços
++;

287 
vÆ
 = 0;

288 
i
 = 0; i < 
RABIN_WINDOW
 && 
d©a
 < 
t›
; i++, data++) {

289 
out
[
ouços
++] = *
d©a
;

290 
vÆ
 = ((vÆ << 8Ë| *
d©a
Ë^ 
T
[vÆ >> 
RABIN_SHIFT
];

292 
ös˙t
 = 
i
;

294 
d©a
 < 
t›
) {

295 
moff
 = 0, 
msize
 = 0;

296 
ödex_íåy
 *
íåy
;

297 
vÆ
 ^
U
[
d©a
[-
RABIN_WINDOW
]];

298 
vÆ
 = ((vÆ << 8Ë| *
d©a
Ë^ 
T
[vÆ >> 
RABIN_SHIFT
];

299 
i
 = 
vÆ
 & 
ödex
->
hash_mask
;

300 
íåy
 = 
ödex
->
hash
[
i
];É¡ry;É¡ry =É¡ry->
√xt
) {

301 c⁄° *
ªf
 = 
íåy
->
±r
;

302 c⁄° *
§c
 = 
d©a
;

303 
ªf_size
 = 
ªf_t›
 - 
ªf
;

304 i‡(
íåy
->
vÆ
 != val)

306 i‡(
ªf_size
 > 
t›
 - 
§c
)

307 
ªf_size
 = 
t›
 - 
§c
;

308 i‡(
ªf_size
 > 0x10000)

309 
ªf_size
 = 0x10000;

310 i‡(
ªf_size
 <
msize
)

312 
ªf_size
-- && *
§c
++ =*
ªf
)

313 
ªf
++;

314 i‡(
msize
 < 
ªf
 - 
íåy
->
±r
) {

316 
msize
 = 
ªf
 - 
íåy
->
±r
;

317 
moff
 = 
íåy
->
±r
 - 
ªf_d©a
;

321 i‡(
msize
 < 4) {

322 i‡(!
ös˙t
)

323 
ouços
++;

324 
out
[
ouços
++] = *
d©a
++;

325 
ös˙t
++;

326 i‡(
ös˙t
 == 0x7f) {

327 
out
[
ouços
 - 
ös˙t
 - 1] = inscnt;

328 
ös˙t
 = 0;

331 *
›
;

333 i‡(
msize
 >
RABIN_WINDOW
) {

334 c⁄° *
sk
;

335 
sk
 = 
d©a
 + 
msize
 - 
RABIN_WINDOW
;

336 
vÆ
 = 0;

337 
i
 = 0; i < 
RABIN_WINDOW
; i++)

338 
vÆ
 = ((vÆ << 8Ë| *
sk
++Ë^ 
T
[vÆ >> 
RABIN_SHIFT
];

340 c⁄° *
sk
 = 
d©a
 + 1;

341 
i
 = 1; i < 
msize
; i++) {

342 
vÆ
 ^
U
[
sk
[-
RABIN_WINDOW
]];

343 
vÆ
 = ((vÆ << 8Ë| *
sk
++Ë^ 
T
[vÆ >> 
RABIN_SHIFT
];

347 i‡(
ös˙t
) {

348 
moff
 && 
ªf_d©a
[moff-1] =
d©a
[-1]) {

349 i‡(
msize
 == 0x10000)

352 
msize
++;

353 
moff
--;

354 
d©a
--;

355 
ouços
--;

356 i‡(--
ös˙t
)

358 
ouços
--;

359 
ös˙t
--;

362 
out
[
ouços
 - 
ös˙t
 - 1] = inscnt;

363 
ös˙t
 = 0;

366 
d©a
 +
msize
;

367 
›
 = 
out
 + 
ouços
++;

368 
i
 = 0x80;

370 i‡(
moff
 & 0xffË{ 
out
[
ouços
++] = moff; 
i
 |= 0x01; }

371 
moff
 >>= 8;

372 i‡(
moff
 & 0xffË{ 
out
[
ouços
++] = moff; 
i
 |= 0x02; }

373 
moff
 >>= 8;

374 i‡(
moff
 & 0xffË{ 
out
[
ouços
++] = moff; 
i
 |= 0x04; }

375 
moff
 >>= 8;

376 i‡(
moff
 & 0xffË{ 
out
[
ouços
++] = moff; 
i
 |= 0x08; }

378 i‡(
msize
 & 0xffË{ 
out
[
ouços
++] = msize; 
i
 |= 0x10; }

379 
msize
 >>= 8;

380 i‡(
msize
 & 0xffË{ 
out
[
ouços
++] = msize; 
i
 |= 0x20; }

382 *
›
 = 
i
;

385 i‡(
ouços
 >
outsize
 - 
MAX_OP_SIZE
) {

386 *
tmp
 = 
out
;

387 
outsize
 = outsize * 3 / 2;

388 i‡(
max_size
 && 
outsize
 >= max_size)

389 
outsize
 = 
max_size
 + 
MAX_OP_SIZE
 + 1;

390 i‡(
max_size
 && 
ouços
 > max_size)

392 
out
 = 
	`xªÆloc
(out, 
outsize
);

393 i‡(!
out
) {

394 
	`‰ì
(
tmp
);

395  
NULL
;

400 i‡(
ös˙t
)

401 
out
[
ouços
 - 
ös˙t
 - 1] = inscnt;

403 i‡(
max_size
 && 
ouços
 > max_size) {

404 
	`‰ì
(
out
);

405  
NULL
;

408 *
dñè_size
 = 
ouços
;

409  
out
;

410 
	}
}

	@diff-lib.c

4 
	~"ˇche.h
"

5 
	~"quŸe.h
"

6 
	~"commô.h
"

7 
	~"diff.h
"

8 
	~"diffc‹e.h
"

9 
	~"ªvisi⁄.h
"

10 
	~"ˇche-åì.h
"

16 
	$run_diff_fûes
(
ªv_öfo
 *
ªvs
, 
sûít_⁄_ªmoved
)

18 
íåõs
, 
i
;

19 
diff_unmîged_°age
 = 
ªvs
->
max_cou¡
;

21 i‡(
diff_unmîged_°age
 < 0)

22 
diff_unmîged_°age
 = 2;

23 
íåõs
 = 
	`ªad_ˇche
();

24 i‡(
íåõs
 < 0) {

25 
	`≥º‹
("read_cache");

28 
i
 = 0; i < 
íåõs
; i++) {

29 
°©
 
°
;

30 
ﬁdmode
, 
√wmode
;

31 
ˇche_íåy
 *
˚
 = 
a˘ive_ˇche
[
i
];

32 
ch™ged
;

34 i‡(!
	`˚_∑th_m©ch
(
˚
, 
ªvs
->
¥u√_d©a
))

37 i‡(
	`˚_°age
(
˚
)) {

38 
comböe_diff_∑th
 *
d∑th
;

39 
num_com∑ª_°ages
 = 0;

40 
size_t
 
∑th_Àn
;

42 
∑th_Àn
 = 
	`˚_«mñí
(
˚
);

44 
d∑th
 = 
	`xmÆloc
 (
	`comböe_diff_∑th_size
 (5, 
∑th_Àn
));

45 
d∑th
->
∑th
 = (*Ë&(d∑th->
∑ª¡
[5]);

47 
d∑th
->
√xt
 = 
NULL
;

48 
d∑th
->
Àn
 = 
∑th_Àn
;

49 
	`mem˝y
(
d∑th
->
∑th
, 
˚
->
«me
, 
∑th_Àn
);

50 
d∑th
->
∑th
[
∑th_Àn
] = '\0';

51 
d∑th
->
mode
 = 0;

52 
	`hash˛r
(
d∑th
->
sha1
);

53 
	`mem£t
(&(
d∑th
->
∑ª¡
[0]), 0,

54 (
comböe_diff_∑ª¡
)*5);

56 
i
 < 
íåõs
) {

57 
ˇche_íåy
 *
n˚
 = 
a˘ive_ˇche
[
i
];

58 
°age
;

60 i‡(
	`°rcmp
(
˚
->
«me
, 
n˚
->name))

66 
°age
 = 
	`˚_°age
(
n˚
);

67 i‡(2 <
°age
) {

68 
mode
 = 
	`¡ohl
(
n˚
->
˚_mode
);

69 
num_com∑ª_°ages
++;

70 
	`hash˝y
(
d∑th
->
∑ª¡
[
°age
-2].
sha1
, 
n˚
->sha1);

71 
d∑th
->
∑ª¡
[
°age
-2].
mode
 =

72 
	`ˇn⁄_mode
(
mode
);

73 
d∑th
->
∑ª¡
[
°age
-2].
°©us
 =

74 
DIFF_STATUS_MODIFIED
;

78 i‡(
°age
 =
diff_unmîged_°age
)

79 
˚
 = 
n˚
;

80 
i
++;

85 
i
--;

87 i‡(
ªvs
->
comböe_mîges
 && 
num_com∑ª_°ages
 == 2) {

88 
	`show_comböed_diff
(
d∑th
, 2,

89 
ªvs
->
dí£_comböed_mîges
,

90 
ªvs
);

91 
	`‰ì
(
d∑th
);

94 
	`‰ì
(
d∑th
);

95 
d∑th
 = 
NULL
;

101 
	`diff_unmîge
(&
ªvs
->
diff›t
, 
˚
->
«me
, 0, 
nuŒ_sha1
);

102 i‡(
	`˚_°age
(
˚
Ë!
diff_unmîged_°age
)

106 i‡(
	`l°©
(
˚
->
«me
, &
°
) < 0) {

107 i‡(
î∫o
 !
ENOENT
 &&Éºnÿ!
ENOTDIR
) {

108 
	`≥º‹
(
˚
->
«me
);

111 i‡(
sûít_⁄_ªmoved
)

113 
	`diff_addªmove
(&
ªvs
->
diff›t
, '-', 
	`¡ohl
(
˚
->
˚_mode
),

114 
˚
->
sha1
, ce->
«me
, 
NULL
);

117 
ch™ged
 = 
	`˚_m©ch_°©
(
˚
, &
°
, 0);

118 i‡(!
ch™ged
 && !
ªvs
->
diff›t
.
föd_c›õs_h¨dî
)

120 
ﬁdmode
 = 
	`¡ohl
(
˚
->
˚_mode
);

122 
√wmode
 = 
	`ˇn⁄_mode
(
°
.
°_mode
);

123 i‡(!
åu°_execuèbÀ_bô
 &&

124 
	`S_ISREG
(
√wmode
Ë&& S_ISREG(
ﬁdmode
) &&

125 ((
√wmode
 ^ 
ﬁdmode
) == 0111))

126 
√wmode
 = 
ﬁdmode
;

127 
	`diff_ch™ge
(&
ªvs
->
diff›t
, 
ﬁdmode
, 
√wmode
,

128 
˚
->
sha1
, (
ch™ged
 ? 
nuŒ_sha1
 : ce->sha1),

129 
˚
->
«me
, 
NULL
);

132 
	`diffc‹e_°d
(&
ªvs
->
diff›t
);

133 
	`diff_Êush
(&
ªvs
->
diff›t
);

135 
	}
}

142 
	$diff_ödex_show_fûe
(
ªv_öfo
 *
ªvs
,

143 c⁄° *
¥efix
,

144 
ˇche_íåy
 *
˚
,

145 *
sha1
, 
mode
)

147 
	`diff_addªmove
(&
ªvs
->
diff›t
, 
¥efix
[0], 
	`¡ohl
(
mode
),

148 
sha1
, 
˚
->
«me
, 
NULL
);

149 
	}
}

151 
	$gë_°©_d©a
(
ˇche_íåy
 *
˚
,

152 **
sha1p
,

153 *
modï
,

154 
ˇched
, 
m©ch_missög
)

156 *
sha1
 = 
˚
->sha1;

157 
mode
 = 
˚
->
˚_mode
;

159 i‡(!
ˇched
) {

160 
no_sha1
[20];

161 
ch™ged
;

162 
°©
 
°
;

163 i‡(
	`l°©
(
˚
->
«me
, &
°
) < 0) {

164 i‡(
î∫o
 =
ENOENT
 && 
m©ch_missög
) {

165 *
sha1p
 = 
sha1
;

166 *
modï
 = 
mode
;

171 
ch™ged
 = 
	`˚_m©ch_°©
(
˚
, &
°
, 0);

172 i‡(
ch™ged
) {

173 
mode
 = 
	`¸óã_˚_mode
(
°
.
°_mode
);

174 i‡(!
åu°_execuèbÀ_bô
 && 
	`S_ISREG
(
°
.
°_mode
))

175 
mode
 = 
˚
->
˚_mode
;

176 
sha1
 = 
no_sha1
;

180 *
sha1p
 = 
sha1
;

181 *
modï
 = 
mode
;

183 
	}
}

185 
	$show_√w_fûe
(
ªv_öfo
 *
ªvs
,

186 
ˇche_íåy
 *
√w
,

187 
ˇched
, 
m©ch_missög
)

189 *
sha1
;

190 
mode
;

195 i‡(
	`gë_°©_d©a
(
√w
, &
sha1
, &
mode
, 
ˇched
, 
m©ch_missög
) < 0)

198 
	`diff_ödex_show_fûe
(
ªvs
, "+", 
√w
, 
sha1
, 
mode
);

199 
	}
}

201 
	$show_modifõd
(
ªv_öfo
 *
ªvs
,

202 
ˇche_íåy
 *
ﬁd
,

203 
ˇche_íåy
 *
√w
,

204 
ªp‹t_missög
,

205 
ˇched
, 
m©ch_missög
)

207 
mode
, 
ﬁdmode
;

208 *
sha1
;

210 i‡(
	`gë_°©_d©a
(
√w
, &
sha1
, &
mode
, 
ˇched
, 
m©ch_missög
) < 0) {

211 i‡(
ªp‹t_missög
)

212 
	`diff_ödex_show_fûe
(
ªvs
, "-", 
ﬁd
,

213 
ﬁd
->
sha1
, old->
˚_mode
);

217 i‡(
ªvs
->
comböe_mîges
 && !
ˇched
 &&

218 (
	`hashcmp
(
sha1
, 
ﬁd
->sha1Ë|| hashcmp(ﬁd->sha1, 
√w
->sha1))) {

219 
comböe_diff_∑th
 *
p
;

220 
∑thÀn
 = 
	`˚_«mñí
(
√w
);

222 
p
 = 
	`xmÆloc
(
	`comböe_diff_∑th_size
(2, 
∑thÀn
));

223 
p
->
∑th
 = (*Ë&p->
∑ª¡
[2];

224 
p
->
√xt
 = 
NULL
;

225 
p
->
Àn
 = 
∑thÀn
;

226 
	`mem˝y
(
p
->
∑th
, 
√w
->
«me
, 
∑thÀn
);

227 
p
->
∑th
[
∑thÀn
] = 0;

228 
p
->
mode
 = 
	`¡ohl
(mode);

229 
	`hash˛r
(
p
->
sha1
);

230 
	`mem£t
(
p
->
∑ª¡
, 0, 2 * (
comböe_diff_∑ª¡
));

231 
p
->
∑ª¡
[0].
°©us
 = 
DIFF_STATUS_MODIFIED
;

232 
p
->
∑ª¡
[0].
mode
 = 
	`¡ohl
(
√w
->
˚_mode
);

233 
	`hash˝y
(
p
->
∑ª¡
[0].
sha1
, 
√w
->sha1);

234 
p
->
∑ª¡
[1].
°©us
 = 
DIFF_STATUS_MODIFIED
;

235 
p
->
∑ª¡
[1].
mode
 = 
	`¡ohl
(
ﬁd
->
˚_mode
);

236 
	`hash˝y
(
p
->
∑ª¡
[1].
sha1
, 
ﬁd
->sha1);

237 
	`show_comböed_diff
(
p
, 2, 
ªvs
->
dí£_comböed_mîges
,Ñevs);

238 
	`‰ì
(
p
);

242 
ﬁdmode
 = 
ﬁd
->
˚_mode
;

243 i‡(
mode
 =
ﬁdmode
 && !
	`hashcmp
(
sha1
, 
ﬁd
->sha1) &&

244 !
ªvs
->
diff›t
.
föd_c›õs_h¨dî
)

247 
mode
 = 
	`¡ohl
(mode);

248 
ﬁdmode
 = 
	`¡ohl
(oldmode);

250 
	`diff_ch™ge
(&
ªvs
->
diff›t
, 
ﬁdmode
, 
mode
,

251 
ﬁd
->
sha1
, sha1, old->
«me
, 
NULL
);

253 
	}
}

255 
	$diff_ˇche
(
ªv_öfo
 *
ªvs
,

256 
ˇche_íåy
 **
ac
, 
íåõs
,

257 c⁄° **
∑th•ec
,

258 
ˇched
, 
m©ch_missög
)

260 
íåõs
) {

261 
ˇche_íåy
 *
˚
 = *
ac
;

262 
ßme
 = (
íåõs
 > 1Ë&& 
	`˚_ßme_«me
(
˚
, 
ac
[1]);

264 i‡(!
	`˚_∑th_m©ch
(
˚
, 
∑th•ec
))

265 
skù_íåy
;

267 
	`˚_°age
(
˚
)) {

270 i‡(!
ßme
) {

271 
	`show_√w_fûe
(
ªvs
, 
˚
, 
ˇched
, 
m©ch_missög
);

275 
	`show_modifõd
(
ªvs
, 
ac
[1], 
˚
, 1,

276 
ˇched
, 
m©ch_missög
);

282 i‡(!
ßme
) {

283 
	`diff_ödex_show_fûe
(
ªvs
, "-", 
˚
,

284 
˚
->
sha1
, ce->
˚_mode
);

297 i‡(!
ˇched
 &&

298 !
	`show_modifõd
(
ªvs
, 
˚
, 
ac
[1], 0,

299 
ˇched
, 
m©ch_missög
))

301 
	`diff_unmîge
(&
ªvs
->
diff›t
, 
˚
->
«me
,

302 
	`¡ohl
(
˚
->
˚_mode
), ce->
sha1
);

305 
	`diff_unmîge
(&
ªvs
->
diff›t
, 
˚
->
«me
,

306 0, 
nuŒ_sha1
);

310 
	`dõ
("impossible cacheÉntry stage");

313 
skù_íåy
:

319 
ac
++;

320 
íåõs
--;

321 } 
íåõs
 && 
	`˚_ßme_«me
(
˚
, 
ac
[0]));

324 
	}
}

331 
	$m¨k_mîge_íåõs
()

333 
i
;

334 
i
 = 0; i < 
a˘ive_ƒ
; i++) {

335 
ˇche_íåy
 *
˚
 = 
a˘ive_ˇche
[
i
];

336 i‡(!
	`˚_°age
(
˚
))

338 
˚
->
˚_Êags
 |
	`ht⁄s
(
CE_STAGEMASK
);

340 
	}
}

342 
	$run_diff_ödex
(
ªv_öfo
 *
ªvs
, 
ˇched
)

344 
ªt
;

345 
obje˘
 *
ít
;

346 
åì
 *tree;

347 c⁄° *
åì_«me
;

348 
m©ch_missög
 = 0;

354 i‡(!
ªvs
->
ign‹e_mîges
)

355 
m©ch_missög
 = 1;

357 i‡(
	`ªad_ˇche
() < 0) {

358 
	`≥º‹
("read_cache");

361 
	`m¨k_mîge_íåõs
();

363 
ít
 = 
ªvs
->
≥ndög
.
obje˘s
[0].
ôem
;

364 
åì_«me
 = 
ªvs
->
≥ndög
.
obje˘s
[0].
«me
;

365 
åì
 = 
	`∑r£_åì_ödúe˘
(
ít
->
sha1
);

366 i‡(!
åì
)

367  
	`îr‹
("badÅªêobje˘ %s", 
åì_«me
);

368 i‡(
	`ªad_åì
(
åì
, 1, 
ªvs
->
¥u√_d©a
))

369  
	`îr‹
("u«bÀÅÿªadÅªêobje˘ %s", 
åì_«me
);

370 
ªt
 = 
	`diff_ˇche
(
ªvs
, 
a˘ive_ˇche
, 
a˘ive_ƒ
,Ñevs->
¥u√_d©a
,

371 
ˇched
, 
m©ch_missög
);

372 
	`diffc‹e_°d
(&
ªvs
->
diff›t
);

373 
	`diff_Êush
(&
ªvs
->
diff›t
);

374  
ªt
;

375 
	}
}

377 
	$do_diff_ˇche
(c⁄° *
åì_sha1
, 
diff_›ti⁄s
 *
›t
)

379 
åì
 *tree;

380 
ªv_öfo
 
ªvs
;

381 
i
;

382 
ˇche_íåy
 **
d°
;

383 
ˇche_íåy
 *
œ°
 = 
NULL
;

391 
d°
 = 
a˘ive_ˇche
;

392 
i
 = 0; i < 
a˘ive_ƒ
; i++) {

393 
ˇche_íåy
 *
˚
 = 
a˘ive_ˇche
[
i
];

394 i‡(
	`˚_°age
(
˚
)) {

395 i‡(
œ°
 && !
	`°rcmp
(
˚
->
«me
,Üast->name))

397 
	`ˇche_åì_övÆid©e_∑th
(
a˘ive_ˇche_åì
,

398 
˚
->
«me
);

399 
œ°
 = 
˚
;

400 
˚
->
˚_mode
 = 0;

401 
˚
->
˚_Êags
 &~
	`ht⁄s
(
CE_STAGEMASK
);

403 *
d°
++ = 
˚
;

405 
a˘ive_ƒ
 = 
d°
 - 
a˘ive_ˇche
;

407 
	`öô_ªvisi⁄s
(&
ªvs
, 
NULL
);

408 
ªvs
.
¥u√_d©a
 = 
›t
->
∑ths
;

409 
åì
 = 
	`∑r£_åì_ödúe˘
(
åì_sha1
);

410 i‡(!
åì
)

411 
	`dõ
("badÅªêobje˘ %s", 
	`sha1_to_hex
(
åì_sha1
));

412 i‡(
	`ªad_åì
(
åì
, 1, 
›t
->
∑ths
))

413  
	`îr‹
("u«bÀÅÿªadÅªê%s", 
	`sha1_to_hex
(
åì_sha1
));

414  
	`diff_ˇche
(&
ªvs
, 
a˘ive_ˇche
, 
a˘ive_ƒ
,Ñevs.
¥u√_d©a
,

416 
	}
}

	@diff.c

4 
	~"ˇche.h
"

5 
	~"quŸe.h
"

6 
	~"diff.h
"

7 
	~"diffc‹e.h
"

8 
	~"dñè.h
"

9 
	~"xdiff-öãrÁ˚.h
"

10 
	~"cﬁ‹.h
"

12 #ifde‡
NO_FAST_WORKING_DIRECTORY


13 
	#FAST_WORKING_DIRECTORY
 0

	)

15 
	#FAST_WORKING_DIRECTORY
 1

	)

18 
	gu£_size_ˇche
;

20 
	gdiff_dëe˘_ª«me_deÁu…
;

21 
	gdiff_ª«me_limô_deÁu…
 = -1;

22 
	gdiff_u£_cﬁ‹_deÁu…
;

24 
	gdiff_cﬁ‹s
[][
COLOR_MAXLEN
] = {

35 
	$∑r£_diff_cﬁ‹_¶Ÿ
(c⁄° *
v¨
, 
ofs
)

37 i‡(!
	`°rˇ£cmp
(
v¨
+
ofs
, "plain"))

38  
DIFF_PLAIN
;

39 i‡(!
	`°rˇ£cmp
(
v¨
+
ofs
, "meta"))

40  
DIFF_METAINFO
;

41 i‡(!
	`°rˇ£cmp
(
v¨
+
ofs
, "frag"))

42  
DIFF_FRAGINFO
;

43 i‡(!
	`°rˇ£cmp
(
v¨
+
ofs
, "old"))

44  
DIFF_FILE_OLD
;

45 i‡(!
	`°rˇ£cmp
(
v¨
+
ofs
, "new"))

46  
DIFF_FILE_NEW
;

47 i‡(!
	`°rˇ£cmp
(
v¨
+
ofs
, "commit"))

48  
DIFF_COMMIT
;

49 i‡(!
	`°rˇ£cmp
(
v¨
+
ofs
, "whitespace"))

50  
DIFF_WHITESPACE
;

51 
	`dõ
("bad c⁄fig v¨übÀ '%s'", 
v¨
);

52 
	}
}

60 
	$gô_diff_ui_c⁄fig
(c⁄° *
v¨
, c⁄° *
vÆue
)

62 i‡(!
	`°rcmp
(
v¨
, "diff.renamelimit")) {

63 
diff_ª«me_limô_deÁu…
 = 
	`gô_c⁄fig_öt
(
v¨
, 
vÆue
);

66 i‡(!
	`°rcmp
(
v¨
, "diff.color") || !strcmp(var, "color.diff")) {

67 
diff_u£_cﬁ‹_deÁu…
 = 
	`gô_c⁄fig_cﬁ‹boﬁ
(
v¨
, 
vÆue
);

70 i‡(!
	`°rcmp
(
v¨
, "diff.renames")) {

71 i‡(!
vÆue
)

72 
diff_dëe˘_ª«me_deÁu…
 = 
DIFF_DETECT_RENAME
;

73 i‡(!
	`°rˇ£cmp
(
vÆue
, "copies") ||

74 !
	`°rˇ£cmp
(
vÆue
, "copy"))

75 
diff_dëe˘_ª«me_deÁu…
 = 
DIFF_DETECT_COPY
;

76 i‡(
	`gô_c⁄fig_boﬁ
(
v¨
,
vÆue
))

77 
diff_dëe˘_ª«me_deÁu…
 = 
DIFF_DETECT_RENAME
;

80 i‡(!
	`°∫cmp
(
v¨
, "diff.color.", 11) || !strncmp(var, "color.diff.", 11)) {

81 
¶Ÿ
 = 
	`∑r£_diff_cﬁ‹_¶Ÿ
(
v¨
, 11);

82 
	`cﬁ‹_∑r£
(
vÆue
, 
v¨
, 
diff_cﬁ‹s
[
¶Ÿ
]);

85  
	`gô_deÁu…_c⁄fig
(
v¨
, 
vÆue
);

86 
	}
}

88 *
	$quŸe_⁄e
(c⁄° *
°r
)

90 
√edÀn
;

91 *
xp
;

93 i‡(!
°r
)

94  
NULL
;

95 
√edÀn
 = 
	`quŸe_c_°yÀ
(
°r
, 
NULL
, NULL, 0);

96 i‡(!
√edÀn
)

97  
	`x°rdup
(
°r
);

98 
xp
 = 
	`xmÆloc
(
√edÀn
 + 1);

99 
	`quŸe_c_°yÀ
(
°r
, 
xp
, 
NULL
, 0);

100  
xp
;

101 
	}
}

103 *
	$quŸe_two
(c⁄° *
⁄e
, c⁄° *
two
)

105 
√ed_⁄e
 = 
	`quŸe_c_°yÀ
(
⁄e
, 
NULL
, NULL, 1);

106 
√ed_two
 = 
	`quŸe_c_°yÀ
(
two
, 
NULL
, NULL, 1);

107 *
xp
;

109 i‡(
√ed_⁄e
 + 
√ed_two
) {

110 i‡(!
√ed_⁄e
Ë√ed_⁄ê
	`°æí
(
⁄e
);

111 i‡(!
√ed_two
Ë
√ed_⁄e
 = 
	`°æí
(
two
);

113 
xp
 = 
	`xmÆloc
(
√ed_⁄e
 + 
√ed_two
 + 3);

114 
xp
[0] = '"';

115 
	`quŸe_c_°yÀ
(
⁄e
, 
xp
 + 1, 
NULL
, 1);

116 
	`quŸe_c_°yÀ
(
two
, 
xp
 + 
√ed_⁄e
 + 1, 
NULL
, 1);

117 
	`°r˝y
(
xp
 + 
√ed_⁄e
 + 
√ed_two
 + 1, "\"");

118  
xp
;

120 
√ed_⁄e
 = 
	`°æí
(
⁄e
);

121 
√ed_two
 = 
	`°æí
(
two
);

122 
xp
 = 
	`xmÆloc
(
√ed_⁄e
 + 
√ed_two
 + 1);

123 
	`°r˝y
(
xp
, 
⁄e
);

124 
	`°r˝y
(
xp
 + 
√ed_⁄e
, 
two
);

125  
xp
;

126 
	}
}

128 c⁄° *
	$exã∫Æ_diff
()

130 c⁄° *
exã∫Æ_diff_cmd
 = 
NULL
;

131 
d⁄e_¥ï¨ög
 = 0;

133 i‡(
d⁄e_¥ï¨ög
)

134  
exã∫Æ_diff_cmd
;

135 
exã∫Æ_diff_cmd
 = 
	`gëív
("GIT_EXTERNAL_DIFF");

136 
d⁄e_¥ï¨ög
 = 1;

137  
exã∫Æ_diff_cmd
;

138 
	}
}

140 
	#TEMPFILE_PATH_LEN
 50

	)

142 
	sdiff_ãmpfûe
 {

143 c⁄° *
	m«me
;

144 
	mhex
[41];

145 
	mmode
[10];

146 
	mtmp_∑th
[
TEMPFILE_PATH_LEN
];

147 } 
	gdiff_ãmp
[2];

149 
	$cou¡_löes
(c⁄° *
d©a
, 
size
)

151 
cou¡
, 
ch
, 
com∂ëñy_em±y
 = 1, 
∆_ju°_£í
 = 0;

152 
cou¡
 = 0;

153 0 < 
size
--) {

154 
ch
 = *
d©a
++;

155 i‡(
ch
 == '\n') {

156 
cou¡
++;

157 
∆_ju°_£í
 = 1;

158 
com∂ëñy_em±y
 = 0;

161 
∆_ju°_£í
 = 0;

162 
com∂ëñy_em±y
 = 0;

165 i‡(
com∂ëñy_em±y
)

167 i‡(!
∆_ju°_£í
)

168 
cou¡
++;

169  
cou¡
;

170 
	}
}

172 
	$¥öt_löe_cou¡
(
cou¡
)

174 
cou¡
) {

176 
	`¥ötf
("0,0");

179 
	`¥ötf
("1");

182 
	`¥ötf
("1,%d", 
cou¡
);

185 
	}
}

187 
	$c›y_fûe
(
¥efix
, c⁄° *
d©a
, 
size
)

189 
ch
, 
∆_ju°_£í
 = 1;

190 0 < 
size
--) {

191 
ch
 = *
d©a
++;

192 i‡(
∆_ju°_£í
)

193 
	`putch¨
(
¥efix
);

194 
	`putch¨
(
ch
);

195 i‡(
ch
 == '\n')

196 
∆_ju°_£í
 = 1;

198 
∆_ju°_£í
 = 0;

200 i‡(!
∆_ju°_£í
)

201 
	`¥ötf
("\n\\ NoÇewlineátÉnd of file\n");

202 
	}
}

204 
	$emô_ªwrôe_diff
(c⁄° *
«me_a
,

205 c⁄° *
«me_b
,

206 
diff_fûe•ec
 *
⁄e
,

207 
diff_fûe•ec
 *
two
)

209 
lc_a
, 
lc_b
;

210 
	`diff_p›uœã_fûe•ec
(
⁄e
, 0);

211 
	`diff_p›uœã_fûe•ec
(
two
, 0);

212 
lc_a
 = 
	`cou¡_löes
(
⁄e
->
d©a
, o√->
size
);

213 
lc_b
 = 
	`cou¡_löes
(
two
->
d©a
,Åwo->
size
);

214 
	`¥ötf
("---á/%s\n+++ b/%s\n@@ -", 
«me_a
, 
«me_b
);

215 
	`¥öt_löe_cou¡
(
lc_a
);

216 
	`¥ötf
(" +");

217 
	`¥öt_löe_cou¡
(
lc_b
);

218 
	`¥ötf
(" @@\n");

219 i‡(
lc_a
)

220 
	`c›y_fûe
('-', 
⁄e
->
d©a
, o√->
size
);

221 i‡(
lc_b
)

222 
	`c›y_fûe
('+', 
two
->
d©a
,Åwo->
size
);

223 
	}
}

225 
	$fûl_mmfûe
(
mmfûe_t
 *
mf
, 
diff_fûe•ec
 *
⁄e
)

227 i‡(!
	`DIFF_FILE_VALID
(
⁄e
)) {

228 
mf
->
±r
 = (*)"";

229 
mf
->
size
 = 0;

232 i‡(
	`diff_p›uœã_fûe•ec
(
⁄e
, 0))

234 
mf
->
±r
 = 
⁄e
->
d©a
;

235 
mf
->
size
 = 
⁄e
->size;

237 
	}
}

239 
	sdiff_w‹ds_buf„r
 {

240 
mmfûe_t
 
	mãxt
;

241 
	mÆloc
;

242 
	mcuºít
;

243 
	msuµªs£d_√wlöe
;

246 
	$diff_w‹ds_≠≥nd
(*
löe
, 
Àn
,

247 
diff_w‹ds_buf„r
 *
buf„r
)

249 i‡(
buf„r
->
ãxt
.
size
 + 
Àn
 > buf„r->
Æloc
) {

250 
buf„r
->
Æloc
 = (buf„r->
ãxt
.
size
 + 
Àn
) * 3 / 2;

251 
buf„r
->
ãxt
.
±r
 = 
	`xªÆloc
(buf„r->ãxt.±r, buf„r->
Æloc
);

253 
löe
++;

254 
Àn
--;

255 
	`mem˝y
(
buf„r
->
ãxt
.
±r
 + buf„r->ãxt.
size
, 
löe
, 
Àn
);

256 
buf„r
->
ãxt
.
size
 +
Àn
;

257 
	}
}

259 
	sdiff_w‹ds_d©a
 {

260 
xdiff_emô_°©e
 
	mxm
;

261 
diff_w‹ds_buf„r
 
	mmöus
, 
	m∂us
;

264 
	$¥öt_w‹d
(
diff_w‹ds_buf„r
 *
buf„r
, 
Àn
, 
cﬁ‹
,

265 
suµªss_√wlöe
)

267 c⁄° *
±r
;

268 
eﬁ
 = 0;

270 i‡(
Àn
 == 0)

273 
±r
 = 
buf„r
->
ãxt
.±∏+ buf„r->
cuºít
;

274 
buf„r
->
cuºít
 +
Àn
;

276 i‡(
±r
[
Àn
 - 1] == '\n') {

277 
eﬁ
 = 1;

278 
Àn
--;

281 
	`Âuts
(
	`diff_gë_cﬁ‹
(1, 
cﬁ‹
), 
°dout
);

282 
	`fwrôe
(
±r
, 
Àn
, 1, 
°dout
);

283 
	`Âuts
(
	`diff_gë_cﬁ‹
(1, 
DIFF_RESET
), 
°dout
);

285 i‡(
eﬁ
) {

286 i‡(
suµªss_√wlöe
)

287 
buf„r
->
suµªs£d_√wlöe
 = 1;

289 
	`putch¨
('\n');

291 
	}
}

293 
	$‚_out_diff_w‹ds_aux
(*
¥iv
, *
löe
, 
Àn
)

295 
diff_w‹ds_d©a
 *
diff_w‹ds
 = 
¥iv
;

297 i‡(
diff_w‹ds
->
möus
.
suµªs£d_√wlöe
) {

298 i‡(
löe
[0] != '+')

299 
	`putch¨
('\n');

300 
diff_w‹ds
->
möus
.
suµªs£d_√wlöe
 = 0;

303 
Àn
--;

304 
löe
[0]) {

306 
	`¥öt_w‹d
(&
diff_w‹ds
->
möus
, 
Àn
, 
DIFF_FILE_OLD
, 1);

309 
	`¥öt_w‹d
(&
diff_w‹ds
->
∂us
, 
Àn
, 
DIFF_FILE_NEW
, 0);

312 
	`¥öt_w‹d
(&
diff_w‹ds
->
∂us
, 
Àn
, 
DIFF_PLAIN
, 0);

313 
diff_w‹ds
->
möus
.
cuºít
 +
Àn
;

316 
	}
}

319 
	$diff_w‹ds_show
(
diff_w‹ds_d©a
 *
diff_w‹ds
)

321 
xµ¨am_t
 
xµ
;

322 
xdemôc⁄f_t
 
xecfg
;

323 
xdemôcb_t
 
ecb
;

324 
mmfûe_t
 
möus
, 
∂us
;

325 
i
;

327 
möus
.
size
 = 
diff_w‹ds
->möus.
ãxt
.size;

328 
möus
.
±r
 = 
	`xmÆloc
(möus.
size
);

329 
	`mem˝y
(
möus
.
±r
, 
diff_w‹ds
->möus.
ãxt
.±r, möus.
size
);

330 
i
 = 0; i < 
möus
.
size
; i++)

331 i‡(
	`is•a˚
(
möus
.
±r
[
i
]))

332 
möus
.
±r
[
i
] = '\n';

333 
diff_w‹ds
->
möus
.
cuºít
 = 0;

335 
∂us
.
size
 = 
diff_w‹ds
->∂us.
ãxt
.size;

336 
∂us
.
±r
 = 
	`xmÆloc
’lus.
size
);

337 
	`mem˝y
(
∂us
.
±r
, 
diff_w‹ds
->∂us.
ãxt
.±r,Ölus.
size
);

338 
i
 = 0; i < 
∂us
.
size
; i++)

339 i‡(
	`is•a˚
(
∂us
.
±r
[
i
]))

340 
∂us
.
±r
[
i
] = '\n';

341 
diff_w‹ds
->
∂us
.
cuºít
 = 0;

343 
xµ
.
Êags
 = 
XDF_NEED_MINIMAL
;

344 
xecfg
.
˘xÀn
 = 
diff_w‹ds
->
möus
.
Æloc
 + diff_w‹ds->
∂us
.alloc;

345 
xecfg
.
Êags
 = 0;

346 
ecb
.
outf
 = 
xdiff_outf
;

347 
ecb
.
¥iv
 = 
diff_w‹ds
;

348 
diff_w‹ds
->
xm
.
c⁄sume
 = 
‚_out_diff_w‹ds_aux
;

349 
	`xdl_diff
(&
möus
, &
∂us
, &
xµ
, &
xecfg
, &
ecb
);

351 
	`‰ì
(
möus
.
±r
);

352 
	`‰ì
(
∂us
.
±r
);

353 
diff_w‹ds
->
möus
.
ãxt
.
size
 = diff_w‹ds->
∂us
.text.size = 0;

355 i‡(
diff_w‹ds
->
möus
.
suµªs£d_√wlöe
) {

356 
	`putch¨
('\n');

357 
diff_w‹ds
->
möus
.
suµªs£d_√wlöe
 = 0;

359 
	}
}

361 
	semô_ˇŒback
 {

362 
xdiff_emô_°©e
 
	mxm
;

363 
	m≈¨íts
, 
	mcﬁ‹_diff
;

364 c⁄° **
	mœbñ_∑th
;

365 
diff_w‹ds_d©a
 *
	mdiff_w‹ds
;

368 
	$‰ì_diff_w‹ds_d©a
(
emô_ˇŒback
 *
ecbd©a
)

370 i‡(
ecbd©a
->
diff_w‹ds
) {

372 i‡(
ecbd©a
->
diff_w‹ds
->
möus
.
ãxt
.
size
 ||

373 
ecbd©a
->
diff_w‹ds
->
∂us
.
ãxt
.
size
)

374 
	`diff_w‹ds_show
(
ecbd©a
->
diff_w‹ds
);

376 i‡(
ecbd©a
->
diff_w‹ds
->
möus
.
ãxt
.
±r
)

377 
	`‰ì
 (
ecbd©a
->
diff_w‹ds
->
möus
.
ãxt
.
±r
);

378 i‡(
ecbd©a
->
diff_w‹ds
->
∂us
.
ãxt
.
±r
)

379 
	`‰ì
 (
ecbd©a
->
diff_w‹ds
->
∂us
.
ãxt
.
±r
);

380 
	`‰ì
(
ecbd©a
->
diff_w‹ds
);

381 
ecbd©a
->
diff_w‹ds
 = 
NULL
;

383 
	}
}

385 c⁄° *
	$diff_gë_cﬁ‹
(
diff_u£_cﬁ‹
, 
cﬁ‹_diff
 
ix
)

387 i‡(
diff_u£_cﬁ‹
)

388  
diff_cﬁ‹s
[
ix
];

390 
	}
}

392 
	$emô_löe
(c⁄° *
£t
, c⁄° *
ª£t
, c⁄° *
löe
, 
Àn
)

394 i‡(
Àn
 > 0 && 
löe
[len-1] == '\n')

395 
Àn
--;

396 
	`Âuts
(
£t
, 
°dout
);

397 
	`fwrôe
(
löe
, 
Àn
, 1, 
°dout
);

398 
	`puts
(
ª£t
);

399 
	}
}

401 
	$emô_add_löe
(c⁄° *
ª£t
, 
emô_ˇŒback
 *
ecbd©a
, c⁄° *
löe
, 
Àn
)

403 
cﬁ0
 = 
ecbd©a
->
≈¨íts
;

404 
œ°_èb_ö_ödít
 = -1;

405 
œ°_•a˚_ö_ödít
 = -1;

406 
i
;

407 
èû
 = 
Àn
;

408 
√ed_highlight_Àadög_•a˚
 = 0;

409 c⁄° *
ws
 = 
	`diff_gë_cﬁ‹
(
ecbd©a
->
cﬁ‹_diff
, 
DIFF_WHITESPACE
);

410 c⁄° *
£t
 = 
	`diff_gë_cﬁ‹
(
ecbd©a
->
cﬁ‹_diff
, 
DIFF_FILE_NEW
);

412 i‡(!*
ws
) {

413 
	`emô_löe
(
£t
, 
ª£t
, 
löe
, 
Àn
);

420 
i
 = 
cﬁ0
; i < 
Àn
; i++) {

421 i‡(
löe
[
i
] == '\t') {

422 
œ°_èb_ö_ödít
 = 
i
;

423 i‡(0 <
œ°_•a˚_ö_ödít
)

424 
√ed_highlight_Àadög_•a˚
 = 1;

426 i‡(
löe
[
i
] == ' ')

427 
œ°_•a˚_ö_ödít
 = 
i
;

431 
	`Âuts
(
£t
, 
°dout
);

432 
	`fwrôe
(
löe
, 
cﬁ0
, 1, 
°dout
);

433 
	`Âuts
(
ª£t
, 
°dout
);

434 i‡(((
i
 =
Àn
Ë|| 
löe
[i] ='\n'Ë&& i !
cﬁ0
) {

436 
	`emô_löe
(
ws
, 
ª£t
, 
löe
 + 
cﬁ0
, 
Àn
 - col0);

439 
i
 = 
cﬁ0
;

440 i‡(
√ed_highlight_Àadög_•a˚
) {

441 
i
 < 
œ°_èb_ö_ödít
) {

442 i‡(
löe
[
i
] == ' ') {

443 
	`Âuts
(
ws
, 
°dout
);

444 
	`putch¨
(' ');

445 
	`Âuts
(
ª£t
, 
°dout
);

448 
	`putch¨
(
löe
[
i
]);

449 
i
++;

452 
èû
 = 
Àn
 - 1;

453 i‡(
löe
[
èû
] ='\n' && 
i
 <Åail)

454 
èû
--;

455 
i
 < 
èû
) {

456 i‡(!
	`is•a˚
(
löe
[
èû
]))

458 
èû
--;

460 i‡((
i
 < 
èû
 && 
löe
[tail + 1] != '\n')) {

462 
	`Âuts
(
£t
, 
°dout
);

463 
	`fwrôe
(
löe
 + 
i
, 
èû
 - i + 1, 1, 
°dout
);

464 
	`Âuts
(
ª£t
, 
°dout
);

465 
	`emô_löe
(
ws
, 
ª£t
, 
löe
 + 
èû
 + 1, 
Àn
 -Åail - 1);

468 
	`emô_löe
(
£t
, 
ª£t
, 
löe
 + 
i
, 
Àn
 - i);

469 
	}
}

471 
	$‚_out_c⁄sume
(*
¥iv
, *
löe
, 
Àn
)

473 
i
;

474 
cﬁ‹
;

475 
emô_ˇŒback
 *
ecbd©a
 = 
¥iv
;

476 c⁄° *
£t
 = 
	`diff_gë_cﬁ‹
(
ecbd©a
->
cﬁ‹_diff
, 
DIFF_METAINFO
);

477 c⁄° *
ª£t
 = 
	`diff_gë_cﬁ‹
(
ecbd©a
->
cﬁ‹_diff
, 
DIFF_RESET
);

479 i‡(
ecbd©a
->
œbñ_∑th
[0]) {

480 
	`¥ötf
("%s--- %s%s\n", 
£t
, 
ecbd©a
->
œbñ_∑th
[0], 
ª£t
);

481 
	`¥ötf
("%s+++ %s%s\n", 
£t
, 
ecbd©a
->
œbñ_∑th
[1], 
ª£t
);

482 
ecbd©a
->
œbñ_∑th
[0] =Écbd©a->œbñ_∑th[1] = 
NULL
;

488 
i
 = 0; i < 
Àn
 && 
löe
[i] == '@'; i++)

490 i‡(2 <
i
 && i < 
Àn
 && 
löe
[i] == ' ') {

491 
ecbd©a
->
≈¨íts
 = 
i
 - 1;

492 
	`emô_löe
(
	`diff_gë_cﬁ‹
(
ecbd©a
->
cﬁ‹_diff
, 
DIFF_FRAGINFO
),

493 
ª£t
, 
löe
, 
Àn
);

497 i‡(
Àn
 < 
ecbd©a
->
≈¨íts
) {

498 
£t
 = 
ª£t
;

499 
	`emô_löe
(
ª£t
,Ñe£t, 
löe
, 
Àn
);

503 
cﬁ‹
 = 
DIFF_PLAIN
;

504 i‡(
ecbd©a
->
diff_w‹ds
 &&Écbd©a->
≈¨íts
 != 1)

506 
	`‰ì_diff_w‹ds_d©a
(
ecbd©a
);

507 i‡(
ecbd©a
->
diff_w‹ds
) {

508 i‡(
löe
[0] == '-') {

509 
	`diff_w‹ds_≠≥nd
(
löe
, 
Àn
,

510 &
ecbd©a
->
diff_w‹ds
->
möus
);

512 } i‡(
löe
[0] == '+') {

513 
	`diff_w‹ds_≠≥nd
(
löe
, 
Àn
,

514 &
ecbd©a
->
diff_w‹ds
->
∂us
);

517 i‡(
ecbd©a
->
diff_w‹ds
->
möus
.
ãxt
.
size
 ||

518 
ecbd©a
->
diff_w‹ds
->
∂us
.
ãxt
.
size
)

519 
	`diff_w‹ds_show
(
ecbd©a
->
diff_w‹ds
);

520 
löe
++;

521 
Àn
--;

522 
	`emô_löe
(
£t
, 
ª£t
, 
löe
, 
Àn
);

525 
i
 = 0; i < 
ecbd©a
->
≈¨íts
 && 
Àn
; i++) {

526 i‡(
löe
[
i
] == '-')

527 
cﬁ‹
 = 
DIFF_FILE_OLD
;

528 i‡(
löe
[
i
] == '+')

529 
cﬁ‹
 = 
DIFF_FILE_NEW
;

532 i‡(
cﬁ‹
 !
DIFF_FILE_NEW
) {

533 
	`emô_löe
(
	`diff_gë_cﬁ‹
(
ecbd©a
->
cﬁ‹_diff
, 
cﬁ‹
),

534 
ª£t
, 
löe
, 
Àn
);

537 
	`emô_add_löe
(
ª£t
, 
ecbd©a
, 
löe
, 
Àn
);

538 
	}
}

540 *
	$µröt_ª«me
(c⁄° *
a
, c⁄° *
b
)

542 c⁄° *
ﬁd
 = 
a
;

543 c⁄° *
√w
 = 
b
;

544 *
«me
 = 
NULL
;

545 
pfx_Àngth
, 
sfx_Àngth
;

546 
Àn_a
 = 
	`°æí
(
a
);

547 
Àn_b
 = 
	`°æí
(
b
);

548 
qÀn_a
 = 
	`quŸe_c_°yÀ
(
a
, 
NULL
, NULL, 0);

549 
qÀn_b
 = 
	`quŸe_c_°yÀ
(
b
, 
NULL
, NULL, 0);

551 i‡(
qÀn_a
 || 
qÀn_b
) {

552 i‡(
qÀn_a
Ë
Àn_a
 = qlen_a;

553 i‡(
qÀn_b
Ë
Àn_b
 = qlen_b;

554 
«me
 = 
	`xmÆloc
–
Àn_a
 + 
Àn_b
 + 5 );

555 i‡(
qÀn_a
)

556 
	`quŸe_c_°yÀ
(
a
, 
«me
, 
NULL
, 0);

558 
	`mem˝y
(
«me
, 
a
, 
Àn_a
);

559 
	`mem˝y
(
«me
 + 
Àn_a
, " => ", 4);

560 i‡(
qÀn_b
)

561 
	`quŸe_c_°yÀ
(
b
, 
«me
 + 
Àn_a
 + 4, 
NULL
, 0);

563 
	`mem˝y
(
«me
 + 
Àn_a
 + 4, 
b
, 
Àn_b
 + 1);

564  
«me
;

568 
pfx_Àngth
 = 0;

569 *
ﬁd
 && *
√w
 && *old == *new) {

570 i‡(*
ﬁd
 == '/')

571 
pfx_Àngth
 = 
ﬁd
 - 
a
 + 1;

572 
ﬁd
++;

573 
√w
++;

577 
ﬁd
 = 
a
 + 
Àn_a
;

578 
√w
 = 
b
 + 
Àn_b
;

579 
sfx_Àngth
 = 0;

580 
a
 <
ﬁd
 && 
b
 <
√w
 && *old == *new) {

581 i‡(*
ﬁd
 == '/')

582 
sfx_Àngth
 = 
Àn_a
 - (
ﬁd
 - 
a
);

583 
ﬁd
--;

584 
√w
--;

593 i‡(
pfx_Àngth
 + 
sfx_Àngth
) {

594 
a_midÀn
 = 
Àn_a
 - 
pfx_Àngth
 - 
sfx_Àngth
;

595 
b_midÀn
 = 
Àn_b
 - 
pfx_Àngth
 - 
sfx_Àngth
;

596 i‡(
a_midÀn
 < 0)á_midlen = 0;

597 i‡(
b_midÀn
 < 0) b_midlen = 0;

599 
«me
 = 
	`xmÆloc
(
pfx_Àngth
 + 
a_midÀn
 + 
b_midÀn
 + 
sfx_Àngth
 + 7);

600 
	`•rötf
(
«me
, "%.*s{%.*s => %.*s}%s",

601 
pfx_Àngth
, 
a
,

602 
a_midÀn
, 
a
 + 
pfx_Àngth
,

603 
b_midÀn
, 
b
 + 
pfx_Àngth
,

604 
a
 + 
Àn_a
 - 
sfx_Àngth
);

607 
«me
 = 
	`xmÆloc
(
Àn_a
 + 
Àn_b
 + 5);

608 
	`•rötf
(
«me
, "%†=> %s", 
a
, 
b
);

610  
«me
;

611 
	}
}

613 
	sdiff°©_t
 {

614 
xdiff_emô_°©e
 
	mxm
;

616 
	mƒ
;

617 
	mÆloc
;

618 
	sdiff°©_fûe
 {

619 *
	m«me
;

620 
	mis_unmîged
:1;

621 
	mis_bö¨y
:1;

622 
	mis_ª«med
:1;

623 
	madded
, 
	mdñëed
;

624 } **
	mfûes
;

627 
diff°©_fûe
 *
	$diff°©_add
(
diff°©_t
 *
diff°©
,

628 c⁄° *
«me_a
,

629 c⁄° *
«me_b
)

631 
diff°©_fûe
 *
x
;

632 
x
 = 
	`xˇŒoc
( (*x), 1);

633 i‡(
diff°©
->
ƒ
 =diff°©->
Æloc
) {

634 
diff°©
->
Æloc
 = 
	`Æloc_ƒ
(diffstat->alloc);

635 
diff°©
->
fûes
 = 
	`xªÆloc
(diffstat->files,

636 
diff°©
->
Æloc
 * (
x
));

638 
diff°©
->
fûes
[diff°©->
ƒ
++] = 
x
;

639 i‡(
«me_b
) {

640 
x
->
«me
 = 
	`µröt_ª«me
(
«me_a
, 
«me_b
);

641 
x
->
is_ª«med
 = 1;

644 
x
->
«me
 = 
	`x°rdup
(
«me_a
);

645  
x
;

646 
	}
}

648 
	$diff°©_c⁄sume
(*
¥iv
, *
löe
, 
Àn
)

650 
diff°©_t
 *
diff°©
 = 
¥iv
;

651 
diff°©_fûe
 *
x
 = 
diff°©
->
fûes
[diff°©->
ƒ
 - 1];

653 i‡(
löe
[0] == '+')

654 
x
->
added
++;

655 i‡(
löe
[0] == '-')

656 
x
->
dñëed
++;

657 
	}
}

659 c⁄° 
	gmime_bound¨y_Àadî
[] = "------------";

661 
	$sˇÀ_löór
(
ô
, 
width
, 
max_ch™ge
)

667 i‡(
max_ch™ge
 < 2)

668  
ô
;

669  ((
ô
 - 1Ë* (
width
 - 1Ë+ 
max_ch™ge
 - 1) / (max_change - 1);

670 
	}
}

672 
	$show_«me
(c⁄° *
¥efix
, c⁄° *
«me
, 
Àn
,

673 c⁄° *
ª£t
, c⁄° *
£t
)

675 
	`¥ötf
(" %s%s%-*s%†|", 
£t
, 
¥efix
, 
Àn
, 
«me
, 
ª£t
);

676 
	}
}

678 
	$show_gøph
(
ch
, 
˙t
, c⁄° *
£t
, c⁄° *
ª£t
)

680 i‡(
˙t
 <= 0)

682 
	`¥ötf
("%s", 
£t
);

683 
˙t
--)

684 
	`putch¨
(
ch
);

685 
	`¥ötf
("%s", 
ª£t
);

686 
	}
}

688 
	$show_°©s
(
diff°©_t
* 
d©a
, 
diff_›ti⁄s
 *
›ti⁄s
)

690 
i
, 
Àn
, 
add
, 
dñ
, 
tŸÆ
, 
adds
 = 0, 
dñs
 = 0;

691 
max_ch™ge
 = 0, 
max_Àn
 = 0;

692 
tŸÆ_fûes
 = 
d©a
->
ƒ
;

693 
width
, 
«me_width
;

694 c⁄° *
ª£t
, *
£t
, *
add_c
, *
dñ_c
;

696 i‡(
d©a
->
ƒ
 == 0)

699 
width
 = 
›ti⁄s
->
°©_width
 ? options->stat_width : 80;

700 
«me_width
 = 
›ti⁄s
->
°©_«me_width
 ? options->stat_name_width : 50;

705 i‡(
width
 < 
«me_width
 + 15) {

706 i‡(
«me_width
 <= 25)

707 
width
 = 
«me_width
 + 15;

709 
«me_width
 = 
width
 - 15;

713 
ª£t
 = 
	`diff_gë_cﬁ‹
(
›ti⁄s
->
cﬁ‹_diff
, 
DIFF_RESET
);

714 
£t
 = 
	`diff_gë_cﬁ‹
(
›ti⁄s
->
cﬁ‹_diff
, 
DIFF_PLAIN
);

715 
add_c
 = 
	`diff_gë_cﬁ‹
(
›ti⁄s
->
cﬁ‹_diff
, 
DIFF_FILE_NEW
);

716 
dñ_c
 = 
	`diff_gë_cﬁ‹
(
›ti⁄s
->
cﬁ‹_diff
, 
DIFF_FILE_OLD
);

718 
i
 = 0; i < 
d©a
->
ƒ
; i++) {

719 
diff°©_fûe
 *
fûe
 = 
d©a
->
fûes
[
i
];

720 
ch™ge
 = 
fûe
->
added
 + fûe->
dñëed
;

722 i‡(!
fûe
->
is_ª«med
) {

723 
Àn
 = 
	`quŸe_c_°yÀ
(
fûe
->
«me
, 
NULL
, NULL, 0);

724 i‡(
Àn
) {

725 *
q«me
 = 
	`xmÆloc
(
Àn
 + 1);

726 
	`quŸe_c_°yÀ
(
fûe
->
«me
, 
q«me
, 
NULL
, 0);

727 
	`‰ì
(
fûe
->
«me
);

728 
fûe
->
«me
 = 
q«me
;

732 
Àn
 = 
	`°æí
(
fûe
->
«me
);

733 i‡(
max_Àn
 < 
Àn
)

734 
max_Àn
 = 
Àn
;

736 i‡(
fûe
->
is_bö¨y
 || fûe->
is_unmîged
)

738 i‡(
max_ch™ge
 < 
ch™ge
)

739 
max_ch™ge
 = 
ch™ge
;

749 
«me_width
 = («me_width < 
max_Àn
) ?Çame_width : max_len;

750 i‡(
width
 < (
«me_width
 + 10Ë+ 
max_ch™ge
)

751 
width
 = width - (
«me_width
 + 10);

753 
width
 = 
max_ch™ge
;

755 
i
 = 0; i < 
d©a
->
ƒ
; i++) {

756 c⁄° *
¥efix
 = "";

757 *
«me
 = 
d©a
->
fûes
[
i
]->name;

758 
added
 = 
d©a
->
fûes
[
i
]->added;

759 
dñëed
 = 
d©a
->
fûes
[
i
]->deleted;

760 
«me_Àn
;

765 
Àn
 = 
«me_width
;

766 
«me_Àn
 = 
	`°æí
(
«me
);

767 i‡(
«me_width
 < 
«me_Àn
) {

768 *
¶ash
;

769 
¥efix
 = "...";

770 
Àn
 -= 3;

771 
«me
 +
«me_Àn
 - 
Àn
;

772 
¶ash
 = 
	`°rchr
(
«me
, '/');

773 i‡(
¶ash
)

774 
«me
 = 
¶ash
;

777 i‡(
d©a
->
fûes
[
i
]->
is_bö¨y
) {

778 
	`show_«me
(
¥efix
, 
«me
, 
Àn
, 
ª£t
, 
£t
);

779 
	`¥ötf
(" Bin\n");

780 
‰ì_diff°©_fûe
;

782 i‡(
d©a
->
fûes
[
i
]->
is_unmîged
) {

783 
	`show_«me
(
¥efix
, 
«me
, 
Àn
, 
ª£t
, 
£t
);

784 
	`¥ötf
(" Unmerged\n");

785 
‰ì_diff°©_fûe
;

787 i‡(!
d©a
->
fûes
[
i
]->
is_ª«med
 &&

788 (
added
 + 
dñëed
 == 0)) {

789 
tŸÆ_fûes
--;

790 
‰ì_diff°©_fûe
;

796 
add
 = 
added
;

797 
dñ
 = 
dñëed
;

798 
tŸÆ
 = 
add
 + 
dñ
;

799 
adds
 +
add
;

800 
dñs
 +
dñ
;

802 i‡(
width
 <
max_ch™ge
) {

803 
add
 = 
	`sˇÀ_löór
◊dd, 
width
, 
max_ch™ge
);

804 
dñ
 = 
	`sˇÀ_löór
(dñ, 
width
, 
max_ch™ge
);

805 
tŸÆ
 = 
add
 + 
dñ
;

807 
	`show_«me
(
¥efix
, 
«me
, 
Àn
, 
ª£t
, 
£t
);

808 
	`¥ötf
("%5d ", 
added
 + 
dñëed
);

809 
	`show_gøph
('+', 
add
, 
add_c
, 
ª£t
);

810 
	`show_gøph
('-', 
dñ
, 
dñ_c
, 
ª£t
);

811 
	`putch¨
('\n');

812 
‰ì_diff°©_fûe
:

813 
	`‰ì
(
d©a
->
fûes
[
i
]->
«me
);

814 
	`‰ì
(
d©a
->
fûes
[
i
]);

816 
	`‰ì
(
d©a
->
fûes
);

817 
	`¥ötf
("%s %d files changed, %d insertions(+), %d deletions(-)%s\n",

818 
£t
, 
tŸÆ_fûes
, 
adds
, 
dñs
, 
ª£t
);

819 
	}
}

821 
	$show_sh‹t°©s
(
diff°©_t
* 
d©a
)

823 
i
, 
adds
 = 0, 
dñs
 = 0, 
tŸÆ_fûes
 = 
d©a
->
ƒ
;

825 i‡(
d©a
->
ƒ
 == 0)

828 
i
 = 0; i < 
d©a
->
ƒ
; i++) {

829 i‡(!
d©a
->
fûes
[
i
]->
is_bö¨y
 &&

830 !
d©a
->
fûes
[
i
]->
is_unmîged
) {

831 
added
 = 
d©a
->
fûes
[
i
]->added;

832 
dñëed

d©a
->
fûes
[
i
]->deleted;

833 i‡(!
d©a
->
fûes
[
i
]->
is_ª«med
 &&

834 (
added
 + 
dñëed
 == 0)) {

835 
tŸÆ_fûes
--;

837 
adds
 +
added
;

838 
dñs
 +
dñëed
;

841 
	`‰ì
(
d©a
->
fûes
[
i
]->
«me
);

842 
	`‰ì
(
d©a
->
fûes
[
i
]);

844 
	`‰ì
(
d©a
->
fûes
);

846 
	`¥ötf
(" %d files changed, %d insertions(+), %d deletions(-)\n",

847 
tŸÆ_fûes
, 
adds
, 
dñs
);

848 
	}
}

850 
	$show_num°©
(
diff°©_t
* 
d©a
, 
diff_›ti⁄s
 *
›ti⁄s
)

852 
i
;

854 
i
 = 0; i < 
d©a
->
ƒ
; i++) {

855 
diff°©_fûe
 *
fûe
 = 
d©a
->
fûes
[
i
];

857 i‡(
fûe
->
is_bö¨y
)

858 
	`¥ötf
("-\t-\t");

860 
	`¥ötf
("%d\t%d\t", 
fûe
->
added
, fûe->
dñëed
);

861 i‡(
›ti⁄s
->
löe_ãrmö©i⁄
 && !
fûe
->
is_ª«med
 &&

862 
	`quŸe_c_°yÀ
(
fûe
->
«me
, 
NULL
, NULL, 0))

863 
	`quŸe_c_°yÀ
(
fûe
->
«me
, 
NULL
, 
°dout
, 0);

865 
	`Âuts
(
fûe
->
«me
, 
°dout
);

866 
	`putch¨
(
›ti⁄s
->
löe_ãrmö©i⁄
);

868 
	}
}

870 
	scheckdiff_t
 {

871 
xdiff_emô_°©e
 
	mxm
;

872 c⁄° *
	mfûíame
;

873 
	mlöío
;

876 
	$checkdiff_c⁄sume
(*
¥iv
, *
löe
, 
Àn
)

878 
checkdiff_t
 *
d©a
 = 
¥iv
;

880 i‡(
löe
[0] == '+') {

881 
i
, 
•a˚s
 = 0;

884 
i
 = 1; i < 
Àn
 && (
löe
[i] == ' ' ||Üine[i] == '\t'); i++)

885 i‡(
löe
[
i
] == ' ')

886 
•a˚s
++;

887 i‡(
löe
[
i
 - 1] ='\t' && 
•a˚s
)

888 
	`¥ötf
("%s:%d: space beforeÅab:%.*s\n",

889 
d©a
->
fûíame
, d©a->
löío
, ()
Àn
, 
löe
);

892 i‡(
löe
[
Àn
 - 1] == '\n')

893 
Àn
--;

894 i‡(
	`is•a˚
(
löe
[
Àn
 - 1]))

895 
	`¥ötf
("%s:%d: white spaceátÉnd: %.*s\n",

896 
d©a
->
fûíame
, d©a->
löío
, ()
Àn
, 
löe
);

898 
d©a
->
löío
++;

899 } i‡(
löe
[0] == ' ')

900 
d©a
->
löío
++;

901 i‡(
löe
[0] == '@') {

902 *
∂us
 = 
	`°rchr
(
löe
, '+');

903 i‡(
∂us
)

904 
d©a
->
löío
 = 
	`°πﬁ
(
∂us
, 
NULL
, 10);

906 
	`dõ
("invalid diff");

908 
	}
}

910 *
	$deÊ©e_ô
(*
d©a
,

911 
size
,

912 *
ªsu…_size
)

914 
bound
;

915 *
deÊ©ed
;

916 
z_°ªam
 
°ªam
;

918 
	`mem£t
(&
°ªam
, 0, (stream));

919 
	`deÊ©eInô
(&
°ªam
, 
zlib_com¥essi⁄_Àvñ
);

920 
bound
 = 
	`deÊ©eBound
(&
°ªam
, 
size
);

921 
deÊ©ed
 = 
	`xmÆloc
(
bound
);

922 
°ªam
.
√xt_out
 = 
deÊ©ed
;

923 
°ªam
.
avaû_out
 = 
bound
;

925 
°ªam
.
√xt_ö
 = (*)
d©a
;

926 
°ªam
.
avaû_ö
 = 
size
;

927 
	`deÊ©e
(&
°ªam
, 
Z_FINISH
Ë=
Z_OK
)

929 
	`deÊ©eEnd
(&
°ªam
);

930 *
ªsu…_size
 = 
°ªam
.
tŸÆ_out
;

931  
deÊ©ed
;

932 
	}
}

934 
	$emô_bö¨y_diff_body
(
mmfûe_t
 *
⁄e
, mmfûe_à*
two
)

936 *
˝
;

937 *
dñè
;

938 *
deÊ©ed
;

939 *
d©a
;

940 
‹ig_size
;

941 
dñè_size
;

942 
deÊ©e_size
;

943 
d©a_size
;

948 
dñè
 = 
NULL
;

949 
deÊ©ed
 = 
	`deÊ©e_ô
(
two
->
±r
,Åwo->
size
, &
deÊ©e_size
);

950 i‡(
⁄e
->
size
 && 
two
->size) {

951 
dñè
 = 
	`diff_dñè
(
⁄e
->
±r
, o√->
size
,

952 
two
->
±r
,Åwo->
size
,

953 &
dñè_size
, 
deÊ©e_size
);

954 i‡(
dñè
) {

955 *
to_‰ì
 = 
dñè
;

956 
‹ig_size
 = 
dñè_size
;

957 
dñè
 = 
	`deÊ©e_ô
(dñè, 
dñè_size
, &delta_size);

958 
	`‰ì
(
to_‰ì
);

962 i‡(
dñè
 && 
dñè_size
 < 
deÊ©e_size
) {

963 
	`¥ötf
("dñè %lu\n", 
‹ig_size
);

964 
	`‰ì
(
deÊ©ed
);

965 
d©a
 = 
dñè
;

966 
d©a_size
 = 
dñè_size
;

969 
	`¥ötf
("lôîÆ %lu\n", 
two
->
size
);

970 
	`‰ì
(
dñè
);

971 
d©a
 = 
deÊ©ed
;

972 
d©a_size
 = 
deÊ©e_size
;

976 
˝
 = 
d©a
;

977 
d©a_size
) {

978 
byãs
 = (52 < 
d©a_size
) ? 52 : data_size;

979 
löe
[70];

980 
d©a_size
 -
byãs
;

981 i‡(
byãs
 <= 26)

982 
löe
[0] = 
byãs
 + 'A' - 1;

984 
löe
[0] = 
byãs
 - 26 + 'a' - 1;

985 
	`ícode_85
(
löe
 + 1, 
˝
, 
byãs
);

986 
˝
 = (*Ë˝ + 
byãs
;

987 
	`puts
(
löe
);

989 
	`¥ötf
("\n");

990 
	`‰ì
(
d©a
);

991 
	}
}

993 
	$emô_bö¨y_diff
(
mmfûe_t
 *
⁄e
, mmfûe_à*
two
)

995 
	`¥ötf
("GIT binaryÖatch\n");

996 
	`emô_bö¨y_diff_body
(
⁄e
, 
two
);

997 
	`emô_bö¨y_diff_body
(
two
, 
⁄e
);

998 
	}
}

1000 
	#FIRST_FEW_BYTES
 8000

	)

1001 
	$mmfûe_is_bö¨y
(
mmfûe_t
 *
mf
)

1003 
sz
 = 
mf
->
size
;

1004 i‡(
FIRST_FEW_BYTES
 < 
sz
)

1005 
sz
 = 
FIRST_FEW_BYTES
;

1006  !!
	`memchr
(
mf
->
±r
, 0, 
sz
);

1007 
	}
}

1009 
	$buûtö_diff
(c⁄° *
«me_a
,

1010 c⁄° *
«me_b
,

1011 
diff_fûe•ec
 *
⁄e
,

1012 
diff_fûe•ec
 *
two
,

1013 c⁄° *
x‰m_msg
,

1014 
diff_›ti⁄s
 *
o
,

1015 
com∂ëe_ªwrôe
)

1017 
mmfûe_t
 
mf1
, 
mf2
;

1018 c⁄° *
lbl
[2];

1019 *
a_⁄e
, *
b_two
;

1020 c⁄° *
£t
 = 
	`diff_gë_cﬁ‹
(
o
->
cﬁ‹_diff
, 
DIFF_METAINFO
);

1021 c⁄° *
ª£t
 = 
	`diff_gë_cﬁ‹
(
o
->
cﬁ‹_diff
, 
DIFF_RESET
);

1023 
a_⁄e
 = 
	`quŸe_two
("a/", 
«me_a
);

1024 
b_two
 = 
	`quŸe_two
("b/", 
«me_b
);

1025 
lbl
[0] = 
	`DIFF_FILE_VALID
(
⁄e
Ë? 
a_⁄e
 : "/dev/null";

1026 
lbl
[1] = 
	`DIFF_FILE_VALID
(
two
Ë? 
b_two
 : "/dev/null";

1027 
	`¥ötf
("%sdif‡--gô %†%s%s\n", 
£t
, 
a_⁄e
, 
b_two
, 
ª£t
);

1028 i‡(
lbl
[0][0] == '/') {

1030 
	`¥ötf
("%¢ew fûêmodê%06o%s\n", 
£t
, 
two
->
mode
, 
ª£t
);

1031 i‡(
x‰m_msg
 && xfrm_msg[0])

1032 
	`¥ötf
("%s%s%s\n", 
£t
, 
x‰m_msg
, 
ª£t
);

1034 i‡(
lbl
[1][0] == '/') {

1035 
	`¥ötf
("%sdñëed fûêmodê%06o%s\n", 
£t
, 
⁄e
->
mode
, 
ª£t
);

1036 i‡(
x‰m_msg
 && xfrm_msg[0])

1037 
	`¥ötf
("%s%s%s\n", 
£t
, 
x‰m_msg
, 
ª£t
);

1040 i‡(
⁄e
->
mode
 !
two
->mode) {

1041 
	`¥ötf
("%sﬁd modê%06o%s\n", 
£t
, 
⁄e
->
mode
, 
ª£t
);

1042 
	`¥ötf
("%¢ew modê%06o%s\n", 
£t
, 
two
->
mode
, 
ª£t
);

1044 i‡(
x‰m_msg
 && xfrm_msg[0])

1045 
	`¥ötf
("%s%s%s\n", 
£t
, 
x‰m_msg
, 
ª£t
);

1050 i‡((
⁄e
->
mode
 ^ 
two
->modeË& 
S_IFMT
)

1051 
‰ì_ab_™d_ªtu∫
;

1052 i‡(
com∂ëe_ªwrôe
) {

1053 
	`emô_ªwrôe_diff
(
«me_a
, 
«me_b
, 
⁄e
, 
two
);

1054 
‰ì_ab_™d_ªtu∫
;

1058 i‡(
	`fûl_mmfûe
(&
mf1
, 
⁄e
Ë< 0 || fûl_mmfûe(&
mf2
, 
two
) < 0)

1059 
	`dõ
("unableÅoÑead filesÅo diff");

1061 i‡(!
o
->
ãxt
 && (
	`mmfûe_is_bö¨y
(&
mf1
Ë|| mmfûe_is_bö¨y(&
mf2
))) {

1063 i‡(
mf1
.
size
 =
mf2
.size &&

1064 !
	`memcmp
(
mf1
.
±r
, 
mf2
.±r, mf1.
size
))

1065 
‰ì_ab_™d_ªtu∫
;

1066 i‡(
o
->
bö¨y
)

1067 
	`emô_bö¨y_diff
(&
mf1
, &
mf2
);

1069 
	`¥ötf
("Binary files %sánd %s differ\n",

1070 
lbl
[0],Übl[1]);

1074 c⁄° *
diff›ts
 = 
	`gëív
("GIT_DIFF_OPTS");

1075 
xµ¨am_t
 
xµ
;

1076 
xdemôc⁄f_t
 
xecfg
;

1077 
xdemôcb_t
 
ecb
;

1078 
emô_ˇŒback
 
ecbd©a
;

1080 
	`mem£t
(&
ecbd©a
, 0, (ecbdata));

1081 
ecbd©a
.
œbñ_∑th
 = 
lbl
;

1082 
ecbd©a
.
cﬁ‹_diff
 = 
o
->color_diff;

1083 
xµ
.
Êags
 = 
XDF_NEED_MINIMAL
 | 
o
->
xdl_›ts
;

1084 
xecfg
.
˘xÀn
 = 
o
->
c⁄ãxt
;

1085 
xecfg
.
Êags
 = 
XDL_EMIT_FUNCNAMES
;

1086 i‡(!
diff›ts
)

1088 i‡(!
	`°∫cmp
(
diff›ts
, "--unified=", 10))

1089 
xecfg
.
˘xÀn
 = 
	`°πoul
(
diff›ts
 + 10, 
NULL
, 10);

1090 i‡(!
	`°∫cmp
(
diff›ts
, "-u", 2))

1091 
xecfg
.
˘xÀn
 = 
	`°πoul
(
diff›ts
 + 2, 
NULL
, 10);

1092 
ecb
.
outf
 = 
xdiff_outf
;

1093 
ecb
.
¥iv
 = &
ecbd©a
;

1094 
ecbd©a
.
xm
.
c⁄sume
 = 
‚_out_c⁄sume
;

1095 i‡(
o
->
cﬁ‹_diff_w‹ds
)

1096 
ecbd©a
.
diff_w‹ds
 =

1097 
	`xˇŒoc
(1, (
diff_w‹ds_d©a
));

1098 
	`xdl_diff
(&
mf1
, &
mf2
, &
xµ
, &
xecfg
, &
ecb
);

1099 i‡(
o
->
cﬁ‹_diff_w‹ds
)

1100 
	`‰ì_diff_w‹ds_d©a
(&
ecbd©a
);

1103 
‰ì_ab_™d_ªtu∫
:

1104 
	`‰ì
(
a_⁄e
);

1105 
	`‰ì
(
b_two
);

1107 
	}
}

1109 
	$buûtö_diff°©
(c⁄° *
«me_a
, c⁄° *
«me_b
,

1110 
diff_fûe•ec
 *
⁄e
,

1111 
diff_fûe•ec
 *
two
,

1112 
diff°©_t
 *
diff°©
,

1113 
diff_›ti⁄s
 *
o
,

1114 
com∂ëe_ªwrôe
)

1116 
mmfûe_t
 
mf1
, 
mf2
;

1117 
diff°©_fûe
 *
d©a
;

1119 
d©a
 = 
	`diff°©_add
(
diff°©
, 
«me_a
, 
«me_b
);

1121 i‡(!
⁄e
 || !
two
) {

1122 
d©a
->
is_unmîged
 = 1;

1125 i‡(
com∂ëe_ªwrôe
) {

1126 
	`diff_p›uœã_fûe•ec
(
⁄e
, 0);

1127 
	`diff_p›uœã_fûe•ec
(
two
, 0);

1128 
d©a
->
dñëed
 = 
	`cou¡_löes
(
⁄e
->d©a, o√->
size
);

1129 
d©a
->
added
 = 
	`cou¡_löes
(
two
->d©a,Åwo->
size
);

1132 i‡(
	`fûl_mmfûe
(&
mf1
, 
⁄e
Ë< 0 || fûl_mmfûe(&
mf2
, 
two
) < 0)

1133 
	`dõ
("unableÅoÑead filesÅo diff");

1135 i‡(
	`mmfûe_is_bö¨y
(&
mf1
Ë|| mmfûe_is_bö¨y(&
mf2
))

1136 
d©a
->
is_bö¨y
 = 1;

1139 
xµ¨am_t
 
xµ
;

1140 
xdemôc⁄f_t
 
xecfg
;

1141 
xdemôcb_t
 
ecb
;

1143 
xµ
.
Êags
 = 
XDF_NEED_MINIMAL
 | 
o
->
xdl_›ts
;

1144 
xecfg
.
˘xÀn
 = 0;

1145 
xecfg
.
Êags
 = 0;

1146 
ecb
.
outf
 = 
xdiff_outf
;

1147 
ecb
.
¥iv
 = 
diff°©
;

1148 
	`xdl_diff
(&
mf1
, &
mf2
, &
xµ
, &
xecfg
, &
ecb
);

1150 
	}
}

1152 
	$buûtö_checkdiff
(c⁄° *
«me_a
, c⁄° *
«me_b
,

1153 
diff_fûe•ec
 *
⁄e
,

1154 
diff_fûe•ec
 *
two
)

1156 
mmfûe_t
 
mf1
, 
mf2
;

1157 
checkdiff_t
 
d©a
;

1159 i‡(!
two
)

1162 
	`mem£t
(&
d©a
, 0, (data));

1163 
d©a
.
xm
.
c⁄sume
 = 
checkdiff_c⁄sume
;

1164 
d©a
.
fûíame
 = 
«me_b
 ?Çame_b : 
«me_a
;

1165 
d©a
.
löío
 = 0;

1167 i‡(
	`fûl_mmfûe
(&
mf1
, 
⁄e
Ë< 0 || fûl_mmfûe(&
mf2
, 
two
) < 0)

1168 
	`dõ
("unableÅoÑead filesÅo diff");

1170 i‡(
	`mmfûe_is_bö¨y
(&
mf2
))

1174 
xµ¨am_t
 
xµ
;

1175 
xdemôc⁄f_t
 
xecfg
;

1176 
xdemôcb_t
 
ecb
;

1178 
xµ
.
Êags
 = 
XDF_NEED_MINIMAL
;

1179 
xecfg
.
˘xÀn
 = 0;

1180 
xecfg
.
Êags
 = 0;

1181 
ecb
.
outf
 = 
xdiff_outf
;

1182 
ecb
.
¥iv
 = &
d©a
;

1183 
	`xdl_diff
(&
mf1
, &
mf2
, &
xµ
, &
xecfg
, &
ecb
);

1185 
	}
}

1187 
diff_fûe•ec
 *
	$Æloc_fûe•ec
(c⁄° *
∑th
)

1189 
«mñí
 = 
	`°æí
(
∑th
);

1190 
diff_fûe•ec
 *
•ec
 = 
	`xmÆloc
((*•ecË+ 
«mñí
 + 1);

1192 
	`mem£t
(
•ec
, 0, (*spec));

1193 
•ec
->
∑th
 = (*)(spec + 1);

1194 
	`mem˝y
(
•ec
->
∑th
,Ö©h, 
«mñí
+1);

1195  
•ec
;

1196 
	}
}

1198 
	$fûl_fûe•ec
(
diff_fûe•ec
 *
•ec
, c⁄° *
sha1
,

1199 
mode
)

1201 i‡(
mode
) {

1202 
•ec
->
mode
 = 
	`ˇn⁄_mode
(mode);

1203 
	`hash˝y
(
•ec
->
sha1
, sha1);

1204 
•ec
->
sha1_vÆid
 = !
	`is_nuŒ_sha1
(
sha1
);

1206 
	}
}

1213 
	$ªu£_w‹kåì_fûe
(c⁄° *
«me
, c⁄° *
sha1
, 
w™t_fûe
)

1215 
ˇche_íåy
 *
˚
;

1216 
°©
 
°
;

1217 
pos
, 
Àn
;

1231 i‡(!
a˘ive_ˇche
)

1243 i‡(!
FAST_WORKING_DIRECTORY
 && !
w™t_fûe
 && 
	`has_sha1_∑ck
(
sha1
, 
NULL
))

1246 
Àn
 = 
	`°æí
(
«me
);

1247 
pos
 = 
	`ˇche_«me_pos
(
«me
, 
Àn
);

1248 i‡(
pos
 < 0)

1250 
˚
 = 
a˘ive_ˇche
[
pos
];

1251 i‡((
	`l°©
(
«me
, &
°
) < 0) ||

1252 !
	`S_ISREG
(
°
.
°_mode
) ||

1253 
	`˚_m©ch_°©
(
˚
, &
°
, 0) ||

1254 
	`hashcmp
(
sha1
, 
˚
->sha1))

1262 
	}
}

1264 
	ssha1_size_ˇche
 {

1265 
	msha1
[20];

1266 
	msize
;

1267 } **
	gsha1_size_ˇche
;

1268 
	gsha1_size_ˇche_ƒ
, 
	gsha1_size_ˇche_Æloc
;

1270 
sha1_size_ˇche
 *
	$loˇã_size_ˇche
(*
sha1
,

1271 
föd_⁄ly
,

1272 
size
)

1274 
fú°
, 
œ°
;

1275 
sha1_size_ˇche
 *
e
;

1277 
fú°
 = 0;

1278 
œ°
 = 
sha1_size_ˇche_ƒ
;

1279 
œ°
 > 
fú°
) {

1280 
cmp
, 
√xt
 = (
œ°
 + 
fú°
) >> 1;

1281 
e
 = 
sha1_size_ˇche
[
√xt
];

1282 
cmp
 = 
	`hashcmp
(
e
->
sha1
, sha1);

1283 i‡(!
cmp
)

1284  
e
;

1285 i‡(
cmp
 < 0) {

1286 
œ°
 = 
√xt
;

1289 
fú°
 = 
√xt
+1;

1292 i‡(
föd_⁄ly
)

1293  
NULL
;

1295 i‡(
sha1_size_ˇche_Æloc
 <
sha1_size_ˇche_ƒ
) {

1296 
sha1_size_ˇche_Æloc
 = 
	`Æloc_ƒ
(sha1_size_cache_alloc);

1297 
sha1_size_ˇche
 = 
	`xªÆloc
(sha1_size_cache,

1298 
sha1_size_ˇche_Æloc
 *

1299 (*
sha1_size_ˇche
));

1301 
sha1_size_ˇche_ƒ
++;

1302 i‡(
fú°
 < 
sha1_size_ˇche_ƒ
)

1303 
	`memmove
(
sha1_size_ˇche
 + 
fú°
 + 1, sha1_size_cache + first,

1304 (
sha1_size_ˇche_ƒ
 - 
fú°
 - 1) *

1305 (*
sha1_size_ˇche
));

1306 
e
 = 
	`xmÆloc
((
sha1_size_ˇche
));

1307 
sha1_size_ˇche
[
fú°
] = 
e
;

1308 
	`hash˝y
(
e
->
sha1
, sha1);

1309 
e
->
size
 = size;

1310  
e
;

1311 
	}
}

1318 
	$diff_p›uœã_fûe•ec
(
diff_fûe•ec
 *
s
, 
size_⁄ly
)

1320 
îr
 = 0;

1321 i‡(!
	`DIFF_FILE_VALID
(
s
))

1322 
	`dõ
("internalÉrror:áskingÅoÖopulate invalid file.");

1323 i‡(
	`S_ISDIR
(
s
->
mode
))

1326 i‡(!
u£_size_ˇche
)

1327 
size_⁄ly
 = 0;

1329 i‡(
s
->
d©a
)

1330  
îr
;

1331 i‡(!
s
->
sha1_vÆid
 ||

1332 
	`ªu£_w‹kåì_fûe
(
s
->
∑th
, s->
sha1
, 0)) {

1333 
°©
 
°
;

1334 
fd
;

1335 i‡(
	`l°©
(
s
->
∑th
, &
°
) < 0) {

1336 i‡(
î∫o
 =
ENOENT
) {

1337 
îr_em±y
:

1338 
îr
 = -1;

1339 
em±y
:

1340 
s
->
d©a
 = (*)"";

1341 
s
->
size
 = 0;

1342  
îr
;

1345 
s
->
size
 = 
°
.
°_size
;

1346 i‡(!
s
->
size
)

1347 
em±y
;

1348 i‡(
size_⁄ly
)

1350 i‡(
	`S_ISLNK
(
°
.
°_mode
)) {

1351 
ªt
;

1352 
s
->
d©a
 = 
	`xmÆloc
(s->
size
);

1353 
s
->
should_‰ì
 = 1;

1354 
ªt
 = 
	`ªadlök
(
s
->
∑th
, s->
d©a
, s->
size
);

1355 i‡(
ªt
 < 0) {

1356 
	`‰ì
(
s
->
d©a
);

1357 
îr_em±y
;

1361 
fd
 = 
	`›í
(
s
->
∑th
, 
O_RDONLY
);

1362 i‡(
fd
 < 0)

1363 
îr_em±y
;

1364 
s
->
d©a
 = 
	`xmm≠
(
NULL
, s->
size
, 
PROT_READ
, 
MAP_PRIVATE
, 
fd
, 0);

1365 
	`˛o£
(
fd
);

1366 
s
->
should_munm≠
 = 1;

1370 
ty≥
[20];

1371 
sha1_size_ˇche
 *
e
;

1373 i‡(
size_⁄ly
) {

1374 
e
 = 
	`loˇã_size_ˇche
(
s
->
sha1
, 1, 0);

1375 i‡(
e
) {

1376 
s
->
size
 = 
e
->size;

1379 i‡(!
	`sha1_obje˘_öfo
(
s
->
sha1
, 
ty≥
, &s->
size
))

1380 
	`loˇã_size_ˇche
(
s
->
sha1
, 0, s->
size
);

1383 
s
->
d©a
 = 
	`ªad_sha1_fûe
(s->
sha1
, 
ty≥
, &s->
size
);

1384 
s
->
should_‰ì
 = 1;

1388 
	}
}

1390 
	$diff_‰ì_fûe•ec_d©a
(
diff_fûe•ec
 *
s
)

1392 i‡(
s
->
should_‰ì
)

1393 
	`‰ì
(
s
->
d©a
);

1394 i‡(
s
->
should_munm≠
)

1395 
	`munm≠
(
s
->
d©a
, s->
size
);

1396 
s
->
should_‰ì
 = s->
should_munm≠
 = 0;

1397 
s
->
d©a
 = 
NULL
;

1398 
	`‰ì
(
s
->
˙t_d©a
);

1399 
s
->
˙t_d©a
 = 
NULL
;

1400 
	}
}

1402 
	$¥ï_ãmp_blob
(
diff_ãmpfûe
 *
ãmp
,

1403 *
blob
,

1404 
size
,

1405 c⁄° *
sha1
,

1406 
mode
)

1408 
fd
;

1410 
fd
 = 
	`gô_mk°emp
(
ãmp
->
tmp_∑th
, 
TEMPFILE_PATH_LEN
, ".diff_XXXXXX");

1411 i‡(
fd
 < 0)

1412 
	`dõ
("unableÅo createÅemp-file");

1413 i‡(
	`wrôe_ö_fuŒ
(
fd
, 
blob
, 
size
) != size)

1414 
	`dõ
("unableÅo writeÅemp-file");

1415 
	`˛o£
(
fd
);

1416 
ãmp
->
«me
 =Åemp->
tmp_∑th
;

1417 
	`°r˝y
(
ãmp
->
hex
, 
	`sha1_to_hex
(
sha1
));

1418 
ãmp
->
hex
[40] = 0;

1419 
	`•rötf
(
ãmp
->
mode
, "%06o", mode);

1420 
	}
}

1422 
	$¥ï¨e_ãmp_fûe
(c⁄° *
«me
,

1423 
diff_ãmpfûe
 *
ãmp
,

1424 
diff_fûe•ec
 *
⁄e
)

1426 i‡(!
	`DIFF_FILE_VALID
(
⁄e
)) {

1427 
nŸ_a_vÆid_fûe
:

1431 
ãmp
->
«me
 = "/dev/null";

1432 
	`°r˝y
(
ãmp
->
hex
, ".");

1433 
	`°r˝y
(
ãmp
->
mode
, ".");

1437 i‡(!
⁄e
->
sha1_vÆid
 ||

1438 
	`ªu£_w‹kåì_fûe
(
«me
, 
⁄e
->
sha1
, 1)) {

1439 
°©
 
°
;

1440 i‡(
	`l°©
(
«me
, &
°
) < 0) {

1441 i‡(
î∫o
 =
ENOENT
)

1442 
nŸ_a_vÆid_fûe
;

1443 
	`dõ
("°©(%s): %s", 
«me
, 
	`°ªº‹
(
î∫o
));

1445 i‡(
	`S_ISLNK
(
°
.
°_mode
)) {

1446 
ªt
;

1447 
buf
[
PATH_MAX
 + 1];

1448 i‡((
buf
Ë<
°
.
°_size
)

1449 
	`dõ
("symlökÅoÿl⁄g: %s", 
«me
);

1450 
ªt
 = 
	`ªadlök
(
«me
, 
buf
, 
°
.
°_size
);

1451 i‡(
ªt
 < 0)

1452 
	`dõ
("ªadlök(%s)", 
«me
);

1453 
	`¥ï_ãmp_blob
(
ãmp
, 
buf
, 
°
.
°_size
,

1454 (
⁄e
->
sha1_vÆid
 ?

1455 
⁄e
->
sha1
 : 
nuŒ_sha1
),

1456 (
⁄e
->
sha1_vÆid
 ?

1457 
⁄e
->
mode
 : 
S_IFLNK
));

1461 
ãmp
->
«me
 =Çame;

1462 i‡(!
⁄e
->
sha1_vÆid
)

1463 
	`°r˝y
(
ãmp
->
hex
, 
	`sha1_to_hex
(
nuŒ_sha1
));

1465 
	`°r˝y
(
ãmp
->
hex
, 
	`sha1_to_hex
(
⁄e
->
sha1
));

1472 
	`•rötf
(
ãmp
->
mode
, "%06o", 
⁄e
->mode);

1477 i‡(
	`diff_p›uœã_fûe•ec
(
⁄e
, 0))

1478 
	`dõ
("ˇ¬ŸÑód d©®blob f‹ %s", 
⁄e
->
∑th
);

1479 
	`¥ï_ãmp_blob
(
ãmp
, 
⁄e
->
d©a
, o√->
size
,

1480 
⁄e
->
sha1
, o√->
mode
);

1482 
	}
}

1484 
	$ªmove_ãmpfûe
()

1486 
i
;

1488 
i
 = 0; i < 2; i++)

1489 i‡(
diff_ãmp
[
i
].
«me
 =diff_ãmp[i].
tmp_∑th
) {

1490 
	`u∆ök
(
diff_ãmp
[
i
].
«me
);

1491 
diff_ãmp
[
i
].
«me
 = 
NULL
;

1493 
	}
}

1495 
	$ªmove_ãmpfûe_⁄_sig«l
(
signo
)

1497 
	`ªmove_ãmpfûe
();

1498 
	`sig«l
(
SIGINT
, 
SIG_DFL
);

1499 
	`øi£
(
signo
);

1500 
	}
}

1502 
	$•awn_¥og
(c⁄° *
pgm
, c⁄° **
¨g
)

1504 
pid_t
 
pid
;

1505 
°©us
;

1507 
	`fÊush
(
NULL
);

1508 
pid
 = 
	`f‹k
();

1509 i‡(
pid
 < 0)

1510 
	`dõ
("unableÅo fork");

1511 i‡(!
pid
) {

1512 
	`execvp
(
pgm
, (*c⁄°*Ë
¨g
);

1513 
	`exô
(255);

1516 
	`waôpid
(
pid
, &
°©us
, 0) < 0) {

1517 i‡(
î∫o
 =
EINTR
)

1531 i‡(
	`WIFEXITED
(
°©us
Ë&& !
	`WEXITSTATUS
(status))

1534 
	}
}

1542 
	$run_exã∫Æ_diff
(c⁄° *
pgm
,

1543 c⁄° *
«me
,

1544 c⁄° *
Ÿhî
,

1545 
diff_fûe•ec
 *
⁄e
,

1546 
diff_fûe•ec
 *
two
,

1547 c⁄° *
x‰m_msg
,

1548 
com∂ëe_ªwrôe
)

1550 c⁄° *
•awn_¨g
[10];

1551 
diff_ãmpfûe
 *
ãmp
 = 
diff_ãmp
;

1552 
ªtvÆ
;

1553 
©exô_asked
 = 0;

1554 c⁄° *
Ÿhî«me
;

1555 c⁄° **
¨g
 = &
•awn_¨g
[0];

1557 
Ÿhî«me
 = (
Ÿhî
? othî : 
«me
);

1558 i‡(
⁄e
 && 
two
) {

1559 
	`¥ï¨e_ãmp_fûe
(
«me
, &
ãmp
[0], 
⁄e
);

1560 
	`¥ï¨e_ãmp_fûe
(
Ÿhî«me
, &
ãmp
[1], 
two
);

1561 i‡(! 
©exô_asked
 &&

1562 (
ãmp
[0].
«me
 =ãmp[0].
tmp_∑th
 ||

1563 
ãmp
[1].
«me
 =ãmp[1].
tmp_∑th
)) {

1564 
©exô_asked
 = 1;

1565 
	`©exô
(
ªmove_ãmpfûe
);

1567 
	`sig«l
(
SIGINT
, 
ªmove_ãmpfûe_⁄_sig«l
);

1570 i‡(
⁄e
 && 
two
) {

1571 *
¨g
++ = 
pgm
;

1572 *
¨g
++ = 
«me
;

1573 *
¨g
++ = 
ãmp
[0].
«me
;

1574 *
¨g
++ = 
ãmp
[0].
hex
;

1575 *
¨g
++ = 
ãmp
[0].
mode
;

1576 *
¨g
++ = 
ãmp
[1].
«me
;

1577 *
¨g
++ = 
ãmp
[1].
hex
;

1578 *
¨g
++ = 
ãmp
[1].
mode
;

1579 i‡(
Ÿhî
) {

1580 *
¨g
++ = 
Ÿhî
;

1581 *
¨g
++ = 
x‰m_msg
;

1584 *
¨g
++ = 
pgm
;

1585 *
¨g
++ = 
«me
;

1587 *
¨g
 = 
NULL
;

1588 
ªtvÆ
 = 
	`•awn_¥og
(
pgm
, 
•awn_¨g
);

1589 
	`ªmove_ãmpfûe
();

1590 i‡(
ªtvÆ
) {

1591 
	`Ârötf
(
°dîr
, "exã∫Æ dif‡dõd, st›pögáà%s.\n", 
«me
);

1592 
	`exô
(1);

1594 
	}
}

1596 
	$run_diff_cmd
(c⁄° *
pgm
,

1597 c⁄° *
«me
,

1598 c⁄° *
Ÿhî
,

1599 
diff_fûe•ec
 *
⁄e
,

1600 
diff_fûe•ec
 *
two
,

1601 c⁄° *
x‰m_msg
,

1602 
diff_›ti⁄s
 *
o
,

1603 
com∂ëe_ªwrôe
)

1605 i‡(
pgm
) {

1606 
	`run_exã∫Æ_diff
(
pgm
, 
«me
, 
Ÿhî
, 
⁄e
, 
two
, 
x‰m_msg
,

1607 
com∂ëe_ªwrôe
);

1610 i‡(
⁄e
 && 
two
)

1611 
	`buûtö_diff
(
«me
, 
Ÿhî
 ? other :Çame,

1612 
⁄e
, 
two
, 
x‰m_msg
, 
o
, 
com∂ëe_ªwrôe
);

1614 
	`¥ötf
("* UnmîgedÖ©h %s\n", 
«me
);

1615 
	}
}

1617 
	$diff_fûl_sha1_öfo
(
diff_fûe•ec
 *
⁄e
)

1619 i‡(
	`DIFF_FILE_VALID
(
⁄e
)) {

1620 i‡(!
⁄e
->
sha1_vÆid
) {

1621 
°©
 
°
;

1622 i‡(
	`l°©
(
⁄e
->
∑th
, &
°
) < 0)

1623 
	`dõ
("°© %s", 
⁄e
->
∑th
);

1624 i‡(
	`ödex_∑th
(
⁄e
->
sha1
, o√->
∑th
, &
°
, 0))

1625 
	`dõ
("ˇ¬Ÿ hash %s\n", 
⁄e
->
∑th
);

1629 
	`hash˛r
(
⁄e
->
sha1
);

1630 
	}
}

1632 
	$run_diff
(
diff_fûïaú
 *
p
, 
diff_›ti⁄s
 *
o
)

1634 c⁄° *
pgm
 = 
	`exã∫Æ_diff
();

1635 
msg
[
PATH_MAX
*2+300], *
x‰m_msg
;

1636 
diff_fûe•ec
 *
⁄e
;

1637 
diff_fûe•ec
 *
two
;

1638 c⁄° *
«me
;

1639 c⁄° *
Ÿhî
;

1640 *
«me_munged
, *
Ÿhî_munged
;

1641 
com∂ëe_ªwrôe
 = 0;

1642 
Àn
;

1644 i‡(
	`DIFF_PAIR_UNMERGED
(
p
)) {

1646 
	`run_diff_cmd
(
pgm
, 
p
->
⁄e
->
∑th
, 
NULL
, NULL, NULL, NULL, 
o
, 0);

1650 
«me
 = 
p
->
⁄e
->
∑th
;

1651 
Ÿhî
 = (
	`°rcmp
(
«me
, 
p
->
two
->
∑th
Ë?Ö->two->∑th : 
NULL
);

1652 
«me_munged
 = 
	`quŸe_⁄e
(
«me
);

1653 
Ÿhî_munged
 = 
	`quŸe_⁄e
(
Ÿhî
);

1654 
⁄e
 = 
p
->⁄e; 
two
 =Ö->two;

1656 
	`diff_fûl_sha1_öfo
(
⁄e
);

1657 
	`diff_fûl_sha1_öfo
(
two
);

1659 
Àn
 = 0;

1660 
p
->
°©us
) {

1661 
DIFF_STATUS_COPIED
:

1662 
Àn
 +
	`¢¥ötf
(
msg
 +Üen, (msg) -Üen,

1666 ()(0.5 + 
p
->
sc‹e
 * 100.0/
MAX_SCORE
),

1667 
«me_munged
, 
Ÿhî_munged
);

1669 
DIFF_STATUS_RENAMED
:

1670 
Àn
 +
	`¢¥ötf
(
msg
 +Üen, (msg) -Üen,

1674 ()(0.5 + 
p
->
sc‹e
 * 100.0/
MAX_SCORE
),

1675 
«me_munged
, 
Ÿhî_munged
);

1677 
DIFF_STATUS_MODIFIED
:

1678 i‡(
p
->
sc‹e
) {

1679 
Àn
 +
	`¢¥ötf
(
msg
 +Üen, (msg) -Üen,

1681 ()(0.5 + 
p
->
sc‹e
 *

1682 100.0/
MAX_SCORE
));

1683 
com∂ëe_ªwrôe
 = 1;

1692 i‡(
	`hashcmp
(
⁄e
->
sha1
, 
two
->sha1)) {

1693 
abbªv
 = 
o
->
fuŒ_ödex
 ? 40 : 
DEFAULT_ABBREV
;

1695 i‡(
o
->
bö¨y
) {

1696 
mmfûe_t
 
mf
;

1697 i‡((!
	`fûl_mmfûe
(&
mf
, 
⁄e
Ë&& 
	`mmfûe_is_bö¨y
(&mf)) ||

1698 (!
	`fûl_mmfûe
(&
mf
, 
two
Ë&& 
	`mmfûe_is_bö¨y
(&mf)))

1699 
abbªv
 = 40;

1701 
Àn
 +
	`¢¥ötf
(
msg
 +Üen, (msg) -Üen,

1703 
abbªv
, 
	`sha1_to_hex
(
⁄e
->
sha1
),

1704 
abbªv
, 
	`sha1_to_hex
(
two
->
sha1
));

1705 i‡(
⁄e
->
mode
 =
two
->mode)

1706 
Àn
 +
	`¢¥ötf
(
msg
 +Üen, (msg) -Üen,

1707 " %06o", 
⁄e
->
mode
);

1708 
Àn
 +
	`¢¥ötf
(
msg
 +Üen, (msg) -Üen, "\n");

1711 i‡(
Àn
)

1712 
msg
[--
Àn
] = 0;

1713 
x‰m_msg
 = 
Àn
 ? 
msg
 : 
NULL
;

1715 i‡(!
pgm
 &&

1716 
	`DIFF_FILE_VALID
(
⁄e
Ë&& DIFF_FILE_VALID(
two
) &&

1717 (
S_IFMT
 & 
⁄e
->
mode
Ë!(S_IFMT & 
two
->mode)) {

1721 
diff_fûe•ec
 *
nuŒ
 = 
	`Æloc_fûe•ec
(
two
->
∑th
);

1722 
	`run_diff_cmd
(
NULL
, 
«me
, 
Ÿhî
, 
⁄e
, 
nuŒ
, 
x‰m_msg
, 
o
, 0);

1723 
	`‰ì
(
nuŒ
);

1724 
nuŒ
 = 
	`Æloc_fûe•ec
(
⁄e
->
∑th
);

1725 
	`run_diff_cmd
(
NULL
, 
«me
, 
Ÿhî
, 
nuŒ
, 
two
, 
x‰m_msg
, 
o
, 0);

1726 
	`‰ì
(
nuŒ
);

1729 
	`run_diff_cmd
(
pgm
, 
«me
, 
Ÿhî
, 
⁄e
, 
two
, 
x‰m_msg
, 
o
,

1730 
com∂ëe_ªwrôe
);

1732 
	`‰ì
(
«me_munged
);

1733 
	`‰ì
(
Ÿhî_munged
);

1734 
	}
}

1736 
	$run_diff°©
(
diff_fûïaú
 *
p
, 
diff_›ti⁄s
 *
o
,

1737 
diff°©_t
 *
diff°©
)

1739 c⁄° *
«me
;

1740 c⁄° *
Ÿhî
;

1741 
com∂ëe_ªwrôe
 = 0;

1743 i‡(
	`DIFF_PAIR_UNMERGED
(
p
)) {

1745 
	`buûtö_diff°©
(
p
->
⁄e
->
∑th
, 
NULL
, NULL, NULL, 
diff°©
, 
o
, 0);

1749 
«me
 = 
p
->
⁄e
->
∑th
;

1750 
Ÿhî
 = (
	`°rcmp
(
«me
, 
p
->
two
->
∑th
Ë?Ö->two->∑th : 
NULL
);

1752 
	`diff_fûl_sha1_öfo
(
p
->
⁄e
);

1753 
	`diff_fûl_sha1_öfo
(
p
->
two
);

1755 i‡(
p
->
°©us
 =
DIFF_STATUS_MODIFIED
 &&Ö->
sc‹e
)

1756 
com∂ëe_ªwrôe
 = 1;

1757 
	`buûtö_diff°©
(
«me
, 
Ÿhî
, 
p
->
⁄e
,Ö->
two
, 
diff°©
, 
o
, 
com∂ëe_ªwrôe
);

1758 
	}
}

1760 
	$run_checkdiff
(
diff_fûïaú
 *
p
, 
diff_›ti⁄s
 *
o
)

1762 c⁄° *
«me
;

1763 c⁄° *
Ÿhî
;

1765 i‡(
	`DIFF_PAIR_UNMERGED
(
p
)) {

1770 
«me
 = 
p
->
⁄e
->
∑th
;

1771 
Ÿhî
 = (
	`°rcmp
(
«me
, 
p
->
two
->
∑th
Ë?Ö->two->∑th : 
NULL
);

1773 
	`diff_fûl_sha1_öfo
(
p
->
⁄e
);

1774 
	`diff_fûl_sha1_öfo
(
p
->
two
);

1776 
	`buûtö_checkdiff
(
«me
, 
Ÿhî
, 
p
->
⁄e
,Ö->
two
);

1777 
	}
}

1779 
	$diff_£tup
(
diff_›ti⁄s
 *
›ti⁄s
)

1781 
	`mem£t
(
›ti⁄s
, 0, (*options));

1782 
›ti⁄s
->
löe_ãrmö©i⁄
 = '\n';

1783 
›ti⁄s
->
bªak_›t
 = -1;

1784 
›ti⁄s
->
ª«me_limô
 = -1;

1785 
›ti⁄s
->
c⁄ãxt
 = 3;

1786 
›ti⁄s
->
msg_£p
 = "";

1788 
›ti⁄s
->
ch™ge
 = 
diff_ch™ge
;

1789 
›ti⁄s
->
add_ªmove
 = 
diff_addªmove
;

1790 
›ti⁄s
->
cﬁ‹_diff
 = 
diff_u£_cﬁ‹_deÁu…
;

1791 
›ti⁄s
->
dëe˘_ª«me
 = 
diff_dëe˘_ª«me_deÁu…
;

1792 
	}
}

1794 
	$diff_£tup_d⁄e
(
diff_›ti⁄s
 *
›ti⁄s
)

1796 
cou¡
 = 0;

1798 i‡(
›ti⁄s
->
ouçut_f‹m©
 & 
DIFF_FORMAT_NAME
)

1799 
cou¡
++;

1800 i‡(
›ti⁄s
->
ouçut_f‹m©
 & 
DIFF_FORMAT_NAME_STATUS
)

1801 
cou¡
++;

1802 i‡(
›ti⁄s
->
ouçut_f‹m©
 & 
DIFF_FORMAT_CHECKDIFF
)

1803 
cou¡
++;

1804 i‡(
›ti⁄s
->
ouçut_f‹m©
 & 
DIFF_FORMAT_NO_OUTPUT
)

1805 
cou¡
++;

1806 i‡(
cou¡
 > 1)

1807 
	`dõ
("--name-only, --name-status, --checkánd -sáre mutuallyÉxclusive");

1809 i‡(
›ti⁄s
->
föd_c›õs_h¨dî
)

1810 
›ti⁄s
->
dëe˘_ª«me
 = 
DIFF_DETECT_COPY
;

1812 i‡(
›ti⁄s
->
ouçut_f‹m©
 & (
DIFF_FORMAT_NAME
 |

1813 
DIFF_FORMAT_NAME_STATUS
 |

1814 
DIFF_FORMAT_CHECKDIFF
 |

1815 
DIFF_FORMAT_NO_OUTPUT
))

1816 
›ti⁄s
->
ouçut_f‹m©
 &~(
DIFF_FORMAT_RAW
 |

1817 
DIFF_FORMAT_NUMSTAT
 |

1818 
DIFF_FORMAT_DIFFSTAT
 |

1819 
DIFF_FORMAT_SHORTSTAT
 |

1820 
DIFF_FORMAT_SUMMARY
 |

1821 
DIFF_FORMAT_PATCH
);

1827 i‡(
›ti⁄s
->
ouçut_f‹m©
 & (
DIFF_FORMAT_PATCH
 |

1828 
DIFF_FORMAT_NUMSTAT
 |

1829 
DIFF_FORMAT_DIFFSTAT
 |

1830 
DIFF_FORMAT_SHORTSTAT
 |

1831 
DIFF_FORMAT_SUMMARY
 |

1832 
DIFF_FORMAT_CHECKDIFF
))

1833 
›ti⁄s
->
ªcursive
 = 1;

1837 i‡(
›ti⁄s
->
pickaxe
)

1838 
›ti⁄s
->
ªcursive
 = 1;

1840 i‡(
›ti⁄s
->
dëe˘_ª«me
 && o±i⁄s->
ª«me_limô
 < 0)

1841 
›ti⁄s
->
ª«me_limô
 = 
diff_ª«me_limô_deÁu…
;

1842 i‡(
›ti⁄s
->
£tup
 & 
DIFF_SETUP_USE_CACHE
) {

1843 i‡(!
a˘ive_ˇche
)

1850 
	`ªad_ˇche
();

1852 i‡(
›ti⁄s
->
£tup
 & 
DIFF_SETUP_USE_SIZE_CACHE
)

1853 
u£_size_ˇche
 = 1;

1854 i‡(
›ti⁄s
->
abbªv
 <= 0 || 40 < options->abbrev)

1855 
›ti⁄s
->
abbªv
 = 40;

1858 
	}
}

1860 
	$›t_¨g
(c⁄° *
¨g
, 
¨g_sh‹t
, c⁄° *
¨g_l⁄g
, *
vÆ
)

1862 
c
, *
eq
;

1863 
Àn
;

1865 i‡(*
¨g
 != '-')

1867 
c
 = *++
¨g
;

1868 i‡(!
c
)

1870 i‡(
c
 =
¨g_sh‹t
) {

1871 
c
 = *++
¨g
;

1872 i‡(!
c
)

1874 i‡(
vÆ
 && 
	`isdigô
(
c
)) {

1875 *
íd
;

1876 
n
 = 
	`°πoul
(
¨g
, &
íd
, 10);

1877 i‡(*
íd
)

1879 *
vÆ
 = 
n
;

1884 i‡(
c
 != '-')

1886 
¨g
++;

1887 
eq
 = 
	`°rchr
(
¨g
, '=');

1888 i‡(
eq
)

1889 
Àn
 = 
eq
 - 
¨g
;

1891 
Àn
 = 
	`°æí
(
¨g
);

1892 i‡(!
Àn
 || 
	`°∫cmp
(
¨g
, 
¨g_l⁄g
,Üen))

1894 i‡(
eq
) {

1895 
n
;

1896 *
íd
;

1897 i‡(!
	`isdigô
(*++
eq
))

1899 
n
 = 
	`°πoul
(
eq
, &
íd
, 10);

1900 i‡(*
íd
)

1902 *
vÆ
 = 
n
;

1905 
	}
}

1907 
	$diff_›t_∑r£
(
diff_›ti⁄s
 *
›ti⁄s
, c⁄° **
av
, 
ac
)

1909 c⁄° *
¨g
 = 
av
[0];

1910 i‡(!
	`°rcmp
(
¨g
, "-p") || !strcmp(arg, "-u"))

1911 
›ti⁄s
->
ouçut_f‹m©
 |
DIFF_FORMAT_PATCH
;

1912 i‡(
	`›t_¨g
(
¨g
, 'U', "unifõd", &
›ti⁄s
->
c⁄ãxt
))

1913 
›ti⁄s
->
ouçut_f‹m©
 |
DIFF_FORMAT_PATCH
;

1914 i‡(!
	`°rcmp
(
¨g
, "--raw"))

1915 
›ti⁄s
->
ouçut_f‹m©
 |
DIFF_FORMAT_RAW
;

1916 i‡(!
	`°rcmp
(
¨g
, "--patch-with-raw")) {

1917 
›ti⁄s
->
ouçut_f‹m©
 |
DIFF_FORMAT_PATCH
 | 
DIFF_FORMAT_RAW
;

1919 i‡(!
	`°rcmp
(
¨g
, "--numstat")) {

1920 
›ti⁄s
->
ouçut_f‹m©
 |
DIFF_FORMAT_NUMSTAT
;

1922 i‡(!
	`°rcmp
(
¨g
, "--shortstat")) {

1923 
›ti⁄s
->
ouçut_f‹m©
 |
DIFF_FORMAT_SHORTSTAT
;

1925 i‡(!
	`°∫cmp
(
¨g
, "--stat", 6)) {

1926 *
íd
;

1927 
width
 = 
›ti⁄s
->
°©_width
;

1928 
«me_width
 = 
›ti⁄s
->
°©_«me_width
;

1929 
¨g
 += 6;

1930 
íd
 = (*)
¨g
;

1932 *
¨g
) {

1934 i‡(!
	`°∫cmp
(
¨g
, "-width=", 7))

1935 
width
 = 
	`°πoul
(
¨g
 + 7, &
íd
, 10);

1936 i‡(!
	`°∫cmp
(
¨g
, "-name-width=", 12))

1937 
«me_width
 = 
	`°πoul
(
¨g
 + 12, &
íd
, 10);

1940 
width
 = 
	`°πoul
(
¨g
+1, &
íd
, 10);

1941 i‡(*
íd
 == ',')

1942 
«me_width
 = 
	`°πoul
(
íd
+1, &end, 10);

1946 i‡(*
íd
)

1948 
›ti⁄s
->
ouçut_f‹m©
 |
DIFF_FORMAT_DIFFSTAT
;

1949 
›ti⁄s
->
°©_«me_width
 = 
«me_width
;

1950 
›ti⁄s
->
°©_width
 = 
width
;

1952 i‡(!
	`°rcmp
(
¨g
, "--check"))

1953 
›ti⁄s
->
ouçut_f‹m©
 |
DIFF_FORMAT_CHECKDIFF
;

1954 i‡(!
	`°rcmp
(
¨g
, "--summary"))

1955 
›ti⁄s
->
ouçut_f‹m©
 |
DIFF_FORMAT_SUMMARY
;

1956 i‡(!
	`°rcmp
(
¨g
, "--patch-with-stat")) {

1957 
›ti⁄s
->
ouçut_f‹m©
 |
DIFF_FORMAT_PATCH
 | 
DIFF_FORMAT_DIFFSTAT
;

1959 i‡(!
	`°rcmp
(
¨g
, "-z"))

1960 
›ti⁄s
->
löe_ãrmö©i⁄
 = 0;

1961 i‡(!
	`°∫cmp
(
¨g
, "-l", 2))

1962 
›ti⁄s
->
ª«me_limô
 = 
	`°πoul
(
¨g
+2, 
NULL
, 10);

1963 i‡(!
	`°rcmp
(
¨g
, "--full-index"))

1964 
›ti⁄s
->
fuŒ_ödex
 = 1;

1965 i‡(!
	`°rcmp
(
¨g
, "--binary")) {

1966 
›ti⁄s
->
ouçut_f‹m©
 |
DIFF_FORMAT_PATCH
;

1967 
›ti⁄s
->
bö¨y
 = 1;

1969 i‡(!
	`°rcmp
(
¨g
, "-a") || !strcmp(arg, "--text")) {

1970 
›ti⁄s
->
ãxt
 = 1;

1972 i‡(!
	`°rcmp
(
¨g
, "--name-only"))

1973 
›ti⁄s
->
ouçut_f‹m©
 |
DIFF_FORMAT_NAME
;

1974 i‡(!
	`°rcmp
(
¨g
, "--name-status"))

1975 
›ti⁄s
->
ouçut_f‹m©
 |
DIFF_FORMAT_NAME_STATUS
;

1976 i‡(!
	`°rcmp
(
¨g
, "-R"))

1977 
›ti⁄s
->
ªvî£_diff
 = 1;

1978 i‡(!
	`°∫cmp
(
¨g
, "-S", 2))

1979 
›ti⁄s
->
pickaxe
 = 
¨g
 + 2;

1980 i‡(!
	`°rcmp
(
¨g
, "-s")) {

1981 
›ti⁄s
->
ouçut_f‹m©
 |
DIFF_FORMAT_NO_OUTPUT
;

1983 i‡(!
	`°∫cmp
(
¨g
, "-O", 2))

1984 
›ti⁄s
->
‹dîfûe
 = 
¨g
 + 2;

1985 i‡(!
	`°∫cmp
(
¨g
, "--diff-filter=", 14))

1986 
›ti⁄s
->
fûãr
 = 
¨g
 + 14;

1987 i‡(!
	`°rcmp
(
¨g
, "--pickaxe-all"))

1988 
›ti⁄s
->
pickaxe_›ts
 = 
DIFF_PICKAXE_ALL
;

1989 i‡(!
	`°rcmp
(
¨g
, "--pickaxe-regex"))

1990 
›ti⁄s
->
pickaxe_›ts
 = 
DIFF_PICKAXE_REGEX
;

1991 i‡(!
	`°∫cmp
(
¨g
, "-B", 2)) {

1992 i‡((
›ti⁄s
->
bªak_›t
 =

1993 
	`diff_sc‹e›t_∑r£
(
¨g
)) == -1)

1996 i‡(!
	`°∫cmp
(
¨g
, "-M", 2)) {

1997 i‡((
›ti⁄s
->
ª«me_sc‹e
 =

1998 
	`diff_sc‹e›t_∑r£
(
¨g
)) == -1)

2000 
›ti⁄s
->
dëe˘_ª«me
 = 
DIFF_DETECT_RENAME
;

2002 i‡(!
	`°∫cmp
(
¨g
, "-C", 2)) {

2003 i‡((
›ti⁄s
->
ª«me_sc‹e
 =

2004 
	`diff_sc‹e›t_∑r£
(
¨g
)) == -1)

2006 
›ti⁄s
->
dëe˘_ª«me
 = 
DIFF_DETECT_COPY
;

2008 i‡(!
	`°rcmp
(
¨g
, "--find-copies-harder"))

2009 
›ti⁄s
->
föd_c›õs_h¨dî
 = 1;

2010 i‡(!
	`°rcmp
(
¨g
, "--abbrev"))

2011 
›ti⁄s
->
abbªv
 = 
DEFAULT_ABBREV
;

2012 i‡(!
	`°∫cmp
(
¨g
, "--abbrev=", 9)) {

2013 
›ti⁄s
->
abbªv
 = 
	`°πoul
(
¨g
 + 9, 
NULL
, 10);

2014 i‡(
›ti⁄s
->
abbªv
 < 
MINIMUM_ABBREV
)

2015 
›ti⁄s
->
abbªv
 = 
MINIMUM_ABBREV
;

2016 i‡(40 < 
›ti⁄s
->
abbªv
)

2017 
›ti⁄s
->
abbªv
 = 40;

2019 i‡(!
	`°rcmp
(
¨g
, "--color"))

2020 
›ti⁄s
->
cﬁ‹_diff
 = 1;

2021 i‡(!
	`°rcmp
(
¨g
, "--no-color"))

2022 
›ti⁄s
->
cﬁ‹_diff
 = 0;

2023 i‡(!
	`°rcmp
(
¨g
, "-w") || !strcmp(arg, "--ignore-all-space"))

2024 
›ti⁄s
->
xdl_›ts
 |
XDF_IGNORE_WHITESPACE
;

2025 i‡(!
	`°rcmp
(
¨g
, "-b") || !strcmp(arg, "--ignore-space-change"))

2026 
›ti⁄s
->
xdl_›ts
 |
XDF_IGNORE_WHITESPACE_CHANGE
;

2027 i‡(!
	`°rcmp
(
¨g
, "--color-words"))

2028 
›ti⁄s
->
cﬁ‹_diff
 = o±i⁄s->
cﬁ‹_diff_w‹ds
 = 1;

2029 i‡(!
	`°rcmp
(
¨g
, "--no-renames"))

2030 
›ti⁄s
->
dëe˘_ª«me
 = 0;

2034 
	}
}

2036 
	$∑r£_num
(c⁄° **
˝_p
)

2038 
num
, 
sˇÀ
;

2039 
ch
, 
dŸ
;

2040 c⁄° *
˝
 = *
˝_p
;

2042 
num
 = 0;

2043 
sˇÀ
 = 1;

2044 
dŸ
 = 0;

2046 
ch
 = *
˝
;

2047 i‡–!
dŸ
 && 
ch
 == '.' ) {

2048 
sˇÀ
 = 1;

2049 
dŸ
 = 1;

2050 } i‡–
ch
 == '%' ) {

2051 
sˇÀ
 = 
dŸ
 ? scale*100 : 100;

2052 
˝
++;

2054 } i‡–
ch
 >= '0' && ch <= '9' ) {

2055 i‡–
sˇÀ
 < 100000 ) {

2056 
sˇÀ
 *= 10;

2057 
num
 = (num*10Ë+ (
ch
-'0');

2062 
˝
++;

2064 *
˝_p
 = 
˝
;

2069  (
num
 >
sˇÀ
Ë? 
MAX_SCORE
 : (MAX_SCORE *Çum / scale);

2070 
	}
}

2072 
	$diff_sc‹e›t_∑r£
(c⁄° *
›t
)

2074 
›t1
, 
›t2
, 
cmd
;

2076 i‡(*
›t
++ != '-')

2078 
cmd
 = *
›t
++;

2079 i‡(
cmd
 != 'M' && cmd != 'C' && cmd != 'B')

2082 
›t1
 = 
	`∑r£_num
(&
›t
);

2083 i‡(
cmd
 != 'B')

2084 
›t2
 = 0;

2086 i‡(*
›t
 == 0)

2087 
›t2
 = 0;

2088 i‡(*
›t
 != '/')

2091 
›t
++;

2092 
›t2
 = 
	`∑r£_num
(&
›t
);

2095 i‡(*
›t
 != 0)

2097  
›t1
 | (
›t2
 << 16);

2098 
	}
}

2100 
diff_queue_°ru˘
 
	gdiff_queued_diff
;

2102 
	$diff_q
(
diff_queue_°ru˘
 *
queue
, 
diff_fûïaú
 *
dp
)

2104 i‡(
queue
->
Æloc
 <queue->
ƒ
) {

2105 
queue
->
Æloc
 = 
	`Æloc_ƒ
(queue->alloc);

2106 
queue
->queuê
	`xªÆloc
(queue->queue,

2107 (
dp
Ë* 
queue
->
Æloc
);

2109 
queue
->queue[queue->
ƒ
++] = 
dp
;

2110 
	}
}

2112 
diff_fûïaú
 *
	$diff_queue
(
diff_queue_°ru˘
 *
queue
,

2113 
diff_fûe•ec
 *
⁄e
,

2114 
diff_fûe•ec
 *
two
)

2116 
diff_fûïaú
 *
dp
 = 
	`xˇŒoc
(1, (*dp));

2117 
dp
->
⁄e
 = one;

2118 
dp
->
two
 =Åwo;

2119 i‡(
queue
)

2120 
	`diff_q
(
queue
, 
dp
);

2121  
dp
;

2122 
	}
}

2124 
	$diff_‰ì_fûïaú
(
diff_fûïaú
 *
p
)

2126 
	`diff_‰ì_fûe•ec_d©a
(
p
->
⁄e
);

2127 
	`diff_‰ì_fûe•ec_d©a
(
p
->
two
);

2128 
	`‰ì
(
p
->
⁄e
);

2129 
	`‰ì
(
p
->
two
);

2130 
	`‰ì
(
p
);

2131 
	}
}

2136 c⁄° *
	$diff_unique_abbªv
(c⁄° *
sha1
, 
Àn
)

2138 
abbÀn
;

2139 c⁄° *
abbªv
;

2140 i‡(
Àn
 == 40)

2141  
	`sha1_to_hex
(
sha1
);

2143 
abbªv
 = 
	`föd_unique_abbªv
(
sha1
, 
Àn
);

2144 i‡(!
abbªv
)

2145  
	`sha1_to_hex
(
sha1
);

2146 
abbÀn
 = 
	`°æí
(
abbªv
);

2147 i‡(
abbÀn
 < 37) {

2148 
hex
[41];

2149 i‡(
Àn
 < 
abbÀn
 &&ábblen <=Üen + 2)

2150 
	`•rötf
(
hex
, "%s%.*s", 
abbªv
, 
Àn
+3-
abbÀn
, "..");

2152 
	`•rötf
(
hex
, "%s...", 
abbªv
);

2153  
hex
;

2155  
	`sha1_to_hex
(
sha1
);

2156 
	}
}

2158 
	$diff_Êush_øw
(
diff_fûïaú
 *
p
,

2159 
diff_›ti⁄s
 *
›ti⁄s
)

2161 
two_∑ths
;

2162 
°©us
[10];

2163 
abbªv
 = 
›ti⁄s
->abbrev;

2164 c⁄° *
∑th_⁄e
, *
∑th_two
;

2165 
öãr_«me_ãrmö©i⁄
 = '\t';

2166 
löe_ãrmö©i⁄
 = 
›ti⁄s
->line_termination;

2168 i‡(!
löe_ãrmö©i⁄
)

2169 
öãr_«me_ãrmö©i⁄
 = 0;

2171 
∑th_⁄e
 = 
p
->
⁄e
->
∑th
;

2172 
∑th_two
 = 
p
->
two
->
∑th
;

2173 i‡(
löe_ãrmö©i⁄
) {

2174 
∑th_⁄e
 = 
	`quŸe_⁄e
(path_one);

2175 
∑th_two
 = 
	`quŸe_⁄e
(path_two);

2178 i‡(
p
->
sc‹e
)

2179 
	`•rötf
(
°©us
, "%c%03d", 
p
->status,

2180 ()(0.5 + 
p
->
sc‹e
 * 100.0/
MAX_SCORE
));

2182 
°©us
[0] = 
p
->status;

2183 
°©us
[1] = 0;

2185 
p
->
°©us
) {

2186 
DIFF_STATUS_COPIED
:

2187 
DIFF_STATUS_RENAMED
:

2188 
two_∑ths
 = 1;

2190 
DIFF_STATUS_ADDED
:

2191 
DIFF_STATUS_DELETED
:

2192 
two_∑ths
 = 0;

2195 
two_∑ths
 = 0;

2198 i‡(!(
›ti⁄s
->
ouçut_f‹m©
 & 
DIFF_FORMAT_NAME_STATUS
)) {

2199 
	`¥ötf
(":%06o %06o %s ",

2200 
p
->
⁄e
->
mode
,Ö->
two
->mode,

2201 
	`diff_unique_abbªv
(
p
->
⁄e
->
sha1
, 
abbªv
));

2202 
	`¥ötf
("%s ",

2203 
	`diff_unique_abbªv
(
p
->
two
->
sha1
, 
abbªv
));

2205 
	`¥ötf
("%s%c%s", 
°©us
, 
öãr_«me_ãrmö©i⁄
, 
∑th_⁄e
);

2206 i‡(
two_∑ths
)

2207 
	`¥ötf
("%c%s", 
öãr_«me_ãrmö©i⁄
, 
∑th_two
);

2208 
	`putch¨
(
löe_ãrmö©i⁄
);

2209 i‡(
∑th_⁄e
 !
p
->
⁄e
->
∑th
)

2210 
	`‰ì
((*)
∑th_⁄e
);

2211 i‡(
∑th_two
 !
p
->
two
->
∑th
)

2212 
	`‰ì
((*)
∑th_two
);

2213 
	}
}

2215 
	$diff_Êush_«me
(
diff_fûïaú
 *
p
, 
diff_›ti⁄s
 *
›t
)

2217 *
∑th
 = 
p
->
two
->path;

2219 i‡(
›t
->
löe_ãrmö©i⁄
)

2220 
∑th
 = 
	`quŸe_⁄e
(
p
->
two
->path);

2221 
	`¥ötf
("%s%c", 
∑th
, 
›t
->
löe_ãrmö©i⁄
);

2222 i‡(
p
->
two
->
∑th
 !=Öath)

2223 
	`‰ì
(
∑th
);

2224 
	}
}

2226 
	$diff_unmodifõd_∑ú
(
diff_fûïaú
 *
p
)

2233 
diff_fûe•ec
 *
⁄e
, *
two
;

2235 i‡(
	`DIFF_PAIR_UNMERGED
(
p
))

2238 
⁄e
 = 
p
->one;

2239 
two
 = 
p
->two;

2244 i‡(
	`DIFF_FILE_VALID
(
⁄e
Ë!DIFF_FILE_VALID(
two
) ||

2245 
	`DIFF_PAIR_MODE_CHANGED
(
p
) ||

2246 
	`°rcmp
(
⁄e
->
∑th
, 
two
->path))

2252 i‡(
⁄e
->
sha1_vÆid
 && 
two
->sha1_valid &&

2253 !
	`hashcmp
(
⁄e
->
sha1
, 
two
->sha1))

2255 i‡(!
⁄e
->
sha1_vÆid
 && !
two
->sha1_valid)

2258 
	}
}

2260 
	$diff_Êush_∑tch
(
diff_fûïaú
 *
p
, 
diff_›ti⁄s
 *
o
)

2262 i‡(
	`diff_unmodifõd_∑ú
(
p
))

2265 i‡((
	`DIFF_FILE_VALID
(
p
->
⁄e
Ë&& 
	`S_ISDIR
’->⁄e->
mode
)) ||

2266 (
	`DIFF_FILE_VALID
(
p
->
two
Ë&& 
	`S_ISDIR
’->two->
mode
)))

2269 
	`run_diff
(
p
, 
o
);

2270 
	}
}

2272 
	$diff_Êush_°©
(
diff_fûïaú
 *
p
, 
diff_›ti⁄s
 *
o
,

2273 
diff°©_t
 *
diff°©
)

2275 i‡(
	`diff_unmodifõd_∑ú
(
p
))

2278 i‡((
	`DIFF_FILE_VALID
(
p
->
⁄e
Ë&& 
	`S_ISDIR
’->⁄e->
mode
)) ||

2279 (
	`DIFF_FILE_VALID
(
p
->
two
Ë&& 
	`S_ISDIR
’->two->
mode
)))

2282 
	`run_diff°©
(
p
, 
o
, 
diff°©
);

2283 
	}
}

2285 
	$diff_Êush_checkdiff
(
diff_fûïaú
 *
p
,

2286 
diff_›ti⁄s
 *
o
)

2288 i‡(
	`diff_unmodifõd_∑ú
(
p
))

2291 i‡((
	`DIFF_FILE_VALID
(
p
->
⁄e
Ë&& 
	`S_ISDIR
’->⁄e->
mode
)) ||

2292 (
	`DIFF_FILE_VALID
(
p
->
two
Ë&& 
	`S_ISDIR
’->two->
mode
)))

2295 
	`run_checkdiff
(
p
, 
o
);

2296 
	}
}

2298 
	$diff_queue_is_em±y
()

2300 
diff_queue_°ru˘
 *
q
 = &
diff_queued_diff
;

2301 
i
;

2302 
i
 = 0; i < 
q
->
ƒ
; i++)

2303 i‡(!
	`diff_unmodifõd_∑ú
(
q
->
queue
[
i
]))

2306 
	}
}

2308 #i‡
DIFF_DEBUG


2309 
	$diff_debug_fûe•ec
(
diff_fûe•ec
 *
s
, 
x
, c⁄° *
⁄e
)

2311 
	`Ârötf
(
°dîr
, "queue[%d] %s (%s) %s %06o %s\n",

2312 
x
, 
⁄e
 ? one : "",

2313 
s
->
∑th
,

2314 
	`DIFF_FILE_VALID
(
s
) ? "valid" : "invalid",

2315 
s
->
mode
,

2316 
s
->
sha1_vÆid
 ? 
	`sha1_to_hex
(s->
sha1
) : "");

2317 
	`Ârötf
(
°dîr
, "queue[%d] %s size %lu flags %d\n",

2318 
x
, 
⁄e
 ? one : "",

2319 
s
->
size
, s->
x‰m_Êags
);

2320 
	}
}

2322 
	$diff_debug_fûïaú
(c⁄° 
diff_fûïaú
 *
p
, 
i
)

2324 
	`diff_debug_fûe•ec
(
p
->
⁄e
, 
i
, "one");

2325 
	`diff_debug_fûe•ec
(
p
->
two
, 
i
, "two");

2326 
	`Ârötf
(
°dîr
, "score %d, status %c stays %d broken %d\n",

2327 
p
->
sc‹e
,Ö->
°©us
 ?Ö->status : '?',

2328 
p
->
sour˚_°ays
,Ö->
brokí_∑ú
);

2329 
	}
}

2331 
	$diff_debug_queue
(c⁄° *
msg
, 
diff_queue_°ru˘
 *
q
)

2333 
i
;

2334 i‡(
msg
)

2335 
	`Ârötf
(
°dîr
, "%s\n", 
msg
);

2336 
	`Ârötf
(
°dîr
, "q->ƒ = %d\n", 
q
->
ƒ
);

2337 
i
 = 0; i < 
q
->
ƒ
; i++) {

2338 
diff_fûïaú
 *
p
 = 
q
->
queue
[
i
];

2339 
	`diff_debug_fûïaú
(
p
, 
i
);

2341 
	}
}

2344 
	$diff_ªsﬁve_ª«me_c›y
()

2346 
i
, 
j
;

2347 
diff_fûïaú
 *
p
, *
µ
;

2348 
diff_queue_°ru˘
 *
q
 = &
diff_queued_diff
;

2350 
	`diff_debug_queue
("ªsﬁve-ª«me-c›y", 
q
);

2352 
i
 = 0; i < 
q
->
ƒ
; i++) {

2353 
p
 = 
q
->
queue
[
i
];

2354 
p
->
°©us
 = 0;

2355 i‡(
	`DIFF_PAIR_UNMERGED
(
p
))

2356 
p
->
°©us
 = 
DIFF_STATUS_UNMERGED
;

2357 i‡(!
	`DIFF_FILE_VALID
(
p
->
⁄e
))

2358 
p
->
°©us
 = 
DIFF_STATUS_ADDED
;

2359 i‡(!
	`DIFF_FILE_VALID
(
p
->
two
))

2360 
p
->
°©us
 = 
DIFF_STATUS_DELETED
;

2361 i‡(
	`DIFF_PAIR_TYPE_CHANGED
(
p
))

2362 
p
->
°©us
 = 
DIFF_STATUS_TYPE_CHANGED
;

2368 i‡(
	`DIFF_PAIR_RENAME
(
p
)) {

2369 i‡(
p
->
sour˚_°ays
) {

2370 
p
->
°©us
 = 
DIFF_STATUS_COPIED
;

2379 
j
 = 
i
 + 1; j < 
q
->
ƒ
; j++) {

2380 
µ
 = 
q
->
queue
[
j
];

2381 i‡(
	`°rcmp
(
µ
->
⁄e
->
∑th
, 
p
->one->path))

2383 i‡(!
	`DIFF_PAIR_RENAME
(
µ
))

2386 
p
->
°©us
 = 
DIFF_STATUS_COPIED
;

2389 i‡(!
p
->
°©us
)

2390 
p
->
°©us
 = 
DIFF_STATUS_RENAMED
;

2392 i‡(
	`hashcmp
(
p
->
⁄e
->
sha1
,Ö->
two
->sha1) ||

2393 
p
->
⁄e
->
mode
 !p->
two
->mode)

2394 
p
->
°©us
 = 
DIFF_STATUS_MODIFIED
;

2399 
	`îr‹
("feeding unmodified %sÅo diffcore",

2400 
p
->
⁄e
->
∑th
);

2401 
p
->
°©us
 = 
DIFF_STATUS_UNKNOWN
;

2404 
	`diff_debug_queue
("ªsﬁve-ª«me-c›y d⁄e", 
q
);

2405 
	}
}

2407 
	$check_∑ú_°©us
(
diff_fûïaú
 *
p
)

2409 
p
->
°©us
) {

2410 
DIFF_STATUS_UNKNOWN
:

2413 
	`dõ
("internalÉrror in diff-resolve-rename-copy");

2417 
	}
}

2419 
	$Êush_⁄e_∑ú
(
diff_fûïaú
 *
p
, 
diff_›ti⁄s
 *
›t
)

2421 
fmt
 = 
›t
->
ouçut_f‹m©
;

2423 i‡(
fmt
 & 
DIFF_FORMAT_CHECKDIFF
)

2424 
	`diff_Êush_checkdiff
(
p
, 
›t
);

2425 i‡(
fmt
 & (
DIFF_FORMAT_RAW
 | 
DIFF_FORMAT_NAME_STATUS
))

2426 
	`diff_Êush_øw
(
p
, 
›t
);

2427 i‡(
fmt
 & 
DIFF_FORMAT_NAME
)

2428 
	`diff_Êush_«me
(
p
, 
›t
);

2429 
	}
}

2431 
	$show_fûe_mode_«me
(c⁄° *
√wdñëe
, 
diff_fûe•ec
 *
fs
)

2433 *
«me
 = 
	`quŸe_⁄e
(
fs
->
∑th
);

2434 i‡(
fs
->
mode
)

2435 
	`¥ötf
(" %†modê%06ÿ%s\n", 
√wdñëe
, 
fs
->
mode
, 
«me
);

2437 
	`¥ötf
(" %†%s\n", 
√wdñëe
, 
«me
);

2438 
	`‰ì
(
«me
);

2439 
	}
}

2442 
	$show_mode_ch™ge
(
diff_fûïaú
 *
p
, 
show_«me
)

2444 i‡(
p
->
⁄e
->
mode
 &&Ö->
two
->mode &&Ö->one->mode !=Ö->two->mode) {

2445 i‡(
show_«me
) {

2446 *
«me
 = 
	`quŸe_⁄e
(
p
->
two
->
∑th
);

2447 
	`¥ötf
(" mode change %06o => %06o %s\n",

2448 
p
->
⁄e
->
mode
,Ö->
two
->mode, 
«me
);

2449 
	`‰ì
(
«me
);

2452 
	`¥ötf
(" mode change %06o => %06o\n",

2453 
p
->
⁄e
->
mode
,Ö->
two
->mode);

2455 
	}
}

2457 
	$show_ª«me_c›y
(c⁄° *
ª«mec›y
, 
diff_fûïaú
 *
p
)

2459 *
«mes
 = 
	`µröt_ª«me
(
p
->
⁄e
->
∑th
,Ö->
two
->path);

2461 
	`¥ötf
(" %†%†(%d%%)\n", 
ª«mec›y
, 
«mes
,

2462 ()(0.5 + 
p
->
sc‹e
 * 100.0/
MAX_SCORE
));

2463 
	`‰ì
(
«mes
);

2464 
	`show_mode_ch™ge
(
p
, 0);

2465 
	}
}

2467 
	$diff_summ¨y
(
diff_fûïaú
 *
p
)

2469 
p
->
°©us
) {

2470 
DIFF_STATUS_DELETED
:

2471 
	`show_fûe_mode_«me
("dñëe", 
p
->
⁄e
);

2473 
DIFF_STATUS_ADDED
:

2474 
	`show_fûe_mode_«me
("¸óã", 
p
->
two
);

2476 
DIFF_STATUS_COPIED
:

2477 
	`show_ª«me_c›y
("c›y", 
p
);

2479 
DIFF_STATUS_RENAMED
:

2480 
	`show_ª«me_c›y
("ª«me", 
p
);

2483 i‡(
p
->
sc‹e
) {

2484 *
«me
 = 
	`quŸe_⁄e
(
p
->
two
->
∑th
);

2485 
	`¥ötf
("Ñewrôê%†(%d%%)\n", 
«me
,

2486 ()(0.5 + 
p
->
sc‹e
 * 100.0/
MAX_SCORE
));

2487 
	`‰ì
(
«me
);

2488 
	`show_mode_ch™ge
(
p
, 0);

2489 } 
	`show_mode_ch™ge
(
p
, 1);

2492 
	}
}

2494 
	s∑tch_id_t
 {

2495 
xdiff_emô_°©e
 
	mxm
;

2496 
SHA_CTX
 *
	m˘x
;

2497 
	m∑tchÀn
;

2500 
	$ªmove_•a˚
(*
löe
, 
Àn
)

2502 
i
;

2503 *
d°
 = 
löe
;

2504 
c
;

2506 
i
 = 0; i < 
Àn
; i++)

2507 i‡(!
	`is•a˚
((
c
 = 
löe
[
i
])))

2508 *
d°
++ = 
c
;

2510  
d°
 - 
löe
;

2511 
	}
}

2513 
	$∑tch_id_c⁄sume
(*
¥iv
, *
löe
, 
Àn
)

2515 
∑tch_id_t
 *
d©a
 = 
¥iv
;

2516 
√w_Àn
;

2519 i‡(!
	`°∫cmp
(
löe
, "@@ -", 4))

2522 
√w_Àn
 = 
	`ªmove_•a˚
(
löe
, 
Àn
);

2524 
	`SHA1_Upd©e
(
d©a
->
˘x
, 
löe
, 
√w_Àn
);

2525 
d©a
->
∑tchÀn
 +
√w_Àn
;

2526 
	}
}

2529 
	$diff_gë_∑tch_id
(
diff_›ti⁄s
 *
›ti⁄s
, *
sha1
)

2531 
diff_queue_°ru˘
 *
q
 = &
diff_queued_diff
;

2532 
i
;

2533 
SHA_CTX
 
˘x
;

2534 
∑tch_id_t
 
d©a
;

2535 
buf„r
[
PATH_MAX
 * 4 + 20];

2537 
	`SHA1_Inô
(&
˘x
);

2538 
	`mem£t
(&
d©a
, 0, (
∑tch_id_t
));

2539 
d©a
.
˘x
 = &ctx;

2540 
d©a
.
xm
.
c⁄sume
 = 
∑tch_id_c⁄sume
;

2542 
i
 = 0; i < 
q
->
ƒ
; i++) {

2543 
xµ¨am_t
 
xµ
;

2544 
xdemôc⁄f_t
 
xecfg
;

2545 
xdemôcb_t
 
ecb
;

2546 
mmfûe_t
 
mf1
, 
mf2
;

2547 
diff_fûïaú
 *
p
 = 
q
->
queue
[
i
];

2548 
Àn1
, 
Àn2
;

2550 i‡(
p
->
°©us
 == 0)

2551  
	`îr‹
("internal diff statusÉrror");

2552 i‡(
p
->
°©us
 =
DIFF_STATUS_UNKNOWN
)

2554 i‡(
	`diff_unmodifõd_∑ú
(
p
))

2556 i‡((
	`DIFF_FILE_VALID
(
p
->
⁄e
Ë&& 
	`S_ISDIR
’->⁄e->
mode
)) ||

2557 (
	`DIFF_FILE_VALID
(
p
->
two
Ë&& 
	`S_ISDIR
’->two->
mode
)))

2559 i‡(
	`DIFF_PAIR_UNMERGED
(
p
))

2562 
	`diff_fûl_sha1_öfo
(
p
->
⁄e
);

2563 
	`diff_fûl_sha1_öfo
(
p
->
two
);

2564 i‡(
	`fûl_mmfûe
(&
mf1
, 
p
->
⁄e
) < 0 ||

2565 
	`fûl_mmfûe
(&
mf2
, 
p
->
two
) < 0)

2566  
	`îr‹
("unableÅoÑead filesÅo diff");

2569 i‡(
	`mmfûe_is_bö¨y
(&
mf2
))

2572 
Àn1
 = 
	`ªmove_•a˚
(
p
->
⁄e
->
∑th
, 
	`°æí
(p->one->path));

2573 
Àn2
 = 
	`ªmove_•a˚
(
p
->
two
->
∑th
, 
	`°æí
(p->two->path));

2574 i‡(
p
->
⁄e
->
mode
 == 0)

2575 
Àn1
 = 
	`¢¥ötf
(
buf„r
, (buffer),

2580 
Àn1
, 
p
->
⁄e
->
∑th
,

2581 
Àn2
, 
p
->
two
->
∑th
,

2582 
p
->
two
->
mode
,

2583 
Àn2
, 
p
->
two
->
∑th
);

2584 i‡(
p
->
two
->
mode
 == 0)

2585 
Àn1
 = 
	`¢¥ötf
(
buf„r
, (buffer),

2590 
Àn1
, 
p
->
⁄e
->
∑th
,

2591 
Àn2
, 
p
->
two
->
∑th
,

2592 
p
->
⁄e
->
mode
,

2593 
Àn1
, 
p
->
⁄e
->
∑th
);

2595 
Àn1
 = 
	`¢¥ötf
(
buf„r
, (buffer),

2599 
Àn1
, 
p
->
⁄e
->
∑th
,

2600 
Àn2
, 
p
->
two
->
∑th
,

2601 
Àn1
, 
p
->
⁄e
->
∑th
,

2602 
Àn2
, 
p
->
two
->
∑th
);

2603 
	`SHA1_Upd©e
(&
˘x
, 
buf„r
, 
Àn1
);

2605 
xµ
.
Êags
 = 
XDF_NEED_MINIMAL
;

2606 
xecfg
.
˘xÀn
 = 3;

2607 
xecfg
.
Êags
 = 
XDL_EMIT_FUNCNAMES
;

2608 
ecb
.
outf
 = 
xdiff_outf
;

2609 
ecb
.
¥iv
 = &
d©a
;

2610 
	`xdl_diff
(&
mf1
, &
mf2
, &
xµ
, &
xecfg
, &
ecb
);

2613 
	`SHA1_FöÆ
(
sha1
, &
˘x
);

2615 
	}
}

2617 
	$diff_Êush_∑tch_id
(
diff_›ti⁄s
 *
›ti⁄s
, *
sha1
)

2619 
diff_queue_°ru˘
 *
q
 = &
diff_queued_diff
;

2620 
i
;

2621 
ªsu…
 = 
	`diff_gë_∑tch_id
(
›ti⁄s
, 
sha1
);

2623 
i
 = 0; i < 
q
->
ƒ
; i++)

2624 
	`diff_‰ì_fûïaú
(
q
->
queue
[
i
]);

2626 
	`‰ì
(
q
->
queue
);

2627 
q
->
queue
 = 
NULL
;

2628 
q
->
ƒ
 = q->
Æloc
 = 0;

2630  
ªsu…
;

2631 
	}
}

2633 
	$is_summ¨y_em±y
(c⁄° 
diff_queue_°ru˘
 *
q
)

2635 
i
;

2637 
i
 = 0; i < 
q
->
ƒ
; i++) {

2638 c⁄° 
diff_fûïaú
 *
p
 = 
q
->
queue
[
i
];

2640 
p
->
°©us
) {

2641 
DIFF_STATUS_DELETED
:

2642 
DIFF_STATUS_ADDED
:

2643 
DIFF_STATUS_COPIED
:

2644 
DIFF_STATUS_RENAMED
:

2647 i‡(
p
->
sc‹e
)

2649 i‡(
p
->
⁄e
->
mode
 &&Ö->
two
->mode &&

2650 
p
->
⁄e
->
mode
 !p->
two
->mode)

2656 
	}
}

2658 
	$diff_Êush
(
diff_›ti⁄s
 *
›ti⁄s
)

2660 
diff_queue_°ru˘
 *
q
 = &
diff_queued_diff
;

2661 
i
, 
ouçut_f‹m©
 = 
›ti⁄s
->output_format;

2662 
£∑øt‹
 = 0;

2668 i‡(!
q
->
ƒ
)

2669 
‰ì_queue
;

2671 i‡(
ouçut_f‹m©
 & (
DIFF_FORMAT_RAW
 |

2672 
DIFF_FORMAT_NAME
 |

2673 
DIFF_FORMAT_NAME_STATUS
 |

2674 
DIFF_FORMAT_CHECKDIFF
)) {

2675 
i
 = 0; i < 
q
->
ƒ
; i++) {

2676 
diff_fûïaú
 *
p
 = 
q
->
queue
[
i
];

2677 i‡(
	`check_∑ú_°©us
(
p
))

2678 
	`Êush_⁄e_∑ú
(
p
, 
›ti⁄s
);

2680 
£∑øt‹
++;

2683 i‡(
ouçut_f‹m©
 & (
DIFF_FORMAT_DIFFSTAT
|
DIFF_FORMAT_SHORTSTAT
|
DIFF_FORMAT_NUMSTAT
)) {

2684 
diff°©_t
 
diff°©
;

2686 
	`mem£t
(&
diff°©
, 0, (
diff°©_t
));

2687 
diff°©
.
xm
.
c⁄sume
 = 
diff°©_c⁄sume
;

2688 
i
 = 0; i < 
q
->
ƒ
; i++) {

2689 
diff_fûïaú
 *
p
 = 
q
->
queue
[
i
];

2690 i‡(
	`check_∑ú_°©us
(
p
))

2691 
	`diff_Êush_°©
(
p
, 
›ti⁄s
, &
diff°©
);

2693 i‡(
ouçut_f‹m©
 & 
DIFF_FORMAT_NUMSTAT
)

2694 
	`show_num°©
(&
diff°©
, 
›ti⁄s
);

2695 i‡(
ouçut_f‹m©
 & 
DIFF_FORMAT_DIFFSTAT
)

2696 
	`show_°©s
(&
diff°©
, 
›ti⁄s
);

2697 i‡(
ouçut_f‹m©
 & 
DIFF_FORMAT_SHORTSTAT
)

2698 
	`show_sh‹t°©s
(&
diff°©
);

2699 
£∑øt‹
++;

2702 i‡(
ouçut_f‹m©
 & 
DIFF_FORMAT_SUMMARY
 && !
	`is_summ¨y_em±y
(
q
)) {

2703 
i
 = 0; i < 
q
->
ƒ
; i++)

2704 
	`diff_summ¨y
(
q
->
queue
[
i
]);

2705 
£∑øt‹
++;

2708 i‡(
ouçut_f‹m©
 & 
DIFF_FORMAT_PATCH
) {

2709 i‡(
£∑øt‹
) {

2710 i‡(
›ti⁄s
->
°©_£p
) {

2712 
	`Âuts
(
›ti⁄s
->
°©_£p
, 
°dout
);

2714 
	`putch¨
(
›ti⁄s
->
löe_ãrmö©i⁄
);

2718 
i
 = 0; i < 
q
->
ƒ
; i++) {

2719 
diff_fûïaú
 *
p
 = 
q
->
queue
[
i
];

2720 i‡(
	`check_∑ú_°©us
(
p
))

2721 
	`diff_Êush_∑tch
(
p
, 
›ti⁄s
);

2725 i‡(
ouçut_f‹m©
 & 
DIFF_FORMAT_CALLBACK
)

2726 
›ti⁄s
->
	`f‹m©_ˇŒback
(
q
, o±i⁄s, o±i⁄s->
f‹m©_ˇŒback_d©a
);

2728 
i
 = 0; i < 
q
->
ƒ
; i++)

2729 
	`diff_‰ì_fûïaú
(
q
->
queue
[
i
]);

2730 
‰ì_queue
:

2731 
	`‰ì
(
q
->
queue
);

2732 
q
->
queue
 = 
NULL
;

2733 
q
->
ƒ
 = q->
Æloc
 = 0;

2734 
	}
}

2736 
	$diffc‹e_≠∂y_fûãr
(c⁄° *
fûãr
)

2738 
i
;

2739 
diff_queue_°ru˘
 *
q
 = &
diff_queued_diff
;

2740 
diff_queue_°ru˘
 
outq
;

2741 
outq
.
queue
 = 
NULL
;

2742 
outq
.
ƒ
 = outq.
Æloc
 = 0;

2744 i‡(!
fûãr
)

2747 i‡(
	`°rchr
(
fûãr
, 
DIFF_STATUS_FILTER_AON
)) {

2748 
found
;

2749 
i
 = 
found
 = 0; !found && i < 
q
->
ƒ
; i++) {

2750 
diff_fûïaú
 *
p
 = 
q
->
queue
[
i
];

2751 i‡(((
p
->
°©us
 =
DIFF_STATUS_MODIFIED
) &&

2752 ((
p
->
sc‹e
 &&

2753 
	`°rchr
(
fûãr
, 
DIFF_STATUS_FILTER_BROKEN
)) ||

2754 (!
p
->
sc‹e
 &&

2755 
	`°rchr
(
fûãr
, 
DIFF_STATUS_MODIFIED
)))) ||

2756 ((
p
->
°©us
 !
DIFF_STATUS_MODIFIED
) &&

2757 
	`°rchr
(
fûãr
, 
p
->
°©us
)))

2758 
found
++;

2760 i‡(
found
)

2768 
i
 = 0; i < 
q
->
ƒ
; i++)

2769 
	`diff_‰ì_fûïaú
(
q
->
queue
[
i
]);

2773 
i
 = 0; i < 
q
->
ƒ
; i++) {

2774 
diff_fûïaú
 *
p
 = 
q
->
queue
[
i
];

2776 i‡(((
p
->
°©us
 =
DIFF_STATUS_MODIFIED
) &&

2777 ((
p
->
sc‹e
 &&

2778 
	`°rchr
(
fûãr
, 
DIFF_STATUS_FILTER_BROKEN
)) ||

2779 (!
p
->
sc‹e
 &&

2780 
	`°rchr
(
fûãr
, 
DIFF_STATUS_MODIFIED
)))) ||

2781 ((
p
->
°©us
 !
DIFF_STATUS_MODIFIED
) &&

2782 
	`°rchr
(
fûãr
, 
p
->
°©us
)))

2783 
	`diff_q
(&
outq
, 
p
);

2785 
	`diff_‰ì_fûïaú
(
p
);

2788 
	`‰ì
(
q
->
queue
);

2789 *
q
 = 
outq
;

2790 
	}
}

2792 
	$diffc‹e_°d
(
diff_›ti⁄s
 *
›ti⁄s
)

2794 i‡(
›ti⁄s
->
bªak_›t
 != -1)

2795 
	`diffc‹e_bªak
(
›ti⁄s
->
bªak_›t
);

2796 i‡(
›ti⁄s
->
dëe˘_ª«me
)

2797 
	`diffc‹e_ª«me
(
›ti⁄s
);

2798 i‡(
›ti⁄s
->
bªak_›t
 != -1)

2799 
	`diffc‹e_mîge_brokí
();

2800 i‡(
›ti⁄s
->
pickaxe
)

2801 
	`diffc‹e_pickaxe
(
›ti⁄s
->
pickaxe
, o±i⁄s->
pickaxe_›ts
);

2802 i‡(
›ti⁄s
->
‹dîfûe
)

2803 
	`diffc‹e_‹dî
(
›ti⁄s
->
‹dîfûe
);

2804 
	`diff_ªsﬁve_ª«me_c›y
();

2805 
	`diffc‹e_≠∂y_fûãr
(
›ti⁄s
->
fûãr
);

2806 
	}
}

2809 
	$diffc‹e_°d_no_ªsﬁve
(
diff_›ti⁄s
 *
›ti⁄s
)

2811 i‡(
›ti⁄s
->
pickaxe
)

2812 
	`diffc‹e_pickaxe
(
›ti⁄s
->
pickaxe
, o±i⁄s->
pickaxe_›ts
);

2813 i‡(
›ti⁄s
->
‹dîfûe
)

2814 
	`diffc‹e_‹dî
(
›ti⁄s
->
‹dîfûe
);

2815 
	`diffc‹e_≠∂y_fûãr
(
›ti⁄s
->
fûãr
);

2816 
	}
}

2818 
	$diff_addªmove
(
diff_›ti⁄s
 *
›ti⁄s
,

2819 
addªmove
, 
mode
,

2820 c⁄° *
sha1
,

2821 c⁄° *
ba£
, c⁄° *
∑th
)

2823 
c⁄ˇç©h
[
PATH_MAX
];

2824 
diff_fûe•ec
 *
⁄e
, *
two
;

2838 i‡(
›ti⁄s
->
ªvî£_diff
)

2839 
addªmove
 = (addremove == '+' ? '-' :

2840 
addªmove
 == '-' ? '+' :áddremove);

2842 i‡(!
∑th
)Öath = "";

2843 
	`•rötf
(
c⁄ˇç©h
, "%s%s", 
ba£
, 
∑th
);

2844 
⁄e
 = 
	`Æloc_fûe•ec
(
c⁄ˇç©h
);

2845 
two
 = 
	`Æloc_fûe•ec
(
c⁄ˇç©h
);

2847 i‡(
addªmove
 != '+')

2848 
	`fûl_fûe•ec
(
⁄e
, 
sha1
, 
mode
);

2849 i‡(
addªmove
 != '-')

2850 
	`fûl_fûe•ec
(
two
, 
sha1
, 
mode
);

2852 
	`diff_queue
(&
diff_queued_diff
, 
⁄e
, 
two
);

2853 
	}
}

2855 
	$diff_ch™ge
(
diff_›ti⁄s
 *
›ti⁄s
,

2856 
ﬁd_mode
, 
√w_mode
,

2857 c⁄° *
ﬁd_sha1
,

2858 c⁄° *
√w_sha1
,

2859 c⁄° *
ba£
, c⁄° *
∑th
)

2861 
c⁄ˇç©h
[
PATH_MAX
];

2862 
diff_fûe•ec
 *
⁄e
, *
two
;

2864 i‡(
›ti⁄s
->
ªvî£_diff
) {

2865 
tmp
;

2866 c⁄° *
tmp_c
;

2867 
tmp
 = 
ﬁd_mode
; old_modê
√w_mode
;Çew_mode =Åmp;

2868 
tmp_c
 = 
ﬁd_sha1
; old_sha1 = 
√w_sha1
;Çew_sha1 =Åmp_c;

2870 i‡(!
∑th
)Öath = "";

2871 
	`•rötf
(
c⁄ˇç©h
, "%s%s", 
ba£
, 
∑th
);

2872 
⁄e
 = 
	`Æloc_fûe•ec
(
c⁄ˇç©h
);

2873 
two
 = 
	`Æloc_fûe•ec
(
c⁄ˇç©h
);

2874 
	`fûl_fûe•ec
(
⁄e
, 
ﬁd_sha1
, 
ﬁd_mode
);

2875 
	`fûl_fûe•ec
(
two
, 
√w_sha1
, 
√w_mode
);

2877 
	`diff_queue
(&
diff_queued_diff
, 
⁄e
, 
two
);

2878 
	}
}

2880 
	$diff_unmîge
(
diff_›ti⁄s
 *
›ti⁄s
,

2881 c⁄° *
∑th
,

2882 
mode
, c⁄° *
sha1
)

2884 
diff_fûe•ec
 *
⁄e
, *
two
;

2885 
⁄e
 = 
	`Æloc_fûe•ec
(
∑th
);

2886 
two
 = 
	`Æloc_fûe•ec
(
∑th
);

2887 
	`fûl_fûe•ec
(
⁄e
, 
sha1
, 
mode
);

2888 
	`diff_queue
(&
diff_queued_diff
, 
⁄e
, 
two
)->
is_unmîged
 = 1;

2889 
	}
}

	@diff.h

4 #i‚de‡
DIFF_H


5 
	#DIFF_H


	)

7 
	~"åì-wÆk.h
"

9 
	gªv_öfo
;

10 
	gdiff_›ti⁄s
;

11 
	gdiff_queue_°ru˘
;

13 (*
	tch™ge_‚_t
)(
	tdiff_›ti⁄s
 *
	t›ti⁄s
,

14 
	tﬁd_mode
, 
	t√w_mode
,

15 c⁄° *
	tﬁd_sha1
,

16 c⁄° *
	t√w_sha1
,

17 c⁄° *
	tba£
, c⁄° *
	t∑th
);

19 (*
	tadd_ªmove_‚_t
)(
	tdiff_›ti⁄s
 *
	t›ti⁄s
,

20 
	taddªmove
, 
	tmode
,

21 c⁄° *
	tsha1
,

22 c⁄° *
	tba£
, c⁄° *
	t∑th
);

24 (*
	tdiff_f‹m©_‚_t
)(
	tdiff_queue_°ru˘
 *
	tq
,

25 
	tdiff_›ti⁄s
 *
	t›ti⁄s
, *
	td©a
);

27 
	#DIFF_FORMAT_RAW
 0x0001

	)

28 
	#DIFF_FORMAT_DIFFSTAT
 0x0002

	)

29 
	#DIFF_FORMAT_NUMSTAT
 0x0004

	)

30 
	#DIFF_FORMAT_SUMMARY
 0x0008

	)

31 
	#DIFF_FORMAT_PATCH
 0x0010

	)

32 
	#DIFF_FORMAT_SHORTSTAT
 0x0020

	)

35 
	#DIFF_FORMAT_NAME
 0x0100

	)

36 
	#DIFF_FORMAT_NAME_STATUS
 0x0200

	)

37 
	#DIFF_FORMAT_CHECKDIFF
 0x0400

	)

42 
	#DIFF_FORMAT_NO_OUTPUT
 0x0800

	)

44 
	#DIFF_FORMAT_CALLBACK
 0x1000

	)

46 
	sdiff_›ti⁄s
 {

47 c⁄° *
fûãr
;

48 c⁄° *
‹dîfûe
;

49 c⁄° *
pickaxe
;

50 c⁄° *
sögÀ_fﬁlow
;

51 
ªcursive
:1,

52 
åì_ö_ªcursive
:1,

53 
bö¨y
:1,

54 
ãxt
:1,

55 
fuŒ_ödex
:1,

56 
sûít_⁄_ªmove
:1,

57 
föd_c›õs_h¨dî
:1,

58 
cﬁ‹_diff
:1,

59 
cﬁ‹_diff_w‹ds
:1;

60 
c⁄ãxt
;

61 
bªak_›t
;

62 
dëe˘_ª«me
;

63 
löe_ãrmö©i⁄
;

64 
ouçut_f‹m©
;

65 
pickaxe_›ts
;

66 
ª«me_sc‹e
;

67 
ªvî£_diff
;

68 
ª«me_limô
;

69 
£tup
;

70 
abbªv
;

71 c⁄° *
msg_£p
;

72 c⁄° *
°©_£p
;

73 
xdl_›ts
;

75 
°©_width
;

76 
°©_«me_width
;

78 
ƒ_∑ths
;

79 c⁄° **
∑ths
;

80 *
∑thÀns
;

81 
ch™ge_‚_t
 
ch™ge
;

82 
add_ªmove_‚_t
 
add_ªmove
;

83 
diff_f‹m©_‚_t
 
f‹m©_ˇŒback
;

84 *
f‹m©_ˇŒback_d©a
;

87 
	ecﬁ‹_diff
 {

88 
DIFF_RESET
 = 0,

89 
DIFF_PLAIN
 = 1,

90 
DIFF_METAINFO
 = 2,

91 
DIFF_FRAGINFO
 = 3,

92 
DIFF_FILE_OLD
 = 4,

93 
DIFF_FILE_NEW
 = 5,

94 
DIFF_COMMIT
 = 6,

95 
DIFF_WHITESPACE
 = 7,

97 c⁄° *
	`diff_gë_cﬁ‹
(
diff_u£_cﬁ‹
, 
cﬁ‹_diff
 
ix
);

99 c⁄° 
mime_bound¨y_Àadî
[];

101 
	`diff_åì_£tup_∑ths
(c⁄° **
∑ths
, 
diff_›ti⁄s
 *);

102 
	`diff_åì_ªÀa£_∑ths
(
diff_›ti⁄s
 *);

103 
	`diff_åì
(
åì_desc
 *
t1
, åì_des¯*
t2
,

104 c⁄° *
ba£
, 
diff_›ti⁄s
 *
›t
);

105 
	`diff_åì_sha1
(c⁄° *
ﬁd
, c⁄° *
√w
,

106 c⁄° *
ba£
, 
diff_›ti⁄s
 *
›t
);

107 
	`diff_roŸ_åì_sha1
(c⁄° *
√w
, c⁄° *
ba£
,

108 
diff_›ti⁄s
 *
›t
);

110 
	scomböe_diff_∑th
 {

111 
comböe_diff_∑th
 *
√xt
;

112 
Àn
;

113 *
∑th
;

114 
mode
;

115 
sha1
[20];

116 
	scomböe_diff_∑ª¡
 {

117 
°©us
;

118 
mode
;

119 
sha1
[20];

120 } 
∑ª¡
[
FLEX_ARRAY
];

122 
	#comböe_diff_∑th_size
(
n
, 
l
) \

123 ((
comböe_diff_∑th
) + \

124 (
comböe_diff_∑ª¡
Ë* (
n
Ë+ (
l
Ë+ 1)

	)

126 
	`show_comböed_diff
(
comböe_diff_∑th
 *
ñem
, 
num_∑ª¡
,

127 
dí£
, 
ªv_öfo
 *);

129 
	`diff_åì_comböed
(c⁄° *
sha1
, c⁄° 
∑ª¡
[][20], 
num_∑ª¡
, 
dí£
, 
ªv_öfo
 *
ªv
);

131 
	`diff_åì_comböed_mîge
(c⁄° *
sha1
, , 
ªv_öfo
 *);

133 
	`diff_addªmove
(
diff_›ti⁄s
 *,

134 
addªmove
,

135 
mode
,

136 c⁄° *
sha1
,

137 c⁄° *
ba£
,

138 c⁄° *
∑th
);

140 
	`diff_ch™ge
(
diff_›ti⁄s
 *,

141 
mode1
, 
mode2
,

142 c⁄° *
sha1
,

143 c⁄° *
sha2
,

144 c⁄° *
ba£
, c⁄° *
∑th
);

146 
	`diff_unmîge
(
diff_›ti⁄s
 *,

147 c⁄° *
∑th
,

148 
mode
,

149 c⁄° *
sha1
);

151 
	`diff_sc‹e›t_∑r£
(c⁄° *
›t
);

153 
	#DIFF_SETUP_REVERSE
 1

	)

154 
	#DIFF_SETUP_USE_CACHE
 2

	)

155 
	#DIFF_SETUP_USE_SIZE_CACHE
 4

	)

157 
	`gô_diff_ui_c⁄fig
(c⁄° *
v¨
, c⁄° *
vÆue
);

158 
	`diff_£tup
(
diff_›ti⁄s
 *);

159 
	`diff_›t_∑r£
(
diff_›ti⁄s
 *, const **, );

160 
	`diff_£tup_d⁄e
(
diff_›ti⁄s
 *);

162 
	#DIFF_DETECT_RENAME
 1

	)

163 
	#DIFF_DETECT_COPY
 2

	)

165 
	#DIFF_PICKAXE_ALL
 1

	)

166 
	#DIFF_PICKAXE_REGEX
 2

	)

168 
	`diffc‹e_°d
(
diff_›ti⁄s
 *);

170 
	`diffc‹e_°d_no_ªsﬁve
(
diff_›ti⁄s
 *);

172 
	#COMMON_DIFF_OPTIONS_HELP
 \

198 " -® --ãxàÅª©áŒ fûe†a†ãxt.\n"

	)

200 
	`diff_queue_is_em±y
();

201 
	`diff_Êush
(
diff_›ti⁄s
*);

204 
	#DIFF_STATUS_ADDED
 'A'

	)

205 
	#DIFF_STATUS_COPIED
 'C'

	)

206 
	#DIFF_STATUS_DELETED
 'D'

	)

207 
	#DIFF_STATUS_MODIFIED
 'M'

	)

208 
	#DIFF_STATUS_RENAMED
 'R'

	)

209 
	#DIFF_STATUS_TYPE_CHANGED
 'T'

	)

210 
	#DIFF_STATUS_UNKNOWN
 'X'

	)

211 
	#DIFF_STATUS_UNMERGED
 'U'

	)

216 
	#DIFF_STATUS_FILTER_AON
 '*'

	)

217 
	#DIFF_STATUS_FILTER_BROKEN
 'B'

	)

219 c⁄° *
	`diff_unique_abbªv
(const *, );

221 
	`run_diff_fûes
(
ªv_öfo
 *
ªvs
, 
sûít_⁄_ªmoved
);

223 
	`run_diff_ödex
(
ªv_öfo
 *
ªvs
, 
ˇched
);

225 
	`do_diff_ˇche
(c⁄° *, 
diff_›ti⁄s
 *);

226 
	`diff_Êush_∑tch_id
(
diff_›ti⁄s
 *, *);

	@diffcore-break.c

4 
	~"ˇche.h
"

5 
	~"diff.h
"

6 
	~"diffc‹e.h
"

8 
	$should_bªak
(
diff_fûe•ec
 *
§c
,

9 
diff_fûe•ec
 *
d°
,

10 
bªak_sc‹e
,

11 *
mîge_sc‹e_p
)

48 
dñè_size
, 
ba£_size
, 
§c_c›õd
, 
lôîÆ_added
,

49 
§c_ªmoved
;

51 *
mîge_sc‹e_p
 = 0;

55 i‡(!
	`S_ISREG
(
§c
->
mode
Ë|| !S_ISREG(
d°
->mode))

58 i‡(
§c
->
sha1_vÆid
 && 
d°
->sha1_valid &&

59 !
	`hashcmp
(
§c
->
sha1
, 
d°
->sha1))

62 i‡(
	`diff_p›uœã_fûe•ec
(
§c
, 0Ë|| diff_p›uœã_fûe•ec(
d°
, 0))

65 
ba£_size
 = ((
§c
->
size
 < 
d°
->size) ? src->size : dst->size);

66 i‡(
ba£_size
 < 
MINIMUM_BREAK_SIZE
)

69 i‡(
	`diffc‹e_cou¡_ch™ges
(
§c
->
d©a
, src->
size
,

70 
d°
->
d©a
, d°->
size
,

71 
NULL
, NULL,

73 &
§c_c›õd
, &
lôîÆ_added
))

77 i‡(
§c
->
size
 < 
§c_c›õd
)

78 
§c_c›õd
 = 
§c
->
size
;

79 i‡(
d°
->
size
 < 
lôîÆ_added
 + 
§c_c›õd
) {

80 i‡(
§c_c›õd
 < 
d°
->
size
)

81 
lôîÆ_added
 = 
d°
->
size
 - 
§c_c›õd
;

83 
lôîÆ_added
 = 0;

85 
§c_ªmoved
 = 
§c
->
size
 - 
§c_c›õd
;

92 *
mîge_sc‹e_p
 = 
§c_ªmoved
 * 
MAX_SCORE
 / 
§c
->
size
;

97 
dñè_size
 = 
§c_ªmoved
 + 
lôîÆ_added
;

98 i‡(
dñè_size
 * 
MAX_SCORE
 / 
ba£_size
 < 
bªak_sc‹e
)

104 i‡((
§c
->
size
 * 
bªak_sc‹e
 < 
§c_ªmoved
 * 
MAX_SCORE
) &&

105 (
lôîÆ_added
 * 20 < 
§c_ªmoved
) &&

106 (
lôîÆ_added
 * 20 < 
§c_c›õd
))

110 
	}
}

112 
	$diffc‹e_bªak
(
bªak_sc‹e
)

114 
diff_queue_°ru˘
 *
q
 = &
diff_queued_diff
;

115 
diff_queue_°ru˘
 
outq
;

148 
mîge_sc‹e
;

149 
i
;

154 
mîge_sc‹e
 = (
bªak_sc‹e
 >> 16) & 0xFFFF;

155 
bªak_sc‹e
 = (break_score & 0xFFFF);

157 i‡(!
bªak_sc‹e
)

158 
bªak_sc‹e
 = 
DEFAULT_BREAK_SCORE
;

159 i‡(!
mîge_sc‹e
)

160 
mîge_sc‹e
 = 
DEFAULT_MERGE_SCORE
;

162 
outq
.
ƒ
 = outq.
Æloc
 = 0;

163 
outq
.
queue
 = 
NULL
;

165 
i
 = 0; i < 
q
->
ƒ
; i++) {

166 
diff_fûïaú
 *
p
 = 
q
->
queue
[
i
];

167 
sc‹e
;

172 i‡(
	`DIFF_FILE_VALID
(
p
->
⁄e
Ë&& DIFF_FILE_VALID’->
two
) &&

173 !
	`S_ISDIR
(
p
->
⁄e
->
mode
Ë&& !S_ISDIR’->
two
->mode) &&

174 !
	`°rcmp
(
p
->
⁄e
->
∑th
,Ö->
two
->path)) {

175 i‡(
	`should_bªak
(
p
->
⁄e
,Ö->
two
,

176 
bªak_sc‹e
, &
sc‹e
)) {

178 
diff_fûe•ec
 *
nuŒ_⁄e
, *
nuŒ_two
;

179 
diff_fûïaú
 *
dp
;

187 i‡(
sc‹e
 < 
mîge_sc‹e
)

188 
sc‹e
 = 0;

191 
nuŒ_⁄e
 = 
	`Æloc_fûe•ec
(
p
->
⁄e
->
∑th
);

192 
dp
 = 
	`diff_queue
(&
outq
, 
p
->
⁄e
, 
nuŒ_⁄e
);

193 
dp
->
sc‹e
 = score;

194 
dp
->
brokí_∑ú
 = 1;

197 
nuŒ_two
 = 
	`Æloc_fûe•ec
(
p
->
two
->
∑th
);

198 
dp
 = 
	`diff_queue
(&
outq
, 
nuŒ_two
, 
p
->
two
);

199 
dp
->
sc‹e
 = score;

200 
dp
->
brokí_∑ú
 = 1;

202 
	`‰ì
(
p
);

208 
	`diff_q
(&
outq
, 
p
);

210 
	`‰ì
(
q
->
queue
);

211 *
q
 = 
outq
;

214 
	}
}

216 
	$mîge_brokí
(
diff_fûïaú
 *
p
,

217 
diff_fûïaú
 *
µ
,

218 
diff_queue_°ru˘
 *
outq
)

221 
diff_fûïaú
 *
c
 = 
p
, *
d
 = 
µ
, *
dp
;

222 i‡(
	`DIFF_FILE_VALID
(
p
->
⁄e
)) {

224 
d
 = 
p
; 
c
 = 
µ
;

227 i‡(!
	`DIFF_FILE_VALID
(
d
->
⁄e
))

228 
	`dõ
("internalÉrror in merge #1");

229 i‡(
	`DIFF_FILE_VALID
(
d
->
two
))

230 
	`dõ
("internalÉrror in merge #2");

231 i‡(
	`DIFF_FILE_VALID
(
c
->
⁄e
))

232 
	`dõ
("internalÉrror in merge #3");

233 i‡(!
	`DIFF_FILE_VALID
(
c
->
two
))

234 
	`dõ
("internalÉrror in merge #4");

236 
dp
 = 
	`diff_queue
(
outq
, 
d
->
⁄e
, 
c
->
two
);

237 
dp
->
sc‹e
 = 
p
->score;

238 
	`diff_‰ì_fûe•ec_d©a
(
d
->
two
);

239 
	`diff_‰ì_fûe•ec_d©a
(
c
->
⁄e
);

240 
	`‰ì
(
d
);

241 
	`‰ì
(
c
);

242 
	}
}

244 
	$diffc‹e_mîge_brokí
()

246 
diff_queue_°ru˘
 *
q
 = &
diff_queued_diff
;

247 
diff_queue_°ru˘
 
outq
;

248 
i
, 
j
;

250 
outq
.
ƒ
 = outq.
Æloc
 = 0;

251 
outq
.
queue
 = 
NULL
;

253 
i
 = 0; i < 
q
->
ƒ
; i++) {

254 
diff_fûïaú
 *
p
 = 
q
->
queue
[
i
];

255 i‡(!
p
)

258 i‡(
p
->
brokí_∑ú
 &&

259 !
	`°rcmp
(
p
->
⁄e
->
∑th
,Ö->
two
->path)) {

263 
j
 = 
i
 + 1; j < 
q
->
ƒ
; j++) {

264 
diff_fûïaú
 *
µ
 = 
q
->
queue
[
j
];

265 i‡(
µ
->
brokí_∑ú
 &&

266 !
	`°rcmp
(
µ
->
⁄e
->
∑th
,Öp->
two
->path) &&

267 !
	`°rcmp
(
p
->
⁄e
->
∑th
, 
µ
->
two
->path)) {

269 
	`mîge_brokí
(
p
, 
µ
, &
outq
);

270 
q
->
queue
[
j
] = 
NULL
;

274 i‡(
q
->
ƒ
 <
j
)

278 
	`diff_q
(&
outq
, 
p
);

281 
	`diff_q
(&
outq
, 
p
);

283 
	`‰ì
(
q
->
queue
);

284 *
q
 = 
outq
;

287 
	}
}

	@diffcore-delta.c

1 
	~"ˇche.h
"

2 
	~"diff.h
"

3 
	~"diffc‹e.h
"

28 
	#INITIAL_HASH_SIZE
 9

	)

33 
	#INITIAL_FREE
(
sz_log2
Ë((1<<(sz_log2))*(sz_log2-3)/(sz_log2))

	)

40 
	#HASHBASE
 107927

	)

42 
	s•™hash
 {

43 
	mhashvÆ
;

44 
	m˙t
;

46 
	s•™hash_t›
 {

47 
	mÆloc_log2
;

48 
	m‰ì
;

49 
•™hash
 
	md©a
[
FLEX_ARRAY
];

52 
•™hash
 *
	$•™hash_föd
(
•™hash_t›
 *
t›
,

53 
hashvÆ
)

55 
sz
 = 1 << 
t›
->
Æloc_log2
;

56 
buckë
 = 
hashvÆ
 & (
sz
 - 1);

58 
•™hash
 *
h
 = &(
t›
->
d©a
[
buckë
++]);

59 i‡(!
h
->
˙t
)

60  
NULL
;

61 i‡(
h
->
hashvÆ
 == hashval)

62  
h
;

63 i‡(
sz
 <
buckë
)

64 
buckë
 = 0;

66 
	}
}

68 
•™hash_t›
 *
	$•™hash_ªhash
(
•™hash_t›
 *
‹ig
)

70 
•™hash_t›
 *
√w
;

71 
i
;

72 
osz
 = 1 << 
‹ig
->
Æloc_log2
;

73 
sz
 = 
osz
 << 1;

75 
√w
 = 
	`xmÆloc
((*
‹ig
Ë+ (
•™hash
Ë* 
sz
);

76 
√w
->
Æloc_log2
 = 
‹ig
->alloc_log2 + 1;

77 
√w
->
‰ì
 = 
	`INITIAL_FREE
“ew->
Æloc_log2
);

78 
	`mem£t
(
√w
->
d©a
, 0, (
•™hash
Ë* 
sz
);

79 
i
 = 0; i < 
osz
; i++) {

80 
•™hash
 *
o
 = &(
‹ig
->
d©a
[
i
]);

81 
buckë
;

82 i‡(!
o
->
˙t
)

84 
buckë
 = 
o
->
hashvÆ
 & (
sz
 - 1);

86 
•™hash
 *
h
 = &(
√w
->
d©a
[
buckë
++]);

87 i‡(!
h
->
˙t
) {

88 
h
->
hashvÆ
 = 
o
->hashval;

89 
h
->
˙t
 = 
o
->cnt;

90 
√w
->
‰ì
--;

93 i‡(
sz
 <
buckë
)

94 
buckë
 = 0;

97 
	`‰ì
(
‹ig
);

98  
√w
;

99 
	}
}

101 
•™hash_t›
 *
	$add_•™hash
(
•™hash_t›
 *
t›
,

102 
hashvÆ
, 
˙t
)

104 
buckë
, 
lim
;

105 
•™hash
 *
h
;

107 
lim
 = (1 << 
t›
->
Æloc_log2
);

108 
buckë
 = 
hashvÆ
 & (
lim
 - 1);

110 
h
 = &(
t›
->
d©a
[
buckë
++]);

111 i‡(!
h
->
˙t
) {

112 
h
->
hashvÆ
 = hashval;

113 
h
->
˙t
 = cnt;

114 
t›
->
‰ì
--;

115 i‡(
t›
->
‰ì
 < 0)

116  
	`•™hash_ªhash
(
t›
);

117  
t›
;

119 i‡(
h
->
hashvÆ
 == hashval) {

120 
h
->
˙t
 += cnt;

121  
t›
;

123 i‡(
lim
 <
buckë
)

124 
buckë
 = 0;

126 
	}
}

128 
•™hash_t›
 *
	$hash_ch¨s
(*
buf
, 
sz
)

130 
i
, 
n
;

131 
accum1
, 
accum2
, 
hashvÆ
;

132 
•™hash_t›
 *
hash
;

134 
i
 = 
INITIAL_HASH_SIZE
;

135 
hash
 = 
	`xmÆloc
((*hashË+ (
•™hash
Ë* (1<<
i
));

136 
hash
->
Æloc_log2
 = 
i
;

137 
hash
->
‰ì
 = 
	`INITIAL_FREE
(
i
);

138 
	`mem£t
(
hash
->
d©a
, 0, (
•™hash
Ë* (1<<
i
));

140 
n
 = 0;

141 
accum1
 = 
accum2
 = 0;

142 
sz
) {

143 
c
 = *
buf
++;

144 
ﬁd_1
 = 
accum1
;

145 
sz
--;

146 
accum1
 = (accum1 << 7Ë^ (
accum2
 >> 25);

147 
accum2
 = (accum2 << 7Ë^ (
ﬁd_1
 >> 25);

148 
accum1
 +
c
;

149 i‡(++
n
 < 64 && 
c
 != '\n')

151 
hashvÆ
 = (
accum1
 + 
accum2
 * 0x61Ë% 
HASHBASE
;

152 
hash
 = 
	`add_•™hash
(hash, 
hashvÆ
, 
n
);

153 
n
 = 0;

154 
accum1
 = 
accum2
 = 0;

156  
hash
;

157 
	}
}

159 
	$diffc‹e_cou¡_ch™ges
(*
§c
, 
§c_size
,

160 *
d°
, 
d°_size
,

161 **
§c_cou¡_p
,

162 **
d°_cou¡_p
,

163 
dñè_limô
,

164 *
§c_c›õd
,

165 *
lôîÆ_added
)

167 
i
, 
ssz
;

168 
•™hash_t›
 *
§c_cou¡
, *
d°_cou¡
;

169 
sc
, 
œ
;

171 
§c_cou¡
 = 
d°_cou¡
 = 
NULL
;

172 i‡(
§c_cou¡_p
)

173 
§c_cou¡
 = *
§c_cou¡_p
;

174 i‡(!
§c_cou¡
) {

175 
§c_cou¡
 = 
	`hash_ch¨s
(
§c
, 
§c_size
);

176 i‡(
§c_cou¡_p
)

177 *
§c_cou¡_p
 = 
§c_cou¡
;

179 i‡(
d°_cou¡_p
)

180 
d°_cou¡
 = *
d°_cou¡_p
;

181 i‡(!
d°_cou¡
) {

182 
d°_cou¡
 = 
	`hash_ch¨s
(
d°
, 
d°_size
);

183 i‡(
d°_cou¡_p
)

184 *
d°_cou¡_p
 = 
d°_cou¡
;

186 
sc
 = 
œ
 = 0;

188 
ssz
 = 1 << 
§c_cou¡
->
Æloc_log2
;

189 
i
 = 0; i < 
ssz
; i++) {

190 
•™hash
 *
s
 = &(
§c_cou¡
->
d©a
[
i
]);

191 
•™hash
 *
d
;

192 
d°_˙t
, 
§c_˙t
;

193 i‡(!
s
->
˙t
)

195 
§c_˙t
 = 
s
->
˙t
;

196 
d
 = 
	`•™hash_föd
(
d°_cou¡
, 
s
->
hashvÆ
);

197 
d°_˙t
 = 
d
 ? d->
˙t
 : 0;

198 i‡(
§c_˙t
 < 
d°_˙t
) {

199 
œ
 +
d°_˙t
 - 
§c_˙t
;

200 
sc
 +
§c_˙t
;

203 
sc
 +
d°_˙t
;

206 i‡(!
§c_cou¡_p
)

207 
	`‰ì
(
§c_cou¡
);

208 i‡(!
d°_cou¡_p
)

209 
	`‰ì
(
d°_cou¡
);

210 *
§c_c›õd
 = 
sc
;

211 *
lôîÆ_added
 = 
œ
;

213 
	}
}

	@diffcore-order.c

4 
	~"ˇche.h
"

5 
	~"diff.h
"

6 
	~"diffc‹e.h
"

8 **
	g‹dî
;

9 
	g‹dî_˙t
;

11 
	$¥ï¨e_‹dî
(c⁄° *
‹dîfûe
)

13 
fd
, 
˙t
, 
∑ss
;

14 *
m≠
;

15 *
˝
, *
ídp
;

16 
°©
 
°
;

18 i‡(
‹dî
)

21 
fd
 = 
	`›í
(
‹dîfûe
, 
O_RDONLY
);

22 i‡(
fd
 < 0)

24 i‡(
	`f°©
(
fd
, &
°
)) {

25 
	`˛o£
(
fd
);

28 
m≠
 = 
	`mm≠
(
NULL
, 
°
.
°_size
, 
PROT_READ
|
PROT_WRITE
, 
MAP_PRIVATE
, 
fd
, 0);

29 
	`˛o£
(
fd
);

30 i‡(
m≠
 =
MAP_FAILED
)

32 
ídp
 = (*Ë
m≠
 + 
°
.
°_size
;

33 
∑ss
 = 0;Öass < 2;Öass++) {

34 
˙t
 = 0;

35 
˝
 = 
m≠
;

36 
˝
 < 
ídp
) {

37 *
ï
;

38 
ï
 = 
˝
;É∞< 
ídp
 && *ep != '\n';Ép++)

41 i‡(*
˝
 == '\n' || *cp == '#')

43 i‡(
∑ss
 == 0)

44 
˙t
++;

46 i‡(*
ï
 == '\n') {

47 *
ï
 = 0;

48 
‹dî
[
˙t
] = 
˝
;

51 
‹dî
[
˙t
] = 
	`xmÆloc
(
ï
-
˝
+1);

52 
	`mem˝y
(
‹dî
[
˙t
], 
˝
, 
ï
-cp);

53 
‹dî
[
˙t
][
ï
-
˝
] = 0;

55 
˙t
++;

57 i‡(
ï
 < 
ídp
)

58 
ï
++;

59 
˝
 = 
ï
;

61 i‡(
∑ss
 == 0) {

62 
‹dî_˙t
 = 
˙t
;

63 
‹dî
 = 
	`xmÆloc
((*‹dîË* 
˙t
);

66 
	}
}

68 
	s∑ú_‹dî
 {

69 
diff_fûïaú
 *
	m∑ú
;

70 
	m‹ig_‹dî
;

71 
	m‹dî
;

74 
	$m©ch_‹dî
(c⁄° *
∑th
)

76 
i
;

77 
p
[
PATH_MAX
];

79 
i
 = 0; i < 
‹dî_˙t
; i++) {

80 
	`°r˝y
(
p
, 
∑th
);

81 
p
[0]) {

82 *
˝
;

83 i‡(!
	`‚m©ch
(
‹dî
[
i
], 
p
, 0))

84  
i
;

85 
˝
 = 
	`°ºchr
(
p
, '/');

86 i‡(!
˝
)

88 *
˝
 = 0;

91  
‹dî_˙t
;

92 
	}
}

94 
	$com∑ª_∑ú_‹dî
(c⁄° *
a_
, c⁄° *
b_
)

96 
∑ú_‹dî
 c⁄° *
a
, *
b
;

97 
a
 = (
∑ú_‹dî
 c⁄° *)
a_
;

98 
b
 = (
∑ú_‹dî
 c⁄° *)
b_
;

99 i‡(
a
->
‹dî
 !
b
->order)

100  
a
->
‹dî
 - 
b
->order;

101  
a
->
‹ig_‹dî
 - 
b
->orig_order;

102 
	}
}

104 
	$diffc‹e_‹dî
(c⁄° *
‹dîfûe
)

106 
diff_queue_°ru˘
 *
q
 = &
diff_queued_diff
;

107 
∑ú_‹dî
 *
o
;

108 
i
;

110 i‡(!
q
->
ƒ
)

113 
o
 = 
	`xmÆloc
((*oË* 
q
->
ƒ
);

114 
	`¥ï¨e_‹dî
(
‹dîfûe
);

115 
i
 = 0; i < 
q
->
ƒ
; i++) {

116 
o
[
i
].
∑ú
 = 
q
->
queue
[i];

117 
o
[
i
].
‹ig_‹dî
 = i;

118 
o
[
i
].
‹dî
 = 
	`m©ch_‹dî
(o[i].
∑ú
->
two
->
∑th
);

120 
	`qs‹t
(
o
, 
q
->
ƒ
, (*o), 
com∑ª_∑ú_‹dî
);

121 
i
 = 0; i < 
q
->
ƒ
; i++)

122 
q
->
queue
[
i
] = 
o
[i].
∑ú
;

123 
	`‰ì
(
o
);

125 
	}
}

	@diffcore-pickaxe.c

4 
	~"ˇche.h
"

5 
	~"diff.h
"

6 
	~"diffc‹e.h
"

8 
	$c⁄èös
(
diff_fûe•ec
 *
⁄e
,

9 c⁄° *
√edÀ
, 
Àn
,

10 
ªgex_t
 *
ªgexp
)

12 
˙t
;

13 
off£t
, 
sz
;

14 c⁄° *
d©a
;

15 i‡(
	`diff_p›uœã_fûe•ec
(
⁄e
, 0))

17 i‡(!
Àn
)

20 
sz
 = 
⁄e
->
size
;

21 
d©a
 = 
⁄e
->data;

22 
˙t
 = 0;

24 i‡(
ªgexp
) {

25 
ªgm©ch_t
 
ªgm©ch
;

26 
Êags
 = 0;

28 *
d©a
 && !
	`ªgexec
(
ªgexp
, d©a, 1, &
ªgm©ch
, 
Êags
)) {

29 
Êags
 |
REG_NOTBOL
;

30 
d©a
 +
ªgm©ch
.
rm_so
;

31 i‡(*
d©a
) data++;

32 
˙t
++;

39 
off£t
 = 0; off£à+ 
Àn
 <
sz
; offset++) {

41 i‡(!
	`memcmp
(
√edÀ
, 
d©a
 + 
off£t
, 
Àn
)) {

42 
off£t
 +
Àn
 - 1;

43 
˙t
++;

47  
˙t
;

48 
	}
}

50 
	$diffc‹e_pickaxe
(c⁄° *
√edÀ
, 
›ts
)

52 
diff_queue_°ru˘
 *
q
 = &
diff_queued_diff
;

53 
Àn
 = 
	`°æí
(
√edÀ
);

54 
i
, 
has_ch™ges
;

55 
ªgex_t
 
ªgex
, *
ªgexp
 = 
NULL
;

56 
diff_queue_°ru˘
 
outq
;

57 
outq
.
queue
 = 
NULL
;

58 
outq
.
ƒ
 = outq.
Æloc
 = 0;

60 i‡(
›ts
 & 
DIFF_PICKAXE_REGEX
) {

61 
îr
;

62 
îr
 = 
	`ªgcomp
(&
ªgex
, 
√edÀ
, 
REG_EXTENDED
 | 
REG_NEWLINE
);

63 i‡(
îr
) {

65 
îrbuf
[1024];

66 
	`ªgîr‹
(
îr
, &
ªgex
, 
îrbuf
, 1024);

67 
	`ªg‰ì
(&
ªgex
);

68 
	`dõ
("övÆidÖickaxêªgex: %s", 
îrbuf
);

70 
ªgexp
 = &
ªgex
;

73 i‡(
›ts
 & 
DIFF_PICKAXE_ALL
) {

75 
i
 = 
has_ch™ges
 = 0; !has_ch™ge†&& i < 
q
->
ƒ
; i++) {

76 
diff_fûïaú
 *
p
 = 
q
->
queue
[
i
];

77 i‡(!
	`DIFF_FILE_VALID
(
p
->
⁄e
)) {

78 i‡(!
	`DIFF_FILE_VALID
(
p
->
two
))

81 i‡(
	`c⁄èös
(
p
->
two
, 
√edÀ
, 
Àn
, 
ªgexp
))

82 
has_ch™ges
++;

84 i‡(!
	`DIFF_FILE_VALID
(
p
->
two
)) {

85 i‡(
	`c⁄èös
(
p
->
⁄e
, 
√edÀ
, 
Àn
, 
ªgexp
))

86 
has_ch™ges
++;

88 i‡(!
	`diff_unmodifõd_∑ú
(
p
) &&

89 
	`c⁄èös
(
p
->
⁄e
, 
√edÀ
, 
Àn
, 
ªgexp
) !=

90 
	`c⁄èös
(
p
->
two
, 
√edÀ
, 
Àn
, 
ªgexp
))

91 
has_ch™ges
++;

93 i‡(
has_ch™ges
)

101 
i
 = 0; i < 
q
->
ƒ
; i++)

102 
	`diff_‰ì_fûïaú
(
q
->
queue
[
i
]);

106 
i
 = 0; i < 
q
->
ƒ
; i++) {

107 
diff_fûïaú
 *
p
 = 
q
->
queue
[
i
];

108 
has_ch™ges
 = 0;

109 i‡(!
	`DIFF_FILE_VALID
(
p
->
⁄e
)) {

110 i‡(!
	`DIFF_FILE_VALID
(
p
->
two
))

113 i‡(
	`c⁄èös
(
p
->
two
, 
√edÀ
, 
Àn
, 
ªgexp
))

114 
has_ch™ges
 = 1;

116 i‡(!
	`DIFF_FILE_VALID
(
p
->
two
)) {

117 i‡(
	`c⁄èös
(
p
->
⁄e
, 
√edÀ
, 
Àn
, 
ªgexp
))

118 
has_ch™ges
 = 1;

120 i‡(!
	`diff_unmodifõd_∑ú
(
p
) &&

121 
	`c⁄èös
(
p
->
⁄e
, 
√edÀ
, 
Àn
, 
ªgexp
) !=

122 
	`c⁄èös
(
p
->
two
, 
√edÀ
, 
Àn
, 
ªgexp
))

123 
has_ch™ges
 = 1;

125 i‡(
has_ch™ges
)

126 
	`diff_q
(&
outq
, 
p
);

128 
	`diff_‰ì_fûïaú
(
p
);

131 i‡(
›ts
 & 
DIFF_PICKAXE_REGEX
) {

132 
	`ªg‰ì
(&
ªgex
);

135 
	`‰ì
(
q
->
queue
);

136 *
q
 = 
outq
;

138 
	}
}

	@diffcore-rename.c

4 
	~"ˇche.h
"

5 
	~"diff.h
"

6 
	~"diffc‹e.h
"

10 
	sdiff_ª«me_d°
 {

11 
diff_fûe•ec
 *
	mtwo
;

12 
diff_fûïaú
 *
	m∑ú
;

13 } *
	gª«me_d°
;

14 
	gª«me_d°_ƒ
, 
	gª«me_d°_Æloc
;

16 
diff_ª«me_d°
 *
	$loˇã_ª«me_d°
(
diff_fûe•ec
 *
two
,

17 
ö£π_ok
)

19 
fú°
, 
œ°
;

21 
fú°
 = 0;

22 
œ°
 = 
ª«me_d°_ƒ
;

23 
œ°
 > 
fú°
) {

24 
√xt
 = (
œ°
 + 
fú°
) >> 1;

25 
diff_ª«me_d°
 *
d°
 = &(
ª«me_d°
[
√xt
]);

26 
cmp
 = 
	`°rcmp
(
two
->
∑th
, 
d°
->two->path);

27 i‡(!
cmp
)

28  
d°
;

29 i‡(
cmp
 < 0) {

30 
œ°
 = 
√xt
;

33 
fú°
 = 
√xt
+1;

36 i‡(!
ö£π_ok
)

37  
NULL
;

39 i‡(
ª«me_d°_Æloc
 <
ª«me_d°_ƒ
) {

40 
ª«me_d°_Æloc
 = 
	`Æloc_ƒ
(rename_dst_alloc);

41 
ª«me_d°
 = 
	`xªÆloc
(rename_dst,

42 
ª«me_d°_Æloc
 * (*
ª«me_d°
));

44 
ª«me_d°_ƒ
++;

45 i‡(
fú°
 < 
ª«me_d°_ƒ
)

46 
	`memmove
(
ª«me_d°
 + 
fú°
 + 1,Ñename_dst + first,

47 (
ª«me_d°_ƒ
 - 
fú°
 - 1Ë* (*
ª«me_d°
));

48 
ª«me_d°
[
fú°
].
two
 = 
	`Æloc_fûe•ec
—wo->
∑th
);

49 
	`fûl_fûe•ec
(
ª«me_d°
[
fú°
].
two
,Åwo->
sha1
,Åwo->
mode
);

50 
ª«me_d°
[
fú°
].
∑ú
 = 
NULL
;

51  &(
ª«me_d°
[
fú°
]);

52 
	}
}

55 
	sdiff_ª«me_§c
 {

56 
diff_fûe•ec
 *
	m⁄e
;

57 
	msc‹e
;

58 
	m§c_∑th_À·
 : 1;

59 } *
	gª«me_§c
;

60 
	gª«me_§c_ƒ
, 
	gª«me_§c_Æloc
;

62 
diff_ª«me_§c
 *
	$ªgi°î_ª«me_§c
(
diff_fûe•ec
 *
⁄e
,

63 
§c_∑th_À·
,

64 
sc‹e
)

66 
fú°
, 
œ°
;

68 
fú°
 = 0;

69 
œ°
 = 
ª«me_§c_ƒ
;

70 
œ°
 > 
fú°
) {

71 
√xt
 = (
œ°
 + 
fú°
) >> 1;

72 
diff_ª«me_§c
 *
§c
 = &(
ª«me_§c
[
√xt
]);

73 
cmp
 = 
	`°rcmp
(
⁄e
->
∑th
, 
§c
->one->path);

74 i‡(!
cmp
)

75  
§c
;

76 i‡(
cmp
 < 0) {

77 
œ°
 = 
√xt
;

80 
fú°
 = 
√xt
+1;

84 i‡(
ª«me_§c_Æloc
 <
ª«me_§c_ƒ
) {

85 
ª«me_§c_Æloc
 = 
	`Æloc_ƒ
(rename_src_alloc);

86 
ª«me_§c
 = 
	`xªÆloc
(rename_src,

87 
ª«me_§c_Æloc
 * (*
ª«me_§c
));

89 
ª«me_§c_ƒ
++;

90 i‡(
fú°
 < 
ª«me_§c_ƒ
)

91 
	`memmove
(
ª«me_§c
 + 
fú°
 + 1,Ñename_src + first,

92 (
ª«me_§c_ƒ
 - 
fú°
 - 1Ë* (*
ª«me_§c
));

93 
ª«me_§c
[
fú°
].
⁄e
 = one;

94 
ª«me_§c
[
fú°
].
sc‹e
 = score;

95 
ª«me_§c
[
fú°
].
§c_∑th_À·
 = src_path_left;

96  &(
ª«me_§c
[
fú°
]);

97 
	}
}

99 
	$is_exa˘_m©ch
(
diff_fûe•ec
 *
§c
,

100 
diff_fûe•ec
 *
d°
,

101 
c⁄ã¡s_too
)

103 i‡(
§c
->
sha1_vÆid
 && 
d°
->sha1_valid &&

104 !
	`hashcmp
(
§c
->
sha1
, 
d°
->sha1))

106 i‡(!
c⁄ã¡s_too
)

108 i‡(
	`diff_p›uœã_fûe•ec
(
§c
, 1Ë|| diff_p›uœã_fûe•ec(
d°
, 1))

110 i‡(
§c
->
size
 !
d°
->size)

112 i‡(
§c
->
sha1_vÆid
 && 
d°
->sha1_valid)

113  !
	`hashcmp
(
§c
->
sha1
, 
d°
->sha1);

114 i‡(
	`diff_p›uœã_fûe•ec
(
§c
, 0Ë|| diff_p›uœã_fûe•ec(
d°
, 0))

116 i‡(
§c
->
size
 =
d°
->size &&

117 !
	`memcmp
(
§c
->
d©a
, 
d°
->d©a, src->
size
))

120 
	}
}

122 
	sdiff_sc‹e
 {

123 
	m§c
;

124 
	md°
;

125 
	msc‹e
;

128 
	$e°im©e_simû¨ôy
(
diff_fûe•ec
 *
§c
,

129 
diff_fûe•ec
 *
d°
,

130 
möimum_sc‹e
)

145 
max_size
, 
dñè_size
, 
ba£_size
, 
§c_c›õd
, 
lôîÆ_added
;

146 
dñè_limô
;

147 
sc‹e
;

153 i‡(!
	`S_ISREG
(
§c
->
mode
Ë|| !S_ISREG(
d°
->mode))

156 
max_size
 = ((
§c
->
size
 > 
d°
->size) ? src->size : dst->size);

157 
ba£_size
 = ((
§c
->
size
 < 
d°
->size) ? src->size : dst->size);

158 
dñè_size
 = 
max_size
 - 
ba£_size
;

168 i‡(
ba£_size
 * (
MAX_SCORE
-
möimum_sc‹e
Ë< 
dñè_size
 * MAX_SCORE)

171 i‡(
	`diff_p›uœã_fûe•ec
(
§c
, 0Ë|| diff_p›uœã_fûe•ec(
d°
, 0))

175 
dñè_limô
 = 
ba£_size
 * (
MAX_SCORE
-
möimum_sc‹e
) / MAX_SCORE;

176 i‡(
	`diffc‹e_cou¡_ch™ges
(
§c
->
d©a
, src->
size
,

177 
d°
->
d©a
, d°->
size
,

178 &
§c
->
˙t_d©a
, &
d°
->cnt_data,

179 
dñè_limô
,

180 &
§c_c›õd
, &
lôîÆ_added
))

186 i‡(!
d°
->
size
)

187 
sc‹e
 = 0;

189 
sc‹e
 = 
§c_c›õd
 * 
MAX_SCORE
 / 
max_size
;

190  
sc‹e
;

191 
	}
}

193 
	$ªc‹d_ª«me_∑ú
(
d°_ödex
, 
§c_ödex
, 
sc‹e
)

195 
diff_fûe•ec
 *
⁄e
, *
two
, *
§c
, *
d°
;

196 
diff_fûïaú
 *
dp
;

198 i‡(
ª«me_d°
[
d°_ödex
].
∑ú
)

199 
	`dõ
("internalÉrror: dstálready matched.");

201 
§c
 = 
ª«me_§c
[
§c_ödex
].
⁄e
;

202 
⁄e
 = 
	`Æloc_fûe•ec
(
§c
->
∑th
);

203 
	`fûl_fûe•ec
(
⁄e
, 
§c
->
sha1
, src->
mode
);

205 
d°
 = 
ª«me_d°
[
d°_ödex
].
two
;

206 
two
 = 
	`Æloc_fûe•ec
(
d°
->
∑th
);

207 
	`fûl_fûe•ec
(
two
, 
d°
->
sha1
, d°->
mode
);

209 
dp
 = 
	`diff_queue
(
NULL
, 
⁄e
, 
two
);

210 
dp
->
ª«med_∑ú
 = 1;

211 i‡(!
	`°rcmp
(
§c
->
∑th
, 
d°
->path))

212 
dp
->
sc‹e
 = 
ª«me_§c
[
§c_ödex
].score;

214 
dp
->
sc‹e
 = score;

215 
dp
->
sour˚_°ays
 = 
ª«me_§c
[
§c_ödex
].
§c_∑th_À·
;

216 
ª«me_d°
[
d°_ödex
].
∑ú
 = 
dp
;

217 
	}
}

223 
	$sc‹e_com∑ª
(c⁄° *
a_
, c⁄° *
b_
)

225 c⁄° 
diff_sc‹e
 *
a
 = 
a_
, *
b
 = 
b_
;

226  
b
->
sc‹e
 - 
a
->score;

227 
	}
}

229 
	$compuã_°ays
(
diff_queue_°ru˘
 *
q
,

230 
diff_fûe•ec
 *
⁄e
)

232 
i
;

233 
i
 = 0; i < 
q
->
ƒ
; i++) {

234 
diff_fûïaú
 *
p
 = 
q
->
queue
[
i
];

235 i‡(
	`°rcmp
(
⁄e
->
∑th
, 
p
->
two
->path))

237 i‡(
	`DIFF_PAIR_RENAME
(
p
)) {

242 
	}
}

244 
	$diffc‹e_ª«me
(
diff_›ti⁄s
 *
›ti⁄s
)

246 
dëe˘_ª«me
 = 
›ti⁄s
->detect_rename;

247 
möimum_sc‹e
 = 
›ti⁄s
->
ª«me_sc‹e
;

248 
ª«me_limô
 = 
›ti⁄s
->rename_limit;

249 
diff_queue_°ru˘
 *
q
 = &
diff_queued_diff
;

250 
diff_queue_°ru˘
 
outq
;

251 
diff_sc‹e
 *
mx
;

252 
i
, 
j
, 
ª«me_cou¡
, 
c⁄ã¡s_too
;

253 
num_¸óã
, 
num_§c
, 
d°_˙t
;

255 i‡(!
möimum_sc‹e
)

256 
möimum_sc‹e
 = 
DEFAULT_RENAME_SCORE
;

257 
ª«me_cou¡
 = 0;

259 
i
 = 0; i < 
q
->
ƒ
; i++) {

260 
diff_fûïaú
 *
p
 = 
q
->
queue
[
i
];

261 i‡(!
	`DIFF_FILE_VALID
(
p
->
⁄e
)) {

262 i‡(!
	`DIFF_FILE_VALID
(
p
->
two
))

264 i‡(
›ti⁄s
->
sögÀ_fﬁlow
 &&

265 
	`°rcmp
(
›ti⁄s
->
sögÀ_fﬁlow
, 
p
->
two
->
∑th
))

268 
	`loˇã_ª«me_d°
(
p
->
two
, 1);

270 i‡(!
	`DIFF_FILE_VALID
(
p
->
two
)) {

275 
°ays
 = (
p
->
brokí_∑ú
 && !p->
sc‹e
);

276 
	`ªgi°î_ª«me_§c
(
p
->
⁄e
, 
°ays
,Ö->
sc‹e
);

278 i‡(
dëe˘_ª«me
 =
DIFF_DETECT_COPY
)

279 
	`ªgi°î_ª«me_§c
(
p
->
⁄e
, 1,Ö->
sc‹e
);

281 i‡(
ª«me_d°_ƒ
 =0 || 
ª«me_§c_ƒ
 == 0 ||

282 (0 < 
ª«me_limô
 &&Ñíame_limô < 
ª«me_d°_ƒ
))

283 
˛ónup
;

291 
c⁄ã¡s_too
 = 0; contents_too < 2; contents_too++) {

292 
i
 = 0; i < 
ª«me_d°_ƒ
; i++) {

293 
diff_fûe•ec
 *
two
 = 
ª«me_d°
[
i
].two;

294 i‡(
ª«me_d°
[
i
].
∑ú
)

296 
j
 = 0; j < 
ª«me_§c_ƒ
; j++) {

297 
diff_fûe•ec
 *
⁄e
 = 
ª«me_§c
[
j
].one;

298 i‡(!
	`is_exa˘_m©ch
(
⁄e
, 
two
, 
c⁄ã¡s_too
))

300 
	`ªc‹d_ª«me_∑ú
(
i
, 
j
, 
MAX_SCORE
);

301 
ª«me_cou¡
++;

310 i‡(
ª«me_cou¡
 =
ª«me_d°_ƒ
)

311 
˛ónup
;

313 i‡(
möimum_sc‹e
 =
MAX_SCORE
)

314 
˛ónup
;

316 
num_¸óã
 = (
ª«me_d°_ƒ
 - 
ª«me_cou¡
);

317 
num_§c
 = 
ª«me_§c_ƒ
;

318 
mx
 = 
	`xmÆloc
((*mxË* 
num_¸óã
 * 
num_§c
);

319 
d°_˙t
 = 
i
 = 0; i < 
ª«me_d°_ƒ
; i++) {

320 
ba£
 = 
d°_˙t
 * 
num_§c
;

321 
diff_fûe•ec
 *
two
 = 
ª«me_d°
[
i
].two;

322 i‡(
ª«me_d°
[
i
].
∑ú
)

324 
j
 = 0; j < 
ª«me_§c_ƒ
; j++) {

325 
diff_fûe•ec
 *
⁄e
 = 
ª«me_§c
[
j
].one;

326 
diff_sc‹e
 *
m
 = &
mx
[
ba£
+
j
];

327 
m
->
§c
 = 
j
;

328 
m
->
d°
 = 
i
;

329 
m
->
sc‹e
 = 
	`e°im©e_simû¨ôy
(
⁄e
, 
two
,

330 
möimum_sc‹e
);

333 
	`diff_‰ì_fûe•ec_d©a
(
two
);

334 
d°_˙t
++;

337 
	`qs‹t
(
mx
, 
num_¸óã
 * 
num_§c
, (*mx), 
sc‹e_com∑ª
);

338 
i
 = 0; i < 
num_¸óã
 * 
num_§c
; i++) {

339 
diff_ª«me_d°
 *
d°
 = &
ª«me_d°
[
mx
[
i
].dst];

340 i‡(
d°
->
∑ú
)

342 i‡(
mx
[
i
].
sc‹e
 < 
möimum_sc‹e
)

344 
	`ªc‹d_ª«me_∑ú
(
mx
[
i
].
d°
, mx[i].
§c
, mx[i].
sc‹e
);

345 
ª«me_cou¡
++;

347 
	`‰ì
(
mx
);

349 
˛ónup
:

353 
outq
.
queue
 = 
NULL
;

354 
outq
.
ƒ
 = outq.
Æloc
 = 0;

355 
i
 = 0; i < 
q
->
ƒ
; i++) {

356 
diff_fûïaú
 *
p
 = 
q
->
queue
[
i
];

357 
diff_fûïaú
 *
∑ú_to_‰ì
 = 
NULL
;

359 i‡(!
	`DIFF_FILE_VALID
(
p
->
⁄e
Ë&& DIFF_FILE_VALID’->
two
)) {

366 
diff_ª«me_d°
 *
d°
 =

367 
	`loˇã_ª«me_d°
(
p
->
two
, 0);

368 i‡(
d°
 && d°->
∑ú
) {

369 
	`diff_q
(&
outq
, 
d°
->
∑ú
);

370 
∑ú_to_‰ì
 = 
p
;

376 
	`diff_q
(&
outq
, 
p
);

378 i‡(
	`DIFF_FILE_VALID
(
p
->
⁄e
Ë&& !DIFF_FILE_VALID’->
two
)) {

395 i‡(
	`DIFF_PAIR_BROKEN
(
p
)) {

397 
diff_ª«me_d°
 *
d°
 =

398 
	`loˇã_ª«me_d°
(
p
->
⁄e
, 0);

399 i‡(
d°
 && d°->
∑ú
)

401 
∑ú_to_‰ì
 = 
p
;

404 
j
 = 0; j < 
ª«me_d°_ƒ
; j++) {

405 i‡(!
ª«me_d°
[
j
].
∑ú
)

407 i‡(
	`°rcmp
(
ª«me_d°
[
j
].
∑ú
->

408 
⁄e
->
∑th
,

409 
p
->
⁄e
->
∑th
))

413 i‡(
j
 < 
ª«me_d°_ƒ
)

415 
∑ú_to_‰ì
 = 
p
;

418 i‡(
∑ú_to_‰ì
)

421 
	`diff_q
(&
outq
, 
p
);

423 i‡(!
	`diff_unmodifõd_∑ú
(
p
))

425 
	`diff_q
(&
outq
, 
p
);

428 
∑ú_to_‰ì
 = 
p
;

430 i‡(
∑ú_to_‰ì
)

431 
	`diff_‰ì_fûïaú
(
∑ú_to_‰ì
);

433 
	`diff_debug_queue
("d⁄êc›yög origöÆ", &
outq
);

435 
	`‰ì
(
q
->
queue
);

436 *
q
 = 
outq
;

437 
	`diff_debug_queue
("d⁄êcﬁœpsög", 
q
);

445 
i
 = 0; i < 
q
->
ƒ
; i++) {

446 
diff_fûïaú
 *
p
 = 
q
->
queue
[
i
];

447 i‡(
	`DIFF_PAIR_RENAME
(
p
Ë&&Ö->
sour˚_°ays
) {

452 
p
->
sour˚_°ays
 = 
	`compuã_°ays
(
q
,Ö->
⁄e
);

456 
i
 = 0; i < 
ª«me_d°_ƒ
; i++) {

457 
	`diff_‰ì_fûe•ec_d©a
(
ª«me_d°
[
i
].
two
);

458 
	`‰ì
(
ª«me_d°
[
i
].
two
);

461 
	`‰ì
(
ª«me_d°
);

462 
ª«me_d°
 = 
NULL
;

463 
ª«me_d°_ƒ
 = 
ª«me_d°_Æloc
 = 0;

464 
	`‰ì
(
ª«me_§c
);

465 
ª«me_§c
 = 
NULL
;

466 
ª«me_§c_ƒ
 = 
ª«me_§c_Æloc
 = 0;

468 
	}
}

	@diffcore.h

4 #i‚de‡
_DIFFCORE_H_


5 
	#_DIFFCORE_H_


	)

18 
	#MAX_SCORE
 60000.0

	)

19 
	#DEFAULT_RENAME_SCORE
 30000

	)

20 
	#DEFAULT_BREAK_SCORE
 30000

	)

21 
	#DEFAULT_MERGE_SCORE
 36000

	)

23 
	#MINIMUM_BREAK_SIZE
 400

	)

25 
	sdiff_fûe•ec
 {

26 
	msha1
[20];

27 *
	m∑th
;

28 *
	md©a
;

29 *
	m˙t_d©a
;

30 
	msize
;

31 
	mx‰m_Êags
;

32 
	mmode
;

33 
	msha1_vÆid
 : 1;

37 
	#DIFF_FILE_VALID
(
•ec
Ë(((•ec)->
mode
Ë!0)

	)

38 
	mshould_‰ì
 : 1;

39 
	mshould_munm≠
 : 1;

42 
diff_fûe•ec
 *
Æloc_fûe•ec
(const *);

43 
fûl_fûe•ec
(
diff_fûe•ec
 *, const *,

46 
diff_p›uœã_fûe•ec
(
diff_fûe•ec
 *, );

47 
diff_‰ì_fûe•ec_d©a
(
diff_fûe•ec
 *);

49 
	sdiff_fûïaú
 {

50 
diff_fûe•ec
 *
	m⁄e
;

51 
diff_fûe•ec
 *
	mtwo
;

52 
	msc‹e
;

53 
	m°©us
;

54 
	msour˚_°ays
 : 1;

55 
	mbrokí_∑ú
 : 1;

56 
	mª«med_∑ú
 : 1;

57 
	mis_unmîged
 : 1;

59 
	#DIFF_PAIR_UNMERGED
(
p
Ë(’)->
is_unmîged
)

	)

61 
	#DIFF_PAIR_RENAME
(
p
Ë(’)->
ª«med_∑ú
)

	)

63 
	#DIFF_PAIR_BROKEN
(
p
) \

64 –(!
	`DIFF_FILE_VALID
((
p
)->
⁄e
Ë!!DIFF_FILE_VALID(’)->
two
)) && \

65 ((
p
)->
brokí_∑ú
 !0Ë)

	)

67 
	#DIFF_PAIR_TYPE_CHANGED
(
p
) \

68 ((
S_IFMT
 & (
p
)->
⁄e
->
mode
Ë!(S_IFMT & (p)->
two
->mode))

	)

70 
	#DIFF_PAIR_MODE_CHANGED
(
p
Ë(’)->
⁄e
->
mode
 !’)->
two
->mode)

	)

72 
diff_‰ì_fûïaú
(
diff_fûïaú
 *);

74 
diff_unmodifõd_∑ú
(
diff_fûïaú
 *);

76 
	sdiff_queue_°ru˘
 {

77 
diff_fûïaú
 **
	mqueue
;

78 
	mÆloc
;

79 
	mƒ
;

82 
diff_queue_°ru˘
 
diff_queued_diff
;

83 
diff_fûïaú
 *
diff_queue
(
diff_queue_°ru˘
 *,

84 
diff_fûe•ec
 *,

85 
diff_fûe•ec
 *);

86 
diff_q
(
diff_queue_°ru˘
 *, 
diff_fûïaú
 *);

88 
diffc‹e_∑th•ec
(c⁄° **
∑th•ec
);

89 
diffc‹e_bªak
();

90 
diffc‹e_ª«me
(
diff_›ti⁄s
 *);

91 
diffc‹e_mîge_brokí
();

92 
diffc‹e_pickaxe
(c⁄° *
√edÀ
, 
›ts
);

93 
diffc‹e_‹dî
(c⁄° *
‹dîfûe
);

95 
	#DIFF_DEBUG
 0

	)

96 #i‡
DIFF_DEBUG


97 
diff_debug_fûe•ec
(
diff_fûe•ec
 *, , const *);

98 
diff_debug_fûïaú
(c⁄° 
diff_fûïaú
 *, );

99 
diff_debug_queue
(c⁄° *, 
diff_queue_°ru˘
 *);

101 
	#diff_debug_fûe•ec
(
a
,
b
,
c
Ëdÿ{} 0)

	)

102 
	#diff_debug_fûïaú
(
a
,
b
Ëdÿ{} 0)

	)

103 
	#diff_debug_queue
(
a
,
b
Ëdÿ{} 0)

	)

106 
diffc‹e_cou¡_ch™ges
(*
§c
, 
§c_size
,

107 *
d°
, 
d°_size
,

108 **
§c_cou¡_p
,

109 **
d°_cou¡_p
,

110 
dñè_limô
,

111 *
§c_c›õd
,

112 *
lôîÆ_added
);

	@dir.c

8 
	~"ˇche.h
"

9 
	~"dú.h
"

11 
	$comm⁄_¥efix
(c⁄° **
∑th•ec
)

13 c⁄° *
∑th
, *
¶ash
, *
√xt
;

14 
¥efix
;

16 i‡(!
∑th•ec
)

19 
∑th
 = *
∑th•ec
;

20 
¶ash
 = 
	`°ºchr
(
∑th
, '/');

21 i‡(!
¶ash
)

24 
¥efix
 = 
¶ash
 - 
∑th
 + 1;

25 (
√xt
 = *++
∑th•ec
Ë!
NULL
) {

26 
Àn
 = 
	`°æí
(
√xt
);

27 i‡(
Àn
 >
¥efix
 && !
	`memcmp
(
∑th
, 
√xt
,Üen))

30 i‡(!
Àn
)

32 i‡(
√xt
[--
Àn
] != '/')

34 i‡(
	`memcmp
(
∑th
, 
√xt
, 
Àn
+1))

36 
¥efix
 = 
Àn
 + 1;

40  
¥efix
;

41 
	}
}

55 
	$m©ch_⁄e
(c⁄° *
m©ch
, c⁄° *
«me
, 
«mñí
)

57 
m©chÀn
;

60 
m©chÀn
 = 
	`°æí
(
m©ch
);

61 i‡(!
m©chÀn
)

62  
MATCHED_RECURSIVELY
;

68 i‡(
	`°∫cmp
(
m©ch
, 
«me
, 
m©chÀn
))

69  !
	`‚m©ch
(
m©ch
, 
«me
, 0Ë? 
MATCHED_FNMATCH
 : 0;

71 i‡(!
«me
[
m©chÀn
])

72  
MATCHED_EXACTLY
;

73 i‡(
m©ch
[
m©chÀn
-1] ='/' || 
«me
[matchlen] == '/')

74  
MATCHED_RECURSIVELY
;

76 
	}
}

86 
	$m©ch_∑th•ec
(c⁄° **
∑th•ec
, c⁄° *
«me
, 
«mñí
, 
¥efix
, *
£í
)

88 
ªtvÆ
;

89 c⁄° *
m©ch
;

91 
«me
 +
¥efix
;

92 
«mñí
 -
¥efix
;

94 
ªtvÆ
 = 0; (
m©ch
 = *
∑th•ec
++Ë!
NULL
; 
£í
++) {

95 
how
;

96 i‡(
ªtvÆ
 && *
£í
 =
MATCHED_EXACTLY
)

98 
m©ch
 +
¥efix
;

99 
how
 = 
	`m©ch_⁄e
(
m©ch
, 
«me
, 
«mñí
);

100 i‡(
how
) {

101 i‡(
ªtvÆ
 < 
how
)

102 
ªtvÆ
 = 
how
;

103 i‡(*
£í
 < 
how
)

104 *
£í
 = 
how
;

107  
ªtvÆ
;

108 
	}
}

110 
	$add_ex˛ude
(c⁄° *
°rög
, c⁄° *
ba£
,

111 
ba£Àn
, 
ex˛ude_li°
 *
which
)

113 
ex˛ude
 *
x
 = 
	`xmÆloc
( (*x));

115 
x
->
∑âîn
 = 
°rög
;

116 
x
->
ba£
 = base;

117 
x
->
ba£Àn
 = baselen;

118 i‡(
which
->
ƒ
 =which->
Æloc
) {

119 
which
->
Æloc
 = 
	`Æloc_ƒ
(which->alloc);

120 
which
->
ex˛udes
 = 
	`xªÆloc
(which->excludes,

121 
which
->
Æloc
 * (
x
));

123 
which
->
ex˛udes
[which->
ƒ
++] = 
x
;

124 
	}
}

126 
	$add_ex˛udes_‰om_fûe_1
(c⁄° *
‚ame
,

127 c⁄° *
ba£
,

128 
ba£Àn
,

129 
ex˛ude_li°
 *
which
)

131 
°©
 
°
;

132 
fd
, 
i
;

133 
size
;

134 *
buf
, *
íåy
;

136 
fd
 = 
	`›í
(
‚ame
, 
O_RDONLY
);

137 i‡(
fd
 < 0 || 
	`f°©
(fd, &
°
) < 0)

138 
îr
;

139 
size
 = 
°
.
°_size
;

140 i‡(
size
 == 0) {

141 
	`˛o£
(
fd
);

144 
buf
 = 
	`xmÆloc
(
size
+1);

145 i‡(
	`ªad_ö_fuŒ
(
fd
, 
buf
, 
size
) != size)

146 
îr
;

147 
	`˛o£
(
fd
);

149 
buf
[
size
++] = '\n';

150 
íåy
 = 
buf
;

151 
i
 = 0; i < 
size
; i++) {

152 i‡(
buf
[
i
] == '\n') {

153 i‡(
íåy
 !
buf
 + 
i
 &&Éntry[0] != '#') {

154 
buf
[
i
 - (i && buf[i-1] == '\r')] = 0;

155 
	`add_ex˛ude
(
íåy
, 
ba£
, 
ba£Àn
, 
which
);

157 
íåy
 = 
buf
 + 
i
 + 1;

162 
îr
:

163 i‡(0 <
fd
)

164 
	`˛o£
(
fd
);

166 
	}
}

168 
	$add_ex˛udes_‰om_fûe
(
dú_°ru˘
 *
dú
, c⁄° *
‚ame
)

170 i‡(
	`add_ex˛udes_‰om_fûe_1
(
‚ame
, "", 0,

171 &
dú
->
ex˛ude_li°
[
EXC_FILE
]) < 0)

172 
	`dõ
("ˇ¬Ÿ u£ %†a†™Éx˛udêfûe", 
‚ame
);

173 
	}
}

175 
	$push_ex˛ude_≥r_dúe˘‹y
(
dú_°ru˘
 *
dú
, c⁄° *
ba£
, 
ba£Àn
)

177 
ex˛ude_fûe
[
PATH_MAX
];

178 
ex˛ude_li°
 *
ñ
 = &
dú
->ex˛ude_li°[
EXC_DIRS
];

179 
cuºít_ƒ
 = 
ñ
->
ƒ
;

181 i‡(
dú
->
ex˛ude_≥r_dú
) {

182 
	`mem˝y
(
ex˛ude_fûe
, 
ba£
, 
ba£Àn
);

183 
	`°r˝y
(
ex˛ude_fûe
 + 
ba£Àn
, 
dú
->
ex˛ude_≥r_dú
);

184 
	`add_ex˛udes_‰om_fûe_1
(
ex˛ude_fûe
, 
ba£
, 
ba£Àn
, 
ñ
);

186  
cuºít_ƒ
;

187 
	}
}

189 
	$p›_ex˛ude_≥r_dúe˘‹y
(
dú_°ru˘
 *
dú
, 
°k
)

191 
ex˛ude_li°
 *
ñ
 = &
dú
->ex˛ude_li°[
EXC_DIRS
];

193 
°k
 < 
ñ
->
ƒ
)

194 
	`‰ì
(
ñ
->
ex˛udes
[--ñ->
ƒ
]);

195 
	}
}

200 
	$ex˛uded_1
(c⁄° *
∑th«me
,

201 
∑thÀn
,

202 
ex˛ude_li°
 *
ñ
)

204 
i
;

206 i‡(
ñ
->
ƒ
) {

207 
i
 = 
ñ
->
ƒ
 - 1; 0 <= i; i--) {

208 
ex˛ude
 *
x
 = 
ñ
->
ex˛udes
[
i
];

209 c⁄° *
ex˛ude
 = 
x
->
∑âîn
;

210 
to_ex˛ude
 = 1;

212 i‡(*
ex˛ude
 == '!') {

213 
to_ex˛ude
 = 0;

214 
ex˛ude
++;

217 i‡(!
	`°rchr
(
ex˛ude
, '/')) {

219 c⁄° *
ba£«me
 = 
	`°ºchr
(
∑th«me
, '/');

220 
ba£«me
 = (ba£«meË? ba£«me+1 : 
∑th«me
;

221 i‡(
	`‚m©ch
(
ex˛ude
, 
ba£«me
, 0) == 0)

222  
to_ex˛ude
;

229 
ba£Àn
 = 
x
->baselen;

230 i‡(*
ex˛ude
 == '/')

231 
ex˛ude
++;

233 i‡(
∑thÀn
 < 
ba£Àn
 ||

234 (
ba£Àn
 && 
∑th«me
[baselen-1] != '/') ||

235 
	`°∫cmp
(
∑th«me
, 
x
->
ba£
, 
ba£Àn
))

238 i‡(
	`‚m©ch
(
ex˛ude
, 
∑th«me
+
ba£Àn
,

239 
FNM_PATHNAME
) == 0)

240  
to_ex˛ude
;

245 
	}
}

247 
	$ex˛uded
(
dú_°ru˘
 *
dú
, c⁄° *
∑th«me
)

249 
∑thÀn
 = 
	`°æí
(
∑th«me
);

250 
°
;

252 
°
 = 
EXC_CMDL
; sà<
EXC_FILE
; st++) {

253 
	`ex˛uded_1
(
∑th«me
, 
∑thÀn
, &
dú
->
ex˛ude_li°
[
°
])) {

261 
	}
}

263 
dú_íåy
 *
	$dú_add_«me
(
dú_°ru˘
 *
dú
, c⁄° *
∑th«me
, 
Àn
)

265 
dú_íåy
 *
ít
;

267 i‡(
	`ˇche_«me_pos
(
∑th«me
, 
Àn
) >= 0)

268  
NULL
;

270 i‡(
dú
->
ƒ
 =dú->
Æloc
) {

271 
Æloc
 = 
	`Æloc_ƒ
(
dú
->alloc);

272 
dú
->
Æloc
 =álloc;

273 
dú
->
íåõs
 = 
	`xªÆloc
(dú->íåõs, 
Æloc
*(
ít
));

275 
ít
 = 
	`xmÆloc
((*ítË+ 
Àn
 + 1);

276 
ít
->
ign‹ed
 =É¡->
ign‹ed_dú
 = 0;

277 
ít
->
Àn
 =Üen;

278 
	`mem˝y
(
ít
->
«me
, 
∑th«me
, 
Àn
);

279 
ít
->
«me
[
Àn
] = 0;

280 
dú
->
íåõs
[dú->
ƒ
++] = 
ít
;

281  
ít
;

282 
	}
}

284 
	$dú_exi°s
(c⁄° *
dú«me
, 
Àn
)

286 
pos
 = 
	`ˇche_«me_pos
(
dú«me
, 
Àn
);

287 i‡(
pos
 >= 0)

289 
pos
 = -pos-1;

290 i‡(
pos
 >
a˘ive_ƒ
)

292  !
	`°∫cmp
(
a˘ive_ˇche
[
pos
]->
«me
, 
dú«me
, 
Àn
);

293 
	}
}

304 
	$ªad_dúe˘‹y_ªcursive
(
dú_°ru˘
 *
dú
, c⁄° *
∑th
, c⁄° *
ba£
, 
ba£Àn
, 
check_⁄ly
)

306 
DIR
 *
fdú
 = 
	`›ídú
(
∑th
);

307 
c⁄ã¡s
 = 0;

309 i‡(
fdú
) {

310 
ex˛ude_°k
;

311 
dúít
 *
de
;

312 
fuŒ«me
[
PATH_MAX
 + 1];

313 
	`mem˝y
(
fuŒ«me
, 
ba£
, 
ba£Àn
);

315 
ex˛ude_°k
 = 
	`push_ex˛ude_≥r_dúe˘‹y
(
dú
, 
ba£
, 
ba£Àn
);

317 (
de
 = 
	`ªaddú
(
fdú
)Ë!
NULL
) {

318 
Àn
;

320 i‡((
de
->
d_«me
[0] == '.') &&

321 (
de
->
d_«me
[1] == 0 ||

322 !
	`°rcmp
(
de
->
d_«me
 + 1, ".") ||

323 !
	`°rcmp
(
de
->
d_«me
 + 1, "git")))

325 
Àn
 = 
	`°æí
(
de
->
d_«me
);

326 
	`mem˝y
(
fuŒ«me
 + 
ba£Àn
, 
de
->
d_«me
, 
Àn
+1);

327 i‡(
	`ex˛uded
(
dú
, 
fuŒ«me
Ë!dú->
show_ign‹ed
) {

328 i‡(!
dú
->
show_ign‹ed
 || 
	`DTYPE
(
de
Ë!
DT_DIR
) {

333 
	`DTYPE
(
de
)) {

334 
°©
 
°
;

337 
DT_UNKNOWN
:

338 i‡(
	`l°©
(
fuŒ«me
, &
°
))

340 i‡(
	`S_ISREG
(
°
.
°_mode
Ë|| 
	`S_ISLNK
(st.st_mode))

342 i‡(!
	`S_ISDIR
(
°
.
°_mode
))

345 
DT_DIR
:

346 
	`mem˝y
(
fuŒ«me
 + 
ba£Àn
 + 
Àn
, "/", 2);

347 
Àn
++;

348 i‡(
dú
->
show_Ÿhî_dúe˘‹õs
 &&

349 !
	`dú_exi°s
(
fuŒ«me
, 
ba£Àn
 + 
Àn
)) {

350 i‡(
dú
->
hide_em±y_dúe˘‹õs
 &&

351 !
	`ªad_dúe˘‹y_ªcursive
(
dú
,

352 
fuŒ«me
, fullname,

353 
ba£Àn
 + 
Àn
, 1))

358 
c⁄ã¡s
 +
	`ªad_dúe˘‹y_ªcursive
(
dú
,

359 
fuŒ«me
, fuŒ«me, 
ba£Àn
 + 
Àn
, 0);

361 
DT_REG
:

362 
DT_LNK
:

365 
c⁄ã¡s
++;

366 i‡(
check_⁄ly
)

367 
exô_óæy
;

369 
	`dú_add_«me
(
dú
, 
fuŒ«me
, 
ba£Àn
 + 
Àn
);

371 
exô_óæy
:

372 
	`˛o£dú
(
fdú
);

374 
	`p›_ex˛ude_≥r_dúe˘‹y
(
dú
, 
ex˛ude_°k
);

377  
c⁄ã¡s
;

378 
	}
}

380 
	$cmp_«me
(c⁄° *
p1
, c⁄° *
p2
)

382 c⁄° 
dú_íåy
 *
e1
 = *(c⁄° dú_íåy **)
p1
;

383 c⁄° 
dú_íåy
 *
e2
 = *(c⁄° dú_íåy **)
p2
;

385  
	`ˇche_«me_com∑ª
(
e1
->
«me
,É1->
Àn
,

386 
e2
->
«me
,É2->
Àn
);

387 
	}
}

389 
	$ªad_dúe˘‹y
(
dú_°ru˘
 *
dú
, c⁄° *
∑th
, c⁄° *
ba£
, 
ba£Àn
)

395 i‡(
ba£Àn
) {

396 i‡(
dú
->
ex˛ude_≥r_dú
) {

397 *
p
, *
µ
 = 
	`xmÆloc
(
ba£Àn
+1);

398 
	`mem˝y
(
µ
, 
ba£
, 
ba£Àn
+1);

399 
p
 = 
µ
;

401 
ßve
 = *
p
;

402 *
p
 = 0;

403 
	`push_ex˛ude_≥r_dúe˘‹y
(
dú
, 
µ
, 
p
-pp);

404 *
p
++ = 
ßve
;

405 i‡(!
ßve
)

407 
p
 = 
	`°rchr
(p, '/');

408 i‡(
p
)

409 
p
++;

411 
p
 = 
µ
 + 
ba£Àn
;

413 
	`‰ì
(
µ
);

417 
	`ªad_dúe˘‹y_ªcursive
(
dú
, 
∑th
, 
ba£
, 
ba£Àn
, 0);

418 
	`qs‹t
(
dú
->
íåõs
, dú->
ƒ
, (
dú_íåy
 *), 
cmp_«me
);

419  
dú
->
ƒ
;

420 
	}
}

423 
	$fûe_exi°s
(c⁄° *
f
)

425 
°©
 
sb
;

426  
	`°©
(
f
, &
sb
) == 0;

427 
	}
}

	@dir.h

1 #i‚de‡
DIR_H


2 
	#DIR_H


	)

10 
	#EXC_CMDL
 0

	)

11 
	#EXC_DIRS
 1

	)

12 
	#EXC_FILE
 2

	)

15 
	sdú_íåy
 {

16 
	mign‹ed
 : 1;

17 
	mign‹ed_dú
 : 1;

18 
	mÀn
 : 30;

19 
	m«me
[
FLEX_ARRAY
];

22 
	sex˛ude_li°
 {

23 
	mƒ
;

24 
	mÆloc
;

25 
	sex˛ude
 {

26 c⁄° *
	m∑âîn
;

27 c⁄° *
	mba£
;

28 
	mba£Àn
;

29 } **
	mex˛udes
;

32 
	sdú_°ru˘
 {

33 
	mƒ
, 
	mÆloc
;

34 
	mshow_ign‹ed
:1,

35 
	mshow_Ÿhî_dúe˘‹õs
:1,

36 
	mhide_em±y_dúe˘‹õs
:1;

37 
dú_íåy
 **
	míåõs
;

40 c⁄° *
	mex˛ude_≥r_dú
;

41 
ex˛ude_li°
 
	mex˛ude_li°
[3];

44 
comm⁄_¥efix
(c⁄° **
∑th•ec
);

46 
	#MATCHED_RECURSIVELY
 1

	)

47 
	#MATCHED_FNMATCH
 2

	)

48 
	#MATCHED_EXACTLY
 3

	)

49 
m©ch_∑th•ec
(c⁄° **
∑th•ec
, c⁄° *
«me
, 
«mñí
, 
¥efix
, *
£í
);

51 
ªad_dúe˘‹y
(
dú_°ru˘
 *, c⁄° *
∑th
, c⁄° *
ba£
, 
ba£Àn
);

52 
push_ex˛ude_≥r_dúe˘‹y
(
dú_°ru˘
 *, const *, );

53 
p›_ex˛ude_≥r_dúe˘‹y
(
dú_°ru˘
 *, );

55 
ex˛uded
(
dú_°ru˘
 *, const *);

56 
add_ex˛udes_‰om_fûe
(
dú_°ru˘
 *, c⁄° *
‚ame
);

57 
add_ex˛ude
(c⁄° *
°rög
, c⁄° *
ba£
,

58 
ba£Àn
, 
ex˛ude_li°
 *
which
);

59 
fûe_exi°s
(const *);

60 
dú_íåy
 *
dú_add_«me
(
dú_°ru˘
 *
dú
, c⁄° *
∑th«me
, 
Àn
);

	@dump-cache-tree.c

1 
	~"ˇche.h
"

2 
	~"åì.h
"

3 
	~"ˇche-åì.h
"

6 
	$dump_⁄e
(
ˇche_åì
 *
ô
, c⁄° *
pfx
, c⁄° *
x
)

8 i‡(
ô
->
íåy_cou¡
 < 0)

9 
	`¥ötf
("%-40s %s%s (%d subtrees)\n",

10 "övÆid", 
x
, 
pfx
, 
ô
->
subåì_ƒ
);

12 
	`¥ötf
("%s %s%s (%dÉntries, %d subtrees)\n",

13 
	`sha1_to_hex
(
ô
->
sha1
), 
x
, 
pfx
,

14 
ô
->
íåy_cou¡
, it->
subåì_ƒ
);

15 
	}
}

17 
	$dump_ˇche_åì
(
ˇche_åì
 *
ô
,

18 
ˇche_åì
 *
ªf
,

19 c⁄° *
pfx
)

21 
i
;

22 
îrs
 = 0;

24 i‡(!
ô
 || !
ªf
)

28 i‡(
ô
->
íåy_cou¡
 < 0) {

29 
	`dump_⁄e
(
ô
, 
pfx
, "");

30 
	`dump_⁄e
(
ªf
, 
pfx
, "#(ref) ");

31 i‡(
ô
->
subåì_ƒ
 !
ªf
->subtree_nr)

32 
îrs
 = 1;

35 
	`dump_⁄e
(
ô
, 
pfx
, "");

36 i‡(
	`hashcmp
(
ô
->
sha1
, 
ªf
->sha1) ||

37 
ªf
->
íåy_cou¡
 !
ô
->entry_count ||

38 
ªf
->
subåì_ƒ
 !
ô
->subtree_nr) {

39 
	`dump_⁄e
(
ªf
, 
pfx
, "#(ref) ");

40 
îrs
 = 1;

44 
i
 = 0; i < 
ô
->
subåì_ƒ
; i++) {

45 
∑th
[
PATH_MAX
];

46 
ˇche_åì_sub
 *
down
 = 
ô
->down[
i
];

47 
ˇche_åì_sub
 *
rdwn
;

49 
rdwn
 = 
	`ˇche_åì_sub
(
ªf
, 
down
->
«me
);

50 
	`•rötf
(
∑th
, "%s%.*s/", 
pfx
, 
down
->
«mñí
, down->
«me
);

51 i‡(
	`dump_ˇche_åì
(
down
->
ˇche_åì
, 
rdwn
->ˇche_åì, 
∑th
))

52 
îrs
 = 1;

54  
îrs
;

55 
	}
}

57 
	$maö
(
ac
, **
av
)

59 
ˇche_åì
 *
™Ÿhî
 = 
	`ˇche_åì
();

60 i‡(
	`ªad_ˇche
() < 0)

61 
	`dõ
("unableÅoÑead index file");

62 
	`ˇche_åì_upd©e
(
™Ÿhî
, 
a˘ive_ˇche
, 
a˘ive_ƒ
, 0, 1);

63  
	`dump_ˇche_åì
(
a˘ive_ˇche_åì
, 
™Ÿhî
, "");

64 
	}
}

	@entry.c

1 
	~"ˇche.h
"

2 
	~"blob.h
"

4 
	$¸óã_dúe˘‹õs
(c⁄° *
∑th
, 
checkout
 *
°©e
)

6 
Àn
 = 
	`°æí
(
∑th
);

7 *
buf
 = 
	`xmÆloc
(
Àn
 + 1);

8 c⁄° *
¶ash
 = 
∑th
;

10 (
¶ash
 = 
	`°rchr
(¶ash+1, '/')Ë!
NULL
) {

11 
Àn
 = 
¶ash
 - 
∑th
;

12 
	`mem˝y
(
buf
, 
∑th
, 
Àn
);

13 
buf
[
Àn
] = 0;

14 i‡(
	`mkdú
(
buf
, 0777)) {

15 i‡(
î∫o
 =
EEXIST
) {

16 
°©
 
°
;

17 i‡(
Àn
 > 
°©e
->
ba£_dú_Àn
 && sèã->
f‹˚
 && !
	`u∆ök
(
buf
Ë&& !
	`mkdú
(buf, 0777))

19 i‡(!
	`°©
(
buf
, &
°
Ë&& 
	`S_ISDIR
(°.
°_mode
))

22 
	`dõ
("ˇ¬Ÿ cª©êdúe˘‹yáà%s", 
buf
);

25 
	`‰ì
(
buf
);

26 
	}
}

28 
	$ªmove_subåì
(c⁄° *
∑th
)

30 
DIR
 *
dú
 = 
	`›ídú
(
∑th
);

31 
dúít
 *
de
;

32 
∑thbuf
[
PATH_MAX
];

33 *
«me
;

35 i‡(!
dú
)

36 
	`dõ
("ˇ¬Ÿ o≥ndú %s", 
∑th
);

37 
	`°r˝y
(
∑thbuf
, 
∑th
);

38 
«me
 = 
∑thbuf
 + 
	`°æí
(
∑th
);

39 *
«me
++ = '/';

40 (
de
 = 
	`ªaddú
(
dú
)Ë!
NULL
) {

41 
°©
 
°
;

42 i‡((
de
->
d_«me
[0] == '.') &&

43 ((
de
->
d_«me
[1] == 0) ||

44 ((
de
->
d_«me
[1] == '.') && de->d_name[2] == 0)))

46 
	`°r˝y
(
«me
, 
de
->
d_«me
);

47 i‡(
	`l°©
(
∑thbuf
, &
°
))

48 
	`dõ
("ˇ¬ŸÜ°© %s", 
∑thbuf
);

49 i‡(
	`S_ISDIR
(
°
.
°_mode
))

50 
	`ªmove_subåì
(
∑thbuf
);

51 i‡(
	`u∆ök
(
∑thbuf
))

52 
	`dõ
("ˇ¬Ÿ u∆ök %s", 
∑thbuf
);

54 
	`˛o£dú
(
dú
);

55 i‡(
	`rmdú
(
∑th
))

56 
	`dõ
("ˇ¬ŸÑmdú %s", 
∑th
);

57 
	}
}

59 
	$¸óã_fûe
(c⁄° *
∑th
, 
mode
)

61 
mode
 = (mode & 0100) ? 0777 : 0666;

62  
	`›í
(
∑th
, 
O_WRONLY
 | 
O_CREAT
 | 
O_EXCL
, 
mode
);

63 
	}
}

65 
	$wrôe_íåy
(
ˇche_íåy
 *
˚
, *
∑th
, 
checkout
 *
°©e
, 
to_ãmpfûe
)

67 
fd
;

68 *
√w
;

69 
size
;

70 
wrŸe
;

71 
ty≥
[20];

73 
√w
 = 
	`ªad_sha1_fûe
(
˚
->
sha1
, 
ty≥
, &
size
);

74 i‡(!
√w
 || 
	`°rcmp
(
ty≥
, 
blob_ty≥
)) {

75 i‡(
√w
)

76 
	`‰ì
(
√w
);

77  
	`îr‹
("git-checkout-index: unableÅoÑead sha1 file of %s (%s)",

78 
∑th
, 
	`sha1_to_hex
(
˚
->
sha1
));

80 
	`¡ohl
(
˚
->
˚_mode
Ë& 
S_IFMT
) {

81 
S_IFREG
:

82 i‡(
to_ãmpfûe
) {

83 
	`°r˝y
(
∑th
, ".merge_file_XXXXXX");

84 
fd
 = 
	`mk°emp
(
∑th
);

86 
fd
 = 
	`¸óã_fûe
(
∑th
, 
	`¡ohl
(
˚
->
˚_mode
));

87 i‡(
fd
 < 0) {

88 
	`‰ì
(
√w
);

89  
	`îr‹
("git-checkout-index: unableÅo create file %s (%s)",

90 
∑th
, 
	`°ªº‹
(
î∫o
));

93 
wrŸe
 = 
	`wrôe_ö_fuŒ
(
fd
, 
√w
, 
size
);

94 
	`˛o£
(
fd
);

95 
	`‰ì
(
√w
);

96 i‡(
wrŸe
 !
size
)

97  
	`îr‹
("gô-checkout-ödex: u«bÀÅÿwrôêfûê%s", 
∑th
);

99 
S_IFLNK
:

100 i‡(
to_ãmpfûe
) {

101 
	`°r˝y
(
∑th
, ".merge_link_XXXXXX");

102 
fd
 = 
	`mk°emp
(
∑th
);

103 i‡(
fd
 < 0) {

104 
	`‰ì
(
√w
);

105  
	`îr‹
("git-checkout-index: unableÅo create "

106 "fûê%†(%s)", 
∑th
, 
	`°ªº‹
(
î∫o
));

108 
wrŸe
 = 
	`wrôe_ö_fuŒ
(
fd
, 
√w
, 
size
);

109 
	`˛o£
(
fd
);

110 
	`‰ì
(
√w
);

111 i‡(
wrŸe
 !
size
)

112  
	`îr‹
("git-checkout-index: unableÅo write file %s",

113 
∑th
);

115 
wrŸe
 = 
	`symlök
(
√w
, 
∑th
);

116 
	`‰ì
(
√w
);

117 i‡(
wrŸe
)

118  
	`îr‹
("git-checkout-index: unableÅo create "

119 "symlök %†(%s)", 
∑th
, 
	`°ªº‹
(
î∫o
));

123 
	`‰ì
(
√w
);

124  
	`îr‹
("gô-checkout-ödex: unknow¿fûêmodêf‹ %s", 
∑th
);

127 i‡(
°©e
->
ª‰esh_ˇche
) {

128 
°©
 
°
;

129 
	`l°©
(
˚
->
«me
, &
°
);

130 
	`fûl_°©_ˇche_öfo
(
˚
, &
°
);

133 
	}
}

135 
	$checkout_íåy
(
ˇche_íåy
 *
˚
, 
checkout
 *
°©e
, *
t›©h
)

137 
∑th
[
PATH_MAX
 + 1];

138 
°©
 
°
;

139 
Àn
 = 
°©e
->
ba£_dú_Àn
;

141 i‡(
t›©h
)

142  
	`wrôe_íåy
(
˚
, 
t›©h
, 
°©e
, 1);

144 
	`mem˝y
(
∑th
, 
°©e
->
ba£_dú
, 
Àn
);

145 
	`°r˝y
(
∑th
 + 
Àn
, 
˚
->
«me
);

147 i‡(!
	`l°©
(
∑th
, &
°
)) {

148 
ch™ged
 = 
	`˚_m©ch_°©
(
˚
, &
°
, 1);

149 i‡(!
ch™ged
)

151 i‡(!
°©e
->
f‹˚
) {

152 i‡(!
°©e
->
quõt
)

153 
	`Ârötf
(
°dîr
, "gô-checkout-ödex: %†ÆªadyÉxi°s\n", 
∑th
);

163 
	`u∆ök
(
∑th
);

164 i‡(
	`S_ISDIR
(
°
.
°_mode
)) {

165 i‡(!
°©e
->
f‹˚
)

166  
	`îr‹
("%†i†®dúe˘‹y", 
∑th
);

167 
	`ªmove_subåì
(
∑th
);

169 } i‡(
°©e
->
nŸ_√w
)

171 
	`¸óã_dúe˘‹õs
(
∑th
, 
°©e
);

172  
	`wrôe_íåy
(
˚
, 
∑th
, 
°©e
, 0);

173 
	}
}

	@environment.c

10 
	~"ˇche.h
"

12 
	ggô_deÁu…_emaû
[
MAX_GITNAME
];

13 
	ggô_deÁu…_«me
[
MAX_GITNAME
];

14 
	gu£_Àgacy_hódîs
 = 1;

15 
	gåu°_execuèbÀ_bô
 = 1;

16 
	gassume_unch™ged
;

17 
	g¥e„r_symlök_ªfs
;

18 
	gis_b¨e_ªposô‹y_cfg
 = -1;

19 
	glog_Æl_ªf_upd©es
 = -1;

20 
	gw¨n_ambiguous_ªfs
 = 1;

21 
	gªposô‹y_f‹m©_vîsi⁄
;

22 *
	ggô_commô_ícodög
;

23 *
	ggô_log_ouçut_ícodög
;

24 
	gsh¨ed_ªposô‹y
 = 
PERM_UMASK
;

25 c⁄° *
	g≠∂y_deÁu…_whôe•a˚
;

26 
	gzlib_com¥essi⁄_Àvñ
 = 
Z_DEFAULT_COMPRESSION
;

27 
size_t
 
	g∑cked_gô_wödow_size
 = 
DEFAULT_PACKED_GIT_WINDOW_SIZE
;

28 
size_t
 
	g∑cked_gô_limô
 = 
DEFAULT_PACKED_GIT_LIMIT
;

29 
	g∑gî_ö_u£
;

30 
	g∑gî_u£_cﬁ‹
 = 1;

32 c⁄° *
	ggô_dú
;

33 *
	ggô_obje˘_dú
, *
	ggô_ödex_fûe
, *
	ggô_ªfs_dú
, *
	ggô_gø·_fûe
;

35 
	$£tup_gô_ív
()

37 
gô_dú
 = 
	`gëív
(
GIT_DIR_ENVIRONMENT
);

38 i‡(!
gô_dú
)

39 
gô_dú
 = 
DEFAULT_GIT_DIR_ENVIRONMENT
;

40 
gô_obje˘_dú
 = 
	`gëív
(
DB_ENVIRONMENT
);

41 i‡(!
gô_obje˘_dú
) {

42 
gô_obje˘_dú
 = 
	`xmÆloc
(
	`°æí
(
gô_dú
) + 9);

43 
	`•rötf
(
gô_obje˘_dú
, "%s/obje˘s", 
gô_dú
);

45 
gô_ªfs_dú
 = 
	`xmÆloc
(
	`°æí
(
gô_dú
) + 6);

46 
	`•rötf
(
gô_ªfs_dú
, "%s/ªfs", 
gô_dú
);

47 
gô_ödex_fûe
 = 
	`gëív
(
INDEX_ENVIRONMENT
);

48 i‡(!
gô_ödex_fûe
) {

49 
gô_ödex_fûe
 = 
	`xmÆloc
(
	`°æí
(
gô_dú
) + 7);

50 
	`•rötf
(
gô_ödex_fûe
, "%s/ödex", 
gô_dú
);

52 
gô_gø·_fûe
 = 
	`gëív
(
GRAFT_ENVIRONMENT
);

53 i‡(!
gô_gø·_fûe
)

54 
gô_gø·_fûe
 = 
	`x°rdup
(
	`gô_∑th
("info/grafts"));

55 
	}
}

57 
	$is_b¨e_ªposô‹y
()

59 c⁄° *
dú
, *
s
;

60 i‡(0 <
is_b¨e_ªposô‹y_cfg
)

61  
is_b¨e_ªposô‹y_cfg
;

63 
dú
 = 
	`gë_gô_dú
();

64 i‡(!
	`°rcmp
(
dú
, 
DEFAULT_GIT_DIR_ENVIRONMENT
))

66 
s
 = 
	`°ºchr
(
dú
, '/');

67  !
s
 || 
	`°rcmp
(†+ 1, 
DEFAULT_GIT_DIR_ENVIRONMENT
);

68 
	}
}

70 c⁄° *
	$gë_gô_dú
()

72 i‡(!
gô_dú
)

73 
	`£tup_gô_ív
();

74  
gô_dú
;

75 
	}
}

77 *
	$gë_obje˘_dúe˘‹y
()

79 i‡(!
gô_obje˘_dú
)

80 
	`£tup_gô_ív
();

81  
gô_obje˘_dú
;

82 
	}
}

84 *
	$gë_ªfs_dúe˘‹y
()

86 i‡(!
gô_ªfs_dú
)

87 
	`£tup_gô_ív
();

88  
gô_ªfs_dú
;

89 
	}
}

91 *
	$gë_ödex_fûe
()

93 i‡(!
gô_ödex_fûe
)

94 
	`£tup_gô_ív
();

95  
gô_ödex_fûe
;

96 
	}
}

98 *
	$gë_gø·_fûe
()

100 i‡(!
gô_gø·_fûe
)

101 
	`£tup_gô_ív
();

102  
gô_gø·_fûe
;

103 
	}
}

	@exec_cmd.c

1 
	~"ˇche.h
"

2 
	~"exec_cmd.h
"

3 
	~"quŸe.h
"

4 
	#MAX_ARGS
 32

	)

6 **
ívú⁄
;

7 c⁄° *
	gbuûtö_exec_∑th
 = 
GIT_EXEC_PATH
;

8 c⁄° *
	gcuºít_exec_∑th
;

10 
	$gô_£t_exec_∑th
(c⁄° *
exec_∑th
)

12 
cuºít_exec_∑th
 = 
exec_∑th
;

13 
	}
}

17 c⁄° *
	$gô_exec_∑th
()

19 c⁄° *
ív
;

21 i‡(
cuºít_exec_∑th
)

22  
cuºít_exec_∑th
;

24 
ív
 = 
	`gëív
(
EXEC_PATH_ENVIRONMENT
);

25 i‡(
ív
 && *env) {

26  
ív
;

29  
buûtö_exec_∑th
;

30 
	}
}

33 
	$execv_gô_cmd
(c⁄° **
¨gv
)

35 
gô_comm™d
[
PATH_MAX
 + 1];

36 
i
;

37 c⁄° *
∑ths
[] = { 
cuºít_exec_∑th
,

38 
	`gëív
(
EXEC_PATH_ENVIRONMENT
),

39 
buûtö_exec_∑th
 };

41 
i
 = 0; i < 
	`ARRAY_SIZE
(
∑ths
); ++i) {

42 
size_t
 
Àn
;

43 
rc
;

44 c⁄° *
exec_dú
 = 
∑ths
[
i
];

45 c⁄° *
tmp
;

47 i‡(!
exec_dú
 || !*exec_dir) ;

49 i‡(*
exec_dú
 != '/') {

50 i‡(!
	`gëcwd
(
gô_comm™d
, (git_command))) {

51 
	`Ârötf
(
°dîr
, "git: cannot determine "

53 
	`°ªº‹
(
î∫o
));

56 
Àn
 = 
	`°æí
(
gô_comm™d
);

59 !
	`°∫cmp
(
exec_dú
, "./", 2)) {

60 
exec_dú
 += 2;

61 *
exec_dú
 == '/')

62 
exec_dú
++;

65 
rc
 = 
	`¢¥ötf
(
gô_comm™d
 + 
Àn
,

66 (
gô_comm™d
Ë- 
Àn
, "/%s",

67 
exec_dú
);

68 i‡(
rc
 < 0 ||Ñ¯>(
gô_comm™d
Ë- 
Àn
) {

69 
	`Ârötf
(
°dîr
, "git: commandÇame given "

74 i‡(
	`°æí
(
exec_dú
Ë+ 1 > (
gô_comm™d
)) {

75 
	`Ârötf
(
°dîr
, "git: commandÇame given "

79 
	`°r˝y
(
gô_comm™d
, 
exec_dú
);

82 
Àn
 = 
	`°æí
(
gô_comm™d
);

83 
rc
 = 
	`¢¥ötf
(
gô_comm™d
 + 
Àn
, (git_command) -Üen,

84 "/gô-%s", 
¨gv
[0]);

85 i‡(
rc
 < 0 ||Ñ¯>(
gô_comm™d
Ë- 
Àn
) {

86 
	`Ârötf
(
°dîr
,

97 
tmp
 = 
¨gv
[0];

98 
¨gv
[0] = 
gô_comm™d
;

100 
	`åa˚_¨gv_¥ötf
(
¨gv
, -1, "trace:Éxec:");

103 
	`execve
(
gô_comm™d
, (**)
¨gv
, 
ívú⁄
);

105 
	`åa˚_¥ötf
("åa˚:Éxe¯Áûed: %s\n", 
	`°ªº‹
(
î∫o
));

107 
¨gv
[0] = 
tmp
;

111 
	}
}

114 
	$exe˛_gô_cmd
(c⁄° *
cmd
,...)

116 
¨gc
;

117 c⁄° *
¨gv
[
MAX_ARGS
 + 1];

118 c⁄° *
¨g
;

119 
va_li°
 
∑øm
;

121 
	`va_°¨t
(
∑øm
, 
cmd
);

122 
¨gv
[0] = 
cmd
;

123 
¨gc
 = 1;

124 
¨gc
 < 
MAX_ARGS
) {

125 
¨g
 = 
¨gv
[
¨gc
++] = 
	`va_¨g
(
∑øm
, *);

126 i‡(!
¨g
)

129 
	`va_íd
(
∑øm
);

130 i‡(
MAX_ARGS
 <
¨gc
)

131  
	`îr‹
("toÿm™yárg†tÿru¿%s", 
cmd
);

133 
¨gv
[
¨gc
] = 
NULL
;

134  
	`execv_gô_cmd
(
¨gv
);

135 
	}
}

	@exec_cmd.h

1 #i‚de‡
__GIT_EXEC_CMD_H_


2 
	#__GIT_EXEC_CMD_H_


	)

4 
gô_£t_exec_∑th
(c⁄° *
exec_∑th
);

5 c⁄° * 
gô_exec_∑th
();

6 
execv_gô_cmd
(c⁄° **
¨gv
);

7 
exe˛_gô_cmd
(c⁄° *
cmd
, ...);

	@fast-import.c

120 
	~"buûtö.h
"

121 
	~"ˇche.h
"

122 
	~"obje˘.h
"

123 
	~"blob.h
"

124 
	~"åì.h
"

125 
	~"commô.h
"

126 
	~"dñè.h
"

127 
	~"∑ck.h
"

128 
	~"ªfs.h
"

129 
	~"csum-fûe.h
"

130 
	~"°rbuf.h
"

131 
	~"quŸe.h
"

133 
	#PACK_ID_BITS
 16

	)

134 
	#MAX_PACK_ID
 ((1<<
PACK_ID_BITS
)-1)

	)

136 
	sobje˘_íåy


138 
obje˘_íåy
 *
	m√xt
;

139 
uöt32_t
 
	moff£t
;

140 
	mty≥
 : 
TYPE_BITS
;

141 
	m∑ck_id
 : 
PACK_ID_BITS
;

142 
	msha1
[20];

145 
	sobje˘_íåy_poﬁ


147 
obje˘_íåy_poﬁ
 *
	m√xt_poﬁ
;

148 
obje˘_íåy
 *
	m√xt_‰ì
;

149 
obje˘_íåy
 *
	míd
;

150 
obje˘_íåy
 
	míåõs
[
FLEX_ARRAY
];

153 
	sm¨k_£t


156 
obje˘_íåy
 *
	mm¨ked
[1024];

157 
m¨k_£t
 *
	m£ts
[1024];

158 } 
	md©a
;

159 
	mshi·
;

162 
	sœ°_obje˘


164 *
	md©a
;

165 
	mÀn
;

166 
uöt32_t
 
	moff£t
;

167 
	mdïth
;

168 
	mno_‰ì
:1;

171 
	smem_poﬁ


173 
mem_poﬁ
 *
	m√xt_poﬁ
;

174 *
	m√xt_‰ì
;

175 *
	míd
;

176 
	m•a˚
[
FLEX_ARRAY
];

179 
	s©om_°r


181 
©om_°r
 *
	m√xt_©om
;

182 
	m°r_Àn
;

183 
	m°r_d©
[
FLEX_ARRAY
];

186 
	gåì_c⁄ã¡
;

187 
	såì_íåy


189 
åì_c⁄ã¡
 *
	måì
;

190 
©om_°r
* 
	m«me
;

191 
	såì_íåy_ms


193 
uöt16_t
 
	mmode
;

194 
	msha1
[20];

195 } 
	mvîsi⁄s
[2];

198 
	såì_c⁄ã¡


200 
	míåy_ˇ∑côy
;

201 
	míåy_cou¡
;

202 
	mdñè_dïth
;

203 
åì_íåy
 *
	míåõs
[
FLEX_ARRAY
];

206 
	savaû_åì_c⁄ã¡


208 
	míåy_ˇ∑côy
;

209 
avaû_åì_c⁄ã¡
 *
	m√xt_avaû
;

212 
	sbønch


214 
bønch
 *
	mèbÀ_√xt_bønch
;

215 
bønch
 *
	ma˘ive_√xt_bønch
;

216 c⁄° *
	m«me
;

217 
åì_íåy
 
	mbønch_åì
;

218 
uötmax_t
 
	mœ°_commô
;

219 
	m∑ck_id
;

220 
	msha1
[20];

223 
	sèg


225 
èg
 *
	m√xt_èg
;

226 c⁄° *
	m«me
;

227 
	m∑ck_id
;

228 
	msha1
[20];

231 
	sdbuf


233 *
	mbuf„r
;

234 
size_t
 
	mˇ∑côy
;

237 
	shash_li°


239 
hash_li°
 *
	m√xt
;

240 
	msha1
[20];

244 
	mWHENSPEC_RAW
 = 1,

245 
	mWHENSPEC_RFC2822
,

246 
	mWHENSPEC_NOW
,

247 } 
	twhí•ec_ty≥
;

250 
	gmax_dïth
 = 10;

251 
	gmax_∑cksize
 = (1LL << 32) - 1;

252 
	gf‹˚_upd©e
;

255 
uötmax_t
 
	gÆloc_cou¡
;

256 
uötmax_t
 
	gm¨ks_£t_cou¡
;

257 
uötmax_t
 
	gobje˘_cou¡_by_ty≥
[1 << 
TYPE_BITS
];

258 
uötmax_t
 
	gdu∂iˇã_cou¡_by_ty≥
[1 << 
TYPE_BITS
];

259 
uötmax_t
 
	gdñè_cou¡_by_ty≥
[1 << 
TYPE_BITS
];

260 
	gobje˘_cou¡
;

261 
	gbønch_cou¡
;

262 
	gbønch_lﬂd_cou¡
;

263 
	gÁûuª
;

264 
FILE
 *
	g∑ck_edges
;

267 
size_t
 
	gmem_poﬁ_Æloc
 = 2*1024*1024 - (
mem_poﬁ
);

268 
size_t
 
	gtŸÆ_Ælocd
;

269 
mem_poﬁ
 *
	gmem_poﬁ
;

272 
	g©om_èbÀ_sz
 = 4451;

273 
	g©om_˙t
;

274 
©om_°r
 **
	g©om_èbÀ
;

277 
	g∑ck_id
;

278 
∑cked_gô
 *
	g∑ck_d©a
;

279 
∑cked_gô
 **
	gÆl_∑cks
;

280 
	g∑ck_size
;

283 
	gobje˘_íåy_Æloc
 = 5000;

284 
obje˘_íåy_poﬁ
 *
	gblocks
;

285 
obje˘_íåy
 *
	gobje˘_èbÀ
[1 << 16];

286 
m¨k_£t
 *
	gm¨ks
;

287 c⁄° * 
	gm¨k_fûe
;

290 
œ°_obje˘
 
	gœ°_blob
;

293 
	gåì_íåy_Æloc
 = 1000;

294 *
	gavaû_åì_íåy
;

295 
	gavaû_åì_èbÀ_sz
 = 100;

296 
avaû_åì_c⁄ã¡
 **
	gavaû_åì_èbÀ
;

297 
dbuf
 
	gﬁd_åì
;

298 
dbuf
 
	g√w_åì
;

301 
	gmax_a˘ive_bønches
 = 5;

302 
	gcur_a˘ive_bønches
;

303 
	gbønch_èbÀ_sz
 = 1039;

304 
bønch
 **
	gbønch_èbÀ
;

305 
bønch
 *
	ga˘ive_bønches
;

308 
èg
 *
	gfú°_èg
;

309 
èg
 *
	gœ°_èg
;

312 
whí•ec_ty≥
 
	gwhí•ec
 = 
WHENSPEC_RAW
;

313 
°rbuf
 
	gcomm™d_buf
;

314 
uötmax_t
 
	g√xt_m¨k
;

315 
dbuf
 
	g√w_d©a
;

318 
	$Æloc_obje˘s
(
˙t
)

320 
obje˘_íåy_poﬁ
 *
b
;

322 
b
 = 
	`xmÆloc
((
obje˘_íåy_poﬁ
)

323 + 
˙t
 * (
obje˘_íåy
));

324 
b
->
√xt_poﬁ
 = 
blocks
;

325 
b
->
√xt_‰ì
 = b->
íåõs
;

326 
b
->
íd
 = b->
íåõs
 + 
˙t
;

327 
blocks
 = 
b
;

328 
Æloc_cou¡
 +
˙t
;

329 
	}
}

331 
obje˘_íåy
 *
	$√w_obje˘
(*
sha1
)

333 
obje˘_íåy
 *
e
;

335 i‡(
blocks
->
√xt_‰ì
 =blocks->
íd
)

336 
	`Æloc_obje˘s
(
obje˘_íåy_Æloc
);

338 
e
 = 
blocks
->
√xt_‰ì
++;

339 
	`hash˝y
(
e
->
sha1
, sha1);

340  
e
;

341 
	}
}

343 
obje˘_íåy
 *
	$föd_obje˘
(*
sha1
)

345 
h
 = 
sha1
[0] << 8 | sha1[1];

346 
obje˘_íåy
 *
e
;

347 
e
 = 
obje˘_èbÀ
[
h
];É;É =É->
√xt
)

348 i‡(!
	`hashcmp
(
sha1
, 
e
->sha1))

349  
e
;

350  
NULL
;

351 
	}
}

353 
obje˘_íåy
 *
	$ö£π_obje˘
(*
sha1
)

355 
h
 = 
sha1
[0] << 8 | sha1[1];

356 
obje˘_íåy
 *
e
 = 
obje˘_èbÀ
[
h
];

357 
obje˘_íåy
 *
p
 = 
NULL
;

359 
e
) {

360 i‡(!
	`hashcmp
(
sha1
, 
e
->sha1))

361  
e
;

362 
p
 = 
e
;

363 
e
 =É->
√xt
;

366 
e
 = 
	`√w_obje˘
(
sha1
);

367 
e
->
√xt
 = 
NULL
;

368 
e
->
off£t
 = 0;

369 i‡(
p
)

370 
p
->
√xt
 = 
e
;

372 
obje˘_èbÀ
[
h
] = 
e
;

373  
e
;

374 
	}
}

376 
	$hc_°r
(c⁄° *
s
, 
size_t
 
Àn
)

378 
r
 = 0;

379 
Àn
-- > 0)

380 
r
 =Ñ * 31 + *
s
++;

381  
r
;

382 
	}
}

384 *
	$poﬁ_Æloc
(
size_t
 
Àn
)

386 
mem_poﬁ
 *
p
;

387 *
r
;

389 
p
 = 
mem_poﬁ
;Ö;Ö =Ö->
√xt_poﬁ
)

390 i‡((
p
->
íd
 -Ö->
√xt_‰ì
 >
Àn
))

393 i‡(!
p
) {

394 i‡(
Àn
 >(
mem_poﬁ_Æloc
/2)) {

395 
tŸÆ_Ælocd
 +
Àn
;

396  
	`xmÆloc
(
Àn
);

398 
tŸÆ_Ælocd
 +(
mem_poﬁ
Ë+ 
mem_poﬁ_Æloc
;

399 
p
 = 
	`xmÆloc
((
mem_poﬁ
Ë+ 
mem_poﬁ_Æloc
);

400 
p
->
√xt_poﬁ
 = 
mem_poﬁ
;

401 
p
->
√xt_‰ì
 =Ö->
•a˚
;

402 
p
->
íd
 =Ö->
√xt_‰ì
 + 
mem_poﬁ_Æloc
;

403 
mem_poﬁ
 = 
p
;

406 
r
 = 
p
->
√xt_‰ì
;

408 i‡(
Àn
 & ((*) - 1))

409 
Àn
 += (*) - (len & ((*) - 1));

410 
p
->
√xt_‰ì
 +
Àn
;

411  
r
;

412 
	}
}

414 *
	$poﬁ_ˇŒoc
(
size_t
 
cou¡
, size_à
size
)

416 
size_t
 
Àn
 = 
cou¡
 * 
size
;

417 *
r
 = 
	`poﬁ_Æloc
(
Àn
);

418 
	`mem£t
(
r
, 0, 
Àn
);

419  
r
;

420 
	}
}

422 *
	$poﬁ_°rdup
(c⁄° *
s
)

424 *
r
 = 
	`poﬁ_Æloc
(
	`°æí
(
s
) + 1);

425 
	`°r˝y
(
r
, 
s
);

426  
r
;

427 
	}
}

429 
	$size_dbuf
(
dbuf
 *
b
, 
size_t
 
maxÀn
)

431 i‡(
b
->
buf„r
) {

432 i‡(
b
->
ˇ∑côy
 >
maxÀn
)

434 
	`‰ì
(
b
->
buf„r
);

436 
b
->
ˇ∑côy
 = ((
maxÀn
 / 1024) + 1) * 1024;

437 
b
->
buf„r
 = 
	`xmÆloc
(b->
ˇ∑côy
);

438 
	}
}

440 
	$ö£π_m¨k
(
uötmax_t
 
idnum
, 
obje˘_íåy
 *
€
)

442 
m¨k_£t
 *
s
 = 
m¨ks
;

443 (
idnum
 >> 
s
->
shi·
) >= 1024) {

444 
s
 = 
	`poﬁ_ˇŒoc
(1, (
m¨k_£t
));

445 
s
->
shi·
 = 
m¨ks
->shift + 10;

446 
s
->
d©a
.
£ts
[0] = 
m¨ks
;

447 
m¨ks
 = 
s
;

449 
s
->
shi·
) {

450 
uötmax_t
 
i
 = 
idnum
 >> 
s
->
shi·
;

451 
idnum
 -
i
 << 
s
->
shi·
;

452 i‡(!
s
->
d©a
.
£ts
[
i
]) {

453 
s
->
d©a
.
£ts
[
i
] = 
	`poﬁ_ˇŒoc
(1, (
m¨k_£t
));

454 
s
->
d©a
.
£ts
[
i
]->
shi·
 = s->shift - 10;

456 
s
 = s->
d©a
.
£ts
[
i
];

458 i‡(!
s
->
d©a
.
m¨ked
[
idnum
])

459 
m¨ks_£t_cou¡
++;

460 
s
->
d©a
.
m¨ked
[
idnum
] = 
€
;

461 
	}
}

463 
obje˘_íåy
 *
	$föd_m¨k
(
uötmax_t
 
idnum
)

465 
uötmax_t
 
‹ig_idnum
 = 
idnum
;

466 
m¨k_£t
 *
s
 = 
m¨ks
;

467 
obje˘_íåy
 *
€
 = 
NULL
;

468 i‡((
idnum
 >> 
s
->
shi·
) < 1024) {

469 
s
 && s->
shi·
) {

470 
uötmax_t
 
i
 = 
idnum
 >> 
s
->
shi·
;

471 
idnum
 -
i
 << 
s
->
shi·
;

472 
s
 = s->
d©a
.
£ts
[
i
];

474 i‡(
s
)

475 
€
 = 
s
->
d©a
.
m¨ked
[
idnum
];

477 i‡(!
€
)

478 
	`dõ
("m¨k :%juÇŸ de˛¨ed", 
‹ig_idnum
);

479  
€
;

480 
	}
}

482 
©om_°r
 *
	$to_©om
(c⁄° *
s
, 
Àn
)

484 
hc
 = 
	`hc_°r
(
s
, 
Àn
Ë% 
©om_èbÀ_sz
;

485 
©om_°r
 *
c
;

487 
c
 = 
©om_èbÀ
[
hc
]; c; c = c->
√xt_©om
)

488 i‡(
c
->
°r_Àn
 =
Àn
 && !
	`°∫cmp
(
s
, c->
°r_d©
,Üen))

489  
c
;

491 
c
 = 
	`poﬁ_Æloc
((
©om_°r
Ë+ 
Àn
 + 1);

492 
c
->
°r_Àn
 = 
Àn
;

493 
	`°∫˝y
(
c
->
°r_d©
, 
s
, 
Àn
);

494 
c
->
°r_d©
[
Àn
] = 0;

495 
c
->
√xt_©om
 = 
©om_èbÀ
[
hc
];

496 
©om_èbÀ
[
hc
] = 
c
;

497 
©om_˙t
++;

498  
c
;

499 
	}
}

501 
bønch
 *
	$lookup_bønch
(c⁄° *
«me
)

503 
hc
 = 
	`hc_°r
(
«me
, 
	`°æí
“ame)Ë% 
bønch_èbÀ_sz
;

504 
bønch
 *
b
;

506 
b
 = 
bønch_èbÀ
[
hc
]; b; b = b->
èbÀ_√xt_bønch
)

507 i‡(!
	`°rcmp
(
«me
, 
b
->name))

508  
b
;

509  
NULL
;

510 
	}
}

512 
bønch
 *
	$√w_bønch
(c⁄° *
«me
)

514 
hc
 = 
	`hc_°r
(
«me
, 
	`°æí
“ame)Ë% 
bønch_èbÀ_sz
;

515 
bønch
* 
b
 = 
	`lookup_bønch
(
«me
);

517 i‡(
b
)

518 
	`dõ
("InvÆidáâem±Åÿ¸óã du∂iˇã bønch: %s", 
«me
);

519 i‡(
	`check_ªf_f‹m©
(
«me
))

520 
	`dõ
("BønchÇamêd€¢'àc⁄f‹mÅÿGIT sènd¨ds: %s", 
«me
);

522 
b
 = 
	`poﬁ_ˇŒoc
(1, (
bønch
));

523 
b
->
«me
 = 
	`poﬁ_°rdup
(name);

524 
b
->
èbÀ_√xt_bønch
 = 
bønch_èbÀ
[
hc
];

525 
b
->
bønch_åì
.
vîsi⁄s
[0].
mode
 = 
S_IFDIR
;

526 
b
->
bønch_åì
.
vîsi⁄s
[1].
mode
 = 
S_IFDIR
;

527 
b
->
∑ck_id
 = 
MAX_PACK_ID
;

528 
bønch_èbÀ
[
hc
] = 
b
;

529 
bønch_cou¡
++;

530  
b
;

531 
	}
}

533 
	$hc_íåõs
(
˙t
)

535 
˙t
 = cnt & 7 ? (cnt / 8) + 1 : cnt / 8;

536  
˙t
 < 
avaû_åì_èbÀ_sz
 ? cnt :ávail_tree_table_sz - 1;

537 
	}
}

539 
åì_c⁄ã¡
 *
	$√w_åì_c⁄ã¡
(
˙t
)

541 
avaû_åì_c⁄ã¡
 *
f
, *
l
 = 
NULL
;

542 
åì_c⁄ã¡
 *
t
;

543 
hc
 = 
	`hc_íåõs
(
˙t
);

545 
f
 = 
avaû_åì_èbÀ
[
hc
]; f; 
l
 = f, f = f->
√xt_avaû
)

546 i‡(
f
->
íåy_ˇ∑côy
 >
˙t
)

549 i‡(
f
) {

550 i‡(
l
)

551 
l
->
√xt_avaû
 = 
f
->next_avail;

553 
avaû_åì_èbÀ
[
hc
] = 
f
->
√xt_avaû
;

555 
˙t
 = cnt & 7 ? ((cnt / 8) + 1) * 8 : cnt;

556 
f
 = 
	`poﬁ_Æloc
((*
t
Ë+ —->
íåõs
[0]Ë* 
˙t
);

557 
f
->
íåy_ˇ∑côy
 = 
˙t
;

560 
t
 = (
åì_c⁄ã¡
*)
f
;

561 
t
->
íåy_cou¡
 = 0;

562 
t
->
dñè_dïth
 = 0;

563  
t
;

564 
	}
}

566 
ªÀa£_åì_íåy
(
åì_íåy
 *
e
);

567 
	$ªÀa£_åì_c⁄ã¡
(
åì_c⁄ã¡
 *
t
)

569 
avaû_åì_c⁄ã¡
 *
f
 = (avaû_åì_c⁄ã¡*)
t
;

570 
hc
 = 
	`hc_íåõs
(
f
->
íåy_ˇ∑côy
);

571 
f
->
√xt_avaû
 = 
avaû_åì_èbÀ
[
hc
];

572 
avaû_åì_èbÀ
[
hc
] = 
f
;

573 
	}
}

575 
	$ªÀa£_åì_c⁄ã¡_ªcursive
(
åì_c⁄ã¡
 *
t
)

577 
i
;

578 
i
 = 0; i < 
t
->
íåy_cou¡
; i++)

579 
	`ªÀa£_åì_íåy
(
t
->
íåõs
[
i
]);

580 
	`ªÀa£_åì_c⁄ã¡
(
t
);

581 
	}
}

583 
åì_c⁄ã¡
 *
	$grow_åì_c⁄ã¡
(

584 
åì_c⁄ã¡
 *
t
,

585 
amt
)

587 
åì_c⁄ã¡
 *
r
 = 
	`√w_åì_c⁄ã¡
(
t
->
íåy_cou¡
 + 
amt
);

588 
r
->
íåy_cou¡
 = 
t
->entry_count;

589 
r
->
dñè_dïth
 = 
t
->delta_depth;

590 
	`mem˝y
(
r
->
íåõs
,
t
->íåõs,t->
íåy_cou¡
*(t->entries[0]));

591 
	`ªÀa£_åì_c⁄ã¡
(
t
);

592  
r
;

593 
	}
}

595 
åì_íåy
 *
	$√w_åì_íåy
()

597 
åì_íåy
 *
e
;

599 i‡(!
avaû_åì_íåy
) {

600 
n
 = 
åì_íåy_Æloc
;

601 
tŸÆ_Ælocd
 +
n
 * (
åì_íåy
);

602 
avaû_åì_íåy
 = 
e
 = 
	`xmÆloc
(
n
 * (
åì_íåy
));

603 
n
-- > 1) {

604 *((**)
e
) =É + 1;

605 
e
++;

607 *((**)
e
Ë
NULL
;

610 
e
 = 
avaû_åì_íåy
;

611 
avaû_åì_íåy
 = *((**)
e
);

612  
e
;

613 
	}
}

615 
	$ªÀa£_åì_íåy
(
åì_íåy
 *
e
)

617 i‡(
e
->
åì
)

618 
	`ªÀa£_åì_c⁄ã¡_ªcursive
(
e
->
åì
);

619 *((**)
e
Ë
avaû_åì_íåy
;

620 
avaû_åì_íåy
 = 
e
;

621 
	}
}

623 
	$°¨t_∑ckfûe
()

625 
tmpfûe
[
PATH_MAX
];

626 
∑cked_gô
 *
p
;

627 
∑ck_hódî
 
hdr
;

628 
∑ck_fd
;

630 
	`¢¥ötf
(
tmpfûe
, (tmpfile),

631 "%s/∑ck_XXXXXX", 
	`gë_obje˘_dúe˘‹y
());

632 
∑ck_fd
 = 
	`mk°emp
(
tmpfûe
);

633 i‡(
∑ck_fd
 < 0)

634 
	`dõ
("C™'à¸óã %s: %s", 
tmpfûe
, 
	`°ªº‹
(
î∫o
));

635 
p
 = 
	`xˇŒoc
(1, (*pË+ 
	`°æí
(
tmpfûe
) + 2);

636 
	`°r˝y
(
p
->
∑ck_«me
, 
tmpfûe
);

637 
p
->
∑ck_fd
 =Öack_fd;

639 
hdr
.
hdr_sig«tuª
 = 
	`ht⁄l
(
PACK_SIGNATURE
);

640 
hdr
.
hdr_vîsi⁄
 = 
	`ht⁄l
(2);

641 
hdr
.
hdr_íåõs
 = 0;

642 
	`wrôe_‹_dõ
(
p
->
∑ck_fd
, &
hdr
, (hdr));

644 
∑ck_d©a
 = 
p
;

645 
∑ck_size
 = (
hdr
);

646 
obje˘_cou¡
 = 0;

648 
Æl_∑cks
 = 
	`xªÆloc
◊Œ_∑cks, (*Æl_∑cksË* (
∑ck_id
 + 1));

649 
Æl_∑cks
[
∑ck_id
] = 
p
;

650 
	}
}

652 
	$fixup_hódî_foŸî
()

654 c⁄° 
buf_sz
 = 128 * 1024;

655 
∑ck_fd
 = 
∑ck_d©a
->pack_fd;

656 
SHA_CTX
 
c
;

657 
∑ck_hódî
 
hdr
;

658 *
buf
;

660 i‡(
	`l£ek
(
∑ck_fd
, 0, 
SEEK_SET
) != 0)

661 
	`dõ
("Faûed sìkögÅÿ°¨t: %s", 
	`°ªº‹
(
î∫o
));

662 i‡(
	`ªad_ö_fuŒ
(
∑ck_fd
, &
hdr
, (hdr)) != (hdr))

663 
	`dõ
("U«bÀÅÿªªad hódî o‡%s", 
∑ck_d©a
->
∑ck_«me
);

664 i‡(
	`l£ek
(
∑ck_fd
, 0, 
SEEK_SET
) != 0)

665 
	`dõ
("Faûed sìkögÅÿ°¨t: %s", 
	`°ªº‹
(
î∫o
));

666 
hdr
.
hdr_íåõs
 = 
	`ht⁄l
(
obje˘_cou¡
);

667 
	`wrôe_‹_dõ
(
∑ck_fd
, &
hdr
, (hdr));

669 
	`SHA1_Inô
(&
c
);

670 
	`SHA1_Upd©e
(&
c
, &
hdr
, (hdr));

672 
buf
 = 
	`xmÆloc
(
buf_sz
);

674 
size_t
 
n
 = 
	`xªad
(
∑ck_fd
, 
buf
, 
buf_sz
);

675 i‡(!
n
)

677 i‡(
n
 < 0)

678 
	`dõ
("FaûedÅÿchecksum %s", 
∑ck_d©a
->
∑ck_«me
);

679 
	`SHA1_Upd©e
(&
c
, 
buf
, 
n
);

681 
	`‰ì
(
buf
);

683 
	`SHA1_FöÆ
(
∑ck_d©a
->
sha1
, &
c
);

684 
	`wrôe_‹_dõ
(
∑ck_fd
, 
∑ck_d©a
->
sha1
, (pack_data->sha1));

685 
	`˛o£
(
∑ck_fd
);

686 
	}
}

688 
	$€cmp
 (c⁄° *
a_
, c⁄° *
b_
)

690 
obje˘_íåy
 *
a
 = *((obje˘_íåy**)
a_
);

691 
obje˘_íåy
 *
b
 = *((obje˘_íåy**)
b_
);

692  
	`hashcmp
(
a
->
sha1
, 
b
->sha1);

693 
	}
}

695 *
	$¸óã_ödex
()

697 
tmpfûe
[
PATH_MAX
];

698 
SHA_CTX
 
˘x
;

699 
sha1fûe
 *
f
;

700 
obje˘_íåy
 **
idx
, **
c
, **
œ°
, *
e
;

701 
obje˘_íåy_poﬁ
 *
o
;

702 
uöt32_t
 
¨øy
[256];

703 
i
, 
idx_fd
;

706 
idx
 = 
	`xmÆloc
(
obje˘_cou¡
 * (
obje˘_íåy
*));

707 
c
 = 
idx
;

708 
o
 = 
blocks
; o; o = o->
√xt_poﬁ
)

709 
e
 = 
o
->
√xt_‰ì
;É-- !o->
íåõs
;)

710 i‡(
∑ck_id
 =
e
->pack_id)

711 *
c
++ = 
e
;

712 
œ°
 = 
idx
 + 
obje˘_cou¡
;

713 i‡(
c
 !
œ°
)

714 
	`dõ
("internal consistencyÉrror creatingÅhe index");

715 
	`qs‹t
(
idx
, 
obje˘_cou¡
, (
obje˘_íåy
*), 
€cmp
);

718 
c
 = 
idx
;

719 
i
 = 0; i < 256; i++) {

720 
obje˘_íåy
 **
√xt
 = 
c
;;

721 
√xt
 < 
œ°
) {

722 i‡((*
√xt
)->
sha1
[0] !
i
)

724 
√xt
++;

726 
¨øy
[
i
] = 
	`ht⁄l
(
√xt
 - 
idx
);

727 
c
 = 
√xt
;

730 
	`¢¥ötf
(
tmpfûe
, (tmpfile),

731 "%s/ödex_XXXXXX", 
	`gë_obje˘_dúe˘‹y
());

732 
idx_fd
 = 
	`mk°emp
(
tmpfûe
);

733 i‡(
idx_fd
 < 0)

734 
	`dõ
("C™'à¸óã %s: %s", 
tmpfûe
, 
	`°ªº‹
(
î∫o
));

735 
f
 = 
	`sha1fd
(
idx_fd
, 
tmpfûe
);

736 
	`sha1wrôe
(
f
, 
¨øy
, 256 * ());

737 
	`SHA1_Inô
(&
˘x
);

738 
c
 = 
idx
; c !
œ°
; c++) {

739 
uöt32_t
 
off£t
 = 
	`ht⁄l
((*
c
)->offset);

740 
	`sha1wrôe
(
f
, &
off£t
, 4);

741 
	`sha1wrôe
(
f
, (*
c
)->
sha1
, ((*c)->sha1));

742 
	`SHA1_Upd©e
(&
˘x
, (*
c
)->
sha1
, 20);

744 
	`sha1wrôe
(
f
, 
∑ck_d©a
->
sha1
, (pack_data->sha1));

745 
	`sha1˛o£
(
f
, 
NULL
, 1);

746 
	`‰ì
(
idx
);

747 
	`SHA1_FöÆ
(
∑ck_d©a
->
sha1
, &
˘x
);

748  
tmpfûe
;

749 
	}
}

751 *
	$kìp_∑ck
(*
cuº_ödex_«me
)

753 
«me
[
PATH_MAX
];

754 *
kìp_msg
 = "fast-import";

755 
kìp_fd
;

757 
	`chmod
(
∑ck_d©a
->
∑ck_«me
, 0444);

758 
	`chmod
(
cuº_ödex_«me
, 0444);

760 
	`¢¥ötf
(
«me
, (name), "%s/pack/pack-%s.keep",

761 
	`gë_obje˘_dúe˘‹y
(), 
	`sha1_to_hex
(
∑ck_d©a
->
sha1
));

762 
kìp_fd
 = 
	`›í
(
«me
, 
O_RDWR
|
O_CREAT
|
O_EXCL
, 0600);

763 i‡(
kìp_fd
 < 0)

764 
	`dõ
("cannot create keep file");

765 
	`wrôe
(
kìp_fd
, 
kìp_msg
, 
	`°æí
(keep_msg));

766 
	`˛o£
(
kìp_fd
);

768 
	`¢¥ötf
(
«me
, (name), "%s/pack/pack-%s.pack",

769 
	`gë_obje˘_dúe˘‹y
(), 
	`sha1_to_hex
(
∑ck_d©a
->
sha1
));

770 i‡(
	`move_ãmp_to_fûe
(
∑ck_d©a
->
∑ck_«me
, 
«me
))

771 
	`dõ
("cannot storeÖack file");

773 
	`¢¥ötf
(
«me
, (name), "%s/pack/pack-%s.idx",

774 
	`gë_obje˘_dúe˘‹y
(), 
	`sha1_to_hex
(
∑ck_d©a
->
sha1
));

775 i‡(
	`move_ãmp_to_fûe
(
cuº_ödex_«me
, 
«me
))

776 
	`dõ
("cannot store index file");

777  
«me
;

778 
	}
}

780 
	$unkìp_Æl_∑cks
()

782 
«me
[
PATH_MAX
];

783 
k
;

785 
k
 = 0; k < 
∑ck_id
; k++) {

786 
∑cked_gô
 *
p
 = 
Æl_∑cks
[
k
];

787 
	`¢¥ötf
(
«me
, (name), "%s/pack/pack-%s.keep",

788 
	`gë_obje˘_dúe˘‹y
(), 
	`sha1_to_hex
(
p
->
sha1
));

789 
	`u∆ök
(
«me
);

791 
	}
}

793 
	$íd_∑ckfûe
()

795 
∑cked_gô
 *
ﬁd_p
 = 
∑ck_d©a
, *
√w_p
;

797 i‡(
obje˘_cou¡
) {

798 *
idx_«me
;

799 
i
;

800 
bønch
 *
b
;

801 
èg
 *
t
;

803 
	`fixup_hódî_foŸî
();

804 
idx_«me
 = 
	`kìp_∑ck
(
	`¸óã_ödex
());

807 
√w_p
 = 
	`add_∑cked_gô
(
idx_«me
, 
	`°æí
(idx_name), 1);

808 i‡(!
√w_p
)

809 
	`dõ
("c‹êgôÑeje˘ed index %s", 
idx_«me
);

810 
√w_p
->
wödows
 = 
ﬁd_p
->windows;

811 
Æl_∑cks
[
∑ck_id
] = 
√w_p
;

812 
	`ö°Æl_∑cked_gô
(
√w_p
);

815 i‡(
∑ck_edges
) {

816 
	`Ârötf
(
∑ck_edges
, "%s:", 
√w_p
->
∑ck_«me
);

817 
i
 = 0; i < 
bønch_èbÀ_sz
; i++) {

818 
b
 = 
bønch_èbÀ
[
i
]; b; b = b->
èbÀ_√xt_bønch
) {

819 i‡(
b
->
∑ck_id
 ==Öack_id)

820 
	`Ârötf
(
∑ck_edges
, " %s", 
	`sha1_to_hex
(
b
->
sha1
));

823 
t
 = 
fú°_èg
;Å;Å =Å->
√xt_èg
) {

824 i‡(
t
->
∑ck_id
 ==Öack_id)

825 
	`Ârötf
(
∑ck_edges
, " %s", 
	`sha1_to_hex
(
t
->
sha1
));

827 
	`Âutc
('\n', 
∑ck_edges
);

828 
	`fÊush
(
∑ck_edges
);

831 
∑ck_id
++;

834 
	`u∆ök
(
ﬁd_p
->
∑ck_«me
);

835 
	`‰ì
(
ﬁd_p
);

838 
	`‰ì
(
œ°_blob
.
d©a
);

839 
œ°_blob
.
d©a
 = 
NULL
;

840 
œ°_blob
.
Àn
 = 0;

841 
œ°_blob
.
off£t
 = 0;

842 
œ°_blob
.
dïth
 = 0;

843 
	}
}

845 
	$cy˛e_∑ckfûe
()

847 
	`íd_∑ckfûe
();

848 
	`°¨t_∑ckfûe
();

849 
	}
}

851 
size_t
 
	$ícode_hódî
(

852 
obje˘_ty≥
 
ty≥
,

853 
size_t
 
size
,

854 *
hdr
)

856 
n
 = 1;

857 
c
;

859 i‡(
ty≥
 < 
OBJ_COMMIT
 ||Åy≥ > 
OBJ_REF_DELTA
)

860 
	`dõ
("badÅy≥ %d", 
ty≥
);

862 
c
 = (
ty≥
 << 4Ë| (
size
 & 15);

863 
size
 >>= 4;

864 
size
) {

865 *
hdr
++ = 
c
 | 0x80;

866 
c
 = 
size
 & 0x7f;

867 
size
 >>= 7;

868 
n
++;

870 *
hdr
 = 
c
;

871  
n
;

872 
	}
}

874 
	$°‹e_obje˘
(

875 
obje˘_ty≥
 
ty≥
,

876 *
d©
,

877 
size_t
 
d©Àn
,

878 
œ°_obje˘
 *
œ°
,

879 *
sha1out
,

880 
uötmax_t
 
m¨k
)

882 *
out
, *
dñè
;

883 
obje˘_íåy
 *
e
;

884 
hdr
[96];

885 
sha1
[20];

886 
hdæí
, 
dñèÀn
;

887 
SHA_CTX
 
c
;

888 
z_°ªam
 
s
;

890 
hdæí
 = 
	`•rötf
((*)
hdr
,"%†%lu", 
ty≥_«mes
[
ty≥
],

891 ()
d©Àn
) + 1;

892 
	`SHA1_Inô
(&
c
);

893 
	`SHA1_Upd©e
(&
c
, 
hdr
, 
hdæí
);

894 
	`SHA1_Upd©e
(&
c
, 
d©
, 
d©Àn
);

895 
	`SHA1_FöÆ
(
sha1
, &
c
);

896 i‡(
sha1out
)

897 
	`hash˝y
(
sha1out
, 
sha1
);

899 
e
 = 
	`ö£π_obje˘
(
sha1
);

900 i‡(
m¨k
)

901 
	`ö£π_m¨k
(
m¨k
, 
e
);

902 i‡(
e
->
off£t
) {

903 
du∂iˇã_cou¡_by_ty≥
[
ty≥
]++;

907 i‡(
œ°
 &&Üa°->
d©a
 &&Üa°->
dïth
 < 
max_dïth
) {

908 
dñè
 = 
	`diff_dñè
(
œ°
->
d©a
,Üa°->
Àn
,

909 
d©
, 
d©Àn
,

910 &
dñèÀn
, 0);

911 i‡(
dñè
 && 
dñèÀn
 >
d©Àn
) {

912 
	`‰ì
(
dñè
);

913 
dñè
 = 
NULL
;

916 
dñè
 = 
NULL
;

918 
	`mem£t
(&
s
, 0, (s));

919 
	`deÊ©eInô
(&
s
, 
zlib_com¥essi⁄_Àvñ
);

920 i‡(
dñè
) {

921 
s
.
√xt_ö
 = 
dñè
;

922 
s
.
avaû_ö
 = 
dñèÀn
;

924 
s
.
√xt_ö
 = 
d©
;

925 
s
.
avaû_ö
 = 
d©Àn
;

927 
s
.
avaû_out
 = 
	`deÊ©eBound
(&s, s.
avaû_ö
);

928 
s
.
√xt_out
 = 
out
 = 
	`xmÆloc
(s.
avaû_out
);

929 
	`deÊ©e
(&
s
, 
Z_FINISH
Ë=
Z_OK
)

931 
	`deÊ©eEnd
(&
s
);

934 i‡((
∑ck_size
 + 60 + 
s
.
tŸÆ_out
Ë> 
max_∑cksize


935 || (
∑ck_size
 + 60 + 
s
.
tŸÆ_out
) <Öack_size) {

938 
e
->
∑ck_id
 =Öack_id + 1;

939 
	`cy˛e_∑ckfûe
();

942 i‡(
dñè
) {

943 
	`‰ì
(
dñè
);

944 
dñè
 = 
NULL
;

946 
	`mem£t
(&
s
, 0, (s));

947 
	`deÊ©eInô
(&
s
, 
zlib_com¥essi⁄_Àvñ
);

948 
s
.
√xt_ö
 = 
d©
;

949 
s
.
avaû_ö
 = 
d©Àn
;

950 
s
.
avaû_out
 = 
	`deÊ©eBound
(&s, s.
avaû_ö
);

951 
s
.
√xt_out
 = 
out
 = 
	`xªÆloc
(out, s.
avaû_out
);

952 
	`deÊ©e
(&
s
, 
Z_FINISH
Ë=
Z_OK
)

954 
	`deÊ©eEnd
(&
s
);

958 
e
->
ty≥
 =Åype;

959 
e
->
∑ck_id
 =Öack_id;

960 
e
->
off£t
 = 
∑ck_size
;

961 
obje˘_cou¡
++;

962 
obje˘_cou¡_by_ty≥
[
ty≥
]++;

964 i‡(
dñè
) {

965 
ofs
 = 
e
->
off£t
 - 
œ°
->offset;

966 
pos
 = (
hdr
) - 1;

968 
dñè_cou¡_by_ty≥
[
ty≥
]++;

969 
œ°
->
dïth
++;

971 
hdæí
 = 
	`ícode_hódî
(
OBJ_OFS_DELTA
, 
dñèÀn
, 
hdr
);

972 
	`wrôe_‹_dõ
(
∑ck_d©a
->
∑ck_fd
, 
hdr
, 
hdæí
);

973 
∑ck_size
 +
hdæí
;

975 
hdr
[
pos
] = 
ofs
 & 127;

976 
ofs
 >>= 7)

977 
hdr
[--
pos
] = 128 | (--
ofs
 & 127);

978 
	`wrôe_‹_dõ
(
∑ck_d©a
->
∑ck_fd
, 
hdr
 + 
pos
, (hdr) -Öos);

979 
∑ck_size
 +(
hdr
Ë- 
pos
;

981 i‡(
œ°
)

982 
œ°
->
dïth
 = 0;

983 
hdæí
 = 
	`ícode_hódî
(
ty≥
, 
d©Àn
, 
hdr
);

984 
	`wrôe_‹_dõ
(
∑ck_d©a
->
∑ck_fd
, 
hdr
, 
hdæí
);

985 
∑ck_size
 +
hdæí
;

988 
	`wrôe_‹_dõ
(
∑ck_d©a
->
∑ck_fd
, 
out
, 
s
.
tŸÆ_out
);

989 
∑ck_size
 +
s
.
tŸÆ_out
;

991 
	`‰ì
(
out
);

992 
	`‰ì
(
dñè
);

993 i‡(
œ°
) {

994 i‡(!
œ°
->
no_‰ì
)

995 
	`‰ì
(
œ°
->
d©a
);

996 
œ°
->
d©a
 = 
d©
;

997 
œ°
->
off£t
 = 
e
->offset;

998 
œ°
->
Àn
 = 
d©Àn
;

1001 
	}
}

1003 *
	$gfi_u≈ack_íåy
(

1004 
obje˘_íåy
 *
€
,

1005 *
sizï
)

1007 
ty≥
[20];

1008 
∑cked_gô
 *
p
 = 
Æl_∑cks
[
€
->
∑ck_id
];

1009 i‡(
p
 =
∑ck_d©a
)

1010 
p
->
∑ck_size
 =Öack_size + 20;

1011  
	`u≈ack_íåy
(
p
, 
€
->
off£t
, 
ty≥
, 
sizï
);

1012 
	}
}

1014 c⁄° *
	$gë_mode
(c⁄° *
°r
, 
uöt16_t
 *
modï
)

1016 
c
;

1017 
uöt16_t
 
mode
 = 0;

1019 (
c
 = *
°r
++) != ' ') {

1020 i‡(
c
 < '0' || c > '7')

1021  
NULL
;

1022 
mode
 = (modê<< 3Ë+ (
c
 - '0');

1024 *
modï
 = 
mode
;

1025  
°r
;

1026 
	}
}

1028 
	$lﬂd_åì
(
åì_íåy
 *
roŸ
)

1030 * 
sha1
 = 
roŸ
->
vîsi⁄s
[1].sha1;

1031 
obje˘_íåy
 *
my€
;

1032 
åì_c⁄ã¡
 *
t
;

1033 
size
;

1034 *
buf
;

1035 c⁄° *
c
;

1037 
roŸ
->
åì
 = 
t
 = 
	`√w_åì_c⁄ã¡
(8);

1038 i‡(
	`is_nuŒ_sha1
(
sha1
))

1041 
my€
 = 
	`föd_obje˘
(
sha1
);

1042 i‡(
my€
) {

1043 i‡(
my€
->
ty≥
 !
OBJ_TREE
)

1044 
	`dõ
("NŸáÅªe: %s", 
	`sha1_to_hex
(
sha1
));

1045 
t
->
dñè_dïth
 = 0;

1046 
buf
 = 
	`gfi_u≈ack_íåy
(
my€
, &
size
);

1048 
ty≥
[20];

1049 
buf
 = 
	`ªad_sha1_fûe
(
sha1
, 
ty≥
, &
size
);

1050 i‡(!
buf
 || 
	`°rcmp
(
ty≥
, 
åì_ty≥
))

1051 
	`dõ
("C™'àlﬂdÅªê%s", 
	`sha1_to_hex
(
sha1
));

1054 
c
 = 
buf
;

1055 
c
 !(
buf
 + 
size
)) {

1056 
åì_íåy
 *
e
 = 
	`√w_åì_íåy
();

1058 i‡(
t
->
íåy_cou¡
 =t->
íåy_ˇ∑côy
)

1059 
roŸ
->
åì
 = 
t
 = 
	`grow_åì_c⁄ã¡
(t, 8);

1060 
t
->
íåõs
[t->
íåy_cou¡
++] = 
e
;

1062 
e
->
åì
 = 
NULL
;

1063 
c
 = 
	`gë_mode
(c, &
e
->
vîsi⁄s
[1].
mode
);

1064 i‡(!
c
)

1065 
	`dõ
("C‹ru± modêö %s", 
	`sha1_to_hex
(
sha1
));

1066 
e
->
vîsi⁄s
[0].
mode
 =É->versions[1].mode;

1067 
e
->
«me
 = 
	`to_©om
(
c
, ()
	`°æí
(c));

1068 
c
 +
e
->
«me
->
°r_Àn
 + 1;

1069 
	`hash˝y
(
e
->
vîsi⁄s
[0].
sha1
, (*)
c
);

1070 
	`hash˝y
(
e
->
vîsi⁄s
[1].
sha1
, (*)
c
);

1071 
c
 += 20;

1073 
	`‰ì
(
buf
);

1074 
	}
}

1076 
	$ãcmp0
 (c⁄° *
_a
, c⁄° *
_b
)

1078 
åì_íåy
 *
a
 = *((åì_íåy**)
_a
);

1079 
åì_íåy
 *
b
 = *((åì_íåy**)
_b
);

1080  
	`ba£_«me_com∑ª
(

1081 
a
->
«me
->
°r_d©
,á->«me->
°r_Àn
,á->
vîsi⁄s
[0].
mode
,

1082 
b
->
«me
->
°r_d©
, b->«me->
°r_Àn
, b->
vîsi⁄s
[0].
mode
);

1083 
	}
}

1085 
	$ãcmp1
 (c⁄° *
_a
, c⁄° *
_b
)

1087 
åì_íåy
 *
a
 = *((åì_íåy**)
_a
);

1088 
åì_íåy
 *
b
 = *((åì_íåy**)
_b
);

1089  
	`ba£_«me_com∑ª
(

1090 
a
->
«me
->
°r_d©
,á->«me->
°r_Àn
,á->
vîsi⁄s
[1].
mode
,

1091 
b
->
«me
->
°r_d©
, b->«me->
°r_Àn
, b->
vîsi⁄s
[1].
mode
);

1092 
	}
}

1094 
	$mkåì
(
åì_c⁄ã¡
 *
t
,

1095 
v
,

1096 *
szp
,

1097 
dbuf
 *
b
)

1099 
size_t
 
maxÀn
 = 0;

1100 
i
;

1101 *
c
;

1103 i‡(!
v
)

1104 
	`qs‹t
(
t
->
íåõs
,t->
íåy_cou¡
,—->íåõs[0]),
ãcmp0
);

1106 
	`qs‹t
(
t
->
íåõs
,t->
íåy_cou¡
,—->íåõs[0]),
ãcmp1
);

1108 
i
 = 0; i < 
t
->
íåy_cou¡
; i++) {

1109 i‡(
t
->
íåõs
[
i
]->
vîsi⁄s
[
v
].
mode
)

1110 
maxÀn
 +
t
->
íåõs
[
i
]->
«me
->
°r_Àn
 + 34;

1113 
	`size_dbuf
(
b
, 
maxÀn
);

1114 
c
 = 
b
->
buf„r
;

1115 
i
 = 0; i < 
t
->
íåy_cou¡
; i++) {

1116 
åì_íåy
 *
e
 = 
t
->
íåõs
[
i
];

1117 i‡(!
e
->
vîsi⁄s
[
v
].
mode
)

1119 
c
 +
	`•rötf
(c, "%o", ()
e
->
vîsi⁄s
[
v
].
mode
);

1120 *
c
++ = ' ';

1121 
	`°r˝y
(
c
, 
e
->
«me
->
°r_d©
);

1122 
c
 +
e
->
«me
->
°r_Àn
 + 1;

1123 
	`hash˝y
((*)
c
, 
e
->
vîsi⁄s
[
v
].
sha1
);

1124 
c
 += 20;

1126 *
szp
 = 
c
 - (*)
b
->
buf„r
;

1127 
	}
}

1129 
	$°‹e_åì
(
åì_íåy
 *
roŸ
)

1131 
åì_c⁄ã¡
 *
t
 = 
roŸ
->
åì
;

1132 
i
, 
j
, 
dñ
;

1133 
√w_Àn
;

1134 
œ°_obje˘
 
lo
;

1135 
obje˘_íåy
 *
À
;

1137 i‡(!
	`is_nuŒ_sha1
(
roŸ
->
vîsi⁄s
[1].
sha1
))

1140 
i
 = 0; i < 
t
->
íåy_cou¡
; i++) {

1141 i‡(
t
->
íåõs
[
i
]->
åì
)

1142 
	`°‹e_åì
(
t
->
íåõs
[
i
]);

1145 
À
 = 
	`föd_obje˘
(
roŸ
->
vîsi⁄s
[0].
sha1
);

1146 i‡(!
	`S_ISDIR
(
roŸ
->
vîsi⁄s
[0].
mode
)

1147 || !
À


1148 || 
À
->
∑ck_id
 !=Öack_id) {

1149 
lo
.
d©a
 = 
NULL
;

1150 
lo
.
dïth
 = 0;

1152 
	`mkåì
(
t
, 0, &
lo
.
Àn
, &
ﬁd_åì
);

1153 
lo
.
d©a
 = 
ﬁd_åì
.
buf„r
;

1154 
lo
.
off£t
 = 
À
->offset;

1155 
lo
.
dïth
 = 
t
->
dñè_dïth
;

1156 
lo
.
no_‰ì
 = 1;

1159 
	`mkåì
(
t
, 1, &
√w_Àn
, &
√w_åì
);

1160 
	`°‹e_obje˘
(
OBJ_TREE
, 
√w_åì
.
buf„r
, 
√w_Àn
,

1161 &
lo
, 
roŸ
->
vîsi⁄s
[1].
sha1
, 0);

1163 
t
->
dñè_dïth
 = 
lo
.
dïth
;

1164 
i
 = 0, 
j
 = 0, 
dñ
 = 0; i < 
t
->
íåy_cou¡
; i++) {

1165 
åì_íåy
 *
e
 = 
t
->
íåõs
[
i
];

1166 i‡(
e
->
vîsi⁄s
[1].
mode
) {

1167 
e
->
vîsi⁄s
[0].
mode
 =É->versions[1].mode;

1168 
	`hash˝y
(
e
->
vîsi⁄s
[0].
sha1
,É->versions[1].sha1);

1169 
t
->
íåõs
[
j
++] = 
e
;

1171 
	`ªÀa£_åì_íåy
(
e
);

1172 
dñ
++;

1175 
t
->
íåy_cou¡
 -
dñ
;

1176 
	}
}

1178 
	$åì_c⁄ã¡_£t
(

1179 
åì_íåy
 *
roŸ
,

1180 c⁄° *
p
,

1181 c⁄° *
sha1
,

1182 c⁄° 
uöt16_t
 
mode
)

1184 
åì_c⁄ã¡
 *
t
 = 
roŸ
->
åì
;

1185 c⁄° *
¶ash1
;

1186 
i
, 
n
;

1187 
åì_íåy
 *
e
;

1189 
¶ash1
 = 
	`°rchr
(
p
, '/');

1190 i‡(
¶ash1
)

1191 
n
 = 
¶ash1
 - 
p
;

1193 
n
 = 
	`°æí
(
p
);

1195 
i
 = 0; i < 
t
->
íåy_cou¡
; i++) {

1196 
e
 = 
t
->
íåõs
[
i
];

1197 i‡(
e
->
«me
->
°r_Àn
 =
n
 && !
	`°∫cmp
(
p
,É->«me->
°r_d©
,Ç)) {

1198 i‡(!
¶ash1
) {

1199 i‡(
e
->
vîsi⁄s
[1].
mode
 == mode

1200 && !
	`hashcmp
(
e
->
vîsi⁄s
[1].
sha1
, sha1))

1202 
e
->
vîsi⁄s
[1].
mode
 = mode;

1203 
	`hash˝y
(
e
->
vîsi⁄s
[1].
sha1
, sha1);

1204 i‡(
e
->
åì
) {

1205 
	`ªÀa£_åì_c⁄ã¡_ªcursive
(
e
->
åì
);

1206 
e
->
åì
 = 
NULL
;

1208 
	`hash˛r
(
roŸ
->
vîsi⁄s
[1].
sha1
);

1211 i‡(!
	`S_ISDIR
(
e
->
vîsi⁄s
[1].
mode
)) {

1212 
e
->
åì
 = 
	`√w_åì_c⁄ã¡
(8);

1213 
e
->
vîsi⁄s
[1].
mode
 = 
S_IFDIR
;

1215 i‡(!
e
->
åì
)

1216 
	`lﬂd_åì
(
e
);

1217 i‡(
	`åì_c⁄ã¡_£t
(
e
, 
¶ash1
 + 1, 
sha1
, 
mode
)) {

1218 
	`hash˛r
(
roŸ
->
vîsi⁄s
[1].
sha1
);

1225 i‡(
t
->
íåy_cou¡
 =t->
íåy_ˇ∑côy
)

1226 
roŸ
->
åì
 = 
t
 = 
	`grow_åì_c⁄ã¡
(t, 8);

1227 
e
 = 
	`√w_åì_íåy
();

1228 
e
->
«me
 = 
	`to_©om
(
p
, ()
n
);

1229 
e
->
vîsi⁄s
[0].
mode
 = 0;

1230 
	`hash˛r
(
e
->
vîsi⁄s
[0].
sha1
);

1231 
t
->
íåõs
[t->
íåy_cou¡
++] = 
e
;

1232 i‡(
¶ash1
) {

1233 
e
->
åì
 = 
	`√w_åì_c⁄ã¡
(8);

1234 
e
->
vîsi⁄s
[1].
mode
 = 
S_IFDIR
;

1235 
	`åì_c⁄ã¡_£t
(
e
, 
¶ash1
 + 1, 
sha1
, 
mode
);

1237 
e
->
åì
 = 
NULL
;

1238 
e
->
vîsi⁄s
[1].
mode
 = mode;

1239 
	`hash˝y
(
e
->
vîsi⁄s
[1].
sha1
, sha1);

1241 
	`hash˛r
(
roŸ
->
vîsi⁄s
[1].
sha1
);

1243 
	}
}

1245 
	$åì_c⁄ã¡_ªmove
(
åì_íåy
 *
roŸ
, c⁄° *
p
)

1247 
åì_c⁄ã¡
 *
t
 = 
roŸ
->
åì
;

1248 c⁄° *
¶ash1
;

1249 
i
, 
n
;

1250 
åì_íåy
 *
e
;

1252 
¶ash1
 = 
	`°rchr
(
p
, '/');

1253 i‡(
¶ash1
)

1254 
n
 = 
¶ash1
 - 
p
;

1256 
n
 = 
	`°æí
(
p
);

1258 
i
 = 0; i < 
t
->
íåy_cou¡
; i++) {

1259 
e
 = 
t
->
íåõs
[
i
];

1260 i‡(
e
->
«me
->
°r_Àn
 =
n
 && !
	`°∫cmp
(
p
,É->«me->
°r_d©
,Ç)) {

1261 i‡(!
¶ash1
 || !
	`S_ISDIR
(
e
->
vîsi⁄s
[1].
mode
))

1262 
dñ_íåy
;

1263 i‡(!
e
->
åì
)

1264 
	`lﬂd_åì
(
e
);

1265 i‡(
	`åì_c⁄ã¡_ªmove
(
e
, 
¶ash1
 + 1)) {

1266 
n
 = 0;Ç < 
e
->
åì
->
íåy_cou¡
;Ç++) {

1267 i‡(
e
->
åì
->
íåõs
[
n
]->
vîsi⁄s
[1].
mode
) {

1268 
	`hash˛r
(
roŸ
->
vîsi⁄s
[1].
sha1
);

1272 
dñ_íåy
;

1279 
dñ_íåy
:

1280 i‡(
e
->
åì
) {

1281 
	`ªÀa£_åì_c⁄ã¡_ªcursive
(
e
->
åì
);

1282 
e
->
åì
 = 
NULL
;

1284 
e
->
vîsi⁄s
[1].
mode
 = 0;

1285 
	`hash˛r
(
e
->
vîsi⁄s
[1].
sha1
);

1286 
	`hash˛r
(
roŸ
->
vîsi⁄s
[1].
sha1
);

1288 
	}
}

1290 
	$upd©e_bønch
(
bønch
 *
b
)

1292 c⁄° *
msg
 = "fast-import";

1293 
ªf_lock
 *
lock
;

1294 
ﬁd_sha1
[20];

1296 i‡(
	`ªad_ªf
(
b
->
«me
, 
ﬁd_sha1
))

1297 
	`hash˛r
(
ﬁd_sha1
);

1298 
lock
 = 
	`lock_™y_ªf_f‹_upd©e
(
b
->
«me
, 
ﬁd_sha1
);

1299 i‡(!
lock
)

1300  
	`îr‹
("U«bÀÅÿlock %s", 
b
->
«me
);

1301 i‡(!
f‹˚_upd©e
 && !
	`is_nuŒ_sha1
(
ﬁd_sha1
)) {

1302 
commô
 *
ﬁd_cmô
, *
√w_cmô
;

1304 
ﬁd_cmô
 = 
	`lookup_commô_ª„ªn˚_gíéy
(
ﬁd_sha1
, 0);

1305 
√w_cmô
 = 
	`lookup_commô_ª„ªn˚_gíéy
(
b
->
sha1
, 0);

1306 i‡(!
ﬁd_cmô
 || !
√w_cmô
) {

1307 
	`u∆ock_ªf
(
lock
);

1308  
	`îr‹
("Bønch %†i†missög commôs.", 
b
->
«me
);

1311 i‡(!
	`ö_mîge_ba£s
(
ﬁd_cmô
, 
√w_cmô
)) {

1312 
	`u∆ock_ªf
(
lock
);

1313 
	`w¨n
("Not updating %s"

1315 
b
->
«me
, 
	`sha1_to_hex
(b->
sha1
), sha1_to_hex(
ﬁd_sha1
));

1319 i‡(
	`wrôe_ªf_sha1
(
lock
, 
b
->
sha1
, 
msg
) < 0)

1320  
	`îr‹
("U«bÀÅÿupd©ê%s", 
b
->
«me
);

1322 
	}
}

1324 
	$dump_bønches
()

1326 
i
;

1327 
bønch
 *
b
;

1329 
i
 = 0; i < 
bønch_èbÀ_sz
; i++) {

1330 
b
 = 
bønch_èbÀ
[
i
]; b; b = b->
èbÀ_√xt_bønch
)

1331 
Áûuª
 |
	`upd©e_bønch
(
b
);

1333 
	}
}

1335 
	$dump_ègs
()

1337 c⁄° *
msg
 = "fast-import";

1338 
èg
 *
t
;

1339 
ªf_lock
 *
lock
;

1340 
ªf_«me
[
PATH_MAX
];

1342 
t
 = 
fú°_èg
;Å;Å =Å->
√xt_èg
) {

1343 
	`•rötf
(
ªf_«me
, "ègs/%s", 
t
->
«me
);

1344 
lock
 = 
	`lock_ªf_sha1
(
ªf_«me
, 
NULL
);

1345 i‡(!
lock
 || 
	`wrôe_ªf_sha1
÷ock, 
t
->
sha1
, 
msg
) < 0)

1346 
Áûuª
 |
	`îr‹
("U«bÀÅÿupd©ê%s", 
ªf_«me
);

1348 
	}
}

1350 
	$dump_m¨ks_hñ≥r
(
FILE
 *
f
,

1351 
uötmax_t
 
ba£
,

1352 
m¨k_£t
 *
m
)

1354 
uötmax_t
 
k
;

1355 i‡(
m
->
shi·
) {

1356 
k
 = 0; k < 1024; k++) {

1357 i‡(
m
->
d©a
.
£ts
[
k
])

1358 
	`dump_m¨ks_hñ≥r
(
f
, (
ba£
 + 
k
Ë<< 
m
->
shi·
,

1359 
m
->
d©a
.
£ts
[
k
]);

1362 
k
 = 0; k < 1024; k++) {

1363 i‡(
m
->
d©a
.
m¨ked
[
k
])

1364 
	`Ârötf
(
f
, ":%ju %s\n", 
ba£
 + 
k
,

1365 
	`sha1_to_hex
(
m
->
d©a
.
m¨ked
[
k
]->
sha1
));

1368 
	}
}

1370 
	$dump_m¨ks
()

1372 i‡(
m¨k_fûe
)

1374 
FILE
 *
f
 = 
	`f›í
(
m¨k_fûe
, "w");

1375 i‡(
f
) {

1376 
	`dump_m¨ks_hñ≥r
(
f
, 0, 
m¨ks
);

1377 
	`f˛o£
(
f
);

1379 
Áûuª
 |
	`îr‹
("UnableÅo write marks file %s: %s",

1380 
m¨k_fûe
, 
	`°ªº‹
(
î∫o
));

1382 
	}
}

1384 
	$ªad_√xt_comm™d
()

1386 
	`ªad_löe
(&
comm™d_buf
, 
°dö
, '\n');

1387 
	}
}

1389 
	$cmd_m¨k
()

1391 i‡(!
	`°∫cmp
("m¨k :", 
comm™d_buf
.
buf
, 6)) {

1392 
√xt_m¨k
 = 
	`°πoumax
(
comm™d_buf
.
buf
 + 6, 
NULL
, 10);

1393 
	`ªad_√xt_comm™d
();

1396 
√xt_m¨k
 = 0;

1397 
	}
}

1399 *
	$cmd_d©a
 (
size_t
 *
size
)

1401 
size_t
 
Àngth
;

1402 *
buf„r
;

1404 i‡(
	`°∫cmp
("d©®", 
comm™d_buf
.
buf
, 5))

1405 
	`dõ
("Ex≥˘ed 'd©®n' comm™d, found: %s", 
comm™d_buf
.
buf
);

1407 i‡(!
	`°∫cmp
("<<", 
comm™d_buf
.
buf
 + 5, 2)) {

1408 *
ãrm
 = 
	`x°rdup
(
comm™d_buf
.
buf
 + 5 + 2);

1409 
size_t
 
sz
 = 8192, 
ãrm_Àn
 = 
comm™d_buf
.
Àn
 - 5 - 2;

1410 
Àngth
 = 0;

1411 
buf„r
 = 
	`xmÆloc
(
sz
);

1413 
	`ªad_√xt_comm™d
();

1414 i‡(
comm™d_buf
.
eof
)

1415 
	`dõ
("EOF i¿d©®—îmö©‹ '%s'ÇŸ found)", 
ãrm
);

1416 i‡(
ãrm_Àn
 =
comm™d_buf
.
Àn


1417 && !
	`°rcmp
(
ãrm
, 
comm™d_buf
.
buf
))

1419 i‡(
sz
 < (
Àngth
 + 
comm™d_buf
.
Àn
)) {

1420 
sz
 = sz * 3 / 2 + 16;

1421 i‡(
sz
 < (
Àngth
 + 
comm™d_buf
.
Àn
))

1422 
sz
 = 
Àngth
 + 
comm™d_buf
.
Àn
;

1423 
buf„r
 = 
	`xªÆloc
(buf„r, 
sz
);

1425 
	`mem˝y
(
buf„r
 + 
Àngth
,

1426 
comm™d_buf
.
buf
,

1427 
comm™d_buf
.
Àn
 - 1);

1428 
Àngth
 +
comm™d_buf
.
Àn
 - 1;

1429 
buf„r
[
Àngth
++] = '\n';

1431 
	`‰ì
(
ãrm
);

1434 
size_t
 
n
 = 0;

1435 
Àngth
 = 
	`°πoul
(
comm™d_buf
.
buf
 + 5, 
NULL
, 10);

1436 
buf„r
 = 
	`xmÆloc
(
Àngth
);

1437 
n
 < 
Àngth
) {

1438 
size_t
 
s
 = 
	`‰ód
(
buf„r
 + 
n
, 1, 
Àngth
 -Ç, 
°dö
);

1439 i‡(!
s
 && 
	`„of
(
°dö
))

1440 
	`dõ
("EOF in data (%lu bytesÑemaining)",

1441 ()(
Àngth
 - 
n
));

1442 
n
 +
s
;

1446 i‡(
	`fgëc
(
°dö
) != '\n')

1447 
	`dõ
("AnÜf didÇotÅrailÅhe binary dataásÉxpected.");

1449 *
size
 = 
Àngth
;

1450  
buf„r
;

1451 
	}
}

1453 
	$vÆid©e_øw_d©e
(c⁄° *
§c
, *
ªsu…
, 
maxÀn
)

1455 c⁄° *
‹ig_§c
 = 
§c
;

1456 *
ídp
, 
sign
;

1458 
	`°πoul
(
§c
, &
ídp
, 10);

1459 i‡(
ídp
 =
§c
 || *endp != ' ')

1462 
§c
 = 
ídp
 + 1;

1463 i‡(*
§c
 != '-' && *src != '+')

1465 
sign
 = *
§c
;

1467 
	`°πoul
(
§c
 + 1, &
ídp
, 10);

1468 i‡(
ídp
 =
§c
 || *íd∞|| (íd∞- 
‹ig_§c
Ë>
maxÀn
)

1471 
	`°r˝y
(
ªsu…
, 
‹ig_§c
);

1473 
	}
}

1475 *
	$∑r£_idít
(c⁄° *
buf
)

1477 c⁄° *
gt
;

1478 
size_t
 
«me_Àn
;

1479 *
idít
;

1481 
gt
 = 
	`°ºchr
(
buf
, '>');

1482 i‡(!
gt
)

1483 
	`dõ
("Missög > i¿idíà°rög: %s", 
buf
);

1484 
gt
++;

1485 i‡(*
gt
 != ' ')

1486 
	`dõ
("Missög s∑˚á·î > i¿idíà°rög: %s", 
buf
);

1487 
gt
++;

1488 
«me_Àn
 = 
gt
 - 
buf
;

1489 
idít
 = 
	`xmÆloc
(
«me_Àn
 + 24);

1490 
	`°∫˝y
(
idít
, 
buf
, 
«me_Àn
);

1492 
whí•ec
) {

1493 
WHENSPEC_RAW
:

1494 i‡(
	`vÆid©e_øw_d©e
(
gt
, 
idít
 + 
«me_Àn
, 24) < 0)

1495 
	`dõ
("InvÆidÑaw d©ê\"%s\" i¿idít: %s", 
gt
, 
buf
);

1497 
WHENSPEC_RFC2822
:

1498 i‡(
	`∑r£_d©e
(
gt
, 
idít
 + 
«me_Àn
, 24) < 0)

1499 
	`dõ
("InvÆidÑfc2822 d©ê\"%s\" i¿idít: %s", 
gt
, 
buf
);

1501 
WHENSPEC_NOW
:

1502 i‡(
	`°rcmp
("now", 
gt
))

1503 
	`dõ
("D©êö idíàmu° bê'now': %s", 
buf
);

1504 
	`d©e°amp
(
idít
 + 
«me_Àn
, 24);

1508  
idít
;

1509 
	}
}

1511 
	$cmd_√w_blob
()

1513 
size_t
 
l
;

1514 *
d
;

1516 
	`ªad_√xt_comm™d
();

1517 
	`cmd_m¨k
();

1518 
d
 = 
	`cmd_d©a
(&
l
);

1520 i‡(
	`°‹e_obje˘
(
OBJ_BLOB
, 
d
, 
l
, &
œ°_blob
, 
NULL
, 
√xt_m¨k
))

1521 
	`‰ì
(
d
);

1522 
	}
}

1524 
	$u∆ﬂd_⁄e_bønch
()

1526 
cur_a˘ive_bønches


1527 && 
cur_a˘ive_bønches
 >
max_a˘ive_bønches
) {

1528 
mö_commô
 = 
ULONG_MAX
;

1529 
bønch
 *
e
, *
l
 = 
NULL
, *
p
 = NULL;

1531 
e
 = 
a˘ive_bønches
;É;É =É->
a˘ive_√xt_bønch
) {

1532 i‡(
e
->
œ°_commô
 < 
mö_commô
) {

1533 
p
 = 
l
;

1534 
mö_commô
 = 
e
->
œ°_commô
;

1536 
l
 = 
e
;

1539 i‡(
p
) {

1540 
e
 = 
p
->
a˘ive_√xt_bønch
;

1541 
p
->
a˘ive_√xt_bønch
 = 
e
->active_next_branch;

1543 
e
 = 
a˘ive_bønches
;

1544 
a˘ive_bønches
 = 
e
->
a˘ive_√xt_bønch
;

1546 
e
->
a˘ive_√xt_bønch
 = 
NULL
;

1547 i‡(
e
->
bønch_åì
.
åì
) {

1548 
	`ªÀa£_åì_c⁄ã¡_ªcursive
(
e
->
bønch_åì
.
åì
);

1549 
e
->
bønch_åì
.
åì
 = 
NULL
;

1551 
cur_a˘ive_bønches
--;

1553 
	}
}

1555 
	$lﬂd_bønch
(
bønch
 *
b
)

1557 
	`lﬂd_åì
(&
b
->
bønch_åì
);

1558 
b
->
a˘ive_√xt_bønch
 = 
a˘ive_bønches
;

1559 
a˘ive_bønches
 = 
b
;

1560 
cur_a˘ive_bønches
++;

1561 
bønch_lﬂd_cou¡
++;

1562 
	}
}

1564 
	$fûe_ch™ge_m
(
bønch
 *
b
)

1566 c⁄° *
p
 = 
comm™d_buf
.
buf
 + 2;

1567 *
p_uq
;

1568 c⁄° *
ídp
;

1569 
obje˘_íåy
 *
€
 = oe;

1570 
sha1
[20];

1571 
uöt16_t
 
mode
, 
ölöe_d©a
 = 0;

1572 
ty≥
[20];

1574 
p
 = 
	`gë_mode
’, &
mode
);

1575 i‡(!
p
)

1576 
	`dõ
("C‹ru± mode: %s", 
comm™d_buf
.
buf
);

1577 
mode
) {

1578 
S_IFREG
 | 0644:

1579 
S_IFREG
 | 0755:

1580 
S_IFLNK
:

1586 
	`dõ
("C‹ru± mode: %s", 
comm™d_buf
.
buf
);

1589 i‡(*
p
 == ':') {

1590 *
x
;

1591 
€
 = 
	`föd_m¨k
(
	`°πoumax
(
p
 + 1, &
x
, 10));

1592 
	`hash˝y
(
sha1
, 
€
->sha1);

1593 
p
 = 
x
;

1594 } i‡(!
	`°∫cmp
("ölöe", 
p
, 6)) {

1595 
ölöe_d©a
 = 1;

1596 
p
 += 6;

1598 i‡(
	`gë_sha1_hex
(
p
, 
sha1
))

1599 
	`dõ
("InvÆid SHA1: %s", 
comm™d_buf
.
buf
);

1600 
€
 = 
	`föd_obje˘
(
sha1
);

1601 
p
 += 40;

1603 i‡(*
p
++ != ' ')

1604 
	`dõ
("Missög s∑˚á·î SHA1: %s", 
comm™d_buf
.
buf
);

1606 
p_uq
 = 
	`unquŸe_c_°yÀ
(
p
, &
ídp
);

1607 i‡(
p_uq
) {

1608 i‡(*
ídp
)

1609 
	`dõ
("G¨bagêa·îÖ©h in: %s", 
comm™d_buf
.
buf
);

1610 
p
 = 
p_uq
;

1613 i‡(
ölöe_d©a
) {

1614 
size_t
 
l
;

1615 *
d
;

1616 i‡(!
p_uq
)

1617 
p
 = 
p_uq
 = 
	`x°rdup
(p);

1618 
	`ªad_√xt_comm™d
();

1619 
d
 = 
	`cmd_d©a
(&
l
);

1620 i‡(
	`°‹e_obje˘
(
OBJ_BLOB
, 
d
, 
l
, &
œ°_blob
, 
sha1
, 0))

1621 
	`‰ì
(
d
);

1622 } i‡(
€
) {

1623 i‡(
€
->
ty≥
 !
OBJ_BLOB
)

1624 
	`dõ
("Notá blob (actuallyá %s): %s",

1625 
comm™d_buf
.
buf
, 
ty≥_«mes
[
€
->
ty≥
]);

1627 i‡(
	`sha1_obje˘_öfo
(
sha1
, 
ty≥
, 
NULL
))

1628 
	`dõ
("BlobÇŸ found: %s", 
comm™d_buf
.
buf
);

1629 i‡(
	`°rcmp
(
blob_ty≥
, 
ty≥
))

1630 
	`dõ
("Notá blob (actuallyá %s): %s",

1631 
comm™d_buf
.
buf
, 
ty≥
);

1634 
	`åì_c⁄ã¡_£t
(&
b
->
bønch_åì
, 
p
, 
sha1
, 
S_IFREG
 | 
mode
);

1635 
	`‰ì
(
p_uq
);

1636 
	}
}

1638 
	$fûe_ch™ge_d
(
bønch
 *
b
)

1640 c⁄° *
p
 = 
comm™d_buf
.
buf
 + 2;

1641 *
p_uq
;

1642 c⁄° *
ídp
;

1644 
p_uq
 = 
	`unquŸe_c_°yÀ
(
p
, &
ídp
);

1645 i‡(
p_uq
) {

1646 i‡(*
ídp
)

1647 
	`dõ
("G¨bagêa·îÖ©h in: %s", 
comm™d_buf
.
buf
);

1648 
p
 = 
p_uq
;

1650 
	`åì_c⁄ã¡_ªmove
(&
b
->
bønch_åì
, 
p
);

1651 
	`‰ì
(
p_uq
);

1652 
	}
}

1654 
	$fûe_ch™ge_dñëóŒ
(
bønch
 *
b
)

1656 
	`ªÀa£_åì_c⁄ã¡_ªcursive
(
b
->
bønch_åì
.
åì
);

1657 
	`hash˛r
(
b
->
bønch_åì
.
vîsi⁄s
[0].
sha1
);

1658 
	`hash˛r
(
b
->
bønch_åì
.
vîsi⁄s
[1].
sha1
);

1659 
	`lﬂd_åì
(&
b
->
bønch_åì
);

1660 
	}
}

1662 
	$cmd_‰om
(
bønch
 *
b
)

1664 c⁄° *
‰om
;

1665 
bønch
 *
s
;

1667 i‡(
	`°∫cmp
("‰om ", 
comm™d_buf
.
buf
, 5))

1670 i‡(
b
->
bønch_åì
.
åì
) {

1671 
	`ªÀa£_åì_c⁄ã¡_ªcursive
(
b
->
bønch_åì
.
åì
);

1672 
b
->
bønch_åì
.
åì
 = 
NULL
;

1675 
‰om
 = 
	`°rchr
(
comm™d_buf
.
buf
, ' ') + 1;

1676 
s
 = 
	`lookup_bønch
(
‰om
);

1677 i‡(
b
 =
s
)

1678 
	`dõ
("C™'à¸óãá bønch from it£lf: %s", 
b
->
«me
);

1679 i‡(
s
) {

1680 *
t
 = 
s
->
bønch_åì
.
vîsi⁄s
[1].
sha1
;

1681 
	`hash˝y
(
b
->
sha1
, 
s
->sha1);

1682 
	`hash˝y
(
b
->
bønch_åì
.
vîsi⁄s
[0].
sha1
, 
t
);

1683 
	`hash˝y
(
b
->
bønch_åì
.
vîsi⁄s
[1].
sha1
, 
t
);

1684 } i‡(*
‰om
 == ':') {

1685 
uötmax_t
 
idnum
 = 
	`°πoumax
(
‰om
 + 1, 
NULL
, 10);

1686 
obje˘_íåy
 *
€
 = 
	`föd_m¨k
(
idnum
);

1687 
size
;

1688 *
buf
;

1689 i‡(
€
->
ty≥
 !
OBJ_COMMIT
)

1690 
	`dõ
("M¨k :%juÇŸá commô", 
idnum
);

1691 
	`hash˝y
(
b
->
sha1
, 
€
->sha1);

1692 
buf
 = 
	`gfi_u≈ack_íåy
(
€
, &
size
);

1693 i‡(!
buf
 || 
size
 < 46)

1694 
	`dõ
("NŸá vÆid commô: %s", 
‰om
);

1695 i‡(
	`memcmp
("åì ", 
buf
, 5)

1696 || 
	`gë_sha1_hex
(
buf
 + 5, 
b
->
bønch_åì
.
vîsi⁄s
[1].
sha1
))

1697 
	`dõ
("Thêcommô %†i†c‹ru±", 
	`sha1_to_hex
(
b
->
sha1
));

1698 
	`‰ì
(
buf
);

1699 
	`hash˝y
(
b
->
bønch_åì
.
vîsi⁄s
[0].
sha1
,

1700 
b
->
bønch_åì
.
vîsi⁄s
[1].
sha1
);

1701 } i‡(!
	`gë_sha1
(
‰om
, 
b
->
sha1
)) {

1702 i‡(
	`is_nuŒ_sha1
(
b
->
sha1
)) {

1703 
	`hash˛r
(
b
->
bønch_åì
.
vîsi⁄s
[0].
sha1
);

1704 
	`hash˛r
(
b
->
bønch_åì
.
vîsi⁄s
[1].
sha1
);

1706 
size
;

1707 *
buf
;

1709 
buf
 = 
	`ªad_obje˘_wôh_ª„ªn˚
(
b
->
sha1
,

1710 
ty≥_«mes
[
OBJ_COMMIT
], &
size
, 
b
->
sha1
);

1711 i‡(!
buf
 || 
size
 < 46)

1712 
	`dõ
("NŸá vÆid commô: %s", 
‰om
);

1713 i‡(
	`memcmp
("åì ", 
buf
, 5)

1714 || 
	`gë_sha1_hex
(
buf
 + 5, 
b
->
bønch_åì
.
vîsi⁄s
[1].
sha1
))

1715 
	`dõ
("Thêcommô %†i†c‹ru±", 
	`sha1_to_hex
(
b
->
sha1
));

1716 
	`‰ì
(
buf
);

1717 
	`hash˝y
(
b
->
bønch_åì
.
vîsi⁄s
[0].
sha1
,

1718 
b
->
bønch_åì
.
vîsi⁄s
[1].
sha1
);

1721 
	`dõ
("InvÆidÑe‡«mê‹ SHA1Éx¥essi⁄: %s", 
‰om
);

1723 
	`ªad_√xt_comm™d
();

1724 
	}
}

1726 
hash_li°
 *
	$cmd_mîge
(*
cou¡
)

1728 
hash_li°
 *
li°
 = 
NULL
, *
n
, *
e
 =É;

1729 c⁄° *
‰om
;

1730 
bønch
 *
s
;

1732 *
cou¡
 = 0;

1733 !
	`°∫cmp
("mîgê", 
comm™d_buf
.
buf
, 6)) {

1734 
‰om
 = 
	`°rchr
(
comm™d_buf
.
buf
, ' ') + 1;

1735 
n
 = 
	`xmÆloc
((*n));

1736 
s
 = 
	`lookup_bønch
(
‰om
);

1737 i‡(
s
)

1738 
	`hash˝y
(
n
->
sha1
, 
s
->sha1);

1739 i‡(*
‰om
 == ':') {

1740 
uötmax_t
 
idnum
 = 
	`°πoumax
(
‰om
 + 1, 
NULL
, 10);

1741 
obje˘_íåy
 *
€
 = 
	`föd_m¨k
(
idnum
);

1742 i‡(
€
->
ty≥
 !
OBJ_COMMIT
)

1743 
	`dõ
("M¨k :%juÇŸá commô", 
idnum
);

1744 
	`hash˝y
(
n
->
sha1
, 
€
->sha1);

1745 } i‡(
	`gë_sha1
(
‰om
, 
n
->
sha1
))

1746 
	`dõ
("InvÆidÑe‡«mê‹ SHA1Éx¥essi⁄: %s", 
‰om
);

1748 
n
->
√xt
 = 
NULL
;

1749 i‡(
li°
)

1750 
e
->
√xt
 = 
n
;

1752 
li°
 = 
n
;

1753 
e
 = 
n
;

1754 (*
cou¡
)++;

1755 
	`ªad_√xt_comm™d
();

1757  
li°
;

1758 
	}
}

1760 
	$cmd_√w_commô
()

1762 
bønch
 *
b
;

1763 *
msg
;

1764 
size_t
 
msgÀn
;

1765 *
•
;

1766 *
auth‹
 = 
NULL
;

1767 *
commôãr
 = 
NULL
;

1768 
hash_li°
 *
mîge_li°
 = 
NULL
;

1769 
mîge_cou¡
;

1772 
•
 = 
	`°rchr
(
comm™d_buf
.
buf
, ' ') + 1;

1773 
b
 = 
	`lookup_bønch
(
•
);

1774 i‡(!
b
)

1775 
b
 = 
	`√w_bønch
(
•
);

1777 
	`ªad_√xt_comm™d
();

1778 
	`cmd_m¨k
();

1779 i‡(!
	`°∫cmp
("auth‹ ", 
comm™d_buf
.
buf
, 7)) {

1780 
auth‹
 = 
	`∑r£_idít
(
comm™d_buf
.
buf
 + 7);

1781 
	`ªad_√xt_comm™d
();

1783 i‡(!
	`°∫cmp
("commôã∏", 
comm™d_buf
.
buf
, 10)) {

1784 
commôãr
 = 
	`∑r£_idít
(
comm™d_buf
.
buf
 + 10);

1785 
	`ªad_√xt_comm™d
();

1787 i‡(!
commôãr
)

1788 
	`dõ
("Expected committer but didn't get one");

1789 
msg
 = 
	`cmd_d©a
(&
msgÀn
);

1790 
	`ªad_√xt_comm™d
();

1791 
	`cmd_‰om
(
b
);

1792 
mîge_li°
 = 
	`cmd_mîge
(&
mîge_cou¡
);

1795 i‡(!
b
->
bønch_åì
.
åì
 || !
max_a˘ive_bønches
) {

1796 
	`u∆ﬂd_⁄e_bønch
();

1797 
	`lﬂd_bønch
(
b
);

1802 i‡(1 =
comm™d_buf
.
Àn
)

1804 i‡(!
	`°∫cmp
("M ", 
comm™d_buf
.
buf
, 2))

1805 
	`fûe_ch™ge_m
(
b
);

1806 i‡(!
	`°∫cmp
("D ", 
comm™d_buf
.
buf
, 2))

1807 
	`fûe_ch™ge_d
(
b
);

1808 i‡(!
	`°rcmp
("dñëóŒ", 
comm™d_buf
.
buf
))

1809 
	`fûe_ch™ge_dñëóŒ
(
b
);

1811 
	`dõ
("Unsuµ‹ãd fûe_ch™ge: %s", 
comm™d_buf
.
buf
);

1812 
	`ªad_√xt_comm™d
();

1816 
	`°‹e_åì
(&
b
->
bønch_åì
);

1817 
	`hash˝y
(
b
->
bønch_åì
.
vîsi⁄s
[0].
sha1
,

1818 
b
->
bønch_åì
.
vîsi⁄s
[1].
sha1
);

1819 
	`size_dbuf
(&
√w_d©a
, 114 + 
msgÀn


1820 + 
mîge_cou¡
 * 49

1821 + (
auth‹


1822 ? 
	`°æí
(
auth‹
Ë+ såÀn(
commôãr
)

1823 : 2 * 
	`°æí
(
commôãr
)));

1824 
•
 = 
√w_d©a
.
buf„r
;

1825 
•
 +
	`•rötf
(sp, "tree %s\n",

1826 
	`sha1_to_hex
(
b
->
bønch_åì
.
vîsi⁄s
[1].
sha1
));

1827 i‡(!
	`is_nuŒ_sha1
(
b
->
sha1
))

1828 
•
 +
	`•rötf
(•, "∑ª¡ %s\n", 
	`sha1_to_hex
(
b
->
sha1
));

1829 
mîge_li°
) {

1830 
hash_li°
 *
√xt
 = 
mîge_li°
->next;

1831 
•
 +
	`•rötf
(•, "∑ª¡ %s\n", 
	`sha1_to_hex
(
mîge_li°
->
sha1
));

1832 
	`‰ì
(
mîge_li°
);

1833 
mîge_li°
 = 
√xt
;

1835 
•
 +
	`•rötf
(•, "auth‹ %s\n", 
auth‹
 ?áuth‹ : 
commôãr
);

1836 
•
 +
	`•rötf
(•, "commôã∏%s\n", 
commôãr
);

1837 *
•
++ = '\n';

1838 
	`mem˝y
(
•
, 
msg
, 
msgÀn
);

1839 
•
 +
msgÀn
;

1840 
	`‰ì
(
auth‹
);

1841 
	`‰ì
(
commôãr
);

1842 
	`‰ì
(
msg
);

1844 i‡(!
	`°‹e_obje˘
(
OBJ_COMMIT
,

1845 
√w_d©a
.
buf„r
, 
•
 - (*)new_data.buffer,

1846 
NULL
, 
b
->
sha1
, 
√xt_m¨k
))

1847 
b
->
∑ck_id
 =Öack_id;

1848 
b
->
œ°_commô
 = 
obje˘_cou¡_by_ty≥
[
OBJ_COMMIT
];

1849 
	}
}

1851 
	$cmd_√w_èg
()

1853 *
•
;

1854 c⁄° *
‰om
;

1855 *
èggî
;

1856 
bønch
 *
s
;

1857 *
msg
;

1858 
size_t
 
msgÀn
;

1859 
èg
 *
t
;

1860 
uötmax_t
 
‰om_m¨k
 = 0;

1861 
sha1
[20];

1864 
•
 = 
	`°rchr
(
comm™d_buf
.
buf
, ' ') + 1;

1865 
t
 = 
	`poﬁ_Æloc
((
èg
));

1866 
t
->
√xt_èg
 = 
NULL
;

1867 
t
->
«me
 = 
	`poﬁ_°rdup
(
•
);

1868 i‡(
œ°_èg
)

1869 
œ°_èg
->
√xt_èg
 = 
t
;

1871 
fú°_èg
 = 
t
;

1872 
œ°_èg
 = 
t
;

1873 
	`ªad_√xt_comm™d
();

1876 i‡(
	`°∫cmp
("‰om ", 
comm™d_buf
.
buf
, 5))

1877 
	`dõ
("Ex≥˘ed from comm™d, gŸ %s", 
comm™d_buf
.
buf
);

1878 
‰om
 = 
	`°rchr
(
comm™d_buf
.
buf
, ' ') + 1;

1879 
s
 = 
	`lookup_bønch
(
‰om
);

1880 i‡(
s
) {

1881 
	`hash˝y
(
sha1
, 
s
->sha1);

1882 } i‡(*
‰om
 == ':') {

1883 
obje˘_íåy
 *
€
;

1884 
‰om_m¨k
 = 
	`°πoumax
(
‰om
 + 1, 
NULL
, 10);

1885 
€
 = 
	`föd_m¨k
(
‰om_m¨k
);

1886 i‡(
€
->
ty≥
 !
OBJ_COMMIT
)

1887 
	`dõ
("M¨k :%juÇŸá commô", 
‰om_m¨k
);

1888 
	`hash˝y
(
sha1
, 
€
->sha1);

1889 } i‡(!
	`gë_sha1
(
‰om
, 
sha1
)) {

1890 
size
;

1891 *
buf
;

1893 
buf
 = 
	`ªad_obje˘_wôh_ª„ªn˚
(
sha1
,

1894 
ty≥_«mes
[
OBJ_COMMIT
], &
size
, 
sha1
);

1895 i‡(!
buf
 || 
size
 < 46)

1896 
	`dõ
("NŸá vÆid commô: %s", 
‰om
);

1897 
	`‰ì
(
buf
);

1899 
	`dõ
("InvÆidÑe‡«mê‹ SHA1Éx¥essi⁄: %s", 
‰om
);

1900 
	`ªad_√xt_comm™d
();

1903 i‡(
	`°∫cmp
("èggî ", 
comm™d_buf
.
buf
, 7))

1904 
	`dõ
("Ex≥˘edÅaggî comm™d, gŸ %s", 
comm™d_buf
.
buf
);

1905 
èggî
 = 
	`∑r£_idít
(
comm™d_buf
.
buf
 + 7);

1908 
	`ªad_√xt_comm™d
();

1909 
msg
 = 
	`cmd_d©a
(&
msgÀn
);

1912 
	`size_dbuf
(&
√w_d©a
, 67+
	`°æí
(
t
->
«me
)+°æí(
èggî
)+
msgÀn
);

1913 
•
 = 
√w_d©a
.
buf„r
;

1914 
•
 +
	`•rötf
(•, "obje˘ %s\n", 
	`sha1_to_hex
(
sha1
));

1915 
•
 +
	`•rötf
(•, "ty≥ %s\n", 
ty≥_«mes
[
OBJ_COMMIT
]);

1916 
•
 +
	`•rötf
(•, "èg %s\n", 
t
->
«me
);

1917 
•
 +
	`•rötf
(•, "èggî %s\n", 
èggî
);

1918 *
•
++ = '\n';

1919 
	`mem˝y
(
•
, 
msg
, 
msgÀn
);

1920 
•
 +
msgÀn
;

1921 
	`‰ì
(
èggî
);

1922 
	`‰ì
(
msg
);

1924 i‡(
	`°‹e_obje˘
(
OBJ_TAG
, 
√w_d©a
.
buf„r
,

1925 
•
 - (*)
√w_d©a
.
buf„r
,

1926 
NULL
, 
t
->
sha1
, 0))

1927 
t
->
∑ck_id
 = 
MAX_PACK_ID
;

1929 
t
->
∑ck_id
 =Öack_id;

1930 
	}
}

1932 
	$cmd_ª£t_bønch
()

1934 
bønch
 *
b
;

1935 *
•
;

1938 
•
 = 
	`°rchr
(
comm™d_buf
.
buf
, ' ') + 1;

1939 
b
 = 
	`lookup_bønch
(
•
);

1940 i‡(
b
) {

1941 
	`hash˛r
(
b
->
sha1
);

1942 
	`hash˛r
(
b
->
bønch_åì
.
vîsi⁄s
[0].
sha1
);

1943 
	`hash˛r
(
b
->
bønch_åì
.
vîsi⁄s
[1].
sha1
);

1944 i‡(
b
->
bønch_åì
.
åì
) {

1945 
	`ªÀa£_åì_c⁄ã¡_ªcursive
(
b
->
bønch_åì
.
åì
);

1946 
b
->
bønch_åì
.
åì
 = 
NULL
;

1950 
b
 = 
	`√w_bønch
(
•
);

1951 
	`ªad_√xt_comm™d
();

1952 
	`cmd_‰om
(
b
);

1953 
	}
}

1955 
	$cmd_checkpoöt
()

1957 i‡(
obje˘_cou¡
) {

1958 
	`cy˛e_∑ckfûe
();

1959 
	`dump_bønches
();

1960 
	`dump_ègs
();

1961 
	`dump_m¨ks
();

1963 
	`ªad_√xt_comm™d
();

1964 
	}
}

1966 c⁄° 
	gÁ°_imp‹t_ußge
[] =

1969 
	$maö
(
¨gc
, c⁄° **
¨gv
)

1971 
i
, 
show_°©s
 = 1;

1973 
	`gô_c⁄fig
(
gô_deÁu…_c⁄fig
);

1975 
i
 = 1; i < 
¨gc
; i++) {

1976 c⁄° *
a
 = 
¨gv
[
i
];

1978 i‡(*
a
 !'-' || !
	`°rcmp
(a, "--"))

1980 i‡(!
	`°∫cmp
(
a
, "--date-format=", 14)) {

1981 c⁄° *
fmt
 = 
a
 + 14;

1982 i‡(!
	`°rcmp
(
fmt
, "raw"))

1983 
whí•ec
 = 
WHENSPEC_RAW
;

1984 i‡(!
	`°rcmp
(
fmt
, "rfc2822"))

1985 
whí•ec
 = 
WHENSPEC_RFC2822
;

1986 i‡(!
	`°rcmp
(
fmt
, "now"))

1987 
whí•ec
 = 
WHENSPEC_NOW
;

1989 
	`dõ
("unknow¿--d©e-f‹m©árgumíà%s", 
fmt
);

1991 i‡(!
	`°∫cmp
(
a
, "--max-pack-size=", 16))

1992 
max_∑cksize
 = 
	`°πoumax
(
a
 + 16, 
NULL
, 0) * 1024 * 1024;

1993 i‡(!
	`°∫cmp
(
a
, "--depth=", 8))

1994 
max_dïth
 = 
	`°πoul
(
a
 + 8, 
NULL
, 0);

1995 i‡(!
	`°∫cmp
(
a
, "--active-branches=", 18))

1996 
max_a˘ive_bønches
 = 
	`°πoul
(
a
 + 18, 
NULL
, 0);

1997 i‡(!
	`°∫cmp
(
a
, "--export-marks=", 15))

1998 
m¨k_fûe
 = 
a
 + 15;

1999 i‡(!
	`°∫cmp
(
a
, "--export-pack-edges=", 20)) {

2000 i‡(
∑ck_edges
)

2001 
	`f˛o£
(
∑ck_edges
);

2002 
∑ck_edges
 = 
	`f›í
(
a
 + 20, "a");

2003 i‡(!
∑ck_edges
)

2004 
	`dõ
("C™nŸ o≥¿%s: %s", 
a
 + 20, 
	`°ªº‹
(
î∫o
));

2005 } i‡(!
	`°rcmp
(
a
, "--force"))

2006 
f‹˚_upd©e
 = 1;

2007 i‡(!
	`°rcmp
(
a
, "--quiet"))

2008 
show_°©s
 = 0;

2009 i‡(!
	`°rcmp
(
a
, "--stats"))

2010 
show_°©s
 = 1;

2012 
	`dõ
("unknow¿›ti⁄ %s", 
a
);

2014 i‡(
i
 !
¨gc
)

2015 
	`ußge
(
Á°_imp‹t_ußge
);

2017 
	`Æloc_obje˘s
(
obje˘_íåy_Æloc
);

2018 
	`°rbuf_öô
(&
comm™d_buf
);

2020 
©om_èbÀ
 = 
	`xˇŒoc
(
©om_èbÀ_sz
, (
©om_°r
*));

2021 
bønch_èbÀ
 = 
	`xˇŒoc
(
bønch_èbÀ_sz
, (
bønch
*));

2022 
avaû_åì_èbÀ
 = 
	`xˇŒoc
(
avaû_åì_èbÀ_sz
, (
avaû_åì_c⁄ã¡
*));

2023 
m¨ks
 = 
	`poﬁ_ˇŒoc
(1, (
m¨k_£t
));

2025 
	`°¨t_∑ckfûe
();

2027 
	`ªad_√xt_comm™d
();

2028 i‡(
comm™d_buf
.
eof
)

2030 i‡(!
	`°rcmp
("blob", 
comm™d_buf
.
buf
))

2031 
	`cmd_√w_blob
();

2032 i‡(!
	`°∫cmp
("commô ", 
comm™d_buf
.
buf
, 7))

2033 
	`cmd_√w_commô
();

2034 i‡(!
	`°∫cmp
("èg ", 
comm™d_buf
.
buf
, 4))

2035 
	`cmd_√w_èg
();

2036 i‡(!
	`°∫cmp
("ª£à", 
comm™d_buf
.
buf
, 6))

2037 
	`cmd_ª£t_bønch
();

2038 i‡(!
	`°rcmp
("checkpoöt", 
comm™d_buf
.
buf
))

2039 
	`cmd_checkpoöt
();

2041 
	`dõ
("Unsuµ‹ãd comm™d: %s", 
comm™d_buf
.
buf
);

2043 
	`íd_∑ckfûe
();

2045 
	`dump_bønches
();

2046 
	`dump_ègs
();

2047 
	`unkìp_Æl_∑cks
();

2048 
	`dump_m¨ks
();

2050 i‡(
∑ck_edges
)

2051 
	`f˛o£
(
∑ck_edges
);

2053 i‡(
show_°©s
) {

2054 
uötmax_t
 
tŸÆ_cou¡
 = 0, 
du∂iˇã_cou¡
 = 0;

2055 
i
 = 0; i < 
	`ARRAY_SIZE
(
obje˘_cou¡_by_ty≥
); i++)

2056 
tŸÆ_cou¡
 +
obje˘_cou¡_by_ty≥
[
i
];

2057 
i
 = 0; i < 
	`ARRAY_SIZE
(
du∂iˇã_cou¡_by_ty≥
); i++)

2058 
du∂iˇã_cou¡
 +
du∂iˇã_cou¡_by_ty≥
[
i
];

2060 
	`Ârötf
(
°dîr
, "%†°©i°ics:\n", 
¨gv
[0]);

2061 
	`Ârötf
(
°dîr
, "---------------------------------------------------------------------\n");

2062 
	`Ârötf
(
°dîr
, "AŒoc'd obje˘s: %10ju\n", 
Æloc_cou¡
);

2063 
	`Ârötf
(
°dîr
, "TŸÆ obje˘s: %10ju (%10ju du∂iˇã† )\n", 
tŸÆ_cou¡
, 
du∂iˇã_cou¡
);

2064 
	`Ârötf
(
°dîr
, " blob† : %10ju (%10ju du∂iˇã†%10ju dñès)\n", 
obje˘_cou¡_by_ty≥
[
OBJ_BLOB
], 
du∂iˇã_cou¡_by_ty≥
[OBJ_BLOB], 
dñè_cou¡_by_ty≥
[OBJ_BLOB]);

2065 
	`Ârötf
(
°dîr
, "Åªe† : %10ju (%10ju du∂iˇã†%10ju dñès)\n", 
obje˘_cou¡_by_ty≥
[
OBJ_TREE
], 
du∂iˇã_cou¡_by_ty≥
[OBJ_TREE], 
dñè_cou¡_by_ty≥
[OBJ_TREE]);

2066 
	`Ârötf
(
°dîr
, " commôs: %10ju (%10ju du∂iˇã†%10ju dñès)\n", 
obje˘_cou¡_by_ty≥
[
OBJ_COMMIT
], 
du∂iˇã_cou¡_by_ty≥
[OBJ_COMMIT], 
dñè_cou¡_by_ty≥
[OBJ_COMMIT]);

2067 
	`Ârötf
(
°dîr
, "Åag† : %10ju (%10ju du∂iˇã†%10ju dñès)\n", 
obje˘_cou¡_by_ty≥
[
OBJ_TAG
], 
du∂iˇã_cou¡_by_ty≥
[OBJ_TAG], 
dñè_cou¡_by_ty≥
[OBJ_TAG]);

2068 
	`Ârötf
(
°dîr
, "TŸÆ bønches: %10lu (%10luÜﬂd† )\n", 
bønch_cou¡
, 
bønch_lﬂd_cou¡
);

2069 
	`Ârötf
(
°dîr
, " m¨ks: %10ju (%10ju uniquê )\n", (((
uötmax_t
)1Ë<< 
m¨ks
->
shi·
Ë* 1024, 
m¨ks_£t_cou¡
);

2070 
	`Ârötf
(
°dîr
, "átoms: %10u\n", 
©om_˙t
);

2071 
	`Ârötf
(
°dîr
, "Mem‹yÅŸÆ: %10ju KiB\n", (
tŸÆ_Ælocd
 + 
Æloc_cou¡
*(
obje˘_íåy
))/1024);

2072 
	`Ârötf
(
°dîr
, "Öoﬁs: %10lu KiB\n", ()(
tŸÆ_Ælocd
/1024));

2073 
	`Ârötf
(
°dîr
, " obje˘s: %10ju KiB\n", (
Æloc_cou¡
*(
obje˘_íåy
))/1024);

2074 
	`Ârötf
(
°dîr
, "---------------------------------------------------------------------\n");

2075 
	`∑ck_ªp‹t
();

2076 
	`Ârötf
(
°dîr
, "---------------------------------------------------------------------\n");

2077 
	`Ârötf
(
°dîr
, "\n");

2080  
Áûuª
 ? 1 : 0;

2081 
	}
}

	@fetch-pack.c

1 
	~"ˇche.h
"

2 
	~"ªfs.h
"

3 
	~"pkt-löe.h
"

4 
	~"commô.h
"

5 
	~"èg.h
"

6 
	~"exec_cmd.h
"

7 
	~"∑ck.h
"

8 
	~"sideb™d.h
"

10 
	gkìp_∑ck
;

11 
	gå™s„r_u≈ack_limô
 = -1;

12 
	g„tch_u≈ack_limô
 = -1;

13 
	gu≈ack_limô
 = 100;

14 
	gquõt
;

15 
	gvîbo£
;

16 
	g„tch_Æl
;

17 
	gdïth
;

18 c⁄° 
	g„tch_∑ck_ußge
[] =

20 c⁄° *
	gu∂ﬂd∑ck
 = "git-upload-pack";

22 
	#COMPLETE
 (1U << 0)

	)

23 
	#COMMON
 (1U << 1)

	)

24 
	#COMMON_REF
 (1U << 2)

	)

25 
	#SEEN
 (1U << 3)

	)

26 
	#POPPED
 (1U << 4)

	)

32 
	#MAX_IN_VAIN
 256

	)

34 
commô_li°
 *
	gªv_li°
;

35 
	gn⁄_comm⁄_ªvs
, 
	gmu…i_ack
, 
	gu£_thö_∑ck
, 
	gu£_sideb™d
;

37 
	$ªv_li°_push
(
commô
 *commô, 
m¨k
)

39 i‡(!(
commô
->
obje˘
.
Êags
 & 
m¨k
)) {

40 
commô
->
obje˘
.
Êags
 |
m¨k
;

42 i‡(!(
commô
->
obje˘
.
∑r£d
))

43 
	`∑r£_commô
(
commô
);

45 
	`ö£π_by_d©e
(
commô
, &
ªv_li°
);

47 i‡(!(
commô
->
obje˘
.
Êags
 & 
COMMON
))

48 
n⁄_comm⁄_ªvs
++;

50 
	}
}

52 
	$ªv_li°_ö£π_ªf
(c⁄° *
∑th
, c⁄° *
sha1
, 
Êag
, *
cb_d©a
)

54 
obje˘
 *
o
 = 
	`dîef_èg
(
	`∑r£_obje˘
(
sha1
), 
∑th
, 0);

56 i‡(
o
 && o->
ty≥
 =
OBJ_COMMIT
)

57 
	`ªv_li°_push
((
commô
 *)
o
, 
SEEN
);

60 
	}
}

68 
	$m¨k_comm⁄
(
commô
 *commit,

69 
™˚°‹s_⁄ly
, 
d⁄t_∑r£
)

71 i‡(
commô
 !
NULL
 && !(commô->
obje˘
.
Êags
 & 
COMMON
)) {

72 
obje˘
 *
o
 = (obje˘ *)
commô
;

74 i‡(!
™˚°‹s_⁄ly
)

75 
o
->
Êags
 |
COMMON
;

77 i‡(!(
o
->
Êags
 & 
SEEN
))

78 
	`ªv_li°_push
(
commô
, 
SEEN
);

80 
commô_li°
 *
∑ª¡s
;

82 i‡(!
™˚°‹s_⁄ly
 && !(
o
->
Êags
 & 
POPPED
))

83 
n⁄_comm⁄_ªvs
--;

84 i‡(!
o
->
∑r£d
 && !
d⁄t_∑r£
)

85 
	`∑r£_commô
(
commô
);

87 
∑ª¡s
 = 
commô
->parents;

88 
∑ª¡s
;

89 
∑ª¡s
 =Ö¨íts->
√xt
)

90 
	`m¨k_comm⁄
(
∑ª¡s
->
ôem
, 0, 
d⁄t_∑r£
);

93 
	}
}

99 c⁄° * 
	$gë_ªv
()

101 
commô
 *commô = 
NULL
;

103 
commô
 =
NULL
) {

104 
m¨k
;

105 
commô_li°
* 
∑ª¡s
;

107 i‡(
ªv_li°
 =
NULL
 || 
n⁄_comm⁄_ªvs
 == 0)

108  
NULL
;

110 
commô
 = 
ªv_li°
->
ôem
;

111 i‡(!(
commô
->
obje˘
.
∑r£d
))

112 
	`∑r£_commô
(
commô
);

113 
commô
->
obje˘
.
Êags
 |
POPPED
;

114 i‡(!(
commô
->
obje˘
.
Êags
 & 
COMMON
))

115 
n⁄_comm⁄_ªvs
--;

117 
∑ª¡s
 = 
commô
->parents;

119 i‡(
commô
->
obje˘
.
Êags
 & 
COMMON
) {

121 
commô
 = 
NULL
;

122 
m¨k
 = 
COMMON
 | 
SEEN
;

123 } i‡(
commô
->
obje˘
.
Êags
 & 
COMMON_REF
)

125 
m¨k
 = 
COMMON
 | 
SEEN
;

128 
m¨k
 = 
SEEN
;

130 
∑ª¡s
) {

131 i‡(!(
∑ª¡s
->
ôem
->
obje˘
.
Êags
 & 
SEEN
))

132 
	`ªv_li°_push
(
∑ª¡s
->
ôem
, 
m¨k
);

133 i‡(
m¨k
 & 
COMMON
)

134 
	`m¨k_comm⁄
(
∑ª¡s
->
ôem
, 1, 0);

135 
∑ª¡s
 =Ö¨íts->
√xt
;

138 
ªv_li°
 =Ñev_li°->
√xt
;

141  
commô
->
obje˘
.
sha1
;

142 
	}
}

144 
	$föd_comm⁄
(
fd
[2], *
ªsu…_sha1
,

145 
ªf
 *
ªfs
)

147 
„tchög
;

148 
cou¡
 = 0, 
Êushes
 = 0, 
ªtvÆ
;

149 c⁄° *
sha1
;

150 
ö_vaö
 = 0;

151 
gŸ_c⁄töue
 = 0;

153 
	`f‹_óch_ªf
(
ªv_li°_ö£π_ªf
, 
NULL
);

155 
„tchög
 = 0;

156  ; 
ªfs
 ;Ñef†ªfs->
√xt
) {

157 *
ªmŸe
 = 
ªfs
->
ﬁd_sha1
;

158 
obje˘
 *
o
;

170 i‡(((
o
 = 
	`lookup_obje˘
(
ªmŸe
)Ë!
NULL
) &&

171 (
o
->
Êags
 & 
COMPLETE
)) {

175 i‡(!
„tchög
)

176 
	`∑ckë_wrôe
(
fd
[1], "want %s%s%s%s%s%s\n",

177 
	`sha1_to_hex
(
ªmŸe
),

178 (
mu…i_ack
 ? " multi_ack" : ""),

179 (
u£_sideb™d
 == 2 ? " side-band-64k" : ""),

180 (
u£_sideb™d
 == 1 ? " side-band" : ""),

181 (
u£_thö_∑ck
 ? "Åhin-pack" : ""),

184 
	`∑ckë_wrôe
(
fd
[1], "w™à%s\n", 
	`sha1_to_hex
(
ªmŸe
));

185 
„tchög
++;

187 i‡(
	`is_ªposô‹y_shÆlow
())

188 
	`wrôe_shÆlow_commôs
(
fd
[1], 1);

189 i‡(
dïth
 > 0)

190 
	`∑ckë_wrôe
(
fd
[1], "dì≥¿%d", 
dïth
);

191 
	`∑ckë_Êush
(
fd
[1]);

192 i‡(!
„tchög
)

195 i‡(
dïth
 > 0) {

196 
löe
[1024];

197 
sha1
[20];

198 
Àn
;

200 (
Àn
 = 
	`∑ckë_ªad_löe
(
fd
[0], 
löe
, (line)))) {

201 i‡(!
	`°∫cmp
("shÆlow ", 
löe
, 8)) {

202 i‡(
	`gë_sha1_hex
(
löe
 + 8, 
sha1
))

203 
	`dõ
("övÆid shÆlowÜöe: %s", 
löe
);

204 
	`ªgi°î_shÆlow
(
sha1
);

207 i‡(!
	`°∫cmp
("unshÆlow ", 
löe
, 10)) {

208 i‡(
	`gë_sha1_hex
(
löe
 + 10, 
sha1
))

209 
	`dõ
("övÆid unshÆlowÜöe: %s", 
löe
);

210 i‡(!
	`lookup_obje˘
(
sha1
))

211 
	`dõ
("obje˘ÇŸ found: %s", 
löe
);

213 
	`∑r£_obje˘
(
sha1
);

214 i‡(
	`uƒegi°î_shÆlow
(
sha1
))

215 
	`dõ
("nÿshÆlow found: %s", 
löe
);

218 
	`dõ
("ex≥˘ed shÆlow/unshÆlow, gŸ %s", 
löe
);

222 
Êushes
 = 0;

223 
ªtvÆ
 = -1;

224 (
sha1
 = 
	`gë_ªv
())) {

225 
	`∑ckë_wrôe
(
fd
[1], "havê%s\n", 
	`sha1_to_hex
(
sha1
));

226 i‡(
vîbo£
)

227 
	`Ârötf
(
°dîr
, "havê%s\n", 
	`sha1_to_hex
(
sha1
));

228 
ö_vaö
++;

229 i‡(!(31 & ++
cou¡
)) {

230 
ack
;

232 
	`∑ckë_Êush
(
fd
[1]);

233 
Êushes
++;

239 i‡(
cou¡
 == 32)

243 
ack
 = 
	`gë_ack
(
fd
[0], 
ªsu…_sha1
);

244 i‡(
vîbo£
 && 
ack
)

245 
	`Ârötf
(
°dîr
, "gŸáck %d %s\n", 
ack
,

246 
	`sha1_to_hex
(
ªsu…_sha1
));

247 i‡(
ack
 == 1) {

248 
Êushes
 = 0;

249 
mu…i_ack
 = 0;

250 
ªtvÆ
 = 0;

251 
d⁄e
;

252 } i‡(
ack
 == 2) {

253 
commô
 *commit =

254 
	`lookup_commô
(
ªsu…_sha1
);

255 
	`m¨k_comm⁄
(
commô
, 0, 1);

256 
ªtvÆ
 = 0;

257 
ö_vaö
 = 0;

258 
gŸ_c⁄töue
 = 1;

260 } 
ack
);

261 
Êushes
--;

262 i‡(
gŸ_c⁄töue
 && 
MAX_IN_VAIN
 < 
ö_vaö
) {

263 i‡(
vîbo£
)

264 
	`Ârötf
(
°dîr
, "giving up\n");

269 
d⁄e
:

270 
	`∑ckë_wrôe
(
fd
[1], "done\n");

271 i‡(
vîbo£
)

272 
	`Ârötf
(
°dîr
, "done\n");

273 i‡(
ªtvÆ
 != 0) {

274 
mu…i_ack
 = 0;

275 
Êushes
++;

277 
Êushes
 || 
mu…i_ack
) {

278 
ack
 = 
	`gë_ack
(
fd
[0], 
ªsu…_sha1
);

279 i‡(
ack
) {

280 i‡(
vîbo£
)

281 
	`Ârötf
(
°dîr
, "gŸáck (%dË%s\n", 
ack
,

282 
	`sha1_to_hex
(
ªsu…_sha1
));

283 i‡(
ack
 == 1)

285 
mu…i_ack
 = 1;

288 
Êushes
--;

290  
ªtvÆ
;

291 
	}
}

293 
commô_li°
 *
	gcom∂ëe
;

295 
	$m¨k_com∂ëe
(c⁄° *
∑th
, c⁄° *
sha1
, 
Êag
, *
cb_d©a
)

297 
obje˘
 *
o
 = 
	`∑r£_obje˘
(
sha1
);

299 
o
 && o->
ty≥
 =
OBJ_TAG
) {

300 
èg
 *
t
 = (èg *Ë
o
;

301 i‡(!
t
->
ègged
)

303 
o
->
Êags
 |
COMPLETE
;

304 
o
 = 
	`∑r£_obje˘
(
t
->
ègged
->
sha1
);

306 i‡(
o
 && o->
ty≥
 =
OBJ_COMMIT
) {

307 
commô
 *commô = (commô *)
o
;

308 
commô
->
obje˘
.
Êags
 |
COMPLETE
;

309 
	`ö£π_by_d©e
(
commô
, &
com∂ëe
);

312 
	}
}

314 
	$m¨k_ª˚¡_com∂ëe_commôs
(
cutoff
)

316 
com∂ëe
 && 
cutoff
 <com∂ëe->
ôem
->
d©e
) {

317 i‡(
vîbo£
)

318 
	`Ârötf
(
°dîr
, "Marking %sás complete\n",

319 
	`sha1_to_hex
(
com∂ëe
->
ôem
->
obje˘
.
sha1
));

320 
	`p›_mo°_ª˚¡_commô
(&
com∂ëe
, 
COMPLETE
);

322 
	}
}

324 
	$fûãr_ªfs
(
ªf
 **
ªfs
, 
ƒ_m©ch
, **
m©ch
)

326 
ªf
 **
ªtu∫_ªfs
;

327 
ªf
 *
√wli°
 = 
NULL
;

328 
ªf
 **
√wèû
 = &
√wli°
;

329 
ªf
 *ªf, *
√xt
;

330 
ªf
 *
Á°¨øy
[32];

332 i‡(
ƒ_m©ch
 && !
„tch_Æl
) {

333 i‡(
	`ARRAY_SIZE
(
Á°¨øy
Ë< 
ƒ_m©ch
)

334 
ªtu∫_ªfs
 = 
	`xˇŒoc
(
ƒ_m©ch
, (
ªf
 *));

336 
ªtu∫_ªfs
 = 
Á°¨øy
;

337 
	`mem£t
(
ªtu∫_ªfs
, 0, (
ªf
 *Ë* 
ƒ_m©ch
);

341 
ªtu∫_ªfs
 = 
NULL
;

343 
ªf
 = *
ªfs
;Ñef;Ñe‡
√xt
) {

344 
√xt
 = 
ªf
->next;

345 i‡(!
	`memcmp
(
ªf
->
«me
, "refs/", 5) &&

346 
	`check_ªf_f‹m©
(
ªf
->
«me
 + 5))

348 i‡(
„tch_Æl
 &&

349 (!
dïth
 || 
	`°∫cmp
(
ªf
->
«me
, "refs/tags/", 10) )) {

350 *
√wèû
 = 
ªf
;

351 
ªf
->
√xt
 = 
NULL
;

352 
√wèû
 = &
ªf
->
√xt
;

356 
‹dî
 = 
	`∑th_m©ch
(
ªf
->
«me
, 
ƒ_m©ch
, 
m©ch
);

357 i‡(
‹dî
) {

358 
ªtu∫_ªfs
[
‹dî
-1] = 
ªf
;

362 
	`‰ì
(
ªf
);

365 i‡(!
„tch_Æl
) {

366 
i
;

367 
i
 = 0; i < 
ƒ_m©ch
; i++) {

368 
ªf
 = 
ªtu∫_ªfs
[
i
];

369 i‡(
ªf
) {

370 *
√wèû
 = 
ªf
;

371 
ªf
->
√xt
 = 
NULL
;

372 
√wèû
 = &
ªf
->
√xt
;

375 i‡(
ªtu∫_ªfs
 !
Á°¨øy
)

376 
	`‰ì
(
ªtu∫_ªfs
);

378 *
ªfs
 = 
√wli°
;

379 
	}
}

381 
	$evîythög_loˇl
(
ªf
 **
ªfs
, 
ƒ_m©ch
, **
m©ch
)

383 
ªf
 *ref;

384 
ªtvÆ
;

385 
cutoff
 = 0;

387 
åack_obje˘_ªfs
 = 0;

388 
ßve_commô_buf„r
 = 0;

390 
ªf
 = *
ªfs
;Ñef;Ñe‡ªf->
√xt
) {

391 
obje˘
 *
o
;

393 
o
 = 
	`∑r£_obje˘
(
ªf
->
ﬁd_sha1
);

394 i‡(!
o
)

401 i‡(
o
->
ty≥
 =
OBJ_COMMIT
) {

402 
commô
 *commô = (commô *)
o
;

403 i‡(!
cutoff
 || cutof‡< 
commô
->
d©e
)

404 
cutoff
 = 
commô
->
d©e
;

408 i‡(!
dïth
) {

409 
	`f‹_óch_ªf
(
m¨k_com∂ëe
, 
NULL
);

410 i‡(
cutoff
)

411 
	`m¨k_ª˚¡_com∂ëe_commôs
(
cutoff
);

418 
ªf
 = *
ªfs
;Ñef;Ñe‡ªf->
√xt
) {

419 
obje˘
 *
o
 = 
	`dîef_èg
(
	`lookup_obje˘
(
ªf
->
ﬁd_sha1
),

420 
NULL
, 0);

422 i‡(!
o
 || o->
ty≥
 !
OBJ_COMMIT
 || !(o->
Êags
 & 
COMPLETE
))

425 i‡(!(
o
->
Êags
 & 
SEEN
)) {

426 
	`ªv_li°_push
((
commô
 *)
o
, 
COMMON_REF
 | 
SEEN
);

428 
	`m¨k_comm⁄
((
commô
 *)
o
, 1, 1);

432 
	`fûãr_ªfs
(
ªfs
, 
ƒ_m©ch
, 
m©ch
);

434 
ªtvÆ
 = 1, 
ªf
 = *
ªfs
;Ñe‡;Ñe‡ªf->
√xt
) {

435 c⁄° *
ªmŸe
 = 
ªf
->
ﬁd_sha1
;

436 
loˇl
[20];

437 
obje˘
 *
o
;

439 
o
 = 
	`lookup_obje˘
(
ªmŸe
);

440 i‡(!
o
 || !(o->
Êags
 & 
COMPLETE
)) {

441 
ªtvÆ
 = 0;

442 i‡(!
vîbo£
)

444 
	`Ârötf
(
°dîr
,

445 "w™à%†(%s)\n", 
	`sha1_to_hex
(
ªmŸe
),

446 
ªf
->
«me
);

450 
	`hash˝y
(
ªf
->
√w_sha1
, 
loˇl
);

451 i‡(!
vîbo£
)

453 
	`Ârötf
(
°dîr
,

454 "Æªady havê%†(%s)\n", 
	`sha1_to_hex
(
ªmŸe
),

455 
ªf
->
«me
);

457  
ªtvÆ
;

458 
	}
}

460 
pid_t
 
	$£tup_sideb™d
(
fd
[2], 
xd
[2])

462 
pid_t
 
side_pid
;

464 i‡(!
u£_sideb™d
) {

465 
fd
[0] = 
xd
[0];

466 
fd
[1] = 
xd
[1];

473 i‡(
	`pùe
(
fd
) < 0)

474 
	`dõ
("fetch-pack: unableÅo set upÖipe");

475 
side_pid
 = 
	`f‹k
();

476 i‡(
side_pid
 < 0)

477 
	`dõ
("fetch-pack: unableÅo fork off sideband demultiplexer");

478 i‡(!
side_pid
) {

480 
	`˛o£
(
fd
[0]);

481 i‡(
xd
[0] != xd[1])

482 
	`˛o£
(
xd
[1]);

483 i‡(
	`ªcv_sideb™d
("„tch-∑ck", 
xd
[0], 
fd
[1], 2))

484 
	`exô
(1);

485 
	`exô
(0);

487 
	`˛o£
(
xd
[0]);

488 
	`˛o£
(
fd
[1]);

489 
fd
[1] = 
xd
[1];

490  
side_pid
;

491 
	}
}

493 
	$gë_∑ck
(
xd
[2])

495 
°©us
;

496 
pid_t
 
pid
, 
side_pid
;

497 
fd
[2];

498 c⁄° *
¨gv
[20];

499 
kìp_¨g
[256];

500 
hdr_¨g
[256];

501 c⁄° **
av
;

502 
do_kìp
 = 
kìp_∑ck
;

504 
side_pid
 = 
	`£tup_sideb™d
(
fd
, 
xd
);

506 
av
 = 
¨gv
;

507 *
hdr_¨g
 = 0;

508 i‡(
u≈ack_limô
) {

509 
∑ck_hódî
 
hódî
;

511 i‡(
	`ªad_∑ck_hódî
(
fd
[0], &
hódî
))

512 
	`dõ
("protocolÉrror: badÖack header");

513 
	`¢¥ötf
(
hdr_¨g
, (hdr_arg), "--pack_header=%u,%u",

514 
	`¡ohl
(
hódî
.
hdr_vîsi⁄
),Çtohl(hódî.
hdr_íåõs
));

515 i‡(
	`¡ohl
(
hódî
.
hdr_íåõs
Ë< 
u≈ack_limô
)

516 
do_kìp
 = 0;

518 
do_kìp
 = 1;

521 i‡(
do_kìp
) {

522 *
av
++ = "index-pack";

523 *
av
++ = "--stdin";

524 i‡(!
quõt
)

525 *
av
++ = "-v";

526 i‡(
u£_thö_∑ck
)

527 *
av
++ = "--fix-thin";

528 i‡(
kìp_∑ck
 > 1 || 
u≈ack_limô
) {

529 
s
 = 
	`•rötf
(
kìp_¨g
,

530 "--kìp=„tch-∑ck %d o¿", 
	`gëpid
());

531 i‡(
	`gëho°«me
(
kìp_¨g
 + 
s
, (keep_arg) - s))

532 
	`°r˝y
(
kìp_¨g
 + 
s
, "localhost");

533 *
av
++ = 
kìp_¨g
;

537 *
av
++ = "unpack-objects";

538 i‡(
quõt
)

539 *
av
++ = "-q";

541 i‡(*
hdr_¨g
)

542 *
av
++ = 
hdr_¨g
;

543 *
av
++ = 
NULL
;

545 
pid
 = 
	`f‹k
();

546 i‡(
pid
 < 0)

547 
	`dõ
("„tch-∑ck: u«bÀÅÿf‹k of‡%s", 
¨gv
[0]);

548 i‡(!
pid
) {

549 
	`dup2
(
fd
[0], 0);

550 
	`˛o£
(
fd
[0]);

551 
	`˛o£
(
fd
[1]);

552 
	`execv_gô_cmd
(
¨gv
);

553 
	`dõ
("%†exe¯Áûed", 
¨gv
[0]);

555 
	`˛o£
(
fd
[0]);

556 
	`˛o£
(
fd
[1]);

557 
	`waôpid
(
pid
, &
°©us
, 0) < 0) {

558 i‡(
î∫o
 !
EINTR
)

559 
	`dõ
("waôög f‹ %s: %s", 
¨gv
[0], 
	`°ªº‹
(
î∫o
));

561 i‡(
	`WIFEXITED
(
°©us
)) {

562 
code
 = 
	`WEXITSTATUS
(
°©us
);

563 i‡(
code
)

564 
	`dõ
("%†dõd wôhÉº‹ codê%d", 
¨gv
[0], 
code
);

567 i‡(
	`WIFSIGNALED
(
°©us
)) {

568 
sig
 = 
	`WTERMSIG
(
°©us
);

569 
	`dõ
("%†dõd o‡sig«»%d", 
¨gv
[0], 
sig
);

571 
	`dõ
("%†dõd o‡u¬©uø»ˇu£†%d", 
¨gv
[0], 
°©us
);

572 
	}
}

574 
	$„tch_∑ck
(
fd
[2], 
ƒ_m©ch
, **
m©ch
)

576 
ªf
 *ref;

577 
sha1
[20];

579 
	`gë_ªmŸe_hóds
(
fd
[0], &
ªf
, 0, 
NULL
, 0);

580 i‡(
	`is_ªposô‹y_shÆlow
(Ë&& !
	`£rvî_suµ‹ts
("shallow"))

581 
	`dõ
("Server doesÇot support shallow clients");

582 i‡(
	`£rvî_suµ‹ts
("multi_ack")) {

583 i‡(
vîbo£
)

584 
	`Ârötf
(
°dîr
, "Server supports multi_ack\n");

585 
mu…i_ack
 = 1;

587 i‡(
	`£rvî_suµ‹ts
("side-band-64k")) {

588 i‡(
vîbo£
)

589 
	`Ârötf
(
°dîr
, "Server supports side-band-64k\n");

590 
u£_sideb™d
 = 2;

592 i‡(
	`£rvî_suµ‹ts
("side-band")) {

593 i‡(
vîbo£
)

594 
	`Ârötf
(
°dîr
, "Server supports side-band\n");

595 
u£_sideb™d
 = 1;

597 i‡(!
ªf
) {

598 
	`∑ckë_Êush
(
fd
[1]);

599 
	`dõ
("no matchingÑemote head");

601 i‡(
	`evîythög_loˇl
(&
ªf
, 
ƒ_m©ch
, 
m©ch
)) {

602 
	`∑ckë_Êush
(
fd
[1]);

603 
Æl_d⁄e
;

605 i‡(
	`föd_comm⁄
(
fd
, 
sha1
, 
ªf
) < 0)

606 i‡(
kìp_∑ck
 != 1)

610 
	`Ârötf
(
°dîr
, "warning:Ço common commits\n");

612 i‡(
	`gë_∑ck
(
fd
))

613 
	`dõ
("git-fetch-pack: fetch failed.");

615 
Æl_d⁄e
:

616 
ªf
) {

617 
	`¥ötf
("%s %s\n",

618 
	`sha1_to_hex
(
ªf
->
ﬁd_sha1
),Ñef->
«me
);

619 
ªf
 =Ñef->
√xt
;

622 
	}
}

624 
	$ªmove_du∂iˇãs
(
ƒ_hóds
, **
hóds
)

626 
§c
, 
d°
;

628 
§c
 = 
d°
 = 0; sr¯< 
ƒ_hóds
; src++) {

632 
i
;

633 
i
 = 0; i < 
d°
; i++) {

634 i‡(!
	`°rcmp
(
hóds
[
i
], hóds[
§c
]))

637 i‡(
i
 < 
d°
)

639 i‡(
§c
 !
d°
)

640 
hóds
[
d°
] = hóds[
§c
];

641 
d°
++;

643 
hóds
[
d°
] = 0;

644  
d°
;

645 
	}
}

647 
	$„tch_∑ck_c⁄fig
(c⁄° *
v¨
, c⁄° *
vÆue
)

649 i‡(
	`°rcmp
(
v¨
, "fetch.unpacklimit") == 0) {

650 
„tch_u≈ack_limô
 = 
	`gô_c⁄fig_öt
(
v¨
, 
vÆue
);

654 i‡(
	`°rcmp
(
v¨
, "transfer.unpacklimit") == 0) {

655 
å™s„r_u≈ack_limô
 = 
	`gô_c⁄fig_öt
(
v¨
, 
vÆue
);

659  
	`gô_deÁu…_c⁄fig
(
v¨
, 
vÆue
);

660 
	}
}

662 
lock_fûe
 
	glock
;

664 
	$maö
(
¨gc
, **
¨gv
)

666 
i
, 
ªt
, 
ƒ_hóds
;

667 *
de°
 = 
NULL
, **
hóds
;

668 
fd
[2];

669 
pid_t
 
pid
;

670 
°©
 
°
;

672 
	`£tup_gô_dúe˘‹y
();

673 
	`gô_c⁄fig
(
„tch_∑ck_c⁄fig
);

675 i‡(0 <
å™s„r_u≈ack_limô
)

676 
u≈ack_limô
 = 
å™s„r_u≈ack_limô
;

677 i‡(0 <
„tch_u≈ack_limô
)

678 
u≈ack_limô
 = 
„tch_u≈ack_limô
;

680 
ƒ_hóds
 = 0;

681 
hóds
 = 
NULL
;

682 
i
 = 1; i < 
¨gc
; i++) {

683 *
¨g
 = 
¨gv
[
i
];

685 i‡(*
¨g
 == '-') {

686 i‡(!
	`°∫cmp
("--u∂ﬂd-∑ck=", 
¨g
, 14)) {

687 
u∂ﬂd∑ck
 = 
¨g
 + 14;

690 i‡(!
	`°∫cmp
("--exec=", 
¨g
, 7)) {

691 
u∂ﬂd∑ck
 = 
¨g
 + 7;

694 i‡(!
	`°rcmp
("--quõt", 
¨g
) || !strcmp("-q",árg)) {

695 
quõt
 = 1;

698 i‡(!
	`°rcmp
("--kìp", 
¨g
) || !strcmp("-k",árg)) {

699 
kìp_∑ck
++;

700 
u≈ack_limô
 = 0;

703 i‡(!
	`°rcmp
("--thö", 
¨g
)) {

704 
u£_thö_∑ck
 = 1;

707 i‡(!
	`°rcmp
("--Æl", 
¨g
)) {

708 
„tch_Æl
 = 1;

711 i‡(!
	`°rcmp
("-v", 
¨g
)) {

712 
vîbo£
 = 1;

715 i‡(!
	`°∫cmp
("--dïth=", 
¨g
, 8)) {

716 
dïth
 = 
	`°πﬁ
(
¨g
 + 8, 
NULL
, 0);

717 i‡(
	`°©
(
	`gô_∑th
("shÆlow"), &
°
))

718 
°
.
°_mtime
 = 0;

721 
	`ußge
(
„tch_∑ck_ußge
);

723 
de°
 = 
¨g
;

724 
hóds
 = 
¨gv
 + 
i
 + 1;

725 
ƒ_hóds
 = 
¨gc
 - 
i
 - 1;

728 i‡(!
de°
)

729 
	`ußge
(
„tch_∑ck_ußge
);

730 
pid
 = 
	`gô_c⁄√˘
(
fd
, 
de°
, 
u∂ﬂd∑ck
);

731 i‡(
pid
 < 0)

733 i‡(
hóds
 && 
ƒ_hóds
)

734 
ƒ_hóds
 = 
	`ªmove_du∂iˇãs
“r_hóds, 
hóds
);

735 
ªt
 = 
	`„tch_∑ck
(
fd
, 
ƒ_hóds
, 
hóds
);

736 
	`˛o£
(
fd
[0]);

737 
	`˛o£
(
fd
[1]);

738 
ªt
 |
	`föish_c⁄√˘
(
pid
);

740 i‡(!
ªt
 && 
ƒ_hóds
) {

746 
i
 = 0; i < 
ƒ_hóds
; i++)

747 i‡(
hóds
[
i
] && heads[i][0]) {

748 
	`îr‹
("nÿsuchÑemŸêª‡%s", 
hóds
[
i
]);

749 
ªt
 = 1;

753 i‡(!
ªt
 && 
dïth
 > 0) {

754 
ˇche_time
 
mtime
;

755 *
shÆlow
 = 
	`gô_∑th
("shallow");

756 
fd
;

758 
mtime
.
£c
 = 
°
.
°_mtime
;

759 #ifde‡
USE_NSEC


760 
mtime
.
u£c
 = 
°
.
°_mtim
.usec;

762 i‡(
	`°©
(
shÆlow
, &
°
)) {

763 i‡(
mtime
.
£c
)

764 
	`dõ
("shallow file wasÑemoved during fetch");

765 } i‡(
°
.
°_mtime
 !
mtime
.
£c


766 #ifde‡
USE_NSEC


767 || 
°
.
°_mtim
.
u£c
 !
mtime
.usec

770 
	`dõ
("shallow file was changed during fetch");

772 
fd
 = 
	`hﬁd_lock_fûe_f‹_upd©e
(&
lock
, 
shÆlow
, 1);

773 i‡(!
	`wrôe_shÆlow_commôs
(
fd
, 0)) {

774 
	`u∆ök
(
shÆlow
);

775 
	`rﬁlback_lock_fûe
(&
lock
);

777 
	`˛o£
(
fd
);

778 
	`commô_lock_fûe
(&
lock
);

782  !!
ªt
;

783 
	}
}

	@fetch.c

1 
	~"ˇche.h
"

2 
	~"„tch.h
"

3 
	~"commô.h
"

4 
	~"åì.h
"

5 
	~"åì-wÆk.h
"

6 
	~"èg.h
"

7 
	~"blob.h
"

8 
	~"ªfs.h
"

9 
	~"°rbuf.h
"

11 
	ggë_åì
 = 0;

12 
	ggë_hi°‹y
 = 0;

13 
	ggë_Æl
 = 0;

14 
	ggë_vîbo£ly
 = 0;

15 
	ggë_ªcovî
 = 0;

16 
	gcuºít_commô_sha1
[20];

18 
	$puŒ_ßy
(c⁄° *
fmt
, c⁄° *
hex
)

20 i‡(
gë_vîbo£ly
)

21 
	`Ârötf
(
°dîr
, 
fmt
, 
hex
);

22 
	}
}

24 
	$ªp‹t_missög
(c⁄° 
obje˘
 *
obj
)

26 
missög_hex
[41];

27 
	`°r˝y
(
missög_hex
, 
	`sha1_to_hex
(
obj
->
sha1
));;

28 
	`Ârötf
(
°dîr
, "Cannot obtainÇeeded %s %s\n",

29 
obj
->
ty≥
 ? 
	`ty≥«me
(obj->ty≥): "obje˘", 
missög_hex
);

30 i‡(!
	`is_nuŒ_sha1
(
cuºít_commô_sha1
))

31 
	`Ârötf
(
°dîr
, "whileÖrocessing commit %s.\n",

32 
	`sha1_to_hex
(
cuºít_commô_sha1
));

33 
	}
}

35 
¥o˚ss
(
obje˘
 *
obj
);

37 
	$¥o˚ss_åì
(
åì
 *tree)

39 
åì_desc
 
desc
;

40 
«me_íåy
 
íåy
;

42 i‡(
	`∑r£_åì
(
åì
))

45 
desc
.
buf
 = 
åì
->
buf„r
;

46 
desc
.
size
 = 
åì
->size;

47 
	`åì_íåy
(&
desc
, &
íåy
)) {

48 
obje˘
 *
obj
 = 
NULL
;

50 i‡(
	`S_ISDIR
(
íåy
.
mode
)) {

51 
åì
 *åì = 
	`lookup_åì
(
íåy
.
sha1
);

52 i‡(
åì
)

53 
obj
 = &
åì
->
obje˘
;

56 
blob
 *blob = 
	`lookup_blob
(
íåy
.
sha1
);

57 i‡(
blob
)

58 
obj
 = &
blob
->
obje˘
;

60 i‡(!
obj
 || 
	`¥o˚ss
(obj))

63 
	`‰ì
(
åì
->
buf„r
);

64 
åì
->
buf„r
 = 
NULL
;

65 
åì
->
size
 = 0;

67 
	}
}

69 
	#COMPLETE
 (1U << 0)

	)

70 
	#SEEN
 (1U << 1)

	)

71 
	#TO_SCAN
 (1U << 2)

	)

73 
commô_li°
 *
	gcom∂ëe
 = 
NULL
;

75 
	$¥o˚ss_commô
(
commô
 *commit)

77 i‡(
	`∑r£_commô
(
commô
))

80 
com∂ëe
 && com∂ëe->
ôem
->
d©e
 >
commô
->date) {

81 
	`p›_mo°_ª˚¡_commô
(&
com∂ëe
, 
COMPLETE
);

84 i‡(
commô
->
obje˘
.
Êags
 & 
COMPLETE
)

87 
	`hash˝y
(
cuºít_commô_sha1
, 
commô
->
obje˘
.
sha1
);

89 
	`puŒ_ßy
("wÆk %s\n", 
	`sha1_to_hex
(
commô
->
obje˘
.
sha1
));

91 i‡(
gë_åì
) {

92 i‡(
	`¥o˚ss
(&
commô
->
åì
->
obje˘
))

94 i‡(!
gë_Æl
)

95 
gë_åì
 = 0;

97 i‡(
gë_hi°‹y
) {

98 
commô_li°
 *
∑ª¡s
 = 
commô
->parents;

99 ; 
∑ª¡s
;Ö¨ít†∑ª¡s->
√xt
) {

100 i‡(
	`¥o˚ss
(&
∑ª¡s
->
ôem
->
obje˘
))

105 
	}
}

107 
	$¥o˚ss_èg
(
èg
 *tag)

109 i‡(
	`∑r£_èg
(
èg
))

111  
	`¥o˚ss
(
èg
->
ègged
);

112 
	}
}

114 
obje˘_li°
 *
	g¥o˚ss_queue
 = 
NULL
;

115 
obje˘_li°
 **
	g¥o˚ss_queue_íd
 = &
¥o˚ss_queue
;

117 
	$¥o˚ss_obje˘
(
obje˘
 *
obj
)

119 i‡(
obj
->
ty≥
 =
OBJ_COMMIT
) {

120 i‡(
	`¥o˚ss_commô
((
commô
 *)
obj
))

124 i‡(
obj
->
ty≥
 =
OBJ_TREE
) {

125 i‡(
	`¥o˚ss_åì
((
åì
 *)
obj
))

129 i‡(
obj
->
ty≥
 =
OBJ_BLOB
) {

132 i‡(
obj
->
ty≥
 =
OBJ_TAG
) {

133 i‡(
	`¥o˚ss_èg
((
èg
 *)
obj
))

137  
	`îr‹
("UnableÅo determineÑequirements "

139 
	`ty≥«me
(
obj
->
ty≥
), 
	`sha1_to_hex
(obj->
sha1
));

140 
	}
}

142 
	$¥o˚ss
(
obje˘
 *
obj
)

144 i‡(
obj
->
Êags
 & 
SEEN
)

146 
obj
->
Êags
 |
SEEN
;

148 i‡(
	`has_sha1_fûe
(
obj
->
sha1
)) {

150 
obj
->
Êags
 |
TO_SCAN
;

153 i‡(
obj
->
Êags
 & 
COMPLETE
)

155 
	`¥e„tch
(
obj
->
sha1
);

158 
	`obje˘_li°_ö£π
(
obj
, 
¥o˚ss_queue_íd
);

159 
¥o˚ss_queue_íd
 = &(*¥o˚ss_queue_íd)->
√xt
;

161 
	}
}

163 
	$lo›
()

165 
obje˘_li°
 *
ñem
;

167 
¥o˚ss_queue
) {

168 
obje˘
 *
obj
 = 
¥o˚ss_queue
->
ôem
;

169 
ñem
 = 
¥o˚ss_queue
;

170 
¥o˚ss_queue
 = 
ñem
->
√xt
;

171 
	`‰ì
(
ñem
);

172 i‡(!
¥o˚ss_queue
)

173 
¥o˚ss_queue_íd
 = &
¥o˚ss_queue
;

178 i‡(! (
obj
->
Êags
 & 
TO_SCAN
)) {

179 i‡(
	`„tch
(
obj
->
sha1
)) {

180 
	`ªp‹t_missög
(
obj
);

184 i‡(!
obj
->
ty≥
)

185 
	`∑r£_obje˘
(
obj
->
sha1
);

186 i‡(
	`¥o˚ss_obje˘
(
obj
))

190 
	}
}

192 
	$öãΩªt_èrgë
(*
èrgë
, *
sha1
)

194 i‡(!
	`gë_sha1_hex
(
èrgë
, 
sha1
))

196 i‡(!
	`check_ªf_f‹m©
(
èrgë
)) {

197 i‡(!
	`„tch_ªf
(
èrgë
, 
sha1
)) {

202 
	}
}

204 
	$m¨k_com∂ëe
(c⁄° *
∑th
, c⁄° *
sha1
, 
Êag
, *
cb_d©a
)

206 
commô
 *commô = 
	`lookup_commô_ª„ªn˚_gíéy
(
sha1
, 1);

207 i‡(
commô
) {

208 
commô
->
obje˘
.
Êags
 |
COMPLETE
;

209 
	`ö£π_by_d©e
(
commô
, &
com∂ëe
);

212 
	}
}

214 
	$puŒ_èrgës_°dö
(***
èrgë
, c⁄° ***
wrôe_ªf
)

216 
èrgës
 = 0, 
èrgës_Æloc
 = 0;

217 
°rbuf
 
buf
;

218 *
èrgë
 = 
NULL
; *
wrôe_ªf
 = NULL;

219 
	`°rbuf_öô
(&
buf
);

221 *
rf_⁄e
 = 
NULL
;

222 *
tg_⁄e
;

224 
	`ªad_löe
(&
buf
, 
°dö
, '\n');

225 i‡(
buf
.
eof
)

227 
tg_⁄e
 = 
buf
.buf;

228 
rf_⁄e
 = 
	`°rchr
(
tg_⁄e
, '\t');

229 i‡(
rf_⁄e
)

230 *
rf_⁄e
++ = 0;

232 i‡(
èrgës
 >
èrgës_Æloc
) {

233 
èrgës_Æloc
 =Åargets_alloc ?Åargets_alloc * 2 : 64;

234 *
èrgë
 = 
	`xªÆloc
(*èrgë, 
èrgës_Æloc
 * (**target));

235 *
wrôe_ªf
 = 
	`xªÆloc
(*wrôe_ªf, 
èrgës_Æloc
 * (**write_ref));

237 (*
èrgë
)[
èrgës
] = 
	`x°rdup
(
tg_⁄e
);

238 (*
wrôe_ªf
)[
èrgës
] = 
rf_⁄e
 ? 
	`x°rdup
‘f_⁄eË: 
NULL
;

239 
èrgës
++;

241  
èrgës
;

242 
	}
}

244 
	$puŒ_èrgës_‰ì
(
èrgës
, **
èrgë
, c⁄° **
wrôe_ªf
)

246 
èrgës
--) {

247 
	`‰ì
(
èrgë
[
èrgës
]);

248 i‡(
wrôe_ªf
 && wrôe_ªf[
èrgës
])

249 
	`‰ì
((*Ë
wrôe_ªf
[
èrgës
]);

251 
	}
}

253 
	$puŒ
(
èrgës
, **
èrgë
, c⁄° **
wrôe_ªf
,

254 c⁄° *
wrôe_ªf_log_dëaûs
)

256 
ªf_lock
 **
lock
 = 
	`xˇŒoc
(
èrgës
, (ref_lock *));

257 *
sha1
 = 
	`xmÆloc
(
èrgës
 * 20);

258 *
msg
;

259 
ªt
;

260 
i
;

262 
ßve_commô_buf„r
 = 0;

263 
åack_obje˘_ªfs
 = 0;

265 
i
 = 0; i < 
èrgës
; i++) {

266 i‡(!
wrôe_ªf
 || !wrôe_ªf[
i
])

269 
lock
[
i
] = 
	`lock_ªf_sha1
(
wrôe_ªf
[i], 
NULL
);

270 i‡(!
lock
[
i
]) {

271 
	`îr‹
("C™'àlockÑe‡%s", 
wrôe_ªf
[
i
]);

272 
u∆ock_™d_Áû
;

276 i‡(!
gë_ªcovî
)

277 
	`f‹_óch_ªf
(
m¨k_com∂ëe
, 
NULL
);

279 
i
 = 0; i < 
èrgës
; i++) {

280 i‡(
	`öãΩªt_èrgë
(
èrgë
[
i
], &
sha1
[20 * i])) {

281 
	`îr‹
("CouldÇŸ i¡î¥ë %†a†somëhögÅÿpuŒ", 
èrgë
[
i
]);

282 
u∆ock_™d_Áû
;

284 i‡(
	`¥o˚ss
(
	`lookup_unknown_obje˘
(&
sha1
[20 * 
i
])))

285 
u∆ock_™d_Áû
;

288 i‡(
	`lo›
())

289 
u∆ock_™d_Áû
;

291 i‡(
wrôe_ªf_log_dëaûs
) {

292 
msg
 = 
	`xmÆloc
(
	`°æí
(
wrôe_ªf_log_dëaûs
) + 12);

293 
	`•rötf
(
msg
, "„tch from %s", 
wrôe_ªf_log_dëaûs
);

295 
msg
 = 
NULL
;

297 
i
 = 0; i < 
èrgës
; i++) {

298 i‡(!
wrôe_ªf
 || !wrôe_ªf[
i
])

300 
ªt
 = 
	`wrôe_ªf_sha1
(
lock
[
i
], &
sha1
[20 * i], 
msg
 ? msg : "fetch (unknown)");

301 
lock
[
i
] = 
NULL
;

302 i‡(
ªt
)

303 
u∆ock_™d_Áû
;

305 
	`‰ì
(
msg
);

310 
u∆ock_™d_Áû
:

311 
i
 = 0; i < 
èrgës
; i++)

312 i‡(
lock
[
i
])

313 
	`u∆ock_ªf
(
lock
[
i
]);

315 
	}
}

	@fetch.h

1 #i‚de‡
PULL_H


2 
	#PULL_H


	)

9 
„tch
(*
sha1
);

16 
¥e„tch
(*
sha1
);

23 
„tch_ªf
(*
ªf
, *
sha1
);

26 
gë_åì
;

29 
gë_hi°‹y
;

32 
gë_Æl
;

35 
gë_vîbo£ly
;

38 
gë_ªcovî
;

41 
puŒ_ßy
(const *, const *);

44 
puŒ_èrgës_°dö
(***
èrgë
, c⁄° ***
wrôe_ªf
);

47 
puŒ_èrgës_‰ì
(
èrgës
, **
èrgë
, c⁄° **
wrôe_ªf
);

51 
puŒ
(
èrgës
, **
èrgë
, c⁄° **
wrôe_ªf
,

52 c⁄° *
wrôe_ªf_log_dëaûs
);

	@git-compat-util.h

1 #i‚de‡
GIT_COMPAT_UTIL_H


2 
	#GIT_COMPAT_UTIL_H


	)

4 #i‚de‡
FLEX_ARRAY


5 #i‡
deföed
(
__GNUC__
) && (__GNUC__ < 3)

6 
	#FLEX_ARRAY
 0

	)

8 
	#FLEX_ARRAY


	)

12 
	#ARRAY_SIZE
(
x
Ë((x)/(x[0]))

	)

14 #i‡!
deföed
(
__APPLE__
Ë&& !deföed(
__FªeBSD__
)

15 
	#_XOPEN_SOURCE
 600

	)

16 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

18 
	#_ALL_SOURCE
 1

	)

19 
	#_GNU_SOURCE
 1

	)

20 
	#_BSD_SOURCE
 1

	)

22 
	~<uni°d.h
>

23 
	~<°dio.h
>

24 
	~<sys/°©.h
>

25 
	~<f˙é.h
>

26 
	~<°ddef.h
>

27 
	~<°dlib.h
>

28 
	~<°d¨g.h
>

29 
	~<°rög.h
>

30 
	~<î∫o.h
>

31 
	~<limôs.h
>

32 
	~<sys/∑øm.h
>

33 
	~<sys/ty≥s.h
>

34 
	~<dúít.h
>

35 
	~<sys/time.h
>

36 
	~<time.h
>

37 
	~<sig«l.h
>

38 
	~<sys/waô.h
>

39 
	~<‚m©ch.h
>

40 
	~<sys/pﬁl.h
>

41 
	~<sys/sockë.h
>

42 
	~<as£π.h
>

43 
	~<ªgex.h
>

44 
	~<√töë/ö.h
>

45 
	~<√töë/t˝.h
>

46 
	~<¨∑/öë.h
>

47 
	~<√tdb.h
>

48 
	~<pwd.h
>

49 
	~<öây≥s.h
>

50 #unde‡
_ALL_SOURCE


51 
	~<gΩ.h
>

52 
	#_ALL_SOURCE
 1

	)

54 #i‚de‡
NO_ICONV


55 
	~<ic⁄v.h
>

61 #i‚de‡
PATH_MAX


62 
	#PATH_MAX
 4096

	)

65 #ifde‡
__GNUC__


66 
	#NORETURN
 
	`__©åibuã__
((
__n‹ëu∫__
))

	)

68 
	#NORETURN


	)

69 #i‚de‡
__©åibuã__


70 
	#__©åibuã__
(
x
)

	)

75 
	$ußge
(c⁄° *
îr
Ë
NORETURN
;

76 
	$dõ
(c⁄° *
îr
, ...Ë
NORETURN
 
	`__©åibuã__
((
	`f‹m©
 (
¥ötf
, 1, 2)));

77 
	$îr‹
(c⁄° *
îr
, ...Ë
	`__©åibuã__
((
	`f‹m©
 (
¥ötf
, 1, 2)));

78 
	$w¨n
(c⁄° *
îr
, ...Ë
	`__©åibuã__
((
	`f‹m©
 (
¥ötf
, 1, 2)));

80 
	`£t_ußge_routöe
((*
routöe
)(c⁄° *
îr
Ë
NORETURN
);

81 
	`£t_dõ_routöe
((*
routöe
)(c⁄° *
îr
, 
va_li°
 
∑øms
Ë
NORETURN
);

82 
	`£t_îr‹_routöe
((*
routöe
)(c⁄° *
îr
, 
va_li°
 
∑øms
));

83 
	`£t_w¨n_routöe
((*
routöe
)(c⁄° *
w¨n
, 
va_li°
 
∑øms
));

85 #ifde‡
NO_MMAP


87 #i‚de‡
PROT_READ


88 
	#PROT_READ
 1

	)

89 
	#PROT_WRITE
 2

	)

90 
	#MAP_PRIVATE
 1

	)

91 
	#MAP_FAILED
 ((*)-1)

	)

94 
	#mm≠
 
gô_mm≠


	)

95 
	#munm≠
 
gô_munm≠


	)

96 *
	`gô_mm≠
(*
°¨t
, 
size_t
 
Àngth
, 
¥Ÿ
, 
Êags
, 
fd
, 
off_t
 
off£t
);

97 
	`gô_munm≠
(*
°¨t
, 
size_t
 
Àngth
);

99 
	#DEFAULT_PACKED_GIT_WINDOW_SIZE
 (1 * 1024 * 1024)

	)

103 
	~<sys/mm™.h
>

104 
	#DEFAULT_PACKED_GIT_WINDOW_SIZE
 \

107 : 32 * 1024 * 1024)

	)

111 
	#DEFAULT_PACKED_GIT_LIMIT
 \

112 ((1024L * 1024LË* ((*Ë>8 ? 8192 : 256))

	)

114 #ifde‡
NO_PREAD


115 
	#¥ód
 
gô_¥ód


	)

116 
ssize_t
 
	`gô_¥ód
(
fd
, *
buf
, 
size_t
 
cou¡
, 
off_t
 
off£t
);

119 #ifde‡
NO_SETENV


120 
	#£ãnv
 
gô£ãnv


	)

121 
	`gô£ãnv
(const *, const *, );

124 #ifde‡
NO_UNSETENV


125 
	#un£ãnv
 
gôun£ãnv


	)

126 
	`gôun£ãnv
(const *);

129 #ifde‡
NO_STRCASESTR


130 
	#°rˇ£°r
 
gô°rˇ£°r


	)

131 *
	`gô°rˇ£°r
(c⁄° *
hay°ack
, c⁄° *
√edÀ
);

134 #ifde‡
NO_STRLCPY


135 
	#°æ˝y
 
gô°æ˝y


	)

136 
size_t
 
	`gô°æ˝y
(*, const *, size_t);

139 
	`ªÀa£_∑ck_mem‹y
(
size_t
);

141 
ölöe
 * 
	$x°rdup
(c⁄° *
°r
)

143 *
ªt
 = 
	`°rdup
(
°r
);

144 i‡(!
ªt
) {

145 
	`ªÀa£_∑ck_mem‹y
(
	`°æí
(
°r
) + 1);

146 
ªt
 = 
	`°rdup
(
°r
);

147 i‡(!
ªt
)

148 
	`dõ
("Out of memory, strdup failed");

150  
ªt
;

151 
	}
}

153 
ölöe
 *
	$xmÆloc
(
size_t
 
size
)

155 *
ªt
 = 
	`mÆloc
(
size
);

156 i‡(!
ªt
 && !
size
)

157 
ªt
 = 
	`mÆloc
(1);

158 i‡(!
ªt
) {

159 
	`ªÀa£_∑ck_mem‹y
(
size
);

160 
ªt
 = 
	`mÆloc
(
size
);

161 i‡(!
ªt
 && !
size
)

162 
ªt
 = 
	`mÆloc
(1);

163 i‡(!
ªt
)

164 
	`dõ
("Out of memory, malloc failed");

166 #ifde‡
XMALLOC_POISON


167 
	`mem£t
(
ªt
, 0xA5, 
size
);

169  
ªt
;

170 
	}
}

172 
ölöe
 *
	$xªÆloc
(*
±r
, 
size_t
 
size
)

174 *
ªt
 = 
	`ªÆloc
(
±r
, 
size
);

175 i‡(!
ªt
 && !
size
)

176 
ªt
 = 
	`ªÆloc
(
±r
, 1);

177 i‡(!
ªt
) {

178 
	`ªÀa£_∑ck_mem‹y
(
size
);

179 
ªt
 = 
	`ªÆloc
(
±r
, 
size
);

180 i‡(!
ªt
 && !
size
)

181 
ªt
 = 
	`ªÆloc
(
±r
, 1);

182 i‡(!
ªt
)

183 
	`dõ
("Out of memory,Ñealloc failed");

185  
ªt
;

186 
	}
}

188 
ölöe
 *
	$xˇŒoc
(
size_t
 
nmemb
, size_à
size
)

190 *
ªt
 = 
	`ˇŒoc
(
nmemb
, 
size
);

191 i‡(!
ªt
 && (!
nmemb
 || !
size
))

192 
ªt
 = 
	`ˇŒoc
(1, 1);

193 i‡(!
ªt
) {

194 
	`ªÀa£_∑ck_mem‹y
(
nmemb
 * 
size
);

195 
ªt
 = 
	`ˇŒoc
(
nmemb
, 
size
);

196 i‡(!
ªt
 && (!
nmemb
 || !
size
))

197 
ªt
 = 
	`ˇŒoc
(1, 1);

198 i‡(!
ªt
)

199 
	`dõ
("Out of memory, calloc failed");

201  
ªt
;

202 
	}
}

204 
ölöe
 *
	$xmm≠
(*
°¨t
, 
size_t
 
Àngth
,

205 
¥Ÿ
, 
Êags
, 
fd
, 
off_t
 
off£t
)

207 *
ªt
 = 
	`mm≠
(
°¨t
, 
Àngth
, 
¥Ÿ
, 
Êags
, 
fd
, 
off£t
);

208 i‡(
ªt
 =
MAP_FAILED
) {

209 i‡(!
Àngth
)

210  
NULL
;

211 
	`ªÀa£_∑ck_mem‹y
(
Àngth
);

212 
ªt
 = 
	`mm≠
(
°¨t
, 
Àngth
, 
¥Ÿ
, 
Êags
, 
fd
, 
off£t
);

213 i‡(
ªt
 =
MAP_FAILED
)

214 
	`dõ
("Ouào‡mem‹y? mm≠ faûed: %s", 
	`°ªº‹
(
î∫o
));

216  
ªt
;

217 
	}
}

219 
ölöe
 
ssize_t
 
	$xªad
(
fd
, *
buf
, 
size_t
 
Àn
)

221 
ssize_t
 
ƒ
;

223 
ƒ
 = 
	`ªad
(
fd
, 
buf
, 
Àn
);

224 i‡((
ƒ
 < 0Ë&& (
î∫o
 =
EAGAIN
 ||Éºnÿ=
EINTR
))

226  
ƒ
;

228 
	}
}

230 
ölöe
 
ssize_t
 
	$xwrôe
(
fd
, c⁄° *
buf
, 
size_t
 
Àn
)

232 
ssize_t
 
ƒ
;

234 
ƒ
 = 
	`wrôe
(
fd
, 
buf
, 
Àn
);

235 i‡((
ƒ
 < 0Ë&& (
î∫o
 =
EAGAIN
 ||Éºnÿ=
EINTR
))

237  
ƒ
;

239 
	}
}

241 
ölöe
 
	$has_exãnsi⁄
(c⁄° *
fûíame
, c⁄° *
ext
)

243 
size_t
 
Àn
 = 
	`°æí
(
fûíame
);

244 
size_t
 
exéí
 = 
	`°æí
(
ext
);

245  
Àn
 > 
exéí
 && !
	`memcmp
(
fûíame
 +Üí -Éxéí, 
ext
,Éxtlen);

246 
	}
}

249 #unde‡
is•a˚


250 #unde‡
isdigô


251 #unde‡
ißÕha


252 #unde‡
iß um


253 #unde‡
tﬁowî


254 #unde‡
touµî


255 
ß√_˘y≥
[256];

256 
	#GIT_SPACE
 0x01

	)

257 
	#GIT_DIGIT
 0x02

	)

258 
	#GIT_ALPHA
 0x04

	)

259 
	#ß√_i°e°
(
x
,
mask
Ë((
ß√_˘y≥
[()(x)] & (mask)Ë!0)

	)

260 
	#is•a˚
(
x
Ë
	`ß√_i°e°
(x,
GIT_SPACE
)

	)

261 
	#isdigô
(
x
Ë
	`ß√_i°e°
(x,
GIT_DIGIT
)

	)

262 
	#ißÕha
(
x
Ë
	`ß√_i°e°
(x,
GIT_ALPHA
)

	)

263 
	#iß um
(
x
Ë
	`ß√_i°e°
(x,
GIT_ALPHA
 | 
GIT_DIGIT
)

	)

264 
	#tﬁowî
(
x
Ë
	`ß√_ˇ£
(()(x), 0x20)

	)

265 
	#touµî
(
x
Ë
	`ß√_ˇ£
(()(x), 0)

	)

267 
ölöe
 
	$ß√_ˇ£
(
x
, 
high
)

269 i‡(
	`ß√_i°e°
(
x
, 
GIT_ALPHA
))

270 
x
 = (x & ~0x20Ë| 
high
;

271  
x
;

272 
	}
}

	@git.c

1 
	~"buûtö.h
"

2 
	~"exec_cmd.h
"

3 
	~"ˇche.h
"

4 
	~"quŸe.h
"

6 c⁄° 
	ggô_ußge_°rög
[] =

9 
	$¥ïíd_to_∑th
(c⁄° *
dú
, 
Àn
)

11 c⁄° *
ﬁd_∑th
 = 
	`gëív
("PATH");

12 *
∑th
;

13 
∑th_Àn
 = 
Àn
;

15 i‡(!
ﬁd_∑th
)

16 
ﬁd_∑th
 = "/usr/local/bin:/usr/bin:/bin";

18 
∑th_Àn
 = 
Àn
 + 
	`°æí
(
ﬁd_∑th
) + 1;

20 
∑th
 = 
	`xmÆloc
(
∑th_Àn
 + 1);

22 
	`mem˝y
(
∑th
, 
dú
, 
Àn
);

23 
∑th
[
Àn
] = ':';

24 
	`mem˝y
(
∑th
 + 
Àn
 + 1, 
ﬁd_∑th
, 
∑th_Àn
 -Üen);

26 
	`£ãnv
("PATH", 
∑th
, 1);

28 
	`‰ì
(
∑th
);

29 
	}
}

31 
	$h™dÀ_›ti⁄s
(c⁄° *** 
¨gv
, * 
¨gc
)

33 
h™dÀd
 = 0;

35 *
¨gc
 > 0) {

36 c⁄° *
cmd
 = (*
¨gv
)[0];

37 i‡(
cmd
[0] != '-')

45 i‡(!
	`°rcmp
(
cmd
, "--help") || !strcmp(cmd, "--version"))

51 i‡(!
	`°∫cmp
(
cmd
, "--exec-path", 11)) {

52 
cmd
 += 11;

53 i‡(*
cmd
 == '=')

54 
	`gô_£t_exec_∑th
(
cmd
 + 1);

56 
	`puts
(
	`gô_exec_∑th
());

57 
	`exô
(0);

59 } i‡(!
	`°rcmp
(
cmd
, "-p") || !strcmp(cmd, "--paginate")) {

60 
	`£tup_∑gî
();

61 } i‡(!
	`°rcmp
(
cmd
, "--git-dir")) {

62 i‡(*
¨gc
 < 2) {

63 
	`Ârötf
(
°dîr
, "No directory given for --git-dir.\n" );

64 
	`ußge
(
gô_ußge_°rög
);

66 
	`£ãnv
(
GIT_DIR_ENVIRONMENT
, (*
¨gv
)[1], 1);

67 (*
¨gv
)++;

68 (*
¨gc
)--;

69 } i‡(!
	`°∫cmp
(
cmd
, "--git-dir=", 10)) {

70 
	`£ãnv
(
GIT_DIR_ENVIRONMENT
, 
cmd
 + 10, 1);

71 } i‡(!
	`°rcmp
(
cmd
, "--bare")) {

72 
gô_dú
[
PATH_MAX
+1];

73 
	`£ãnv
(
GIT_DIR_ENVIRONMENT
, 
	`gëcwd
(
gô_dú
, (git_dir)), 1);

75 
	`Ârötf
(
°dîr
, "Unknow¿›ti⁄: %s\n", 
cmd
);

76 
	`ußge
(
gô_ußge_°rög
);

79 (*
¨gv
)++;

80 (*
¨gc
)--;

81 
h™dÀd
++;

83  
h™dÀd
;

84 
	}
}

86 c⁄° *
	gÆüs_comm™d
;

87 *
	gÆüs_°rög
;

89 
	$gô_Æüs_c⁄fig
(c⁄° *
v¨
, c⁄° *
vÆue
)

91 i‡(!
	`°∫cmp
(
v¨
, "Æüs.", 6Ë&& !
	`°rcmp
(v¨ + 6, 
Æüs_comm™d
)) {

92 
Æüs_°rög
 = 
	`x°rdup
(
vÆue
);

95 
	}
}

97 
	$•lô_cmdlöe
(*
cmdlöe
, c⁄° ***
¨gv
)

99 
§c
, 
d°
, 
cou¡
 = 0, 
size
 = 16;

100 
quŸed
 = 0;

102 *
¨gv
 = 
	`mÆloc
((*Ë* 
size
);

105 (*
¨gv
)[
cou¡
++] = 
cmdlöe
;

106 
§c
 = 
d°
 = 0; 
cmdlöe
[src];) {

107 
c
 = 
cmdlöe
[
§c
];

108 i‡(!
quŸed
 && 
	`is•a˚
(
c
)) {

109 
cmdlöe
[
d°
++] = 0;

110 
cmdlöe
[++
§c
]

111 && 
	`is•a˚
(
cmdlöe
[
§c
]))

113 i‡(
cou¡
 >
size
) {

114 
size
 += 16;

115 *
¨gv
 = 
	`xªÆloc
(*¨gv, (*Ë* 
size
);

117 (*
¨gv
)[
cou¡
++] = 
cmdlöe
 + 
d°
;

118 } if(!
quŸed
 && (
c
 == '\'' || c == '"')) {

119 
quŸed
 = 
c
;

120 
§c
++;

121 } i‡(
c
 =
quŸed
) {

122 
quŸed
 = 0;

123 
§c
++;

125 i‡(
c
 ='\\' && 
quŸed
 != '\'') {

126 
§c
++;

127 
c
 = 
cmdlöe
[
§c
];

128 i‡(!
c
) {

129 
	`‰ì
(*
¨gv
);

130 *
¨gv
 = 
NULL
;

131  
	`îr‹
("cmdlineÉnds with \\");

134 
cmdlöe
[
d°
++] = 
c
;

135 
§c
++;

139 
cmdlöe
[
d°
] = 0;

141 i‡(
quŸed
) {

142 
	`‰ì
(*
¨gv
);

143 *
¨gv
 = 
NULL
;

144  
	`îr‹
("unclosed quote");

147  
cou¡
;

148 
	}
}

150 
	$h™dÀ_Æüs
(*
¨g˝
, c⁄° ***
¨gv
)

152 
n⁄gô
 = 0, 
ªt
 = 0, 
ßved_î∫o
 = 
î∫o
;

153 c⁄° *
subdú
;

154 
cou¡
, 
›ti⁄_cou¡
;

155 c⁄° ** 
√w_¨gv
;

157 
subdú
 = 
	`£tup_gô_dúe˘‹y_gíéy
(&
n⁄gô
);

159 
Æüs_comm™d
 = (*
¨gv
)[0];

160 
	`gô_c⁄fig
(
gô_Æüs_c⁄fig
);

161 i‡(
Æüs_°rög
) {

162 i‡(
Æüs_°rög
[0] == '!') {

163 
	`åa˚_¥ötf
("trace:áliasÅo shell cmd: %s => %s\n",

164 
Æüs_comm™d
, 
Æüs_°rög
 + 1);

165 
ªt
 = 
	`sy°em
(
Æüs_°rög
 + 1);

166 i‡(
ªt
 >0 && 
	`WIFEXITED
(ret) &&

167 
	`WEXITSTATUS
(
ªt
) != 127)

168 
	`exô
(
	`WEXITSTATUS
(
ªt
));

169 
	`dõ
("FailedÅoÑun '%s' whenÉxpandingálias '%s'\n",

170 
Æüs_°rög
 + 1, 
Æüs_comm™d
);

172 
cou¡
 = 
	`•lô_cmdlöe
(
Æüs_°rög
, &
√w_¨gv
);

173 
›ti⁄_cou¡
 = 
	`h™dÀ_›ti⁄s
(&
√w_¨gv
, &
cou¡
);

174 
	`memmove
(
√w_¨gv
 - 
›ti⁄_cou¡
,Çew_argv,

175 
cou¡
 * (*));

176 
√w_¨gv
 -
›ti⁄_cou¡
;

178 i‡(
cou¡
 < 1)

179 
	`dõ
("em±yálü†f‹ %s", 
Æüs_comm™d
);

181 i‡(!
	`°rcmp
(
Æüs_comm™d
, 
√w_¨gv
[0]))

182 
	`dõ
("ªcursivêÆüs: %s", 
Æüs_comm™d
);

184 
	`åa˚_¨gv_¥ötf
(
√w_¨gv
, 
cou¡
,

186 
Æüs_comm™d
);

188 
√w_¨gv
 = 
	`xªÆloc
(new_argv, (*) *

189 (
cou¡
 + *
¨g˝
 + 1));

191 
	`mem˝y
(
√w_¨gv
 + 
cou¡
, *
¨gv
 + 1, (*Ë* *
¨g˝
);

192 
√w_¨gv
[
cou¡
+*
¨g˝
] = 
NULL
;

194 *
¨gv
 = 
√w_¨gv
;

195 *
¨g˝
 +
cou¡
 - 1;

197 
ªt
 = 1;

200 i‡(
subdú
)

201 
	`chdú
(
subdú
);

203 
î∫o
 = 
ßved_î∫o
;

205  
ªt
;

206 
	}
}

208 c⁄° 
	ggô_vîsi⁄_°rög
[] = 
GIT_VERSION
;

210 
	#RUN_SETUP
 (1<<0)

	)

211 
	#USE_PAGER
 (1<<1)

	)

216 
	#NOT_BARE
 (1<<2)

	)

218 
	$h™dÀ_öã∫Æ_comm™d
(
¨gc
, c⁄° **
¨gv
, **
ívp
)

220 c⁄° *
cmd
 = 
¨gv
[0];

221 
	scmd_°ru˘
 {

222 c⁄° *
cmd
;

223 (*
‚
)(, const **, const *);

224 
›ti⁄
;

225 } 
comm™ds
[] = {

226 { "add", 
cmd_add
, 
RUN_SETUP
 | 
NOT_BARE
 },

227 { "™nŸ©e", 
cmd_™nŸ©e
, 
USE_PAGER
 },

228 { "≠∂y", 
cmd_≠∂y
 },

229 { "¨chive", 
cmd_¨chive
 },

230 { "bœme", 
cmd_bœme
, 
RUN_SETUP
 },

231 { "bønch", 
cmd_bønch
, 
RUN_SETUP
 },

232 { "ˇt-fûe", 
cmd_ˇt_fûe
, 
RUN_SETUP
 },

233 { "checkout-ödex", 
cmd_checkout_ödex
, 
RUN_SETUP
 },

234 { "check-ªf-f‹m©", 
cmd_check_ªf_f‹m©
 },

235 { "chîry", 
cmd_chîry
, 
RUN_SETUP
 },

236 { "commô-åì", 
cmd_commô_åì
, 
RUN_SETUP
 },

237 { "c⁄fig", 
cmd_c⁄fig
 },

238 { "cou¡-obje˘s", 
cmd_cou¡_obje˘s
, 
RUN_SETUP
 },

239 { "des¸ibe", 
cmd_des¸ibe
, 
RUN_SETUP
 },

240 { "diff", 
cmd_diff
, 
RUN_SETUP
 | 
USE_PAGER
 },

241 { "diff-fûes", 
cmd_diff_fûes
, 
RUN_SETUP
 },

242 { "diff-ödex", 
cmd_diff_ödex
, 
RUN_SETUP
 },

243 { "diff-°ages", 
cmd_diff_°ages
, 
RUN_SETUP
 },

244 { "diff-åì", 
cmd_diff_åì
, 
RUN_SETUP
 },

245 { "fmt-mîge-msg", 
cmd_fmt_mîge_msg
, 
RUN_SETUP
 },

246 { "f‹-óch-ªf", 
cmd_f‹_óch_ªf
, 
RUN_SETUP
 },

247 { "f‹m©-∑tch", 
cmd_f‹m©_∑tch
, 
RUN_SETUP
 },

248 { "fsck", 
cmd_fsck
, 
RUN_SETUP
 },

249 { "fsck-obje˘s", 
cmd_fsck
, 
RUN_SETUP
 },

250 { "gë-èr-commô-id", 
cmd_gë_èr_commô_id
 },

251 { "gªp", 
cmd_gªp
, 
RUN_SETUP
 },

252 { "hñp", 
cmd_hñp
 },

253 { "öô", 
cmd_öô_db
 },

254 { "öô-db", 
cmd_öô_db
 },

255 { "log", 
cmd_log
, 
RUN_SETUP
 | 
USE_PAGER
 },

256 { "ls-fûes", 
cmd_ls_fûes
, 
RUN_SETUP
 },

257 { "ls-åì", 
cmd_ls_åì
, 
RUN_SETUP
 },

258 { "maûöfo", 
cmd_maûöfo
 },

259 { "maû•lô", 
cmd_maû•lô
 },

260 { "mîge-fûe", 
cmd_mîge_fûe
 },

261 { "mv", 
cmd_mv
, 
RUN_SETUP
 | 
NOT_BARE
 },

262 { "«me-ªv", 
cmd_«me_ªv
, 
RUN_SETUP
 },

263 { "∑ck-obje˘s", 
cmd_∑ck_obje˘s
, 
RUN_SETUP
 },

264 { "pickaxe", 
cmd_bœme
, 
RUN_SETUP
 | 
USE_PAGER
 },

265 { "¥u√", 
cmd_¥u√
, 
RUN_SETUP
 },

266 { "¥u√-∑cked", 
cmd_¥u√_∑cked
, 
RUN_SETUP
 },

267 { "push", 
cmd_push
, 
RUN_SETUP
 },

268 { "ªad-åì", 
cmd_ªad_åì
, 
RUN_SETUP
 },

269 { "ªÊog", 
cmd_ªÊog
, 
RUN_SETUP
 },

270 { "ªpo-c⁄fig", 
cmd_c⁄fig
 },

271 { "ªªª", 
cmd_ªªª
, 
RUN_SETUP
 },

272 { "ªv-li°", 
cmd_ªv_li°
, 
RUN_SETUP
 },

273 { "ªv-∑r£", 
cmd_ªv_∑r£
, 
RUN_SETUP
 },

274 { "rm", 
cmd_rm
, 
RUN_SETUP
 | 
NOT_BARE
 },

275 { "run°©us", 
cmd_run°©us
, 
RUN_SETUP
 | 
NOT_BARE
 },

276 { "sh‹éog", 
cmd_sh‹éog
, 
RUN_SETUP
 | 
USE_PAGER
 },

277 { "show-bønch", 
cmd_show_bønch
, 
RUN_SETUP
 },

278 { "show", 
cmd_show
, 
RUN_SETUP
 | 
USE_PAGER
 },

279 { "°rù•a˚", 
cmd_°rù•a˚
 },

280 { "symbﬁic-ªf", 
cmd_symbﬁic_ªf
, 
RUN_SETUP
 },

281 { "èr-åì", 
cmd_èr_åì
 },

282 { "u≈ack-obje˘s", 
cmd_u≈ack_obje˘s
, 
RUN_SETUP
 },

283 { "upd©e-ödex", 
cmd_upd©e_ödex
, 
RUN_SETUP
 },

284 { "upd©e-ªf", 
cmd_upd©e_ªf
, 
RUN_SETUP
 },

285 { "u∂ﬂd-¨chive", 
cmd_u∂ﬂd_¨chive
 },

286 { "vîsi⁄", 
cmd_vîsi⁄
 },

287 { "wh©ch™ged", 
cmd_wh©ch™ged
, 
RUN_SETUP
 | 
USE_PAGER
 },

288 { "wrôe-åì", 
cmd_wrôe_åì
, 
RUN_SETUP
 },

289 { "vîify-∑ck", 
cmd_vîify_∑ck
 },

290 { "show-ªf", 
cmd_show_ªf
, 
RUN_SETUP
 },

291 { "∑ck-ªfs", 
cmd_∑ck_ªfs
, 
RUN_SETUP
 },

293 
i
;

296 i‡(
¨gc
 > 1 && !
	`°rcmp
(
¨gv
[1], "--help")) {

297 
¨gv
[1] =árgv[0];

298 
¨gv
[0] = 
cmd
 = "help";

301 
i
 = 0; i < 
	`ARRAY_SIZE
(
comm™ds
); i++) {

302 
cmd_°ru˘
 *
p
 = 
comm™ds
+
i
;

303 c⁄° *
¥efix
;

304 i‡(
	`°rcmp
(
p
->
cmd
, cmd))

307 
¥efix
 = 
NULL
;

308 i‡(
p
->
›ti⁄
 & 
RUN_SETUP
)

309 
¥efix
 = 
	`£tup_gô_dúe˘‹y
();

310 i‡(
p
->
›ti⁄
 & 
USE_PAGER
)

311 
	`£tup_∑gî
();

312 i‡((
p
->
›ti⁄
 & 
NOT_BARE
) &&

313 (
	`is_b¨e_ªposô‹y
(Ë|| 
	`is_öside_gô_dú
()))

314 
	`dõ
("%†mu° bêru¿öá w‹kÅªe", 
cmd
);

315 
	`åa˚_¨gv_¥ötf
(
¨gv
, 
¨gc
, "trace: built-in: git");

317 
	`exô
(
p
->
	`‚
(
¨gc
, 
¨gv
, 
¥efix
));

319 
	}
}

321 
	$maö
(
¨gc
, c⁄° **
¨gv
, **
ívp
)

323 c⁄° *
cmd
 = 
¨gv
[0] ?árgv[0] : "git-help";

324 *
¶ash
 = 
	`°ºchr
(
cmd
, '/');

325 c⁄° *
exec_∑th
 = 
NULL
;

326 
d⁄e_Æüs
 = 0;

334 i‡(
¶ash
) {

335 *
¶ash
++ = 0;

336 i‡(*
cmd
 == '/')

337 
exec_∑th
 = 
cmd
;

338 
cmd
 = 
¶ash
;

351 i‡(!
	`°∫cmp
(
cmd
, "git-", 4)) {

352 
cmd
 += 4;

353 
¨gv
[0] = 
cmd
;

354 
	`h™dÀ_öã∫Æ_comm™d
(
¨gc
, 
¨gv
, 
ívp
);

355 
	`dõ
("ˇ¬Ÿ h™dÀ %†öã∫Æly", 
cmd
);

359 
¨gv
++;

360 
¨gc
--;

361 
	`h™dÀ_›ti⁄s
(&
¨gv
, &
¨gc
);

362 i‡(
¨gc
 > 0) {

363 i‡(!
	`°∫cmp
(
¨gv
[0], "--", 2))

364 
¨gv
[0] += 2;

367 
¨gv
[0] = "help";

368 
¨gc
 = 1;

370 
cmd
 = 
¨gv
[0];

379 i‡(
exec_∑th
)

380 
	`¥ïíd_to_∑th
(
exec_∑th
, 
	`°æí
(exec_path));

381 
exec_∑th
 = 
	`gô_exec_∑th
();

382 
	`¥ïíd_to_∑th
(
exec_∑th
, 
	`°æí
(exec_path));

386 
	`h™dÀ_öã∫Æ_comm™d
(
¨gc
, 
¨gv
, 
ívp
);

389 
	`execv_gô_cmd
(
¨gv
);

395 i‡(
d⁄e_Æüs
 || !
	`h™dÀ_Æüs
(&
¨gc
, &
¨gv
))

397 
d⁄e_Æüs
 = 1;

400 i‡(
î∫o
 =
ENOENT
) {

401 i‡(
d⁄e_Æüs
) {

402 
	`Ârötf
(
°dîr
, "Expansion ofálias '%s' failed; "

404 
cmd
, 
¨gv
[0]);

405 
	`exô
(1);

407 
	`hñp_unknown_cmd
(
cmd
);

410 
	`Ârötf
(
°dîr
, "FailedÅoÑun command '%s': %s\n",

411 
cmd
, 
	`°ªº‹
(
î∫o
));

414 
	}
}

	@grep.c

1 
	~"ˇche.h
"

2 
	~"gªp.h
"

4 
	$≠≥nd_gªp_∑âîn
(
gªp_›t
 *
›t
, c⁄° *
∑t
,

5 c⁄° *
‹igö
, 
no
, 
gªp_∑t_tokí
 
t
)

7 
gªp_∑t
 *
p
 = 
	`xˇŒoc
(1, (*p));

8 
p
->
∑âîn
 = 
∑t
;

9 
p
->
‹igö
 = origin;

10 
p
->
no
 =Ço;

11 
p
->
tokí
 = 
t
;

12 *
›t
->
∑âîn_èû
 = 
p
;

13 
›t
->
∑âîn_èû
 = &
p
->
√xt
;

14 
p
->
√xt
 = 
NULL
;

15 
	}
}

17 
	$compûe_ªgexp
(
gªp_∑t
 *
p
, 
gªp_›t
 *
›t
)

19 
îr
 = 
	`ªgcomp
(&
p
->
ªgexp
,Ö->
∑âîn
, 
›t
->
ªgÊags
);

20 i‡(
îr
) {

21 
îrbuf
[1024];

22 
whîe
[1024];

23 i‡(
p
->
no
)

24 
	`•rötf
(
whîe
, "In '%s'át %d, ",

25 
p
->
‹igö
,Ö->
no
);

26 i‡(
p
->
‹igö
)

27 
	`•rötf
(
whîe
, "%s, ", 
p
->
‹igö
);

29 
whîe
[0] = 0;

30 
	`ªgîr‹
(
îr
, &
p
->
ªgexp
, 
îrbuf
, 1024);

31 
	`ªg‰ì
(&
p
->
ªgexp
);

32 
	`dõ
("%s'%s': %s", 
whîe
, 
p
->
∑âîn
, 
îrbuf
);

34 
	}
}

36 
gªp_ex¥
 *
compûe_∑âîn_‹
(
gªp_∑t
 **);

37 
gªp_ex¥
 *
	$compûe_∑âîn_©om
(
gªp_∑t
 **
li°
)

39 
gªp_∑t
 *
p
;

40 
gªp_ex¥
 *
x
;

42 
p
 = *
li°
;

43 
p
->
tokí
) {

44 
GREP_PATTERN
:

45 
GREP_PATTERN_HEAD
:

46 
GREP_PATTERN_BODY
:

47 
x
 = 
	`xˇŒoc
(1,  (
gªp_ex¥
));

48 
x
->
node
 = 
GREP_NODE_ATOM
;

49 
x
->
u
.
©om
 = 
p
;

50 *
li°
 = 
p
->
√xt
;

51  
x
;

52 
GREP_OPEN_PAREN
:

53 *
li°
 = 
p
->
√xt
;

54 
x
 = 
	`compûe_∑âîn_‹
(
li°
);

55 i‡(!
x
)

56  
NULL
;

57 i‡(!*
li°
 || (*li°)->
tokí
 !
GREP_CLOSE_PAREN
)

58 
	`dõ
("unmatchedÖarenthesis");

59 *
li°
 = (*li°)->
√xt
;

60  
x
;

62  
NULL
;

64 
	}
}

66 
gªp_ex¥
 *
	$compûe_∑âîn_nŸ
(
gªp_∑t
 **
li°
)

68 
gªp_∑t
 *
p
;

69 
gªp_ex¥
 *
x
;

71 
p
 = *
li°
;

72 
p
->
tokí
) {

73 
GREP_NOT
:

74 i‡(!
p
->
√xt
)

75 
	`dõ
("--notÇot followed byÖatternÉxpression");

76 *
li°
 = 
p
->
√xt
;

77 
x
 = 
	`xˇŒoc
(1,  (
gªp_ex¥
));

78 
x
->
node
 = 
GREP_NODE_NOT
;

79 
x
->
u
.
u«ry
 = 
	`compûe_∑âîn_nŸ
(
li°
);

80 i‡(!
x
->
u
.
u«ry
)

81 
	`dõ
("--not followed byÇonÖatternÉxpression");

82  
x
;

84  
	`compûe_∑âîn_©om
(
li°
);

86 
	}
}

88 
gªp_ex¥
 *
	$compûe_∑âîn_™d
(
gªp_∑t
 **
li°
)

90 
gªp_∑t
 *
p
;

91 
gªp_ex¥
 *
x
, *
y
, *
z
;

93 
x
 = 
	`compûe_∑âîn_nŸ
(
li°
);

94 
p
 = *
li°
;

95 i‡(
p
 &&Ö->
tokí
 =
GREP_AND
) {

96 i‡(!
p
->
√xt
)

97 
	`dõ
("--andÇot followed byÖatternÉxpression");

98 *
li°
 = 
p
->
√xt
;

99 
y
 = 
	`compûe_∑âîn_™d
(
li°
);

100 i‡(!
y
)

101 
	`dõ
("--andÇot followed byÖatternÉxpression");

102 
z
 = 
	`xˇŒoc
(1,  (
gªp_ex¥
));

103 
z
->
node
 = 
GREP_NODE_AND
;

104 
z
->
u
.
bö¨y
.
À·
 = 
x
;

105 
z
->
u
.
bö¨y
.
right
 = 
y
;

106  
z
;

108  
x
;

109 
	}
}

111 
gªp_ex¥
 *
	$compûe_∑âîn_‹
(
gªp_∑t
 **
li°
)

113 
gªp_∑t
 *
p
;

114 
gªp_ex¥
 *
x
, *
y
, *
z
;

116 
x
 = 
	`compûe_∑âîn_™d
(
li°
);

117 
p
 = *
li°
;

118 i‡(
x
 && 
p
 &&Ö->
tokí
 !
GREP_CLOSE_PAREN
) {

119 
y
 = 
	`compûe_∑âîn_‹
(
li°
);

120 i‡(!
y
)

121 
	`dõ
("nŸáÖ©ã∫Éx¥essi⁄ %s", 
p
->
∑âîn
);

122 
z
 = 
	`xˇŒoc
(1,  (
gªp_ex¥
));

123 
z
->
node
 = 
GREP_NODE_OR
;

124 
z
->
u
.
bö¨y
.
À·
 = 
x
;

125 
z
->
u
.
bö¨y
.
right
 = 
y
;

126  
z
;

128  
x
;

129 
	}
}

131 
gªp_ex¥
 *
	$compûe_∑âîn_ex¥
(
gªp_∑t
 **
li°
)

133  
	`compûe_∑âîn_‹
(
li°
);

134 
	}
}

136 
	$compûe_gªp_∑âîns
(
gªp_›t
 *
›t
)

138 
gªp_∑t
 *
p
;

140 i‡(
›t
->
Æl_m©ch
)

141 
›t
->
exãnded
 = 1;

143 
p
 = 
›t
->
∑âîn_li°
;Ö;Ö =Ö->
√xt
) {

144 
p
->
tokí
) {

145 
GREP_PATTERN
:

146 
GREP_PATTERN_HEAD
:

147 
GREP_PATTERN_BODY
:

148 i‡(!
›t
->
fixed
)

149 
	`compûe_ªgexp
(
p
, 
›t
);

152 
›t
->
exãnded
 = 1;

157 i‡(!
›t
->
exãnded
)

163 
p
 = 
›t
->
∑âîn_li°
;

164 
›t
->
∑âîn_ex¥essi⁄
 = 
	`compûe_∑âîn_ex¥
(&
p
);

165 i‡(
p
)

166 
	`dõ
("öcom∂ëê∑âî¿ex¥essi⁄: %s", 
p
->
∑âîn
);

167 
	}
}

169 
	$‰ì_∑âîn_ex¥
(
gªp_ex¥
 *
x
)

171 
x
->
node
) {

172 
GREP_NODE_ATOM
:

174 
GREP_NODE_NOT
:

175 
	`‰ì_∑âîn_ex¥
(
x
->
u
.
u«ry
);

177 
GREP_NODE_AND
:

178 
GREP_NODE_OR
:

179 
	`‰ì_∑âîn_ex¥
(
x
->
u
.
bö¨y
.
À·
);

180 
	`‰ì_∑âîn_ex¥
(
x
->
u
.
bö¨y
.
right
);

183 
	`‰ì
(
x
);

184 
	}
}

186 
	$‰ì_gªp_∑âîns
(
gªp_›t
 *
›t
)

188 
gªp_∑t
 *
p
, *
n
;

190 
p
 = 
›t
->
∑âîn_li°
;Ö;Ö = 
n
) {

191 
n
 = 
p
->
√xt
;

192 
p
->
tokí
) {

193 
GREP_PATTERN
:

194 
GREP_PATTERN_HEAD
:

195 
GREP_PATTERN_BODY
:

196 
	`ªg‰ì
(&
p
->
ªgexp
);

201 
	`‰ì
(
p
);

204 i‡(!
›t
->
exãnded
)

206 
	`‰ì_∑âîn_ex¥
(
›t
->
∑âîn_ex¥essi⁄
);

207 
	}
}

209 *
	$íd_of_löe
(*
˝
, *
À·
)

211 
l
 = *
À·
;

212 
l
 && *
˝
 != '\n') {

213 
l
--;

214 
˝
++;

216 *
À·
 = 
l
;

217  
˝
;

218 
	}
}

220 
	$w‹d_ch¨
(
ch
)

222  
	`iß um
(
ch
) || ch == '_';

223 
	}
}

225 
	$show_löe
(
gªp_›t
 *
›t
, c⁄° *
bﬁ
, c⁄° *
eﬁ
,

226 c⁄° *
«me
, 
 o
, 
sign
)

228 i‡(
›t
->
∑th«me
)

229 
	`¥ötf
("%s%c", 
«me
, 
sign
);

230 i‡(
›t
->
löíum
)

231 
	`¥ötf
("%d%c", 
 o
, 
sign
);

232 
	`¥ötf
("%.*s\n", ()(
eﬁ
-
bﬁ
), bol);

233 
	}
}

238 
	#FIRST_FEW_BYTES
 8000

	)

239 
	$buf„r_is_bö¨y
(c⁄° *
±r
, 
size
)

241 i‡(
FIRST_FEW_BYTES
 < 
size
)

242 
size
 = 
FIRST_FEW_BYTES
;

243  !!
	`memchr
(
±r
, 0, 
size
);

244 
	}
}

246 
	$fixm©ch
(c⁄° *
∑âîn
, *
löe
, 
ªgm©ch_t
 *
m©ch
)

248 *
hô
 = 
	`°r°r
(
löe
, 
∑âîn
);

249 i‡(!
hô
) {

250 
m©ch
->
rm_so
 = m©ch->
rm_eo
 = -1;

251  
REG_NOMATCH
;

254 
m©ch
->
rm_so
 = 
hô
 - 
löe
;

255 
m©ch
->
rm_eo
 = m©ch->
rm_so
 + 
	`°æí
(
∑âîn
);

258 
	}
}

260 
	$m©ch_⁄e_∑âîn
(
gªp_›t
 *
›t
, 
gªp_∑t
 *
p
, *
bﬁ
, *
eﬁ
, 
gªp_c⁄ãxt
 
˘x
)

262 
hô
 = 0;

263 
©_åue_bﬁ
 = 1;

264 
ªgm©ch_t
 
pm©ch
[10];

266 i‡((
p
->
tokí
 !
GREP_PATTERN
) &&

267 ((
p
->
tokí
 =
GREP_PATTERN_HEAD
Ë!(
˘x
 =
GREP_CONTEXT_HEAD
)))

270 
agaö
:

271 i‡(!
›t
->
fixed
) {

272 
ªgex_t
 *
exp
 = &
p
->
ªgexp
;

273 
hô
 = !
	`ªgexec
(
exp
, 
bﬁ
, 
	`ARRAY_SIZE
(
pm©ch
),

274 
pm©ch
, 0);

277 
hô
 = !
	`fixm©ch
(
p
->
∑âîn
, 
bﬁ
, 
pm©ch
);

280 i‡(
hô
 && 
›t
->
w‹d_ªgexp
) {

281 i‡((
pm©ch
[0].
rm_so
 < 0) ||

282 (
eﬁ
 - 
bﬁ
Ë<
pm©ch
[0].
rm_so
 ||

283 (
pm©ch
[0].
rm_eo
 < 0) ||

284 (
eﬁ
 - 
bﬁ
Ë< 
pm©ch
[0].
rm_eo
)

285 
	`dõ
("regexpÑeturnedÇonsense");

293 i‡–((
pm©ch
[0].
rm_so
 =0 && 
©_åue_bﬁ
) ||

294 !
	`w‹d_ch¨
(
bﬁ
[
pm©ch
[0].
rm_so
-1])) &&

295 ((
pm©ch
[0].
rm_eo
 =(
eﬁ
-
bﬁ
)) ||

296 !
	`w‹d_ch¨
(
bﬁ
[
pm©ch
[0].
rm_eo
])) )

299 
hô
 = 0;

301 i‡(!
hô
 && 
pm©ch
[0].
rm_so
 + 
bﬁ
 + 1 < 
eﬁ
) {

306 
bﬁ
 = 
pm©ch
[0].
rm_so
 + bol + 1;

307 
©_åue_bﬁ
 = 0;

308 
agaö
;

311  
hô
;

312 
	}
}

314 
	$m©ch_ex¥_evÆ
(
gªp_›t
 *
o
,

315 
gªp_ex¥
 *
x
,

316 *
bﬁ
, *
eﬁ
,

317 
gªp_c⁄ãxt
 
˘x
,

318 
cﬁÀ˘_hôs
)

320 
h
 = 0;

322 
x
->
node
) {

323 
GREP_NODE_ATOM
:

324 
h
 = 
	`m©ch_⁄e_∑âîn
(
o
, 
x
->
u
.
©om
, 
bﬁ
, 
eﬁ
, 
˘x
);

326 
GREP_NODE_NOT
:

327 
h
 = !
	`m©ch_ex¥_evÆ
(
o
, 
x
->
u
.
u«ry
, 
bﬁ
, 
eﬁ
, 
˘x
, 0);

329 
GREP_NODE_AND
:

330 i‡(!
cﬁÀ˘_hôs
)

331  (
	`m©ch_ex¥_evÆ
(
o
, 
x
->
u
.
bö¨y
.
À·
,

332 
bﬁ
, 
eﬁ
, 
˘x
, 0) &&

333 
	`m©ch_ex¥_evÆ
(
o
, 
x
->
u
.
bö¨y
.
right
,

334 
bﬁ
, 
eﬁ
, 
˘x
, 0));

335 
h
 = 
	`m©ch_ex¥_evÆ
(
o
, 
x
->
u
.
bö¨y
.
À·
, 
bﬁ
, 
eﬁ
, 
˘x
, 0);

336 
h
 &
	`m©ch_ex¥_evÆ
(
o
, 
x
->
u
.
bö¨y
.
right
, 
bﬁ
, 
eﬁ
, 
˘x
, 0);

338 
GREP_NODE_OR
:

339 i‡(!
cﬁÀ˘_hôs
)

340  (
	`m©ch_ex¥_evÆ
(
o
, 
x
->
u
.
bö¨y
.
À·
,

341 
bﬁ
, 
eﬁ
, 
˘x
, 0) ||

342 
	`m©ch_ex¥_evÆ
(
o
, 
x
->
u
.
bö¨y
.
right
,

343 
bﬁ
, 
eﬁ
, 
˘x
, 0));

344 
h
 = 
	`m©ch_ex¥_evÆ
(
o
, 
x
->
u
.
bö¨y
.
À·
, 
bﬁ
, 
eﬁ
, 
˘x
, 0);

345 
x
->
u
.
bö¨y
.
À·
->
hô
 |
h
;

346 
h
 |
	`m©ch_ex¥_evÆ
(
o
, 
x
->
u
.
bö¨y
.
right
, 
bﬁ
, 
eﬁ
, 
˘x
, 1);

349 
	`dõ
("U√x≥˘edÇodêty≥ (öã∫ÆÉº‹Ë%d\n", 
x
->
node
);

351 i‡(
cﬁÀ˘_hôs
)

352 
x
->
hô
 |
h
;

353  
h
;

354 
	}
}

356 
	$m©ch_ex¥
(
gªp_›t
 *
›t
, *
bﬁ
, *
eﬁ
,

357 
gªp_c⁄ãxt
 
˘x
, 
cﬁÀ˘_hôs
)

359 
gªp_ex¥
 *
x
 = 
›t
->
∑âîn_ex¥essi⁄
;

360  
	`m©ch_ex¥_evÆ
(
›t
, 
x
, 
bﬁ
, 
eﬁ
, 
˘x
, 
cﬁÀ˘_hôs
);

361 
	}
}

363 
	$m©ch_löe
(
gªp_›t
 *
›t
, *
bﬁ
, *
eﬁ
,

364 
gªp_c⁄ãxt
 
˘x
, 
cﬁÀ˘_hôs
)

366 
gªp_∑t
 *
p
;

367 i‡(
›t
->
exãnded
)

368  
	`m©ch_ex¥
(
›t
, 
bﬁ
, 
eﬁ
, 
˘x
, 
cﬁÀ˘_hôs
);

371 
p
 = 
›t
->
∑âîn_li°
;Ö;Ö =Ö->
√xt
) {

372 i‡(
	`m©ch_⁄e_∑âîn
(
›t
, 
p
, 
bﬁ
, 
eﬁ
, 
˘x
))

376 
	}
}

378 
	$gªp_buf„r_1
(
gªp_›t
 *
›t
, c⁄° *
«me
,

379 *
buf
, 
size
, 
cﬁÀ˘_hôs
)

381 *
bﬁ
 = 
buf
;

382 
À·
 = 
size
;

383 
 o
 = 1;

384 
	s¥e_c⁄ãxt_löe
 {

385 *
bﬁ
;

386 *
eﬁ
;

387 } *
¥ev
 = 
NULL
, *
p˛
;

388 
œ°_hô
 = 0;

389 
œ°_shown
 = 0;

390 
bö¨y_m©ch_⁄ly
 = 0;

391 c⁄° *
hunk_m¨k
 = "";

392 
cou¡
 = 0;

393 
gªp_c⁄ãxt
 
˘x
 = 
GREP_CONTEXT_HEAD
;

395 i‡(
	`buf„r_is_bö¨y
(
buf
, 
size
)) {

396 
›t
->
bö¨y
) {

397 
GREP_BINARY_DEFAULT
:

398 
bö¨y_m©ch_⁄ly
 = 1;

400 
GREP_BINARY_NOMATCH
:

408 i‡(
›t
->
¥e_c⁄ãxt
)

409 
¥ev
 = 
	`xˇŒoc
(
›t
->
¥e_c⁄ãxt
, (*prev));

410 i‡(
›t
->
¥e_c⁄ãxt
 || o±->
po°_c⁄ãxt
)

411 
hunk_m¨k
 = "--\n";

413 
À·
) {

414 *
eﬁ
, 
ch
;

415 
hô
;

417 
eﬁ
 = 
	`íd_of_löe
(
bﬁ
, &
À·
);

418 
ch
 = *
eﬁ
;

419 *
eﬁ
 = 0;

421 i‡((
˘x
 =
GREP_CONTEXT_HEAD
Ë&& (
eﬁ
 =
bﬁ
))

422 
˘x
 = 
GREP_CONTEXT_BODY
;

424 
hô
 = 
	`m©ch_löe
(
›t
, 
bﬁ
, 
eﬁ
, 
˘x
, 
cﬁÀ˘_hôs
);

425 *
eﬁ
 = 
ch
;

427 i‡(
cﬁÀ˘_hôs
)

428 
√xt_löe
;

434 i‡(
›t
->
övît
)

435 
hô
 = !hit;

436 i‡(
›t
->
unm©ch_«me_⁄ly
) {

437 i‡(
hô
)

439 
√xt_löe
;

441 i‡(
hô
) {

442 
cou¡
++;

443 i‡(
›t
->
°©us_⁄ly
)

445 i‡(
bö¨y_m©ch_⁄ly
) {

446 
	`¥ötf
("Bö¨y fûê%†m©ches\n", 
«me
);

449 i‡(
›t
->
«me_⁄ly
) {

450 
	`¥ötf
("%s\n", 
«me
);

459 i‡(
›t
->
¥e_c⁄ãxt
) {

460 
‰om
;

461 i‡(
›t
->
¥e_c⁄ãxt
 < 
 o
)

462 
‰om
 = 
 o
 - 
›t
->
¥e_c⁄ãxt
;

464 
‰om
 = 1;

465 i‡(
‰om
 <
œ°_shown
)

466 
‰om
 = 
œ°_shown
 + 1;

467 i‡(
œ°_shown
 && 
‰om
 !=Üast_shown + 1)

468 
	`¥ötf
(
hunk_m¨k
);

469 
‰om
 < 
 o
) {

470 
p˛
 = &
¥ev
[
 o
-
‰om
-1];

471 
	`show_löe
(
›t
, 
p˛
->
bﬁ
,Ö˛->
eﬁ
,

472 
«me
, 
‰om
, '-');

473 
‰om
++;

475 
œ°_shown
 = 
 o
-1;

477 i‡(
œ°_shown
 && 
 o
 !=Üast_shown + 1)

478 
	`¥ötf
(
hunk_m¨k
);

479 i‡(!
›t
->
cou¡
)

480 
	`show_löe
(
›t
, 
bﬁ
, 
eﬁ
, 
«me
, 
 o
, ':');

481 
œ°_shown
 = 
œ°_hô
 = 
 o
;

483 i‡(
œ°_hô
 &&

484 
 o
 <
œ°_hô
 + 
›t
->
po°_c⁄ãxt
) {

488 i‡(
œ°_shown
 && 
 o
 !=Üast_shown + 1)

489 
	`¥ötf
(
hunk_m¨k
);

490 
	`show_löe
(
›t
, 
bﬁ
, 
eﬁ
, 
«me
, 
 o
, '-');

491 
œ°_shown
 = 
 o
;

493 i‡(
›t
->
¥e_c⁄ãxt
) {

494 
	`memmove
(
¥ev
+1,Örev,

495 (
›t
->
¥e_c⁄ãxt
-1Ë* (*
¥ev
));

496 
¥ev
->
bﬁ
 = bol;

497 
¥ev
->
eﬁ
 =Éol;

500 
√xt_löe
:

501 
bﬁ
 = 
eﬁ
 + 1;

502 i‡(!
À·
)

504 
À·
--;

505 
 o
++;

508 
	`‰ì
(
¥ev
);

509 i‡(
cﬁÀ˘_hôs
)

512 i‡(
›t
->
°©us_⁄ly
)

514 i‡(
›t
->
unm©ch_«me_⁄ly
) {

516 
	`¥ötf
("%s\n", 
«me
);

525 i‡(
›t
->
cou¡
 && count)

526 
	`¥ötf
("%s:%u\n", 
«me
, 
cou¡
);

527  !!
œ°_hô
;

528 
	}
}

530 
	$˛r_hô_m¨kî
(
gªp_ex¥
 *
x
)

536 
x
->
hô
 = 0;

537 i‡(
x
->
node
 !
GREP_NODE_OR
)

539 
x
->
u
.
bö¨y
.
À·
->
hô
 = 0;

540 
x
 = x->
u
.
bö¨y
.
right
;

542 
	}
}

544 
	$chk_hô_m¨kî
(
gªp_ex¥
 *
x
)

548 i‡(
x
->
node
 !
GREP_NODE_OR
)

549  
x
->
hô
;

550 i‡(!
x
->
u
.
bö¨y
.
À·
->
hô
)

552 
x
 = x->
u
.
bö¨y
.
right
;

554 
	}
}

556 
	$gªp_buf„r
(
gªp_›t
 *
›t
, c⁄° *
«me
, *
buf
, 
size
)

562 i‡(!
›t
->
Æl_m©ch
)

563  
	`gªp_buf„r_1
(
›t
, 
«me
, 
buf
, 
size
, 0);

568 
	`˛r_hô_m¨kî
(
›t
->
∑âîn_ex¥essi⁄
);

569 
	`gªp_buf„r_1
(
›t
, 
«me
, 
buf
, 
size
, 1);

571 i‡(!
	`chk_hô_m¨kî
(
›t
->
∑âîn_ex¥essi⁄
))

574  
	`gªp_buf„r_1
(
›t
, 
«me
, 
buf
, 
size
, 0);

575 
	}
}

	@grep.h

1 #i‚de‡
GREP_H


2 
	#GREP_H


	)

4 
	egªp_∑t_tokí
 {

5 
	mGREP_PATTERN
,

6 
	mGREP_PATTERN_HEAD
,

7 
	mGREP_PATTERN_BODY
,

8 
	mGREP_AND
,

9 
	mGREP_OPEN_PAREN
,

10 
	mGREP_CLOSE_PAREN
,

11 
	mGREP_NOT
,

12 
	mGREP_OR
,

15 
	egªp_c⁄ãxt
 {

16 
	mGREP_CONTEXT_HEAD
,

17 
	mGREP_CONTEXT_BODY
,

20 
	sgªp_∑t
 {

21 
gªp_∑t
 *
	m√xt
;

22 c⁄° *
	m‹igö
;

23 
	mno
;

24 
gªp_∑t_tokí
 
	mtokí
;

25 c⁄° *
	m∑âîn
;

26 
ªgex_t
 
	mªgexp
;

29 
	egªp_ex¥_node
 {

30 
	mGREP_NODE_ATOM
,

31 
	mGREP_NODE_NOT
,

32 
	mGREP_NODE_AND
,

33 
	mGREP_NODE_OR
,

36 
	sgªp_ex¥
 {

37 
gªp_ex¥_node
 
	mnode
;

38 
	mhô
;

40 
gªp_∑t
 *
	m©om
;

41 
gªp_ex¥
 *
	mu«ry
;

43 
gªp_ex¥
 *
	mÀ·
;

44 
gªp_ex¥
 *
	mright
;

45 } 
	mbö¨y
;

46 } 
	mu
;

49 
	sgªp_›t
 {

50 
gªp_∑t
 *
	m∑âîn_li°
;

51 
gªp_∑t
 **
	m∑âîn_èû
;

52 
gªp_ex¥
 *
	m∑âîn_ex¥essi⁄
;

53 
	m¥efix_Àngth
;

54 
ªgex_t
 
	mªgexp
;

55 
	mlöíum
:1;

56 
	mövît
:1;

57 
	m°©us_⁄ly
:1;

58 
	m«me_⁄ly
:1;

59 
	munm©ch_«me_⁄ly
:1;

60 
	mcou¡
:1;

61 
	mw‹d_ªgexp
:1;

62 
	mfixed
:1;

63 
	mÆl_m©ch
:1;

64 
	#GREP_BINARY_DEFAULT
 0

	)

65 
	#GREP_BINARY_NOMATCH
 1

	)

66 
	#GREP_BINARY_TEXT
 2

	)

67 
	mbö¨y
:2;

68 
	mexãnded
:1;

69 
	mªœtive
:1;

70 
	m∑th«me
:1;

71 
	mªgÊags
;

72 
	m¥e_c⁄ãxt
;

73 
	mpo°_c⁄ãxt
;

76 
≠≥nd_gªp_∑âîn
(
gªp_›t
 *
›t
, c⁄° *
∑t
, c⁄° *
‹igö
, 
no
, 
gªp_∑t_tokí
 
t
);

77 
compûe_gªp_∑âîns
(
gªp_›t
 *
›t
);

78 
‰ì_gªp_∑âîns
(
gªp_›t
 *
›t
);

79 
gªp_buf„r
(
gªp_›t
 *
›t
, c⁄° *
«me
, *
buf
, 
size
);

	@hash-object.c

7 
	~"ˇche.h
"

8 
	~"blob.h
"

10 
	$hash_obje˘
(c⁄° *
∑th
, c⁄° *
ty≥
, 
wrôe_obje˘
)

12 
fd
;

13 
°©
 
°
;

14 
sha1
[20];

15 
fd
 = 
	`›í
(
∑th
, 
O_RDONLY
);

16 i‡(
fd
 < 0 ||

17 
	`f°©
(
fd
, &
°
) < 0 ||

18 
	`ödex_fd
(
sha1
, 
fd
, &
°
, 
wrôe_obje˘
, 
ty≥
))

19 
	`dõ
(
wrôe_obje˘


21 : "U«bÀÅÿhash %s", 
∑th
);

22 
	`¥ötf
("%s\n", 
	`sha1_to_hex
(
sha1
));

23 
	}
}

25 
	$hash_°dö
(c⁄° *
ty≥
, 
wrôe_obje˘
)

27 
sha1
[20];

28 i‡(
	`ödex_pùe
(
sha1
, 0, 
ty≥
, 
wrôe_obje˘
))

29 
	`dõ
("UnableÅoádd stdinÅo database");

30 
	`¥ötf
("%s\n", 
	`sha1_to_hex
(
sha1
));

31 
	}
}

33 c⁄° 
	ghash_obje˘_ußge
[] =

36 
	$maö
(
¨gc
, **
¨gv
)

38 
i
;

39 c⁄° *
ty≥
 = 
blob_ty≥
;

40 
wrôe_obje˘
 = 0;

41 c⁄° *
¥efix
 = 
NULL
;

42 
¥efix_Àngth
 = -1;

43 
no_m‹e_Êags
 = 0;

45 
i
 = 1 ; i < 
¨gc
; i++) {

46 i‡(!
no_m‹e_Êags
 && 
¨gv
[
i
][0] == '-') {

47 i‡(!
	`°rcmp
(
¨gv
[
i
], "-t")) {

48 i‡(
¨gc
 <++
i
)

49 
	`ußge
(
hash_obje˘_ußge
);

50 
ty≥
 = 
¨gv
[
i
];

52 i‡(!
	`°rcmp
(
¨gv
[
i
], "-w")) {

53 i‡(
¥efix_Àngth
 < 0) {

54 
¥efix
 = 
	`£tup_gô_dúe˘‹y
();

55 
¥efix_Àngth
 =

56 
¥efix
 ? 
	`°æí
(prefix) : 0;

58 
wrôe_obje˘
 = 1;

60 i‡(!
	`°rcmp
(
¨gv
[
i
], "--")) {

61 
no_m‹e_Êags
 = 1;

63 i‡(!
	`°rcmp
(
¨gv
[
i
], "--help"))

64 
	`ußge
(
hash_obje˘_ußge
);

65 i‡(!
	`°rcmp
(
¨gv
[
i
], "--stdin")) {

66 
	`hash_°dö
(
ty≥
, 
wrôe_obje˘
);

69 
	`ußge
(
hash_obje˘_ußge
);

72 c⁄° *
¨g
 = 
¨gv
[
i
];

73 i‡(0 <
¥efix_Àngth
)

74 
¨g
 = 
	`¥efix_fûíame
(
¥efix
, 
¥efix_Àngth
,

75 
¨g
);

76 
	`hash_obje˘
(
¨g
, 
ty≥
, 
wrôe_obje˘
);

77 
no_m‹e_Êags
 = 1;

81 
	}
}

	@help.c

6 
	~"ˇche.h
"

7 
	~"buûtö.h
"

8 
	~"exec_cmd.h
"

9 
	~"comm⁄-cmds.h
"

10 
	~<sys/io˘l.h
>

13 
	$ãrm_cﬁumns
()

15 *
cﬁ_°rög
 = 
	`gëív
("COLUMNS");

16 
n_cﬁs
;

18 i‡(
cﬁ_°rög
 && (
n_cﬁs
 = 
	`©oi
(col_string)) > 0)

19  
n_cﬁs
;

21 #ifde‡
TIOCGWINSZ


23 
wösize
 
ws
;

24 i‡(!
	`io˘l
(1, 
TIOCGWINSZ
, &
ws
)) {

25 i‡(
ws
.
ws_cﬁ
)

26  
ws
.
ws_cﬁ
;

32 
	}
}

34 
	$oom
()

36 
	`Ârötf
(
°dîr
, "git: out of memory\n");

37 
	`exô
(1);

38 
	}
}

40 
ölöe
 
	$mput_ch¨
(
c
, 
num
)

42 
num
--)

43 
	`putch¨
(
c
);

44 
	}
}

46 
	scmd«me
 {

47 
size_t
 
	mÀn
;

48 
	m«me
[1];

49 } **
	gcmd«me
;

50 
	gcmd«me_Æloc
, 
	gcmd«me_˙t
;

52 
	$add_cmd«me
(c⁄° *
«me
, 
Àn
)

54 
cmd«me
 *
ít
;

55 i‡(
cmd«me_Æloc
 <
cmd«me_˙t
) {

56 
cmd«me_Æloc
 = cmdname_alloc + 200;

57 
cmd«me
 = 
	`ªÆloc
(cmd«me, 
cmd«me_Æloc
 * (*cmdname));

58 i‡(!
cmd«me
)

59 
	`oom
();

61 
ít
 = 
	`mÆloc
((*ítË+ 
Àn
);

62 i‡(!
ít
)

63 
	`oom
();

64 
ít
->
Àn
 =Üen;

65 
	`mem˝y
(
ít
->
«me
,Çame, 
Àn
);

66 
ít
->
«me
[
Àn
] = 0;

67 
cmd«me
[
cmd«me_˙t
++] = 
ít
;

68 
	}
}

70 
	$cmd«me_com∑ª
(c⁄° *
a_
, c⁄° *
b_
)

72 
cmd«me
 *
a
 = *(cmd«mê**)
a_
;

73 
cmd«me
 *
b
 = *(cmd«mê**)
b_
;

74  
	`°rcmp
(
a
->
«me
, 
b
->name);

75 
	}
}

77 
	$¥ëty_¥öt_°rög_li°
(
cmd«me
 **cmd«me, 
l⁄ge°
)

79 
cﬁs
 = 1, 
rows
;

80 
•a˚
 = 
l⁄ge°
 + 1;

81 
max_cﬁs
 = 
	`ãrm_cﬁumns
() - 1;

82 
i
, 
j
;

84 i‡(
•a˚
 < 
max_cﬁs
)

85 
cﬁs
 = 
max_cﬁs
 / 
•a˚
;

86 
rows
 = (
cmd«me_˙t
 + 
cﬁs
 - 1) / cols;

88 
	`qs‹t
(
cmd«me
, 
cmd«me_˙t
, (*cmd«me), 
cmd«me_com∑ª
);

90 
i
 = 0; i < 
rows
; i++) {

91 
	`¥ötf
(" ");

93 
j
 = 0; j < 
cﬁs
; j++) {

94 
n
 = 
j
 * 
rows
 + 
i
;

95 
size
 = 
•a˚
;

96 i‡(
n
 >
cmd«me_˙t
)

98 i‡(
j
 =
cﬁs
-1 || 
n
 + 
rows
 >
cmd«me_˙t
)

99 
size
 = 1;

100 
	`¥ötf
("%-*s", 
size
, 
cmd«me
[
n
]->
«me
);

102 
	`putch¨
('\n');

104 
	}
}

106 
	$li°_comm™ds
(c⁄° *
exec_∑th
, c⁄° *
∑âîn
)

108 
l⁄ge°
 = 0;

109 
∑th
[
PATH_MAX
];

110 
dúÀn
;

111 
DIR
 *
dú
 = 
	`›ídú
(
exec_∑th
);

112 
dúít
 *
de
;

114 i‡(!
dú
) {

115 
	`Ârötf
(
°dîr
, "gô: '%s': %s\n", 
exec_∑th
, 
	`°ªº‹
(
î∫o
));

116 
	`exô
(1);

119 
dúÀn
 = 
	`°æí
(
exec_∑th
);

120 i‡(
PATH_MAX
 - 20 < 
dúÀn
) {

121 
	`Ârötf
(
°dîr
, "git: insanelyÜongÉxec-path '%s'\n",

122 
exec_∑th
);

123 
	`exô
(1);

126 
	`mem˝y
(
∑th
, 
exec_∑th
, 
dúÀn
);

127 
∑th
[
dúÀn
++] = '/';

129 (
de
 = 
	`ªaddú
(
dú
)Ë!
NULL
) {

130 
°©
 
°
;

131 
íéí
;

133 i‡(
	`°∫cmp
(
de
->
d_«me
, "git-", 4))

135 
	`°r˝y
(
∑th
+
dúÀn
, 
de
->
d_«me
);

136 i‡(
	`°©
(
∑th
, &
°
) ||

137 !
	`S_ISREG
(
°
.
°_mode
) ||

138 !(
°
.
°_mode
 & 
S_IXUSR
))

141 
íéí
 = 
	`°æí
(
de
->
d_«me
);

142 i‡(
	`has_exãnsi⁄
(
de
->
d_«me
, ".exe"))

143 
íéí
 -= 4;

145 i‡(
l⁄ge°
 < 
íéí
)

146 
l⁄ge°
 = 
íéí
;

148 
	`add_cmd«me
(
de
->
d_«me
 + 4, 
íéí
-4);

150 
	`˛o£dú
(
dú
);

152 
	`¥ötf
("gô comm™d†avaûabÀ i¿'%s'\n", 
exec_∑th
);

153 
	`¥ötf
("----------------------------");

154 
	`mput_ch¨
('-', 
	`°æí
(
exec_∑th
));

155 
	`putch¨
('\n');

156 
	`¥ëty_¥öt_°rög_li°
(
cmd«me
, 
l⁄ge°
 - 4);

157 
	`putch¨
('\n');

158 
	}
}

160 
	$li°_comm⁄_cmds_hñp
()

162 
i
, 
l⁄ge°
 = 0;

164 
i
 = 0; i < 
	`ARRAY_SIZE
(
comm⁄_cmds
); i++) {

165 i‡(
l⁄ge°
 < 
	`°æí
(
comm⁄_cmds
[
i
].
«me
))

166 
l⁄ge°
 = 
	`°æí
(
comm⁄_cmds
[
i
].
«me
);

169 
	`puts
("The most commonly used git commandsáre:");

170 
i
 = 0; i < 
	`ARRAY_SIZE
(
comm⁄_cmds
); i++) {

171 
	`¥ötf
(" %† ", 
comm⁄_cmds
[
i
].
«me
);

172 
	`mput_ch¨
(' ', 
l⁄ge°
 - 
	`°æí
(
comm⁄_cmds
[
i
].
«me
));

173 
	`puts
(
comm⁄_cmds
[
i
].
hñp
);

175 
	`puts
("(use 'git help -a'Åo getáÜist ofáll installed git commands)");

176 
	}
}

178 
	$show_m™_∑ge
(c⁄° *
gô_cmd
)

180 c⁄° *
∑ge
;

182 i‡(!
	`°∫cmp
(
gô_cmd
, "git", 3))

183 
∑ge
 = 
gô_cmd
;

185 
∑ge_Àn
 = 
	`°æí
(
gô_cmd
) + 4;

186 *
p
 = 
	`xmÆloc
(
∑ge_Àn
 + 1);

187 
	`°r˝y
(
p
, "git-");

188 
	`°r˝y
(
p
 + 4, 
gô_cmd
);

189 
p
[
∑ge_Àn
] = 0;

190 
∑ge
 = 
p
;

193 
	`exe˛p
("m™", "m™", 
∑ge
, 
NULL
);

194 
	}
}

196 
	$hñp_unknown_cmd
(c⁄° *
cmd
)

198 
	`¥ötf
("gô: '%s' i†nŸá gô-comm™d\n\n", 
cmd
);

199 
	`li°_comm⁄_cmds_hñp
();

200 
	`exô
(1);

201 
	}
}

203 
	$cmd_vîsi⁄
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

205 
	`¥ötf
("gô vîsi⁄ %s\n", 
gô_vîsi⁄_°rög
);

207 
	}
}

209 
	$cmd_hñp
(
¨gc
, c⁄° **
¨gv
, c⁄° *
¥efix
)

211 c⁄° *
hñp_cmd
 = 
¨gc
 > 1 ? 
¨gv
[1] : 
NULL
;

212 c⁄° *
exec_∑th
 = 
	`gô_exec_∑th
();

214 i‡(!
hñp_cmd
) {

215 
	`¥ötf
("ußge: %s\n\n", 
gô_ußge_°rög
);

216 
	`li°_comm⁄_cmds_hñp
();

217 
	`exô
(1);

220 i‡(!
	`°rcmp
(
hñp_cmd
, "--all") || !strcmp(help_cmd, "-a")) {

221 
	`¥ötf
("ußge: %s\n\n", 
gô_ußge_°rög
);

222 if(
exec_∑th
)

223 
	`li°_comm™ds
(
exec_∑th
, "git-*");

224 
	`exô
(1);

228 
	`show_m™_∑ge
(
hñp_cmd
);

231 
	}
}

	@http-fetch.c

1 
	~"ˇche.h
"

2 
	~"commô.h
"

3 
	~"∑ck.h
"

4 
	~"„tch.h
"

5 
	~"hâp.h
"

7 
	#PREV_BUF_SIZE
 4096

	)

8 
	#RANGE_HEADER_SIZE
 30

	)

10 
	gcommôs_⁄_°dö
;

12 
	ggŸ_Æã∫©es
 = -1;

13 
	gc‹ru±_obje˘_found
;

15 
cuæ_¶i°
 *
	gno_¥agma_hódî
;

17 
	sÆt_ba£


19 c⁄° *
	mba£
;

20 
	m∑th_Àn
;

21 
	mgŸ_ödi˚s
;

22 
∑cked_gô
 *
	m∑cks
;

23 
Æt_ba£
 *
	m√xt
;

26 
Æt_ba£
 *
	gÆt
;

28 
	eobje˘_ªque°_°©e
 {

29 
	mWAITING
,

30 
	mABORTED
,

31 
	mACTIVE
,

32 
	mCOMPLETE
,

35 
	sobje˘_ªque°


37 
	msha1
[20];

38 
Æt_ba£
 *
	mªpo
;

39 *
	muæ
;

40 
	mfûíame
[
PATH_MAX
];

41 
	mtmpfûe
[
PATH_MAX
];

42 
	mloˇl
;

43 
obje˘_ªque°_°©e
 
	m°©e
;

44 
CURLcode
 
	mcuæ_ªsu…
;

45 
	mîr‹°r
[
CURL_ERROR_SIZE
];

46 
	mhâp_code
;

47 
	mªÆ_sha1
[20];

48 
SHA_CTX
 
	mc
;

49 
z_°ªam
 
	m°ªam
;

50 
	mzªt
;

51 
	mª«me
;

52 
a˘ive_ªque°_¶Ÿ
 *
	m¶Ÿ
;

53 
obje˘_ªque°
 *
	m√xt
;

56 
	sÆã∫©es_ªque°
 {

57 c⁄° *
	mba£
;

58 *
	muæ
;

59 
buf„r
 *
	mbuf„r
;

60 
a˘ive_ªque°_¶Ÿ
 *
	m¶Ÿ
;

61 
	mhâp_•ecific
;

64 
obje˘_ªque°
 *
	gobje˘_queue_hód
;

66 
size_t
 
	$fwrôe_sha1_fûe
(*
±r
, 
size_t
 
ñtsize
, size_à
nmemb
,

67 *
d©a
)

69 
ex≤
[4096];

70 
size_t
 
size
 = 
ñtsize
 * 
nmemb
;

71 
po¢
 = 0;

72 
obje˘_ªque°
 *
obj_ªq
 = (obje˘_ªque° *)
d©a
;

74 
ssize_t
 
ªtvÆ
 = 
	`xwrôe
(
obj_ªq
->
loˇl
,

75 (*Ë
±r
 + 
po¢
, 
size
 -Öosn);

76 i‡(
ªtvÆ
 < 0)

77  
po¢
;

78 
po¢
 +
ªtvÆ
;

79 } 
po¢
 < 
size
);

81 
obj_ªq
->
°ªam
.
avaû_ö
 = 
size
;

82 
obj_ªq
->
°ªam
.
√xt_ö
 = 
±r
;

84 
obj_ªq
->
°ªam
.
√xt_out
 = 
ex≤
;

85 
obj_ªq
->
°ªam
.
avaû_out
 = (
ex≤
);

86 
obj_ªq
->
zªt
 = 
	`öÊ©e
(&obj_ªq->
°ªam
, 
Z_SYNC_FLUSH
);

87 
	`SHA1_Upd©e
(&
obj_ªq
->
c
, 
ex≤
,

88 (
ex≤
Ë- 
obj_ªq
->
°ªam
.
avaû_out
);

89 } 
obj_ªq
->
°ªam
.
avaû_ö
 && obj_ªq->
zªt
 =
Z_OK
);

90 
d©a_ª˚ived
++;

91  
size
;

92 
	}
}

94 
	$missög__èrgë
(
code
, 
ªsu…
)

97 (
ªsu…
 =
CURLE_FILE_COULDNT_READ_FILE
) ||

99 (
code
 =404 && 
ªsu…
 =
CURLE_HTTP_RETURNED_ERROR
) ||

101 (
code
 =550 && 
ªsu…
 =
CURLE_FTP_COULDNT_RETR_FILE
)

103 
	}
}

105 
	#missög_èrgë
(
a
Ë
	`missög__èrgë
(◊)->
hâp_code
, (a)->
cuæ_ªsu…
)

	)

107 
„tch_Æã∫©es
(c⁄° *
ba£
);

109 
¥o˚ss_obje˘_ª•⁄£
(*
ˇŒback_d©a
);

111 
	$°¨t_obje˘_ªque°
(
obje˘_ªque°
 *
obj_ªq
)

113 *
hex
 = 
	`sha1_to_hex
(
obj_ªq
->
sha1
);

114 
¥evfûe
[
PATH_MAX
];

115 *
uæ
;

116 *
po¢
;

117 
¥evloˇl
;

118 
¥ev_buf
[
PREV_BUF_SIZE
];

119 
ssize_t
 
¥ev_ªad
 = 0;

120 
¥ev_po¢
 = 0;

121 
ønge
[
RANGE_HEADER_SIZE
];

122 
cuæ_¶i°
 *
ønge_hódî
 = 
NULL
;

123 
a˘ive_ªque°_¶Ÿ
 *
¶Ÿ
;

125 
	`¢¥ötf
(
¥evfûe
, ’ªvfûe), "%s.¥ev", 
obj_ªq
->
fûíame
);

126 
	`u∆ök
(
¥evfûe
);

127 
	`ª«me
(
obj_ªq
->
tmpfûe
, 
¥evfûe
);

128 
	`u∆ök
(
obj_ªq
->
tmpfûe
);

130 i‡(
obj_ªq
->
loˇl
 != -1)

131 
	`îr‹
("fdÜókagêö sèπ: %d", 
obj_ªq
->
loˇl
);

132 
obj_ªq
->
loˇl
 = 
	`›í
(obj_ªq->
tmpfûe
,

133 
O_WRONLY
 | 
O_CREAT
 | 
O_EXCL
, 0666);

137 i‡(
obj_ªq
->
loˇl
 < 0 && 
î∫o
 =
ENOENT
) {

138 *
dú
 = 
	`°ºchr
(
obj_ªq
->
tmpfûe
, '/');

139 i‡(
dú
) {

140 *
dú
 = 0;

141 
	`mkdú
(
obj_ªq
->
tmpfûe
, 0777);

142 *
dú
 = '/';

144 
obj_ªq
->
loˇl
 = 
	`›í
(obj_ªq->
tmpfûe
,

145 
O_WRONLY
 | 
O_CREAT
 | 
O_EXCL
, 0666);

148 i‡(
obj_ªq
->
loˇl
 < 0) {

149 
obj_ªq
->
°©e
 = 
ABORTED
;

150 
	`îr‹
("Couldn't createÅemporary file %s for %s: %s",

151 
obj_ªq
->
tmpfûe
, obj_ªq->
fûíame
, 
	`°ªº‹
(
î∫o
));

155 
	`mem£t
(&
obj_ªq
->
°ªam
, 0, (obj_req->stream));

157 
	`öÊ©eInô
(&
obj_ªq
->
°ªam
);

159 
	`SHA1_Inô
(&
obj_ªq
->
c
);

161 
uæ
 = 
	`xmÆloc
(
	`°æí
(
obj_ªq
->
ªpo
->
ba£
) + 50);

162 
obj_ªq
->
uæ
 = 
	`xmÆloc
(
	`°æí
(obj_ªq->
ªpo
->
ba£
) + 50);

163 
	`°r˝y
(
uæ
, 
obj_ªq
->
ªpo
->
ba£
);

164 
po¢
 = 
uæ
 + 
	`°æí
(
obj_ªq
->
ªpo
->
ba£
);

165 
	`°r˝y
(
po¢
, "objects/");

166 
po¢
 += 8;

167 
	`mem˝y
(
po¢
, 
hex
, 2);

168 
po¢
 += 2;

169 *(
po¢
++) = '/';

170 
	`°r˝y
(
po¢
, 
hex
 + 2);

171 
	`°r˝y
(
obj_ªq
->
uæ
, url);

175 
¥evloˇl
 = 
	`›í
(
¥evfûe
, 
O_RDONLY
);

176 i‡(
¥evloˇl
 != -1) {

178 
¥ev_ªad
 = 
	`xªad
(
¥evloˇl
, 
¥ev_buf
, 
PREV_BUF_SIZE
);

179 i‡(
¥ev_ªad
>0) {

180 i‡(
	`fwrôe_sha1_fûe
(
¥ev_buf
,

182 
¥ev_ªad
,

183 
obj_ªq
Ë=
¥ev_ªad
) {

184 
¥ev_po¢
 +
¥ev_ªad
;

186 
¥ev_ªad
 = -1;

189 } 
¥ev_ªad
 > 0);

190 
	`˛o£
(
¥evloˇl
);

192 
	`u∆ök
(
¥evfûe
);

196 i‡(
¥ev_ªad
 == -1) {

197 
	`mem£t
(&
obj_ªq
->
°ªam
, 0, (obj_req->stream));

198 
	`öÊ©eInô
(&
obj_ªq
->
°ªam
);

199 
	`SHA1_Inô
(&
obj_ªq
->
c
);

200 i‡(
¥ev_po¢
>0) {

201 
¥ev_po¢
 = 0;

202 
	`l£ek
(
obj_ªq
->
loˇl
, 
SEEK_SET
, 0);

203 
	`·runˇã
(
obj_ªq
->
loˇl
, 0);

207 
¶Ÿ
 = 
	`gë_a˘ive_¶Ÿ
();

208 
¶Ÿ
->
ˇŒback_func
 = 
¥o˚ss_obje˘_ª•⁄£
;

209 
¶Ÿ
->
ˇŒback_d©a
 = 
obj_ªq
;

210 
obj_ªq
->
¶Ÿ
 = slot;

212 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_FILE
, 
obj_ªq
);

213 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_WRITEFUNCTION
, 
fwrôe_sha1_fûe
);

214 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_ERRORBUFFER
, 
obj_ªq
->
îr‹°r
);

215 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_URL
, 
uæ
);

216 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_HTTPHEADER
, 
no_¥agma_hódî
);

220 i‡(
¥ev_po¢
>0) {

221 i‡(
gë_vîbo£ly
)

222 
	`Ârötf
(
°dîr
,

224 
hex
, 
¥ev_po¢
);

225 
	`•rötf
(
ønge
, "R™ge: byãs=%ld-", 
¥ev_po¢
);

226 
ønge_hódî
 = 
	`cuæ_¶i°_≠≥nd
‘™ge_hódî, 
ønge
);

227 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
,

228 
CURLOPT_HTTPHEADER
, 
ønge_hódî
);

232 
obj_ªq
->
°©e
 = 
ACTIVE
;

233 i‡(!
	`°¨t_a˘ive_¶Ÿ
(
¶Ÿ
)) {

234 
obj_ªq
->
°©e
 = 
ABORTED
;

235 
obj_ªq
->
¶Ÿ
 = 
NULL
;

236 
	`˛o£
(
obj_ªq
->
loˇl
); obj_req->local = -1;

237 
	`‰ì
(
obj_ªq
->
uæ
);

240 
	}
}

242 
	$föish_obje˘_ªque°
(
obje˘_ªque°
 *
obj_ªq
)

244 
°©
 
°
;

246 
	`fchmod
(
obj_ªq
->
loˇl
, 0444);

247 
	`˛o£
(
obj_ªq
->
loˇl
); obj_req->local = -1;

249 i‡(
obj_ªq
->
hâp_code
 == 416) {

250 
	`Ârötf
(
°dîr
, "Warning:ÑequestedÑange invalid; we mayálready haveállÅhe data.\n");

251 } i‡(
obj_ªq
->
cuæ_ªsu…
 !
CURLE_OK
) {

252 i‡(
	`°©
(
obj_ªq
->
tmpfûe
, &
°
) == 0)

253 i‡(
°
.
°_size
 == 0)

254 
	`u∆ök
(
obj_ªq
->
tmpfûe
);

258 
	`öÊ©eEnd
(&
obj_ªq
->
°ªam
);

259 
	`SHA1_FöÆ
(
obj_ªq
->
ªÆ_sha1
, &obj_ªq->
c
);

260 i‡(
obj_ªq
->
zªt
 !
Z_STREAM_END
) {

261 
	`u∆ök
(
obj_ªq
->
tmpfûe
);

264 i‡(
	`hashcmp
(
obj_ªq
->
sha1
, obj_ªq->
ªÆ_sha1
)) {

265 
	`u∆ök
(
obj_ªq
->
tmpfûe
);

268 
obj_ªq
->
ª«me
 =

269 
	`move_ãmp_to_fûe
(
obj_ªq
->
tmpfûe
, obj_ªq->
fûíame
);

271 i‡(
obj_ªq
->
ª«me
 == 0)

272 
	`puŒ_ßy
("gŸ %s\n", 
	`sha1_to_hex
(
obj_ªq
->
sha1
));

273 
	}
}

275 
	$¥o˚ss_obje˘_ª•⁄£
(*
ˇŒback_d©a
)

277 
obje˘_ªque°
 *
obj_ªq
 =

278 (
obje˘_ªque°
 *)
ˇŒback_d©a
;

280 
obj_ªq
->
cuæ_ªsu…
 = obj_ªq->
¶Ÿ
->curl_result;

281 
obj_ªq
->
hâp_code
 = obj_ªq->
¶Ÿ
->http_code;

282 
obj_ªq
->
¶Ÿ
 = 
NULL
;

283 
obj_ªq
->
°©e
 = 
COMPLETE
;

286 i‡(
	`missög_èrgë
(
obj_ªq
)) {

287 
	`„tch_Æã∫©es
(
Æt
->
ba£
);

288 i‡(
obj_ªq
->
ªpo
->
√xt
 !
NULL
) {

289 
obj_ªq
->
ªpo
 =

290 
obj_ªq
->
ªpo
->
√xt
;

291 
	`˛o£
(
obj_ªq
->
loˇl
);

292 
obj_ªq
->
loˇl
 = -1;

293 
	`°¨t_obje˘_ªque°
(
obj_ªq
);

298 
	`föish_obje˘_ªque°
(
obj_ªq
);

299 
	}
}

301 
	$ªÀa£_obje˘_ªque°
(
obje˘_ªque°
 *
obj_ªq
)

303 
obje˘_ªque°
 *
íåy
 = 
obje˘_queue_hód
;

305 i‡(
obj_ªq
->
loˇl
 != -1)

306 
	`îr‹
("fdÜókagêöÑñó£: %d", 
obj_ªq
->
loˇl
);

307 i‡(
obj_ªq
 =
obje˘_queue_hód
) {

308 
obje˘_queue_hód
 = 
obj_ªq
->
√xt
;

310 
íåy
->
√xt
 !
NULL
 &&É¡ry->√xà!
obj_ªq
)

311 
íåy
 =É¡ry->
√xt
;

312 i‡(
íåy
->
√xt
 =
obj_ªq
)

313 
íåy
->
√xt
 =Éntry->next->next;

316 
	`‰ì
(
obj_ªq
->
uæ
);

317 
	`‰ì
(
obj_ªq
);

318 
	}
}

320 #ifde‡
USE_CURL_MULTI


321 
	$fûl_a˘ive_¶Ÿs
()

323 
obje˘_ªque°
 *
obj_ªq
 = 
obje˘_queue_hód
;

324 
a˘ive_ªque°_¶Ÿ
 *
¶Ÿ
 = 
a˘ive_queue_hód
;

325 
num_å™s„rs
;

327 
a˘ive_ªque°s
 < 
max_ªque°s
 && 
obj_ªq
 !
NULL
) {

328 i‡(
obj_ªq
->
°©e
 =
WAITING
) {

329 i‡(
	`has_sha1_fûe
(
obj_ªq
->
sha1
))

330 
obj_ªq
->
°©e
 = 
COMPLETE
;

332 
	`°¨t_obje˘_ªque°
(
obj_ªq
);

333 
	`cuæ_mu…i_≥rf‹m
(
cuæm
, &
num_å™s„rs
);

335 
obj_ªq
 = obj_ªq->
√xt
;

338 
¶Ÿ
 !
NULL
) {

339 i‡(!
¶Ÿ
->
ö_u£
 && slŸ->
cuæ
 !
NULL
) {

340 
	`cuæ_ósy_˛ónup
(
¶Ÿ
->
cuæ
);

341 
¶Ÿ
->
cuæ
 = 
NULL
;

343 
¶Ÿ
 = slŸ->
√xt
;

345 
	}
}

348 
	$¥e„tch
(*
sha1
)

350 
obje˘_ªque°
 *
√wªq
;

351 
obje˘_ªque°
 *
èû
;

352 *
fûíame
 = 
	`sha1_fûe_«me
(
sha1
);

354 
√wªq
 = 
	`xmÆloc
((*newreq));

355 
	`hash˝y
(
√wªq
->
sha1
, sha1);

356 
√wªq
->
ªpo
 = 
Æt
;

357 
√wªq
->
uæ
 = 
NULL
;

358 
√wªq
->
loˇl
 = -1;

359 
√wªq
->
°©e
 = 
WAITING
;

360 
	`¢¥ötf
(
√wªq
->
fûíame
, (newreq->filename), "%s", filename);

361 
	`¢¥ötf
(
√wªq
->
tmpfûe
, (newreq->tmpfile),

362 "%s.ãmp", 
fûíame
);

363 
√wªq
->
¶Ÿ
 = 
NULL
;

364 
√wªq
->
√xt
 = 
NULL
;

366 i‡(
obje˘_queue_hód
 =
NULL
) {

367 
obje˘_queue_hód
 = 
√wªq
;

369 
èû
 = 
obje˘_queue_hód
;

370 
èû
->
√xt
 !
NULL
) {

371 
èû
 =Åaû->
√xt
;

373 
èû
->
√xt
 = 
√wªq
;

376 #ifde‡
USE_CURL_MULTI


377 
	`fûl_a˘ive_¶Ÿs
();

378 
	`°ï_a˘ive_¶Ÿs
();

380 
	}
}

382 
	$„tch_ödex
(
Æt_ba£
 *
ªpo
, *
sha1
)

384 *
hex
 = 
	`sha1_to_hex
(
sha1
);

385 *
fûíame
;

386 *
uæ
;

387 
tmpfûe
[
PATH_MAX
];

388 
¥ev_po¢
 = 0;

389 
ønge
[
RANGE_HEADER_SIZE
];

390 
cuæ_¶i°
 *
ønge_hódî
 = 
NULL
;

392 
FILE
 *
ödexfûe
;

393 
a˘ive_ªque°_¶Ÿ
 *
¶Ÿ
;

394 
¶Ÿ_ªsu…s
 
ªsu…s
;

396 i‡(
	`has_∑ck_ödex
(
sha1
))

399 i‡(
gë_vîbo£ly
)

400 
	`Ârötf
(
°dîr
, "Gëtög index f‹Öack %s\n", 
hex
);

402 
uæ
 = 
	`xmÆloc
(
	`°æí
(
ªpo
->
ba£
) + 64);

403 
	`•rötf
(
uæ
, "%s/obje˘s/∑ck/∑ck-%s.idx", 
ªpo
->
ba£
, 
hex
);

405 
fûíame
 = 
	`sha1_∑ck_ödex_«me
(
sha1
);

406 
	`¢¥ötf
(
tmpfûe
, —mpfûe), "%s.ãmp", 
fûíame
);

407 
ödexfûe
 = 
	`f›í
(
tmpfûe
, "a");

408 i‡(!
ödexfûe
)

409  
	`îr‹
("UnableÅo openÜocal file %s forÖack index",

410 
fûíame
);

412 
¶Ÿ
 = 
	`gë_a˘ive_¶Ÿ
();

413 
¶Ÿ
->
ªsu…s
 = &results;

414 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_FILE
, 
ödexfûe
);

415 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_WRITEFUNCTION
, 
fwrôe
);

416 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_URL
, 
uæ
);

417 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_HTTPHEADER
, 
no_¥agma_hódî
);

418 
¶Ÿ
->
loˇl
 = 
ödexfûe
;

422 
¥ev_po¢
 = 
	`·ñl
(
ödexfûe
);

423 i‡(
¥ev_po¢
>0) {

424 i‡(
gë_vîbo£ly
)

425 
	`Ârötf
(
°dîr
,

427 
hex
, 
¥ev_po¢
);

428 
	`•rötf
(
ønge
, "R™ge: byãs=%ld-", 
¥ev_po¢
);

429 
ønge_hódî
 = 
	`cuæ_¶i°_≠≥nd
‘™ge_hódî, 
ønge
);

430 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_HTTPHEADER
, 
ønge_hódî
);

433 i‡(
	`°¨t_a˘ive_¶Ÿ
(
¶Ÿ
)) {

434 
	`run_a˘ive_¶Ÿ
(
¶Ÿ
);

435 i‡(
ªsu…s
.
cuæ_ªsu…
 !
CURLE_OK
) {

436 
	`f˛o£
(
ödexfûe
);

437  
	`îr‹
("U«bÀÅÿgëÖack index %s\n%s", 
uæ
,

438 
cuæ_îr‹°r
);

441 
	`f˛o£
(
ödexfûe
);

442  
	`îr‹
("UnableÅo startÑequest");

445 
	`f˛o£
(
ödexfûe
);

447  
	`move_ãmp_to_fûe
(
tmpfûe
, 
fûíame
);

448 
	}
}

450 
	$£tup_ödex
(
Æt_ba£
 *
ªpo
, *
sha1
)

452 
∑cked_gô
 *
√w_∑ck
;

453 i‡(
	`has_∑ck_fûe
(
sha1
))

456 i‡(
	`„tch_ödex
(
ªpo
, 
sha1
))

459 
√w_∑ck
 = 
	`∑r£_∑ck_ödex
(
sha1
);

460 
√w_∑ck
->
√xt
 = 
ªpo
->
∑cks
;

461 
ªpo
->
∑cks
 = 
√w_∑ck
;

463 
	}
}

465 
	$¥o˚ss_Æã∫©es_ª•⁄£
(*
ˇŒback_d©a
)

467 
Æã∫©es_ªque°
 *
Æt_ªq
 =

468 (
Æã∫©es_ªque°
 *)
ˇŒback_d©a
;

469 
a˘ive_ªque°_¶Ÿ
 *
¶Ÿ
 = 
Æt_ªq
->slot;

470 
Æt_ba£
 *
èû
 = 
Æt
;

471 c⁄° *
ba£
 = 
Æt_ªq
->base;

472 c⁄° 
nuŒ_byã
 = '\0';

473 *
d©a
;

474 
i
 = 0;

476 i‡(
Æt_ªq
->
hâp_•ecific
) {

477 i‡(
¶Ÿ
->
cuæ_ªsu…
 !
CURLE_OK
 ||

478 !
Æt_ªq
->
buf„r
->
po¢
) {

481 
Æt_ªq
->
hâp_•ecific
 = 0;

482 
	`•rötf
(
Æt_ªq
->
uæ
, "%s/objects/info/alternates",

483 
ba£
);

484 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_URL
,

485 
Æt_ªq
->
uæ
);

486 
a˘ive_ªque°s
++;

487 
¶Ÿ
->
ö_u£
 = 1;

488 i‡(
¶Ÿ
->
föished
 !
NULL
)

489 (*
¶Ÿ
->
föished
) = 0;

490 i‡(!
	`°¨t_a˘ive_¶Ÿ
(
¶Ÿ
)) {

491 
gŸ_Æã∫©es
 = -1;

492 
¶Ÿ
->
ö_u£
 = 0;

493 i‡(
¶Ÿ
->
föished
 !
NULL
)

494 (*
¶Ÿ
->
föished
) = 1;

498 } i‡(
¶Ÿ
->
cuæ_ªsu…
 !
CURLE_OK
) {

499 i‡(!
	`missög_èrgë
(
¶Ÿ
)) {

500 
gŸ_Æã∫©es
 = -1;

505 
	`fwrôe_buf„r
(&
nuŒ_byã
, 1, 1, 
Æt_ªq
->
buf„r
);

506 
Æt_ªq
->
buf„r
->
po¢
--;

507 
d©a
 = 
Æt_ªq
->
buf„r
->buffer;

509 
i
 < 
Æt_ªq
->
buf„r
->
po¢
) {

510 
po¢
 = 
i
;

511 
po¢
 < 
Æt_ªq
->
buf„r
->po¢ && 
d©a
[posn] != '\n')

512 
po¢
++;

513 i‡(
d©a
[
po¢
] == '\n') {

514 
okay
 = 0;

515 
£rvîÀn
 = 0;

516 
Æt_ba£
 *
√wÆt
;

517 *
èrgë
 = 
NULL
;

518 *
∑th
;

519 i‡(
d©a
[
i
] == '/') {

526 c⁄° *
cﬁ⁄_ss
 = 
	`°r°r
(
ba£
,"://");

527 i‡(
cﬁ⁄_ss
) {

528 
£rvîÀn
 = (
	`°rchr
(
cﬁ⁄_ss
 + 3, '/')

529 - 
ba£
);

530 
okay
 = 1;

532 } i‡(!
	`memcmp
(
d©a
 + 
i
, "../", 3)) {

550 
i
 += 3;

551 
£rvîÀn
 = 
	`°æí
(
ba£
);

552 
i
 + 2 < 
po¢
 &&

553 !
	`memcmp
(
d©a
 + 
i
, "../", 3)) {

555 
£rvîÀn
--;

556 } 
£rvîÀn
 &&

557 
ba£
[
£rvîÀn
 - 1] != '/');

558 
i
 += 3;

561 
okay
 = 
	`°rchr
(
ba£
, ':') - base + 3 <

562 
£rvîÀn
;

563 } i‡(
Æt_ªq
->
hâp_•ecific
) {

564 *
cﬁ⁄
 = 
	`°rchr
(
d©a
 + 
i
, ':');

565 *
¶ash
 = 
	`°rchr
(
d©a
 + 
i
, '/');

566 i‡(
cﬁ⁄
 && 
¶ash
 && cﬁ⁄ < 
d©a
 + 
po¢
 &&

567 
¶ash
 < 
d©a
 + 
po¢
 && 
cﬁ⁄
 < slash) {

568 
okay
 = 1;

572 i‡(
okay
) {

573 
èrgë
 = 
	`xmÆloc
(
£rvîÀn
 + 
po¢
 - 
i
 - 6);

574 
	`mem˝y
(
èrgë
, 
ba£
, 
£rvîÀn
);

575 
	`mem˝y
(
èrgë
 + 
£rvîÀn
, 
d©a
 + 
i
,

576 
po¢
 - 
i
 - 7);

577 
èrgë
[
£rvîÀn
 + 
po¢
 - 
i
 - 7] = 0;

578 i‡(
gë_vîbo£ly
)

579 
	`Ârötf
(
°dîr
,

580 "Alsÿlookáà%s\n", 
èrgë
);

581 
√wÆt
 = 
	`xmÆloc
((*newalt));

582 
√wÆt
->
√xt
 = 
NULL
;

583 
√wÆt
->
ba£
 = 
èrgë
;

584 
√wÆt
->
gŸ_ödi˚s
 = 0;

585 
√wÆt
->
∑cks
 = 
NULL
;

586 
∑th
 = 
	`°r°r
(
èrgë
, "//");

587 i‡(
∑th
) {

588 
∑th
 = 
	`°rchr
(path+2, '/');

589 i‡(
∑th
)

590 
√wÆt
->
∑th_Àn
 = 
	`°æí
(
∑th
);

593 
èû
->
√xt
 !
NULL
)

594 
èû
 =Åaû->
√xt
;

595 
èû
->
√xt
 = 
√wÆt
;

598 
i
 = 
po¢
 + 1;

601 
gŸ_Æã∫©es
 = 1;

602 
	}
}

604 
	$„tch_Æã∫©es
(c⁄° *
ba£
)

606 
buf„r
 buffer;

607 *
uæ
;

608 *
d©a
;

609 
a˘ive_ªque°_¶Ÿ
 *
¶Ÿ
;

610 
Æã∫©es_ªque°
 
Æt_ªq
;

615 #ifde‡
USE_CURL_MULTI


616 
gŸ_Æã∫©es
 == 0) {

617 
	`°ï_a˘ive_¶Ÿs
();

622 i‡(
gŸ_Æã∫©es
 == 1)

626 
gŸ_Æã∫©es
 = 0;

628 
d©a
 = 
	`xmÆloc
(4096);

629 
buf„r
.
size
 = 4096;

630 
buf„r
.
po¢
 = 0;

631 
buf„r
.buf„∏
d©a
;

633 i‡(
gë_vîbo£ly
)

634 
	`Ârötf
(
°dîr
, "Gëtögá…î«ã†li° f‹ %s\n", 
ba£
);

636 
uæ
 = 
	`xmÆloc
(
	`°æí
(
ba£
) + 31);

637 
	`•rötf
(
uæ
, "%s/obje˘s/öfo/hâp-Æã∫©es", 
ba£
);

641 
¶Ÿ
 = 
	`gë_a˘ive_¶Ÿ
();

642 
¶Ÿ
->
ˇŒback_func
 = 
¥o˚ss_Æã∫©es_ª•⁄£
;

643 
¶Ÿ
->
ˇŒback_d©a
 = &
Æt_ªq
;

645 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_FILE
, &
buf„r
);

646 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_WRITEFUNCTION
, 
fwrôe_buf„r
);

647 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_URL
, 
uæ
);

649 
Æt_ªq
.
ba£
 = base;

650 
Æt_ªq
.
uæ
 = url;

651 
Æt_ªq
.
buf„r
 = &buffer;

652 
Æt_ªq
.
hâp_•ecific
 = 1;

653 
Æt_ªq
.
¶Ÿ
 = slot;

655 i‡(
	`°¨t_a˘ive_¶Ÿ
(
¶Ÿ
))

656 
	`run_a˘ive_¶Ÿ
(
¶Ÿ
);

658 
gŸ_Æã∫©es
 = -1;

660 
	`‰ì
(
d©a
);

661 
	`‰ì
(
uæ
);

662 
	}
}

664 
	$„tch_ödi˚s
(
Æt_ba£
 *
ªpo
)

666 
sha1
[20];

667 *
uæ
;

668 
buf„r
 buffer;

669 *
d©a
;

670 
i
 = 0;

672 
a˘ive_ªque°_¶Ÿ
 *
¶Ÿ
;

673 
¶Ÿ_ªsu…s
 
ªsu…s
;

675 i‡(
ªpo
->
gŸ_ödi˚s
)

678 
d©a
 = 
	`xmÆloc
(4096);

679 
buf„r
.
size
 = 4096;

680 
buf„r
.
po¢
 = 0;

681 
buf„r
.buf„∏
d©a
;

683 i‡(
gë_vîbo£ly
)

684 
	`Ârötf
(
°dîr
, "GëtögÖackÜi° f‹ %s\n", 
ªpo
->
ba£
);

686 
uæ
 = 
	`xmÆloc
(
	`°æí
(
ªpo
->
ba£
) + 21);

687 
	`•rötf
(
uæ
, "%s/obje˘s/öfo/∑cks", 
ªpo
->
ba£
);

689 
¶Ÿ
 = 
	`gë_a˘ive_¶Ÿ
();

690 
¶Ÿ
->
ªsu…s
 = &results;

691 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_FILE
, &
buf„r
);

692 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_WRITEFUNCTION
, 
fwrôe_buf„r
);

693 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_URL
, 
uæ
);

694 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_HTTPHEADER
, 
NULL
);

695 i‡(
	`°¨t_a˘ive_¶Ÿ
(
¶Ÿ
)) {

696 
	`run_a˘ive_¶Ÿ
(
¶Ÿ
);

697 i‡(
ªsu…s
.
cuæ_ªsu…
 !
CURLE_OK
) {

698 i‡(
	`missög_èrgë
(&
ªsu…s
)) {

699 
ªpo
->
gŸ_ödi˚s
 = 1;

700 
	`‰ì
(
buf„r
.buffer);

703 
ªpo
->
gŸ_ödi˚s
 = 0;

704 
	`‰ì
(
buf„r
.buffer);

705  
	`îr‹
("%s", 
cuæ_îr‹°r
);

709 
ªpo
->
gŸ_ödi˚s
 = 0;

710 
	`‰ì
(
buf„r
.buffer);

711  
	`îr‹
("UnableÅo startÑequest");

714 
d©a
 = 
buf„r
.buffer;

715 
i
 < 
buf„r
.
po¢
) {

716 
d©a
[
i
]) {

718 
i
++;

719 i‡(
i
 + 52 <
buf„r
.
po¢
 &&

720 !
	`°∫cmp
(
d©a
 + 
i
, "Öack-", 6) &&

721 !
	`°∫cmp
(
d©a
 + 
i
 + 46, ".pack\n", 6)) {

722 
	`gë_sha1_hex
(
d©a
 + 
i
 + 6, 
sha1
);

723 
	`£tup_ödex
(
ªpo
, 
sha1
);

724 
i
 += 51;

728 
i
 < 
buf„r
.
po¢
 && 
d©a
[i] != '\n')

729 
i
++;

731 
i
++;

734 
	`‰ì
(
buf„r
.buffer);

735 
ªpo
->
gŸ_ödi˚s
 = 1;

737 
	}
}

739 
	$„tch_∑ck
(
Æt_ba£
 *
ªpo
, *
sha1
)

741 *
uæ
;

742 
∑cked_gô
 *
èrgë
;

743 
∑cked_gô
 **
l°
;

744 
FILE
 *
∑ckfûe
;

745 *
fûíame
;

746 
tmpfûe
[
PATH_MAX
];

747 
ªt
;

748 
¥ev_po¢
 = 0;

749 
ønge
[
RANGE_HEADER_SIZE
];

750 
cuæ_¶i°
 *
ønge_hódî
 = 
NULL
;

752 
a˘ive_ªque°_¶Ÿ
 *
¶Ÿ
;

753 
¶Ÿ_ªsu…s
 
ªsu…s
;

755 i‡(
	`„tch_ödi˚s
(
ªpo
))

757 
èrgë
 = 
	`föd_sha1_∑ck
(
sha1
, 
ªpo
->
∑cks
);

758 i‡(!
èrgë
)

761 i‡(
gë_vîbo£ly
) {

762 
	`Ârötf
(
°dîr
, "GettingÖack %s\n",

763 
	`sha1_to_hex
(
èrgë
->
sha1
));

764 
	`Ârötf
(
°dîr
, " which contains %s\n",

765 
	`sha1_to_hex
(
sha1
));

768 
uæ
 = 
	`xmÆloc
(
	`°æí
(
ªpo
->
ba£
) + 65);

769 
	`•rötf
(
uæ
, "%s/objects/pack/pack-%s.pack",

770 
ªpo
->
ba£
, 
	`sha1_to_hex
(
èrgë
->
sha1
));

772 
fûíame
 = 
	`sha1_∑ck_«me
(
èrgë
->
sha1
);

773 
	`¢¥ötf
(
tmpfûe
, —mpfûe), "%s.ãmp", 
fûíame
);

774 
∑ckfûe
 = 
	`f›í
(
tmpfûe
, "a");

775 i‡(!
∑ckfûe
)

776  
	`îr‹
("UnableÅo openÜocal file %s forÖack",

777 
fûíame
);

779 
¶Ÿ
 = 
	`gë_a˘ive_¶Ÿ
();

780 
¶Ÿ
->
ªsu…s
 = &results;

781 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_FILE
, 
∑ckfûe
);

782 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_WRITEFUNCTION
, 
fwrôe
);

783 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_URL
, 
uæ
);

784 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_HTTPHEADER
, 
no_¥agma_hódî
);

785 
¶Ÿ
->
loˇl
 = 
∑ckfûe
;

789 
¥ev_po¢
 = 
	`·ñl
(
∑ckfûe
);

790 i‡(
¥ev_po¢
>0) {

791 i‡(
gë_vîbo£ly
)

792 
	`Ârötf
(
°dîr
,

794 
	`sha1_to_hex
(
èrgë
->
sha1
), 
¥ev_po¢
);

795 
	`•rötf
(
ønge
, "R™ge: byãs=%ld-", 
¥ev_po¢
);

796 
ønge_hódî
 = 
	`cuæ_¶i°_≠≥nd
‘™ge_hódî, 
ønge
);

797 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_HTTPHEADER
, 
ønge_hódî
);

800 i‡(
	`°¨t_a˘ive_¶Ÿ
(
¶Ÿ
)) {

801 
	`run_a˘ive_¶Ÿ
(
¶Ÿ
);

802 i‡(
ªsu…s
.
cuæ_ªsu…
 !
CURLE_OK
) {

803 
	`f˛o£
(
∑ckfûe
);

804  
	`îr‹
("U«bÀÅÿgëÖack fûê%s\n%s", 
uæ
,

805 
cuæ_îr‹°r
);

808 
	`f˛o£
(
∑ckfûe
);

809  
	`îr‹
("UnableÅo startÑequest");

812 
èrgë
->
∑ck_size
 = 
	`·ñl
(
∑ckfûe
);

813 
	`f˛o£
(
∑ckfûe
);

815 
ªt
 = 
	`move_ãmp_to_fûe
(
tmpfûe
, 
fûíame
);

816 i‡(
ªt
)

817  
ªt
;

819 
l°
 = &
ªpo
->
∑cks
;

820 *
l°
 !
èrgë
)

821 
l°
 = &((*l°)->
√xt
);

822 *
l°
 = (*l°)->
√xt
;

824 i‡(
	`vîify_∑ck
(
èrgë
, 0))

826 
	`ö°Æl_∑cked_gô
(
èrgë
);

829 
	}
}

831 
	$ab‹t_obje˘_ªque°
(
obje˘_ªque°
 *
obj_ªq
)

833 i‡(
obj_ªq
->
loˇl
 >= 0) {

834 
	`˛o£
(
obj_ªq
->
loˇl
);

835 
obj_ªq
->
loˇl
 = -1;

837 
	`u∆ök
(
obj_ªq
->
tmpfûe
);

838 i‡(
obj_ªq
->
¶Ÿ
) {

839 
	`ªÀa£_a˘ive_¶Ÿ
(
obj_ªq
->
¶Ÿ
);

840 
obj_ªq
->
¶Ÿ
 = 
NULL
;

842 
	`ªÀa£_obje˘_ªque°
(
obj_ªq
);

843 
	}
}

845 
	$„tch_obje˘
(
Æt_ba£
 *
ªpo
, *
sha1
)

847 *
hex
 = 
	`sha1_to_hex
(
sha1
);

848 
ªt
 = 0;

849 
obje˘_ªque°
 *
obj_ªq
 = 
obje˘_queue_hód
;

851 
obj_ªq
 !
NULL
 && 
	`hashcmp
(obj_ªq->
sha1
, sha1))

852 
obj_ªq
 = obj_ªq->
√xt
;

853 i‡(
obj_ªq
 =
NULL
)

854  
	`îr‹
("Couldn'àfödÑeque° f‹ %†öÅhêqueue", 
hex
);

856 i‡(
	`has_sha1_fûe
(
obj_ªq
->
sha1
)) {

857 
	`ab‹t_obje˘_ªque°
(
obj_ªq
);

861 #ifde‡
USE_CURL_MULTI


862 
obj_ªq
->
°©e
 =
WAITING
) {

863 
	`°ï_a˘ive_¶Ÿs
();

866 
	`°¨t_obje˘_ªque°
(
obj_ªq
);

869 
obj_ªq
->
°©e
 =
ACTIVE
) {

870 
	`run_a˘ive_¶Ÿ
(
obj_ªq
->
¶Ÿ
);

872 i‡(
obj_ªq
->
loˇl
 != -1) {

873 
	`˛o£
(
obj_ªq
->
loˇl
); obj_req->local = -1;

876 i‡(
obj_ªq
->
°©e
 =
ABORTED
) {

877 
ªt
 = 
	`îr‹
("Reque° f‹ %†ab‹ãd", 
hex
);

878 } i‡(
obj_ªq
->
cuæ_ªsu…
 !
CURLE_OK
 &&

879 
obj_ªq
->
hâp_code
 != 416) {

880 i‡(
	`missög_èrgë
(
obj_ªq
))

881 
ªt
 = -1;

883 
ªt
 = 
	`îr‹
("%s (curl_result = %d, http_code = %ld, sha1 = %s)",

884 
obj_ªq
->
îr‹°r
, obj_ªq->
cuæ_ªsu…
,

885 
obj_ªq
->
hâp_code
, 
hex
);

886 } i‡(
obj_ªq
->
zªt
 !
Z_STREAM_END
) {

887 
c‹ru±_obje˘_found
++;

888 
ªt
 = 
	`îr‹
("Fûê%†(%sËc‹ru±", 
hex
, 
obj_ªq
->
uæ
);

889 } i‡(
	`hashcmp
(
obj_ªq
->
sha1
, obj_ªq->
ªÆ_sha1
)) {

890 
ªt
 = 
	`îr‹
("Fûê%†ha†bad hash", 
hex
);

891 } i‡(
obj_ªq
->
ª«me
 < 0) {

892 
ªt
 = 
	`îr‹
("unableÅo write sha1 filename %s",

893 
obj_ªq
->
fûíame
);

896 
	`ªÀa£_obje˘_ªque°
(
obj_ªq
);

897  
ªt
;

898 
	}
}

900 
	$„tch
(*
sha1
)

902 
Æt_ba£
 *
Ætba£
 = 
Æt
;

904 i‡(!
	`„tch_obje˘
(
Ætba£
, 
sha1
))

906 
Ætba£
) {

907 i‡(!
	`„tch_∑ck
(
Ætba£
, 
sha1
))

909 
	`„tch_Æã∫©es
(
Æt
->
ba£
);

910 
Ætba£
 =á…ba£->
√xt
;

912  
	`îr‹
("U«bÀÅÿföd %†undî %s", 
	`sha1_to_hex
(
sha1
),

913 
Æt
->
ba£
);

914 
	}
}

916 
ölöe
 
	$√eds_quŸe
(
ch
)

918 i‡(((
ch
 >= 'A') && (ch <= 'Z'))

919 || ((
ch
 >= 'a') && (ch <= 'z'))

920 || ((
ch
 >= '0') && (ch <= '9'))

921 || (
ch
 == '/')

922 || (
ch
 == '-')

923 || (
ch
 == '.'))

926 
	}
}

928 
ölöe
 
	$hex
(
v
)

930 i‡(
v
 < 10)  '0' + v;

931  'A' + 
v
 - 10;

932 
	}
}

934 *
	$quŸe_ªf_uæ
(c⁄° *
ba£
, c⁄° *
ªf
)

936 c⁄° *
˝
;

937 *
dp
, *
qªf
;

938 
Àn
, 
ba£Àn
, 
ch
;

940 
ba£Àn
 = 
	`°æí
(
ba£
);

941 
Àn
 = 
ba£Àn
 + 6;

942 
˝
 = 
ªf
; (
ch
 = *˝Ë!0; cp++, 
Àn
++)

943 i‡(
	`√eds_quŸe
(
ch
))

944 
Àn
 += 2;

945 
qªf
 = 
	`xmÆloc
(
Àn
);

946 
	`mem˝y
(
qªf
, 
ba£
, 
ba£Àn
);

947 
	`mem˝y
(
qªf
 + 
ba£Àn
, "refs/", 5);

948 
˝
 = 
ªf
, 
dp
 = 
qªf
 + 
ba£Àn
 + 5; (
ch
 = *cp) != 0; cp++) {

949 i‡(
	`√eds_quŸe
(
ch
)) {

950 *
dp
++ = '%';

951 *
dp
++ = 
	`hex
((
ch
 >> 4) & 0xF);

952 *
dp
++ = 
	`hex
(
ch
 & 0xF);

955 *
dp
++ = 
ch
;

957 *
dp
 = 0;

959  
qªf
;

960 
	}
}

962 
	$„tch_ªf
(*
ªf
, *
sha1
)

964 *
uæ
;

965 
hex
[42];

966 
buf„r
 buffer;

967 c⁄° *
ba£
 = 
Æt
->base;

968 
a˘ive_ªque°_¶Ÿ
 *
¶Ÿ
;

969 
¶Ÿ_ªsu…s
 
ªsu…s
;

970 
buf„r
.
size
 = 41;

971 
buf„r
.
po¢
 = 0;

972 
buf„r
.buf„∏
hex
;

973 
hex
[41] = '\0';

975 
uæ
 = 
	`quŸe_ªf_uæ
(
ba£
, 
ªf
);

976 
¶Ÿ
 = 
	`gë_a˘ive_¶Ÿ
();

977 
¶Ÿ
->
ªsu…s
 = &results;

978 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_FILE
, &
buf„r
);

979 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_WRITEFUNCTION
, 
fwrôe_buf„r
);

980 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_HTTPHEADER
, 
NULL
);

981 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_URL
, 
uæ
);

982 i‡(
	`°¨t_a˘ive_¶Ÿ
(
¶Ÿ
)) {

983 
	`run_a˘ive_¶Ÿ
(
¶Ÿ
);

984 i‡(
ªsu…s
.
cuæ_ªsu…
 !
CURLE_OK
)

985  
	`îr‹
("Couldn't get %s for %s\n%s",

986 
uæ
, 
ªf
, 
cuæ_îr‹°r
);

988  
	`îr‹
("UnableÅo startÑequest");

991 
hex
[40] = '\0';

992 
	`gë_sha1_hex
(
hex
, 
sha1
);

994 
	}
}

996 
	$maö
(
¨gc
, c⁄° **
¨gv
)

998 
commôs
;

999 c⁄° **
wrôe_ªf
 = 
NULL
;

1000 **
commô_id
;

1001 c⁄° *
uæ
;

1002 *
∑th
;

1003 
¨g
 = 1;

1004 
rc
 = 0;

1006 
	`£tup_gô_dúe˘‹y
();

1007 
	`gô_c⁄fig
(
gô_deÁu…_c⁄fig
);

1009 
¨g
 < 
¨gc
 && 
¨gv
[arg][0] == '-') {

1010 i‡(
¨gv
[
¨g
][1] == 't') {

1011 
gë_åì
 = 1;

1012 } i‡(
¨gv
[
¨g
][1] == 'c') {

1013 
gë_hi°‹y
 = 1;

1014 } i‡(
¨gv
[
¨g
][1] == 'a') {

1015 
gë_Æl
 = 1;

1016 
gë_åì
 = 1;

1017 
gë_hi°‹y
 = 1;

1018 } i‡(
¨gv
[
¨g
][1] == 'v') {

1019 
gë_vîbo£ly
 = 1;

1020 } i‡(
¨gv
[
¨g
][1] == 'w') {

1021 
wrôe_ªf
 = &
¨gv
[
¨g
 + 1];

1022 
¨g
++;

1023 } i‡(!
	`°rcmp
(
¨gv
[
¨g
], "--recover")) {

1024 
gë_ªcovî
 = 1;

1025 } i‡(!
	`°rcmp
(
¨gv
[
¨g
], "--stdin")) {

1026 
commôs_⁄_°dö
 = 1;

1028 
¨g
++;

1030 i‡(
¨gc
 < 
¨g
 + 2 - 
commôs_⁄_°dö
) {

1031 
	`ußge
("git-http-fetch [-c] [-t] [-a] [-v] [--recover] [-wÑef] [--stdin] commit-id url");

1034 i‡(
commôs_⁄_°dö
) {

1035 
commôs
 = 
	`puŒ_èrgës_°dö
(&
commô_id
, &
wrôe_ªf
);

1037 
commô_id
 = (**Ë&
¨gv
[
¨g
++];

1038 
commôs
 = 1;

1040 
uæ
 = 
¨gv
[
¨g
];

1042 
	`hâp_öô
();

1044 
no_¥agma_hódî
 = 
	`cuæ_¶i°_≠≥nd
(no_pragma_header, "Pragma:");

1046 
Æt
 = 
	`xmÆloc
((*alt));

1047 
Æt
->
ba£
 = 
uæ
;

1048 
Æt
->
gŸ_ödi˚s
 = 0;

1049 
Æt
->
∑cks
 = 
NULL
;

1050 
Æt
->
√xt
 = 
NULL
;

1051 
∑th
 = 
	`°r°r
(
uæ
, "//");

1052 i‡(
∑th
) {

1053 
∑th
 = 
	`°rchr
(path+2, '/');

1054 i‡(
∑th
)

1055 
Æt
->
∑th_Àn
 = 
	`°æí
(
∑th
);

1058 i‡(
	`puŒ
(
commôs
, 
commô_id
, 
wrôe_ªf
, 
uæ
))

1059 
rc
 = 1;

1061 
	`hâp_˛ónup
();

1063 
	`cuæ_¶i°_‰ì_Æl
(
no_¥agma_hódî
);

1065 i‡(
commôs_⁄_°dö
)

1066 
	`puŒ_èrgës_‰ì
(
commôs
, 
commô_id
, 
wrôe_ªf
);

1068 i‡(
c‹ru±_obje˘_found
) {

1069 
	`Ârötf
(
°dîr
,

1074  
rc
;

1075 
	}
}

	@http-push.c

1 
	~"ˇche.h
"

2 
	~"commô.h
"

3 
	~"∑ck.h
"

4 
	~"„tch.h
"

5 
	~"èg.h
"

6 
	~"blob.h
"

7 
	~"hâp.h
"

8 
	~"ªfs.h
"

9 
	~"diff.h
"

10 
	~"ªvisi⁄.h
"

11 
	~"exec_cmd.h
"

13 
	~<ex∑t.h
>

15 c⁄° 
	ghâp_push_ußge
[] =

18 #i‚de‡
XML_STATUS_OK


19 
	eXML_Sètus
 {

20 
	mXML_STATUS_OK
 = 1,

21 
	mXML_STATUS_ERROR
 = 0

23 
	#XML_STATUS_OK
 1

	)

24 
	#XML_STATUS_ERROR
 0

	)

27 
	#PREV_BUF_SIZE
 4096

	)

28 
	#RANGE_HEADER_SIZE
 30

	)

31 
	#DAV_LOCK
 "LOCK"

	)

32 
	#DAV_MKCOL
 "MKCOL"

	)

33 
	#DAV_MOVE
 "MOVE"

	)

34 
	#DAV_PROPFIND
 "PROPFIND"

	)

35 
	#DAV_PUT
 "PUT"

	)

36 
	#DAV_UNLOCK
 "UNLOCK"

	)

37 
	#DAV_DELETE
 "DELETE"

	)

40 
	#DAV_PROP_LOCKWR
 (1u << 0)

	)

41 
	#DAV_PROP_LOCKEX
 (1u << 1)

	)

42 
	#DAV_LOCK_OK
 (1u << 2)

	)

45 
	#DAV_CTX_LOCKENTRY
 ".mu…i°©us.ª•⁄£.¥›°©.¥›.suµ‹ãdlock.lockíåy"

	)

46 
	#DAV_CTX_LOCKTYPE_WRITE
 ".mu…i°©us.ª•⁄£.¥›°©.¥›.suµ‹ãdlock.lockíåy.lockty≥.wrôe"

	)

47 
	#DAV_CTX_LOCKTYPE_EXCLUSIVE
 ".mu…i°©us.ª•⁄£.¥›°©.¥›.suµ‹ãdlock.lockíåy.locksc›e.ex˛usive"

	)

48 
	#DAV_ACTIVELOCK_OWNER
 ".¥›.lockdiscovîy.a˘ivñock.ow√r.hªf"

	)

49 
	#DAV_ACTIVELOCK_TIMEOUT
 ".¥›.lockdiscovîy.a˘ivñock.timeout"

	)

50 
	#DAV_ACTIVELOCK_TOKEN
 ".¥›.lockdiscovîy.a˘ivñock.locktokí.hªf"

	)

51 
	#DAV_PROPFIND_RESP
 ".mu…i°©us.ª•⁄£"

	)

52 
	#DAV_PROPFIND_NAME
 ".mu…i°©us.ª•⁄£.hªf"

	)

53 
	#DAV_PROPFIND_COLLECTION
 ".mu…i°©us.ª•⁄£.¥›°©.¥›.ªsour˚ty≥.cﬁÀ˘i⁄"

	)

56 
	#PROPFIND_SUPPORTEDLOCK_REQUEST
 "<?xm»vîsi⁄=\"1.0\"Éncodög=\"utf-8\" ?>\n<D:¥›föd xm s:D=\"DAV:\">\n<D:¥› xm s:R=\"%s\">\n<D:suµ‹ãdlock/>\n</D:¥›>\n</D:¥›föd>"

	)

57 
	#PROPFIND_ALL_REQUEST
 "<?xm»vîsi⁄=\"1.0\"Éncodög=\"utf-8\" ?>\n<D:¥›föd xm s:D=\"DAV:\">\n<D:ÆÕr›/>\n</D:¥›föd>"

	)

58 
	#LOCK_REQUEST
 "<?xm»vîsi⁄=\"1.0\"Éncodög=\"utf-8\" ?>\n<D:locköfÿxm s:D=\"DAV:\">\n<D:locksc›e><D:ex˛usive/></D:locksc›e>\n<D:lockty≥><D:wrôe/></D:lockty≥>\n<D:ow√r>\n<D:hªf>maûto:%s</D:hªf>\n</D:ow√r>\n</D:locköfo>"

	)

60 
	#LOCK_TIME
 600

	)

61 
	#LOCK_REFRESH
 30

	)

65 
	#LOCAL
 (1u<<16)

	)

66 
	#REMOTE
 (1u<<17)

	)

67 
	#FETCHING
 (1u<<18)

	)

68 
	#PUSHING
 (1u<<19)

	)

71 
	#MAXDEPTH
 5

	)

73 
	gpushög
;

74 
	gab‹ãd
;

75 sig√d 
	gªmŸe_dú_exi°s
[256];

77 
cuæ_¶i°
 *
	gno_¥agma_hódî
;

78 
cuæ_¶i°
 *
	gdeÁu…_hódîs
;

80 
	gpush_vîbo£ly
;

81 
	gpush_Æl
;

82 
	gf‹˚_Æl
;

84 
obje˘_li°
 *
	gobje˘s
;

86 
	sªpo


88 *
	muæ
;

89 
	m∑th_Àn
;

90 
	mhas_öfo_ªfs
;

91 
	mˇn_upd©e_öfo_ªfs
;

92 
	mhas_öfo_∑cks
;

93 
∑cked_gô
 *
	m∑cks
;

94 
ªmŸe_lock
 *
	mlocks
;

97 
ªpo
 *
	gªmŸe
;

99 
	eå™s„r_°©e
 {

100 
	mNEED_FETCH
,

101 
	mRUN_FETCH_LOOSE
,

102 
	mRUN_FETCH_PACKED
,

103 
	mNEED_PUSH
,

104 
	mRUN_MKCOL
,

105 
	mRUN_PUT
,

106 
	mRUN_MOVE
,

107 
	mABORTED
,

108 
	mCOMPLETE
,

111 
	så™s„r_ªque°


113 
obje˘
 *
	mobj
;

114 *
	muæ
;

115 *
	mde°
;

116 
ªmŸe_lock
 *
	mlock
;

117 
cuæ_¶i°
 *
	mhódîs
;

118 
buf„r
 
	mbuf„r
;

119 
	mfûíame
[
PATH_MAX
];

120 
	mtmpfûe
[
PATH_MAX
];

121 
	mloˇl_fûío
;

122 
FILE
 *
	mloˇl_°ªam
;

123 
å™s„r_°©e
 
	m°©e
;

124 
CURLcode
 
	mcuæ_ªsu…
;

125 
	mîr‹°r
[
CURL_ERROR_SIZE
];

126 
	mhâp_code
;

127 
	mªÆ_sha1
[20];

128 
SHA_CTX
 
	mc
;

129 
z_°ªam
 
	m°ªam
;

130 
	mzªt
;

131 
	mª«me
;

132 *
	mu£rD©a
;

133 
a˘ive_ªque°_¶Ÿ
 *
	m¶Ÿ
;

134 
å™s„r_ªque°
 *
	m√xt
;

137 
å™s„r_ªque°
 *
	gªque°_queue_hód
;

139 
	sxml_˘x


141 *
	m«me
;

142 
	mÀn
;

143 *
	mcd©a
;

144 (*
	mu£rFunc
)(
xml_˘x
 *
	m˘x
, 
	mèg_˛o£d
);

145 *
	mu£rD©a
;

148 
	sªmŸe_lock


150 *
	muæ
;

151 *
	mow√r
;

152 *
	mtokí
;

153 
time_t
 
	m°¨t_time
;

154 
	mtimeout
;

155 
	mª‰eshög
;

156 
ªmŸe_lock
 *
	m√xt
;

160 
	#PROCESS_FILES
 (1u << 0)

	)

161 
	#PROCESS_DIRS
 (1u << 1)

	)

162 
	#RECURSIVE
 (1u << 2)

	)

165 
	#IS_DIR
 (1u << 0)

	)

167 
	sªmŸe_ls_˘x


169 *
	m∑th
;

170 (*
	mu£rFunc
)(
ªmŸe_ls_˘x
 *
	mls
);

171 *
	mu£rD©a
;

172 
	mÊags
;

173 *
	mdíåy_«me
;

174 
	mdíåy_Êags
;

175 
ªmŸe_ls_˘x
 *
	m∑ª¡
;

178 
föish_ªque°
(
å™s„r_ªque°
 *
ªque°
);

179 
ªÀa£_ªque°
(
å™s„r_ªque°
 *
ªque°
);

181 
	$¥o˚ss_ª•⁄£
(*
ˇŒback_d©a
)

183 
å™s„r_ªque°
 *
ªque°
 =

184 (
å™s„r_ªque°
 *)
ˇŒback_d©a
;

186 
	`föish_ªque°
(
ªque°
);

187 
	}
}

189 #ifde‡
USE_CURL_MULTI


190 
size_t
 
	$fwrôe_sha1_fûe
(*
±r
, 
size_t
 
ñtsize
, size_à
nmemb
,

191 *
d©a
)

193 
ex≤
[4096];

194 
size_t
 
size
 = 
ñtsize
 * 
nmemb
;

195 
po¢
 = 0;

196 
å™s„r_ªque°
 *
ªque°
 = (å™s„r_ªque° *)
d©a
;

198 
ssize_t
 
ªtvÆ
 = 
	`xwrôe
(
ªque°
->
loˇl_fûío
,

199 (*Ë
±r
 + 
po¢
, 
size
 -Öosn);

200 i‡(
ªtvÆ
 < 0)

201  
po¢
;

202 
po¢
 +
ªtvÆ
;

203 } 
po¢
 < 
size
);

205 
ªque°
->
°ªam
.
avaû_ö
 = 
size
;

206 
ªque°
->
°ªam
.
√xt_ö
 = 
±r
;

208 
ªque°
->
°ªam
.
√xt_out
 = 
ex≤
;

209 
ªque°
->
°ªam
.
avaû_out
 = (
ex≤
);

210 
ªque°
->
zªt
 = 
	`öÊ©e
(&ªque°->
°ªam
, 
Z_SYNC_FLUSH
);

211 
	`SHA1_Upd©e
(&
ªque°
->
c
, 
ex≤
,

212 (
ex≤
Ë- 
ªque°
->
°ªam
.
avaû_out
);

213 } 
ªque°
->
°ªam
.
avaû_ö
 &&Ñeque°->
zªt
 =
Z_OK
);

214 
d©a_ª˚ived
++;

215  
size
;

216 
	}
}

218 
	$°¨t_„tch_loo£
(
å™s„r_ªque°
 *
ªque°
)

220 *
hex
 = 
	`sha1_to_hex
(
ªque°
->
obj
->
sha1
);

221 *
fûíame
;

222 
¥evfûe
[
PATH_MAX
];

223 *
uæ
;

224 *
po¢
;

225 
¥evloˇl
;

226 
¥ev_buf
[
PREV_BUF_SIZE
];

227 
ssize_t
 
¥ev_ªad
 = 0;

228 
¥ev_po¢
 = 0;

229 
ønge
[
RANGE_HEADER_SIZE
];

230 
cuæ_¶i°
 *
ønge_hódî
 = 
NULL
;

231 
a˘ive_ªque°_¶Ÿ
 *
¶Ÿ
;

233 
fûíame
 = 
	`sha1_fûe_«me
(
ªque°
->
obj
->
sha1
);

234 
	`¢¥ötf
(
ªque°
->
fûíame
, (request->filename), "%s", filename);

235 
	`¢¥ötf
(
ªque°
->
tmpfûe
, (request->tmpfile),

236 "%s.ãmp", 
fûíame
);

238 
	`¢¥ötf
(
¥evfûe
, ’ªvfûe), "%s.¥ev", 
ªque°
->
fûíame
);

239 
	`u∆ök
(
¥evfûe
);

240 
	`ª«me
(
ªque°
->
tmpfûe
, 
¥evfûe
);

241 
	`u∆ök
(
ªque°
->
tmpfûe
);

243 i‡(
ªque°
->
loˇl_fûío
 != -1)

244 
	`îr‹
("fdÜókagêö sèπ: %d", 
ªque°
->
loˇl_fûío
);

245 
ªque°
->
loˇl_fûío
 = 
	`›í
‘eque°->
tmpfûe
,

246 
O_WRONLY
 | 
O_CREAT
 | 
O_EXCL
, 0666);

250 i‡(
ªque°
->
loˇl_fûío
 < 0 && 
î∫o
 =
ENOENT
) {

251 *
dú
 = 
	`°ºchr
(
ªque°
->
tmpfûe
, '/');

252 i‡(
dú
) {

253 *
dú
 = 0;

254 
	`mkdú
(
ªque°
->
tmpfûe
, 0777);

255 *
dú
 = '/';

257 
ªque°
->
loˇl_fûío
 = 
	`›í
‘eque°->
tmpfûe
,

258 
O_WRONLY
 | 
O_CREAT
 | 
O_EXCL
, 0666);

261 i‡(
ªque°
->
loˇl_fûío
 < 0) {

262 
ªque°
->
°©e
 = 
ABORTED
;

263 
	`îr‹
("Couldn't createÅemporary file %s for %s: %s",

264 
ªque°
->
tmpfûe
,Ñeque°->
fûíame
, 
	`°ªº‹
(
î∫o
));

268 
	`mem£t
(&
ªque°
->
°ªam
, 0, (request->stream));

270 
	`öÊ©eInô
(&
ªque°
->
°ªam
);

272 
	`SHA1_Inô
(&
ªque°
->
c
);

274 
uæ
 = 
	`xmÆloc
(
	`°æí
(
ªmŸe
->url) + 50);

275 
ªque°
->
uæ
 = 
	`xmÆloc
(
	`°æí
(
ªmŸe
->url) + 50);

276 
	`°r˝y
(
uæ
, 
ªmŸe
->url);

277 
po¢
 = 
uæ
 + 
	`°æí
(
ªmŸe
->url);

278 
	`°r˝y
(
po¢
, "objects/");

279 
po¢
 += 8;

280 
	`mem˝y
(
po¢
, 
hex
, 2);

281 
po¢
 += 2;

282 *(
po¢
++) = '/';

283 
	`°r˝y
(
po¢
, 
hex
 + 2);

284 
	`°r˝y
(
ªque°
->
uæ
, url);

288 
¥evloˇl
 = 
	`›í
(
¥evfûe
, 
O_RDONLY
);

289 i‡(
¥evloˇl
 != -1) {

291 
¥ev_ªad
 = 
	`xªad
(
¥evloˇl
, 
¥ev_buf
, 
PREV_BUF_SIZE
);

292 i‡(
¥ev_ªad
>0) {

293 i‡(
	`fwrôe_sha1_fûe
(
¥ev_buf
,

295 
¥ev_ªad
,

296 
ªque°
Ë=
¥ev_ªad
) {

297 
¥ev_po¢
 +
¥ev_ªad
;

299 
¥ev_ªad
 = -1;

302 } 
¥ev_ªad
 > 0);

303 
	`˛o£
(
¥evloˇl
);

305 
	`u∆ök
(
¥evfûe
);

309 i‡(
¥ev_ªad
 == -1) {

310 
	`mem£t
(&
ªque°
->
°ªam
, 0, (request->stream));

311 
	`öÊ©eInô
(&
ªque°
->
°ªam
);

312 
	`SHA1_Inô
(&
ªque°
->
c
);

313 i‡(
¥ev_po¢
>0) {

314 
¥ev_po¢
 = 0;

315 
	`l£ek
(
ªque°
->
loˇl_fûío
, 
SEEK_SET
, 0);

316 
	`·runˇã
(
ªque°
->
loˇl_fûío
, 0);

320 
¶Ÿ
 = 
	`gë_a˘ive_¶Ÿ
();

321 
¶Ÿ
->
ˇŒback_func
 = 
¥o˚ss_ª•⁄£
;

322 
¶Ÿ
->
ˇŒback_d©a
 = 
ªque°
;

323 
ªque°
->
¶Ÿ
 = slot;

325 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_FILE
, 
ªque°
);

326 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_WRITEFUNCTION
, 
fwrôe_sha1_fûe
);

327 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_ERRORBUFFER
, 
ªque°
->
îr‹°r
);

328 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_URL
, 
uæ
);

329 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_HTTPHEADER
, 
no_¥agma_hódî
);

333 i‡(
¥ev_po¢
>0) {

334 i‡(
push_vîbo£ly
)

335 
	`Ârötf
(
°dîr
,

337 
hex
, 
¥ev_po¢
);

338 
	`•rötf
(
ønge
, "R™ge: byãs=%ld-", 
¥ev_po¢
);

339 
ønge_hódî
 = 
	`cuæ_¶i°_≠≥nd
‘™ge_hódî, 
ønge
);

340 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
,

341 
CURLOPT_HTTPHEADER
, 
ønge_hódî
);

345 
ªque°
->
°©e
 = 
RUN_FETCH_LOOSE
;

346 i‡(!
	`°¨t_a˘ive_¶Ÿ
(
¶Ÿ
)) {

347 
	`Ârötf
(
°dîr
, "UnableÅo start GETÑequest\n");

348 
ªmŸe
->
ˇn_upd©e_öfo_ªfs
 = 0;

349 
	`ªÀa£_ªque°
(
ªque°
);

351 
	}
}

353 
	$°¨t_mkcﬁ
(
å™s„r_ªque°
 *
ªque°
)

355 *
hex
 = 
	`sha1_to_hex
(
ªque°
->
obj
->
sha1
);

356 
a˘ive_ªque°_¶Ÿ
 *
¶Ÿ
;

357 *
po¢
;

359 
ªque°
->
uæ
 = 
	`xmÆloc
(
	`°æí
(
ªmŸe
->url) + 13);

360 
	`°r˝y
(
ªque°
->
uæ
, 
ªmŸe
->url);

361 
po¢
 = 
ªque°
->
uæ
 + 
	`°æí
(
ªmŸe
->url);

362 
	`°r˝y
(
po¢
, "objects/");

363 
po¢
 += 8;

364 
	`mem˝y
(
po¢
, 
hex
, 2);

365 
po¢
 += 2;

366 
	`°r˝y
(
po¢
, "/");

368 
¶Ÿ
 = 
	`gë_a˘ive_¶Ÿ
();

369 
¶Ÿ
->
ˇŒback_func
 = 
¥o˚ss_ª•⁄£
;

370 
¶Ÿ
->
ˇŒback_d©a
 = 
ªque°
;

371 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_HTTPGET
, 1);

372 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_URL
, 
ªque°
->
uæ
);

373 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_ERRORBUFFER
, 
ªque°
->
îr‹°r
);

374 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_CUSTOMREQUEST
, 
DAV_MKCOL
);

375 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_WRITEFUNCTION
, 
fwrôe_nuŒ
);

377 i‡(
	`°¨t_a˘ive_¶Ÿ
(
¶Ÿ
)) {

378 
ªque°
->
¶Ÿ
 = slot;

379 
ªque°
->
°©e
 = 
RUN_MKCOL
;

381 
ªque°
->
°©e
 = 
ABORTED
;

382 
	`‰ì
(
ªque°
->
uæ
);

383 
ªque°
->
uæ
 = 
NULL
;

385 
	}
}

388 
	$°¨t_„tch_∑cked
(
å™s„r_ªque°
 *
ªque°
)

390 *
uæ
;

391 
∑cked_gô
 *
èrgë
;

392 
FILE
 *
∑ckfûe
;

393 *
fûíame
;

394 
¥ev_po¢
 = 0;

395 
ønge
[
RANGE_HEADER_SIZE
];

396 
cuæ_¶i°
 *
ønge_hódî
 = 
NULL
;

398 
å™s„r_ªque°
 *
check_ªque°
 = 
ªque°_queue_hód
;

399 
a˘ive_ªque°_¶Ÿ
 *
¶Ÿ
;

401 
èrgë
 = 
	`föd_sha1_∑ck
(
ªque°
->
obj
->
sha1
, 
ªmŸe
->
∑cks
);

402 i‡(!
èrgë
) {

403 
	`Ârötf
(
°dîr
, "U«bÀÅÿ„tch %s, wû»nŸ bêabÀÅÿupd©ê£rvî infÿªfs\n", 
	`sha1_to_hex
(
ªque°
->
obj
->
sha1
));

404 
ªmŸe
->
ˇn_upd©e_öfo_ªfs
 = 0;

405 
	`ªÀa£_ªque°
(
ªque°
);

409 
	`Ârötf
(
°dîr
, "FëchögÖack %s\n", 
	`sha1_to_hex
(
èrgë
->
sha1
));

410 
	`Ârötf
(
°dîr
, " which c⁄èö†%s\n", 
	`sha1_to_hex
(
ªque°
->
obj
->
sha1
));

412 
fûíame
 = 
	`sha1_∑ck_«me
(
èrgë
->
sha1
);

413 
	`¢¥ötf
(
ªque°
->
fûíame
, (request->filename), "%s", filename);

414 
	`¢¥ötf
(
ªque°
->
tmpfûe
, (request->tmpfile),

415 "%s.ãmp", 
fûíame
);

417 
uæ
 = 
	`xmÆloc
(
	`°æí
(
ªmŸe
->url) + 64);

418 
	`•rötf
(
uæ
, "%sobjects/pack/pack-%s.pack",

419 
ªmŸe
->
uæ
, 
	`sha1_to_hex
(
èrgë
->
sha1
));

422 
check_ªque°
) {

423 i‡(
check_ªque°
->
°©e
 =
RUN_FETCH_PACKED
 &&

424 !
	`°rcmp
(
check_ªque°
->
uæ
, url)) {

425 
	`‰ì
(
uæ
);

426 
	`ªÀa£_ªque°
(
ªque°
);

429 
check_ªque°
 = check_ªque°->
√xt
;

432 
∑ckfûe
 = 
	`f›í
(
ªque°
->
tmpfûe
, "a");

433 i‡(!
∑ckfûe
) {

434 
	`Ârötf
(
°dîr
, "UnableÅo openÜocal file %s forÖack",

435 
fûíame
);

436 
ªmŸe
->
ˇn_upd©e_öfo_ªfs
 = 0;

437 
	`‰ì
(
uæ
);

441 
¶Ÿ
 = 
	`gë_a˘ive_¶Ÿ
();

442 
¶Ÿ
->
ˇŒback_func
 = 
¥o˚ss_ª•⁄£
;

443 
¶Ÿ
->
ˇŒback_d©a
 = 
ªque°
;

444 
ªque°
->
¶Ÿ
 = slot;

445 
ªque°
->
loˇl_°ªam
 = 
∑ckfûe
;

446 
ªque°
->
u£rD©a
 = 
èrgë
;

448 
ªque°
->
uæ
 = url;

449 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_FILE
, 
∑ckfûe
);

450 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_WRITEFUNCTION
, 
fwrôe
);

451 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_URL
, 
uæ
);

452 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_HTTPHEADER
, 
no_¥agma_hódî
);

453 
¶Ÿ
->
loˇl
 = 
∑ckfûe
;

457 
¥ev_po¢
 = 
	`·ñl
(
∑ckfûe
);

458 i‡(
¥ev_po¢
>0) {

459 i‡(
push_vîbo£ly
)

460 
	`Ârötf
(
°dîr
,

462 
	`sha1_to_hex
(
èrgë
->
sha1
), 
¥ev_po¢
);

463 
	`•rötf
(
ønge
, "R™ge: byãs=%ld-", 
¥ev_po¢
);

464 
ønge_hódî
 = 
	`cuæ_¶i°_≠≥nd
‘™ge_hódî, 
ønge
);

465 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_HTTPHEADER
, 
ønge_hódî
);

469 
ªque°
->
°©e
 = 
RUN_FETCH_PACKED
;

470 i‡(!
	`°¨t_a˘ive_¶Ÿ
(
¶Ÿ
)) {

471 
	`Ârötf
(
°dîr
, "UnableÅo start GETÑequest\n");

472 
ªmŸe
->
ˇn_upd©e_öfo_ªfs
 = 0;

473 
	`ªÀa£_ªque°
(
ªque°
);

475 
	}
}

477 
	$°¨t_put
(
å™s„r_ªque°
 *
ªque°
)

479 *
hex
 = 
	`sha1_to_hex
(
ªque°
->
obj
->
sha1
);

480 
a˘ive_ªque°_¶Ÿ
 *
¶Ÿ
;

481 *
po¢
;

482 
ty≥
[20];

483 
hdr
[50];

484 *
u≈acked
;

485 
Àn
;

486 
hdæí
;

487 
ssize_t
 
size
;

488 
z_°ªam
 
°ªam
;

490 
u≈acked
 = 
	`ªad_sha1_fûe
(
ªque°
->
obj
->
sha1
, 
ty≥
, &
Àn
);

491 
hdæí
 = 
	`•rötf
(
hdr
, "%†%lu", 
ty≥
, 
Àn
) + 1;

494 
	`mem£t
(&
°ªam
, 0, (stream));

495 
	`deÊ©eInô
(&
°ªam
, 
zlib_com¥essi⁄_Àvñ
);

496 
size
 = 
	`deÊ©eBound
(&
°ªam
, 
Àn
 + 
hdæí
);

497 
ªque°
->
buf„r
.buf„∏
	`xmÆloc
(
size
);

500 
°ªam
.
√xt_out
 = 
ªque°
->
buf„r
.buffer;

501 
°ªam
.
avaû_out
 = 
size
;

504 
°ªam
.
√xt_ö
 = (*)
hdr
;

505 
°ªam
.
avaû_ö
 = 
hdæí
;

506 
	`deÊ©e
(&
°ªam
, 0Ë=
Z_OK
)

510 
°ªam
.
√xt_ö
 = 
u≈acked
;

511 
°ªam
.
avaû_ö
 = 
Àn
;

512 
	`deÊ©e
(&
°ªam
, 
Z_FINISH
Ë=
Z_OK
)

514 
	`deÊ©eEnd
(&
°ªam
);

515 
	`‰ì
(
u≈acked
);

517 
ªque°
->
buf„r
.
size
 = 
°ªam
.
tŸÆ_out
;

518 
ªque°
->
buf„r
.
po¢
 = 0;

520 
ªque°
->
uæ
 = 
	`xmÆloc
(
	`°æí
(
ªmŸe
->url) +

521 
	`°æí
(
ªque°
->
lock
->
tokí
) + 51);

522 
	`°r˝y
(
ªque°
->
uæ
, 
ªmŸe
->url);

523 
po¢
 = 
ªque°
->
uæ
 + 
	`°æí
(
ªmŸe
->url);

524 
	`°r˝y
(
po¢
, "objects/");

525 
po¢
 += 8;

526 
	`mem˝y
(
po¢
, 
hex
, 2);

527 
po¢
 += 2;

528 *(
po¢
++) = '/';

529 
	`°r˝y
(
po¢
, 
hex
 + 2);

530 
ªque°
->
de°
 = 
	`xmÆloc
(
	`°æí
‘eque°->
uæ
) + 14);

531 
	`•rötf
(
ªque°
->
de°
, "De°ö©i⁄: %s",Ñeque°->
uæ
);

532 
po¢
 += 38;

533 *(
po¢
++) = '_';

534 
	`°r˝y
(
po¢
, 
ªque°
->
lock
->
tokí
);

536 
¶Ÿ
 = 
	`gë_a˘ive_¶Ÿ
();

537 
¶Ÿ
->
ˇŒback_func
 = 
¥o˚ss_ª•⁄£
;

538 
¶Ÿ
->
ˇŒback_d©a
 = 
ªque°
;

539 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_INFILE
, &
ªque°
->
buf„r
);

540 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_INFILESIZE
, 
ªque°
->
buf„r
.
size
);

541 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_READFUNCTION
, 
‰ód_buf„r
);

542 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_WRITEFUNCTION
, 
fwrôe_nuŒ
);

543 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_CUSTOMREQUEST
, 
DAV_PUT
);

544 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_UPLOAD
, 1);

545 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_PUT
, 1);

546 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_NOBODY
, 0);

547 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_URL
, 
ªque°
->
uæ
);

549 i‡(
	`°¨t_a˘ive_¶Ÿ
(
¶Ÿ
)) {

550 
ªque°
->
¶Ÿ
 = slot;

551 
ªque°
->
°©e
 = 
RUN_PUT
;

553 
ªque°
->
°©e
 = 
ABORTED
;

554 
	`‰ì
(
ªque°
->
uæ
);

555 
ªque°
->
uæ
 = 
NULL
;

557 
	}
}

559 
	$°¨t_move
(
å™s„r_ªque°
 *
ªque°
)

561 
a˘ive_ªque°_¶Ÿ
 *
¶Ÿ
;

562 
cuæ_¶i°
 *
dav_hódîs
 = 
NULL
;

564 
¶Ÿ
 = 
	`gë_a˘ive_¶Ÿ
();

565 
¶Ÿ
->
ˇŒback_func
 = 
¥o˚ss_ª•⁄£
;

566 
¶Ÿ
->
ˇŒback_d©a
 = 
ªque°
;

567 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_HTTPGET
, 1);

568 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_CUSTOMREQUEST
, 
DAV_MOVE
);

569 
dav_hódîs
 = 
	`cuæ_¶i°_≠≥nd
(dav_hódîs, 
ªque°
->
de°
);

570 
dav_hódîs
 = 
	`cuæ_¶i°_≠≥nd
(dav_headers, "Overwrite: T");

571 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_HTTPHEADER
, 
dav_hódîs
);

572 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_WRITEFUNCTION
, 
fwrôe_nuŒ
);

573 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_URL
, 
ªque°
->
uæ
);

575 i‡(
	`°¨t_a˘ive_¶Ÿ
(
¶Ÿ
)) {

576 
ªque°
->
¶Ÿ
 = slot;

577 
ªque°
->
°©e
 = 
RUN_MOVE
;

579 
ªque°
->
°©e
 = 
ABORTED
;

580 
	`‰ì
(
ªque°
->
uæ
);

581 
ªque°
->
uæ
 = 
NULL
;

583 
	}
}

585 
	$ª‰esh_lock
(
ªmŸe_lock
 *
lock
)

587 
a˘ive_ªque°_¶Ÿ
 *
¶Ÿ
;

588 
¶Ÿ_ªsu…s
 
ªsu…s
;

589 *
if_hódî
;

590 
timeout_hódî
[25];

591 
cuæ_¶i°
 *
dav_hódîs
 = 
NULL
;

592 
rc
 = 0;

594 
lock
->
ª‰eshög
 = 1;

596 
if_hódî
 = 
	`xmÆloc
(
	`°æí
(
lock
->
tokí
) + 25);

597 
	`•rötf
(
if_hódî
, "If: (<›aquñocktokí:%s>)", 
lock
->
tokí
);

598 
	`•rötf
(
timeout_hódî
, "Timeout: Sec⁄d-%ld", 
lock
->
timeout
);

599 
dav_hódîs
 = 
	`cuæ_¶i°_≠≥nd
(dav_hódîs, 
if_hódî
);

600 
dav_hódîs
 = 
	`cuæ_¶i°_≠≥nd
(dav_hódîs, 
timeout_hódî
);

602 
¶Ÿ
 = 
	`gë_a˘ive_¶Ÿ
();

603 
¶Ÿ
->
ªsu…s
 = &results;

604 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_HTTPGET
, 1);

605 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_WRITEFUNCTION
, 
fwrôe_nuŒ
);

606 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_URL
, 
lock
->
uæ
);

607 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_CUSTOMREQUEST
, 
DAV_LOCK
);

608 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_HTTPHEADER
, 
dav_hódîs
);

610 i‡(
	`°¨t_a˘ive_¶Ÿ
(
¶Ÿ
)) {

611 
	`run_a˘ive_¶Ÿ
(
¶Ÿ
);

612 i‡(
ªsu…s
.
cuæ_ªsu…
 !
CURLE_OK
) {

613 
	`Ârötf
(
°dîr
, "LOCK HTTPÉrror %ld\n",

614 
ªsu…s
.
hâp_code
);

616 
lock
->
°¨t_time
 = 
	`time
(
NULL
);

617 
rc
 = 1;

621 
lock
->
ª‰eshög
 = 0;

622 
	`cuæ_¶i°_‰ì_Æl
(
dav_hódîs
);

623 
	`‰ì
(
if_hódî
);

625  
rc
;

626 
	}
}

628 
	$check_locks
()

630 
ªmŸe_lock
 *
lock
 = 
ªmŸe
->
locks
;

631 
time_t
 
cuºít_time
 = 
	`time
(
NULL
);

632 
time_ªmaöög
;

634 
lock
) {

635 
time_ªmaöög
 = 
lock
->
°¨t_time
 +Üock->
timeout
 -

636 
cuºít_time
;

637 i‡(!
lock
->
ª‰eshög
 && 
time_ªmaöög
 < 
LOCK_REFRESH
) {

638 i‡(!
	`ª‰esh_lock
(
lock
)) {

639 
	`Ârötf
(
°dîr
,

641 
lock
->
uæ
);

642 
ab‹ãd
 = 1;

646 
lock
 =Üock->
√xt
;

648 
	}
}

650 
	$ªÀa£_ªque°
(
å™s„r_ªque°
 *
ªque°
)

652 
å™s„r_ªque°
 *
íåy
 = 
ªque°_queue_hód
;

654 i‡(
ªque°
 =
ªque°_queue_hód
) {

655 
ªque°_queue_hód
 = 
ªque°
->
√xt
;

657 
íåy
->
√xt
 !
NULL
 &&É¡ry->√xà!
ªque°
)

658 
íåy
 =É¡ry->
√xt
;

659 i‡(
íåy
->
√xt
 =
ªque°
)

660 
íåy
->
√xt
 =Éntry->next->next;

663 i‡(
ªque°
->
loˇl_fûío
 != -1)

664 
	`˛o£
(
ªque°
->
loˇl_fûío
);

665 i‡(
ªque°
->
loˇl_°ªam
)

666 
	`f˛o£
(
ªque°
->
loˇl_°ªam
);

667 i‡(
ªque°
->
uæ
 !
NULL
)

668 
	`‰ì
(
ªque°
->
uæ
);

669 
	`‰ì
(
ªque°
);

670 
	}
}

672 
	$föish_ªque°
(
å™s„r_ªque°
 *
ªque°
)

674 
°©
 
°
;

675 
∑cked_gô
 *
èrgë
;

676 
∑cked_gô
 **
l°
;

678 
ªque°
->
cuæ_ªsu…
 =Ñeque°->
¶Ÿ
->curl_result;

679 
ªque°
->
hâp_code
 =Ñeque°->
¶Ÿ
->http_code;

680 
ªque°
->
¶Ÿ
 = 
NULL
;

683 
	`check_locks
();

685 i‡(
ªque°
->
hódîs
 !
NULL
)

686 
	`cuæ_¶i°_‰ì_Æl
(
ªque°
->
hódîs
);

689 i‡(
ªque°
->
°©e
 !
RUN_PUT
) {

690 
	`‰ì
(
ªque°
->
uæ
);

691 
ªque°
->
uæ
 = 
NULL
;

694 i‡(
ªque°
->
°©e
 =
RUN_MKCOL
) {

695 i‡(
ªque°
->
cuæ_ªsu…
 =
CURLE_OK
 ||

696 
ªque°
->
hâp_code
 == 405) {

697 
ªmŸe_dú_exi°s
[
ªque°
->
obj
->
sha1
[0]] = 1;

698 
	`°¨t_put
(
ªque°
);

700 
	`Ârötf
(
°dîr
, "MKCOL %s failed,áborting (%d/%ld)\n",

701 
	`sha1_to_hex
(
ªque°
->
obj
->
sha1
),

702 
ªque°
->
cuæ_ªsu…
,Ñeque°->
hâp_code
);

703 
ªque°
->
°©e
 = 
ABORTED
;

704 
ab‹ãd
 = 1;

706 } i‡(
ªque°
->
°©e
 =
RUN_PUT
) {

707 i‡(
ªque°
->
cuæ_ªsu…
 =
CURLE_OK
) {

708 
	`°¨t_move
(
ªque°
);

710 
	`Ârötf
(
°dîr
, "PUT %s failed,áborting (%d/%ld)\n",

711 
	`sha1_to_hex
(
ªque°
->
obj
->
sha1
),

712 
ªque°
->
cuæ_ªsu…
,Ñeque°->
hâp_code
);

713 
ªque°
->
°©e
 = 
ABORTED
;

714 
ab‹ãd
 = 1;

716 } i‡(
ªque°
->
°©e
 =
RUN_MOVE
) {

717 i‡(
ªque°
->
cuæ_ªsu…
 =
CURLE_OK
) {

718 i‡(
push_vîbo£ly
)

719 
	`Ârötf
(
°dîr
, " sent %s\n",

720 
	`sha1_to_hex
(
ªque°
->
obj
->
sha1
));

721 
ªque°
->
obj
->
Êags
 |
REMOTE
;

722 
	`ªÀa£_ªque°
(
ªque°
);

724 
	`Ârötf
(
°dîr
, "MOVE %s failed,áborting (%d/%ld)\n",

725 
	`sha1_to_hex
(
ªque°
->
obj
->
sha1
),

726 
ªque°
->
cuæ_ªsu…
,Ñeque°->
hâp_code
);

727 
ªque°
->
°©e
 = 
ABORTED
;

728 
ab‹ãd
 = 1;

730 } i‡(
ªque°
->
°©e
 =
RUN_FETCH_LOOSE
) {

731 
	`fchmod
(
ªque°
->
loˇl_fûío
, 0444);

732 
	`˛o£
(
ªque°
->
loˇl_fûío
);Ñequest->local_fileno = -1;

734 i‡(
ªque°
->
cuæ_ªsu…
 !
CURLE_OK
 &&

735 
ªque°
->
hâp_code
 != 416) {

736 i‡(
	`°©
(
ªque°
->
tmpfûe
, &
°
) == 0) {

737 i‡(
°
.
°_size
 == 0)

738 
	`u∆ök
(
ªque°
->
tmpfûe
);

741 i‡(
ªque°
->
hâp_code
 == 416)

742 
	`Ârötf
(
°dîr
, "Warning:ÑequestedÑange invalid; we mayálready haveállÅhe data.\n");

744 
	`öÊ©eEnd
(&
ªque°
->
°ªam
);

745 
	`SHA1_FöÆ
(
ªque°
->
ªÆ_sha1
, &ªque°->
c
);

746 i‡(
ªque°
->
zªt
 !
Z_STREAM_END
) {

747 
	`u∆ök
(
ªque°
->
tmpfûe
);

748 } i‡(
	`hashcmp
(
ªque°
->
obj
->
sha1
,Ñeque°->
ªÆ_sha1
)) {

749 
	`u∆ök
(
ªque°
->
tmpfûe
);

751 
ªque°
->
ª«me
 =

752 
	`move_ãmp_to_fûe
(

753 
ªque°
->
tmpfûe
,

754 
ªque°
->
fûíame
);

755 i‡(
ªque°
->
ª«me
 == 0) {

756 
ªque°
->
obj
->
Êags
 |(
LOCAL
 | 
REMOTE
);

762 i‡(
ªque°
->
obj
->
Êags
 & 
LOCAL
)

763 
	`ªÀa£_ªque°
(
ªque°
);

765 
	`°¨t_„tch_∑cked
(
ªque°
);

767 } i‡(
ªque°
->
°©e
 =
RUN_FETCH_PACKED
) {

768 i‡(
ªque°
->
cuæ_ªsu…
 !
CURLE_OK
) {

769 
	`Ârötf
(
°dîr
, "UnableÅo getÖack file %s\n%s",

770 
ªque°
->
uæ
, 
cuæ_îr‹°r
);

771 
ªmŸe
->
ˇn_upd©e_öfo_ªfs
 = 0;

773 
off_t
 
∑ck_size
 = 
	`·ñl
(
ªque°
->
loˇl_°ªam
);

775 
	`f˛o£
(
ªque°
->
loˇl_°ªam
);

776 
ªque°
->
loˇl_°ªam
 = 
NULL
;

777 i‡(!
	`move_ãmp_to_fûe
(
ªque°
->
tmpfûe
,

778 
ªque°
->
fûíame
)) {

779 
èrgë
 = (
∑cked_gô
 *)
ªque°
->
u£rD©a
;

780 
èrgë
->
∑ck_size
 =Öack_size;

781 
l°
 = &
ªmŸe
->
∑cks
;

782 *
l°
 !
èrgë
)

783 
l°
 = &((*l°)->
√xt
);

784 *
l°
 = (*l°)->
√xt
;

786 i‡(!
	`vîify_∑ck
(
èrgë
, 0))

787 
	`ö°Æl_∑cked_gô
(
èrgë
);

789 
ªmŸe
->
ˇn_upd©e_öfo_ªfs
 = 0;

792 
	`ªÀa£_ªque°
(
ªque°
);

794 
	}
}

796 #ifde‡
USE_CURL_MULTI


797 
	$fûl_a˘ive_¶Ÿs
()

799 
å™s„r_ªque°
 *
ªque°
 = 
ªque°_queue_hód
;

800 
å™s„r_ªque°
 *
√xt
;

801 
a˘ive_ªque°_¶Ÿ
 *
¶Ÿ
 = 
a˘ive_queue_hód
;

802 
num_å™s„rs
;

804 i‡(
ab‹ãd
)

807 
a˘ive_ªque°s
 < 
max_ªque°s
 && 
ªque°
 !
NULL
) {

808 
√xt
 = 
ªque°
->next;

809 i‡(
ªque°
->
°©e
 =
NEED_FETCH
) {

810 
	`°¨t_„tch_loo£
(
ªque°
);

811 } i‡(
pushög
 && 
ªque°
->
°©e
 =
NEED_PUSH
) {

812 i‡(
ªmŸe_dú_exi°s
[
ªque°
->
obj
->
sha1
[0]] == 1) {

813 
	`°¨t_put
(
ªque°
);

815 
	`°¨t_mkcﬁ
(
ªque°
);

817 
	`cuæ_mu…i_≥rf‹m
(
cuæm
, &
num_å™s„rs
);

819 
ªque°
 = 
√xt
;

822 
¶Ÿ
 !
NULL
) {

823 i‡(!
¶Ÿ
->
ö_u£
 && slŸ->
cuæ
 !
NULL
) {

824 
	`cuæ_ósy_˛ónup
(
¶Ÿ
->
cuæ
);

825 
¶Ÿ
->
cuæ
 = 
NULL
;

827 
¶Ÿ
 = slŸ->
√xt
;

829 
	}
}

832 
gë_ªmŸe_obje˘_li°
(
∑ª¡
);

834 
	$add_„tch_ªque°
(
obje˘
 *
obj
)

836 
å™s„r_ªque°
 *
ªque°
;

838 
	`check_locks
();

844 i‡(
ªmŸe_dú_exi°s
[
obj
->
sha1
[0]] == -1)

845 
	`gë_ªmŸe_obje˘_li°
(
obj
->
sha1
[0]);

846 i‡(
obj
->
Êags
 & (
LOCAL
 | 
FETCHING
))

849 
obj
->
Êags
 |
FETCHING
;

850 
ªque°
 = 
	`xmÆloc
((*request));

851 
ªque°
->
obj
 = obj;

852 
ªque°
->
uæ
 = 
NULL
;

853 
ªque°
->
lock
 = 
NULL
;

854 
ªque°
->
hódîs
 = 
NULL
;

855 
ªque°
->
loˇl_fûío
 = -1;

856 
ªque°
->
loˇl_°ªam
 = 
NULL
;

857 
ªque°
->
°©e
 = 
NEED_FETCH
;

858 
ªque°
->
√xt
 = 
ªque°_queue_hód
;

859 
ªque°_queue_hód
 = 
ªque°
;

861 #ifde‡
USE_CURL_MULTI


862 
	`fûl_a˘ive_¶Ÿs
();

863 
	`°ï_a˘ive_¶Ÿs
();

865 
	}
}

867 
	$add_£nd_ªque°
(
obje˘
 *
obj
, 
ªmŸe_lock
 *
lock
)

869 
å™s„r_ªque°
 *
ªque°
 = 
ªque°_queue_hód
;

870 
∑cked_gô
 *
èrgë
;

873 
	`check_locks
();

879 i‡(
ªmŸe_dú_exi°s
[
obj
->
sha1
[0]] == -1)

880 
	`gë_ªmŸe_obje˘_li°
(
obj
->
sha1
[0]);

881 i‡(
obj
->
Êags
 & (
REMOTE
 | 
PUSHING
))

883 
èrgë
 = 
	`föd_sha1_∑ck
(
obj
->
sha1
, 
ªmŸe
->
∑cks
);

884 i‡(
èrgë
) {

885 
obj
->
Êags
 |
REMOTE
;

889 
obj
->
Êags
 |
PUSHING
;

890 
ªque°
 = 
	`xmÆloc
((*request));

891 
ªque°
->
obj
 = obj;

892 
ªque°
->
uæ
 = 
NULL
;

893 
ªque°
->
lock
 =Üock;

894 
ªque°
->
hódîs
 = 
NULL
;

895 
ªque°
->
loˇl_fûío
 = -1;

896 
ªque°
->
loˇl_°ªam
 = 
NULL
;

897 
ªque°
->
°©e
 = 
NEED_PUSH
;

898 
ªque°
->
√xt
 = 
ªque°_queue_hód
;

899 
ªque°_queue_hód
 = 
ªque°
;

901 #ifde‡
USE_CURL_MULTI


902 
	`fûl_a˘ive_¶Ÿs
();

903 
	`°ï_a˘ive_¶Ÿs
();

907 
	}
}

909 
	$„tch_ödex
(*
sha1
)

911 *
hex
 = 
	`sha1_to_hex
(
sha1
);

912 *
fûíame
;

913 *
uæ
;

914 
tmpfûe
[
PATH_MAX
];

915 
¥ev_po¢
 = 0;

916 
ønge
[
RANGE_HEADER_SIZE
];

917 
cuæ_¶i°
 *
ønge_hódî
 = 
NULL
;

919 
FILE
 *
ödexfûe
;

920 
a˘ive_ªque°_¶Ÿ
 *
¶Ÿ
;

921 
¶Ÿ_ªsu…s
 
ªsu…s
;

924 
uæ
 = 
	`xmÆloc
(
	`°æí
(
ªmŸe
->url) + 64);

925 
	`•rötf
(
uæ
, "%sobje˘s/∑ck/∑ck-%s.∑ck", 
ªmŸe
->uæ, 
hex
);

926 
¶Ÿ
 = 
	`gë_a˘ive_¶Ÿ
();

927 
¶Ÿ
->
ªsu…s
 = &results;

928 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_URL
, 
uæ
);

929 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_NOBODY
, 1);

930 i‡(
	`°¨t_a˘ive_¶Ÿ
(
¶Ÿ
)) {

931 
	`run_a˘ive_¶Ÿ
(
¶Ÿ
);

932 i‡(
ªsu…s
.
cuæ_ªsu…
 !
CURLE_OK
) {

933 
	`‰ì
(
uæ
);

934  
	`îr‹
("UnableÅo verifyÖack %s isávailable",

935 
hex
);

938  
	`îr‹
("UnableÅo startÑequest");

941 i‡(
	`has_∑ck_ödex
(
sha1
))

944 i‡(
push_vîbo£ly
)

945 
	`Ârötf
(
°dîr
, "Gëtög index f‹Öack %s\n", 
hex
);

947 
	`•rötf
(
uæ
, "%sobje˘s/∑ck/∑ck-%s.idx", 
ªmŸe
->uæ, 
hex
);

949 
fûíame
 = 
	`sha1_∑ck_ödex_«me
(
sha1
);

950 
	`¢¥ötf
(
tmpfûe
, —mpfûe), "%s.ãmp", 
fûíame
);

951 
ödexfûe
 = 
	`f›í
(
tmpfûe
, "a");

952 i‡(!
ödexfûe
)

953  
	`îr‹
("UnableÅo openÜocal file %s forÖack index",

954 
fûíame
);

956 
¶Ÿ
 = 
	`gë_a˘ive_¶Ÿ
();

957 
¶Ÿ
->
ªsu…s
 = &results;

958 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_NOBODY
, 0);

959 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_HTTPGET
, 1);

960 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_FILE
, 
ödexfûe
);

961 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_WRITEFUNCTION
, 
fwrôe
);

962 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_URL
, 
uæ
);

963 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_HTTPHEADER
, 
no_¥agma_hódî
);

964 
¶Ÿ
->
loˇl
 = 
ödexfûe
;

968 
¥ev_po¢
 = 
	`·ñl
(
ödexfûe
);

969 i‡(
¥ev_po¢
>0) {

970 i‡(
push_vîbo£ly
)

971 
	`Ârötf
(
°dîr
,

973 
hex
, 
¥ev_po¢
);

974 
	`•rötf
(
ønge
, "R™ge: byãs=%ld-", 
¥ev_po¢
);

975 
ønge_hódî
 = 
	`cuæ_¶i°_≠≥nd
‘™ge_hódî, 
ønge
);

976 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_HTTPHEADER
, 
ønge_hódî
);

979 i‡(
	`°¨t_a˘ive_¶Ÿ
(
¶Ÿ
)) {

980 
	`run_a˘ive_¶Ÿ
(
¶Ÿ
);

981 i‡(
ªsu…s
.
cuæ_ªsu…
 !
CURLE_OK
) {

982 
	`‰ì
(
uæ
);

983 
	`f˛o£
(
ödexfûe
);

984  
	`îr‹
("U«bÀÅÿgëÖack index %s\n%s", 
uæ
,

985 
cuæ_îr‹°r
);

988 
	`‰ì
(
uæ
);

989 
	`f˛o£
(
ödexfûe
);

990  
	`îr‹
("UnableÅo startÑequest");

993 
	`‰ì
(
uæ
);

994 
	`f˛o£
(
ödexfûe
);

996  
	`move_ãmp_to_fûe
(
tmpfûe
, 
fûíame
);

997 
	}
}

999 
	$£tup_ödex
(*
sha1
)

1001 
∑cked_gô
 *
√w_∑ck
;

1003 i‡(
	`„tch_ödex
(
sha1
))

1006 
√w_∑ck
 = 
	`∑r£_∑ck_ödex
(
sha1
);

1007 
√w_∑ck
->
√xt
 = 
ªmŸe
->
∑cks
;

1008 
ªmŸe
->
∑cks
 = 
√w_∑ck
;

1010 
	}
}

1012 
	$„tch_ödi˚s
()

1014 
sha1
[20];

1015 *
uæ
;

1016 
buf„r
 buffer;

1017 *
d©a
;

1018 
i
 = 0;

1020 
a˘ive_ªque°_¶Ÿ
 *
¶Ÿ
;

1021 
¶Ÿ_ªsu…s
 
ªsu…s
;

1023 
d©a
 = 
	`xˇŒoc
(1, 4096);

1024 
buf„r
.
size
 = 4096;

1025 
buf„r
.
po¢
 = 0;

1026 
buf„r
.buf„∏
d©a
;

1028 i‡(
push_vîbo£ly
)

1029 
	`Ârötf
(
°dîr
, "GettingÖackÜist\n");

1031 
uæ
 = 
	`xmÆloc
(
	`°æí
(
ªmŸe
->url) + 20);

1032 
	`•rötf
(
uæ
, "%sobje˘s/öfo/∑cks", 
ªmŸe
->url);

1034 
¶Ÿ
 = 
	`gë_a˘ive_¶Ÿ
();

1035 
¶Ÿ
->
ªsu…s
 = &results;

1036 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_FILE
, &
buf„r
);

1037 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_WRITEFUNCTION
, 
fwrôe_buf„r
);

1038 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_URL
, 
uæ
);

1039 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_HTTPHEADER
, 
NULL
);

1040 i‡(
	`°¨t_a˘ive_¶Ÿ
(
¶Ÿ
)) {

1041 
	`run_a˘ive_¶Ÿ
(
¶Ÿ
);

1042 i‡(
ªsu…s
.
cuæ_ªsu…
 !
CURLE_OK
) {

1043 
	`‰ì
(
buf„r
.buffer);

1044 
	`‰ì
(
uæ
);

1045 i‡(
ªsu…s
.
hâp_code
 == 404)

1048  
	`îr‹
("%s", 
cuæ_îr‹°r
);

1051 
	`‰ì
(
buf„r
.buffer);

1052 
	`‰ì
(
uæ
);

1053  
	`îr‹
("UnableÅo startÑequest");

1055 
	`‰ì
(
uæ
);

1057 
d©a
 = 
buf„r
.buffer;

1058 
i
 < 
buf„r
.
po¢
) {

1059 
d©a
[
i
]) {

1061 
i
++;

1062 i‡(
i
 + 52 < 
buf„r
.
po¢
 &&

1063 !
	`°∫cmp
(
d©a
 + 
i
, "Öack-", 6) &&

1064 !
	`°∫cmp
(
d©a
 + 
i
 + 46, ".pack\n", 6)) {

1065 
	`gë_sha1_hex
(
d©a
 + 
i
 + 6, 
sha1
);

1066 
	`£tup_ödex
(
sha1
);

1067 
i
 += 51;

1071 
d©a
[
i
] != '\n')

1072 
i
++;

1074 
i
++;

1077 
	`‰ì
(
buf„r
.buffer);

1079 
	}
}

1081 
ölöe
 
	$√eds_quŸe
(
ch
)

1083 i‡(((
ch
 >= 'A') && (ch <= 'Z'))

1084 || ((
ch
 >= 'a') && (ch <= 'z'))

1085 || ((
ch
 >= '0') && (ch <= '9'))

1086 || (
ch
 == '/')

1087 || (
ch
 == '-')

1088 || (
ch
 == '.'))

1091 
	}
}

1093 
ölöe
 
	$hex
(
v
)

1095 i‡(
v
 < 10)  '0' + v;

1096  'A' + 
v
 - 10;

1097 
	}
}

1099 *
	$quŸe_ªf_uæ
(c⁄° *
ba£
, c⁄° *
ªf
)

1101 c⁄° *
˝
;

1102 *
dp
, *
qªf
;

1103 
Àn
, 
ba£Àn
, 
ch
;

1105 
ba£Àn
 = 
	`°æí
(
ba£
);

1106 
Àn
 = 
ba£Àn
 + 1;

1107 
˝
 = 
ªf
; (
ch
 = *˝Ë!0; cp++, 
Àn
++)

1108 i‡(
	`√eds_quŸe
(
ch
))

1109 
Àn
 += 2;

1110 
qªf
 = 
	`xmÆloc
(
Àn
);

1111 
	`mem˝y
(
qªf
, 
ba£
, 
ba£Àn
);

1112 
˝
 = 
ªf
, 
dp
 = 
qªf
 + 
ba£Àn
; (
ch
 = *cp) != 0; cp++) {

1113 i‡(
	`√eds_quŸe
(
ch
)) {

1114 *
dp
++ = '%';

1115 *
dp
++ = 
	`hex
((
ch
 >> 4) & 0xF);

1116 *
dp
++ = 
	`hex
(
ch
 & 0xF);

1119 *
dp
++ = 
ch
;

1121 *
dp
 = 0;

1123  
qªf
;

1124 
	}
}

1126 
	$„tch_ªf
(*
ªf
, *
sha1
)

1128 *
uæ
;

1129 
hex
[42];

1130 
buf„r
 buffer;

1131 *
ba£
 = 
ªmŸe
->
uæ
;

1132 
a˘ive_ªque°_¶Ÿ
 *
¶Ÿ
;

1133 
¶Ÿ_ªsu…s
 
ªsu…s
;

1134 
buf„r
.
size
 = 41;

1135 
buf„r
.
po¢
 = 0;

1136 
buf„r
.buf„∏
hex
;

1137 
hex
[41] = '\0';

1139 
uæ
 = 
	`quŸe_ªf_uæ
(
ba£
, 
ªf
);

1140 
¶Ÿ
 = 
	`gë_a˘ive_¶Ÿ
();

1141 
¶Ÿ
->
ªsu…s
 = &results;

1142 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_FILE
, &
buf„r
);

1143 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_WRITEFUNCTION
, 
fwrôe_buf„r
);

1144 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_HTTPHEADER
, 
NULL
);

1145 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_URL
, 
uæ
);

1146 i‡(
	`°¨t_a˘ive_¶Ÿ
(
¶Ÿ
)) {

1147 
	`run_a˘ive_¶Ÿ
(
¶Ÿ
);

1148 i‡(
ªsu…s
.
cuæ_ªsu…
 !
CURLE_OK
)

1149  
	`îr‹
("Couldn't get %s for %s\n%s",

1150 
uæ
, 
ªf
, 
cuæ_îr‹°r
);

1152  
	`îr‹
("UnableÅo startÑequest");

1155 
hex
[40] = '\0';

1156 
	`gë_sha1_hex
(
hex
, 
sha1
);

1158 
	}
}

1160 
	$⁄e_ªmŸe_obje˘
(c⁄° *
hex
)

1162 
sha1
[20];

1163 
obje˘
 *
obj
;

1165 i‡(
	`gë_sha1_hex
(
hex
, 
sha1
) != 0)

1168 
obj
 = 
	`lookup_obje˘
(
sha1
);

1169 i‡(!
obj
)

1170 
obj
 = 
	`∑r£_obje˘
(
sha1
);

1173 i‡(!
obj
)

1176 
obj
->
Êags
 |
REMOTE
;

1177 i‡(!
	`obje˘_li°_c⁄èös
(
obje˘s
, 
obj
))

1178 
	`obje˘_li°_ö£π
(
obj
, &
obje˘s
);

1179 
	}
}

1181 
	$h™dÀ_lock¥›_˘x
(
xml_˘x
 *
˘x
, 
èg_˛o£d
)

1183 *
lock_Êags
 = (*)
˘x
->
u£rD©a
;

1185 i‡(
èg_˛o£d
) {

1186 i‡(!
	`°rcmp
(
˘x
->
«me
, 
DAV_CTX_LOCKENTRY
)) {

1187 i‡((*
lock_Êags
 & 
DAV_PROP_LOCKEX
) &&

1188 (*
lock_Êags
 & 
DAV_PROP_LOCKWR
)) {

1189 *
lock_Êags
 |
DAV_LOCK_OK
;

1191 *
lock_Êags
 &
DAV_LOCK_OK
;

1192 } i‡(!
	`°rcmp
(
˘x
->
«me
, 
DAV_CTX_LOCKTYPE_WRITE
)) {

1193 *
lock_Êags
 |
DAV_PROP_LOCKWR
;

1194 } i‡(!
	`°rcmp
(
˘x
->
«me
, 
DAV_CTX_LOCKTYPE_EXCLUSIVE
)) {

1195 *
lock_Êags
 |
DAV_PROP_LOCKEX
;

1198 
	}
}

1200 
	$h™dÀ_√w_lock_˘x
(
xml_˘x
 *
˘x
, 
èg_˛o£d
)

1202 
ªmŸe_lock
 *
lock
 = (ªmŸe_lock *)
˘x
->
u£rD©a
;

1204 i‡(
èg_˛o£d
 && 
˘x
->
cd©a
) {

1205 i‡(!
	`°rcmp
(
˘x
->
«me
, 
DAV_ACTIVELOCK_OWNER
)) {

1206 
lock
->
ow√r
 = 
	`xmÆloc
(
	`°æí
(
˘x
->
cd©a
) + 1);

1207 
	`°r˝y
(
lock
->
ow√r
, 
˘x
->
cd©a
);

1208 } i‡(!
	`°rcmp
(
˘x
->
«me
, 
DAV_ACTIVELOCK_TIMEOUT
)) {

1209 i‡(!
	`°∫cmp
(
˘x
->
cd©a
, "Second-", 7))

1210 
lock
->
timeout
 =

1211 
	`°πﬁ
(
˘x
->
cd©a
 + 7, 
NULL
, 10);

1212 } i‡(!
	`°rcmp
(
˘x
->
«me
, 
DAV_ACTIVELOCK_TOKEN
)) {

1213 i‡(!
	`°∫cmp
(
˘x
->
cd©a
, "opaquelocktoken:", 16)) {

1214 
lock
->
tokí
 = 
	`xmÆloc
(
	`°æí
(
˘x
->
cd©a
) - 15);

1215 
	`°r˝y
(
lock
->
tokí
, 
˘x
->
cd©a
 + 16);

1219 
	}
}

1221 
⁄e_ªmŸe_ªf
(*
ª‚ame
);

1224 
	$xml_°¨t_èg
(*
u£rD©a
, c⁄° *
«me
, c⁄° **
©ts
)

1226 
xml_˘x
 *
˘x
 = (xml_˘x *)
u£rD©a
;

1227 c⁄° *
c
 = 
	`°rchr
(
«me
, ':');

1228 
√w_Àn
;

1230 i‡(
c
 =
NULL
)

1231 
c
 = 
«me
;

1233 
c
++;

1235 
√w_Àn
 = 
	`°æí
(
˘x
->
«me
Ë+ såÀn(
c
) + 2;

1237 i‡(
√w_Àn
 > 
˘x
->
Àn
) {

1238 
˘x
->
«me
 = 
	`xªÆloc
(˘x->«me, 
√w_Àn
);

1239 
˘x
->
Àn
 = 
√w_Àn
;

1241 
	`°rˇt
(
˘x
->
«me
, ".");

1242 
	`°rˇt
(
˘x
->
«me
, 
c
);

1244 
	`‰ì
(
˘x
->
cd©a
);

1245 
˘x
->
cd©a
 = 
NULL
;

1247 
˘x
->
	`u£rFunc
(ctx, 0);

1248 
	}
}

1251 
	$xml_íd_èg
(*
u£rD©a
, c⁄° *
«me
)

1253 
xml_˘x
 *
˘x
 = (xml_˘x *)
u£rD©a
;

1254 c⁄° *
c
 = 
	`°rchr
(
«me
, ':');

1255 *
ï
;

1257 
˘x
->
	`u£rFunc
(ctx, 1);

1259 i‡(
c
 =
NULL
)

1260 
c
 = 
«me
;

1262 
c
++;

1264 
ï
 = 
˘x
->
«me
 + 
	`°æí
(˘x->«meË- såÀn(
c
) - 1;

1265 *
ï
 = 0;

1266 
	}
}

1269 
	$xml_cd©a
(*
u£rD©a
, c⁄° 
XML_Ch¨
 *
s
, 
Àn
)

1271 
xml_˘x
 *
˘x
 = (xml_˘x *)
u£rD©a
;

1272 
	`‰ì
(
˘x
->
cd©a
);

1273 
˘x
->
cd©a
 = 
	`xmÆloc
(
Àn
 + 1);

1274 
	`°æ˝y
(
˘x
->
cd©a
, 
s
, 
Àn
 + 1);

1275 
	}
}

1277 
ªmŸe_lock
 *
	$lock_ªmŸe
(c⁄° *
∑th
, 
timeout
)

1279 
a˘ive_ªque°_¶Ÿ
 *
¶Ÿ
;

1280 
¶Ÿ_ªsu…s
 
ªsu…s
;

1281 
buf„r
 
out_buf„r
;

1282 
buf„r
 
ö_buf„r
;

1283 *
out_d©a
;

1284 *
ö_d©a
;

1285 *
uæ
;

1286 *
ï
;

1287 
timeout_hódî
[25];

1288 
ªmŸe_lock
 *
lock
 = 
NULL
;

1289 
XML_P¨£r
 
∑r£r
 = 
	`XML_P¨£rCª©e
(
NULL
);

1290 
XML_Sètus
 
ªsu…
;

1291 
cuæ_¶i°
 *
dav_hódîs
 = 
NULL
;

1292 
xml_˘x
 
˘x
;

1294 
uæ
 = 
	`xmÆloc
(
	`°æí
(
ªmŸe
->uæË+ såÀn(
∑th
) + 1);

1295 
	`•rötf
(
uæ
, "%s%s", 
ªmŸe
->uæ, 
∑th
);

1298 
ï
 = 
	`°rchr
(
uæ
 + 
	`°æí
(
ªmŸe
->url) + 11, '/');

1299 
ï
) {

1300 *
ï
 = 0;

1301 
¶Ÿ
 = 
	`gë_a˘ive_¶Ÿ
();

1302 
¶Ÿ
->
ªsu…s
 = &results;

1303 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_HTTPGET
, 1);

1304 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_URL
, 
uæ
);

1305 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_CUSTOMREQUEST
, 
DAV_MKCOL
);

1306 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_WRITEFUNCTION
, 
fwrôe_nuŒ
);

1307 i‡(
	`°¨t_a˘ive_¶Ÿ
(
¶Ÿ
)) {

1308 
	`run_a˘ive_¶Ÿ
(
¶Ÿ
);

1309 i‡(
ªsu…s
.
cuæ_ªsu…
 !
CURLE_OK
 &&

1310 
ªsu…s
.
hâp_code
 != 405) {

1311 
	`Ârötf
(
°dîr
,

1313 
uæ
);

1314 
	`‰ì
(
uæ
);

1315  
NULL
;

1318 
	`Ârötf
(
°dîr
, "UnableÅo start MKCOLÑequest\n");

1319 
	`‰ì
(
uæ
);

1320  
NULL
;

1322 *
ï
 = '/';

1323 
ï
 = 
	`°rchr
(ep + 1, '/');

1326 
out_buf„r
.
size
 = 
	`°æí
(
LOCK_REQUEST
Ë+ såÀn(
gô_deÁu…_emaû
) - 2;

1327 
out_d©a
 = 
	`xmÆloc
(
out_buf„r
.
size
 + 1);

1328 
	`¢¥ötf
(
out_d©a
, 
out_buf„r
.
size
 + 1, 
LOCK_REQUEST
, 
gô_deÁu…_emaû
);

1329 
out_buf„r
.
po¢
 = 0;

1330 
out_buf„r
.
buf„r
 = 
out_d©a
;

1332 
ö_buf„r
.
size
 = 4096;

1333 
ö_d©a
 = 
	`xmÆloc
(
ö_buf„r
.
size
);

1334 
ö_buf„r
.
po¢
 = 0;

1335 
ö_buf„r
.
buf„r
 = 
ö_d©a
;

1337 
	`•rötf
(
timeout_hódî
, "Timeout: Sec⁄d-%ld", 
timeout
);

1338 
dav_hódîs
 = 
	`cuæ_¶i°_≠≥nd
(dav_hódîs, 
timeout_hódî
);

1339 
dav_hódîs
 = 
	`cuæ_¶i°_≠≥nd
(dav_headers, "Content-Type:Åext/xml");

1341 
¶Ÿ
 = 
	`gë_a˘ive_¶Ÿ
();

1342 
¶Ÿ
->
ªsu…s
 = &results;

1343 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_INFILE
, &
out_buf„r
);

1344 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_INFILESIZE
, 
out_buf„r
.
size
);

1345 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_READFUNCTION
, 
‰ód_buf„r
);

1346 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_FILE
, &
ö_buf„r
);

1347 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_WRITEFUNCTION
, 
fwrôe_buf„r
);

1348 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_URL
, 
uæ
);

1349 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_UPLOAD
, 1);

1350 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_CUSTOMREQUEST
, 
DAV_LOCK
);

1351 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_HTTPHEADER
, 
dav_hódîs
);

1353 
lock
 = 
	`xˇŒoc
(1, (*lock));

1354 
lock
->
timeout
 = -1;

1356 i‡(
	`°¨t_a˘ive_¶Ÿ
(
¶Ÿ
)) {

1357 
	`run_a˘ive_¶Ÿ
(
¶Ÿ
);

1358 i‡(
ªsu…s
.
cuæ_ªsu…
 =
CURLE_OK
) {

1359 
˘x
.
«me
 = 
	`xˇŒoc
(10, 1);

1360 
˘x
.
Àn
 = 0;

1361 
˘x
.
cd©a
 = 
NULL
;

1362 
˘x
.
u£rFunc
 = 
h™dÀ_√w_lock_˘x
;

1363 
˘x
.
u£rD©a
 = 
lock
;

1364 
	`XML_SëU£rD©a
(
∑r£r
, &
˘x
);

1365 
	`XML_SëEÀmítH™dÀr
(
∑r£r
, 
xml_°¨t_èg
,

1366 
xml_íd_èg
);

1367 
	`XML_SëCh¨a˘îD©aH™dÀr
(
∑r£r
, 
xml_cd©a
);

1368 
ªsu…
 = 
	`XML_P¨£
(
∑r£r
, 
ö_buf„r
.
buf„r
,

1369 
ö_buf„r
.
po¢
, 1);

1370 
	`‰ì
(
˘x
.
«me
);

1371 i‡(
ªsu…
 !
XML_STATUS_OK
) {

1372 
	`Ârötf
(
°dîr
, "XMLÉrror: %s\n",

1373 
	`XML_Eº‹Såög
(

1374 
	`XML_GëEº‹Code
(
∑r£r
)));

1375 
lock
->
timeout
 = -1;

1379 
	`Ârötf
(
°dîr
, "UnableÅo start LOCKÑequest\n");

1382 
	`cuæ_¶i°_‰ì_Æl
(
dav_hódîs
);

1383 
	`‰ì
(
out_d©a
);

1384 
	`‰ì
(
ö_d©a
);

1386 i‡(
lock
->
tokí
 =
NULL
 ||Üock->
timeout
 <= 0) {

1387 i‡(
lock
->
tokí
 !
NULL
)

1388 
	`‰ì
(
lock
->
tokí
);

1389 i‡(
lock
->
ow√r
 !
NULL
)

1390 
	`‰ì
(
lock
->
ow√r
);

1391 
	`‰ì
(
uæ
);

1392 
	`‰ì
(
lock
);

1393 
lock
 = 
NULL
;

1395 
lock
->
uæ
 = url;

1396 
lock
->
°¨t_time
 = 
	`time
(
NULL
);

1397 
lock
->
√xt
 = 
ªmŸe
->
locks
;

1398 
ªmŸe
->
locks
 = 
lock
;

1401  
lock
;

1402 
	}
}

1404 
	$u∆ock_ªmŸe
(
ªmŸe_lock
 *
lock
)

1406 
a˘ive_ªque°_¶Ÿ
 *
¶Ÿ
;

1407 
¶Ÿ_ªsu…s
 
ªsu…s
;

1408 
ªmŸe_lock
 *
¥ev
 = 
ªmŸe
->
locks
;

1409 *
lock_tokí_hódî
;

1410 
cuæ_¶i°
 *
dav_hódîs
 = 
NULL
;

1411 
rc
 = 0;

1413 
lock_tokí_hódî
 = 
	`xmÆloc
(
	`°æí
(
lock
->
tokí
) + 31);

1414 
	`•rötf
(
lock_tokí_hódî
, "Lock-Token: <opaquelocktoken:%s>",

1415 
lock
->
tokí
);

1416 
dav_hódîs
 = 
	`cuæ_¶i°_≠≥nd
(dav_hódîs, 
lock_tokí_hódî
);

1418 
¶Ÿ
 = 
	`gë_a˘ive_¶Ÿ
();

1419 
¶Ÿ
->
ªsu…s
 = &results;

1420 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_WRITEFUNCTION
, 
fwrôe_nuŒ
);

1421 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_URL
, 
lock
->
uæ
);

1422 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_CUSTOMREQUEST
, 
DAV_UNLOCK
);

1423 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_HTTPHEADER
, 
dav_hódîs
);

1425 i‡(
	`°¨t_a˘ive_¶Ÿ
(
¶Ÿ
)) {

1426 
	`run_a˘ive_¶Ÿ
(
¶Ÿ
);

1427 i‡(
ªsu…s
.
cuæ_ªsu…
 =
CURLE_OK
)

1428 
rc
 = 1;

1430 
	`Ârötf
(
°dîr
, "UNLOCK HTTPÉrror %ld\n",

1431 
ªsu…s
.
hâp_code
);

1433 
	`Ârötf
(
°dîr
, "UnableÅo start UNLOCKÑequest\n");

1436 
	`cuæ_¶i°_‰ì_Æl
(
dav_hódîs
);

1437 
	`‰ì
(
lock_tokí_hódî
);

1439 i‡(
ªmŸe
->
locks
 =
lock
) {

1440 
ªmŸe
->
locks
 = 
lock
->
√xt
;

1442 
¥ev
 &&Öªv->
√xt
 !
lock
)

1443 
¥ev
 =Öªv->
√xt
;

1444 i‡(
¥ev
)

1445 
¥ev
->
√xt
 =Örev->next->next;

1448 i‡(
lock
->
ow√r
 !
NULL
)

1449 
	`‰ì
(
lock
->
ow√r
);

1450 
	`‰ì
(
lock
->
uæ
);

1451 
	`‰ì
(
lock
->
tokí
);

1452 
	`‰ì
(
lock
);

1454  
rc
;

1455 
	}
}

1457 
ªmŸe_ls
(c⁄° *
∑th
, 
Êags
,

1458 (*
u£rFunc
)(
ªmŸe_ls_˘x
 *
ls
),

1459 *
u£rD©a
);

1461 
	$¥o˚ss_ls_obje˘
(
ªmŸe_ls_˘x
 *
ls
)

1463 *
∑ª¡
 = (*)
ls
->
u£rD©a
;

1464 *
∑th
 = 
ls
->
díåy_«me
;

1465 *
obj_hex
;

1467 i‡(!
	`°rcmp
(
ls
->
∑th
,Üs->
díåy_«me
Ë&& (ls->
Êags
 & 
IS_DIR
)) {

1468 
ªmŸe_dú_exi°s
[*
∑ª¡
] = 1;

1472 i‡(
	`°æí
(
∑th
) != 49)

1474 
∑th
 += 8;

1475 
obj_hex
 = 
	`xmÆloc
(
	`°æí
(
∑th
));

1476 
	`°æ˝y
(
obj_hex
, 
∑th
, 3);

1477 
	`°r˝y
(
obj_hex
 + 2, 
∑th
 + 3);

1478 
	`⁄e_ªmŸe_obje˘
(
obj_hex
);

1479 
	`‰ì
(
obj_hex
);

1480 
	}
}

1482 
	$¥o˚ss_ls_ªf
(
ªmŸe_ls_˘x
 *
ls
)

1484 i‡(!
	`°rcmp
(
ls
->
∑th
,Üs->
díåy_«me
Ë&& (ls->
díåy_Êags
 & 
IS_DIR
)) {

1485 
	`Ârötf
(
°dîr
, " %s\n", 
ls
->
díåy_«me
);

1489 i‡(!(
ls
->
díåy_Êags
 & 
IS_DIR
))

1490 
	`⁄e_ªmŸe_ªf
(
ls
->
díåy_«me
);

1491 
	}
}

1493 
	$h™dÀ_ªmŸe_ls_˘x
(
xml_˘x
 *
˘x
, 
èg_˛o£d
)

1495 
ªmŸe_ls_˘x
 *
ls
 = (ªmŸe_ls_˘x *)
˘x
->
u£rD©a
;

1497 i‡(
èg_˛o£d
) {

1498 i‡(!
	`°rcmp
(
˘x
->
«me
, 
DAV_PROPFIND_RESP
Ë&& 
ls
->
díåy_«me
) {

1499 i‡(
ls
->
díåy_Êags
 & 
IS_DIR
) {

1500 i‡(
ls
->
Êags
 & 
PROCESS_DIRS
) {

1501 
ls
->
	`u£rFunc
(ls);

1503 i‡(
	`°rcmp
(
ls
->
díåy_«me
,Üs->
∑th
) &&

1504 
ls
->
Êags
 & 
RECURSIVE
) {

1505 
	`ªmŸe_ls
(
ls
->
díåy_«me
,

1506 
ls
->
Êags
,

1507 
ls
->
u£rFunc
,

1508 
ls
->
u£rD©a
);

1510 } i‡(
ls
->
Êags
 & 
PROCESS_FILES
) {

1511 
ls
->
	`u£rFunc
(ls);

1513 } i‡(!
	`°rcmp
(
˘x
->
«me
, 
DAV_PROPFIND_NAME
Ë&& ctx->
cd©a
) {

1514 
ls
->
díåy_«me
 = 
	`xmÆloc
(
	`°æí
(
˘x
->
cd©a
) -

1515 
ªmŸe
->
∑th_Àn
 + 1);

1516 
	`°r˝y
(
ls
->
díåy_«me
, 
˘x
->
cd©a
 + 
ªmŸe
->
∑th_Àn
);

1517 } i‡(!
	`°rcmp
(
˘x
->
«me
, 
DAV_PROPFIND_COLLECTION
)) {

1518 
ls
->
díåy_Êags
 |
IS_DIR
;

1520 } i‡(!
	`°rcmp
(
˘x
->
«me
, 
DAV_PROPFIND_RESP
)) {

1521 
	`‰ì
(
ls
->
díåy_«me
);

1522 
ls
->
díåy_«me
 = 
NULL
;

1523 
ls
->
díåy_Êags
 = 0;

1525 
	}
}

1527 
	$ªmŸe_ls
(c⁄° *
∑th
, 
Êags
,

1528 (*
u£rFunc
)(
ªmŸe_ls_˘x
 *
ls
),

1529 *
u£rD©a
)

1531 *
uæ
 = 
	`xmÆloc
(
	`°æí
(
ªmŸe
->uæË+ såÀn(
∑th
) + 1);

1532 
a˘ive_ªque°_¶Ÿ
 *
¶Ÿ
;

1533 
¶Ÿ_ªsu…s
 
ªsu…s
;

1534 
buf„r
 
ö_buf„r
;

1535 
buf„r
 
out_buf„r
;

1536 *
ö_d©a
;

1537 *
out_d©a
;

1538 
XML_P¨£r
 
∑r£r
 = 
	`XML_P¨£rCª©e
(
NULL
);

1539 
XML_Sètus
 
ªsu…
;

1540 
cuæ_¶i°
 *
dav_hódîs
 = 
NULL
;

1541 
xml_˘x
 
˘x
;

1542 
ªmŸe_ls_˘x
 
ls
;

1544 
ls
.
Êags
 = flags;

1545 
ls
.
∑th
 = 
	`x°rdup
(path);

1546 
ls
.
díåy_«me
 = 
NULL
;

1547 
ls
.
díåy_Êags
 = 0;

1548 
ls
.
u£rD©a
 = userData;

1549 
ls
.
u£rFunc
 = userFunc;

1551 
	`•rötf
(
uæ
, "%s%s", 
ªmŸe
->uæ, 
∑th
);

1553 
out_buf„r
.
size
 = 
	`°æí
(
PROPFIND_ALL_REQUEST
);

1554 
out_d©a
 = 
	`xmÆloc
(
out_buf„r
.
size
 + 1);

1555 
	`¢¥ötf
(
out_d©a
, 
out_buf„r
.
size
 + 1, 
PROPFIND_ALL_REQUEST
);

1556 
out_buf„r
.
po¢
 = 0;

1557 
out_buf„r
.
buf„r
 = 
out_d©a
;

1559 
ö_buf„r
.
size
 = 4096;

1560 
ö_d©a
 = 
	`xmÆloc
(
ö_buf„r
.
size
);

1561 
ö_buf„r
.
po¢
 = 0;

1562 
ö_buf„r
.
buf„r
 = 
ö_d©a
;

1564 
dav_hódîs
 = 
	`cuæ_¶i°_≠≥nd
(dav_headers, "Depth: 1");

1565 
dav_hódîs
 = 
	`cuæ_¶i°_≠≥nd
(dav_headers, "Content-Type:Åext/xml");

1567 
¶Ÿ
 = 
	`gë_a˘ive_¶Ÿ
();

1568 
¶Ÿ
->
ªsu…s
 = &results;

1569 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_INFILE
, &
out_buf„r
);

1570 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_INFILESIZE
, 
out_buf„r
.
size
);

1571 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_READFUNCTION
, 
‰ód_buf„r
);

1572 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_FILE
, &
ö_buf„r
);

1573 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_WRITEFUNCTION
, 
fwrôe_buf„r
);

1574 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_URL
, 
uæ
);

1575 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_UPLOAD
, 1);

1576 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_CUSTOMREQUEST
, 
DAV_PROPFIND
);

1577 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_HTTPHEADER
, 
dav_hódîs
);

1579 i‡(
	`°¨t_a˘ive_¶Ÿ
(
¶Ÿ
)) {

1580 
	`run_a˘ive_¶Ÿ
(
¶Ÿ
);

1581 i‡(
ªsu…s
.
cuæ_ªsu…
 =
CURLE_OK
) {

1582 
˘x
.
«me
 = 
	`xˇŒoc
(10, 1);

1583 
˘x
.
Àn
 = 0;

1584 
˘x
.
cd©a
 = 
NULL
;

1585 
˘x
.
u£rFunc
 = 
h™dÀ_ªmŸe_ls_˘x
;

1586 
˘x
.
u£rD©a
 = &
ls
;

1587 
	`XML_SëU£rD©a
(
∑r£r
, &
˘x
);

1588 
	`XML_SëEÀmítH™dÀr
(
∑r£r
, 
xml_°¨t_èg
,

1589 
xml_íd_èg
);

1590 
	`XML_SëCh¨a˘îD©aH™dÀr
(
∑r£r
, 
xml_cd©a
);

1591 
ªsu…
 = 
	`XML_P¨£
(
∑r£r
, 
ö_buf„r
.
buf„r
,

1592 
ö_buf„r
.
po¢
, 1);

1593 
	`‰ì
(
˘x
.
«me
);

1595 i‡(
ªsu…
 !
XML_STATUS_OK
) {

1596 
	`Ârötf
(
°dîr
, "XMLÉrror: %s\n",

1597 
	`XML_Eº‹Såög
(

1598 
	`XML_GëEº‹Code
(
∑r£r
)));

1602 
	`Ârötf
(
°dîr
, "UnableÅo start PROPFINDÑequest\n");

1605 
	`‰ì
(
ls
.
∑th
);

1606 
	`‰ì
(
uæ
);

1607 
	`‰ì
(
out_d©a
);

1608 
	`‰ì
(
ö_buf„r
.
buf„r
);

1609 
	`cuæ_¶i°_‰ì_Æl
(
dav_hódîs
);

1610 
	}
}

1612 
	$gë_ªmŸe_obje˘_li°
(
∑ª¡
)

1614 
∑th
[] = "objects/XX/";

1615 c⁄° 
hex
[] = "0123456789abcdef";

1616 
vÆ
 = 
∑ª¡
;

1618 
∑th
[8] = 
hex
[
vÆ
 >> 4];

1619 
∑th
[9] = 
hex
[
vÆ
 & 0xf];

1620 
ªmŸe_dú_exi°s
[
vÆ
] = 0;

1621 
	`ªmŸe_ls
(
∑th
, (
PROCESS_FILES
 | 
PROCESS_DIRS
),

1622 
¥o˚ss_ls_obje˘
, &
vÆ
);

1623 
	}
}

1625 
	$lockög_avaûabÀ
()

1627 
a˘ive_ªque°_¶Ÿ
 *
¶Ÿ
;

1628 
¶Ÿ_ªsu…s
 
ªsu…s
;

1629 
buf„r
 
ö_buf„r
;

1630 
buf„r
 
out_buf„r
;

1631 *
ö_d©a
;

1632 *
out_d©a
;

1633 
XML_P¨£r
 
∑r£r
 = 
	`XML_P¨£rCª©e
(
NULL
);

1634 
XML_Sètus
 
ªsu…
;

1635 
cuæ_¶i°
 *
dav_hódîs
 = 
NULL
;

1636 
xml_˘x
 
˘x
;

1637 
lock_Êags
 = 0;

1639 
out_buf„r
.
size
 =

1640 
	`°æí
(
PROPFIND_SUPPORTEDLOCK_REQUEST
) +

1641 
	`°æí
(
ªmŸe
->
uæ
) - 2;

1642 
out_d©a
 = 
	`xmÆloc
(
out_buf„r
.
size
 + 1);

1643 
	`¢¥ötf
(
out_d©a
, 
out_buf„r
.
size
 + 1,

1644 
PROPFIND_SUPPORTEDLOCK_REQUEST
, 
ªmŸe
->
uæ
);

1645 
out_buf„r
.
po¢
 = 0;

1646 
out_buf„r
.
buf„r
 = 
out_d©a
;

1648 
ö_buf„r
.
size
 = 4096;

1649 
ö_d©a
 = 
	`xmÆloc
(
ö_buf„r
.
size
);

1650 
ö_buf„r
.
po¢
 = 0;

1651 
ö_buf„r
.
buf„r
 = 
ö_d©a
;

1653 
dav_hódîs
 = 
	`cuæ_¶i°_≠≥nd
(dav_headers, "Depth: 0");

1654 
dav_hódîs
 = 
	`cuæ_¶i°_≠≥nd
(dav_headers, "Content-Type:Åext/xml");

1656 
¶Ÿ
 = 
	`gë_a˘ive_¶Ÿ
();

1657 
¶Ÿ
->
ªsu…s
 = &results;

1658 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_INFILE
, &
out_buf„r
);

1659 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_INFILESIZE
, 
out_buf„r
.
size
);

1660 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_READFUNCTION
, 
‰ód_buf„r
);

1661 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_FILE
, &
ö_buf„r
);

1662 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_WRITEFUNCTION
, 
fwrôe_buf„r
);

1663 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_URL
, 
ªmŸe
->
uæ
);

1664 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_UPLOAD
, 1);

1665 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_CUSTOMREQUEST
, 
DAV_PROPFIND
);

1666 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_HTTPHEADER
, 
dav_hódîs
);

1668 i‡(
	`°¨t_a˘ive_¶Ÿ
(
¶Ÿ
)) {

1669 
	`run_a˘ive_¶Ÿ
(
¶Ÿ
);

1670 i‡(
ªsu…s
.
cuæ_ªsu…
 =
CURLE_OK
) {

1671 
˘x
.
«me
 = 
	`xˇŒoc
(10, 1);

1672 
˘x
.
Àn
 = 0;

1673 
˘x
.
cd©a
 = 
NULL
;

1674 
˘x
.
u£rFunc
 = 
h™dÀ_lock¥›_˘x
;

1675 
˘x
.
u£rD©a
 = &
lock_Êags
;

1676 
	`XML_SëU£rD©a
(
∑r£r
, &
˘x
);

1677 
	`XML_SëEÀmítH™dÀr
(
∑r£r
, 
xml_°¨t_èg
,

1678 
xml_íd_èg
);

1679 
ªsu…
 = 
	`XML_P¨£
(
∑r£r
, 
ö_buf„r
.
buf„r
,

1680 
ö_buf„r
.
po¢
, 1);

1681 
	`‰ì
(
˘x
.
«me
);

1683 i‡(
ªsu…
 !
XML_STATUS_OK
) {

1684 
	`Ârötf
(
°dîr
, "XMLÉrror: %s\n",

1685 
	`XML_Eº‹Såög
(

1686 
	`XML_GëEº‹Code
(
∑r£r
)));

1687 
lock_Êags
 = 0;

1691 
	`Ârötf
(
°dîr
, "UnableÅo start PROPFINDÑequest\n");

1694 
	`‰ì
(
out_d©a
);

1695 
	`‰ì
(
ö_buf„r
.
buf„r
);

1696 
	`cuæ_¶i°_‰ì_Æl
(
dav_hódîs
);

1698  
lock_Êags
;

1699 
	}
}

1701 
obje˘_li°
 **
	$add_⁄e_obje˘
(
obje˘
 *
obj
, 
obje˘_li°
 **
p
)

1703 
obje˘_li°
 *
íåy
 = 
	`xmÆloc
((object_list));

1704 
íåy
->
ôem
 = 
obj
;

1705 
íåy
->
√xt
 = *
p
;

1706 *
p
 = 
íåy
;

1707  &
íåy
->
√xt
;

1708 
	}
}

1710 
obje˘_li°
 **
	$¥o˚ss_blob
(
blob
 *blob,

1711 
obje˘_li°
 **
p
,

1712 
«me_∑th
 *
∑th
,

1713 c⁄° *
«me
)

1715 
obje˘
 *
obj
 = &
blob
->object;

1717 
obj
->
Êags
 |
LOCAL
;

1719 i‡(
obj
->
Êags
 & (
UNINTERESTING
 | 
SEEN
))

1720  
p
;

1722 
obj
->
Êags
 |
SEEN
;

1723  
	`add_⁄e_obje˘
(
obj
, 
p
);

1724 
	}
}

1726 
obje˘_li°
 **
	$¥o˚ss_åì
(
åì
 *tree,

1727 
obje˘_li°
 **
p
,

1728 
«me_∑th
 *
∑th
,

1729 c⁄° *
«me
)

1731 
obje˘
 *
obj
 = &
åì
->object;

1732 
åì_desc
 
desc
;

1733 
«me_íåy
 
íåy
;

1734 
«me_∑th
 
me
;

1736 
obj
->
Êags
 |
LOCAL
;

1738 i‡(
obj
->
Êags
 & (
UNINTERESTING
 | 
SEEN
))

1739  
p
;

1740 i‡(
	`∑r£_åì
(
åì
) < 0)

1741 
	`dõ
("badÅªêobje˘ %s", 
	`sha1_to_hex
(
obj
->
sha1
));

1743 
obj
->
Êags
 |
SEEN
;

1744 
«me
 = 
	`x°rdup
(name);

1745 
p
 = 
	`add_⁄e_obje˘
(
obj
,Ö);

1746 
me
.
up
 = 
∑th
;

1747 
me
.
ñem
 = 
«me
;

1748 
me
.
ñem_Àn
 = 
	`°æí
(
«me
);

1750 
desc
.
buf
 = 
åì
->
buf„r
;

1751 
desc
.
size
 = 
åì
->size;

1753 
	`åì_íåy
(&
desc
, &
íåy
)) {

1754 i‡(
	`S_ISDIR
(
íåy
.
mode
))

1755 
p
 = 
	`¥o˚ss_åì
(
	`lookup_åì
(
íåy
.
sha1
),Ö, &
me
, 
«me
);

1757 
p
 = 
	`¥o˚ss_blob
(
	`lookup_blob
(
íåy
.
sha1
),Ö, &
me
, 
«me
);

1759 
	`‰ì
(
åì
->
buf„r
);

1760 
åì
->
buf„r
 = 
NULL
;

1761  
p
;

1762 
	}
}

1764 
	$gë_dñè
(
ªv_öfo
 *
ªvs
, 
ªmŸe_lock
 *
lock
)

1766 
i
;

1767 
commô
 *commit;

1768 
obje˘_li°
 **
p
 = &
obje˘s
;

1769 
cou¡
 = 0;

1771 (
commô
 = 
	`gë_ªvisi⁄
(
ªvs
)Ë!
NULL
) {

1772 
p
 = 
	`¥o˚ss_åì
(
commô
->
åì
,Ö, 
NULL
, "");

1773 
commô
->
obje˘
.
Êags
 |
LOCAL
;

1774 i‡(!(
commô
->
obje˘
.
Êags
 & 
UNINTERESTING
))

1775 
cou¡
 +
	`add_£nd_ªque°
(&
commô
->
obje˘
, 
lock
);

1778 
i
 = 0; i < 
ªvs
->
≥ndög
.
ƒ
; i++) {

1779 
obje˘_¨øy_íåy
 *
íåy
 = 
ªvs
->
≥ndög
.
obje˘s
 + 
i
;

1780 
obje˘
 *
obj
 = 
íåy
->
ôem
;

1781 c⁄° *
«me
 = 
íåy
->name;

1783 i‡(
obj
->
Êags
 & (
UNINTERESTING
 | 
SEEN
))

1785 i‡(
obj
->
ty≥
 =
OBJ_TAG
) {

1786 
obj
->
Êags
 |
SEEN
;

1787 
p
 = 
	`add_⁄e_obje˘
(
obj
,Ö);

1790 i‡(
obj
->
ty≥
 =
OBJ_TREE
) {

1791 
p
 = 
	`¥o˚ss_åì
((
åì
 *)
obj
,Ö, 
NULL
, 
«me
);

1794 i‡(
obj
->
ty≥
 =
OBJ_BLOB
) {

1795 
p
 = 
	`¥o˚ss_blob
((
blob
 *)
obj
,Ö, 
NULL
, 
«me
);

1798 
	`dõ
("unknow¿≥ndög obje˘ %†(%s)", 
	`sha1_to_hex
(
obj
->
sha1
), 
«me
);

1801 
obje˘s
) {

1802 i‡(!(
obje˘s
->
ôem
->
Êags
 & 
UNINTERESTING
))

1803 
cou¡
 +
	`add_£nd_ªque°
(
obje˘s
->
ôem
, 
lock
);

1804 
obje˘s
 = obje˘s->
√xt
;

1807  
cou¡
;

1808 
	}
}

1810 
	$upd©e_ªmŸe
(*
sha1
, 
ªmŸe_lock
 *
lock
)

1812 
a˘ive_ªque°_¶Ÿ
 *
¶Ÿ
;

1813 
¶Ÿ_ªsu…s
 
ªsu…s
;

1814 *
out_d©a
;

1815 *
if_hódî
;

1816 
buf„r
 
out_buf„r
;

1817 
cuæ_¶i°
 *
dav_hódîs
 = 
NULL
;

1818 
i
;

1820 
if_hódî
 = 
	`xmÆloc
(
	`°æí
(
lock
->
tokí
) + 25);

1821 
	`•rötf
(
if_hódî
, "If: (<›aquñocktokí:%s>)", 
lock
->
tokí
);

1822 
dav_hódîs
 = 
	`cuæ_¶i°_≠≥nd
(dav_hódîs, 
if_hódî
);

1824 
out_buf„r
.
size
 = 41;

1825 
out_d©a
 = 
	`xmÆloc
(
out_buf„r
.
size
 + 1);

1826 
i
 = 
	`¢¥ötf
(
out_d©a
, 
out_buf„r
.
size
 + 1, "%s\n", 
	`sha1_to_hex
(
sha1
));

1827 i‡(
i
 !
out_buf„r
.
size
) {

1828 
	`Ârötf
(
°dîr
, "UnableÅo initialize PUTÑequest body\n");

1831 
out_buf„r
.
po¢
 = 0;

1832 
out_buf„r
.
buf„r
 = 
out_d©a
;

1834 
¶Ÿ
 = 
	`gë_a˘ive_¶Ÿ
();

1835 
¶Ÿ
->
ªsu…s
 = &results;

1836 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_INFILE
, &
out_buf„r
);

1837 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_INFILESIZE
, 
out_buf„r
.
size
);

1838 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_READFUNCTION
, 
‰ód_buf„r
);

1839 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_WRITEFUNCTION
, 
fwrôe_nuŒ
);

1840 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_CUSTOMREQUEST
, 
DAV_PUT
);

1841 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_HTTPHEADER
, 
dav_hódîs
);

1842 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_UPLOAD
, 1);

1843 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_PUT
, 1);

1844 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_URL
, 
lock
->
uæ
);

1846 i‡(
	`°¨t_a˘ive_¶Ÿ
(
¶Ÿ
)) {

1847 
	`run_a˘ive_¶Ÿ
(
¶Ÿ
);

1848 
	`‰ì
(
out_d©a
);

1849 
	`‰ì
(
if_hódî
);

1850 i‡(
ªsu…s
.
cuæ_ªsu…
 !
CURLE_OK
) {

1851 
	`Ârötf
(
°dîr
,

1853 
ªsu…s
.
cuæ_ªsu…
,Ñesu…s.
hâp_code
);

1858 
	`‰ì
(
out_d©a
);

1859 
	`‰ì
(
if_hódî
);

1860 
	`Ârötf
(
°dîr
, "UnableÅo start PUTÑequest\n");

1865 
	}
}

1867 
ªf
 *
	gloˇl_ªfs
, **
	gloˇl_èû
;

1868 
ªf
 *
	gªmŸe_ªfs
, **
	gªmŸe_èû
;

1870 
	$⁄e_loˇl_ªf
(c⁄° *
ª‚ame
, c⁄° *
sha1
, 
Êag
, *
cb_d©a
)

1872 
ªf
 *ref;

1873 
Àn
 = 
	`°æí
(
ª‚ame
) + 1;

1874 
ªf
 = 
	`xˇŒoc
(1, (*ªfË+ 
Àn
);

1875 
	`hash˝y
(
ªf
->
√w_sha1
, 
sha1
);

1876 
	`mem˝y
(
ªf
->
«me
, 
ª‚ame
, 
Àn
);

1877 *
loˇl_èû
 = 
ªf
;

1878 
loˇl_èû
 = &
ªf
->
√xt
;

1880 
	}
}

1882 
	$⁄e_ªmŸe_ªf
(*
ª‚ame
)

1884 
ªf
 *ref;

1885 
ªmŸe_sha1
[20];

1886 
obje˘
 *
obj
;

1887 
Àn
 = 
	`°æí
(
ª‚ame
) + 1;

1889 i‡(
	`„tch_ªf
(
ª‚ame
, 
ªmŸe_sha1
) != 0) {

1890 
	`Ârötf
(
°dîr
,

1892 
ª‚ame
, 
ªmŸe
->
uæ
);

1900 i‡(
ªmŸe
->
ˇn_upd©e_öfo_ªfs
 && !
	`has_sha1_fûe
(
ªmŸe_sha1
)) {

1901 
obj
 = 
	`lookup_unknown_obje˘
(
ªmŸe_sha1
);

1902 i‡(
obj
) {

1903 
	`Ârötf
(
°dîr
, " fetch %s for %s\n",

1904 
	`sha1_to_hex
(
ªmŸe_sha1
), 
ª‚ame
);

1905 
	`add_„tch_ªque°
(
obj
);

1909 
ªf
 = 
	`xˇŒoc
(1, (*ªfË+ 
Àn
);

1910 
	`hash˝y
(
ªf
->
ﬁd_sha1
, 
ªmŸe_sha1
);

1911 
	`mem˝y
(
ªf
->
«me
, 
ª‚ame
, 
Àn
);

1912 *
ªmŸe_èû
 = 
ªf
;

1913 
ªmŸe_èû
 = &
ªf
->
√xt
;

1914 
	}
}

1916 
	$gë_loˇl_hóds
()

1918 
loˇl_èû
 = &
loˇl_ªfs
;

1919 
	`f‹_óch_ªf
(
⁄e_loˇl_ªf
, 
NULL
);

1920 
	}
}

1922 
	$gë_dav_ªmŸe_hóds
()

1924 
ªmŸe_èû
 = &
ªmŸe_ªfs
;

1925 
	`ªmŸe_ls
("ªfs/", (
PROCESS_FILES
 | 
PROCESS_DIRS
 | 
RECURSIVE
), 
¥o˚ss_ls_ªf
, 
NULL
);

1926 
	}
}

1928 
	$is_zîo_sha1
(c⁄° *
sha1
)

1930 
i
;

1932 
i
 = 0; i < 20; i++) {

1933 i‡(*
sha1
++)

1937 
	}
}

1939 
	$unm¨k_™d_‰ì
(
commô_li°
 *
li°
, 
m¨k
)

1941 
li°
) {

1942 
commô_li°
 *
ãmp
 = 
li°
;

1943 
ãmp
->
ôem
->
obje˘
.
Êags
 &~
m¨k
;

1944 
li°
 = 
ãmp
->
√xt
;

1945 
	`‰ì
(
ãmp
);

1947 
	}
}

1949 
	$ªf_√wî
(c⁄° *
√w_sha1
,

1950 c⁄° *
ﬁd_sha1
)

1952 
obje˘
 *
o
;

1953 
commô
 *
ﬁd
, *
√w
;

1954 
commô_li°
 *
li°
, *
u£d
;

1955 
found
 = 0;

1960 
o
 = 
	`dîef_èg
(
	`∑r£_obje˘
(
ﬁd_sha1
), 
NULL
, 0);

1961 i‡(!
o
 || o->
ty≥
 !
OBJ_COMMIT
)

1963 
ﬁd
 = (
commô
 *Ë
o
;

1965 
o
 = 
	`dîef_èg
(
	`∑r£_obje˘
(
√w_sha1
), 
NULL
, 0);

1966 i‡(!
o
 || o->
ty≥
 !
OBJ_COMMIT
)

1968 
√w
 = (
commô
 *Ë
o
;

1970 i‡(
	`∑r£_commô
(
√w
) < 0)

1973 
u£d
 = 
li°
 = 
NULL
;

1974 
	`commô_li°_ö£π
(
√w
, &
li°
);

1975 
li°
) {

1976 
√w
 = 
	`p›_mo°_ª˚¡_commô
(&
li°
, 
TMP_MARK
);

1977 
	`commô_li°_ö£π
(
√w
, &
u£d
);

1978 i‡(
√w
 =
ﬁd
) {

1979 
found
 = 1;

1983 
	`unm¨k_™d_‰ì
(
li°
, 
TMP_MARK
);

1984 
	`unm¨k_™d_‰ì
(
u£d
, 
TMP_MARK
);

1985  
found
;

1986 
	}
}

1988 
	$m¨k_edge_∑ª¡s_unöãª°ög
(
commô
 *commit)

1990 
commô_li°
 *
∑ª¡s
;

1992 
∑ª¡s
 = 
commô
->∑ª¡s;Ö¨íts;Ö¨ít†∑ª¡s->
√xt
) {

1993 
commô
 *
∑ª¡
 = 
∑ª¡s
->
ôem
;

1994 i‡(!(
∑ª¡
->
obje˘
.
Êags
 & 
UNINTERESTING
))

1996 
	`m¨k_åì_unöãª°ög
(
∑ª¡
->
åì
);

1998 
	}
}

2000 
	$m¨k_edges_unöãª°ög
(
commô_li°
 *
li°
)

2002  ; 
li°
;Üi° =Üi°->
√xt
) {

2003 
commô
 *commô = 
li°
->
ôem
;

2005 i‡(
commô
->
obje˘
.
Êags
 & 
UNINTERESTING
) {

2006 
	`m¨k_åì_unöãª°ög
(
commô
->
åì
);

2009 
	`m¨k_edge_∑ª¡s_unöãª°ög
(
commô
);

2011 
	}
}

2013 
	$add_ªmŸe_öfo_ªf
(
ªmŸe_ls_˘x
 *
ls
)

2015 
buf„r
 *
buf
 = (buf„∏*)
ls
->
u£rD©a
;

2016 
ªmŸe_sha1
[20];

2017 
obje˘
 *
o
;

2018 
Àn
;

2019 *
ªf_öfo
;

2021 i‡(
	`„tch_ªf
(
ls
->
díåy_«me
, 
ªmŸe_sha1
) != 0) {

2022 
	`Ârötf
(
°dîr
,

2024 
ls
->
díåy_«me
, 
ªmŸe
->
uæ
);

2025 
ab‹ãd
 = 1;

2029 
o
 = 
	`∑r£_obje˘
(
ªmŸe_sha1
);

2030 i‡(!
o
) {

2031 
	`Ârötf
(
°dîr
,

2033 
	`sha1_to_hex
(
ªmŸe_sha1
), 
ls
->
díåy_«me
);

2034 
ab‹ãd
 = 1;

2038 
Àn
 = 
	`°æí
(
ls
->
díåy_«me
) + 42;

2039 
ªf_öfo
 = 
	`xˇŒoc
(
Àn
 + 1, 1);

2040 
	`•rötf
(
ªf_öfo
, "%s %s\n",

2041 
	`sha1_to_hex
(
ªmŸe_sha1
), 
ls
->
díåy_«me
);

2042 
	`fwrôe_buf„r
(
ªf_öfo
, 1, 
Àn
, 
buf
);

2043 
	`‰ì
(
ªf_öfo
);

2045 i‡(
o
->
ty≥
 =
OBJ_TAG
) {

2046 
o
 = 
	`dîef_èg
(o, 
ls
->
díåy_«me
, 0);

2047 i‡(
o
) {

2048 
Àn
 = 
	`°æí
(
ls
->
díåy_«me
) + 45;

2049 
ªf_öfo
 = 
	`xˇŒoc
(
Àn
 + 1, 1);

2050 
	`•rötf
(
ªf_öfo
, "%s %s^{}\n",

2051 
	`sha1_to_hex
(
o
->
sha1
), 
ls
->
díåy_«me
);

2052 
	`fwrôe_buf„r
(
ªf_öfo
, 1, 
Àn
, 
buf
);

2053 
	`‰ì
(
ªf_öfo
);

2056 
	}
}

2058 
	$upd©e_ªmŸe_öfo_ªfs
(
ªmŸe_lock
 *
lock
)

2060 
buf„r
 buffer;

2061 
a˘ive_ªque°_¶Ÿ
 *
¶Ÿ
;

2062 
¶Ÿ_ªsu…s
 
ªsu…s
;

2063 *
if_hódî
;

2064 
cuæ_¶i°
 *
dav_hódîs
 = 
NULL
;

2066 
buf„r
.buf„∏
	`xˇŒoc
(1, 4096);

2067 
buf„r
.
size
 = 4096;

2068 
buf„r
.
po¢
 = 0;

2069 
	`ªmŸe_ls
("ªfs/", (
PROCESS_FILES
 | 
RECURSIVE
),

2070 
add_ªmŸe_öfo_ªf
, &
buf„r
);

2071 i‡(!
ab‹ãd
) {

2072 
if_hódî
 = 
	`xmÆloc
(
	`°æí
(
lock
->
tokí
) + 25);

2073 
	`•rötf
(
if_hódî
, "If: (<›aquñocktokí:%s>)", 
lock
->
tokí
);

2074 
dav_hódîs
 = 
	`cuæ_¶i°_≠≥nd
(dav_hódîs, 
if_hódî
);

2076 
¶Ÿ
 = 
	`gë_a˘ive_¶Ÿ
();

2077 
¶Ÿ
->
ªsu…s
 = &results;

2078 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_INFILE
, &
buf„r
);

2079 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_INFILESIZE
, 
buf„r
.
po¢
);

2080 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_READFUNCTION
, 
‰ód_buf„r
);

2081 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_WRITEFUNCTION
, 
fwrôe_nuŒ
);

2082 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_CUSTOMREQUEST
, 
DAV_PUT
);

2083 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_HTTPHEADER
, 
dav_hódîs
);

2084 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_UPLOAD
, 1);

2085 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_PUT
, 1);

2086 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_URL
, 
lock
->
uæ
);

2088 
buf„r
.
po¢
 = 0;

2090 i‡(
	`°¨t_a˘ive_¶Ÿ
(
¶Ÿ
)) {

2091 
	`run_a˘ive_¶Ÿ
(
¶Ÿ
);

2092 i‡(
ªsu…s
.
cuæ_ªsu…
 !
CURLE_OK
) {

2093 
	`Ârötf
(
°dîr
,

2095 
ªsu…s
.
cuæ_ªsu…
,Ñesu…s.
hâp_code
);

2098 
	`‰ì
(
if_hódî
);

2100 
	`‰ì
(
buf„r
.buffer);

2101 
	}
}

2103 
	$ªmŸe_exi°s
(c⁄° *
∑th
)

2105 *
uæ
 = 
	`xmÆloc
(
	`°æí
(
ªmŸe
->uæË+ såÀn(
∑th
) + 1);

2106 
a˘ive_ªque°_¶Ÿ
 *
¶Ÿ
;

2107 
¶Ÿ_ªsu…s
 
ªsu…s
;

2109 
	`•rötf
(
uæ
, "%s%s", 
ªmŸe
->uæ, 
∑th
);

2111 
¶Ÿ
 = 
	`gë_a˘ive_¶Ÿ
();

2112 
¶Ÿ
->
ªsu…s
 = &results;

2113 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_URL
, 
uæ
);

2114 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_NOBODY
, 1);

2116 i‡(
	`°¨t_a˘ive_¶Ÿ
(
¶Ÿ
)) {

2117 
	`run_a˘ive_¶Ÿ
(
¶Ÿ
);

2118 i‡(
ªsu…s
.
hâp_code
 == 404)

2120 i‡(
ªsu…s
.
cuæ_ªsu…
 =
CURLE_OK
)

2123 
	`Ârötf
(
°dîr
, "HEAD HTTPÉº‹ %ld\n", 
ªsu…s
.
hâp_code
);

2125 
	`Ârötf
(
°dîr
, "UnableÅo start HEADÑequest\n");

2129 
	}
}

2131 
	$„tch_symªf
(c⁄° *
∑th
, **
symªf
, *
sha1
)

2133 *
uæ
;

2134 
buf„r
 buffer;

2135 
a˘ive_ªque°_¶Ÿ
 *
¶Ÿ
;

2136 
¶Ÿ_ªsu…s
 
ªsu…s
;

2138 
uæ
 = 
	`xmÆloc
(
	`°æí
(
ªmŸe
->uæË+ såÀn(
∑th
) + 1);

2139 
	`•rötf
(
uæ
, "%s%s", 
ªmŸe
->uæ, 
∑th
);

2141 
buf„r
.
size
 = 4096;

2142 
buf„r
.
po¢
 = 0;

2143 
buf„r
.buf„∏
	`xmÆloc
(buf„r.
size
);

2145 
¶Ÿ
 = 
	`gë_a˘ive_¶Ÿ
();

2146 
¶Ÿ
->
ªsu…s
 = &results;

2147 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_FILE
, &
buf„r
);

2148 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_WRITEFUNCTION
, 
fwrôe_buf„r
);

2149 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_HTTPHEADER
, 
NULL
);

2150 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_URL
, 
uæ
);

2151 i‡(
	`°¨t_a˘ive_¶Ÿ
(
¶Ÿ
)) {

2152 
	`run_a˘ive_¶Ÿ
(
¶Ÿ
);

2153 i‡(
ªsu…s
.
cuæ_ªsu…
 !
CURLE_OK
) {

2154 
	`dõ
("Couldn't get %s forÑemote symref\n%s",

2155 
uæ
, 
cuæ_îr‹°r
);

2158 
	`dõ
("UnableÅo startÑemote symrefÑequest");

2160 
	`‰ì
(
uæ
);

2162 i‡(*
symªf
 !
NULL
)

2163 
	`‰ì
(*
symªf
);

2164 *
symªf
 = 
NULL
;

2165 
	`hash˛r
(
sha1
);

2167 i‡(
buf„r
.
po¢
 == 0)

2171 i‡(!
	`°∫cmp
((*)
buf„r
.buffer, "ref: ", 5)) {

2172 *
symªf
 = 
	`xmÆloc
(
buf„r
.
po¢
 - 5);

2173 
	`°æ˝y
(*
symªf
, (*)
buf„r
.buf„∏+ 5, buf„r.
po¢
 - 5);

2175 
	`gë_sha1_hex
(
buf„r
.buf„r, 
sha1
);

2178 
	`‰ì
(
buf„r
.buffer);

2179 
	}
}

2181 
	$vîify_mîge_ba£
(*
hód_sha1
, *
bønch_sha1
)

2183 
commô
 *
hód
 = 
	`lookup_commô
(
hód_sha1
);

2184 
commô
 *
bønch
 = 
	`lookup_commô
(
bønch_sha1
);

2185 
commô_li°
 *
mîge_ba£s
 = 
	`gë_mîge_ba£s
(
hód
, 
bønch
, 1);

2187  (
mîge_ba£s
 && !mîge_ba£s->
√xt
 && mîge_ba£s->
ôem
 =
bønch
);

2188 
	}
}

2190 
	$dñëe_ªmŸe_bønch
(*
∑âîn
, 
f‹˚
)

2192 
ªf
 *
ªfs
 = 
ªmŸe_ªfs
;

2193 
ªf
 *
ªmŸe_ªf
 = 
NULL
;

2194 
hód_sha1
[20];

2195 *
symªf
 = 
NULL
;

2196 
m©ch
;

2197 
∑éí
 = 
	`°æí
(
∑âîn
);

2198 
i
;

2199 
a˘ive_ªque°_¶Ÿ
 *
¶Ÿ
;

2200 
¶Ÿ_ªsu…s
 
ªsu…s
;

2201 *
uæ
;

2204 
m©ch
 = 0; 
ªfs
;Ñef†ªfs->
√xt
) {

2205 *
«me
 = 
ªfs
->name;

2206 
«mñí
 = 
	`°æí
(
«me
);

2207 i‡(
«mñí
 < 
∑éí
 ||

2208 
	`memcmp
(
«me
 + 
«mñí
 - 
∑éí
, 
∑âîn
,Öatlen))

2210 i‡(
«mñí
 !
∑éí
 && 
«me
[namelen -Öatlen - 1] != '/')

2212 
m©ch
++;

2213 
ªmŸe_ªf
 = 
ªfs
;

2215 i‡(
m©ch
 == 0)

2216  
	`îr‹
("NÿªmŸêbønch m©che†%s", 
∑âîn
);

2217 i‡(
m©ch
 != 1)

2218  
	`îr‹
("MoreÅhan oneÑemote branch matches %s",

2219 
∑âîn
);

2225 
	`„tch_symªf
("HEAD", &
symªf
, 
hód_sha1
);

2226 i‡(!
symªf
)

2227  
	`îr‹
("Remote HEAD isÇotá symref");

2230 
i
=0; 
symªf
 && i<
MAXDEPTH
; i++) {

2231 i‡(!
	`°rcmp
(
ªmŸe_ªf
->
«me
, 
symªf
))

2232  
	`îr‹
("Remote branch %s isÅhe current HEAD",

2233 
ªmŸe_ªf
->
«me
);

2234 
	`„tch_symªf
(
symªf
, &symªf, 
hód_sha1
);

2238 i‡(!
f‹˚
) {

2240 i‡(
symªf
)

2241  
	`îr‹
("Remote HEAD symrefsÅoo deep");

2242 i‡(
	`is_zîo_sha1
(
hód_sha1
))

2243  
	`îr‹
("UnableÅoÑesolveÑemote HEAD");

2244 i‡(!
	`has_sha1_fûe
(
hód_sha1
))

2245  
	`îr‹
("RemŸêHEADÑesﬁve†tÿobje˘ %s\nwhich d€†nŸÉxi°ÜoˇŒy,Öîh≠†youÇìdÅÿ„tch?", 
	`sha1_to_hex
(
hód_sha1
));

2248 i‡(
	`is_zîo_sha1
(
ªmŸe_ªf
->
ﬁd_sha1
))

2249  
	`îr‹
("UnableÅoÑesolveÑemote branch %s",

2250 
ªmŸe_ªf
->
«me
);

2251 i‡(!
	`has_sha1_fûe
(
ªmŸe_ªf
->
ﬁd_sha1
))

2252  
	`îr‹
("RemŸêbønch %†ªsﬁve†tÿobje˘ %s\nwhich d€†nŸÉxi°ÜoˇŒy,Öîh≠†youÇìdÅÿ„tch?", 
ªmŸe_ªf
->
«me
, 
	`sha1_to_hex
‘emŸe_ªf->
ﬁd_sha1
));

2255 i‡(!
	`vîify_mîge_ba£
(
hód_sha1
, 
ªmŸe_ªf
->
ﬁd_sha1
)) {

2256  
	`îr‹
("Thêbønch '%s' i†nŸá såi˘ sub£ào‡you∏cuºíàHEAD.\nI‡youáª suª you w™àtÿdñëêô,Ñun:\n\t'gô hâp-push -D %†%s'", 
ªmŸe_ªf
->
«me
, 
ªmŸe
->
uæ
, 
∑âîn
);

2261 
	`Ârötf
(
°dîr
, "RemovögÑemŸêbønch '%s'\n", 
ªmŸe_ªf
->
«me
);

2262 
uæ
 = 
	`xmÆloc
(
	`°æí
(
ªmŸe
->uæË+ såÀn(
ªmŸe_ªf
->
«me
) + 1);

2263 
	`•rötf
(
uæ
, "%s%s", 
ªmŸe
->uæ, 
ªmŸe_ªf
->
«me
);

2264 
¶Ÿ
 = 
	`gë_a˘ive_¶Ÿ
();

2265 
¶Ÿ
->
ªsu…s
 = &results;

2266 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_HTTPGET
, 1);

2267 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_WRITEFUNCTION
, 
fwrôe_nuŒ
);

2268 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_URL
, 
uæ
);

2269 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_CUSTOMREQUEST
, 
DAV_DELETE
);

2270 i‡(
	`°¨t_a˘ive_¶Ÿ
(
¶Ÿ
)) {

2271 
	`run_a˘ive_¶Ÿ
(
¶Ÿ
);

2272 
	`‰ì
(
uæ
);

2273 i‡(
ªsu…s
.
cuæ_ªsu…
 !
CURLE_OK
)

2274  
	`îr‹
("DELETEÑequest failed (%d/%ld)\n",

2275 
ªsu…s
.
cuæ_ªsu…
,Ñesu…s.
hâp_code
);

2277 
	`‰ì
(
uæ
);

2278  
	`îr‹
("UnableÅo start DELETEÑequest");

2282 
	}
}

2284 
	$maö
(
¨gc
, **
¨gv
)

2286 
å™s„r_ªque°
 *
ªque°
;

2287 
å™s„r_ªque°
 *
√xt_ªque°
;

2288 
ƒ_ªf•ec
 = 0;

2289 **
ªf•ec
 = 
NULL
;

2290 
ªmŸe_lock
 *
ªf_lock
 = 
NULL
;

2291 
ªmŸe_lock
 *
öfo_ªf_lock
 = 
NULL
;

2292 
ªv_öfo
 
ªvs
;

2293 
dñëe_bønch
 = 0;

2294 
f‹˚_dñëe
 = 0;

2295 
obje˘s_to_£nd
;

2296 
rc
 = 0;

2297 
i
;

2298 
√w_ªfs
;

2299 
ªf
 *ref;

2301 
	`£tup_gô_dúe˘‹y
();

2303 
ªmŸe
 = 
	`xˇŒoc
((*remote), 1);

2305 
¨gv
++;

2306 
i
 = 1; i < 
¨gc
; i++, 
¨gv
++) {

2307 *
¨g
 = *
¨gv
;

2309 i‡(*
¨g
 == '-') {

2310 i‡(!
	`°rcmp
(
¨g
, "--all")) {

2311 
push_Æl
 = 1;

2314 i‡(!
	`°rcmp
(
¨g
, "--force")) {

2315 
f‹˚_Æl
 = 1;

2318 i‡(!
	`°rcmp
(
¨g
, "--verbose")) {

2319 
push_vîbo£ly
 = 1;

2322 i‡(!
	`°rcmp
(
¨g
, "-d")) {

2323 
dñëe_bønch
 = 1;

2326 i‡(!
	`°rcmp
(
¨g
, "-D")) {

2327 
dñëe_bønch
 = 1;

2328 
f‹˚_dñëe
 = 1;

2332 i‡(!
ªmŸe
->
uæ
) {

2333 *
∑th
 = 
	`°r°r
(
¨g
, "//");

2334 
ªmŸe
->
uæ
 = 
¨g
;

2335 i‡(
∑th
) {

2336 
∑th
 = 
	`°rchr
(path+2, '/');

2337 i‡(
∑th
)

2338 
ªmŸe
->
∑th_Àn
 = 
	`°æí
(
∑th
);

2342 
ªf•ec
 = 
¨gv
;

2343 
ƒ_ªf•ec
 = 
¨gc
 - 
i
;

2347 i‡(!
ªmŸe
->
uæ
)

2348 
	`ußge
(
hâp_push_ußge
);

2350 i‡(
dñëe_bønch
 && 
ƒ_ªf•ec
 != 1)

2351 
	`dõ
("You must specify only one branchÇame when deletingáÑemote branch");

2353 
	`mem£t
(
ªmŸe_dú_exi°s
, -1, 256);

2355 
	`hâp_öô
();

2357 
no_¥agma_hódî
 = 
	`cuæ_¶i°_≠≥nd
(no_pragma_header, "Pragma:");

2358 
deÁu…_hódîs
 = 
	`cuæ_¶i°_≠≥nd
(default_headers, "Range:");

2359 
deÁu…_hódîs
 = 
	`cuæ_¶i°_≠≥nd
(default_headers, "Destination:");

2360 
deÁu…_hódîs
 = 
	`cuæ_¶i°_≠≥nd
(default_headers, "If:");

2361 
deÁu…_hódîs
 = 
	`cuæ_¶i°_≠≥nd
(default_headers,

2365 i‡(!
	`lockög_avaûabÀ
()) {

2366 
	`Ârötf
(
°dîr
, "Eº‹:ÇÿDAVÜockög suµ‹à⁄ÑemŸêªpÿ%s\n", 
ªmŸe
->
uæ
);

2367 
rc
 = 1;

2368 
˛ónup
;

2372 
ªmŸe
->
ˇn_upd©e_öfo_ªfs
 = 0;

2373 
ªmŸe
->
has_öfo_ªfs
 = 
	`ªmŸe_exi°s
("info/refs");

2374 
ªmŸe
->
has_öfo_∑cks
 = 
	`ªmŸe_exi°s
("objects/info/packs");

2375 i‡(
ªmŸe
->
has_öfo_ªfs
) {

2376 
öfo_ªf_lock
 = 
	`lock_ªmŸe
("öfo/ªfs", 
LOCK_TIME
);

2377 i‡(
öfo_ªf_lock
)

2378 
ªmŸe
->
ˇn_upd©e_öfo_ªfs
 = 1;

2380 i‡(
ªmŸe
->
has_öfo_∑cks
)

2381 
	`„tch_ödi˚s
();

2384 
	`gë_loˇl_hóds
();

2385 
	`Ârötf
(
°dîr
, "FetchingÑemote heads...\n");

2386 
	`gë_dav_ªmŸe_hóds
();

2389 i‡(
dñëe_bønch
) {

2390 i‡(
	`dñëe_ªmŸe_bønch
(
ªf•ec
[0], 
f‹˚_dñëe
) == -1)

2391 
	`Ârötf
(
°dîr
, "UnableÅo deleteÑemote branch %s\n",

2392 
ªf•ec
[0]);

2393 
˛ónup
;

2397 i‡(!
ªmŸe_èû
)

2398 
ªmŸe_èû
 = &
ªmŸe_ªfs
;

2399 i‡(
	`m©ch_ªfs
(
loˇl_ªfs
, 
ªmŸe_ªfs
, &
ªmŸe_èû
,

2400 
ƒ_ªf•ec
, 
ªf•ec
, 
push_Æl
))

2402 i‡(!
ªmŸe_ªfs
) {

2403 
	`Ârötf
(
°dîr
, "NoÑefs in commonándÇone specified; doingÇothing.\n");

2407 
√w_ªfs
 = 0;

2408 
ªf
 = 
ªmŸe_ªfs
;Ñef;Ñe‡ªf->
√xt
) {

2409 
ﬁd_hex
[60], *
√w_hex
;

2410 c⁄° *
commô_¨gv
[4];

2411 
commô_¨gc
;

2412 *
√w_sha1_hex
, *
ﬁd_sha1_hex
;

2414 i‡(!
ªf
->
≥î_ªf
)

2416 i‡(!
	`hashcmp
(
ªf
->
ﬁd_sha1
,Ñef->
≥î_ªf
->
√w_sha1
)) {

2417 i‡(
push_vîbo£ly
 || 1)

2418 
	`Ârötf
(
°dîr
, "'%s': up-to-d©e\n", 
ªf
->
«me
);

2422 i‡(!
f‹˚_Æl
 &&

2423 !
	`is_zîo_sha1
(
ªf
->
ﬁd_sha1
) &&

2424 !
ªf
->
f‹˚
) {

2425 i‡(!
	`has_sha1_fûe
(
ªf
->
ﬁd_sha1
) ||

2426 !
	`ªf_√wî
(
ªf
->
≥î_ªf
->
√w_sha1
,

2427 
ªf
->
ﬁd_sha1
)) {

2435 
	`îr‹
("remote '%s' isÇotá strict "

2439 
ªf
->
«me
,

2440 
ªf
->
≥î_ªf
->
«me
);

2441 
rc
 = -2;

2445 
	`hash˝y
(
ªf
->
√w_sha1
,Ñef->
≥î_ªf
->new_sha1);

2446 i‡(
	`is_zîo_sha1
(
ªf
->
√w_sha1
)) {

2447 
	`îr‹
("cannot happenánymore");

2448 
rc
 = -3;

2451 
√w_ªfs
++;

2452 
	`°r˝y
(
ﬁd_hex
, 
	`sha1_to_hex
(
ªf
->
ﬁd_sha1
));

2453 
√w_hex
 = 
	`sha1_to_hex
(
ªf
->
√w_sha1
);

2455 
	`Ârötf
(
°dîr
, "upd©ög '%s'", 
ªf
->
«me
);

2456 i‡(
	`°rcmp
(
ªf
->
«me
,Ñef->
≥î_ªf
->name))

2457 
	`Ârötf
(
°dîr
, " usög '%s'", 
ªf
->
≥î_ªf
->
«me
);

2458 
	`Ârötf
(
°dîr
, "\¿ from %s\¿Åÿ %s\n", 
ﬁd_hex
, 
√w_hex
);

2462 
ªf_lock
 = 
	`lock_ªmŸe
(
ªf
->
«me
, 
LOCK_TIME
);

2463 i‡(
ªf_lock
 =
NULL
) {

2464 
	`Ârötf
(
°dîr
, "UnableÅoÜockÑemote branch %s\n",

2465 
ªf
->
«me
);

2466 
rc
 = 1;

2471 
commô_¨gc
 = 3;

2472 
√w_sha1_hex
 = 
	`x°rdup
(
	`sha1_to_hex
(
ªf
->
√w_sha1
));

2473 
ﬁd_sha1_hex
 = 
NULL
;

2474 
commô_¨gv
[1] = "--objects";

2475 
commô_¨gv
[2] = 
√w_sha1_hex
;

2476 i‡(!
push_Æl
 && !
	`is_zîo_sha1
(
ªf
->
ﬁd_sha1
)) {

2477 
ﬁd_sha1_hex
 = 
	`xmÆloc
(42);

2478 
	`•rötf
(
ﬁd_sha1_hex
, "^%s",

2479 
	`sha1_to_hex
(
ªf
->
ﬁd_sha1
));

2480 
commô_¨gv
[3] = 
ﬁd_sha1_hex
;

2481 
commô_¨gc
++;

2483 
	`öô_ªvisi⁄s
(&
ªvs
, 
	`£tup_gô_dúe˘‹y
());

2484 
	`£tup_ªvisi⁄s
(
commô_¨gc
, 
commô_¨gv
, &
ªvs
, 
NULL
);

2485 
	`‰ì
(
√w_sha1_hex
);

2486 i‡(
ﬁd_sha1_hex
) {

2487 
	`‰ì
(
ﬁd_sha1_hex
);

2488 
commô_¨gv
[1] = 
NULL
;

2492 
pushög
 = 0;

2493 
	`¥ï¨e_ªvisi⁄_wÆk
(&
ªvs
);

2494 
	`m¨k_edges_unöãª°ög
(
ªvs
.
commôs
);

2495 
obje˘s_to_£nd
 = 
	`gë_dñè
(&
ªvs
, 
ªf_lock
);

2496 
	`föish_Æl_a˘ive_¶Ÿs
();

2500 
pushög
 = 1;

2501 i‡(
obje˘s_to_£nd
)

2502 
	`Ârötf
(
°dîr
, " sending %d objects\n",

2503 
obje˘s_to_£nd
);

2504 #ifde‡
USE_CURL_MULTI


2505 
	`fûl_a˘ive_¶Ÿs
();

2507 
	`föish_Æl_a˘ive_¶Ÿs
();

2510 i‡(
ab‹ãd
 || !
	`upd©e_ªmŸe
(
ªf
->
√w_sha1
, 
ªf_lock
)) {

2511 
rc
 = 1;

2512 
u∆ock
;

2515 
u∆ock
:

2516 i‡(!
rc
)

2517 
	`Ârötf
(
°dîr
, " done\n");

2518 
	`u∆ock_ªmŸe
(
ªf_lock
);

2519 
	`check_locks
();

2523 i‡(
ªmŸe
->
has_öfo_ªfs
 && 
√w_ªfs
) {

2524 i‡(
öfo_ªf_lock
 && 
ªmŸe
->
ˇn_upd©e_öfo_ªfs
) {

2525 
	`Ârötf
(
°dîr
, "UpdatingÑemote server info\n");

2526 
	`upd©e_ªmŸe_öfo_ªfs
(
öfo_ªf_lock
);

2528 
	`Ârötf
(
°dîr
, "UnableÅo update server info\n");

2531 i‡(
öfo_ªf_lock
)

2532 
	`u∆ock_ªmŸe
(
öfo_ªf_lock
);

2534 
˛ónup
:

2535 
	`‰ì
(
ªmŸe
);

2537 
	`cuæ_¶i°_‰ì_Æl
(
no_¥agma_hódî
);

2538 
	`cuæ_¶i°_‰ì_Æl
(
deÁu…_hódîs
);

2540 
	`hâp_˛ónup
();

2542 
ªque°
 = 
ªque°_queue_hód
;

2543 
ªque°
 !
NULL
) {

2544 
√xt_ªque°
 = 
ªque°
->
√xt
;

2545 
	`ªÀa£_ªque°
(
ªque°
);

2546 
ªque°
 = 
√xt_ªque°
;

2549  
rc
;

2550 
	}
}

	@http.c

1 
	~"hâp.h
"

3 
	gd©a_ª˚ived
;

4 
	ga˘ive_ªque°s
 = 0;

6 #ifde‡
USE_CURL_MULTI


7 
	gmax_ªque°s
 = -1;

8 
CURLM
 *
	gcuæm
;

10 #i‚de‡
NO_CURL_EASY_DUPHANDLE


11 
CURL
 *
	gcuæ_deÁu…
;

13 
	gcuæ_îr‹°r
[
CURL_ERROR_SIZE
];

15 
	gcuæ_s¶_vîify
 = -1;

16 *
	gs¶_˚π
 = 
NULL
;

17 #i‡
LIBCURL_VERSION_NUM
 >= 0x070902

18 *
	gs¶_key
 = 
NULL
;

20 #i‡
LIBCURL_VERSION_NUM
 >= 0x070908

21 *
	gs¶_ˇ∑th
 = 
NULL
;

23 *
	gs¶_ˇöfo
 = 
NULL
;

24 
	gcuæ_low_•ìd_limô
 = -1;

25 
	gcuæ_low_•ìd_time
 = -1;

26 
	gcuæ_·p_no_ïsv
 = 0;

28 
cuæ_¶i°
 *
	g¥agma_hódî
;

30 
a˘ive_ªque°_¶Ÿ
 *
	ga˘ive_queue_hód
 = 
NULL
;

32 
size_t
 
	$‰ód_buf„r
(*
±r
, 
size_t
 
ñtsize
, size_à
nmemb
,

33 
buf„r
 *buffer)

35 
size_t
 
size
 = 
ñtsize
 * 
nmemb
;

36 i‡(
size
 > 
buf„r
->sizê- buf„r->
po¢
)

37 
size
 = 
buf„r
->sizê- buf„r->
po¢
;

38 
	`mem˝y
(
±r
, (*Ë
buf„r
->buf„∏+ buf„r->
po¢
, 
size
);

39 
buf„r
->
po¢
 +
size
;

40  
size
;

41 
	}
}

43 
size_t
 
	$fwrôe_buf„r
(c⁄° *
±r
, 
size_t
 
ñtsize
,

44 
size_t
 
nmemb
, 
buf„r
 *buffer)

46 
size_t
 
size
 = 
ñtsize
 * 
nmemb
;

47 i‡(
size
 > 
buf„r
->sizê- buf„r->
po¢
) {

48 
buf„r
->
size
 = buffer->size * 3 / 2;

49 i‡(
buf„r
->
size
 < buf„r->
po¢
 + size)

50 
buf„r
->
size
 = buf„r->
po¢
 + size;

51 
buf„r
->buf„∏
	`xªÆloc
(buf„r->buf„r, buf„r->
size
);

53 
	`mem˝y
((*Ë
buf„r
->buf„∏+ buf„r->
po¢
, 
±r
, 
size
);

54 
buf„r
->
po¢
 +
size
;

55 
d©a_ª˚ived
++;

56  
size
;

57 
	}
}

59 
size_t
 
	$fwrôe_nuŒ
(c⁄° *
±r
, 
size_t
 
ñtsize
,

60 
size_t
 
nmemb
, 
buf„r
 *buffer)

62 
d©a_ª˚ived
++;

63  
ñtsize
 * 
nmemb
;

64 
	}
}

66 
föish_a˘ive_¶Ÿ
(
a˘ive_ªque°_¶Ÿ
 *
¶Ÿ
);

68 #ifde‡
USE_CURL_MULTI


69 
	$¥o˚ss_cuæ_mesßges
()

71 
num_mesßges
;

72 
a˘ive_ªque°_¶Ÿ
 *
¶Ÿ
;

73 
CURLMsg
 *
cuæ_mesßge
 = 
	`cuæ_mu…i_öfo_ªad
(
cuæm
, &
num_mesßges
);

75 
cuæ_mesßge
 !
NULL
) {

76 i‡(
cuæ_mesßge
->
msg
 =
CURLMSG_DONE
) {

77 
cuæ_ªsu…
 = 
cuæ_mesßge
->
d©a
.
ªsu…
;

78 
¶Ÿ
 = 
a˘ive_queue_hód
;

79 
¶Ÿ
 !
NULL
 &&

80 
¶Ÿ
->
cuæ
 !
cuæ_mesßge
->
ósy_h™dÀ
)

81 
¶Ÿ
 = slŸ->
√xt
;

82 i‡(
¶Ÿ
 !
NULL
) {

83 
	`cuæ_mu…i_ªmove_h™dÀ
(
cuæm
, 
¶Ÿ
->
cuæ
);

84 
¶Ÿ
->
cuæ_ªsu…
 = curl_result;

85 
	`föish_a˘ive_¶Ÿ
(
¶Ÿ
);

87 
	`Ârötf
(
°dîr
, "Received DONE message for unknownÑequest!\n");

90 
	`Ârötf
(
°dîr
, "Unknown CURL messageÑeceived: %d\n",

91 ()
cuæ_mesßge
->
msg
);

93 
cuæ_mesßge
 = 
	`cuæ_mu…i_öfo_ªad
(
cuæm
, &
num_mesßges
);

95 
	}
}

98 
	$hâp_›ti⁄s
(c⁄° *
v¨
, c⁄° *
vÆue
)

100 i‡(!
	`°rcmp
("hâp.s¶vîify", 
v¨
)) {

101 i‡(
cuæ_s¶_vîify
 == -1) {

102 
cuæ_s¶_vîify
 = 
	`gô_c⁄fig_boﬁ
(
v¨
, 
vÆue
);

107 i‡(!
	`°rcmp
("hâp.s¶˚π", 
v¨
)) {

108 i‡(
s¶_˚π
 =
NULL
) {

109 
s¶_˚π
 = 
	`xmÆloc
(
	`°æí
(
vÆue
)+1);

110 
	`°r˝y
(
s¶_˚π
, 
vÆue
);

114 #i‡
LIBCURL_VERSION_NUM
 >= 0x070902

115 i‡(!
	`°rcmp
("hâp.s¶key", 
v¨
)) {

116 i‡(
s¶_key
 =
NULL
) {

117 
s¶_key
 = 
	`xmÆloc
(
	`°æí
(
vÆue
)+1);

118 
	`°r˝y
(
s¶_key
, 
vÆue
);

123 #i‡
LIBCURL_VERSION_NUM
 >= 0x070908

124 i‡(!
	`°rcmp
("hâp.s¶ˇ∑th", 
v¨
)) {

125 i‡(
s¶_ˇ∑th
 =
NULL
) {

126 
s¶_ˇ∑th
 = 
	`xmÆloc
(
	`°æí
(
vÆue
)+1);

127 
	`°r˝y
(
s¶_ˇ∑th
, 
vÆue
);

132 i‡(!
	`°rcmp
("hâp.s¶ˇöfo", 
v¨
)) {

133 i‡(
s¶_ˇöfo
 =
NULL
) {

134 
s¶_ˇöfo
 = 
	`xmÆloc
(
	`°æí
(
vÆue
)+1);

135 
	`°r˝y
(
s¶_ˇöfo
, 
vÆue
);

140 #ifde‡
USE_CURL_MULTI


141 i‡(!
	`°rcmp
("hâp.maxªque°s", 
v¨
)) {

142 i‡(
max_ªque°s
 == -1)

143 
max_ªque°s
 = 
	`gô_c⁄fig_öt
(
v¨
, 
vÆue
);

148 i‡(!
	`°rcmp
("hâp.low•ìdlimô", 
v¨
)) {

149 i‡(
cuæ_low_•ìd_limô
 == -1)

150 
cuæ_low_•ìd_limô
 = ()
	`gô_c⁄fig_öt
(
v¨
, 
vÆue
);

153 i‡(!
	`°rcmp
("hâp.low•ìdtime", 
v¨
)) {

154 i‡(
cuæ_low_•ìd_time
 == -1)

155 
cuæ_low_•ìd_time
 = ()
	`gô_c⁄fig_öt
(
v¨
, 
vÆue
);

159 i‡(!
	`°rcmp
("hâp.n€psv", 
v¨
)) {

160 
cuæ_·p_no_ïsv
 = 
	`gô_c⁄fig_boﬁ
(
v¨
, 
vÆue
);

165  
	`gô_deÁu…_c⁄fig
(
v¨
, 
vÆue
);

166 
	}
}

168 
CURL
* 
	$gë_cuæ_h™dÀ
()

170 
CURL
* 
ªsu…
 = 
	`cuæ_ósy_öô
();

172 
	`cuæ_ósy_£t›t
(
ªsu…
, 
CURLOPT_SSL_VERIFYPEER
, 
cuæ_s¶_vîify
);

173 #i‡
LIBCURL_VERSION_NUM
 >= 0x070907

174 
	`cuæ_ósy_£t›t
(
ªsu…
, 
CURLOPT_NETRC
, 
CURL_NETRC_OPTIONAL
);

177 i‡(
s¶_˚π
 !
NULL
)

178 
	`cuæ_ósy_£t›t
(
ªsu…
, 
CURLOPT_SSLCERT
, 
s¶_˚π
);

179 #i‡
LIBCURL_VERSION_NUM
 >= 0x070902

180 i‡(
s¶_key
 !
NULL
)

181 
	`cuæ_ósy_£t›t
(
ªsu…
, 
CURLOPT_SSLKEY
, 
s¶_key
);

183 #i‡
LIBCURL_VERSION_NUM
 >= 0x070908

184 i‡(
s¶_ˇ∑th
 !
NULL
)

185 
	`cuæ_ósy_£t›t
(
ªsu…
, 
CURLOPT_CAPATH
, 
s¶_ˇ∑th
);

187 i‡(
s¶_ˇöfo
 !
NULL
)

188 
	`cuæ_ósy_£t›t
(
ªsu…
, 
CURLOPT_CAINFO
, 
s¶_ˇöfo
);

189 
	`cuæ_ósy_£t›t
(
ªsu…
, 
CURLOPT_FAILONERROR
, 1);

191 i‡(
cuæ_low_•ìd_limô
 > 0 && 
cuæ_low_•ìd_time
 > 0) {

192 
	`cuæ_ósy_£t›t
(
ªsu…
, 
CURLOPT_LOW_SPEED_LIMIT
,

193 
cuæ_low_•ìd_limô
);

194 
	`cuæ_ósy_£t›t
(
ªsu…
, 
CURLOPT_LOW_SPEED_TIME
,

195 
cuæ_low_•ìd_time
);

198 
	`cuæ_ósy_£t›t
(
ªsu…
, 
CURLOPT_FOLLOWLOCATION
, 1);

200 i‡(
	`gëív
("GIT_CURL_VERBOSE"))

201 
	`cuæ_ósy_£t›t
(
ªsu…
, 
CURLOPT_VERBOSE
, 1);

203 
	`cuæ_ósy_£t›t
(
ªsu…
, 
CURLOPT_USERAGENT
, 
GIT_USER_AGENT
);

205 i‡(
cuæ_·p_no_ïsv
)

206 
	`cuæ_ósy_£t›t
(
ªsu…
, 
CURLOPT_FTP_USE_EPSV
, 0);

208  
ªsu…
;

209 
	}
}

211 
	$hâp_öô
()

213 *
low_•ìd_limô
;

214 *
low_•ìd_time
;

216 
	`cuæ_globÆ_öô
(
CURL_GLOBAL_ALL
);

218 
¥agma_hódî
 = 
	`cuæ_¶i°_≠≥nd
(pragma_header, "Pragma:Ço-cache");

220 #ifde‡
USE_CURL_MULTI


222 *
hâp_max_ªque°s
 = 
	`gëív
("GIT_HTTP_MAX_REQUESTS");

223 i‡(
hâp_max_ªque°s
 !
NULL
)

224 
max_ªque°s
 = 
	`©oi
(
hâp_max_ªque°s
);

227 
cuæm
 = 
	`cuæ_mu…i_öô
();

228 i‡(
cuæm
 =
NULL
) {

229 
	`Ârötf
(
°dîr
, "Error creating curl multi handle.\n");

230 
	`exô
(1);

234 i‡(
	`gëív
("GIT_SSL_NO_VERIFY"))

235 
cuæ_s¶_vîify
 = 0;

237 
s¶_˚π
 = 
	`gëív
("GIT_SSL_CERT");

238 #i‡
LIBCURL_VERSION_NUM
 >= 0x070902

239 
s¶_key
 = 
	`gëív
("GIT_SSL_KEY");

241 #i‡
LIBCURL_VERSION_NUM
 >= 0x070908

242 
s¶_ˇ∑th
 = 
	`gëív
("GIT_SSL_CAPATH");

244 
s¶_ˇöfo
 = 
	`gëív
("GIT_SSL_CAINFO");

246 
low_•ìd_limô
 = 
	`gëív
("GIT_HTTP_LOW_SPEED_LIMIT");

247 i‡(
low_•ìd_limô
 !
NULL
)

248 
cuæ_low_•ìd_limô
 = 
	`°πﬁ
(
low_•ìd_limô
, 
NULL
, 10);

249 
low_•ìd_time
 = 
	`gëív
("GIT_HTTP_LOW_SPEED_TIME");

250 i‡(
low_•ìd_time
 !
NULL
)

251 
cuæ_low_•ìd_time
 = 
	`°πﬁ
(
low_•ìd_time
, 
NULL
, 10);

253 
	`gô_c⁄fig
(
hâp_›ti⁄s
);

255 i‡(
cuæ_s¶_vîify
 == -1)

256 
cuæ_s¶_vîify
 = 1;

258 #ifde‡
USE_CURL_MULTI


259 i‡(
max_ªque°s
 < 1)

260 
max_ªque°s
 = 
DEFAULT_MAX_REQUESTS
;

263 i‡(
	`gëív
("GIT_CURL_FTP_NO_EPSV"))

264 
cuæ_·p_no_ïsv
 = 1;

266 #i‚de‡
NO_CURL_EASY_DUPHANDLE


267 
cuæ_deÁu…
 = 
	`gë_cuæ_h™dÀ
();

269 
	}
}

271 
	$hâp_˛ónup
()

273 
a˘ive_ªque°_¶Ÿ
 *
¶Ÿ
 = 
a˘ive_queue_hód
;

274 #ifde‡
USE_CURL_MULTI


275 *
waô_uæ
;

278 
¶Ÿ
 !
NULL
) {

279 #ifde‡
USE_CURL_MULTI


280 i‡(
¶Ÿ
->
ö_u£
) {

281 
	`cuæ_ósy_gëöfo
(
¶Ÿ
->
cuæ
,

282 
CURLINFO_EFFECTIVE_URL
,

283 &
waô_uæ
);

284 
	`Ârötf
(
°dîr
, "Waôög f‹ %s\n", 
waô_uæ
);

285 
	`run_a˘ive_¶Ÿ
(
¶Ÿ
);

288 i‡(
¶Ÿ
->
cuæ
 !
NULL
)

289 
	`cuæ_ósy_˛ónup
(
¶Ÿ
->
cuæ
);

290 
¶Ÿ
 = slŸ->
√xt
;

293 #i‚de‡
NO_CURL_EASY_DUPHANDLE


294 
	`cuæ_ósy_˛ónup
(
cuæ_deÁu…
);

297 #ifde‡
USE_CURL_MULTI


298 
	`cuæ_mu…i_˛ónup
(
cuæm
);

300 
	`cuæ_globÆ_˛ónup
();

302 
	`cuæ_¶i°_‰ì_Æl
(
¥agma_hódî
);

303 
	}
}

305 
a˘ive_ªque°_¶Ÿ
 *
	$gë_a˘ive_¶Ÿ
()

307 
a˘ive_ªque°_¶Ÿ
 *
¶Ÿ
 = 
a˘ive_queue_hód
;

308 
a˘ive_ªque°_¶Ÿ
 *
√w¶Ÿ
;

310 #ifde‡
USE_CURL_MULTI


311 
num_å™s„rs
;

314 
a˘ive_ªque°s
 >
max_ªque°s
) {

315 
	`cuæ_mu…i_≥rf‹m
(
cuæm
, &
num_å™s„rs
);

316 i‡(
num_å™s„rs
 < 
a˘ive_ªque°s
) {

317 
	`¥o˚ss_cuæ_mesßges
();

322 
¶Ÿ
 !
NULL
 && slŸ->
ö_u£
) {

323 
¶Ÿ
 = slŸ->
√xt
;

325 i‡(
¶Ÿ
 =
NULL
) {

326 
√w¶Ÿ
 = 
	`xmÆloc
((*newslot));

327 
√w¶Ÿ
->
cuæ
 = 
NULL
;

328 
√w¶Ÿ
->
ö_u£
 = 0;

329 
√w¶Ÿ
->
√xt
 = 
NULL
;

331 
¶Ÿ
 = 
a˘ive_queue_hód
;

332 i‡(
¶Ÿ
 =
NULL
) {

333 
a˘ive_queue_hód
 = 
√w¶Ÿ
;

335 
¶Ÿ
->
√xt
 !
NULL
) {

336 
¶Ÿ
 = slŸ->
√xt
;

338 
¶Ÿ
->
√xt
 = 
√w¶Ÿ
;

340 
¶Ÿ
 = 
√w¶Ÿ
;

343 i‡(
¶Ÿ
->
cuæ
 =
NULL
) {

344 #ifde‡
NO_CURL_EASY_DUPHANDLE


345 
¶Ÿ
->
cuæ
 = 
	`gë_cuæ_h™dÀ
();

347 
¶Ÿ
->
cuæ
 = 
	`cuæ_ósy_duph™dÀ
(
cuæ_deÁu…
);

351 
a˘ive_ªque°s
++;

352 
¶Ÿ
->
ö_u£
 = 1;

353 
¶Ÿ
->
loˇl
 = 
NULL
;

354 
¶Ÿ
->
ªsu…s
 = 
NULL
;

355 
¶Ÿ
->
föished
 = 
NULL
;

356 
¶Ÿ
->
ˇŒback_d©a
 = 
NULL
;

357 
¶Ÿ
->
ˇŒback_func
 = 
NULL
;

358 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_HTTPHEADER
, 
NULL
);

359 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_HTTPHEADER
, 
¥agma_hódî
);

360 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_ERRORBUFFER
, 
cuæ_îr‹°r
);

361 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_CUSTOMREQUEST
, 
NULL
);

362 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_READFUNCTION
, 
NULL
);

363 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_WRITEFUNCTION
, 
NULL
);

364 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_UPLOAD
, 0);

365 
	`cuæ_ósy_£t›t
(
¶Ÿ
->
cuæ
, 
CURLOPT_HTTPGET
, 1);

367  
¶Ÿ
;

368 
	}
}

370 
	$°¨t_a˘ive_¶Ÿ
(
a˘ive_ªque°_¶Ÿ
 *
¶Ÿ
)

372 #ifde‡
USE_CURL_MULTI


373 
CURLMcode
 
cuæm_ªsu…
 = 
	`cuæ_mu…i_add_h™dÀ
(
cuæm
, 
¶Ÿ
->
cuæ
);

375 i‡(
cuæm_ªsu…
 !
CURLM_OK
 &&

376 
cuæm_ªsu…
 !
CURLM_CALL_MULTI_PERFORM
) {

377 
a˘ive_ªque°s
--;

378 
¶Ÿ
->
ö_u£
 = 0;

383 
	}
}

385 #ifde‡
USE_CURL_MULTI


386 
	$°ï_a˘ive_¶Ÿs
()

388 
num_å™s„rs
;

389 
CURLMcode
 
cuæm_ªsu…
;

392 
cuæm_ªsu…
 = 
	`cuæ_mu…i_≥rf‹m
(
cuæm
, &
num_å™s„rs
);

393 } 
cuæm_ªsu…
 =
CURLM_CALL_MULTI_PERFORM
);

394 i‡(
num_å™s„rs
 < 
a˘ive_ªque°s
) {

395 
	`¥o˚ss_cuæ_mesßges
();

396 
	`fûl_a˘ive_¶Ÿs
();

398 
	}
}

401 
	$run_a˘ive_¶Ÿ
(
a˘ive_ªque°_¶Ÿ
 *
¶Ÿ
)

403 #ifde‡
USE_CURL_MULTI


404 
œ°_pos
 = 0;

405 
cuºít_pos
;

406 
fd_£t
 
ªadfds
;

407 
fd_£t
 
wrôefds
;

408 
fd_£t
 
excfds
;

409 
max_fd
;

410 
timevÆ
 
£À˘_timeout
;

411 
föished
 = 0;

413 
¶Ÿ
->
föished
 = &finished;

414 !
föished
) {

415 
d©a_ª˚ived
 = 0;

416 
	`°ï_a˘ive_¶Ÿs
();

418 i‡(!
d©a_ª˚ived
 && 
¶Ÿ
->
loˇl
 !
NULL
) {

419 
cuºít_pos
 = 
	`·ñl
(
¶Ÿ
->
loˇl
);

420 i‡(
cuºít_pos
 > 
œ°_pos
)

421 
d©a_ª˚ived
++;

422 
œ°_pos
 = 
cuºít_pos
;

425 i‡(
¶Ÿ
->
ö_u£
 && !
d©a_ª˚ived
) {

426 
max_fd
 = 0;

427 
	`FD_ZERO
(&
ªadfds
);

428 
	`FD_ZERO
(&
wrôefds
);

429 
	`FD_ZERO
(&
excfds
);

430 
£À˘_timeout
.
tv_£c
 = 0;

431 
£À˘_timeout
.
tv_u£c
 = 50000;

432 
	`£À˘
(
max_fd
, &
ªadfds
, &
wrôefds
,

433 &
excfds
, &
£À˘_timeout
);

437 
¶Ÿ
->
ö_u£
) {

438 
¶Ÿ
->
cuæ_ªsu…
 = 
	`cuæ_ósy_≥rf‹m
(¶Ÿ->
cuæ
);

439 
	`föish_a˘ive_¶Ÿ
(
¶Ÿ
);

442 
	}
}

444 
	$˛o£down_a˘ive_¶Ÿ
(
a˘ive_ªque°_¶Ÿ
 *
¶Ÿ
)

446 
a˘ive_ªque°s
--;

447 
¶Ÿ
->
ö_u£
 = 0;

448 
	}
}

450 
	$ªÀa£_a˘ive_¶Ÿ
(
a˘ive_ªque°_¶Ÿ
 *
¶Ÿ
)

452 
	`˛o£down_a˘ive_¶Ÿ
(
¶Ÿ
);

453 i‡(
¶Ÿ
->
cuæ
) {

454 #ifde‡
USE_CURL_MULTI


455 
	`cuæ_mu…i_ªmove_h™dÀ
(
cuæm
, 
¶Ÿ
->
cuæ
);

457 
	`cuæ_ósy_˛ónup
(
¶Ÿ
->
cuæ
);

458 
¶Ÿ
->
cuæ
 = 
NULL
;

460 #ifde‡
USE_CURL_MULTI


461 
	`fûl_a˘ive_¶Ÿs
();

463 
	}
}

465 
	$föish_a˘ive_¶Ÿ
(
a˘ive_ªque°_¶Ÿ
 *
¶Ÿ
)

467 
	`˛o£down_a˘ive_¶Ÿ
(
¶Ÿ
);

468 
	`cuæ_ósy_gëöfo
(
¶Ÿ
->
cuæ
, 
CURLINFO_HTTP_CODE
, &¶Ÿ->
hâp_code
);

470 i‡(
¶Ÿ
->
föished
 !
NULL
)

471 (*
¶Ÿ
->
föished
) = 1;

474 i‡(
¶Ÿ
->
ªsu…s
 !
NULL
) {

475 
¶Ÿ
->
ªsu…s
->
cuæ_ªsu…
 = slot->curl_result;

476 
¶Ÿ
->
ªsu…s
->
hâp_code
 = slot->http_code;

480 i‡(
¶Ÿ
->
ˇŒback_func
 !
NULL
) {

481 
¶Ÿ
->
	`ˇŒback_func
(¶Ÿ->
ˇŒback_d©a
);

483 
	}
}

485 
	$föish_Æl_a˘ive_¶Ÿs
()

487 
a˘ive_ªque°_¶Ÿ
 *
¶Ÿ
 = 
a˘ive_queue_hód
;

489 
¶Ÿ
 !
NULL
)

490 i‡(
¶Ÿ
->
ö_u£
) {

491 
	`run_a˘ive_¶Ÿ
(
¶Ÿ
);

492 
¶Ÿ
 = 
a˘ive_queue_hód
;

494 
¶Ÿ
 = slŸ->
√xt
;

496 
	}
}

	@http.h

1 #i‚de‡
HTTP_H


2 
	#HTTP_H


	)

4 
	~"ˇche.h
"

6 
	~<cuæ/cuæ.h
>

7 
	~<cuæ/ósy.h
>

9 #i‡
LIBCURL_VERSION_NUM
 >= 0x070908

10 
	#USE_CURL_MULTI


	)

11 
	#DEFAULT_MAX_REQUESTS
 5

	)

14 #i‡
LIBCURL_VERSION_NUM
 < 0x070704

15 
	#cuæ_globÆ_˛ónup
(Ëdÿ{ } 0)

	)

17 #i‡
LIBCURL_VERSION_NUM
 < 0x070800

18 
	#cuæ_globÆ_öô
(
a
Ëdÿ{ } 0)

	)

21 #i‡(
LIBCURL_VERSION_NUM
 < 0x070c04) || (LIBCURL_VERSION_NUM == 0x071000)

22 
	#NO_CURL_EASY_DUPHANDLE


	)

25 #i‡
LIBCURL_VERSION_NUM
 < 0x070a03

26 
	#CURLE_HTTP_RETURNED_ERROR
 
CURLE_HTTP_NOT_FOUND


	)

29 
	s¶Ÿ_ªsu…s


31 
CURLcode
 
	mcuæ_ªsu…
;

32 
	mhâp_code
;

35 
	sa˘ive_ªque°_¶Ÿ


37 
CURL
 *
	mcuæ
;

38 
FILE
 *
	mloˇl
;

39 
	mö_u£
;

40 
CURLcode
 
	mcuæ_ªsu…
;

41 
	mhâp_code
;

42 *
	mföished
;

43 
¶Ÿ_ªsu…s
 *
	mªsu…s
;

44 *
	mˇŒback_d©a
;

45 (*
	mˇŒback_func
)(*
	md©a
);

46 
a˘ive_ªque°_¶Ÿ
 *
	m√xt
;

49 
	sbuf„r


51 
size_t
 
	mpo¢
;

52 
size_t
 
	msize
;

53 *
	mbuf„r
;

57 
size_t
 
‰ód_buf„r
(*
±r
, size_à
ñtsize
, size_à
nmemb
,

58 
buf„r
 *buffer);

59 
size_t
 
fwrôe_buf„r
(c⁄° *
±r
, size_à
ñtsize
,

60 
size_t
 
nmemb
, 
buf„r
 *buffer);

61 
size_t
 
fwrôe_nuŒ
(c⁄° *
±r
, size_à
ñtsize
,

62 
size_t
 
nmemb
, 
buf„r
 *buffer);

65 
a˘ive_ªque°_¶Ÿ
 *
gë_a˘ive_¶Ÿ
();

66 
°¨t_a˘ive_¶Ÿ
(
a˘ive_ªque°_¶Ÿ
 *
¶Ÿ
);

67 
run_a˘ive_¶Ÿ
(
a˘ive_ªque°_¶Ÿ
 *
¶Ÿ
);

68 
föish_Æl_a˘ive_¶Ÿs
();

69 
ªÀa£_a˘ive_¶Ÿ
(
a˘ive_ªque°_¶Ÿ
 *
¶Ÿ
);

71 #ifde‡
USE_CURL_MULTI


72 
fûl_a˘ive_¶Ÿs
();

73 
°ï_a˘ive_¶Ÿs
();

76 
hâp_öô
();

77 
hâp_˛ónup
();

79 
d©a_ª˚ived
;

80 
a˘ive_ªque°s
;

82 #ifde‡
USE_CURL_MULTI


83 
max_ªque°s
;

84 
CURLM
 *
cuæm
;

86 #i‚de‡
NO_CURL_EASY_DUPHANDLE


87 
CURL
 *
cuæ_deÁu…
;

89 
cuæ_îr‹°r
[
CURL_ERROR_SIZE
];

91 
cuæ_s¶_vîify
;

92 *
s¶_˚π
;

93 #i‡
LIBCURL_VERSION_NUM
 >= 0x070902

94 *
s¶_key
;

96 #i‡
LIBCURL_VERSION_NUM
 >= 0x070908

97 *
s¶_ˇ∑th
;

99 *
s¶_ˇöfo
;

100 
cuæ_low_•ìd_limô
;

101 
cuæ_low_•ìd_time
;

103 
cuæ_¶i°
 *
¥agma_hódî
;

104 
cuæ_¶i°
 *
no_ønge_hódî
;

106 
a˘ive_ªque°_¶Ÿ
 *
a˘ive_queue_hód
;

	@ident.c

8 
	~"ˇche.h
"

10 
	ggô_deÁu…_d©e
[50];

12 
	$c›y_gecos
(
∑sswd
 *
w
, *
«me
, 
sz
)

14 *
§c
, *
d°
;

15 
Àn
, 
∆í
;

17 
∆í
 = 
	`°æí
(
w
->
pw_«me
);

23 
Àn
 = 0, 
d°
 = 
«me
, 
§c
 = 
w
->
pw_gecos
;Üí < 
sz
; src++) {

24 
ch
 = *
§c
;

25 i‡(
ch
 != '&') {

26 *
d°
++ = 
ch
;

27 i‡(
ch
 == 0 || ch == ',')

29 
Àn
++;

32 i‡(
Àn
 + 
∆í
 < 
sz
) {

34 *
d°
++ = 
	`touµî
(*
w
->
pw_«me
);

35 
	`mem˝y
(
d°
, 
w
->
pw_«me
 + 1, 
∆í
 - 1);

36 
d°
 +
∆í
 - 1;

39 i‡(
Àn
 < 
sz
)

40 
«me
[
Àn
] = 0;

42 
	`dõ
("YourÖarents must have hated you!");

44 
	}
}

46 
	$c›y_emaû
(
∑sswd
 *
pw
)

52 
Àn
 = 
	`°æí
(
pw
->
pw_«me
);

53 i‡(
Àn
 > (
gô_deÁu…_emaû
)/2)

54 
	`dõ
("Your sysadmin must hate you!");

55 
	`mem˝y
(
gô_deÁu…_emaû
, 
pw
->
pw_«me
, 
Àn
);

56 
gô_deÁu…_emaû
[
Àn
++] = '@';

57 
	`gëho°«me
(
gô_deÁu…_emaû
 + 
Àn
, (git_default_email) -Üen);

58 i‡(!
	`°rchr
(
gô_deÁu…_emaû
+
Àn
, '.')) {

59 
ho°ít
 *
he
 = 
	`gëho°by«me
(
gô_deÁu…_emaû
 + 
Àn
);

60 *
domaö«me
;

62 
Àn
 = 
	`°æí
(
gô_deÁu…_emaû
);

63 
gô_deÁu…_emaû
[
Àn
++] = '.';

64 i‡(
he
 && (
domaö«me
 = 
	`°rchr
(he->
h_«me
, '.')))

65 
	`°æ˝y
(
gô_deÁu…_emaû
 + 
Àn
, 
domaö«me
 + 1,

66 (
gô_deÁu…_emaû
Ë- 
Àn
);

68 
	`°æ˝y
(
gô_deÁu…_emaû
 + 
Àn
, "(none)",

69 (
gô_deÁu…_emaû
Ë- 
Àn
);

71 
	}
}

73 
	$£tup_idít
()

75 
∑sswd
 *
pw
 = 
NULL
;

78 i‡(!
gô_deÁu…_«me
[0]) {

79 
pw
 = 
	`gëpwuid
(
	`gëuid
());

80 i‡(!
pw
)

81 
	`dõ
("You don'tÉxist. Goáway!");

82 
	`c›y_gecos
(
pw
, 
gô_deÁu…_«me
, (git_default_name));

85 i‡(!
gô_deÁu…_emaû
[0]) {

86 i‡(!
pw
)

87 
pw
 = 
	`gëpwuid
(
	`gëuid
());

88 i‡(!
pw
)

89 
	`dõ
("You don'tÉxist. Goáway!");

90 
	`c›y_emaû
(
pw
);

94 i‡(!
gô_deÁu…_d©e
[0])

95 
	`d©e°amp
(
gô_deÁu…_d©e
, (git_default_date));

96 
	}
}

98 
	$add_øw
(*
buf
, 
size
, 
off£t
, c⁄° *
°r
)

100 
Àn
 = 
	`°æí
(
°r
);

101 i‡(
off£t
 + 
Àn
 > 
size
)

102  
size
;

103 
	`mem˝y
(
buf
 + 
off£t
, 
°r
, 
Àn
);

104  
off£t
 + 
Àn
;

105 
	}
}

107 
	$¸ud
(
c
)

109 
¸ud_¨øy
[256];

110 
¸ud_¨øy_öôülized
 = 0;

112 i‡(!
¸ud_¨øy_öôülized
) {

113 
k
;

115 
k
 = 0; k <31; ++kË
¸ud_¨øy
[k] = 1;

116 
¸ud_¨øy
[' '] = 1;

117 
¸ud_¨øy
['.'] = 1;

118 
¸ud_¨øy
[','] = 1;

119 
¸ud_¨øy
[':'] = 1;

120 
¸ud_¨øy
[';'] = 1;

121 
¸ud_¨øy
['<'] = 1;

122 
¸ud_¨øy
['>'] = 1;

123 
¸ud_¨øy
['"'] = 1;

124 
¸ud_¨øy
['\''] = 1;

125 
¸ud_¨øy_öôülized
 = 1;

127  
¸ud_¨øy
[
c
];

128 
	}
}

134 
	$c›y
(*
buf
, 
size
, 
off£t
, c⁄° *
§c
)

136 
i
, 
Àn
;

137 
c
;

140 (
c
 = *
§c
) != 0) {

141 i‡(!
	`¸ud
(
c
))

143 
§c
++;

147 
Àn
 = 
	`°æí
(
§c
);

148 
Àn
 > 0) {

149 
c
 = 
§c
[
Àn
-1];

150 i‡(!
	`¸ud
(
c
))

152 --
Àn
;

160 
i
 = 0; i < 
Àn
; i++) {

161 
c
 = *
§c
++;

162 
c
) {

166 i‡(
off£t
 >
size
)

167  
size
;

168 
buf
[
off£t
++] = 
c
;

170  
off£t
;

171 
	}
}

173 c⁄° 
	gau_ív
[] = "GIT_AUTHOR_NAME";

174 c⁄° 
	gco_ív
[] = "GIT_COMMITTER_NAME";

175 c⁄° *
	gív_höt
 =

188 c⁄° *
	$fmt_idít
(c⁄° *
«me
, c⁄° *
emaû
,

189 c⁄° *
d©e_°r
, 
îr‹_⁄_no_«me
)

191 
buf„r
[1000];

192 
d©e
[50];

193 
i
;

195 
	`£tup_idít
();

196 i‡(!
«me
)

197 
«me
 = 
gô_deÁu…_«me
;

198 i‡(!
emaû
)

199 
emaû
 = 
gô_deÁu…_emaû
;

201 i‡(!*
«me
) {

202 
∑sswd
 *
pw
;

204 i‡(0 <
îr‹_⁄_no_«me
 &&

205 
«me
 =
gô_deÁu…_«me
 && 
ív_höt
) {

206 
	`Ârötf
(
°dîr
, 
ív_höt
, 
au_ív
, 
co_ív
);

207 
ív_höt
 = 
NULL
;

209 i‡(0 < 
îr‹_⁄_no_«me
)

210 
	`dõ
("em±y idíà%†<%s>ÇŸáŒowed", 
«me
, 
emaû
);

211 
pw
 = 
	`gëpwuid
(
	`gëuid
());

212 i‡(!
pw
)

213 
	`dõ
("You don'tÉxist. Goáway!");

214 
	`°æ˝y
(
gô_deÁu…_«me
, 
pw
->
pw_«me
,

215 (
gô_deÁu…_«me
));

216 
«me
 = 
gô_deÁu…_«me
;

219 
	`°r˝y
(
d©e
, 
gô_deÁu…_d©e
);

220 i‡(
d©e_°r
)

221 
	`∑r£_d©e
(
d©e_°r
, 
d©e
, (date));

223 
i
 = 
	`c›y
(
buf„r
, (buf„r), 0, 
«me
);

224 
i
 = 
	`add_øw
(
buf„r
, (buffer), i, " <");

225 
i
 = 
	`c›y
(
buf„r
, (buf„r), i, 
emaû
);

226 
i
 = 
	`add_øw
(
buf„r
, (buffer), i, "> ");

227 
i
 = 
	`c›y
(
buf„r
, (buf„r), i, 
d©e
);

228 i‡(
i
 >(
buf„r
))

229 
	`dõ
("ImpossiblyÜongÖersonal identifier");

230 
buf„r
[
i
] = 0;

231  
buf„r
;

232 
	}
}

234 c⁄° *
	$gô_auth‹_öfo
(
îr‹_⁄_no_«me
)

236  
	`fmt_idít
(
	`gëív
("GIT_AUTHOR_NAME"),

237 
	`gëív
("GIT_AUTHOR_EMAIL"),

238 
	`gëív
("GIT_AUTHOR_DATE"),

239 
îr‹_⁄_no_«me
);

240 
	}
}

242 c⁄° *
	$gô_commôãr_öfo
(
îr‹_⁄_no_«me
)

244  
	`fmt_idít
(
	`gëív
("GIT_COMMITTER_NAME"),

245 
	`gëív
("GIT_COMMITTER_EMAIL"),

246 
	`gëív
("GIT_COMMITTER_DATE"),

247 
îr‹_⁄_no_«me
);

248 
	}
}

	@imap-send.c

25 
	~"ˇche.h
"

27 
	s°‹e_c⁄f
 {

28 *
	m«me
;

29 c⁄° *
	m∑th
;

30 *
	mm≠_öbox
;

31 *
	måash
;

32 
	mmax_size
;

33 
	måash_ªmŸe_√w
:1, 
	måash_⁄ly_√w
:1;

34 } 
	t°‹e_c⁄f_t
;

36 
	s°rög_li°
 {

37 
°rög_li°
 *
	m√xt
;

38 
	m°rög
[1];

39 } 
	t°rög_li°_t
;

41 
	sch™√l_c⁄f
 {

42 
ch™√l_c⁄f
 *
	m√xt
;

43 *
	m«me
;

44 
°‹e_c⁄f_t
 *
	mma°î
, *
	m¶ave
;

45 *
	mma°î_«me
, *
	m¶ave_«me
;

46 *
	msync_°©e
;

47 
°rög_li°_t
 *
	m∑âîns
;

48 
	mm›s
, 
	ms›s
;

49 
	mmax_mesßges
;

50 } 
	tch™√l_c⁄f_t
;

52 
	sgroup_c⁄f
 {

53 
group_c⁄f
 *
	m√xt
;

54 *
	m«me
;

55 
°rög_li°_t
 *
	mch™√ls
;

56 } 
	tgroup_c⁄f_t
;

59 
	#M_RECENT
 (1<<0Ë

	)

60 
	#M_DEAD
 (1<<1Ë

	)

61 
	#M_FLAGS
 (1<<2Ë

	)

63 
	smesßge
 {

64 
mesßge
 *
	m√xt
;

66 
size_t
 
	msize
;

67 
	muid
;

68 
	mÊags
, 
	m°©us
;

69 } 
	tmesßge_t
;

71 
	s°‹e
 {

72 
°‹e_c⁄f_t
 *
	mc⁄f
;

75 c⁄° *
	m«me
;

76 *
	m∑th
;

77 
mesßge_t
 *
	mmsgs
;

78 
	muidvÆidôy
;

79 
	m›ts
;

81 
	mcou¡
;

82 
	mª˚¡
;

83 } 
	t°‹e_t
;

86 *
	md©a
;

87 
	mÀn
;

88 
	mÊags
;

89 
	m¸lf
:1;

90 } 
	tmsg_d©a_t
;

92 
	#DRV_OK
 0

	)

93 
	#DRV_MSG_BAD
 -1

	)

94 
	#DRV_BOX_BAD
 -2

	)

95 
	#DRV_STORE_BAD
 -3

	)

97 
	gVîbo£
, 
	gQuõt
;

99 
im≠_öfo
( const *, ... );

100 
im≠_w¨n
( const *, ... );

102 *
√xt_¨g
( ** );

104 
‰ì_gíîic_mesßges
–
mesßge_t
 * );

106 
nf¢¥ötf
–*
buf
, 
bÀn
, c⁄° *
fmt
, ... );

109 
¨c4_öô
( );

110 
¨c4_gëbyã
( );

112 
	sim≠_£rvî_c⁄f
 {

113 *
	m«me
;

114 *
	mtu¬ñ
;

115 *
	mho°
;

116 
	mp‹t
;

117 *
	mu£r
;

118 *
	m∑ss
;

119 } 
	tim≠_£rvî_c⁄f_t
;

121 
	sim≠_°‹e_c⁄f
 {

122 
°‹e_c⁄f_t
 
	mgí
;

123 
im≠_£rvî_c⁄f_t
 *
	m£rvî
;

124 
	mu£_«me•a˚
:1;

125 } 
	tim≠_°‹e_c⁄f_t
;

127 
	#NIL
 (*)0x1

	)

128 
	#LIST
 (*)0x2

	)

130 
	s_li°
 {

131 
_li°
 *
	m√xt
, *
	mchûd
;

132 *
	mvÆ
;

133 
	mÀn
;

134 } 
	tli°_t
;

137 
	mfd
;

138 } 
	tSockë_t
;

141 
Sockë_t
 
	msock
;

142 
	mbyãs
;

143 
	moff£t
;

144 
	mbuf
[1024];

145 } 
	tbuf„r_t
;

147 
	gim≠_cmd
;

149 
	sim≠
 {

150 
	muid√xt
;

151 
li°_t
 *
	mns_≥rs⁄Æ
, *
	mns_Ÿhî
, *
	mns_sh¨ed
;

152 
	mˇps
, 
	mrˇps
;

154 
	m√xâag
, 
	mnum_ö_¥ogªss
, 
	mlôîÆ_≥ndög
;

155 
im≠_cmd
 *
	mö_¥ogªss
, **
	mö_¥ogªss_≠≥nd
;

156 
buf„r_t
 
	mbuf
;

157 } 
	tim≠_t
;

159 
	sim≠_°‹e
 {

160 
°‹e_t
 
	mgí
;

161 
	muidvÆidôy
;

162 
im≠_t
 *
	mim≠
;

163 c⁄° *
	m¥efix
;

164 
	måashnc
:1;

165 } 
	tim≠_°‹e_t
;

167 
	sim≠_cmd_cb
 {

168 (*
	mc⁄t
)–
im≠_°‹e_t
 *
	m˘x
, 
im≠_cmd
 *
	mcmd
, c⁄° *
	m¥om±
 );

169 (*
	md⁄e
)–
im≠_°‹e_t
 *
	m˘x
, 
im≠_cmd
 *
	mcmd
, 
	mª•⁄£
);

170 *
	m˘x
;

171 *
	md©a
;

172 
	mdÀn
;

173 
	muid
;

174 
	m¸óã
:1, 
	måy¸óã
:1;

177 
	sim≠_cmd
 {

178 
im≠_cmd
 *
	m√xt
;

179 
im≠_cmd_cb
 
	mcb
;

180 *
	mcmd
;

181 
	mèg
;

184 
	#CAP
(
ˇp
Ë(
im≠
->
ˇps
 & (1 << (ˇp)))

	)

186 
	eCAPABILITY
 {

187 
	mNOLOGIN
 = 0,

188 
	mUIDPLUS
,

189 
	mLITERALPLUS
,

190 
	mNAMESPACE
,

193 c⁄° *
	gˇp_li°
[] = {

200 
	#RESP_OK
 0

	)

201 
	#RESP_NO
 1

	)

202 
	#RESP_BAD
 2

	)

204 
gë_cmd_ªsu…
–
im≠_°‹e_t
 *
˘x
, 
im≠_cmd
 *
tcmd
 );

207 c⁄° *
	gFœgs
[] = {

216 
	$sockë_≥º‹
–c⁄° *
func
, 
Sockë_t
 *
sock
, 
ªt
 )

218 i‡(
ªt
 < 0)

219 
	`≥º‹
–
func
 );

221 
	`Ârötf
–
°dîr
, "%s: u√x≥˘ed EOF\n", 
func
 );

222 
	}
}

225 
	$sockë_ªad
–
Sockë_t
 *
sock
, *
buf
, 
Àn
 )

227 
n
 = 
	`xªad
–
sock
->
fd
, 
buf
, 
Àn
 );

228 i‡(
n
 <= 0) {

229 
	`sockë_≥º‹
–"ªad", 
sock
, 
n
 );

230 
	`˛o£
–
sock
->
fd
 );

231 
sock
->
fd
 = -1;

233  
n
;

234 
	}
}

237 
	$sockë_wrôe
–
Sockë_t
 *
sock
, c⁄° *
buf
, 
Àn
 )

239 
n
 = 
	`wrôe_ö_fuŒ
–
sock
->
fd
, 
buf
, 
Àn
 );

240 i‡(
n
 !
Àn
) {

241 
	`sockë_≥º‹
–"wrôe", 
sock
, 
n
 );

242 
	`˛o£
–
sock
->
fd
 );

243 
sock
->
fd
 = -1;

245  
n
;

246 
	}
}

250 
	$buf„r_gës
–
buf„r_t
 * 
b
, **
s
 )

252 
n
;

253 
°¨t
 = 
b
->
off£t
;

255 *
s
 = 
b
->
buf
 + 
°¨t
;

259 i‡(
b
->
off£t
 + 1 >b->
byãs
) {

260 i‡(
°¨t
) {

262 *
s
 = 
b
->
buf
;

264 
	`as£π
–
°¨t
 <
b
->
byãs
 );

265 
n
 = 
b
->
byãs
 - 
°¨t
;

267 i‡(
n
)

268 
	`memmove
(
b
->
buf
, b->bu‡+ 
°¨t
, 
n
);

269 
b
->
off£t
 -
°¨t
;

270 
b
->
byãs
 = 
n
;

271 
°¨t
 = 0;

274 
n
 = 
	`sockë_ªad
–&
b
->
sock
, b->
buf
 + b->
byãs
,

275 (
b
->
buf
Ë- b->
byãs
 );

277 i‡(
n
 <= 0)

280 
b
->
byãs
 +
n
;

283 i‡(
b
->
buf
[b->
off£t
] == '\r') {

284 
	`as£π
–
b
->
off£t
 + 1 < b->
byãs
 );

285 i‡(
b
->
buf
[b->
off£t
 + 1] == '\n') {

286 
b
->
buf
[b->
off£t
] = 0;

287 
b
->
off£t
 += 2;

288 i‡(
Vîbo£
)

289 
	`puts
–*
s
 );

294 
b
->
off£t
++;

297 
	}
}

300 
	$im≠_öfo
–c⁄° *
msg
, ... )

302 
va_li°
 
va
;

304 i‡(!
Quõt
) {

305 
	`va_°¨t
–
va
, 
msg
 );

306 
	`v¥ötf
–
msg
, 
va
 );

307 
	`va_íd
–
va
 );

308 
	`fÊush
–
°dout
 );

310 
	}
}

313 
	$im≠_w¨n
–c⁄° *
msg
, ... )

315 
va_li°
 
va
;

317 i‡(
Quõt
 < 2) {

318 
	`va_°¨t
–
va
, 
msg
 );

319 
	`vÂrötf
–
°dîr
, 
msg
, 
va
 );

320 
	`va_íd
–
va
 );

322 
	}
}

325 
	$√xt_¨g
–**
s
 )

327 *
ªt
;

329 i‡(!
s
 || !*s)

330  
NULL
;

331 
	`is•a˚
–(Ë**
s
 ))

332 (*
s
)++;

333 i‡(!**
s
) {

334 *
s
 = 
NULL
;

335  
NULL
;

337 i‡(**
s
 == '"') {

338 ++*
s
;

339 
ªt
 = *
s
;

340 *
s
 = 
	`°rchr
( *s, '"' );

342 
ªt
 = *
s
;

343 **
s
 && !
	`is•a˚
( () **s ))

344 (*
s
)++;

346 i‡(*
s
) {

347 i‡(**
s
)

348 *(*
s
)++ = 0;

349 i‡(!**
s
)

350 *
s
 = 
NULL
;

352  
ªt
;

353 
	}
}

356 
	$‰ì_gíîic_mesßges
–
mesßge_t
 *
msgs
 )

358 
mesßge_t
 *
tmsg
;

360 ; 
msgs
; msg†
tmsg
) {

361 
tmsg
 = 
msgs
->
√xt
;

362 
	`‰ì
–
msgs
 );

364 
	}
}

367 
	$nf¢¥ötf
–*
buf
, 
bÀn
, c⁄° *
fmt
, ... )

369 
ªt
;

370 
va_li°
 
va
;

372 
	`va_°¨t
–
va
, 
fmt
 );

373 i‡(
bÀn
 <0 || ()(
ªt
 = 
	`v¢¥ötf
–
buf
, bÀn, 
fmt
, 
va
 )) >= ()blen)

374 
	`dõ
( "Fatal: bufferÅoo small. PleaseÑeportá bug.\n");

375 
	`va_íd
–
va
 );

376  
ªt
;

377 
	}
}

380 
	mi
, 
	mj
, 
	ms
[256];

381 } 
	grs
;

384 
	$¨c4_öô
( )

386 
i
, 
fd
;

387 
j
, 
si
, 
d©
[128];

389 i‡((
fd
 = 
	`›í
–"/dev/uøndom", 
O_RDONLY
 )) < 0 && (fd = open( "/dev/random", O_RDONLY )) < 0) {

390 
	`Ârötf
–
°dîr
, "Fatal:ÇoÑandomÇumber sourceávailable.\n" );

391 
	`exô
( 3 );

393 i‡(
	`ªad_ö_fuŒ
–
fd
, 
d©
, 128 ) != 128) {

394 
	`Ârötf
–
°dîr
, "Fatal: cannotÑeadÑandomÇumber source.\n" );

395 
	`exô
( 3 );

397 
	`˛o£
–
fd
 );

399 
i
 = 0; i < 256; i++)

400 
rs
.
s
[
i
] = i;

401 
i
 = 
j
 = 0; i < 256; i++) {

402 
si
 = 
rs
.
s
[
i
];

403 
j
 +
si
 + 
d©
[
i
 & 127];

404 
rs
.
s
[
i
] =Ñs.s[
j
];

405 
rs
.
s
[
j
] = 
si
;

407 
rs
.
i
 =Ñs.
j
 = 0;

409 
i
 = 0; i < 256; i++)

410 
	`¨c4_gëbyã
();

411 
	}
}

414 
	$¨c4_gëbyã
( )

416 
si
, 
sj
;

418 
rs
.
i
++;

419 
si
 = 
rs
.
s
[rs.
i
];

420 
rs
.
j
 +
si
;

421 
sj
 = 
rs
.
s
[rs.
j
];

422 
rs
.
s
[rs.
i
] = 
sj
;

423 
rs
.
s
[rs.
j
] = 
si
;

424  
rs
.
s
[(
si
 + 
sj
) & 0xff];

425 
	}
}

427 
im≠_cmd
 *

428 
	$v_issue_im≠_cmd
–
im≠_°‹e_t
 *
˘x
, 
im≠_cmd_cb
 *
cb
,

429 c⁄° *
fmt
, 
va_li°
 
≠
 )

431 
im≠_t
 *
im≠
 = 
˘x
->imap;

432 
im≠_cmd
 *
cmd
;

433 
n
, 
buÊ
;

434 
buf
[1024];

436 
cmd
 = 
	`xmÆloc
–(
im≠_cmd
) );

437 
	`nfva•rötf
–&
cmd
->cmd, 
fmt
, 
≠
 );

438 
cmd
->
èg
 = ++
im≠
->
√xâag
;

440 i‡(
cb
)

441 
cmd
->
cb
 = *cb;

443 
	`mem£t
–&
cmd
->
cb
, 0, (cmd->cb) );

445 
im≠
->
lôîÆ_≥ndög
)

446 
	`gë_cmd_ªsu…
–
˘x
, 
NULL
 );

448 
buÊ
 = 
	`nf¢¥ötf
–
buf
, (buf), 
cmd
->
cb
.
d©a
 ? 
	`CAP
(
LITERALPLUS
) ?

450 
cmd
->
èg
, cmd->cmd, cmd->
cb
.
dÀn
 );

451 i‡(
Vîbo£
) {

452 i‡(
im≠
->
num_ö_¥ogªss
)

453 
	`¥ötf
–"(%d i¿¥ogªssË", 
im≠
->
num_ö_¥ogªss
 );

454 i‡(
	`memcmp
–
cmd
->cmd, "LOGIN", 5 ))

455 
	`¥ötf
–">>> %s", 
buf
 );

457 
	`¥ötf
–">>> %d LOGIN <u£r> <∑ss>\n", 
cmd
->
èg
 );

459 i‡(
	`sockë_wrôe
–&
im≠
->
buf
.
sock
, buf, 
buÊ
 ) != bufl) {

460 
	`‰ì
–
cmd
->cmd );

461 
	`‰ì
–
cmd
 );

462 i‡(
cb
 && cb->
d©a
)

463 
	`‰ì
–
cb
->
d©a
 );

464  
NULL
;

466 i‡(
cmd
->
cb
.
d©a
) {

467 i‡(
	`CAP
(
LITERALPLUS
)) {

468 
n
 = 
	`sockë_wrôe
–&
im≠
->
buf
.
sock
, 
cmd
->
cb
.
d©a
, cmd->cb.
dÀn
 );

469 
	`‰ì
–
cmd
->
cb
.
d©a
 );

470 i‡(
n
 !
cmd
->
cb
.
dÀn
 ||

471 (
n
 = 
	`sockë_wrôe
–&
im≠
->
buf
.
sock
, "\r\n", 2 )) != 2)

473 
	`‰ì
–
cmd
->cmd );

474 
	`‰ì
–
cmd
 );

475  
NULL
;

477 
cmd
->
cb
.
d©a
 = 
NULL
;

479 
im≠
->
lôîÆ_≥ndög
 = 1;

480 } i‡(
cmd
->
cb
.
c⁄t
)

481 
im≠
->
lôîÆ_≥ndög
 = 1;

482 
cmd
->
√xt
 = 
NULL
;

483 *
im≠
->
ö_¥ogªss_≠≥nd
 = 
cmd
;

484 
im≠
->
ö_¥ogªss_≠≥nd
 = &
cmd
->
√xt
;

485 
im≠
->
num_ö_¥ogªss
++;

486  
cmd
;

487 
	}
}

489 
im≠_cmd
 *

490 
	$issue_im≠_cmd
–
im≠_°‹e_t
 *
˘x
, 
im≠_cmd_cb
 *
cb
, c⁄° *
fmt
, ... )

492 
im≠_cmd
 *
ªt
;

493 
va_li°
 
≠
;

495 
	`va_°¨t
–
≠
, 
fmt
 );

496 
ªt
 = 
	`v_issue_im≠_cmd
–
˘x
, 
cb
, 
fmt
, 
≠
 );

497 
	`va_íd
–
≠
 );

498  
ªt
;

499 
	}
}

502 
	$im≠_exec
–
im≠_°‹e_t
 *
˘x
, 
im≠_cmd_cb
 *
cb
, c⁄° *
fmt
, ... )

504 
va_li°
 
≠
;

505 
im≠_cmd
 *
cmdp
;

507 
	`va_°¨t
–
≠
, 
fmt
 );

508 
cmdp
 = 
	`v_issue_im≠_cmd
–
˘x
, 
cb
, 
fmt
, 
≠
 );

509 
	`va_íd
–
≠
 );

510 i‡(!
cmdp
)

511  
RESP_BAD
;

513  
	`gë_cmd_ªsu…
–
˘x
, 
cmdp
 );

514 
	}
}

517 
	$im≠_exec_m
–
im≠_°‹e_t
 *
˘x
, 
im≠_cmd_cb
 *
cb
, c⁄° *
fmt
, ... )

519 
va_li°
 
≠
;

520 
im≠_cmd
 *
cmdp
;

522 
	`va_°¨t
–
≠
, 
fmt
 );

523 
cmdp
 = 
	`v_issue_im≠_cmd
–
˘x
, 
cb
, 
fmt
, 
≠
 );

524 
	`va_íd
–
≠
 );

525 i‡(!
cmdp
)

526  
DRV_STORE_BAD
;

528 
	`gë_cmd_ªsu…
–
˘x
, 
cmdp
 )) {

529 
RESP_BAD
:  
DRV_STORE_BAD
;

530 
RESP_NO
:  
DRV_MSG_BAD
;

531 :  
DRV_OK
;

533 
	}
}

536 
	$is_©om
–
li°_t
 *
li°
 )

538  
li°
 &&Üi°->
vÆ
 &&Üi°->vÆ !
NIL
 &&Üi°->vÆ !
LIST
;

539 
	}
}

542 
	$is_li°
–
li°_t
 *
li°
 )

544  
li°
 &&Üi°->
vÆ
 =
LIST
;

545 
	}
}

548 
	$‰ì_li°
–
li°_t
 *
li°
 )

550 
li°_t
 *
tmp
;

552 ; 
li°
;Üi° = 
tmp
) {

553 
tmp
 = 
li°
->
√xt
;

554 i‡(
	`is_li°
–
li°
 ))

555 
	`‰ì_li°
–
li°
->
chûd
 );

556 i‡(
	`is_©om
–
li°
 ))

557 
	`‰ì
–
li°
->
vÆ
 );

558 
	`‰ì
–
li°
 );

560 
	}
}

563 
	$∑r£_im≠_li°_l
–
im≠_t
 *
im≠
, **
•
, 
li°_t
 **
cuΩ
, 
Àvñ
 )

565 
li°_t
 *
cur
;

566 *
s
 = *
•
, *
p
;

567 
n
, 
byãs
;

570 
	`is•a˚
–()*
s
 ))

571 
s
++;

572 i‡(
Àvñ
 && *
s
 == ')') {

573 
s
++;

576 *
cuΩ
 = 
cur
 = 
	`xmÆloc
( (*cur) );

577 
cuΩ
 = &
cur
->
√xt
;

578 
cur
->
vÆ
 = 
NULL
;

579 i‡(*
s
 == '(') {

581 
s
++;

582 
cur
->
vÆ
 = 
LIST
;

583 i‡(
	`∑r£_im≠_li°_l
–
im≠
, &
s
, &
cur
->
chûd
, 
Àvñ
 + 1 ))

584 
baû
;

585 } i‡(
im≠
 && *
s
 == '{') {

587 
byãs
 = 
cur
->
Àn
 = 
	`°πﬁ
–
s
 + 1, &s, 10 );

588 i‡(*
s
 != '}')

589 
baû
;

591 
s
 = 
cur
->
vÆ
 = 
	`xmÆloc
–cur->
Àn
 );

594 
n
 = 
im≠
->
buf
.
byãs
 - im≠->buf.
off£t
;

596 i‡(
n
 > 
byãs
)

598 
n
 = 
byãs
;

600 
	`mem˝y
–
s
, 
im≠
->
buf
.bu‡+ im≠->buf.
off£t
, 
n
 );

601 
s
 +
n
;

602 
byãs
 -
n
;

605 
im≠
->
buf
.
off£t
 +
n
;

608 
byãs
 > 0) {

609 i‡((
n
 = 
	`sockë_ªad
 (&
im≠
->
buf
.
sock
, 
s
, 
byãs
)) <= 0)

610 
baû
;

611 
s
 +
n
;

612 
byãs
 -
n
;

615 i‡(
	`buf„r_gës
–&
im≠
->
buf
, &
s
 ))

616 
baû
;

617 } i‡(*
s
 == '"') {

619 
s
++;

620 
p
 = 
s
;

621 ; *
s
 != '"'; s++)

622 i‡(!*
s
)

623 
baû
;

624 
cur
->
Àn
 = 
s
 - 
p
;

625 
s
++;

626 
cur
->
vÆ
 = 
	`xmÆloc
–cur->
Àn
 + 1 );

627 
	`mem˝y
–
cur
->
vÆ
, 
p
, cur->
Àn
 );

628 
cur
->
vÆ
[cur->
Àn
] = 0;

631 
p
 = 
s
;

632 ; *
s
 && !
	`is•a˚
( ()*s ); s++)

633 i‡(
Àvñ
 && *
s
 == ')')

635 
cur
->
Àn
 = 
s
 - 
p
;

636 i‡(
cur
->
Àn
 =3 && !
	`memcmp
 ("NIL", 
p
, 3))

637 
cur
->
vÆ
 = 
NIL
;

639 
cur
->
vÆ
 = 
	`xmÆloc
–cur->
Àn
 + 1 );

640 
	`mem˝y
–
cur
->
vÆ
, 
p
, cur->
Àn
 );

641 
cur
->
vÆ
[cur->
Àn
] = 0;

645 i‡(!
Àvñ
)

647 i‡(!*
s
)

648 
baû
;

650 *
•
 = 
s
;

651 *
cuΩ
 = 
NULL
;

654 
baû
:

655 *
cuΩ
 = 
NULL
;

657 
	}
}

659 
li°_t
 *

660 
	$∑r£_im≠_li°
–
im≠_t
 *
im≠
, **
•
 )

662 
li°_t
 *
hód
;

664 i‡(!
	`∑r£_im≠_li°_l
–
im≠
, 
•
, &
hód
, 0 ))

665  
hód
;

666 
	`‰ì_li°
–
hód
 );

667  
NULL
;

668 
	}
}

670 
li°_t
 *

671 
	$∑r£_li°
–**
•
 )

673  
	`∑r£_im≠_li°
–
NULL
, 
•
 );

674 
	}
}

677 
	$∑r£_ˇ∑bûôy
–
im≠_t
 *
im≠
, *
cmd
 )

679 *
¨g
;

680 
i
;

682 
im≠
->
ˇps
 = 0x80000000;

683 (
¨g
 = 
	`√xt_¨g
–&
cmd
 )))

684 
i
 = 0; i < 
	`ARRAY_SIZE
(
ˇp_li°
); i++)

685 i‡(!
	`°rcmp
–
ˇp_li°
[
i
], 
¨g
 ))

686 
im≠
->
ˇps
 |1 << 
i
;

687 
im≠
->
rˇps
 = im≠->
ˇps
;

688 
	}
}

691 
	$∑r£_ª•⁄£_code
–
im≠_°‹e_t
 *
˘x
, 
im≠_cmd_cb
 *
cb
, *
s
 )

693 
im≠_t
 *
im≠
 = 
˘x
->imap;

694 *
¨g
, *
p
;

696 i‡(*
s
 != '[')

697  
RESP_OK
;

698 
s
++;

699 i‡(!(
p
 = 
	`°rchr
–
s
, ']' ))) {

700 
	`Ârötf
–
°dîr
, "IMAPÉrror: malformedÑesponse code\n" );

701  
RESP_BAD
;

703 *
p
++ = 0;

704 
¨g
 = 
	`√xt_¨g
–&
s
 );

705 i‡(!
	`°rcmp
–"UIDVALIDITY", 
¨g
 )) {

706 i‡(!(
¨g
 = 
	`√xt_¨g
–&
s
 )Ë|| !(
˘x
->
gí
.
uidvÆidôy
 = 
	`©oi
(árg ))) {

707 
	`Ârötf
–
°dîr
, "IMAPÉrror: malformed UIDVALIDITY status\n" );

708  
RESP_BAD
;

710 } i‡(!
	`°rcmp
–"UIDNEXT", 
¨g
 )) {

711 i‡(!(
¨g
 = 
	`√xt_¨g
–&
s
 )Ë|| !(
im≠
->
uid√xt
 = 
	`©oi
(árg ))) {

712 
	`Ârötf
–
°dîr
, "IMAPÉrror: malformed NEXTUID status\n" );

713  
RESP_BAD
;

715 } i‡(!
	`°rcmp
–"CAPABILITY", 
¨g
 )) {

716 
	`∑r£_ˇ∑bûôy
–
im≠
, 
s
 );

717 } i‡(!
	`°rcmp
–"ALERT", 
¨g
 )) {

721 ; 
	`is•a˚
–()*
p
 );Ö++);

722 
	`Ârötf
–
°dîr
, "*** IMAP ALERT *** %s\n", 
p
 );

723 } i‡(
cb
 && cb->
˘x
 && !
	`°rcmp
–"APPENDUID", 
¨g
 )) {

724 i‡(!(
¨g
 = 
	`√xt_¨g
–&
s
 )Ë|| !(
˘x
->
gí
.
uidvÆidôy
 = 
	`©oi
(árg )) ||

725 !(
¨g
 = 
	`√xt_¨g
–&
s
 )Ë|| !(*(*)
cb
->
˘x
 = 
	`©oi
(árg )))

727 
	`Ârötf
–
°dîr
, "IMAPÉrror: malformed APPENDUID status\n" );

728  
RESP_BAD
;

731  
RESP_OK
;

732 
	}
}

735 
	$gë_cmd_ªsu…
–
im≠_°‹e_t
 *
˘x
, 
im≠_cmd
 *
tcmd
 )

737 
im≠_t
 *
im≠
 = 
˘x
->imap;

738 
im≠_cmd
 *
cmdp
, **
pcmdp
, *
ncmdp
;

739 *
cmd
, *
¨g
, *
¨g1
, *
p
;

740 
n
, 
ª•
, 
ª•2
, 
èg
;

743 i‡(
	`buf„r_gës
–&
im≠
->
buf
, &
cmd
 ))

744  
RESP_BAD
;

746 
¨g
 = 
	`√xt_¨g
–&
cmd
 );

747 i‡(*
¨g
 == '*') {

748 
¨g
 = 
	`√xt_¨g
–&
cmd
 );

749 i‡(!
¨g
) {

750 
	`Ârötf
–
°dîr
, "IMAPÉrror: unableÅoÖarse untaggedÑesponse\n" );

751  
RESP_BAD
;

754 i‡(!
	`°rcmp
–"NAMESPACE", 
¨g
 )) {

755 
im≠
->
ns_≥rs⁄Æ
 = 
	`∑r£_li°
–&
cmd
 );

756 
im≠
->
ns_Ÿhî
 = 
	`∑r£_li°
–&
cmd
 );

757 
im≠
->
ns_sh¨ed
 = 
	`∑r£_li°
–&
cmd
 );

758 } i‡(!
	`°rcmp
–"OK", 
¨g
 ) || !strcmp( "BAD",árg ) ||

759 !
	`°rcmp
–"NO", 
¨g
 ) || !strcmp( "BYE",árg )) {

760 i‡((
ª•
 = 
	`∑r£_ª•⁄£_code
–
˘x
, 
NULL
, 
cmd
 )Ë!
RESP_OK
)

761  
ª•
;

762 } i‡(!
	`°rcmp
–"CAPABILITY", 
¨g
 ))

763 
	`∑r£_ˇ∑bûôy
–
im≠
, 
cmd
 );

764 i‡((
¨g1
 = 
	`√xt_¨g
–&
cmd
 ))) {

765 i‡(!
	`°rcmp
–"EXISTS", 
¨g1
 ))

766 
˘x
->
gí
.
cou¡
 = 
	`©oi
–
¨g
 );

767 i‡(!
	`°rcmp
–"RECENT", 
¨g1
 ))

768 
˘x
->
gí
.
ª˚¡
 = 
	`©oi
–
¨g
 );

770 
	`Ârötf
–
°dîr
, "IMAPÉrror: unableÅoÖarse untaggedÑesponse\n" );

771  
RESP_BAD
;

773 } i‡(!
im≠
->
ö_¥ogªss
) {

774 
	`Ârötf
–
°dîr
, "IMAPÉº‹: u√x≥˘edÑïly: %†%s\n", 
¨g
, 
cmd
 ? cmd : "" );

775  
RESP_BAD
;

776 } i‡(*
¨g
 == '+') {

779 
cmdp
 = (
im≠_cmd
 *)((*)
im≠
->
ö_¥ogªss_≠≥nd
 -

780 
	`off£tof
(
im≠_cmd
, 
√xt
));

781 i‡(
cmdp
->
cb
.
d©a
) {

782 
n
 = 
	`sockë_wrôe
–&
im≠
->
buf
.
sock
, 
cmdp
->
cb
.
d©a
, cmdp->cb.
dÀn
 );

783 
	`‰ì
–
cmdp
->
cb
.
d©a
 );

784 
cmdp
->
cb
.
d©a
 = 
NULL
;

785 i‡(
n
 !()
cmdp
->
cb
.
dÀn
)

786  
RESP_BAD
;

787 } i‡(
cmdp
->
cb
.
c⁄t
) {

788 i‡(
cmdp
->
cb
.
	`c⁄t
–
˘x
, cmdp, 
cmd
 ))

789  
RESP_BAD
;

791 
	`Ârötf
–
°dîr
, "IMAPÉrror: unexpected command continuationÑequest\n" );

792  
RESP_BAD
;

794 i‡(
	`sockë_wrôe
–&
im≠
->
buf
.
sock
, "\r\n", 2 ) != 2)

795  
RESP_BAD
;

796 i‡(!
cmdp
->
cb
.
c⁄t
)

797 
im≠
->
lôîÆ_≥ndög
 = 0;

798 i‡(!
tcmd
)

799  
DRV_OK
;

801 
èg
 = 
	`©oi
–
¨g
 );

802 
pcmdp
 = &
im≠
->
ö_¥ogªss
; (
cmdp
 = *pcmdp);Öcmd∞&cmdp->
√xt
)

803 i‡(
cmdp
->
èg
 ==Åag)

804 
gŸèg
;

805 
	`Ârötf
–
°dîr
, "IMAPÉº‹: u√x≥˘edÅag %s\n", 
¨g
 );

806  
RESP_BAD
;

807 
gŸèg
:

808 i‡(!(*
pcmdp
 = 
cmdp
->
√xt
))

809 
im≠
->
ö_¥ogªss_≠≥nd
 = 
pcmdp
;

810 
im≠
->
num_ö_¥ogªss
--;

811 i‡(
cmdp
->
cb
.
c⁄t
 || cmdp->cb.
d©a
)

812 
im≠
->
lôîÆ_≥ndög
 = 0;

813 
¨g
 = 
	`√xt_¨g
–&
cmd
 );

814 i‡(!
	`°rcmp
–"OK", 
¨g
 ))

815 
ª•
 = 
DRV_OK
;

817 i‡(!
	`°rcmp
–"NO", 
¨g
 )) {

818 i‡(
cmdp
->
cb
.
¸óã
 && 
cmd
 && (cmdp->cb.
åy¸óã
 || !
	`memcmp
( cmd, "[TRYCREATE]", 11 ))) {

819 
p
 = 
	`°rchr
–
cmdp
->
cmd
, '"' );

820 i‡(!
	`issue_im≠_cmd
–
˘x
, 
NULL
, "CREATE \"%.*s\"", 
	`°rchr
–
p
 + 1, '"' ) -Ö + 1,Ö )) {

821 
ª•
 = 
RESP_BAD
;

822 
n‹mÆ
;

826 
cmdp
->
cb
.
¸óã
 = 0;

827 i‡(!(
ncmdp
 = 
	`issue_im≠_cmd
–
˘x
, &
cmdp
->
cb
, "%s", cmdp->
cmd
 ))) {

828 
ª•
 = 
RESP_BAD
;

829 
n‹mÆ
;

831 
	`‰ì
–
cmdp
->
cmd
 );

832 
	`‰ì
–
cmdp
 );

833 i‡(!
tcmd
)

835 i‡(
cmdp
 =
tcmd
)

836 
tcmd
 = 
ncmdp
;

839 
ª•
 = 
RESP_NO
;

841 
ª•
 = 
RESP_BAD
;

842 
	`Ârötf
–
°dîr
, "IMAP command '%s'ÑeturnedÑesponse (%s) - %s\n",

843 
	`memcmp
 (
cmdp
->
cmd
, "LOGIN", 5) ?

844 
cmdp
->
cmd
 : "LOGIN <user> <pass>",

845 
¨g
, 
cmd
 ? cmd : "");

847 i‡((
ª•2
 = 
	`∑r£_ª•⁄£_code
–
˘x
, &
cmdp
->
cb
, 
cmd
 )Ë> 
ª•
)

848 
ª•
 = 
ª•2
;

849 
n‹mÆ
:

850 i‡(
cmdp
->
cb
.
d⁄e
)

851 
cmdp
->
cb
.
	`d⁄e
–
˘x
, cmdp, 
ª•
 );

852 i‡(
cmdp
->
cb
.
d©a
)

853 
	`‰ì
–
cmdp
->
cb
.
d©a
 );

854 
	`‰ì
–
cmdp
->
cmd
 );

855 
	`‰ì
–
cmdp
 );

856 i‡(!
tcmd
 ||Åcmd =
cmdp
)

857  
ª•
;

861 
	}
}

864 
	$im≠_˛o£_£rvî
–
im≠_°‹e_t
 *
i˘x
 )

866 
im≠_t
 *
im≠
 = 
i˘x
->imap;

868 i‡(
im≠
->
buf
.
sock
.
fd
 != -1) {

869 
	`im≠_exec
–
i˘x
, 
NULL
, "LOGOUT" );

870 
	`˛o£
–
im≠
->
buf
.
sock
.
fd
 );

872 
	`‰ì_li°
–
im≠
->
ns_≥rs⁄Æ
 );

873 
	`‰ì_li°
–
im≠
->
ns_Ÿhî
 );

874 
	`‰ì_li°
–
im≠
->
ns_sh¨ed
 );

875 
	`‰ì
–
im≠
 );

876 
	}
}

879 
	$im≠_˛o£_°‹e
–
°‹e_t
 *
˘x
 )

881 
	`im≠_˛o£_£rvî
–(
im≠_°‹e_t
 *)
˘x
 );

882 
	`‰ì_gíîic_mesßges
–
˘x
->
msgs
 );

883 
	`‰ì
–
˘x
 );

884 
	}
}

886 
°‹e_t
 *

887 
	$im≠_›í_°‹e
–
im≠_£rvî_c⁄f_t
 *
§vc
 )

889 
im≠_°‹e_t
 *
˘x
;

890 
im≠_t
 *
im≠
;

891 *
¨g
, *
r•
;

892 
ho°ít
 *
he
;

893 
sockaddr_ö
 
addr
;

894 
s
, 
a
[2], 
¥óuth
;

895 
pid_t
 
pid
;

897 
˘x
 = 
	`xˇŒoc
( (*ctx), 1 );

899 
˘x
->
im≠
 = im≠ = 
	`xˇŒoc
( (*imap), 1 );

900 
im≠
->
buf
.
sock
.
fd
 = -1;

901 
im≠
->
ö_¥ogªss_≠≥nd
 = &im≠->
ö_¥ogªss
;

905 i‡(
§vc
->
tu¬ñ
) {

906 
	`im≠_öfo
–"SèπögÅu¬ñ '%s'... ", 
§vc
->
tu¬ñ
 );

908 i‡(
	`sockë∑ú
–
PF_UNIX
, 
SOCK_STREAM
, 0, 
a
 )) {

909 
	`≥º‹
( "socketpair" );

910 
	`exô
( 1 );

913 
pid
 = 
	`f‹k
();

914 i‡(
pid
 < 0)

915 
	`_exô
( 127 );

916 i‡(!
pid
) {

917 i‡(
	`dup2
–
a
[0], 0 ) == -1 || dup2(á[0], 1 ) == -1)

918 
	`_exô
( 127 );

919 
	`˛o£
–
a
[0] );

920 
	`˛o£
–
a
[1] );

921 
	`exe˛
–"/bö/sh", "sh", "-c", 
§vc
->
tu¬ñ
, 
NULL
 );

922 
	`_exô
( 127 );

925 
	`˛o£
 (
a
[0]);

927 
im≠
->
buf
.
sock
.
fd
 = 
a
[1];

929 
	`im≠_öfo
( "ok\n" );

931 
	`mem£t
–&
addr
, 0, (addr) );

932 
addr
.
sö_p‹t
 = 
	`ht⁄s
–
§vc
->
p‹t
 );

933 
addr
.
sö_Ámûy
 = 
AF_INET
;

935 
	`im≠_öfo
–"Resﬁvög %s... ", 
§vc
->
ho°
 );

936 
he
 = 
	`gëho°by«me
–
§vc
->
ho°
 );

937 i‡(!
he
) {

938 
	`≥º‹
( "gethostbyname" );

939 
baû
;

941 
	`im≠_öfo
( "ok\n" );

943 
addr
.
sö_addr
.
s_addr
 = *((*Ë
he
->
h_addr_li°
[0]);

945 
s
 = 
	`sockë
–
PF_INET
, 
SOCK_STREAM
, 0 );

947 
	`im≠_öfo
–"C⁄√˘ögÅÿ%s:%hu... ", 
	`öë_¡ﬂ
–
addr
.
sö_addr
 ), 
	`¡ohs
–addr.
sö_p‹t
 ) );

948 i‡(
	`c⁄√˘
–
s
, (
sockaddr
 *)&
addr
, (addr) )) {

949 
	`˛o£
–
s
 );

950 
	`≥º‹
( "connect" );

951 
baû
;

953 
	`im≠_öfo
( "ok\n" );

955 
im≠
->
buf
.
sock
.
fd
 = 
s
;

960 i‡(
	`buf„r_gës
–&
im≠
->
buf
, &
r•
 )) {

961 
	`Ârötf
–
°dîr
, "IMAPÉrror:Ço greetingÑesponse\n" );

962 
baû
;

964 
¨g
 = 
	`√xt_¨g
–&
r•
 );

965 i‡(!
¨g
 || *¨g !'*' || (¨g = 
	`√xt_¨g
–&
r•
 )Ë=
NULL
) {

966 
	`Ârötf
–
°dîr
, "IMAPÉrror: invalid greetingÑesponse\n" );

967 
baû
;

969 
¥óuth
 = 0;

970 i‡(!
	`°rcmp
–"PREAUTH", 
¨g
 ))

971 
¥óuth
 = 1;

972 i‡(
	`°rcmp
–"OK", 
¨g
 ) != 0) {

973 
	`Ârötf
–
°dîr
, "IMAPÉrror: unknown greetingÑesponse\n" );

974 
baû
;

976 
	`∑r£_ª•⁄£_code
–
˘x
, 
NULL
, 
r•
 );

977 i‡(!
im≠
->
ˇps
 && 
	`im≠_exec
–
˘x
, 
NULL
, "CAPABILITY" ) !
RESP_OK
)

978 
baû
;

980 i‡(!
¥óuth
) {

982 
	`im≠_öfo
 ("Logging in...\n");

983 i‡(!
§vc
->
u£r
) {

984 
	`Ârötf
–
°dîr
, "Skùpög sîvî %s,Çÿu£r\n", 
§vc
->
ho°
 );

985 
baû
;

987 i‡(!
§vc
->
∑ss
) {

988 
¥om±
[80];

989 
	`•rötf
–
¥om±
, "Passw‹d (%s@%s): ", 
§vc
->
u£r
, srvc->
ho°
 );

990 
¨g
 = 
	`gë∑ss
–
¥om±
 );

991 i‡(!
¨g
) {

992 
	`≥º‹
( "getpass" );

993 
	`exô
( 1 );

995 i‡(!*
¨g
) {

996 
	`Ârötf
–
°dîr
, "Skùpögáccou¡ %s@%s,Çÿ∑ssw‹d\n", 
§vc
->
u£r
, srvc->
ho°
 );

997 
baû
;

1003 
§vc
->
∑ss
 = 
	`x°rdup
–
¨g
 );

1005 i‡(
	`CAP
(
NOLOGIN
)) {

1006 
	`Ârötf
–
°dîr
, "Skùpögáccou¡ %s@%s, sîvî f‹bid†LOGIN\n", 
§vc
->
u£r
, srvc->
ho°
 );

1007 
baû
;

1009 
	`im≠_w¨n
( "*** IMAP Warning *** Password is being sent inÅhe clear\n" );

1010 i‡(
	`im≠_exec
–
˘x
, 
NULL
, "LOGIN \"%s\" \"%s\"", 
§vc
->
u£r
, srvc->
∑ss
 ) !
RESP_OK
) {

1011 
	`Ârötf
–
°dîr
, "IMAPÉrror: LOGIN failed\n" );

1012 
baû
;

1016 
˘x
->
¥efix
 = "";

1017 
˘x
->
åashnc
 = 1;

1018  (
°‹e_t
 *)
˘x
;

1020 
baû
:

1021 
	`im≠_˛o£_°‹e
–&
˘x
->
gí
 );

1022  
NULL
;

1023 
	}
}

1026 
	$im≠_make_Êags
–
Êags
, *
buf
 )

1028 c⁄° *
s
;

1029 
i
, 
d
;

1031 
i
 = 
d
 = 0; i < 
	`ARRAY_SIZE
(
Fœgs
); i++)

1032 i‡(
Êags
 & (1 << 
i
)) {

1033 
buf
[
d
++] = ' ';

1034 
buf
[
d
++] = '\\';

1035 
s
 = 
Fœgs
[
i
]; *s; s++)

1036 
buf
[
d
++] = *
s
;

1038 
buf
[0] = '(';

1039 
buf
[
d
++] = ')';

1040  
d
;

1041 
	}
}

1043 
	#TUIDL
 8

	)

1046 
	$im≠_°‹e_msg
–
°‹e_t
 *
g˘x
, 
msg_d©a_t
 *
d©a
, *
uid
 )

1048 
im≠_°‹e_t
 *
˘x
 = (im≠_°‹e_à*)
g˘x
;

1049 
im≠_t
 *
im≠
 = 
˘x
->imap;

1050 
im≠_cmd_cb
 
cb
;

1051 *
fm≠
, *
buf
;

1052 c⁄° *
¥efix
, *
box
;

1053 
ªt
, 
i
, 
j
, 
d
, 
Àn
, 
exåa
, 
no¸
;

1054 
°¨t
, 
sbªak
 = 0, 
ebªak
 = 0;

1055 
Êag°r
[128], 
tuid
[
TUIDL
 * 2 + 1];

1057 
	`mem£t
–&
cb
, 0, (cb) );

1059 
fm≠
 = 
d©a
->data;

1060 
Àn
 = 
d©a
->len;

1061 
no¸
 = !
d©a
->
¸lf
;

1062 
exåa
 = 0, 
i
 = 0;

1063 i‡(!
	`CAP
(
UIDPLUS
Ë&& 
uid
) {

1064 
∆o›
:

1065 
°¨t
 = 
i
;

1066 
i
 < 
Àn
)

1067 i‡(
fm≠
[
i
++] == '\n') {

1068 
exåa
 +
no¸
;

1069 i‡(
i
 - 2 + 
no¸
 =
°¨t
) {

1070 
sbªak
 = 
ebªak
 = 
i
 - 2 + 
no¸
;

1071 
mktid
;

1073 i‡(!
	`memcmp
–
fm≠
 + 
°¨t
, "X-TUID: ", 8 )) {

1074 
exåa
 -(
ebªak
 = 
i
Ë- (
sbªak
 = 
°¨t
Ë+ 
no¸
;

1075 
mktid
;

1077 
∆o›
;

1080 
	`‰ì
–
fm≠
 );

1081  
DRV_MSG_BAD
;

1082 
mktid
:

1083 
j
 = 0; j < 
TUIDL
; j++)

1084 
	`•rötf
–
tuid
 + 
j
 * 2, "%02x", 
	`¨c4_gëbyã
() );

1085 
exåa
 +8 + 
TUIDL
 * 2 + 2;

1087 i‡(
no¸
)

1088 ; 
i
 < 
Àn
; i++)

1089 i‡(
fm≠
[
i
] == '\n')

1090 
exåa
++;

1092 
cb
.
dÀn
 = 
Àn
 + 
exåa
;

1093 
buf
 = 
cb
.
d©a
 = 
	`xmÆloc
–cb.
dÀn
 );

1094 
i
 = 0;

1095 i‡(!
	`CAP
(
UIDPLUS
Ë&& 
uid
) {

1096 i‡(
no¸
) {

1097 ; 
i
 < 
sbªak
; i++)

1098 i‡(
fm≠
[
i
] == '\n') {

1099 *
buf
++ = '\r';

1100 *
buf
++ = '\n';

1102 *
buf
++ = 
fm≠
[
i
];

1104 
	`mem˝y
–
buf
, 
fm≠
, 
sbªak
 );

1105 
buf
 +
sbªak
;

1107 
	`mem˝y
–
buf
, "X-TUID: ", 8 );

1108 
buf
 += 8;

1109 
	`mem˝y
–
buf
, 
tuid
, 
TUIDL
 * 2 );

1110 
buf
 +
TUIDL
 * 2;

1111 *
buf
++ = '\r';

1112 *
buf
++ = '\n';

1113 
i
 = 
ebªak
;

1115 i‡(
no¸
) {

1116 ; 
i
 < 
Àn
; i++)

1117 i‡(
fm≠
[
i
] == '\n') {

1118 *
buf
++ = '\r';

1119 *
buf
++ = '\n';

1121 *
buf
++ = 
fm≠
[
i
];

1123 
	`mem˝y
–
buf
, 
fm≠
 + 
i
, 
Àn
 - i );

1125 
	`‰ì
–
fm≠
 );

1127 
d
 = 0;

1128 i‡(
d©a
->
Êags
) {

1129 
d
 = 
	`im≠_make_Êags
–
d©a
->
Êags
, 
Êag°r
 );

1130 
Êag°r
[
d
++] = ' ';

1132 
Êag°r
[
d
] = 0;

1134 i‡(!
uid
) {

1135 
box
 = 
g˘x
->
c⁄f
->
åash
;

1136 
¥efix
 = 
˘x
->prefix;

1137 
cb
.
¸óã
 = 1;

1138 i‡(
˘x
->
åashnc
)

1139 
im≠
->
ˇps
 = im≠->
rˇps
 & ~(1 << 
LITERALPLUS
);

1141 
box
 = 
g˘x
->
«me
;

1142 
¥efix
 = !
	`°rcmp
–
box
, "INBOX" ) ? "" : 
˘x
->prefix;

1143 
cb
.
¸óã
 = 0;

1145 
cb
.
˘x
 = 
uid
;

1146 
ªt
 = 
	`im≠_exec_m
–
˘x
, &
cb
, "APPEND \"%s%s\" %s", 
¥efix
, 
box
, 
Êag°r
 );

1147 
im≠
->
ˇps
 = im≠->
rˇps
;

1148 i‡(
ªt
 !
DRV_OK
)

1149  
ªt
;

1150 i‡(!
uid
)

1151 
˘x
->
åashnc
 = 0;

1153 
g˘x
->
cou¡
++;

1155  
DRV_OK
;

1156 
	}
}

1158 
	#CHUNKSIZE
 0x1000

	)

1161 
	$ªad_mesßge
–
FILE
 *
f
, 
msg_d©a_t
 *
msg
 )

1163 
Àn
, 
r
;

1165 
	`mem£t
–
msg
, 0,  *msg );

1166 
Àn
 = 
CHUNKSIZE
;

1167 
msg
->
d©a
 = 
	`xmÆloc
–
Àn
+1 );

1168 
msg
->
d©a
[0] = 0;

1170 !
	`„of
–
f
 )) {

1171 i‡(
msg
->
Àn
 >=Üen) {

1172 *
p
;

1173 
Àn
 +
CHUNKSIZE
;

1174 
p
 = 
	`xªÆloc
(
msg
->
d©a
, 
Àn
+1);

1175 i‡(!
p
)

1177 
msg
->
d©a
 = 
p
;

1179 
r
 = 
	`‰ód
–&
msg
->
d©a
[msg->
Àn
], 1,Üí - msg->Àn, 
f
 );

1180 i‡(
r
 <= 0)

1182 
msg
->
Àn
 +
r
;

1184 
msg
->
d©a
[msg->
Àn
] = 0;

1185  
msg
->
Àn
;

1186 
	}
}

1189 
	$cou¡_mesßges
–
msg_d©a_t
 *
msg
 )

1191 
cou¡
 = 0;

1192 *
p
 = 
msg
->
d©a
;

1195 i‡(!
	`°∫cmp
–"From ", 
p
, 5 )) {

1196 
cou¡
++;

1197 
p
 += 5;

1199 
p
 = 
	`°r°r
(Ö+5, "\nFrom ");

1200 i‡(!
p
)

1202 
p
++;

1204  
cou¡
;

1205 
	}
}

1208 
	$•lô_msg
–
msg_d©a_t
 *
Æl_msgs
, msg_d©a_à*
msg
, *
ofs
 )

1210 *
p
, *
d©a
;

1212 
	`mem£t
–
msg
, 0,  *msg );

1213 i‡(*
ofs
 >
Æl_msgs
->
Àn
)

1216 
d©a
 = &
Æl_msgs
->d©a[ *
ofs
 ];

1217 
msg
->
Àn
 = 
Æl_msgs
->À¿- *
ofs
;

1219 i‡(
msg
->
Àn
 < 5 || 
	`°∫cmp
–
d©a
, "From ", 5 ))

1222 
p
 = 
	`°rchr
–
d©a
, '\n' );

1223 i‡(
p
) {

1224 
p
 = &p[1];

1225 
msg
->
Àn
 -
p
-
d©a
;

1226 *
ofs
 +
p
-
d©a
;

1227 
d©a
 = 
p
;

1230 
p
 = 
	`°r°r
–
d©a
, "\nFrom " );

1231 i‡(
p
)

1232 
msg
->
Àn
 = &
p
[1] - 
d©a
;

1234 
msg
->
d©a
 = 
	`xmÆloc
–msg->
Àn
 + 1 );

1235 i‡(!
msg
->
d©a
)

1238 
	`mem˝y
–
msg
->
d©a
, d©a, msg->
Àn
 );

1239 
msg
->
d©a
[ msg->
Àn
 ] = 0;

1241 *
ofs
 +
msg
->
Àn
;

1243 
	}
}

1245 
im≠_£rvî_c⁄f_t
 
	g£rvî
 =

1247 
NULL
,

1248 
NULL
,

1249 
NULL
,

1251 
NULL
,

1252 
NULL
,

1255 *
	gim≠_fﬁdî
;

1258 
	$gô_im≠_c⁄fig
(c⁄° *
key
, c⁄° *
vÆ
)

1260 
im≠_key
[] = "imap.";

1262 i‡(
	`°∫cmp
–
key
, 
im≠_key
,  imap_key - 1 ))

1264 
key
 + 
im≠_key
 - 1;

1266 i‡(!
	`°rcmp
–"fﬁdî", 
key
 )) {

1267 
im≠_fﬁdî
 = 
	`x°rdup
–
vÆ
 );

1268 } i‡(!
	`°rcmp
–"ho°", 
key
 )) {

1270 i‡(!
	`°∫cmp
–"im≠:", 
vÆ
, 5 ))

1271 
vÆ
 += 5;

1272 i‡(!
£rvî
.
p‹t
)

1273 
£rvî
.
p‹t
 = 143;

1275 i‡(!
	`°∫cmp
–"//", 
vÆ
, 2 ))

1276 
vÆ
 += 2;

1277 
£rvî
.
ho°
 = 
	`x°rdup
–
vÆ
 );

1279 i‡(!
	`°rcmp
–"u£r", 
key
 ))

1280 
£rvî
.
u£r
 = 
	`x°rdup
–
vÆ
 );

1281 i‡(!
	`°rcmp
–"∑ss", 
key
 ))

1282 
£rvî
.
∑ss
 = 
	`x°rdup
–
vÆ
 );

1283 i‡(!
	`°rcmp
–"p‹t", 
key
 ))

1284 
£rvî
.
p‹t
 = 
	`gô_c⁄fig_öt
–
key
, 
vÆ
 );

1285 i‡(!
	`°rcmp
–"tu¬ñ", 
key
 ))

1286 
£rvî
.
tu¬ñ
 = 
	`x°rdup
–
vÆ
 );

1288 
	}
}

1291 
	$maö
(
¨gc
, **
¨gv
)

1293 
msg_d©a_t
 
Æl_msgs
, 
msg
;

1294 
°‹e_t
 *
˘x
 = 
NULL
;

1295 
uid
 = 0;

1296 
ofs
 = 0;

1297 
r
;

1298 
tŸÆ
, 
n
 = 0;

1301 
	`¨c4_öô
();

1303 
	`gô_c⁄fig
–
gô_im≠_c⁄fig
 );

1305 i‡(!
im≠_fﬁdî
) {

1306 
	`Ârötf
–
°dîr
, "no imap store specified\n" );

1311 i‡(!
	`ªad_mesßge
–
°dö
, &
Æl_msgs
 )) {

1312 
	`Ârötf
(
°dîr
,"nothingÅo send\n");

1316 
tŸÆ
 = 
	`cou¡_mesßges
–&
Æl_msgs
 );

1317 i‡(!
tŸÆ
) {

1318 
	`Ârötf
(
°dîr
,"no messagesÅo send\n");

1323 
˘x
 = 
	`im≠_›í_°‹e
–&
£rvî
 );

1324 i‡(!
˘x
) {

1325 
	`Ârötf
–
°dîr
,"failedÅo open store\n");

1329 
	`Ârötf
–
°dîr
, "£ndög %d mesßge%s\n", 
tŸÆ
, (total!=1)?"s":"" );

1330 
˘x
->
«me
 = 
im≠_fﬁdî
;

1332 
≥r˚¡
 = 
n
 * 100 / 
tŸÆ
;

1333 
	`Ârötf
–
°dîr
, "%4u%% (%d/%dËd⁄e\r", 
≥r˚¡
, 
n
, 
tŸÆ
 );

1334 i‡(!
	`•lô_msg
–&
Æl_msgs
, &
msg
, &
ofs
 ))

1336 
r
 = 
	`im≠_°‹e_msg
–
˘x
, &
msg
, &
uid
 );

1337 i‡(
r
 !
DRV_OK
) ;

1338 
n
++;

1340 
	`Ârötf
–
°dîr
,"\n" );

1342 
	`im≠_˛o£_°‹e
–
˘x
 );

1345 
	}
}

	@index-pack.c

1 
	~"ˇche.h
"

2 
	~"dñè.h
"

3 
	~"∑ck.h
"

4 
	~"csum-fûe.h
"

5 
	~"blob.h
"

6 
	~"commô.h
"

7 
	~"èg.h
"

8 
	~"åì.h
"

10 c⁄° 
	gödex_∑ck_ußge
[] =

13 
	sobje˘_íåy


15 
	moff£t
;

16 
	msize
;

17 
	mhdr_size
;

18 
obje˘_ty≥
 
	mty≥
;

19 
obje˘_ty≥
 
	mªÆ_ty≥
;

20 
	msha1
[20];

23 
	udñè_ba£
 {

24 
	msha1
[20];

25 
	moff£t
;

32 
	#UNION_BASE_SZ
 20

	)

34 
	sdñè_íåy


36 
dñè_ba£
 
	mba£
;

37 
	mobj_no
;

40 
obje˘_íåy
 *
	gobje˘s
;

41 
dñè_íåy
 *
	gdñès
;

42 
	gƒ_obje˘s
;

43 
	gƒ_dñès
;

44 
	gƒ_ªsﬁved_dñès
;

46 
	g‰om_°dö
;

47 
	gvîbo£
;

49 vﬁ©ûê
sig_©omic_t
 
	g¥ogªss_upd©e
;

51 
	$¥ogªss_öãrvÆ
(
signum
)

53 
¥ogªss_upd©e
 = 1;

54 
	}
}

56 
	$£tup_¥ogªss_sig«l
()

58 
siga˘i⁄
 
ß
;

59 
ôimîvÆ
 
v
;

61 
	`mem£t
(&
ß
, 0, (sa));

62 
ß
.
ß_h™dÀr
 = 
¥ogªss_öãrvÆ
;

63 
	`sigem±y£t
(&
ß
.
ß_mask
);

64 
ß
.
ß_Êags
 = 
SA_RESTART
;

65 
	`siga˘i⁄
(
SIGALRM
, &
ß
, 
NULL
);

67 
v
.
ô_öãrvÆ
.
tv_£c
 = 1;

68 
v
.
ô_öãrvÆ
.
tv_u£c
 = 0;

69 
v
.
ô_vÆue
 = v.
ô_öãrvÆ
;

70 
	`£tôimî
(
ITIMER_REAL
, &
v
, 
NULL
);

72 
	}
}

74 
	$di•œy_¥ogªss
(
n
, 
tŸÆ
, 
œ°_pc
)

76 
≥r˚¡
 = 
n
 * 100 / 
tŸÆ
;

77 i‡(
≥r˚¡
 !
œ°_pc
 || 
¥ogªss_upd©e
) {

78 
	`Ârötf
(
°dîr
, "%4u%% (%u/%uËd⁄e\r", 
≥r˚¡
, 
n
, 
tŸÆ
);

79 
¥ogªss_upd©e
 = 0;

81  
≥r˚¡
;

82 
	}
}

85 
	göput_buf„r
[4096];

86 
	göput_off£t
, 
	göput_Àn
, 
	gc⁄sumed_byãs
;

87 
SHA_CTX
 
	göput_˘x
;

88 
	göput_fd
, 
	gouçut_fd
, 
	g∑ck_fd
;

91 
	$Êush
()

93 i‡(
öput_off£t
) {

94 i‡(
ouçut_fd
 >= 0)

95 
	`wrôe_‹_dõ
(
ouçut_fd
, 
öput_buf„r
, 
öput_off£t
);

96 
	`SHA1_Upd©e
(&
öput_˘x
, 
öput_buf„r
, 
öput_off£t
);

97 
	`memmove
(
öput_buf„r
, i≈ut_buf„∏+ 
öput_off£t
, 
öput_Àn
);

98 
öput_off£t
 = 0;

100 
	}
}

106 *
	$fûl
(
mö
)

108 i‡(
mö
 <
öput_Àn
)

109  
öput_buf„r
 + 
öput_off£t
;

110 i‡(
mö
 > (
öput_buf„r
))

111 
	`dõ
("ˇ¬Ÿ fû»%d byãs", 
mö
);

112 
	`Êush
();

114 
ªt
 = 
	`xªad
(
öput_fd
, 
öput_buf„r
 + 
öput_Àn
,

115 (
öput_buf„r
Ë- 
öput_Àn
);

116 i‡(
ªt
 <= 0) {

117 i‡(!
ªt
)

118 
	`dõ
("early EOF");

119 
	`dõ
("ªadÉº‹ o¿öput: %s", 
	`°ªº‹
(
î∫o
));

121 
öput_Àn
 +
ªt
;

122 } 
öput_Àn
 < 
mö
);

123  
öput_buf„r
;

124 
	}
}

126 
	$u£
(
byãs
)

128 i‡(
byãs
 > 
öput_Àn
)

129 
	`dõ
("used more bytesÅhan wereávailable");

130 
öput_Àn
 -
byãs
;

131 
öput_off£t
 +
byãs
;

132 
c⁄sumed_byãs
 +
byãs
;

133 
	}
}

135 c⁄° *
	$›í_∑ck_fûe
(c⁄° *
∑ck_«me
)

137 i‡(
‰om_°dö
) {

138 
öput_fd
 = 0;

139 i‡(!
∑ck_«me
) {

140 
tmpfûe
[
PATH_MAX
];

141 
	`¢¥ötf
(
tmpfûe
, (tmpfile),

142 "%s/∑ck_XXXXXX", 
	`gë_obje˘_dúe˘‹y
());

143 
ouçut_fd
 = 
	`mk°emp
(
tmpfûe
);

144 
∑ck_«me
 = 
	`x°rdup
(
tmpfûe
);

146 
ouçut_fd
 = 
	`›í
(
∑ck_«me
, 
O_CREAT
|
O_EXCL
|
O_RDWR
, 0600);

147 i‡(
ouçut_fd
 < 0)

148 
	`dõ
("u«bÀÅÿ¸óã %s: %s\n", 
∑ck_«me
, 
	`°ªº‹
(
î∫o
));

149 
∑ck_fd
 = 
ouçut_fd
;

151 
öput_fd
 = 
	`›í
(
∑ck_«me
, 
O_RDONLY
);

152 i‡(
öput_fd
 < 0)

153 
	`dõ
("cannot openÖackfile '%s': %s",

154 
∑ck_«me
, 
	`°ªº‹
(
î∫o
));

155 
ouçut_fd
 = -1;

156 
∑ck_fd
 = 
öput_fd
;

158 
	`SHA1_Inô
(&
öput_˘x
);

159  
∑ck_«me
;

160 
	}
}

162 
	$∑r£_∑ck_hódî
()

164 
∑ck_hódî
 *
hdr
 = 
	`fûl
((pack_header));

167 i‡(
hdr
->
hdr_sig«tuª
 !
	`ht⁄l
(
PACK_SIGNATURE
))

168 
	`dõ
("pack signature mismatch");

169 i‡(!
	`∑ck_vîsi⁄_ok
(
hdr
->
hdr_vîsi⁄
))

170 
	`dõ
("∑ck vîsi⁄ %d unsuµ‹ãd", 
	`¡ohl
(
hdr
->
hdr_vîsi⁄
));

172 
ƒ_obje˘s
 = 
	`¡ohl
(
hdr
->
hdr_íåõs
);

173 
	`u£
((
∑ck_hódî
));

174 
	}
}

176 
	$bad_obje˘
(
off£t
, c⁄° *
f‹m©
,

177 ...Ë
NORETURN
 
	`__©åibuã__
((
	`f‹m©
 (
¥ötf
, 2, 3)));

179 
	$bad_obje˘
(
off£t
, c⁄° *
f‹m©
, ...)

181 
va_li°
 
∑øms
;

182 
buf
[1024];

184 
	`va_°¨t
(
∑øms
, 
f‹m©
);

185 
	`v¢¥ötf
(
buf
, (buf), 
f‹m©
, 
∑øms
);

186 
	`va_íd
(
∑øms
);

187 
	`dõ
("∑ck ha†bad obje˘áàoff£à%lu: %s", 
off£t
, 
buf
);

188 
	}
}

190 *
	$u≈ack_íåy_d©a
(
off£t
, 
size
)

192 
z_°ªam
 
°ªam
;

193 *
buf
 = 
	`xmÆloc
(
size
);

195 
	`mem£t
(&
°ªam
, 0, (stream));

196 
°ªam
.
√xt_out
 = 
buf
;

197 
°ªam
.
avaû_out
 = 
size
;

198 
°ªam
.
√xt_ö
 = 
	`fûl
(1);

199 
°ªam
.
avaû_ö
 = 
öput_Àn
;

200 
	`öÊ©eInô
(&
°ªam
);

203 
ªt
 = 
	`öÊ©e
(&
°ªam
, 0);

204 
	`u£
(
öput_Àn
 - 
°ªam
.
avaû_ö
);

205 i‡(
°ªam
.
tŸÆ_out
 =
size
 && 
ªt
 =
Z_STREAM_END
)

207 i‡(
ªt
 !
Z_OK
)

208 
	`bad_obje˘
(
off£t
, "öÊ©êªtu∫ed %d", 
ªt
);

209 
°ªam
.
√xt_ö
 = 
	`fûl
(1);

210 
°ªam
.
avaû_ö
 = 
öput_Àn
;

212 
	`öÊ©eEnd
(&
°ªam
);

213  
buf
;

214 
	}
}

216 *
	$u≈ack_øw_íåy
(
obje˘_íåy
 *
obj
, 
dñè_ba£
 *delta_base)

218 *
p
, 
c
;

219 
size
, 
ba£_off£t
;

220 
shi·
;

222 
obj
->
off£t
 = 
c⁄sumed_byãs
;

224 
p
 = 
	`fûl
(1);

225 
c
 = *
p
;

226 
	`u£
(1);

227 
obj
->
ty≥
 = (
c
 >> 4) & 7;

228 
size
 = (
c
 & 15);

229 
shi·
 = 4;

230 
c
 & 0x80) {

231 
p
 = 
	`fûl
(1);

232 
c
 = *
p
;

233 
	`u£
(1);

234 
size
 +(
c
 & 0x7fULË<< 
shi·
;

235 
shi·
 += 7;

237 
obj
->
size
 = size;

239 
obj
->
ty≥
) {

240 
OBJ_REF_DELTA
:

241 
	`hash˝y
(
dñè_ba£
->
sha1
, 
	`fûl
(20));

242 
	`u£
(20);

244 
OBJ_OFS_DELTA
:

245 
	`mem£t
(
dñè_ba£
, 0, (*delta_base));

246 
p
 = 
	`fûl
(1);

247 
c
 = *
p
;

248 
	`u£
(1);

249 
ba£_off£t
 = 
c
 & 127;

250 
c
 & 128) {

251 
ba£_off£t
 += 1;

252 i‡(!
ba£_off£t
 || base_offset & ~(~0UL >> 7))

253 
	`bad_obje˘
(
obj
->
off£t
, "offset value overflow for delta base object");

254 
p
 = 
	`fûl
(1);

255 
c
 = *
p
;

256 
	`u£
(1);

257 
ba£_off£t
 = (ba£_off£à<< 7Ë+ (
c
 & 127);

259 
dñè_ba£
->
off£t
 = 
obj
->off£à- 
ba£_off£t
;

260 i‡(
dñè_ba£
->
off£t
 >
obj
->offset)

261 
	`bad_obje˘
(
obj
->
off£t
, "delta base offset is out of bound");

263 
OBJ_COMMIT
:

264 
OBJ_TREE
:

265 
OBJ_BLOB
:

266 
OBJ_TAG
:

269 
	`bad_obje˘
(
obj
->
off£t
, "unknow¿obje˘Åy≥ %d", obj->
ty≥
);

271 
obj
->
hdr_size
 = 
c⁄sumed_byãs
 - obj->
off£t
;

273  
	`u≈ack_íåy_d©a
(
obj
->
off£t
, obj->
size
);

274 
	}
}

276 *
	$gë_d©a_‰om_∑ck
(
obje˘_íåy
 *
obj
)

278 
‰om
 = 
obj
[0].
off£t
 + obj[0].
hdr_size
;

279 
Àn
 = 
obj
[1].
off£t
 - 
‰om
;

280 *
§c
, *
d©a
;

281 
z_°ªam
 
°ªam
;

282 
°
;

284 
§c
 = 
	`xmÆloc
(
Àn
);

285 i‡(
	`¥ód
(
∑ck_fd
, 
§c
, 
Àn
, 
‰om
) !=Üen)

286 
	`dõ
("ˇ¬ŸÖªadÖack fûe: %s", 
	`°ªº‹
(
î∫o
));

287 
d©a
 = 
	`xmÆloc
(
obj
->
size
);

288 
	`mem£t
(&
°ªam
, 0, (stream));

289 
°ªam
.
√xt_out
 = 
d©a
;

290 
°ªam
.
avaû_out
 = 
obj
->
size
;

291 
°ªam
.
√xt_ö
 = 
§c
;

292 
°ªam
.
avaû_ö
 = 
Àn
;

293 
	`öÊ©eInô
(&
°ªam
);

294 (
°
 = 
	`öÊ©e
(&
°ªam
, 
Z_FINISH
)Ë=
Z_OK
);

295 
	`öÊ©eEnd
(&
°ªam
);

296 i‡(
°
 !
Z_STREAM_END
 || 
°ªam
.
tŸÆ_out
 !
obj
->
size
)

297 
	`dõ
("serious inflate inconsistency");

298 
	`‰ì
(
§c
);

299  
d©a
;

300 
	}
}

302 
	$föd_dñè
(c⁄° 
dñè_ba£
 *
ba£
)

304 
fú°
 = 0, 
œ°
 = 
ƒ_dñès
;

306 
fú°
 < 
œ°
) {

307 
√xt
 = (
fú°
 + 
œ°
) / 2;

308 
dñè_íåy
 *
dñè
 = &
dñès
[
√xt
];

309 
cmp
;

311 
cmp
 = 
	`memcmp
(
ba£
, &
dñè
->ba£, 
UNION_BASE_SZ
);

312 i‡(!
cmp
)

313  
√xt
;

314 i‡(
cmp
 < 0) {

315 
œ°
 = 
√xt
;

318 
fú°
 = 
√xt
+1;

320  -
fú°
-1;

321 
	}
}

323 
	$föd_dñè_chûdªn
(c⁄° 
dñè_ba£
 *
ba£
,

324 *
fú°_ödex
, *
œ°_ödex
)

326 
fú°
 = 
	`föd_dñè
(
ba£
);

327 
œ°
 = 
fú°
;

328 
íd
 = 
ƒ_dñès
 - 1;

330 i‡(
fú°
 < 0)

332 
fú°
 > 0 && !
	`memcmp
(&
dñès
[fú° - 1].
ba£
, ba£, 
UNION_BASE_SZ
))

333 --
fú°
;

334 
œ°
 < 
íd
 && !
	`memcmp
(&
dñès
[œ° + 1].
ba£
, ba£, 
UNION_BASE_SZ
))

335 ++
œ°
;

336 *
fú°_ödex
 = 
fú°
;

337 *
œ°_ödex
 = 
œ°
;

339 
	}
}

341 
	$sha1_obje˘
(c⁄° *
d©a
, 
size
,

342 
obje˘_ty≥
 
ty≥
, *
sha1
)

344 
SHA_CTX
 
˘x
;

345 
hódî
[50];

346 
hódî_size
;

347 c⁄° *
ty≥_°r
;

349 
ty≥
) {

350 
OBJ_COMMIT
: 
ty≥_°r
 = 
commô_ty≥
; ;

351 
OBJ_TREE
: 
ty≥_°r
 = 
åì_ty≥
; ;

352 
OBJ_BLOB
: 
ty≥_°r
 = 
blob_ty≥
; ;

353 
OBJ_TAG
: 
ty≥_°r
 = 
èg_ty≥
; ;

355 
	`dõ
("badÅy≥ %d", 
ty≥
);

358 
hódî_size
 = 
	`•rötf
(
hódî
, "%†%lu", 
ty≥_°r
, 
size
) + 1;

360 
	`SHA1_Inô
(&
˘x
);

361 
	`SHA1_Upd©e
(&
˘x
, 
hódî
, 
hódî_size
);

362 
	`SHA1_Upd©e
(&
˘x
, 
d©a
, 
size
);

363 
	`SHA1_FöÆ
(
sha1
, &
˘x
);

364 
	}
}

366 
	$ªsﬁve_dñè
(
obje˘_íåy
 *
dñè_obj
, *
ba£_d©a
,

367 
ba£_size
, 
obje˘_ty≥
 
ty≥
)

369 *
dñè_d©a
;

370 
dñè_size
;

371 *
ªsu…
;

372 
ªsu…_size
;

373 
dñè_ba£
 delta_base;

374 
j
, 
fú°
, 
œ°
;

376 
dñè_obj
->
ªÆ_ty≥
 = 
ty≥
;

377 
dñè_d©a
 = 
	`gë_d©a_‰om_∑ck
(
dñè_obj
);

378 
dñè_size
 = 
dñè_obj
->
size
;

379 
ªsu…
 = 
	`∑tch_dñè
(
ba£_d©a
, 
ba£_size
, 
dñè_d©a
, 
dñè_size
,

380 &
ªsu…_size
);

381 
	`‰ì
(
dñè_d©a
);

382 i‡(!
ªsu…
)

383 
	`bad_obje˘
(
dñè_obj
->
off£t
, "failedÅoápply delta");

384 
	`sha1_obje˘
(
ªsu…
, 
ªsu…_size
, 
ty≥
, 
dñè_obj
->
sha1
);

385 
ƒ_ªsﬁved_dñès
++;

387 
	`hash˝y
(
dñè_ba£
.
sha1
, 
dñè_obj
->sha1);

388 i‡(!
	`föd_dñè_chûdªn
(&
dñè_ba£
, &
fú°
, &
œ°
)) {

389 
j
 = 
fú°
; j <
œ°
; j++) {

390 
obje˘_íåy
 *
chûd
 = 
obje˘s
 + 
dñès
[
j
].
obj_no
;

391 i‡(
chûd
->
ªÆ_ty≥
 =
OBJ_REF_DELTA
)

392 
	`ªsﬁve_dñè
(
chûd
, 
ªsu…
, 
ªsu…_size
, 
ty≥
);

396 
	`mem£t
(&
dñè_ba£
, 0, (delta_base));

397 
dñè_ba£
.
off£t
 = 
dñè_obj
->offset;

398 i‡(!
	`föd_dñè_chûdªn
(&
dñè_ba£
, &
fú°
, &
œ°
)) {

399 
j
 = 
fú°
; j <
œ°
; j++) {

400 
obje˘_íåy
 *
chûd
 = 
obje˘s
 + 
dñès
[
j
].
obj_no
;

401 i‡(
chûd
->
ªÆ_ty≥
 =
OBJ_OFS_DELTA
)

402 
	`ªsﬁve_dñè
(
chûd
, 
ªsu…
, 
ªsu…_size
, 
ty≥
);

406 
	`‰ì
(
ªsu…
);

407 
	}
}

409 
	$com∑ª_dñè_íåy
(c⁄° *
a
, c⁄° *
b
)

411 c⁄° 
dñè_íåy
 *
dñè_a
 = 
a
;

412 c⁄° 
dñè_íåy
 *
dñè_b
 = 
b
;

413  
	`memcmp
(&
dñè_a
->
ba£
, &
dñè_b
->ba£, 
UNION_BASE_SZ
);

414 
	}
}

417 
	$∑r£_∑ck_obje˘s
(*
sha1
)

419 
i
, 
≥r˚¡
 = -1;

420 
dñè_íåy
 *
dñè
 = 
dñès
;

421 *
d©a
;

422 
°©
 
°
;

430 i‡(
vîbo£
)

431 
	`Ârötf
(
°dîr
, "Indexög %d obje˘s.\n", 
ƒ_obje˘s
);

432 
i
 = 0; i < 
ƒ_obje˘s
; i++) {

433 
obje˘_íåy
 *
obj
 = &
obje˘s
[
i
];

434 
d©a
 = 
	`u≈ack_øw_íåy
(
obj
, &
dñè
->
ba£
);

435 
obj
->
ªÆ_ty≥
 = obj->
ty≥
;

436 i‡(
obj
->
ty≥
 =
OBJ_REF_DELTA
 || obj->ty≥ =
OBJ_OFS_DELTA
) {

437 
ƒ_dñès
++;

438 
dñè
->
obj_no
 = 
i
;

439 
dñè
++;

441 
	`sha1_obje˘
(
d©a
, 
obj
->
size
, obj->
ty≥
, obj->
sha1
);

442 
	`‰ì
(
d©a
);

443 i‡(
vîbo£
)

444 
≥r˚¡
 = 
	`di•œy_¥ogªss
(
i
+1, 
ƒ_obje˘s
,Öercent);

446 
obje˘s
[
i
].
off£t
 = 
c⁄sumed_byãs
;

447 i‡(
vîbo£
)

448 
	`Âutc
('\n', 
°dîr
);

451 
	`Êush
();

452 
	`SHA1_FöÆ
(
sha1
, &
öput_˘x
);

453 i‡(
	`hashcmp
(
	`fûl
(20), 
sha1
))

454 
	`dõ
("pack is corrupted (SHA1 mismatch)");

455 
	`u£
(20);

458 i‡(
	`f°©
(
öput_fd
, &
°
))

459 
	`dõ
("ˇ¬Ÿ f°©Öackfûe: %s", 
	`°ªº‹
(
î∫o
));

460 i‡(
	`S_ISREG
(
°
.
°_mode
Ë&& st.
°_size
 !
c⁄sumed_byãs
)

461 
	`dõ
("pack has junkátÅheÉnd");

463 i‡(!
ƒ_dñès
)

467 
	`qs‹t
(
dñès
, 
ƒ_dñès
, (
dñè_íåy
),

468 
com∑ª_dñè_íåy
);

478 i‡(
vîbo£
)

479 
	`Ârötf
(
°dîr
, "Resﬁvög %d dñès.\n", 
ƒ_dñès
);

480 
i
 = 0; i < 
ƒ_obje˘s
; i++) {

481 
obje˘_íåy
 *
obj
 = &
obje˘s
[
i
];

482 
dñè_ba£
 
ba£
;

483 
j
, 
ªf
, 
ªf_fú°
, 
ªf_œ°
, 
ofs
, 
ofs_fú°
, 
ofs_œ°
;

485 i‡(
obj
->
ty≥
 =
OBJ_REF_DELTA
 || obj->ty≥ =
OBJ_OFS_DELTA
)

487 
	`hash˝y
(
ba£
.
sha1
, 
obj
->sha1);

488 
ªf
 = !
	`föd_dñè_chûdªn
(&
ba£
, &
ªf_fú°
, &
ªf_œ°
);

489 
	`mem£t
(&
ba£
, 0, (base));

490 
ba£
.
off£t
 = 
obj
->offset;

491 
ofs
 = !
	`föd_dñè_chûdªn
(&
ba£
, &
ofs_fú°
, &
ofs_œ°
);

492 i‡(!
ªf
 && !
ofs
)

494 
d©a
 = 
	`gë_d©a_‰om_∑ck
(
obj
);

495 i‡(
ªf
)

496 
j
 = 
ªf_fú°
; j <
ªf_œ°
; j++) {

497 
obje˘_íåy
 *
chûd
 = 
obje˘s
 + 
dñès
[
j
].
obj_no
;

498 i‡(
chûd
->
ªÆ_ty≥
 =
OBJ_REF_DELTA
)

499 
	`ªsﬁve_dñè
(
chûd
, 
d©a
,

500 
obj
->
size
, obj->
ty≥
);

502 i‡(
ofs
)

503 
j
 = 
ofs_fú°
; j <
ofs_œ°
; j++) {

504 
obje˘_íåy
 *
chûd
 = 
obje˘s
 + 
dñès
[
j
].
obj_no
;

505 i‡(
chûd
->
ªÆ_ty≥
 =
OBJ_OFS_DELTA
)

506 
	`ªsﬁve_dñè
(
chûd
, 
d©a
,

507 
obj
->
size
, obj->
ty≥
);

509 
	`‰ì
(
d©a
);

510 i‡(
vîbo£
)

511 
≥r˚¡
 = 
	`di•œy_¥ogªss
(
ƒ_ªsﬁved_dñès
,

512 
ƒ_dñès
, 
≥r˚¡
);

514 i‡(
vîbo£
 && 
ƒ_ªsﬁved_dñès
 =
ƒ_dñès
)

515 
	`Âutc
('\n', 
°dîr
);

516 
	}
}

518 
	$wrôe_com¥es£d
(
fd
, *
ö
, 
size
)

520 
z_°ªam
 
°ªam
;

521 
maxsize
;

522 *
out
;

524 
	`mem£t
(&
°ªam
, 0, (stream));

525 
	`deÊ©eInô
(&
°ªam
, 
zlib_com¥essi⁄_Àvñ
);

526 
maxsize
 = 
	`deÊ©eBound
(&
°ªam
, 
size
);

527 
out
 = 
	`xmÆloc
(
maxsize
);

530 
°ªam
.
√xt_ö
 = 
ö
;

531 
°ªam
.
avaû_ö
 = 
size
;

532 
°ªam
.
√xt_out
 = 
out
;

533 
°ªam
.
avaû_out
 = 
maxsize
;

534 
	`deÊ©e
(&
°ªam
, 
Z_FINISH
Ë=
Z_OK
);

535 
	`deÊ©eEnd
(&
°ªam
);

537 
size
 = 
°ªam
.
tŸÆ_out
;

538 
	`wrôe_‹_dõ
(
fd
, 
out
, 
size
);

539 
	`‰ì
(
out
);

540  
size
;

541 
	}
}

543 
	$≠≥nd_obj_to_∑ck
(*
buf
,

544 
size
, 
obje˘_ty≥
 
ty≥
)

546 
obje˘_íåy
 *
obj
 = &
obje˘s
[
ƒ_obje˘s
++];

547 
hódî
[10];

548 
s
 = 
size
;

549 
n
 = 0;

550 
c
 = (
ty≥
 << 4Ë| (
s
 & 15);

551 
s
 >>= 4;

552 
s
) {

553 
hódî
[
n
++] = 
c
 | 0x80;

554 
c
 = 
s
 & 0x7f;

555 
s
 >>= 7;

557 
hódî
[
n
++] = 
c
;

558 
	`wrôe_‹_dõ
(
ouçut_fd
, 
hódî
, 
n
);

559 
obj
[1].
off£t
 = obj[0].off£à+ 
n
;

560 
obj
[1].
off£t
 +
	`wrôe_com¥es£d
(
ouçut_fd
, 
buf
, 
size
);

561 
	`sha1_obje˘
(
buf
, 
size
, 
ty≥
, 
obj
->
sha1
);

562 
	}
}

564 
	$dñè_pos_com∑ª
(c⁄° *
_a
, c⁄° *
_b
)

566 
dñè_íåy
 *
a
 = *(dñè_íåy **)
_a
;

567 
dñè_íåy
 *
b
 = *(dñè_íåy **)
_b
;

568  
a
->
obj_no
 - 
b
->obj_no;

569 
	}
}

571 
	$fix_uƒesﬁved_dñès
(
ƒ_uƒesﬁved
)

573 
dñè_íåy
 **
s‹ãd_by_pos
;

574 
i
, 
n
 = 0, 
≥r˚¡
 = -1;

586 
s‹ãd_by_pos
 = 
	`xmÆloc
(
ƒ_uƒesﬁved
 * (*sorted_by_pos));

587 
i
 = 0; i < 
ƒ_dñès
; i++) {

588 i‡(
obje˘s
[
dñès
[
i
].
obj_no
].
ªÆ_ty≥
 !
OBJ_REF_DELTA
)

590 
s‹ãd_by_pos
[
n
++] = &
dñès
[
i
];

592 
	`qs‹t
(
s‹ãd_by_pos
, 
n
, (*s‹ãd_by_pos), 
dñè_pos_com∑ª
);

594 
i
 = 0; i < 
n
; i++) {

595 
dñè_íåy
 *
d
 = 
s‹ãd_by_pos
[
i
];

596 *
d©a
;

597 
size
;

598 
ty≥
[10];

599 
obje˘_ty≥
 
obj_ty≥
;

600 
j
, 
fú°
, 
œ°
;

602 i‡(
obje˘s
[
d
->
obj_no
].
ªÆ_ty≥
 !
OBJ_REF_DELTA
)

604 
d©a
 = 
	`ªad_sha1_fûe
(
d
->
ba£
.
sha1
, 
ty≥
, &
size
);

605 i‡(!
d©a
)

607 i‡(!
	`°rcmp
(
ty≥
, 
blob_ty≥
)Ë
obj_ty≥
 = 
OBJ_BLOB
;

608 i‡(!
	`°rcmp
(
ty≥
, 
åì_ty≥
)Ë
obj_ty≥
 = 
OBJ_TREE
;

609 i‡(!
	`°rcmp
(
ty≥
, 
commô_ty≥
)Ë
obj_ty≥
 = 
OBJ_COMMIT
;

610 i‡(!
	`°rcmp
(
ty≥
, 
èg_ty≥
)Ë
obj_ty≥
 = 
OBJ_TAG
;

611 
	`dõ
("base object %s is ofÅype '%s'",

612 
	`sha1_to_hex
(
d
->
ba£
.
sha1
), 
ty≥
);

614 
	`föd_dñè_chûdªn
(&
d
->
ba£
, &
fú°
, &
œ°
);

615 
j
 = 
fú°
; j <
œ°
; j++) {

616 
obje˘_íåy
 *
chûd
 = 
obje˘s
 + 
dñès
[
j
].
obj_no
;

617 i‡(
chûd
->
ªÆ_ty≥
 =
OBJ_REF_DELTA
)

618 
	`ªsﬁve_dñè
(
chûd
, 
d©a
, 
size
, 
obj_ty≥
);

621 
	`≠≥nd_obj_to_∑ck
(
d©a
, 
size
, 
obj_ty≥
);

622 
	`‰ì
(
d©a
);

623 i‡(
vîbo£
)

624 
≥r˚¡
 = 
	`di•œy_¥ogªss
(
ƒ_ªsﬁved_dñès
,

625 
ƒ_dñès
, 
≥r˚¡
);

627 
	`‰ì
(
s‹ãd_by_pos
);

628 i‡(
vîbo£
)

629 
	`Âutc
('\n', 
°dîr
);

630 
	}
}

632 
	$ªadju°_∑ck_hódî_™d_sha1
(*
sha1
)

634 
∑ck_hódî
 
hdr
;

635 
SHA_CTX
 
˘x
;

636 
size
;

639 i‡(
	`l£ek
(
ouçut_fd
, 0, 
SEEK_SET
) != 0)

640 
	`dõ
("ˇ¬Ÿ sìk back: %s", 
	`°ªº‹
(
î∫o
));

641 i‡(
	`ªad_ö_fuŒ
(
ouçut_fd
, &
hdr
, (hdr)) != (hdr))

642 
	`dõ
("ˇ¬ŸÑódÖack hódî back: %s", 
	`°ªº‹
(
î∫o
));

643 
hdr
.
hdr_íåõs
 = 
	`ht⁄l
(
ƒ_obje˘s
);

644 i‡(
	`l£ek
(
ouçut_fd
, 0, 
SEEK_SET
) != 0)

645 
	`dõ
("ˇ¬Ÿ sìk back: %s", 
	`°ªº‹
(
î∫o
));

646 
	`wrôe_‹_dõ
(
ouçut_fd
, &
hdr
, (hdr));

647 i‡(
	`l£ek
(
ouçut_fd
, 0, 
SEEK_SET
) != 0)

648 
	`dõ
("ˇ¬Ÿ sìk back: %s", 
	`°ªº‹
(
î∫o
));

651 
	`SHA1_Inô
(&
˘x
);

653 *
buf
[4096];

654 
size
 = 
	`xªad
(
ouçut_fd
, 
buf
, (buf));

655 i‡(
size
 < 0)

656 
	`dõ
("ˇ¬ŸÑódÖack d©®back: %s", 
	`°ªº‹
(
î∫o
));

657 
	`SHA1_Upd©e
(&
˘x
, 
buf
, 
size
);

658 } 
size
 > 0);

659 
	`SHA1_FöÆ
(
sha1
, &
˘x
);

660 
	`wrôe_‹_dõ
(
ouçut_fd
, 
sha1
, 20);

661 
	}
}

663 
	$sha1_com∑ª
(c⁄° *
_a
, c⁄° *
_b
)

665 
obje˘_íåy
 *
a
 = *(obje˘_íåy **)
_a
;

666 
obje˘_íåy
 *
b
 = *(obje˘_íåy **)
_b
;

667  
	`hashcmp
(
a
->
sha1
, 
b
->sha1);

668 
	}
}

674 c⁄° *
	$wrôe_ödex_fûe
(c⁄° *
ödex_«me
, *
sha1
)

676 
sha1fûe
 *
f
;

677 
obje˘_íåy
 **
s‹ãd_by_sha
, **
li°
, **
œ°
;

678 
¨øy
[256];

679 
i
, 
fd
;

680 
SHA_CTX
 
˘x
;

682 i‡(
ƒ_obje˘s
) {

683 
s‹ãd_by_sha
 =

684 
	`xˇŒoc
(
ƒ_obje˘s
, (
obje˘_íåy
 *));

685 
li°
 = 
s‹ãd_by_sha
;

686 
œ°
 = 
s‹ãd_by_sha
 + 
ƒ_obje˘s
;

687 
i
 = 0; i < 
ƒ_obje˘s
; ++i)

688 
s‹ãd_by_sha
[
i
] = &
obje˘s
[i];

689 
	`qs‹t
(
s‹ãd_by_sha
, 
ƒ_obje˘s
, (sorted_by_sha[0]),

690 
sha1_com∑ª
);

694 
s‹ãd_by_sha
 = 
li°
 = 
œ°
 = 
NULL
;

696 i‡(!
ödex_«me
) {

697 
tmpfûe
[
PATH_MAX
];

698 
	`¢¥ötf
(
tmpfûe
, (tmpfile),

699 "%s/ödex_XXXXXX", 
	`gë_obje˘_dúe˘‹y
());

700 
fd
 = 
	`mk°emp
(
tmpfûe
);

701 
ödex_«me
 = 
	`x°rdup
(
tmpfûe
);

703 
	`u∆ök
(
ödex_«me
);

704 
fd
 = 
	`›í
(
ödex_«me
, 
O_CREAT
|
O_EXCL
|
O_WRONLY
, 0600);

706 i‡(
fd
 < 0)

707 
	`dõ
("u«bÀÅÿ¸óã %s: %s", 
ödex_«me
, 
	`°ªº‹
(
î∫o
));

708 
f
 = 
	`sha1fd
(
fd
, 
ödex_«me
);

715 
i
 = 0; i < 256; i++) {

716 
obje˘_íåy
 **
√xt
 = 
li°
;

717 
√xt
 < 
œ°
) {

718 
obje˘_íåy
 *
obj
 = *
√xt
;

719 i‡(
obj
->
sha1
[0] !
i
)

721 
√xt
++;

723 
¨øy
[
i
] = 
	`ht⁄l
(
√xt
 - 
s‹ãd_by_sha
);

724 
li°
 = 
√xt
;

726 
	`sha1wrôe
(
f
, 
¨øy
, 256 * ());

732 
	`SHA1_Inô
(&
˘x
);

736 
li°
 = 
s‹ãd_by_sha
;

737 
i
 = 0; i < 
ƒ_obje˘s
; i++) {

738 
obje˘_íåy
 *
obj
 = *
li°
++;

739 
off£t
 = 
	`ht⁄l
(
obj
->offset);

740 
	`sha1wrôe
(
f
, &
off£t
, 4);

741 
	`sha1wrôe
(
f
, 
obj
->
sha1
, 20);

742 
	`SHA1_Upd©e
(&
˘x
, 
obj
->
sha1
, 20);

744 
	`sha1wrôe
(
f
, 
sha1
, 20);

745 
	`sha1˛o£
(
f
, 
NULL
, 1);

746 
	`‰ì
(
s‹ãd_by_sha
);

747 
	`SHA1_FöÆ
(
sha1
, &
˘x
);

748  
ödex_«me
;

749 
	}
}

751 
	$föÆ
(c⁄° *
föÆ_∑ck_«me
, c⁄° *
cuº_∑ck_«me
,

752 c⁄° *
föÆ_ödex_«me
, c⁄° *
cuº_ödex_«me
,

753 c⁄° *
kìp_«me
, c⁄° *
kìp_msg
,

754 *
sha1
)

756 *
ªp‹t
 = "pack";

757 
«me
[
PATH_MAX
];

758 
îr
;

760 i‡(!
‰om_°dö
) {

761 
	`˛o£
(
öput_fd
);

763 
îr
 = 
	`˛o£
(
ouçut_fd
);

764 i‡(
îr
)

765 
	`dõ
("îr‹ whûê˛osögÖack fûe: %s", 
	`°ªº‹
(
î∫o
));

766 
	`chmod
(
cuº_∑ck_«me
, 0444);

769 i‡(
kìp_msg
) {

770 
kìp_fd
, 
kìp_msg_Àn
 = 
	`°æí
(
kìp_msg
);

771 i‡(!
kìp_«me
) {

772 
	`¢¥ötf
(
«me
, (name), "%s/pack/pack-%s.keep",

773 
	`gë_obje˘_dúe˘‹y
(), 
	`sha1_to_hex
(
sha1
));

774 
kìp_«me
 = 
«me
;

776 
kìp_fd
 = 
	`›í
(
kìp_«me
, 
O_RDWR
|
O_CREAT
|
O_EXCL
, 0600);

777 i‡(
kìp_fd
 < 0) {

778 i‡(
î∫o
 !
EEXIST
)

779 
	`dõ
("cannot write keep file");

781 i‡(
kìp_msg_Àn
 > 0) {

782 
	`wrôe_‹_dõ
(
kìp_fd
, 
kìp_msg
, 
kìp_msg_Àn
);

783 
	`wrôe_‹_dõ
(
kìp_fd
, "\n", 1);

785 
	`˛o£
(
kìp_fd
);

786 
ªp‹t
 = "keep";

790 i‡(
föÆ_∑ck_«me
 !
cuº_∑ck_«me
) {

791 i‡(!
föÆ_∑ck_«me
) {

792 
	`¢¥ötf
(
«me
, (name), "%s/pack/pack-%s.pack",

793 
	`gë_obje˘_dúe˘‹y
(), 
	`sha1_to_hex
(
sha1
));

794 
föÆ_∑ck_«me
 = 
«me
;

796 i‡(
	`move_ãmp_to_fûe
(
cuº_∑ck_«me
, 
föÆ_∑ck_«me
))

797 
	`dõ
("cannot storeÖack file");

800 
	`chmod
(
cuº_ödex_«me
, 0444);

801 i‡(
föÆ_ödex_«me
 !
cuº_ödex_«me
) {

802 i‡(!
föÆ_ödex_«me
) {

803 
	`¢¥ötf
(
«me
, (name), "%s/pack/pack-%s.idx",

804 
	`gë_obje˘_dúe˘‹y
(), 
	`sha1_to_hex
(
sha1
));

805 
föÆ_ödex_«me
 = 
«me
;

807 i‡(
	`move_ãmp_to_fûe
(
cuº_ödex_«me
, 
föÆ_ödex_«me
))

808 
	`dõ
("cannot store index file");

811 i‡(!
‰om_°dö
) {

812 
	`¥ötf
("%s\n", 
	`sha1_to_hex
(
sha1
));

814 
buf
[48];

815 
Àn
 = 
	`¢¥ötf
(
buf
, (buf), "%s\t%s\n",

816 
ªp‹t
, 
	`sha1_to_hex
(
sha1
));

817 
	`wrôe_‹_dõ
(1, 
buf
, 
Àn
);

823 
öput_Àn
) {

824 
îr
 = 
	`xwrôe
(1, 
öput_buf„r
 + 
öput_off£t
, 
öput_Àn
);

825 i‡(
îr
 <= 0)

827 
öput_Àn
 -
îr
;

828 
öput_off£t
 +
îr
;

831 
	}
}

833 
	$maö
(
¨gc
, **
¨gv
)

835 
i
, 
fix_thö_∑ck
 = 0;

836 c⁄° *
cuº_∑ck
, *
∑ck_«me
 = 
NULL
;

837 c⁄° *
cuº_ödex
, *
ödex_«me
 = 
NULL
;

838 c⁄° *
kìp_«me
 = 
NULL
, *
kìp_msg
 = NULL;

839 *
ödex_«me_buf
 = 
NULL
, *
kìp_«me_buf
 = NULL;

840 
sha1
[20];

842 
i
 = 1; i < 
¨gc
; i++) {

843 c⁄° *
¨g
 = 
¨gv
[
i
];

845 i‡(*
¨g
 == '-') {

846 i‡(!
	`°rcmp
(
¨g
, "--stdin")) {

847 
‰om_°dö
 = 1;

848 } i‡(!
	`°rcmp
(
¨g
, "--fix-thin")) {

849 
fix_thö_∑ck
 = 1;

850 } i‡(!
	`°rcmp
(
¨g
, "--keep")) {

851 
kìp_msg
 = "";

852 } i‡(!
	`°∫cmp
(
¨g
, "--keep=", 7)) {

853 
kìp_msg
 = 
¨g
 + 7;

854 } i‡(!
	`°∫cmp
(
¨g
, "--pack_header=", 14)) {

855 
∑ck_hódî
 *
hdr
;

856 *
c
;

858 
hdr
 = (
∑ck_hódî
 *)
öput_buf„r
;

859 
hdr
->
hdr_sig«tuª
 = 
	`ht⁄l
(
PACK_SIGNATURE
);

860 
hdr
->
hdr_vîsi⁄
 = 
	`ht⁄l
(
	`°πoul
(
¨g
 + 14, &
c
, 10));

861 i‡(*
c
 != ',')

862 
	`dõ
("bad %s", 
¨g
);

863 
hdr
->
hdr_íåõs
 = 
	`ht⁄l
(
	`°πoul
(
c
 + 1, &c, 10));

864 i‡(*
c
)

865 
	`dõ
("bad %s", 
¨g
);

866 
öput_Àn
 = (*
hdr
);

867 } i‡(!
	`°rcmp
(
¨g
, "-v")) {

868 
vîbo£
 = 1;

869 } i‡(!
	`°rcmp
(
¨g
, "-o")) {

870 i‡(
ödex_«me
 || (
i
+1Ë>
¨gc
)

871 
	`ußge
(
ödex_∑ck_ußge
);

872 
ödex_«me
 = 
¨gv
[++
i
];

874 
	`ußge
(
ödex_∑ck_ußge
);

878 i‡(
∑ck_«me
)

879 
	`ußge
(
ödex_∑ck_ußge
);

880 
∑ck_«me
 = 
¨g
;

883 i‡(!
∑ck_«me
 && !
‰om_°dö
)

884 
	`ußge
(
ödex_∑ck_ußge
);

885 i‡(
fix_thö_∑ck
 && !
‰om_°dö
)

886 
	`dõ
("--fix-thin cannot be used without --stdin");

887 i‡(!
ödex_«me
 && 
∑ck_«me
) {

888 
Àn
 = 
	`°æí
(
∑ck_«me
);

889 i‡(!
	`has_exãnsi⁄
(
∑ck_«me
, ".pack"))

890 
	`dõ
("packfileÇame '%s' doesÇotÉnd with '.pack'",

891 
∑ck_«me
);

892 
ödex_«me_buf
 = 
	`xmÆloc
(
Àn
);

893 
	`mem˝y
(
ödex_«me_buf
, 
∑ck_«me
, 
Àn
 - 5);

894 
	`°r˝y
(
ödex_«me_buf
 + 
Àn
 - 5, ".idx");

895 
ödex_«me
 = 
ödex_«me_buf
;

897 i‡(
kìp_msg
 && !
kìp_«me
 && 
∑ck_«me
) {

898 
Àn
 = 
	`°æí
(
∑ck_«me
);

899 i‡(!
	`has_exãnsi⁄
(
∑ck_«me
, ".pack"))

900 
	`dõ
("packfileÇame '%s' doesÇotÉnd with '.pack'",

901 
∑ck_«me
);

902 
kìp_«me_buf
 = 
	`xmÆloc
(
Àn
);

903 
	`mem˝y
(
kìp_«me_buf
, 
∑ck_«me
, 
Àn
 - 5);

904 
	`°r˝y
(
kìp_«me_buf
 + 
Àn
 - 5, ".keep");

905 
kìp_«me
 = 
kìp_«me_buf
;

908 
cuº_∑ck
 = 
	`›í_∑ck_fûe
(
∑ck_«me
);

909 
	`∑r£_∑ck_hódî
();

910 
obje˘s
 = 
	`xmÆloc
((
ƒ_obje˘s
 + 1Ë* (
obje˘_íåy
));

911 
dñès
 = 
	`xmÆloc
(
ƒ_obje˘s
 * (
dñè_íåy
));

912 i‡(
vîbo£
)

913 
	`£tup_¥ogªss_sig«l
();

914 
	`∑r£_∑ck_obje˘s
(
sha1
);

915 i‡(
ƒ_dñès
 !
ƒ_ªsﬁved_dñès
) {

916 i‡(
fix_thö_∑ck
) {

917 
ƒ_uƒesﬁved
 = 
ƒ_dñès
 - 
ƒ_ªsﬁved_dñès
;

918 
ƒ_obje˘s_öôül
 = 
ƒ_obje˘s
;

919 i‡(
ƒ_uƒesﬁved
 <= 0)

920 
	`dõ
("confusion beyond insanity");

921 
obje˘s
 = 
	`xªÆloc
(objects,

922 (
ƒ_obje˘s
 + 
ƒ_uƒesﬁved
 + 1)

923 * (*
obje˘s
));

924 
	`fix_uƒesﬁved_dñès
(
ƒ_uƒesﬁved
);

925 i‡(
vîbo£
)

926 
	`Ârötf
(
°dîr
, "%d objects wereáddedÅo completeÅhisÅhinÖack.\n",

927 
ƒ_obje˘s
 - 
ƒ_obje˘s_öôül
);

928 
	`ªadju°_∑ck_hódî_™d_sha1
(
sha1
);

930 i‡(
ƒ_dñès
 !
ƒ_ªsﬁved_dñès
)

931 
	`dõ
("pack has %d unresolved deltas",

932 
ƒ_dñès
 - 
ƒ_ªsﬁved_dñès
);

935 
	`Êush
();

937 
	`‰ì
(
dñès
);

938 
cuº_ödex
 = 
	`wrôe_ödex_fûe
(
ödex_«me
, 
sha1
);

939 
	`föÆ
(
∑ck_«me
, 
cuº_∑ck
,

940 
ödex_«me
, 
cuº_ödex
,

941 
kìp_«me
, 
kìp_msg
,

942 
sha1
);

943 
	`‰ì
(
obje˘s
);

944 
	`‰ì
(
ödex_«me_buf
);

945 
	`‰ì
(
kìp_«me_buf
);

948 
	}
}

	@interpolate.c

5 
	~"gô-com∑t-utû.h
"

6 
	~"öãΩﬁ©e.h
"

9 
	$öãΩ_£t_íåy
(
öãΩ
 *
èbÀ
, 
¶Ÿ
, c⁄° *
vÆue
)

11 *
ﬁdvÆ
 = 
èbÀ
[
¶Ÿ
].
vÆue
;

12 *
√wvÆ
 = 
NULL
;

14 i‡(
ﬁdvÆ
)

15 
	`‰ì
(
ﬁdvÆ
);

17 i‡(
vÆue
)

18 
√wvÆ
 = 
	`x°rdup
(
vÆue
);

20 
èbÀ
[
¶Ÿ
].
vÆue
 = 
√wvÆ
;

21 
	}
}

24 
	$öãΩ_˛ór_èbÀ
(
öãΩ
 *
èbÀ
, 
nöãΩs
)

26 
i
;

28 
i
 = 0; i < 
nöãΩs
; i++) {

29 
	`öãΩ_£t_íåy
(
èbÀ
, 
i
, 
NULL
);

31 
	}
}

51 
	$öãΩﬁ©e
(*
ªsu…
, 
ª¶í
,

52 c⁄° *
‹ig
,

53 c⁄° 
öãΩ
 *
öãΩs
, 
nöãΩs
)

55 c⁄° *
§c
 = 
‹ig
;

56 *
de°
 = 
ªsu…
;

57 
√wÀn
 = 0;

58 *
«me
, *
vÆue
;

59 
«mñí
, 
vÆuñí
;

60 
i
;

61 
c
;

63 
	`mem£t
(
ªsu…
, 0, 
ª¶í
);

65 (
c
 = *
§c
Ë&& 
√wÀn
 < 
ª¶í
 - 1) {

66 i‡(
c
 == '%') {

68 
i
 = 0; i < 
nöãΩs
; i++) {

69 
«me
 = 
öãΩs
[
i
].name;

70 
«mñí
 = 
	`°æí
(
«me
);

71 i‡(
	`°∫cmp
(
§c
, 
«me
, 
«mñí
) == 0) {

77 i‡(
i
 < 
nöãΩs
) {

78 
vÆue
 = 
öãΩs
[
i
].value;

79 
vÆuñí
 = 
	`°æí
(
vÆue
);

81 i‡(
√wÀn
 + 
vÆuñí
 < 
ª¶í
 - 1) {

83 
	`°∫˝y
(
de°
, 
vÆue
, 
vÆuñí
);

84 
√wÀn
 +
vÆuñí
;

85 
de°
 +
vÆuñí
;

86 
§c
 +
«mñí
;

94 *
de°
++ = *
§c
++;

95 
√wÀn
++;

100 *
de°
++ = *
§c
++;

101 
√wÀn
++;

105  
√wÀn
 < 
ª¶í
 - 1;

106 
	}
}

	@interpolate.h

5 #i‚de‡
INTERPOLATE_H


6 
	#INTERPOLATE_H


	)

14 
	söãΩ
 {

15 *
	m«me
;

16 *
	mvÆue
;

19 
öãΩ_£t_íåy
(
öãΩ
 *
èbÀ
, 
¶Ÿ
, c⁄° *
vÆue
);

20 
öãΩ_˛ór_èbÀ
(
öãΩ
 *
èbÀ
, 
nöãΩs
);

22 
öãΩﬁ©e
(*
ªsu…
, 
ª¶í
,

23 c⁄° *
‹ig
,

24 c⁄° 
öãΩ
 *
öãΩs
, 
nöãΩs
);

	@list-objects.c

1 
	~"ˇche.h
"

2 
	~"èg.h
"

3 
	~"commô.h
"

4 
	~"åì.h
"

5 
	~"blob.h
"

6 
	~"diff.h
"

7 
	~"åì-wÆk.h
"

8 
	~"ªvisi⁄.h
"

9 
	~"li°-obje˘s.h
"

11 
	$¥o˚ss_blob
(
ªv_öfo
 *
ªvs
,

12 
blob
 *blob,

13 
obje˘_¨øy
 *
p
,

14 
«me_∑th
 *
∑th
,

15 c⁄° *
«me
)

17 
obje˘
 *
obj
 = &
blob
->object;

19 i‡(!
ªvs
->
blob_obje˘s
)

21 i‡(
obj
->
Êags
 & (
UNINTERESTING
 | 
SEEN
))

23 
obj
->
Êags
 |
SEEN
;

24 
«me
 = 
	`x°rdup
(name);

25 
	`add_obje˘
(
obj
, 
p
, 
∑th
, 
«me
);

26 
	}
}

28 
	$¥o˚ss_åì
(
ªv_öfo
 *
ªvs
,

29 
åì
 *tree,

30 
obje˘_¨øy
 *
p
,

31 
«me_∑th
 *
∑th
,

32 c⁄° *
«me
)

34 
obje˘
 *
obj
 = &
åì
->object;

35 
åì_desc
 
desc
;

36 
«me_íåy
 
íåy
;

37 
«me_∑th
 
me
;

39 i‡(!
ªvs
->
åì_obje˘s
)

41 i‡(
obj
->
Êags
 & (
UNINTERESTING
 | 
SEEN
))

43 i‡(
	`∑r£_åì
(
åì
) < 0)

44 
	`dõ
("badÅªêobje˘ %s", 
	`sha1_to_hex
(
obj
->
sha1
));

45 
obj
->
Êags
 |
SEEN
;

46 
«me
 = 
	`x°rdup
(name);

47 
	`add_obje˘
(
obj
, 
p
, 
∑th
, 
«me
);

48 
me
.
up
 = 
∑th
;

49 
me
.
ñem
 = 
«me
;

50 
me
.
ñem_Àn
 = 
	`°æí
(
«me
);

52 
desc
.
buf
 = 
åì
->
buf„r
;

53 
desc
.
size
 = 
åì
->size;

55 
	`åì_íåy
(&
desc
, &
íåy
)) {

56 i‡(
	`S_ISDIR
(
íåy
.
mode
))

57 
	`¥o˚ss_åì
(
ªvs
,

58 
	`lookup_åì
(
íåy
.
sha1
),

59 
p
, &
me
, 
íåy
.
∑th
);

61 
	`¥o˚ss_blob
(
ªvs
,

62 
	`lookup_blob
(
íåy
.
sha1
),

63 
p
, &
me
, 
íåy
.
∑th
);

65 
	`‰ì
(
åì
->
buf„r
);

66 
åì
->
buf„r
 = 
NULL
;

67 
	}
}

69 
	$m¨k_edge_∑ª¡s_unöãª°ög
(
commô
 *commit,

70 
ªv_öfo
 *
ªvs
,

71 
show_edge_‚
 
show_edge
)

73 
commô_li°
 *
∑ª¡s
;

75 
∑ª¡s
 = 
commô
->∑ª¡s;Ö¨íts;Ö¨ít†∑ª¡s->
√xt
) {

76 
commô
 *
∑ª¡
 = 
∑ª¡s
->
ôem
;

77 i‡(!(
∑ª¡
->
obje˘
.
Êags
 & 
UNINTERESTING
))

79 
	`m¨k_åì_unöãª°ög
(
∑ª¡
->
åì
);

80 i‡(
ªvs
->
edge_höt
 && !(
∑ª¡
->
obje˘
.
Êags
 & 
SHOWN
)) {

81 
∑ª¡
->
obje˘
.
Êags
 |
SHOWN
;

82 
	`show_edge
(
∑ª¡
);

85 
	}
}

87 
	$m¨k_edges_unöãª°ög
(
commô_li°
 *
li°
,

88 
ªv_öfo
 *
ªvs
,

89 
show_edge_‚
 
show_edge
)

91  ; 
li°
;Üi° =Üi°->
√xt
) {

92 
commô
 *commô = 
li°
->
ôem
;

94 i‡(
commô
->
obje˘
.
Êags
 & 
UNINTERESTING
) {

95 
	`m¨k_åì_unöãª°ög
(
commô
->
åì
);

98 
	`m¨k_edge_∑ª¡s_unöãª°ög
(
commô
, 
ªvs
, 
show_edge
);

100 
	}
}

102 
	$åavî£_commô_li°
(
ªv_öfo
 *
ªvs
,

103 (*
show_commô
)(
commô
 *),

104 (*
show_obje˘
)(
obje˘_¨øy_íåy
 *))

106 
i
;

107 
commô
 *commit;

108 
obje˘_¨øy
 
obje˘s
 = { 0, 0, 
NULL
 };

110 (
commô
 = 
	`gë_ªvisi⁄
(
ªvs
)Ë!
NULL
) {

111 
	`¥o˚ss_åì
(
ªvs
, 
commô
->
åì
, &
obje˘s
, 
NULL
, "");

112 
	`show_commô
(
commô
);

114 
i
 = 0; i < 
ªvs
->
≥ndög
.
ƒ
; i++) {

115 
obje˘_¨øy_íåy
 *
≥ndög
 = 
ªvs
->≥ndög.
obje˘s
 + 
i
;

116 
obje˘
 *
obj
 = 
≥ndög
->
ôem
;

117 c⁄° *
«me
 = 
≥ndög
->name;

118 i‡(
obj
->
Êags
 & (
UNINTERESTING
 | 
SEEN
))

120 i‡(
obj
->
ty≥
 =
OBJ_TAG
) {

121 
obj
->
Êags
 |
SEEN
;

122 
	`add_obje˘_¨øy
(
obj
, 
«me
, &
obje˘s
);

125 i‡(
obj
->
ty≥
 =
OBJ_TREE
) {

126 
	`¥o˚ss_åì
(
ªvs
, (
åì
 *)
obj
, &
obje˘s
,

127 
NULL
, 
«me
);

130 i‡(
obj
->
ty≥
 =
OBJ_BLOB
) {

131 
	`¥o˚ss_blob
(
ªvs
, (
blob
 *)
obj
, &
obje˘s
,

132 
NULL
, 
«me
);

135 
	`dõ
("unknownÖending object %s (%s)",

136 
	`sha1_to_hex
(
obj
->
sha1
), 
«me
);

138 
i
 = 0; i < 
obje˘s
.
ƒ
; i++)

139 
	`show_obje˘
(&
obje˘s
.obje˘s[
i
]);

140 
	}
}

	@list-objects.h

1 #i‚de‡
LIST_OBJECTS_H


2 
	#LIST_OBJECTS_H


	)

4 (*
	tshow_commô_‚
)(
	tcommô
 *);

5 (*
	tshow_obje˘_‚
)(
	tobje˘_¨øy_íåy
 *);

6 (*
	tshow_edge_‚
)(
	tcommô
 *);

8 
	`åavî£_commô_li°
(
ªv_öfo
 *
ªvs
, 
show_commô_‚
, 
show_obje˘_‚
);

10 
	`m¨k_edges_unöãª°ög
(
commô_li°
 *, 
ªv_öfo
 *, 
show_edge_‚
);

	@local-fetch.c

4 
	~"ˇche.h
"

5 
	~"commô.h
"

6 
	~"„tch.h
"

8 
	gu£_lök
;

9 
	gu£_symlök
;

10 
	gu£_fûec›y
 = 1;

11 
	gcommôs_⁄_°dö
;

13 c⁄° *
	g∑th
;

15 
	$¥e„tch
(*
sha1
)

17 
	}
}

19 
∑cked_gô
 *
	g∑cks
;

21 
	$£tup_ödex
(*
sha1
)

23 
∑cked_gô
 *
√w_∑ck
;

24 
fûíame
[
PATH_MAX
];

25 
	`°r˝y
(
fûíame
, 
∑th
);

26 
	`°rˇt
(
fûíame
, "/objects/pack/pack-");

27 
	`°rˇt
(
fûíame
, 
	`sha1_to_hex
(
sha1
));

28 
	`°rˇt
(
fûíame
, ".idx");

29 
√w_∑ck
 = 
	`∑r£_∑ck_ödex_fûe
(
sha1
, 
fûíame
);

30 
√w_∑ck
->
√xt
 = 
∑cks
;

31 
∑cks
 = 
√w_∑ck
;

32 
	}
}

34 
	$£tup_ödi˚s
()

36 
DIR
 *
dú
;

37 
dúít
 *
de
;

38 
fûíame
[
PATH_MAX
];

39 
sha1
[20];

40 
	`•rötf
(
fûíame
, "%s/obje˘s/∑ck/", 
∑th
);

41 
dú
 = 
	`›ídú
(
fûíame
);

42 i‡(!
dú
)

44 (
de
 = 
	`ªaddú
(
dú
)Ë!
NULL
) {

45 
«mñí
 = 
	`°æí
(
de
->
d_«me
);

46 i‡(
«mñí
 != 50 ||

47 !
	`has_exãnsi⁄
(
de
->
d_«me
, ".pack"))

49 
	`gë_sha1_hex
(
de
->
d_«me
 + 5, 
sha1
);

50 
	`£tup_ödex
(
sha1
);

52 
	`˛o£dú
(
dú
);

54 
	}
}

56 
	$c›y_fûe
(c⁄° *
sour˚
, *
de°
, c⁄° *
hex
,

57 
w¨n_if_nŸ_exi°s
)

59 
	`ß„_¸óã_Àadög_dúe˘‹õs
(
de°
);

60 i‡(
u£_lök
) {

61 i‡(!
	`lök
(
sour˚
, 
de°
)) {

62 
	`puŒ_ßy
("lök %s\n", 
hex
);

66 i‡(
î∫o
 =
ENOENT
) {

67 i‡(
w¨n_if_nŸ_exi°s
)

68 
	`Ârötf
(
°dîr
, "d€†nŸÉxi° %s\n", 
sour˚
);

72 i‡(
u£_symlök
) {

73 
°©
 
°
;

74 i‡(
	`°©
(
sour˚
, &
°
)) {

75 i‡(!
w¨n_if_nŸ_exi°s
 && 
î∫o
 =
ENOENT
)

77 
	`Ârötf
(
°dîr
, "ˇ¬Ÿ sèà%s: %s\n", 
sour˚
,

78 
	`°ªº‹
(
î∫o
));

81 i‡(!
	`symlök
(
sour˚
, 
de°
)) {

82 
	`puŒ_ßy
("symlök %s\n", 
hex
);

86 i‡(
u£_fûec›y
) {

87 
ifd
, 
ofd
, 
°©us
 = 0;

89 
ifd
 = 
	`›í
(
sour˚
, 
O_RDONLY
);

90 i‡(
ifd
 < 0) {

91 i‡(!
w¨n_if_nŸ_exi°s
 && 
î∫o
 =
ENOENT
)

93 
	`Ârötf
(
°dîr
, "ˇ¬Ÿ o≥¿%s\n", 
sour˚
);

96 
ofd
 = 
	`›í
(
de°
, 
O_WRONLY
 | 
O_CREAT
 | 
O_EXCL
, 0666);

97 i‡(
ofd
 < 0) {

98 
	`Ârötf
(
°dîr
, "ˇ¬Ÿ o≥¿%s\n", 
de°
);

99 
	`˛o£
(
ifd
);

102 
°©us
 = 
	`c›y_fd
(
ifd
, 
ofd
);

103 
	`˛o£
(
ofd
);

104 i‡(
°©us
)

105 
	`Ârötf
(
°dîr
, "ˇ¬Ÿ wrôê%s\n", 
de°
);

107 
	`puŒ_ßy
("c›y %s\n", 
hex
);

108  
°©us
;

110 
	`Ârötf
(
°dîr
, "ÁûedÅÿc›y %†wôh giví c›y mëhods.\n", 
hex
);

112 
	}
}

114 
	$„tch_∑ck
(c⁄° *
sha1
)

116 
∑cked_gô
 *
èrgë
;

117 
fûíame
[
PATH_MAX
];

118 i‡(
	`£tup_ödi˚s
())

120 
èrgë
 = 
	`föd_sha1_∑ck
(
sha1
, 
∑cks
);

121 i‡(!
èrgë
)

122  
	`îr‹
("Couldn't find %s:Çot separate or inányÖack",

123 
	`sha1_to_hex
(
sha1
));

124 i‡(
gë_vîbo£ly
) {

125 
	`Ârötf
(
°dîr
, "GettingÖack %s\n",

126 
	`sha1_to_hex
(
èrgë
->
sha1
));

127 
	`Ârötf
(
°dîr
, " which contains %s\n",

128 
	`sha1_to_hex
(
sha1
));

130 
	`•rötf
(
fûíame
, "%s/objects/pack/pack-%s.pack",

131 
∑th
, 
	`sha1_to_hex
(
èrgë
->
sha1
));

132 
	`c›y_fûe
(
fûíame
, 
	`sha1_∑ck_«me
(
èrgë
->
sha1
),

133 
	`sha1_to_hex
(
èrgë
->
sha1
), 1);

134 
	`•rötf
(
fûíame
, "%s/objects/pack/pack-%s.idx",

135 
∑th
, 
	`sha1_to_hex
(
èrgë
->
sha1
));

136 
	`c›y_fûe
(
fûíame
, 
	`sha1_∑ck_ödex_«me
(
èrgë
->
sha1
),

137 
	`sha1_to_hex
(
èrgë
->
sha1
), 1);

138 
	`ö°Æl_∑cked_gô
(
èrgë
);

140 
	}
}

142 
	$„tch_fûe
(c⁄° *
sha1
)

144 
obje˘_«me_°¨t
 = -1;

145 
fûíame
[
PATH_MAX
];

146 *
hex
 = 
	`sha1_to_hex
(
sha1
);

147 *
de°_fûíame
 = 
	`sha1_fûe_«me
(
sha1
);

149 i‡(
obje˘_«me_°¨t
 < 0) {

150 
	`°r˝y
(
fûíame
, 
∑th
);

151 
	`°rˇt
(
fûíame
, "/objects/");

152 
obje˘_«me_°¨t
 = 
	`°æí
(
fûíame
);

154 
fûíame
[
obje˘_«me_°¨t
+0] = 
hex
[0];

155 
fûíame
[
obje˘_«me_°¨t
+1] = 
hex
[1];

156 
fûíame
[
obje˘_«me_°¨t
+2] = '/';

157 
	`°r˝y
(
fûíame
 + 
obje˘_«me_°¨t
 + 3, 
hex
 + 2);

158  
	`c›y_fûe
(
fûíame
, 
de°_fûíame
, 
hex
, 0);

159 
	}
}

161 
	$„tch
(*
sha1
)

163 i‡(
	`has_sha1_fûe
(
sha1
))

166  
	`„tch_fûe
(
sha1
Ë&& 
	`„tch_∑ck
(sha1);

167 
	}
}

169 
	$„tch_ªf
(*
ªf
, *
sha1
)

171 
ªf_«me_°¨t
 = -1;

172 
fûíame
[
PATH_MAX
];

173 
hex
[41];

174 
ifd
;

176 i‡(
ªf_«me_°¨t
 < 0) {

177 
	`•rötf
(
fûíame
, "%s/ªfs/", 
∑th
);

178 
ªf_«me_°¨t
 = 
	`°æí
(
fûíame
);

180 
	`°r˝y
(
fûíame
 + 
ªf_«me_°¨t
, 
ªf
);

181 
ifd
 = 
	`›í
(
fûíame
, 
O_RDONLY
);

182 i‡(
ifd
 < 0) {

183 
	`˛o£
(
ifd
);

184 
	`Ârötf
(
°dîr
, "ˇ¬Ÿ o≥¿%s\n", 
fûíame
);

187 i‡(
	`ªad_ö_fuŒ
(
ifd
, 
hex
, 40Ë!40 || 
	`gë_sha1_hex
(hex, 
sha1
)) {

188 
	`˛o£
(
ifd
);

189 
	`Ârötf
(
°dîr
, "ˇ¬ŸÑód from %s\n", 
fûíame
);

192 
	`˛o£
(
ifd
);

193 
	`puŒ_ßy
("ª‡%s\n", 
	`sha1_to_hex
(
sha1
));

195 
	}
}

197 c⁄° 
	gloˇl_puŒ_ußge
[] =

206 
	$maö
(
¨gc
, c⁄° **
¨gv
)

208 
commôs
;

209 c⁄° **
wrôe_ªf
 = 
NULL
;

210 **
commô_id
;

211 
¨g
 = 1;

213 
	`£tup_gô_dúe˘‹y
();

214 
	`gô_c⁄fig
(
gô_deÁu…_c⁄fig
);

216 
¨g
 < 
¨gc
 && 
¨gv
[arg][0] == '-') {

217 i‡(
¨gv
[
¨g
][1] == 't')

218 
gë_åì
 = 1;

219 i‡(
¨gv
[
¨g
][1] == 'c')

220 
gë_hi°‹y
 = 1;

221 i‡(
¨gv
[
¨g
][1] == 'a') {

222 
gë_Æl
 = 1;

223 
gë_åì
 = 1;

224 
gë_hi°‹y
 = 1;

226 i‡(
¨gv
[
¨g
][1] == 'l')

227 
u£_lök
 = 1;

228 i‡(
¨gv
[
¨g
][1] == 's')

229 
u£_symlök
 = 1;

230 i‡(
¨gv
[
¨g
][1] == 'n')

231 
u£_fûec›y
 = 0;

232 i‡(
¨gv
[
¨g
][1] == 'v')

233 
gë_vîbo£ly
 = 1;

234 i‡(
¨gv
[
¨g
][1] == 'w')

235 
wrôe_ªf
 = &
¨gv
[++
¨g
];

236 i‡(!
	`°rcmp
(
¨gv
[
¨g
], "--recover"))

237 
gë_ªcovî
 = 1;

238 i‡(!
	`°rcmp
(
¨gv
[
¨g
], "--stdin"))

239 
commôs_⁄_°dö
 = 1;

241 
	`ußge
(
loˇl_puŒ_ußge
);

242 
¨g
++;

244 i‡(
¨gc
 < 
¨g
 + 2 - 
commôs_⁄_°dö
)

245 
	`ußge
(
loˇl_puŒ_ußge
);

246 i‡(
commôs_⁄_°dö
) {

247 
commôs
 = 
	`puŒ_èrgës_°dö
(&
commô_id
, &
wrôe_ªf
);

249 
commô_id
 = (**Ë&
¨gv
[
¨g
++];

250 
commôs
 = 1;

252 
∑th
 = 
¨gv
[
¨g
];

254 i‡(
	`puŒ
(
commôs
, 
commô_id
, 
wrôe_ªf
, 
∑th
))

257 i‡(
commôs_⁄_°dö
)

258 
	`puŒ_èrgës_‰ì
(
commôs
, 
commô_id
, 
wrôe_ªf
);

261 
	}
}

	@lockfile.c

4 
	~"ˇche.h
"

6 
lock_fûe
 *
	glock_fûe_li°
;

8 
	$ªmove_lock_fûe
()

10 
lock_fûe_li°
) {

11 i‡(
lock_fûe_li°
->
fûíame
[0])

12 
	`u∆ök
(
lock_fûe_li°
->
fûíame
);

13 
lock_fûe_li°
 =Üock_fûe_li°->
√xt
;

15 
	}
}

17 
	$ªmove_lock_fûe_⁄_sig«l
(
signo
)

19 
	`ªmove_lock_fûe
();

20 
	`sig«l
(
SIGINT
, 
SIG_DFL
);

21 
	`øi£
(
signo
);

22 
	}
}

24 
	$lock_fûe
(
lock_fûe
 *
lk
, c⁄° *
∑th
)

26 
fd
;

27 
	`•rötf
(
lk
->
fûíame
, "%s.lock", 
∑th
);

28 
fd
 = 
	`›í
(
lk
->
fûíame
, 
O_RDWR
 | 
O_CREAT
 | 
O_EXCL
, 0666);

29 i‡(0 <
fd
) {

30 i‡(!
lk
->
⁄_li°
) {

31 
lk
->
√xt
 = 
lock_fûe_li°
;

32 
lock_fûe_li°
 = 
lk
;

33 
lk
->
⁄_li°
 = 1;

35 i‡(
lock_fûe_li°
) {

36 
	`sig«l
(
SIGINT
, 
ªmove_lock_fûe_⁄_sig«l
);

37 
	`©exô
(
ªmove_lock_fûe
);

39 i‡(
	`adju°_sh¨ed_≥rm
(
lk
->
fûíame
))

40  
	`îr‹
("cannot fixÖermission bits on %s",

41 
lk
->
fûíame
);

44 
lk
->
fûíame
[0] = 0;

45  
fd
;

46 
	}
}

48 
	$hﬁd_lock_fûe_f‹_upd©e
(
lock_fûe
 *
lk
, c⁄° *
∑th
, 
dõ_⁄_îr‹
)

50 
fd
 = 
	`lock_fûe
(
lk
, 
∑th
);

51 i‡(
fd
 < 0 && 
dõ_⁄_îr‹
)

52 
	`dõ
("u«bÀÅÿ¸óã '%s.lock': %s", 
∑th
, 
	`°ªº‹
(
î∫o
));

53  
fd
;

54 
	}
}

56 
	$commô_lock_fûe
(
lock_fûe
 *
lk
)

58 
ªsu…_fûe
[
PATH_MAX
];

59 
i
;

60 
	`°r˝y
(
ªsu…_fûe
, 
lk
->
fûíame
);

61 
i
 = 
	`°æí
(
ªsu…_fûe
) - 5;

62 
ªsu…_fûe
[
i
] = 0;

63 
i
 = 
	`ª«me
(
lk
->
fûíame
, 
ªsu…_fûe
);

64 
lk
->
fûíame
[0] = 0;

65  
i
;

66 
	}
}

68 
	$rﬁlback_lock_fûe
(
lock_fûe
 *
lk
)

70 i‡(
lk
->
fûíame
[0])

71 
	`u∆ök
(
lk
->
fûíame
);

72 
lk
->
fûíame
[0] = 0;

73 
	}
}

	@log-tree.c

1 
	~"ˇche.h
"

2 
	~"diff.h
"

3 
	~"commô.h
"

4 
	~"log-åì.h
"

5 
	~"ªÊog-wÆk.h
"

7 
	$show_∑ª¡s
(
commô
 *commô, 
abbªv
)

9 
commô_li°
 *
p
;

10 
p
 = 
commô
->
∑ª¡s
;Ö ;Ö =Ö->
√xt
) {

11 
commô
 *
∑ª¡
 = 
p
->
ôem
;

12 
	`¥ötf
(" %s", 
	`diff_unique_abbªv
(
∑ª¡
->
obje˘
.
sha1
, 
abbªv
));

14 
	}
}

20 
	$dëe˘_™y_signoff
(*
Àâî
, 
size
)

22 
ch
, *
˝
;

23 
£í_cﬁ⁄
 = 0;

24 
£í_©
 = 0;

25 
£í_«me
 = 0;

26 
£í_hód
 = 0;

28 
˝
 = 
Àâî
 + 
size
;

29 
Àâî
 <--
˝
 && (
ch
 = *cp) == '\n')

32 
Àâî
 <
˝
) {

33 
ch
 = *
˝
--;

34 i‡(
ch
 == '\n')

37 i‡(!
£í_©
) {

38 i‡(
ch
 == '@')

39 
£í_©
 = 1;

42 i‡(!
£í_cﬁ⁄
) {

43 i‡(
ch
 == '@')

45 i‡(
ch
 == ':')

46 
£í_cﬁ⁄
 = 1;

48 
£í_«me
 = 1;

51 i‡(('A' <
ch
 && ch <= 'Z') ||

52 ('a' <
ch
 && ch <= 'z') ||

53 
ch
 == '-') {

54 
£í_hód
 = 1;

60  
£í_hód
 && 
£í_«me
;

61 
	}
}

63 
	$≠≥nd_signoff
(*
buf
, 
buf_sz
, 
©
, c⁄° *
signoff
)

65 c⁄° 
sig√d_off_by
[] = "Signed-off-by: ";

66 
signoff_Àn
 = 
	`°æí
(
signoff
);

67 
has_signoff
 = 0;

68 *
˝
 = 
buf
;

71 i‡(
buf_sz
 - 
©
 <
	`°æí
(
sig√d_off_by
Ë+ 
signoff_Àn
 + 3)

72  
©
;

75 (
˝
 = 
	`°r°r
(˝, 
sig√d_off_by
))) {

77 
has_signoff
 = 1;

79 
˝
 +
	`°æí
(
sig√d_off_by
);

80 i‡(
˝
 + 
signoff_Àn
 >
buf
 + 
©
)

82 i‡(
	`°∫cmp
(
˝
, 
signoff
, 
signoff_Àn
))

84 i‡(!
	`is•a˚
(
˝
[
signoff_Àn
]))

87  
©
;

90 i‡(!
has_signoff
)

91 
has_signoff
 = 
	`dëe˘_™y_signoff
(
buf
, 
©
);

93 i‡(!
has_signoff
)

94 
buf
[
©
++] = '\n';

96 
	`°r˝y
(
buf
 + 
©
, 
sig√d_off_by
);

97 
©
 +
	`°æí
(
sig√d_off_by
);

98 
	`°r˝y
(
buf
 + 
©
, 
signoff
);

99 
©
 +
signoff_Àn
;

100 
buf
[
©
++] = '\n';

101 
buf
[
©
] = 0;

102  
©
;

103 
	}
}

105 
	$digôs_ö_numbî
(
numbî
)

107 
i
 = 10, 
ªsu…
 = 1;

108 
i
 <
numbî
) {

109 
i
 *= 10;

110 
ªsu…
++;

112  
ªsu…
;

113 
	}
}

115 
	$show_log
(
ªv_öfo
 *
›t
, c⁄° *
£p
)

117 
this_hódî
[16384];

118 
log_öfo
 *
log
 = 
›t
->
logöfo
;

119 
commô
 *commô = 
log
->commô, *
∑ª¡
 =Üog->parent;

120 
abbªv
 = 
›t
->
diff›t
.abbrev;

121 
abbªv_commô
 = 
›t
->abbªv_commô ? o±->
abbªv
 : 40;

122 c⁄° *
exåa
;

123 
Àn
;

124 c⁄° *
subje˘
 = 
NULL
, *
exåa_hódîs
 = 
›t
->extra_headers;

126 
›t
->
logöfo
 = 
NULL
;

127 i‡(!
›t
->
vîbo£_hódî
) {

128 i‡(
›t
->
À·_right
) {

129 i‡(
commô
->
obje˘
.
Êags
 & 
BOUNDARY
)

130 
	`putch¨
('-');

131 i‡(
commô
->
obje˘
.
Êags
 & 
SYMMETRIC_LEFT
)

132 
	`putch¨
('<');

134 
	`putch¨
('>');

136 
	`Âuts
(
	`diff_unique_abbªv
(
commô
->
obje˘
.
sha1
, 
abbªv_commô
), 
°dout
);

137 i‡(
›t
->
∑ª¡s
)

138 
	`show_∑ª¡s
(
commô
, 
abbªv_commô
);

139 
	`putch¨
(
›t
->
diff›t
.
löe_ãrmö©i⁄
);

152 
exåa
 = "";

153 i‡(*
£p
 !'\n' && 
›t
->
commô_f‹m©
 =
CMIT_FMT_ONELINE
)

154 
exåa
 = "\n";

155 i‡(
›t
->
shown_⁄e
 && o±->
commô_f‹m©
 !
CMIT_FMT_ONELINE
)

156 
	`putch¨
(
›t
->
diff›t
.
löe_ãrmö©i⁄
);

157 
›t
->
shown_⁄e
 = 1;

163 i‡(
›t
->
commô_f‹m©
 =
CMIT_FMT_EMAIL
) {

164 *
sha1
 = 
	`sha1_to_hex
(
commô
->
obje˘
.sha1);

165 i‡(
›t
->
tŸÆ
 > 0) {

166 
buf„r
[64];

167 
	`¢¥ötf
(
buf„r
, (buffer),

169 
	`digôs_ö_numbî
(
›t
->
tŸÆ
),

170 
›t
->
ƒ
, o±->
tŸÆ
);

171 
subje˘
 = 
buf„r
;

172 } i‡(
›t
->
tŸÆ
 == 0)

173 
subje˘
 = "Subject: [PATCH] ";

175 
subje˘
 = "Subject: ";

177 
	`¥ötf
("From %†M⁄ Sï 17 00:00:00 2001\n", 
sha1
);

178 i‡(
›t
->
mesßge_id
)

179 
	`¥ötf
("Mesßge-Id: <%s>\n", 
›t
->
mesßge_id
);

180 i‡(
›t
->
ªf_mesßge_id
)

181 
	`¥ötf
("In-Reply-To: <%s>\nReferences: <%s>\n",

182 
›t
->
ªf_mesßge_id
, opt->ref_message_id);

183 i‡(
›t
->
mime_bound¨y
) {

184 
subje˘_buf„r
[1024];

185 
buf„r
[1024];

186 
	`¢¥ötf
(
subje˘_buf„r
, (subject_buffer) - 1,

198 
exåa_hódîs
 ?Éxtra_headers : "",

199 
mime_bound¨y_Àadî
, 
›t
->
mime_bound¨y
,

200 
mime_bound¨y_Àadî
, 
›t
->
mime_bound¨y
);

201 
exåa_hódîs
 = 
subje˘_buf„r
;

203 
	`¢¥ötf
(
buf„r
, (buffer) - 1,

210 
mime_bound¨y_Àadî
, 
›t
->
mime_bound¨y
,

211 
sha1
, sha1);

212 
›t
->
diff›t
.
°©_£p
 = 
buf„r
;

215 
	`Âuts
(
	`diff_gë_cﬁ‹
(
›t
->
diff›t
.
cﬁ‹_diff
, 
DIFF_COMMIT
),

216 
°dout
);

217 i‡(
›t
->
commô_f‹m©
 !
CMIT_FMT_ONELINE
)

218 
	`Âuts
("commô ", 
°dout
);

219 i‡(
›t
->
À·_right
) {

220 i‡(
commô
->
obje˘
.
Êags
 & 
BOUNDARY
)

221 
	`putch¨
('-');

222 i‡(
commô
->
obje˘
.
Êags
 & 
SYMMETRIC_LEFT
)

223 
	`putch¨
('<');

225 
	`putch¨
('>');

227 
	`Âuts
(
	`diff_unique_abbªv
(
commô
->
obje˘
.
sha1
, 
abbªv_commô
),

228 
°dout
);

229 i‡(
›t
->
∑ª¡s
)

230 
	`show_∑ª¡s
(
commô
, 
abbªv_commô
);

231 i‡(
∑ª¡
)

232 
	`¥ötf
(" (from %s)",

233 
	`diff_unique_abbªv
(
∑ª¡
->
obje˘
.
sha1
,

234 
abbªv_commô
));

235 
	`¥ötf
("%s",

236 
	`diff_gë_cﬁ‹
(
›t
->
diff›t
.
cﬁ‹_diff
, 
DIFF_RESET
));

237 
	`putch¨
(
›t
->
commô_f‹m©
 =
CMIT_FMT_ONELINE
 ? ' ' : '\n');

238 i‡(
›t
->
ªÊog_öfo
) {

239 
	`show_ªÊog_mesßge
(
›t
->
ªÊog_öfo
,

240 
›t
->
commô_f‹m©
 =
CMIT_FMT_ONELINE
,

241 
›t
->
ªœtive_d©e
);

242 i‡(
›t
->
commô_f‹m©
 =
CMIT_FMT_ONELINE
) {

243 
	`¥ötf
("%s", 
£p
);

252 
Àn
 = 
	`¥ëty_¥öt_commô
(
›t
->
commô_f‹m©
, 
commô
, ~0u, 
this_hódî
,

253 (
this_hódî
), 
abbªv
, 
subje˘
,

254 
exåa_hódîs
, 
›t
->
ªœtive_d©e
);

256 i‡(
›t
->
add_signoff
)

257 
Àn
 = 
	`≠≥nd_signoff
(
this_hódî
, (this_header),Üen,

258 
›t
->
add_signoff
);

259 
	`¥ötf
("%s%s%s", 
this_hódî
, 
exåa
, 
£p
);

260 
	}
}

262 
	$log_åì_diff_Êush
(
ªv_öfo
 *
›t
)

264 
	`diffc‹e_°d
(&
›t
->
diff›t
);

266 i‡(
	`diff_queue_is_em±y
()) {

267 
ßved_fmt
 = 
›t
->
diff›t
.
ouçut_f‹m©
;

268 
›t
->
diff›t
.
ouçut_f‹m©
 = 
DIFF_FORMAT_NO_OUTPUT
;

269 
	`diff_Êush
(&
›t
->
diff›t
);

270 
›t
->
diff›t
.
ouçut_f‹m©
 = 
ßved_fmt
;

274 i‡(
›t
->
logöfo
 && !›t->
no_commô_id
) {

280 
	`show_log
(
›t
, o±->
diff›t
.
msg_£p
);

281 i‡(
›t
->
vîbo£_hódî
 &&

282 
›t
->
commô_f‹m©
 !
CMIT_FMT_ONELINE
) {

283 
pch
 = 
DIFF_FORMAT_DIFFSTAT
 | 
DIFF_FORMAT_PATCH
;

284 i‡((
pch
 & 
›t
->
diff›t
.
ouçut_f‹m©
) ==Öch)

285 
	`¥ötf
("---");

286 
	`putch¨
('\n');

289 
	`diff_Êush
(&
›t
->
diff›t
);

291 
	}
}

293 
	$do_diff_comböed
(
ªv_öfo
 *
›t
, 
commô
 *commit)

295 c⁄° *
sha1
 = 
commô
->
obje˘
.sha1;

297 
	`diff_åì_comböed_mîge
(
sha1
, 
›t
->
dí£_comböed_mîges
, opt);

298  !
›t
->
logöfo
;

299 
	}
}

306 
	$log_åì_diff
(
ªv_öfo
 *
›t
, 
commô
 *commô, 
log_öfo
 *
log
)

308 
showed_log
;

309 
commô_li°
 *
∑ª¡s
;

310 c⁄° *
sha1
 = 
commô
->
obje˘
.sha1;

312 i‡(!
›t
->
diff
)

316 
∑ª¡s
 = 
commô
->parents;

317 i‡(!
∑ª¡s
) {

318 i‡(
›t
->
show_roŸ_diff
) {

319 
	`diff_roŸ_åì_sha1
(
sha1
, "", &
›t
->
diff›t
);

320 
	`log_åì_diff_Êush
(
›t
);

322  !
›t
->
logöfo
;

326 i‡(
∑ª¡s
 &&Ö¨íts->
√xt
) {

327 i‡(
›t
->
ign‹e_mîges
)

329 i‡(
›t
->
comböe_mîges
)

330  
	`do_diff_comböed
(
›t
, 
commô
);

333 
log
->
∑ª¡
 = 
∑ª¡s
->
ôem
;

336 
showed_log
 = 0;

338 
commô
 *
∑ª¡
 = 
∑ª¡s
->
ôem
;

340 
	`diff_åì_sha1
(
∑ª¡
->
obje˘
.
sha1
, sha1, "", &
›t
->
diff›t
);

341 
	`log_åì_diff_Êush
(
›t
);

343 
showed_log
 |!
›t
->
logöfo
;

346 
∑ª¡s
 =Ö¨íts->
√xt
;

347 i‡(!
∑ª¡s
)

349 
log
->
∑ª¡
 = 
∑ª¡s
->
ôem
;

350 
›t
->
logöfo
 = 
log
;

352  
showed_log
;

353 
	}
}

355 
	$log_åì_commô
(
ªv_öfo
 *
›t
, 
commô
 *commit)

357 
log_öfo
 
log
;

358 
shown
;

360 
log
.
commô
 = commit;

361 
log
.
∑ª¡
 = 
NULL
;

362 
›t
->
logöfo
 = &
log
;

364 
shown
 = 
	`log_åì_diff
(
›t
, 
commô
, &
log
);

365 i‡(!
shown
 && 
›t
->
logöfo
 && o±->
Æways_show_hódî
) {

366 
log
.
∑ª¡
 = 
NULL
;

367 
	`show_log
(
›t
, "");

368 
shown
 = 1;

370 
›t
->
logöfo
 = 
NULL
;

371  
shown
;

372 
	}
}

	@log-tree.h

1 #i‚de‡
LOG_TREE_H


2 
	#LOG_TREE_H


	)

4 
	~"ªvisi⁄.h
"

6 
	slog_öfo
 {

7 
commô
 *
	mcommô
, *
	m∑ª¡
;

10 
öô_log_åì_›t
(
ªv_öfo
 *);

11 
log_åì_diff_Êush
(
ªv_öfo
 *);

12 
log_åì_commô
(
ªv_öfo
 *, 
commô
 *);

13 
log_åì_›t_∑r£
(
ªv_öfo
 *, const **, );

14 
show_log
(
ªv_öfo
 *
›t
, c⁄° *
£p
);

	@merge-base.c

1 
	~"ˇche.h
"

2 
	~"commô.h
"

4 
	gshow_Æl
;

6 
	$mîge_ba£
(
commô
 *
ªv1
, commô *
ªv2
)

8 
commô_li°
 *
ªsu…
 = 
	`gë_mîge_ba£s
(
ªv1
, 
ªv2
, 0);

10 i‡(!
ªsu…
)

13 
ªsu…
) {

14 
	`¥ötf
("%s\n", 
	`sha1_to_hex
(
ªsu…
->
ôem
->
obje˘
.
sha1
));

15 i‡(!
show_Æl
)

17 
ªsu…
 =Ñesu…->
√xt
;

21 
	}
}

23 c⁄° 
	gmîge_ba£_ußge
[] =

26 
	$maö
(
¨gc
, **
¨gv
)

28 
commô
 *
ªv1
, *
ªv2
;

29 
ªv1key
[20], 
ªv2key
[20];

31 
	`£tup_gô_dúe˘‹y
();

32 
	`gô_c⁄fig
(
gô_deÁu…_c⁄fig
);

34 1 < 
¨gc
 && 
¨gv
[1][0] == '-') {

35 *
¨g
 = 
¨gv
[1];

36 i‡(!
	`°rcmp
(
¨g
, "-a") || !strcmp(arg, "--all"))

37 
show_Æl
 = 1;

39 
	`ußge
(
mîge_ba£_ußge
);

40 
¨gc
--; 
¨gv
++;

42 i‡(
¨gc
 != 3)

43 
	`ußge
(
mîge_ba£_ußge
);

44 i‡(
	`gë_sha1
(
¨gv
[1], 
ªv1key
))

45 
	`dõ
("NŸá vÆid obje˘Çamê%s", 
¨gv
[1]);

46 i‡(
	`gë_sha1
(
¨gv
[2], 
ªv2key
))

47 
	`dõ
("NŸá vÆid obje˘Çamê%s", 
¨gv
[2]);

48 
ªv1
 = 
	`lookup_commô_ª„ªn˚
(
ªv1key
);

49 
ªv2
 = 
	`lookup_commô_ª„ªn˚
(
ªv2key
);

50 i‡(!
ªv1
 || !
ªv2
)

52  
	`mîge_ba£
(
ªv1
, 
ªv2
);

53 
	}
}

	@merge-file.c

1 
	~"ˇche.h
"

2 
	~"run-comm™d.h
"

3 
	~"xdiff-öãrÁ˚.h
"

4 
	~"blob.h
"

6 
	$fûl_mmfûe_blob
(
mmfûe_t
 *
f
, 
blob
 *
obj
)

8 *
buf
;

9 
size
;

10 
ty≥
[20];

12 
buf
 = 
	`ªad_sha1_fûe
(
obj
->
obje˘
.
sha1
, 
ty≥
, &
size
);

13 i‡(!
buf
)

15 i‡(
	`°rcmp
(
ty≥
, 
blob_ty≥
))

17 
f
->
±r
 = 
buf
;

18 
f
->
size
 = size;

20 
	}
}

22 
	$‰ì_mmfûe
(
mmfûe_t
 *
f
)

24 
	`‰ì
(
f
->
±r
);

25 
	}
}

27 *
	$thªe_way_fûemîge
(
mmfûe_t
 *
ba£
, mmfûe_à*
our
, mmfûe_à*
theú
, *
size
)

29 
mmbuf„r_t
 
ªs
;

30 
xµ¨am_t
 
xµ
;

31 
mîge_°©us
;

33 
	`mem£t
(&
xµ
, 0, (xpp));

34 
mîge_°©us
 = 
	`xdl_mîge
(
ba£
, 
our
, ".our", 
theú
, ".their",

35 &
xµ
, 
XDL_MERGE_ZEALOUS
, &
ªs
);

37 i‡(
mîge_°©us
 < 0)

38  
NULL
;

40 *
size
 = 
ªs
.size;

41  
ªs
.
±r
;

42 
	}
}

44 
	$comm⁄_outf
(*
¥iv_
, 
mmbuf„r_t
 *
mb
, 
nbuf
)

46 
i
;

47 
mmfûe_t
 *
d°
 = 
¥iv_
;

49 
i
 = 0; i < 
nbuf
; i++) {

50 
	`mem˝y
(
d°
->
±r
 + d°->
size
, 
mb
[
i
].ptr, mb[i].size);

51 
d°
->
size
 +
mb
[
i
].size;

54 
	}
}

56 
	$gíî©e_comm⁄_fûe
(
mmfûe_t
 *
ªs
, mmfûe_à*
f1
, mmfûe_à*
f2
)

58 
size
 = 
f1
->sizê< 
f2
->size ? f1->size : f2->size;

59 *
±r
 = 
	`xmÆloc
(
size
);

60 
xµ¨am_t
 
xµ
;

61 
xdemôc⁄f_t
 
xecfg
;

62 
xdemôcb_t
 
ecb
;

64 
xµ
.
Êags
 = 
XDF_NEED_MINIMAL
;

65 
xecfg
.
˘xÀn
 = 3;

66 
xecfg
.
Êags
 = 
XDL_EMIT_COMMON
;

67 
ecb
.
outf
 = 
comm⁄_outf
;

69 
ªs
->
±r
 =Ötr;

70 
ªs
->
size
 = 0;

72 
ecb
.
¥iv
 = 
ªs
;

73  
	`xdl_diff
(
f1
, 
f2
, &
xµ
, &
xecfg
, &
ecb
);

74 
	}
}

76 *
	$mîge_fûe
(
blob
 *
ba£
, blob *
our
, blob *
theú
, *
size
)

78 *
ªs
 = 
NULL
;

79 
mmfûe_t
 
f1
, 
f2
, 
comm⁄
;

88 i‡(!
our
 || !
theú
) {

89 
ty≥
[20];

90 i‡(
ba£
)

91  
NULL
;

92 i‡(!
our
)

93 
our
 = 
theú
;

94  
	`ªad_sha1_fûe
(
our
->
obje˘
.
sha1
, 
ty≥
, 
size
);

97 i‡(
	`fûl_mmfûe_blob
(&
f1
, 
our
) < 0)

98 
out_no_mmfûe
;

99 i‡(
	`fûl_mmfûe_blob
(&
f2
, 
theú
) < 0)

100 
out_‰ì_f1
;

102 i‡(
ba£
) {

103 i‡(
	`fûl_mmfûe_blob
(&
comm⁄
, 
ba£
) < 0)

104 
out_‰ì_f2_f1
;

106 i‡(
	`gíî©e_comm⁄_fûe
(&
comm⁄
, &
f1
, &
f2
) < 0)

107 
out_‰ì_f2_f1
;

109 
ªs
 = 
	`thªe_way_fûemîge
(&
comm⁄
, &
f1
, &
f2
, 
size
);

110 
	`‰ì_mmfûe
(&
comm⁄
);

111 
out_‰ì_f2_f1
:

112 
	`‰ì_mmfûe
(&
f2
);

113 
out_‰ì_f1
:

114 
	`‰ì_mmfûe
(&
f1
);

115 
out_no_mmfûe
:

116  
ªs
;

117 
	}
}

	@merge-index.c

1 
	~"ˇche.h
"

3 c⁄° *
	gpgm
;

4 c⁄° *
	g¨gumíts
[8];

5 
	g⁄e_shŸ
, 
	gquõt
;

6 
	gîr
;

8 
	$run_¥ogøm
()

10 
pid_t
 
pid
 = 
	`f‹k
();

11 
°©us
;

13 i‡(
pid
 < 0)

14 
	`dõ
("unableÅo fork");

15 i‡(!
pid
) {

16 
	`exe˛p
(
pgm
, 
¨gumíts
[0],

17 
¨gumíts
[1],

18 
¨gumíts
[2],

19 
¨gumíts
[3],

20 
¨gumíts
[4],

21 
¨gumíts
[5],

22 
¨gumíts
[6],

23 
¨gumíts
[7],

24 
NULL
);

25 
	`dõ
("u«bÀÅÿexecuã '%s'", 
pgm
);

27 i‡(
	`waôpid
(
pid
, &
°©us
, 0Ë< 0 || !
	`WIFEXITED
(°©usË|| 
	`WEXITSTATUS
(status)) {

28 i‡(
⁄e_shŸ
) {

29 
îr
++;

31 i‡(!
quõt
)

32 
	`dõ
("mergeÖrogram failed");

33 
	`exô
(1);

36 
	}
}

38 
	$mîge_íåy
(
pos
, c⁄° *
∑th
)

40 
found
;

42 i‡(
pos
 >
a˘ive_ƒ
)

43 
	`dõ
("gô-mîge-ödex: %†nŸ i¿thêˇche", 
∑th
);

44 
¨gumíts
[0] = 
pgm
;

45 
¨gumíts
[1] = "";

46 
¨gumíts
[2] = "";

47 
¨gumíts
[3] = "";

48 
¨gumíts
[4] = 
∑th
;

49 
¨gumíts
[5] = "";

50 
¨gumíts
[6] = "";

51 
¨gumíts
[7] = "";

52 
found
 = 0;

54 
hexbuf
[4][60];

55 
ownbuf
[4][60];

56 
ˇche_íåy
 *
˚
 = 
a˘ive_ˇche
[
pos
];

57 
°age
 = 
	`˚_°age
(
˚
);

59 i‡(
	`°rcmp
(
˚
->
«me
, 
∑th
))

61 
found
++;

62 
	`°r˝y
(
hexbuf
[
°age
], 
	`sha1_to_hex
(
˚
->
sha1
));

63 
	`•rötf
(
ownbuf
[
°age
], "%o", 
	`¡ohl
(
˚
->
˚_mode
Ë& (~
S_IFMT
));

64 
¨gumíts
[
°age
] = 
hexbuf
[stage];

65 
¨gumíts
[
°age
 + 4] = 
ownbuf
[stage];

66 } ++
pos
 < 
a˘ive_ƒ
);

67 i‡(!
found
)

68 
	`dõ
("gô-mîge-ödex: %†nŸ i¿thêˇche", 
∑th
);

69 
	`run_¥ogøm
();

70  
found
;

71 
	}
}

73 
	$mîge_fûe
(c⁄° *
∑th
)

75 
pos
 = 
	`ˇche_«me_pos
(
∑th
, 
	`°æí
(path));

81 i‡(
pos
 < 0)

82 
	`mîge_íåy
(-
pos
-1, 
∑th
);

83 
	}
}

85 
	$mîge_Æl
()

87 
i
;

88 
i
 = 0; i < 
a˘ive_ƒ
; i++) {

89 
ˇche_íåy
 *
˚
 = 
a˘ive_ˇche
[
i
];

90 i‡(!
	`˚_°age
(
˚
))

92 
i
 +
	`mîge_íåy
(i, 
˚
->
«me
)-1;

94 
	}
}

96 
	$maö
(
¨gc
, **
¨gv
)

98 
i
, 
f‹˚_fûe
 = 0;

103 
	`sig«l
(
SIGCHLD
, 
SIG_DFL
);

105 i‡(
¨gc
 < 3)

106 
	`ußge
("git-merge-index [-o] [-q] <merge-program> (-a | <filename>*)");

108 
	`£tup_gô_dúe˘‹y
();

109 
	`ªad_ˇche
();

111 
i
 = 1;

112 i‡(!
	`°rcmp
(
¨gv
[
i
], "-o")) {

113 
⁄e_shŸ
 = 1;

114 
i
++;

116 i‡(!
	`°rcmp
(
¨gv
[
i
], "-q")) {

117 
quõt
 = 1;

118 
i
++;

120 
pgm
 = 
¨gv
[
i
++];

121 ; 
i
 < 
¨gc
; i++) {

122 *
¨g
 = 
¨gv
[
i
];

123 i‡(!
f‹˚_fûe
 && *
¨g
 == '-') {

124 i‡(!
	`°rcmp
(
¨g
, "--")) {

125 
f‹˚_fûe
 = 1;

128 i‡(!
	`°rcmp
(
¨g
, "-a")) {

129 
	`mîge_Æl
();

132 
	`dõ
("gô-mîge-ödex: unknow¿›ti⁄ %s", 
¨g
);

134 
	`mîge_fûe
(
¨g
);

136 i‡(
îr
 && !
quõt
)

137 
	`dõ
("mergeÖrogram failed");

138  
îr
;

139 
	}
}

	@merge-recursive.c

6 
	~"ˇche.h
"

7 
	~"ˇche-åì.h
"

8 
	~"commô.h
"

9 
	~"blob.h
"

10 
	~"åì-wÆk.h
"

11 
	~"diff.h
"

12 
	~"diffc‹e.h
"

13 
	~"run-comm™d.h
"

14 
	~"èg.h
"

15 
	~"u≈ack-åìs.h
"

16 
	~"∑th-li°.h
"

17 
	~"xdiff-öãrÁ˚.h
"

25 
	$commô_li°_cou¡
(c⁄° 
commô_li°
 *
l
)

27 
c
 = 0;

28 ; 
l
;Ü =Ü->
√xt
 )

29 
c
++;

30  
c
;

31 
	}
}

33 
commô
 *
	$make_vútuÆ_commô
(
åì
 *åì, c⁄° *
commít
)

35 
commô
 *commô = 
	`xˇŒoc
(1, (commit));

36 
vútuÆ_id
 = 1;

37 
commô
->
åì
 =Åree;

38 
commô
->
utû
 = (*)
commít
;

39 *(*)
commô
->
obje˘
.
sha1
 = 
vútuÆ_id
++;

41 
commô
->
obje˘
.
∑r£d
 = 1;

42  
commô
;

43 
	}
}

49 
	$sha_eq
(c⁄° *
a
, c⁄° *
b
)

51 i‡(!
a
 && !
b
)

53  
a
 && 
b
 && 
	`hashcmp
(a, b) == 0;

54 
	}
}

60 
	s°age_d©a


64 
	mmode
;

65 
	msha
[20];

66 } 
	m°ages
[4];

67 
	m¥o˚s£d
:1;

70 
	souçut_buf„r


72 
ouçut_buf„r
 *
	m√xt
;

73 *
	m°r
;

76 
∑th_li°
 
	gcuºít_fûe_£t
 = {
NULL
, 0, 0, 1};

77 
∑th_li°
 
	gcuºít_dúe˘‹y_£t
 = {
NULL
, 0, 0, 1};

79 
	gˇŒ_dïth
 = 0;

80 
	gvîbosôy
 = 2;

81 
	gbuf„r_ouçut
 = 1;

82 
	gdo_¥ogªss
 = 1;

83 
	gœ°_≥r˚¡
;

84 
	gmîged_˙t
;

85 
	gtŸÆ_˙t
;

86 vﬁ©ûê
sig_©omic_t
 
	g¥ogªss_upd©e
;

87 
ouçut_buf„r
 *
	gouçut_li°
, *
	gouçut_íd
;

89 
	$show
 (
v
)

91  (!
ˇŒ_dïth
 && 
vîbosôy
 >
v
) || verbosity >= 5;

92 
	}
}

94 
	$ouçut
(
v
, c⁄° *
fmt
, ...)

96 
va_li°
 
¨gs
;

97 
	`va_°¨t
(
¨gs
, 
fmt
);

98 i‡(
buf„r_ouçut
 && 
	`show
(
v
)) {

99 
ouçut_buf„r
 *
b
 = 
	`xmÆloc
((*b));

100 
	`nfva•rötf
(&
b
->
°r
, 
fmt
, 
¨gs
);

101 
b
->
√xt
 = 
NULL
;

102 i‡(
ouçut_íd
)

103 
ouçut_íd
->
√xt
 = 
b
;

105 
ouçut_li°
 = 
b
;

106 
ouçut_íd
 = 
b
;

107 } i‡(
	`show
(
v
)) {

108 
i
;

109 
i
 = 
ˇŒ_dïth
; i--;)

110 
	`Âuts
(" ", 
°dout
);

111 
	`vÂrötf
(
°dout
, 
fmt
, 
¨gs
);

112 
	`Âutc
('\n', 
°dout
);

114 
	`va_íd
(
¨gs
);

115 
	}
}

117 
	$Êush_ouçut
()

119 
ouçut_buf„r
 *
b
, *
n
;

120 
b
 = 
ouçut_li°
; b; b = 
n
) {

121 
i
;

122 
i
 = 
ˇŒ_dïth
; i--;)

123 
	`Âuts
(" ", 
°dout
);

124 
	`Âuts
(
b
->
°r
, 
°dout
);

125 
	`Âutc
('\n', 
°dout
);

126 
n
 = 
b
->
√xt
;

127 
	`‰ì
(
b
->
°r
);

128 
	`‰ì
(
b
);

130 
ouçut_li°
 = 
NULL
;

131 
ouçut_íd
 = 
NULL
;

132 
	}
}

134 
	$ouçut_commô_tôÀ
(
commô
 *commit)

136 
i
;

137 
	`Êush_ouçut
();

138 
i
 = 
ˇŒ_dïth
; i--;)

139 
	`Âuts
(" ", 
°dout
);

140 i‡(
commô
->
utû
)

141 
	`¥ötf
("vútuÆ %s\n", (*)
commô
->
utû
);

143 
	`¥ötf
("%†", 
	`föd_unique_abbªv
(
commô
->
obje˘
.
sha1
, 
DEFAULT_ABBREV
));

144 i‡(
	`∑r£_commô
(
commô
) != 0)

145 
	`¥ötf
("(bad commit)\n");

147 c⁄° *
s
;

148 
Àn
;

149 
s
 = 
commô
->
buf„r
; *s; s++)

150 i‡(*
s
 == '\n' && s[1] == '\n') {

151 
s
 += 2;

154 
Àn
 = 0; 
s
[len] && '\n' != s[len];Üen++)

156 
	`¥ötf
("%.*s\n", 
Àn
, 
s
);

159 
	}
}

161 
	$¥ogªss_öãrvÆ
(
signum
)

163 
¥ogªss_upd©e
 = 1;

164 
	}
}

166 
	$£tup_¥ogªss_sig«l
()

168 
siga˘i⁄
 
ß
;

169 
ôimîvÆ
 
v
;

171 
	`mem£t
(&
ß
, 0, (sa));

172 
ß
.
ß_h™dÀr
 = 
¥ogªss_öãrvÆ
;

173 
	`sigem±y£t
(&
ß
.
ß_mask
);

174 
ß
.
ß_Êags
 = 
SA_RESTART
;

175 
	`siga˘i⁄
(
SIGALRM
, &
ß
, 
NULL
);

177 
v
.
ô_öãrvÆ
.
tv_£c
 = 1;

178 
v
.
ô_öãrvÆ
.
tv_u£c
 = 0;

179 
v
.
ô_vÆue
 = v.
ô_öãrvÆ
;

180 
	`£tôimî
(
ITIMER_REAL
, &
v
, 
NULL
);

181 
	}
}

183 
	$di•œy_¥ogªss
()

185 
≥r˚¡
 = 
tŸÆ_˙t
 ? 
mîged_˙t
 * 100 /Åotal_cnt : 0;

186 i‡(
¥ogªss_upd©e
 || 
≥r˚¡
 !
œ°_≥r˚¡
) {

187 
	`Ârötf
(
°dîr
, "%4u%% (%u/%u) done\r",

188 
≥r˚¡
, 
mîged_˙t
, 
tŸÆ_˙t
);

189 
¥ogªss_upd©e
 = 0;

190 
œ°_≥r˚¡
 = 
≥r˚¡
;

192 
	}
}

194 
ˇche_íåy
 *
	$make_ˇche_íåy
(
mode
,

195 c⁄° *
sha1
, c⁄° *
∑th
, 
°age
, 
ª‰esh
)

197 
size
, 
Àn
;

198 
ˇche_íåy
 *
˚
;

200 i‡(!
	`vîify_∑th
(
∑th
))

201  
NULL
;

203 
Àn
 = 
	`°æí
(
∑th
);

204 
size
 = 
	`ˇche_íåy_size
(
Àn
);

205 
˚
 = 
	`xˇŒoc
(1, 
size
);

207 
	`hash˝y
(
˚
->
sha1
, sha1);

208 
	`mem˝y
(
˚
->
«me
, 
∑th
, 
Àn
);

209 
˚
->
˚_Êags
 = 
	`¸óã_˚_Êags
(
Àn
, 
°age
);

210 
˚
->
˚_mode
 = 
	`¸óã_˚_mode
(
mode
);

212 i‡(
ª‰esh
)

213  
	`ª‰esh_ˇche_íåy
(
˚
, 0);

215  
˚
;

216 
	}
}

218 
	$add_ˇcheöfo
(
mode
, c⁄° *
sha1
,

219 c⁄° *
∑th
, 
°age
, 
ª‰esh
, 
›ti⁄s
)

221 
ˇche_íåy
 *
˚
;

222 
˚
 = 
	`make_ˇche_íåy
(
mode
, 
sha1
 ? sha1 : 
nuŒ_sha1
, 
∑th
, 
°age
, 
ª‰esh
);

223 i‡(!
˚
)

224  
	`îr‹
("ˇche_addöfÿÁûed: %s", 
	`°ªº‹
(
ˇche_î∫o
));

225  
	`add_ˇche_íåy
(
˚
, 
›ti⁄s
);

226 
	}
}

237 
	gödex_⁄ly
 = 0;

239 
	$gô_mîge_åìs
(
ödex_⁄ly
,

240 
åì
 *
comm⁄
,

241 
åì
 *
hód
,

242 
åì
 *
mîge
)

244 
rc
;

245 
obje˘_li°
 *
åìs
 = 
NULL
;

246 
u≈ack_åìs_›ti⁄s
 
›ts
;

248 
	`mem£t
(&
›ts
, 0, (opts));

249 i‡(
ödex_⁄ly
)

250 
›ts
.
ödex_⁄ly
 = 1;

252 
›ts
.
upd©e
 = 1;

253 
›ts
.
mîge
 = 1;

254 
›ts
.
hód_idx
 = 2;

255 
›ts
.
‚
 = 
thªeway_mîge
;

257 
	`obje˘_li°_≠≥nd
(&
comm⁄
->
obje˘
, &
åìs
);

258 
	`obje˘_li°_≠≥nd
(&
hód
->
obje˘
, &
åìs
);

259 
	`obje˘_li°_≠≥nd
(&
mîge
->
obje˘
, &
åìs
);

261 
rc
 = 
	`u≈ack_åìs
(
åìs
, &
›ts
);

262 
	`ˇche_åì_‰ì
(&
a˘ive_ˇche_åì
);

263  
rc
;

264 
	}
}

266 
	$unmîged_ödex
()

268 
i
;

269 
i
 = 0; i < 
a˘ive_ƒ
; i++) {

270 
ˇche_íåy
 *
˚
 = 
a˘ive_ˇche
[
i
];

271 i‡(
	`˚_°age
(
˚
))

275 
	}
}

277 
åì
 *
	$gô_wrôe_åì
()

279 
åì
 *
ªsu…
 = 
NULL
;

281 i‡(
	`unmîged_ödex
())

282  
NULL
;

284 i‡(!
a˘ive_ˇche_åì
)

285 
a˘ive_ˇche_åì
 = 
	`ˇche_åì
();

287 i‡(!
	`ˇche_åì_fuŒy_vÆid
(
a˘ive_ˇche_åì
) &&

288 
	`ˇche_åì_upd©e
(
a˘ive_ˇche_åì
,

289 
a˘ive_ˇche
, 
a˘ive_ƒ
, 0, 0) < 0)

290 
	`dõ
("error buildingÅrees");

292 
ªsu…
 = 
	`lookup_åì
(
a˘ive_ˇche_åì
->
sha1
);

294  
ªsu…
;

295 
	}
}

297 
	$ßve_fûes_dús
(c⁄° *
sha1
,

298 c⁄° *
ba£
, 
ba£Àn
, c⁄° *
∑th
,

299 
mode
, 
°age
)

301 
Àn
 = 
	`°æí
(
∑th
);

302 *
√w∑th
 = 
	`xmÆloc
(
ba£Àn
 + 
Àn
 + 1);

303 
	`mem˝y
(
√w∑th
, 
ba£
, 
ba£Àn
);

304 
	`mem˝y
(
√w∑th
 + 
ba£Àn
, 
∑th
, 
Àn
);

305 
√w∑th
[
ba£Àn
 + 
Àn
] = '\0';

307 i‡(
	`S_ISDIR
(
mode
))

308 
	`∑th_li°_ö£π
(
√w∑th
, &
cuºít_dúe˘‹y_£t
);

310 
	`∑th_li°_ö£π
(
√w∑th
, &
cuºít_fûe_£t
);

311 
	`‰ì
(
√w∑th
);

313  
READ_TREE_RECURSIVE
;

314 
	}
}

316 
	$gë_fûes_dús
(
åì
 *tree)

318 
n
;

319 i‡(
	`ªad_åì_ªcursive
(
åì
, "", 0, 0, 
NULL
, 
ßve_fûes_dús
) != 0)

321 
n
 = 
cuºít_fûe_£t
.
ƒ
 + 
cuºít_dúe˘‹y_£t
.nr;

322  
n
;

323 
	}
}

329 
°age_d©a
 *
	$ö£π_°age_d©a
(c⁄° *
∑th
,

330 
åì
 *
o
, åì *
a
, åì *
b
,

331 
∑th_li°
 *
íåõs
)

333 
∑th_li°_ôem
 *
ôem
;

334 
°age_d©a
 *
e
 = 
	`xˇŒoc
(1, (stage_data));

335 
	`gë_åì_íåy
(
o
->
obje˘
.
sha1
, 
∑th
,

336 
e
->
°ages
[1].
sha
, &e->°ages[1].
mode
);

337 
	`gë_åì_íåy
(
a
->
obje˘
.
sha1
, 
∑th
,

338 
e
->
°ages
[2].
sha
, &e->°ages[2].
mode
);

339 
	`gë_åì_íåy
(
b
->
obje˘
.
sha1
, 
∑th
,

340 
e
->
°ages
[3].
sha
, &e->°ages[3].
mode
);

341 
ôem
 = 
	`∑th_li°_ö£π
(
∑th
, 
íåõs
);

342 
ôem
->
utû
 = 
e
;

343  
e
;

344 
	}
}

350 
∑th_li°
 *
	$gë_unmîged
()

352 
∑th_li°
 *
unmîged
 = 
	`xˇŒoc
(1, (path_list));

353 
i
;

355 
unmîged
->
°rdup_∑ths
 = 1;

356 
tŸÆ_˙t
 +
a˘ive_ƒ
;

358 
i
 = 0; i < 
a˘ive_ƒ
; i++, 
mîged_˙t
++) {

359 
∑th_li°_ôem
 *
ôem
;

360 
°age_d©a
 *
e
;

361 
ˇche_íåy
 *
˚
 = 
a˘ive_ˇche
[
i
];

362 i‡(
do_¥ogªss
)

363 
	`di•œy_¥ogªss
();

364 i‡(!
	`˚_°age
(
˚
))

367 
ôem
 = 
	`∑th_li°_lookup
(
˚
->
«me
, 
unmîged
);

368 i‡(!
ôem
) {

369 
ôem
 = 
	`∑th_li°_ö£π
(
˚
->
«me
, 
unmîged
);

370 
ôem
->
utû
 = 
	`xˇŒoc
(1, (
°age_d©a
));

372 
e
 = 
ôem
->
utû
;

373 
e
->
°ages
[
	`˚_°age
(
˚
)].
mode
 = 
	`¡ohl
(˚->
˚_mode
);

374 
	`hash˝y
(
e
->
°ages
[
	`˚_°age
(
˚
)].
sha
, ce->
sha1
);

377  
unmîged
;

378 
	}
}

380 
	sª«me


382 
diff_fûïaú
 *
	m∑ú
;

383 
°age_d©a
 *
	m§c_íåy
;

384 
°age_d©a
 *
	md°_íåy
;

385 
	m¥o˚s£d
:1;

394 
∑th_li°
 *
	$gë_ª«mes
(
åì
 *tree,

395 
åì
 *
o_åì
,

396 
åì
 *
a_åì
,

397 
åì
 *
b_åì
,

398 
∑th_li°
 *
íåõs
)

400 
i
;

401 
∑th_li°
 *
ª«mes
;

402 
diff_›ti⁄s
 
›ts
;

404 
ª«mes
 = 
	`xˇŒoc
(1, (
∑th_li°
));

405 
	`diff_£tup
(&
›ts
);

406 
›ts
.
ªcursive
 = 1;

407 
›ts
.
dëe˘_ª«me
 = 
DIFF_DETECT_RENAME
;

408 
›ts
.
ouçut_f‹m©
 = 
DIFF_FORMAT_NO_OUTPUT
;

409 i‡(
	`diff_£tup_d⁄e
(&
›ts
) < 0)

410 
	`dõ
("diff setup failed");

411 
	`diff_åì_sha1
(
o_åì
->
obje˘
.
sha1
, 
åì
->obje˘.sha1, "", &
›ts
);

412 
	`diffc‹e_°d
(&
›ts
);

413 
i
 = 0; i < 
diff_queued_diff
.
ƒ
; ++i) {

414 
∑th_li°_ôem
 *
ôem
;

415 
ª«me
 *
ª
;

416 
diff_fûïaú
 *
∑ú
 = 
diff_queued_diff
.
queue
[
i
];

417 i‡(
∑ú
->
°©us
 != 'R') {

418 
	`diff_‰ì_fûïaú
(
∑ú
);

421 
ª
 = 
	`xmÆloc
((*re));

422 
ª
->
¥o˚s£d
 = 0;

423 
ª
->
∑ú
 =Öair;

424 
ôem
 = 
	`∑th_li°_lookup
(
ª
->
∑ú
->
⁄e
->
∑th
, 
íåõs
);

425 i‡(!
ôem
)

426 
ª
->
§c_íåy
 = 
	`ö£π_°age_d©a
‘e->
∑ú
->
⁄e
->
∑th
,

427 
o_åì
, 
a_åì
, 
b_åì
, 
íåõs
);

429 
ª
->
§c_íåy
 = 
ôem
->
utû
;

431 
ôem
 = 
	`∑th_li°_lookup
(
ª
->
∑ú
->
two
->
∑th
, 
íåõs
);

432 i‡(!
ôem
)

433 
ª
->
d°_íåy
 = 
	`ö£π_°age_d©a
‘e->
∑ú
->
two
->
∑th
,

434 
o_åì
, 
a_åì
, 
b_åì
, 
íåõs
);

436 
ª
->
d°_íåy
 = 
ôem
->
utû
;

437 
ôem
 = 
	`∑th_li°_ö£π
(
∑ú
->
⁄e
->
∑th
, 
ª«mes
);

438 
ôem
->
utû
 = 
ª
;

440 
›ts
.
ouçut_f‹m©
 = 
DIFF_FORMAT_NO_OUTPUT
;

441 
diff_queued_diff
.
ƒ
 = 0;

442 
	`diff_Êush
(&
›ts
);

443  
ª«mes
;

444 
	}
}

446 
	$upd©e_°ages
(c⁄° *
∑th
, 
diff_fûe•ec
 *
o
,

447 
diff_fûe•ec
 *
a
, diff_fûe•e¯*
b
,

448 
˛ór
)

450 
›ti⁄s
 = 
ADD_CACHE_OK_TO_ADD
 | 
ADD_CACHE_OK_TO_REPLACE
;

451 i‡(
˛ór
)

452 i‡(
	`ªmove_fûe_‰om_ˇche
(
∑th
))

454 i‡(
o
)

455 i‡(
	`add_ˇcheöfo
(
o
->
mode
, o->
sha1
, 
∑th
, 1, 0, 
›ti⁄s
))

457 i‡(
a
)

458 i‡(
	`add_ˇcheöfo
(
a
->
mode
,á->
sha1
, 
∑th
, 2, 0, 
›ti⁄s
))

460 i‡(
b
)

461 i‡(
	`add_ˇcheöfo
(
b
->
mode
, b->
sha1
, 
∑th
, 3, 0, 
›ti⁄s
))

464 
	}
}

466 
	$ªmove_∑th
(c⁄° *
«me
)

468 
ªt
, 
Àn
;

469 *
¶ash
, *
dús
;

471 
ªt
 = 
	`u∆ök
(
«me
);

472 i‡(
ªt
)

473  
ªt
;

474 
Àn
 = 
	`°æí
(
«me
);

475 
dús
 = 
	`xmÆloc
(
Àn
+1);

476 
	`mem˝y
(
dús
, 
«me
, 
Àn
);

477 
dús
[
Àn
] = '\0';

478 (
¶ash
 = 
	`°ºchr
(
«me
, '/'))) {

479 *
¶ash
 = '\0';

480 
Àn
 = 
¶ash
 - 
«me
;

481 i‡(
	`rmdú
(
«me
) != 0)

484 
	`‰ì
(
dús
);

485  
ªt
;

486 
	}
}

488 
	$ªmove_fûe
(
˛ón
, c⁄° *
∑th
, 
no_wd
)

490 
upd©e_ˇche
 = 
ödex_⁄ly
 || 
˛ón
;

491 
upd©e_w‹kög_dúe˘‹y
 = !
ödex_⁄ly
 && !
no_wd
;

493 i‡(
upd©e_ˇche
) {

494 i‡(
	`ªmove_fûe_‰om_ˇche
(
∑th
))

497 i‡(
upd©e_w‹kög_dúe˘‹y
) {

498 
	`u∆ök
(
∑th
);

499 i‡(
î∫o
 !
ENOENT
 ||Éºnÿ!
EISDIR
)

501 
	`ªmove_∑th
(
∑th
);

504 
	}
}

506 *
	$unique_∑th
(c⁄° *
∑th
, c⁄° *
bønch
)

508 *
√w∑th
 = 
	`xmÆloc
(
	`°æí
(
∑th
Ë+ 1 + såÀn(
bønch
) + 8 + 1);

509 
suffix
 = 0;

510 
°©
 
°
;

511 *
p
 = 
√w∑th
 + 
	`°æí
(
∑th
);

512 
	`°r˝y
(
√w∑th
, 
∑th
);

513 *(
p
++) = '~';

514 
	`°r˝y
(
p
, 
bønch
);

515 ; *
p
; ++p)

516 i‡('/' =*
p
)

517 *
p
 = '_';

518 
	`∑th_li°_has_∑th
(&
cuºít_fûe_£t
, 
√w∑th
) ||

519 
	`∑th_li°_has_∑th
(&
cuºít_dúe˘‹y_£t
, 
√w∑th
) ||

520 
	`l°©
(
√w∑th
, &
°
) == 0)

521 
	`•rötf
(
p
, "_%d", 
suffix
++);

523 
	`∑th_li°_ö£π
(
√w∑th
, &
cuºít_fûe_£t
);

524  
√w∑th
;

525 
	}
}

527 
	$mkdú_p
(c⁄° *
∑th
, 
mode
)

530 *
buf
 = 
	`x°rdup
(
∑th
);

531 
ªsu…
 = 
	`ß„_¸óã_Àadög_dúe˘‹õs
(
buf
);

532 
	`‰ì
(
buf
);

533  
ªsu…
;

534 
	}
}

536 
	$Êush_buf„r
(
fd
, c⁄° *
buf
, 
size
)

538 
size
 > 0) {

539 
ªt
 = 
	`wrôe_ö_fuŒ
(
fd
, 
buf
, 
size
);

540 i‡(
ªt
 < 0) {

542 i‡(
î∫o
 =
EPIPE
)

544 
	`dõ
("mîge-ªcursive: %s", 
	`°ªº‹
(
î∫o
));

545 } i‡(!
ªt
) {

546 
	`dõ
("merge-recursive: disk full?");

548 
size
 -
ªt
;

549 
buf
 +
ªt
;

551 
	}
}

553 
	$upd©e_fûe_Êags
(c⁄° *
sha
,

554 
mode
,

555 c⁄° *
∑th
,

556 
upd©e_ˇche
,

557 
upd©e_wd
)

559 i‡(
ödex_⁄ly
)

560 
upd©e_wd
 = 0;

562 i‡(
upd©e_wd
) {

563 
ty≥
[20];

564 *
buf
;

565 
size
;

567 
buf
 = 
	`ªad_sha1_fûe
(
sha
, 
ty≥
, &
size
);

568 i‡(!
buf
)

569 
	`dõ
("ˇ¬ŸÑód obje˘ %†'%s'", 
	`sha1_to_hex
(
sha
), 
∑th
);

570 i‡(
	`°rcmp
(
ty≥
, 
blob_ty≥
) != 0)

571 
	`dõ
("blobÉx≥˘ed f‹ %†'%s'", 
	`sha1_to_hex
(
sha
), 
∑th
);

573 i‡(
	`S_ISREG
(
mode
)) {

574 
fd
;

575 i‡(
	`mkdú_p
(
∑th
, 0777))

576 
	`dõ
("ÁûedÅÿ¸óãÖ©h %s: %s", 
∑th
, 
	`°ªº‹
(
î∫o
));

577 
	`u∆ök
(
∑th
);

578 i‡(
mode
 & 0100)

579 
mode
 = 0777;

581 
mode
 = 0666;

582 
fd
 = 
	`›í
(
∑th
, 
O_WRONLY
 | 
O_TRUNC
 | 
O_CREAT
, 
mode
);

583 i‡(
fd
 < 0)

584 
	`dõ
("ÁûedÅÿ›í %s: %s", 
∑th
, 
	`°ªº‹
(
î∫o
));

585 
	`Êush_buf„r
(
fd
, 
buf
, 
size
);

586 
	`˛o£
(
fd
);

587 } i‡(
	`S_ISLNK
(
mode
)) {

588 *
 k
 = 
	`xmÆloc
(
size
 + 1);

589 
	`mem˝y
(
 k
, 
buf
, 
size
);

590 
 k
[
size
] = '\0';

591 
	`mkdú_p
(
∑th
, 0777);

592 
	`u∆ök
(
 k
);

593 
	`symlök
(
 k
, 
∑th
);

595 
	`dõ
("doÇot know whatÅo do with %06o %s '%s'",

596 
mode
, 
	`sha1_to_hex
(
sha
), 
∑th
);

598 i‡(
upd©e_ˇche
)

599 
	`add_ˇcheöfo
(
mode
, 
sha
, 
∑th
, 0, 
upd©e_wd
, 
ADD_CACHE_OK_TO_ADD
);

600 
	}
}

602 
	$upd©e_fûe
(
˛ón
,

603 c⁄° *
sha
,

604 
mode
,

605 c⁄° *
∑th
)

607 
	`upd©e_fûe_Êags
(
sha
, 
mode
, 
∑th
, 
ödex_⁄ly
 || 
˛ón
, !index_only);

608 
	}
}

612 
	smîge_fûe_öfo


614 
	msha
[20];

615 
	mmode
;

616 
	m˛ón
:1,

617 
	mmîge
:1;

620 
	$fûl_mm
(c⁄° *
sha1
, 
mmfûe_t
 *
mm
)

622 
size
;

623 
ty≥
[20];

625 i‡(!
	`hashcmp
(
sha1
, 
nuŒ_sha1
)) {

626 
mm
->
±r
 = 
	`x°rdup
("");

627 
mm
->
size
 = 0;

631 
mm
->
±r
 = 
	`ªad_sha1_fûe
(
sha1
, 
ty≥
, &
size
);

632 i‡(!
mm
->
±r
 || 
	`°rcmp
(
ty≥
, 
blob_ty≥
))

633 
	`dõ
("u«bÀÅÿªad blob obje˘ %s", 
	`sha1_to_hex
(
sha1
));

634 
mm
->
size
 = size;

635 
	}
}

637 
mîge_fûe_öfo
 
	$mîge_fûe
(
diff_fûe•ec
 *
o
,

638 
diff_fûe•ec
 *
a
, diff_fûe•e¯*
b
,

639 c⁄° *
bønch1
, c⁄° *
bønch2
)

641 
mîge_fûe_öfo
 
ªsu…
;

642 
ªsu…
.
mîge
 = 0;

643 
ªsu…
.
˛ón
 = 1;

645 i‡((
S_IFMT
 & 
a
->
mode
Ë!(S_IFMT & 
b
->mode)) {

646 
ªsu…
.
˛ón
 = 0;

647 i‡(
	`S_ISREG
(
a
->
mode
)) {

648 
ªsu…
.
mode
 = 
a
->mode;

649 
	`hash˝y
(
ªsu…
.
sha
, 
a
->
sha1
);

651 
ªsu…
.
mode
 = 
b
->mode;

652 
	`hash˝y
(
ªsu…
.
sha
, 
b
->
sha1
);

655 i‡(!
	`sha_eq
(
a
->
sha1
, 
o
->sha1Ë&& !sha_eq(
b
->sha1, o->sha1))

656 
ªsu…
.
mîge
 = 1;

658 
ªsu…
.
mode
 = 
a
->modê=
o
->modê? 
b
->mode:á->mode;

660 i‡(
	`sha_eq
(
a
->
sha1
, 
o
->sha1))

661 
	`hash˝y
(
ªsu…
.
sha
, 
b
->
sha1
);

662 i‡(
	`sha_eq
(
b
->
sha1
, 
o
->sha1))

663 
	`hash˝y
(
ªsu…
.
sha
, 
a
->
sha1
);

664 i‡(
	`S_ISREG
(
a
->
mode
)) {

665 
mmfûe_t
 
‹ig
, 
§c1
, 
§c2
;

666 
mmbuf„r_t
 
ªsu…_buf
;

667 
xµ¨am_t
 
xµ
;

668 *
«me1
, *
«me2
;

669 
mîge_°©us
;

671 
«me1
 = 
	`x°rdup
(
	`mk∑th
("%s:%s", 
bønch1
, 
a
->
∑th
));

672 
«me2
 = 
	`x°rdup
(
	`mk∑th
("%s:%s", 
bønch2
, 
b
->
∑th
));

674 
	`fûl_mm
(
o
->
sha1
, &
‹ig
);

675 
	`fûl_mm
(
a
->
sha1
, &
§c1
);

676 
	`fûl_mm
(
b
->
sha1
, &
§c2
);

678 
	`mem£t
(&
xµ
, 0, (xpp));

679 
mîge_°©us
 = 
	`xdl_mîge
(&
‹ig
,

680 &
§c1
, 
«me1
,

681 &
§c2
, 
«me2
,

682 &
xµ
, 
XDL_MERGE_ZEALOUS
,

683 &
ªsu…_buf
);

684 
	`‰ì
(
«me1
);

685 
	`‰ì
(
«me2
);

686 
	`‰ì
(
‹ig
.
±r
);

687 
	`‰ì
(
§c1
.
±r
);

688 
	`‰ì
(
§c2
.
±r
);

690 i‡((
mîge_°©us
 < 0Ë|| !
ªsu…_buf
.
±r
)

691 
	`dõ
("FailedÅoÉxecute internal merge");

693 i‡(
	`wrôe_sha1_fûe
(
ªsu…_buf
.
±r
,Ñesu…_buf.
size
,

694 
blob_ty≥
, 
ªsu…
.
sha
))

695 
	`dõ
("UnableÅoádd %sÅo database",

696 
a
->
∑th
);

698 
	`‰ì
(
ªsu…_buf
.
±r
);

699 
ªsu…
.
˛ón
 = (
mîge_°©us
 == 0);

701 i‡(!(
	`S_ISLNK
(
a
->
mode
Ë|| S_ISLNK(
b
->mode)))

702 
	`dõ
("cannot merge modes?");

704 
	`hash˝y
(
ªsu…
.
sha
, 
a
->
sha1
);

706 i‡(!
	`sha_eq
(
a
->
sha1
, 
b
->sha1))

707 
ªsu…
.
˛ón
 = 0;

711  
ªsu…
;

712 
	}
}

714 
	$c⁄Êi˘_ª«me_ª«me
(
ª«me
 *
ªn1
,

715 c⁄° *
bønch1
,

716 
ª«me
 *
ªn2
,

717 c⁄° *
bønch2
)

719 *
dñ
[2];

720 
dñp
 = 0;

721 c⁄° *
ªn1_d°
 = 
ªn1
->
∑ú
->
two
->
∑th
;

722 c⁄° *
ªn2_d°
 = 
ªn2
->
∑ú
->
two
->
∑th
;

723 c⁄° *
d°_«me1
 = 
ªn1_d°
;

724 c⁄° *
d°_«me2
 = 
ªn2_d°
;

725 i‡(
	`∑th_li°_has_∑th
(&
cuºít_dúe˘‹y_£t
, 
ªn1_d°
)) {

726 
d°_«me1
 = 
dñ
[
dñp
++] = 
	`unique_∑th
(
ªn1_d°
, 
bønch1
);

727 
	`ouçut
(1, "%s isá directory in %sáddedás %s instead",

728 
ªn1_d°
, 
bønch2
, 
d°_«me1
);

729 
	`ªmove_fûe
(0, 
ªn1_d°
, 0);

731 i‡(
	`∑th_li°_has_∑th
(&
cuºít_dúe˘‹y_£t
, 
ªn2_d°
)) {

732 
d°_«me2
 = 
dñ
[
dñp
++] = 
	`unique_∑th
(
ªn2_d°
, 
bønch2
);

733 
	`ouçut
(1, "%s isá directory in %sáddedás %s instead",

734 
ªn2_d°
, 
bønch1
, 
d°_«me2
);

735 
	`ªmove_fûe
(0, 
ªn2_d°
, 0);

737 
	`upd©e_°ages
(
d°_«me1
, 
NULL
, 
ªn1
->
∑ú
->
two
, NULL, 1);

738 
	`upd©e_°ages
(
d°_«me2
, 
NULL
, NULL, 
ªn2
->
∑ú
->
two
, 1);

739 
dñp
--)

740 
	`‰ì
(
dñ
[
dñp
]);

741 
	}
}

743 
	$c⁄Êi˘_ª«me_dú
(
ª«me
 *
ªn1
,

744 c⁄° *
bønch1
)

746 *
√w_∑th
 = 
	`unique_∑th
(
ªn1
->
∑ú
->
two
->
∑th
, 
bønch1
);

747 
	`ouçut
(1, "Ríamed %†tÿ%†ö°ód", 
ªn1
->
∑ú
->
⁄e
->
∑th
, 
√w_∑th
);

748 
	`ªmove_fûe
(0, 
ªn1
->
∑ú
->
two
->
∑th
, 0);

749 
	`upd©e_fûe
(0, 
ªn1
->
∑ú
->
two
->
sha1
,Ñí1->∑ú->two->
mode
, 
√w_∑th
);

750 
	`‰ì
(
√w_∑th
);

751 
	}
}

753 
	$c⁄Êi˘_ª«me_ª«me_2
(
ª«me
 *
ªn1
,

754 c⁄° *
bønch1
,

755 
ª«me
 *
ªn2
,

756 c⁄° *
bønch2
)

758 *
√w_∑th1
 = 
	`unique_∑th
(
ªn1
->
∑ú
->
two
->
∑th
, 
bønch1
);

759 *
√w_∑th2
 = 
	`unique_∑th
(
ªn2
->
∑ú
->
two
->
∑th
, 
bønch2
);

760 
	`ouçut
(1, "Renamed %sÅo %sánd %sÅo %s instead",

761 
ªn1
->
∑ú
->
⁄e
->
∑th
, 
√w_∑th1
,

762 
ªn2
->
∑ú
->
⁄e
->
∑th
, 
√w_∑th2
);

763 
	`ªmove_fûe
(0, 
ªn1
->
∑ú
->
two
->
∑th
, 0);

764 
	`upd©e_fûe
(0, 
ªn1
->
∑ú
->
two
->
sha1
,Ñí1->∑ú->two->
mode
, 
√w_∑th1
);

765 
	`upd©e_fûe
(0, 
ªn2
->
∑ú
->
two
->
sha1
,Ñí2->∑ú->two->
mode
, 
√w_∑th2
);

766 
	`‰ì
(
√w_∑th2
);

767 
	`‰ì
(
√w_∑th1
);

768 
	}
}

770 
	$¥o˚ss_ª«mes
(
∑th_li°
 *
a_ª«mes
,

771 
∑th_li°
 *
b_ª«mes
,

772 c⁄° *
a_bønch
,

773 c⁄° *
b_bønch
)

775 
˛ón_mîge
 = 1, 
i
, 
j
;

776 
∑th_li°
 
a_by_d°
 = {
NULL
, 0, 0, 0}, 
b_by_d°
 = {NULL, 0, 0, 0};

777 c⁄° 
ª«me
 *
§e
;

779 
i
 = 0; i < 
a_ª«mes
->
ƒ
; i++) {

780 
§e
 = 
a_ª«mes
->
ôems
[
i
].
utû
;

781 
	`∑th_li°_ö£π
(
§e
->
∑ú
->
two
->
∑th
, &
a_by_d°
)->
utû


782 
§e
->
d°_íåy
;

784 
i
 = 0; i < 
b_ª«mes
->
ƒ
; i++) {

785 
§e
 = 
b_ª«mes
->
ôems
[
i
].
utû
;

786 
	`∑th_li°_ö£π
(
§e
->
∑ú
->
two
->
∑th
, &
b_by_d°
)->
utû


787 
§e
->
d°_íåy
;

790 
i
 = 0, 
j
 = 0; i < 
a_ª«mes
->
ƒ
 || j < 
b_ª«mes
->nr;) {

791 
com∑ª
;

792 *
§c
;

793 
∑th_li°
 *
ª«mes1
, *
ª«mes2
, *
ª«mes2D°
;

794 
ª«me
 *
ªn1
 = 
NULL
, *
ªn2
 = NULL;

795 c⁄° *
bønch1
, *
bønch2
;

796 c⁄° *
ªn1_§c
, *
ªn1_d°
;

798 i‡(
i
 >
a_ª«mes
->
ƒ
) {

799 
com∑ª
 = 1;

800 
ªn2
 = 
b_ª«mes
->
ôems
[
j
++].
utû
;

801 } i‡(
j
 >
b_ª«mes
->
ƒ
) {

802 
com∑ª
 = -1;

803 
ªn1
 = 
a_ª«mes
->
ôems
[
i
++].
utû
;

805 
com∑ª
 = 
	`°rcmp
(
a_ª«mes
->
ôems
[
i
].
∑th
,

806 
b_ª«mes
->
ôems
[
j
].
∑th
);

807 i‡(
com∑ª
 <= 0)

808 
ªn1
 = 
a_ª«mes
->
ôems
[
i
++].
utû
;

809 i‡(
com∑ª
 >= 0)

810 
ªn2
 = 
b_ª«mes
->
ôems
[
j
++].
utû
;

814 i‡(
ªn1
) {

815 
ª«mes1
 = 
a_ª«mes
;

816 
ª«mes2
 = 
b_ª«mes
;

817 
ª«mes2D°
 = &
b_by_d°
;

818 
bønch1
 = 
a_bønch
;

819 
bønch2
 = 
b_bønch
;

821 
ª«me
 *
tmp
;

822 
ª«mes1
 = 
b_ª«mes
;

823 
ª«mes2
 = 
a_ª«mes
;

824 
ª«mes2D°
 = &
a_by_d°
;

825 
bønch1
 = 
b_bønch
;

826 
bønch2
 = 
a_bønch
;

827 
tmp
 = 
ªn2
;

828 
ªn2
 = 
ªn1
;

829 
ªn1
 = 
tmp
;

831 
§c
 = 
ªn1
->
∑ú
->
⁄e
->
∑th
;

833 
ªn1
->
d°_íåy
->
¥o˚s£d
 = 1;

834 
ªn1
->
§c_íåy
->
¥o˚s£d
 = 1;

836 i‡(
ªn1
->
¥o˚s£d
)

838 
ªn1
->
¥o˚s£d
 = 1;

840 
ªn1_§c
 = 
ªn1
->
∑ú
->
⁄e
->
∑th
;

841 
ªn1_d°
 = 
ªn1
->
∑ú
->
two
->
∑th
;

843 i‡(
ªn2
) {

844 c⁄° *
ªn2_§c
 = 
ªn2
->
∑ú
->
⁄e
->
∑th
;

845 c⁄° *
ªn2_d°
 = 
ªn2
->
∑ú
->
two
->
∑th
;

847 i‡(
	`°rcmp
(
ªn1_§c
, 
ªn2_§c
) != 0)

848 
	`dõ
("ren1.src !=Ñen2.src");

849 
ªn2
->
d°_íåy
->
¥o˚s£d
 = 1;

850 
ªn2
->
¥o˚s£d
 = 1;

851 i‡(
	`°rcmp
(
ªn1_d°
, 
ªn2_d°
) != 0) {

852 
˛ón_mîge
 = 0;

853 
	`ouçut
(1, "CONFLICT (rename/rename): "

856 
§c
, 
ªn1_d°
, 
bønch1
,

857 
§c
, 
ªn2_d°
, 
bønch2
);

858 
	`c⁄Êi˘_ª«me_ª«me
(
ªn1
, 
bønch1
, 
ªn2
, 
bønch2
);

860 
mîge_fûe_öfo
 
mfi
;

861 
	`ªmove_fûe
(1, 
ªn1_§c
, 1);

862 
mfi
 = 
	`mîge_fûe
(
ªn1
->
∑ú
->
⁄e
,

863 
ªn1
->
∑ú
->
two
,

864 
ªn2
->
∑ú
->
two
,

865 
bønch1
,

866 
bønch2
);

867 i‡(
mfi
.
mîge
 || !mfi.
˛ón
)

868 
	`ouçut
(1, "Ríamed %s->%s", 
§c
, 
ªn1_d°
);

870 i‡(
mfi
.
mîge
)

871 
	`ouçut
(2, "Auto-mîged %s", 
ªn1_d°
);

873 i‡(!
mfi
.
˛ón
) {

874 
	`ouçut
(1, "CONFLICT (content): merge conflict in %s",

875 
ªn1_d°
);

876 
˛ón_mîge
 = 0;

878 i‡(!
ödex_⁄ly
)

879 
	`upd©e_°ages
(
ªn1_d°
,

880 
ªn1
->
∑ú
->
⁄e
,

881 
ªn1
->
∑ú
->
two
,

882 
ªn2
->
∑ú
->
two
,

885 
	`upd©e_fûe
(
mfi
.
˛ón
, mfi.
sha
, mfi.
mode
, 
ªn1_d°
);

889 
∑th_li°_ôem
 *
ôem
;

891 
diff_fûe•ec
 
§c_Ÿhî
, 
d°_Ÿhî
;

892 
åy_mîge
, 
°age
 = 
a_ª«mes
 =
ª«mes1
 ? 3: 2;

894 
	`ªmove_fûe
(1, 
ªn1_§c
, 
ödex_⁄ly
 || 
°age
 == 3);

896 
	`hash˝y
(
§c_Ÿhî
.
sha1
, 
ªn1
->
§c_íåy
->
°ages
[
°age
].
sha
);

897 
§c_Ÿhî
.
mode
 = 
ªn1
->
§c_íåy
->
°ages
[
°age
].mode;

898 
	`hash˝y
(
d°_Ÿhî
.
sha1
, 
ªn1
->
d°_íåy
->
°ages
[
°age
].
sha
);

899 
d°_Ÿhî
.
mode
 = 
ªn1
->
d°_íåy
->
°ages
[
°age
].mode;

901 
åy_mîge
 = 0;

903 i‡(
	`∑th_li°_has_∑th
(&
cuºít_dúe˘‹y_£t
, 
ªn1_d°
)) {

904 
˛ón_mîge
 = 0;

905 
	`ouçut
(1, "CONFLICT (rename/directory): Renamed %s->%s in %s "

907 
ªn1_§c
, 
ªn1_d°
, 
bønch1
,

908 
ªn1_d°
, 
bønch2
);

909 
	`c⁄Êi˘_ª«me_dú
(
ªn1
, 
bønch1
);

910 } i‡(
	`sha_eq
(
§c_Ÿhî
.
sha1
, 
nuŒ_sha1
)) {

911 
˛ón_mîge
 = 0;

912 
	`ouçut
(1, "CONFLICT (rename/delete): Renamed %s->%s in %s "

914 
ªn1_§c
, 
ªn1_d°
, 
bønch1
,

915 
bønch2
);

916 
	`upd©e_fûe
(0, 
ªn1
->
∑ú
->
two
->
sha1
,Ñí1->∑ú->two->
mode
, 
ªn1_d°
);

917 } i‡(!
	`sha_eq
(
d°_Ÿhî
.
sha1
, 
nuŒ_sha1
)) {

918 c⁄° *
√w_∑th
;

919 
˛ón_mîge
 = 0;

920 
åy_mîge
 = 1;

921 
	`ouçut
(1, "CONFLICT (rename/add): Renamed %s->%s in %s. "

923 
ªn1_§c
, 
ªn1_d°
, 
bønch1
,

924 
ªn1_d°
, 
bønch2
);

925 
√w_∑th
 = 
	`unique_∑th
(
ªn1_d°
, 
bønch2
);

926 
	`ouçut
(1, "Addedá†%†ö°ód", 
√w_∑th
);

927 
	`upd©e_fûe
(0, 
d°_Ÿhî
.
sha1
, d°_Ÿhî.
mode
, 
√w_∑th
);

928 } i‡((
ôem
 = 
	`∑th_li°_lookup
(
ªn1_d°
, 
ª«mes2D°
))) {

929 
ªn2
 = 
ôem
->
utû
;

930 
˛ón_mîge
 = 0;

931 
ªn2
->
¥o˚s£d
 = 1;

932 
	`ouçut
(1, "CONFLICT (rename/rename): Renamed %s->%s in %s. "

934 
ªn1_§c
, 
ªn1_d°
, 
bønch1
,

935 
ªn2
->
∑ú
->
⁄e
->
∑th
,Ñí2->∑ú->
two
->∑th, 
bønch2
);

936 
	`c⁄Êi˘_ª«me_ª«me_2
(
ªn1
, 
bønch1
, 
ªn2
, 
bønch2
);

938 
åy_mîge
 = 1;

940 i‡(
åy_mîge
) {

941 
diff_fûe•ec
 *
o
, *
a
, *
b
;

942 
mîge_fûe_öfo
 
mfi
;

943 
§c_Ÿhî
.
∑th
 = (*)
ªn1_§c
;

945 
o
 = 
ªn1
->
∑ú
->
⁄e
;

946 i‡(
a_ª«mes
 =
ª«mes1
) {

947 
a
 = 
ªn1
->
∑ú
->
two
;

948 
b
 = &
§c_Ÿhî
;

950 
b
 = 
ªn1
->
∑ú
->
two
;

951 
a
 = &
§c_Ÿhî
;

953 
mfi
 = 
	`mîge_fûe
(
o
, 
a
, 
b
,

954 
a_bønch
, 
b_bønch
);

956 i‡(
mfi
.
mîge
 || !mfi.
˛ón
)

957 
	`ouçut
(1, "Ríamed %†=> %s", 
ªn1_§c
, 
ªn1_d°
);

958 i‡(
mfi
.
mîge
)

959 
	`ouçut
(2, "Auto-mîged %s", 
ªn1_d°
);

960 i‡(!
mfi
.
˛ón
) {

961 
	`ouçut
(1, "CONFLICT (rename/modify): Merge conflict in %s",

962 
ªn1_d°
);

963 
˛ón_mîge
 = 0;

965 i‡(!
ödex_⁄ly
)

966 
	`upd©e_°ages
(
ªn1_d°
,

967 
o
, 
a
, 
b
, 1);

969 
	`upd©e_fûe
(
mfi
.
˛ón
, mfi.
sha
, mfi.
mode
, 
ªn1_d°
);

973 
	`∑th_li°_˛ór
(&
a_by_d°
, 0);

974 
	`∑th_li°_˛ór
(&
b_by_d°
, 0);

976  
˛ón_mîge
;

977 
	}
}

979 *
	$has_sha
(c⁄° *
sha
)

981  
	`is_nuŒ_sha1
(
sha
Ë? 
NULL
: (*)sha;

982 
	}
}

985 
	$¥o˚ss_íåy
(c⁄° *
∑th
, 
°age_d©a
 *
íåy
,

986 c⁄° *
bønch1
,

987 c⁄° *
bønch2
)

993 
˛ón_mîge
 = 1;

994 *
o_sha
 = 
	`has_sha
(
íåy
->
°ages
[1].
sha
);

995 *
a_sha
 = 
	`has_sha
(
íåy
->
°ages
[2].
sha
);

996 *
b_sha
 = 
	`has_sha
(
íåy
->
°ages
[3].
sha
);

997 
o_mode
 = 
íåy
->
°ages
[1].
mode
;

998 
a_mode
 = 
íåy
->
°ages
[2].
mode
;

999 
b_mode
 = 
íåy
->
°ages
[3].
mode
;

1001 i‡(
o_sha
 && (!
a_sha
 || !
b_sha
)) {

1003 i‡((!
a_sha
 && !
b_sha
) ||

1004 (
	`sha_eq
(
a_sha
, 
o_sha
Ë&& !
b_sha
) ||

1005 (!
a_sha
 && 
	`sha_eq
(
b_sha
, 
o_sha
))) {

1008 i‡(
a_sha
)

1009 
	`ouçut
(2, "Removed %s", 
∑th
);

1011 
	`ªmove_fûe
(1, 
∑th
, !
a_sha
);

1014 
˛ón_mîge
 = 0;

1015 i‡(!
a_sha
) {

1016 
	`ouçut
(1, "CONFLICT (delete/modify): %s deleted in %s "

1018 
∑th
, 
bønch1
,

1019 
bønch2
, bønch2, 
∑th
);

1020 
	`upd©e_fûe
(0, 
b_sha
, 
b_mode
, 
∑th
);

1022 
	`ouçut
(1, "CONFLICT (delete/modify): %s deleted in %s "

1024 
∑th
, 
bønch2
,

1025 
bønch1
, bønch1, 
∑th
);

1026 
	`upd©e_fûe
(0, 
a_sha
, 
a_mode
, 
∑th
);

1030 } i‡((!
o_sha
 && 
a_sha
 && !
b_sha
) ||

1031 (!
o_sha
 && !
a_sha
 && 
b_sha
)) {

1033 c⁄° *
add_bønch
;

1034 c⁄° *
Ÿhî_bønch
;

1035 
mode
;

1036 c⁄° *
sha
;

1037 c⁄° *
c⁄f
;

1039 i‡(
a_sha
) {

1040 
add_bønch
 = 
bønch1
;

1041 
Ÿhî_bønch
 = 
bønch2
;

1042 
mode
 = 
a_mode
;

1043 
sha
 = 
a_sha
;

1044 
c⁄f
 = "file/directory";

1046 
add_bønch
 = 
bønch2
;

1047 
Ÿhî_bønch
 = 
bønch1
;

1048 
mode
 = 
b_mode
;

1049 
sha
 = 
b_sha
;

1050 
c⁄f
 = "directory/file";

1052 i‡(
	`∑th_li°_has_∑th
(&
cuºít_dúe˘‹y_£t
, 
∑th
)) {

1053 c⁄° *
√w_∑th
 = 
	`unique_∑th
(
∑th
, 
add_bønch
);

1054 
˛ón_mîge
 = 0;

1055 
	`ouçut
(1, "CONFLICT (%s): There isá directory withÇame %s in %s. "

1057 
c⁄f
, 
∑th
, 
Ÿhî_bønch
,Ö©h, 
√w_∑th
);

1058 
	`ªmove_fûe
(0, 
∑th
, 0);

1059 
	`upd©e_fûe
(0, 
sha
, 
mode
, 
√w_∑th
);

1061 
	`ouçut
(2, "Added %s", 
∑th
);

1062 
	`upd©e_fûe
(1, 
sha
, 
mode
, 
∑th
);

1064 } i‡(
a_sha
 && 
b_sha
) {

1067 c⁄° *
ªas⁄
 = "content";

1068 
mîge_fûe_öfo
 
mfi
;

1069 
diff_fûe•ec
 
o
, 
a
, 
b
;

1071 i‡(!
o_sha
) {

1072 
ªas⁄
 = "add/add";

1073 
o_sha
 = (*)
nuŒ_sha1
;

1075 
	`ouçut
(2, "Auto-mîged %s", 
∑th
);

1076 
o
.
∑th
 = 
a
.∑th = 
b
.path = (*)path;

1077 
	`hash˝y
(
o
.
sha1
, 
o_sha
);

1078 
o
.
mode
 = 
o_mode
;

1079 
	`hash˝y
(
a
.
sha1
, 
a_sha
);

1080 
a
.
mode
 = 
a_mode
;

1081 
	`hash˝y
(
b
.
sha1
, 
b_sha
);

1082 
b
.
mode
 = 
b_mode
;

1084 
mfi
 = 
	`mîge_fûe
(&
o
, &
a
, &
b
,

1085 
bønch1
, 
bønch2
);

1087 i‡(
mfi
.
˛ón
)

1088 
	`upd©e_fûe
(1, 
mfi
.
sha
, mfi.
mode
, 
∑th
);

1090 
˛ón_mîge
 = 0;

1091 
	`ouçut
(1, "CONFLICT (%s): Merge conflict in %s",

1092 
ªas⁄
, 
∑th
);

1094 i‡(
ödex_⁄ly
)

1095 
	`upd©e_fûe
(0, 
mfi
.
sha
, mfi.
mode
, 
∑th
);

1097 
	`upd©e_fûe_Êags
(
mfi
.
sha
, mfi.
mode
, 
∑th
,

1101 
	`dõ
("Fatal merge failure, shouldn't happen.");

1103  
˛ón_mîge
;

1104 
	}
}

1106 
	$mîge_åìs
(
åì
 *
hód
,

1107 
åì
 *
mîge
,

1108 
åì
 *
comm⁄
,

1109 c⁄° *
bønch1
,

1110 c⁄° *
bønch2
,

1111 
åì
 **
ªsu…
)

1113 
code
, 
˛ón
;

1114 i‡(
	`sha_eq
(
comm⁄
->
obje˘
.
sha1
, 
mîge
->object.sha1)) {

1115 
	`ouçut
(0, "Already uptodate!");

1116 *
ªsu…
 = 
hód
;

1120 
code
 = 
	`gô_mîge_åìs
(
ödex_⁄ly
, 
comm⁄
, 
hód
, 
mîge
);

1122 i‡(
code
 != 0)

1123 
	`dõ
("merging ofÅrees %sánd %s failed",

1124 
	`sha1_to_hex
(
hód
->
obje˘
.
sha1
),

1125 
	`sha1_to_hex
(
mîge
->
obje˘
.
sha1
));

1127 i‡(
	`unmîged_ödex
()) {

1128 
∑th_li°
 *
íåõs
, *
ª_hód
, *
ª_mîge
;

1129 
i
;

1130 
	`∑th_li°_˛ór
(&
cuºít_fûe_£t
, 1);

1131 
	`∑th_li°_˛ór
(&
cuºít_dúe˘‹y_£t
, 1);

1132 
	`gë_fûes_dús
(
hód
);

1133 
	`gë_fûes_dús
(
mîge
);

1135 
íåõs
 = 
	`gë_unmîged
();

1136 
ª_hód
 = 
	`gë_ª«mes
(
hód
, 
comm⁄
, hód, 
mîge
, 
íåõs
);

1137 
ª_mîge
 = 
	`gë_ª«mes
(
mîge
, 
comm⁄
, 
hód
, mîge, 
íåõs
);

1138 
˛ón
 = 
	`¥o˚ss_ª«mes
(
ª_hód
, 
ª_mîge
,

1139 
bønch1
, 
bønch2
);

1140 
tŸÆ_˙t
 +
íåõs
->
ƒ
;

1141 
i
 = 0; i < 
íåõs
->
ƒ
; i++, 
mîged_˙t
++) {

1142 c⁄° *
∑th
 = 
íåõs
->
ôems
[
i
].path;

1143 
°age_d©a
 *
e
 = 
íåõs
->
ôems
[
i
].
utû
;

1144 i‡(!
e
->
¥o˚s£d


1145 && !
	`¥o˚ss_íåy
(
∑th
, 
e
, 
bønch1
, 
bønch2
))

1146 
˛ón
 = 0;

1147 i‡(
do_¥ogªss
)

1148 
	`di•œy_¥ogªss
();

1151 
	`∑th_li°_˛ór
(
ª_mîge
, 0);

1152 
	`∑th_li°_˛ór
(
ª_hód
, 0);

1153 
	`∑th_li°_˛ór
(
íåõs
, 1);

1157 
˛ón
 = 1;

1159 i‡(
ödex_⁄ly
)

1160 *
ªsu…
 = 
	`gô_wrôe_åì
();

1162  
˛ón
;

1163 
	}
}

1165 
commô_li°
 *
	$ªvî£_commô_li°
(
commô_li°
 *
li°
)

1167 
commô_li°
 *
√xt
 = 
NULL
, *
cuºít
, *
backup
;

1168 
cuºít
 = 
li°
; cuºít; cuºíà
backup
) {

1169 
backup
 = 
cuºít
->
√xt
;

1170 
cuºít
->
√xt
 =Çext;

1171 
√xt
 = 
cuºít
;

1173  
√xt
;

1174 
	}
}

1180 
	$mîge
(
commô
 *
h1
,

1181 
commô
 *
h2
,

1182 c⁄° *
bønch1
,

1183 c⁄° *
bønch2
,

1184 
commô_li°
 *
ˇ
,

1185 
commô
 **
ªsu…
)

1187 
commô_li°
 *
ôî
;

1188 
commô
 *
mîged_comm⁄_™˚°‹s
;

1189 
åì
 *
mπªe
;

1190 
˛ón
;

1192 i‡(
	`show
(4)) {

1193 
	`ouçut
(4, "Merging:");

1194 
	`ouçut_commô_tôÀ
(
h1
);

1195 
	`ouçut_commô_tôÀ
(
h2
);

1198 i‡(!
ˇ
) {

1199 
ˇ
 = 
	`gë_mîge_ba£s
(
h1
, 
h2
, 1);

1200 
ˇ
 = 
	`ªvî£_commô_li°
(ca);

1203 i‡(
	`show
(5)) {

1204 
	`ouçut
(5, "found %u comm⁄án˚°‹(s):", 
	`commô_li°_cou¡
(
ˇ
));

1205 
ôî
 = 
ˇ
; iãr; iã∏ôî->
√xt
)

1206 
	`ouçut_commô_tôÀ
(
ôî
->
ôem
);

1209 
mîged_comm⁄_™˚°‹s
 = 
	`p›_commô
(&
ˇ
);

1210 i‡(
mîged_comm⁄_™˚°‹s
 =
NULL
) {

1212 
åì
 *åì = 
	`xˇŒoc
(1, (tree));

1214 
åì
->
obje˘
.
∑r£d
 = 1;

1215 
åì
->
obje˘
.
ty≥
 = 
OBJ_TREE
;

1216 
	`¥ëíd_sha1_fûe
(
NULL
, 0, 
åì_ty≥
, 
åì
->
obje˘
.
sha1
);

1217 
mîged_comm⁄_™˚°‹s
 = 
	`make_vútuÆ_commô
(
åì
, "ancestor");

1220 
ôî
 = 
ˇ
; iãr; iã∏ôî->
√xt
) {

1221 
ˇŒ_dïth
++;

1229 
	`disˇrd_ˇche
();

1230 
	`mîge
(
mîged_comm⁄_™˚°‹s
, 
ôî
->
ôem
,

1233 
NULL
,

1234 &
mîged_comm⁄_™˚°‹s
);

1235 
ˇŒ_dïth
--;

1237 i‡(!
mîged_comm⁄_™˚°‹s
)

1238 
	`dõ
("mergeÑeturnedÇo commit");

1241 
	`disˇrd_ˇche
();

1242 i‡(!
ˇŒ_dïth
) {

1243 
	`ªad_ˇche
();

1244 
ödex_⁄ly
 = 0;

1246 
ödex_⁄ly
 = 1;

1248 
˛ón
 = 
	`mîge_åìs
(
h1
->
åì
, 
h2
->åì, 
mîged_comm⁄_™˚°‹s
->tree,

1249 
bønch1
, 
bønch2
, &
mπªe
);

1251 i‡(
ödex_⁄ly
) {

1252 *
ªsu…
 = 
	`make_vútuÆ_commô
(
mπªe
, "mergedÅree");

1253 
	`commô_li°_ö£π
(
h1
, &(*
ªsu…
)->
∑ª¡s
);

1254 
	`commô_li°_ö£π
(
h2
, &(*
ªsu…
)->
∑ª¡s
->
√xt
);

1256 i‡(!
ˇŒ_dïth
 && 
do_¥ogªss
) {

1258 i‡(!
tŸÆ_˙t
)

1259 
tŸÆ_˙t
 = 1;

1260 
mîged_˙t
 = 
tŸÆ_˙t
;

1261 
¥ogªss_upd©e
 = 1;

1262 
	`di•œy_¥ogªss
();

1263 
	`Âutc
('\n', 
°dîr
);

1265 
	`Êush_ouçut
();

1266  
˛ón
;

1267 
	}
}

1269 c⁄° *
	$bëãr_bønch_«me
(c⁄° *
bønch
)

1271 
gôhód_ív
[8 + 40 + 1];

1272 *
«me
;

1274 i‡(
	`°æí
(
bønch
) != 40)

1275  
bønch
;

1276 
	`•rötf
(
gôhód_ív
, "GITHEAD_%s", 
bønch
);

1277 
«me
 = 
	`gëív
(
gôhód_ív
);

1278  
«me
 ?Çamê: 
bønch
;

1279 
	}
}

1281 
commô
 *
	$gë_ªf
(c⁄° *
ªf
)

1283 
sha1
[20];

1284 
obje˘
 *object;

1286 i‡(
	`gë_sha1
(
ªf
, 
sha1
))

1287 
	`dõ
("CouldÇŸÑesﬁvêª‡'%s'", 
ªf
);

1288 
obje˘
 = 
	`dîef_èg
(
	`∑r£_obje˘
(
sha1
), 
ªf
, 
	`°æí
(ref));

1289 i‡(
obje˘
->
ty≥
 =
OBJ_TREE
)

1290  
	`make_vútuÆ_commô
((
åì
*)
obje˘
,

1291 
	`bëãr_bønch_«me
(
ªf
));

1292 i‡(
obje˘
->
ty≥
 !
OBJ_COMMIT
)

1293  
NULL
;

1294 i‡(
	`∑r£_commô
((
commô
 *)
obje˘
))

1295 
	`dõ
("CouldÇŸÖ¨£ commô '%s'", 
	`sha1_to_hex
(
obje˘
->
sha1
));

1296  (
commô
 *)
obje˘
;

1297 
	}
}

1299 
	$mîge_c⁄fig
(c⁄° *
v¨
, c⁄° *
vÆue
)

1301 i‡(!
	`°rˇ£cmp
(
v¨
, "merge.verbosity")) {

1302 
vîbosôy
 = 
	`gô_c⁄fig_öt
(
v¨
, 
vÆue
);

1305  
	`gô_deÁu…_c⁄fig
(
v¨
, 
vÆue
);

1306 
	}
}

1308 
	$maö
(
¨gc
, *
¨gv
[])

1310 c⁄° *
ba£s
[20];

1311 
ba£s_cou¡
 = 0;

1312 
i
, 
˛ón
;

1313 c⁄° *
bønch1
, *
bønch2
;

1314 
commô
 *
ªsu…
, *
h1
, *
h2
;

1315 
commô_li°
 *
ˇ
 = 
NULL
;

1316 
lock_fûe
 *
lock
 = 
	`xˇŒoc
(1, (lock_file));

1317 
ödex_fd
;

1319 
	`gô_c⁄fig
(
mîge_c⁄fig
);

1320 i‡(
	`gëív
("GIT_MERGE_VERBOSITY"))

1321 
vîbosôy
 = 
	`°πﬁ
(
	`gëív
("GIT_MERGE_VERBOSITY"), 
NULL
, 10);

1323 i‡(
¨gc
 < 4)

1324 
	`dõ
("Ußge: %†<ba£>... -- <hód> <ªmŸe> ...\n", 
¨gv
[0]);

1326 
i
 = 1; i < 
¨gc
; ++i) {

1327 i‡(!
	`°rcmp
(
¨gv
[
i
], "--"))

1329 i‡(
ba£s_cou¡
 < (
ba£s
)/(*bases))

1330 
ba£s
[
ba£s_cou¡
++] = 
¨gv
[
i
];

1332 i‡(
¨gc
 - 
i
 != 3)

1333 
	`dõ
("Not handlingánything otherÅhanÅwo heads merge.");

1334 i‡(
vîbosôy
 >= 5) {

1335 
buf„r_ouçut
 = 0;

1336 
do_¥ogªss
 = 0;

1339 
do_¥ogªss
 = 
	`ißây
(1);

1341 
bønch1
 = 
¨gv
[++
i
];

1342 
bønch2
 = 
¨gv
[++
i
];

1344 
h1
 = 
	`gë_ªf
(
bønch1
);

1345 
h2
 = 
	`gë_ªf
(
bønch2
);

1347 
bønch1
 = 
	`bëãr_bønch_«me
(branch1);

1348 
bønch2
 = 
	`bëãr_bønch_«me
(branch2);

1350 i‡(
do_¥ogªss
)

1351 
	`£tup_¥ogªss_sig«l
();

1352 i‡(
	`show
(3))

1353 
	`¥ötf
("Mîgög %†wôh %s\n", 
bønch1
, 
bønch2
);

1355 
ödex_fd
 = 
	`hﬁd_lock_fûe_f‹_upd©e
(
lock
, 
	`gë_ödex_fûe
(), 1);

1357 
i
 = 0; i < 
ba£s_cou¡
; i++) {

1358 
commô
 *
™˚°‹
 = 
	`gë_ªf
(
ba£s
[
i
]);

1359 
ˇ
 = 
	`commô_li°_ö£π
(
™˚°‹
, &ca);

1361 
˛ón
 = 
	`mîge
(
h1
, 
h2
, 
bønch1
, 
bønch2
, 
ˇ
, &
ªsu…
);

1363 i‡(
a˘ive_ˇche_ch™ged
 &&

1364 (
	`wrôe_ˇche
(
ödex_fd
, 
a˘ive_ˇche
, 
a˘ive_ƒ
) ||

1365 
	`˛o£
(
ödex_fd
Ë|| 
	`commô_lock_fûe
(
lock
)))

1366 
	`dõ
 ("u«bÀÅÿwrôê%s", 
	`gë_ödex_fûe
());

1368  
˛ón
 ? 0: 1;

1369 
	}
}

	@merge-tree.c

1 
	~"ˇche.h
"

2 
	~"åì-wÆk.h
"

3 
	~"xdiff-öãrÁ˚.h
"

4 
	~"blob.h
"

6 c⁄° 
	gmîge_åì_ußge
[] = "git-merge-tree <base-tree> <branch1> <branch2>";

7 
	gªsﬁve_dúe˘‹õs
 = 1;

9 
	smîge_li°
 {

10 
mîge_li°
 *
	m√xt
;

11 
mîge_li°
 *
	mlök
;

13 
	m°age
 : 2,

14 
	mÊags
 : 30;

15 
	mmode
;

16 c⁄° *
	m∑th
;

17 
blob
 *
	mblob
;

20 
mîge_li°
 *
	gmîge_ªsu…
, **
	gmîge_ªsu…_íd
 = &
mîge_ªsu…
;

22 
	$add_mîge_íåy
(
mîge_li°
 *
íåy
)

24 *
mîge_ªsu…_íd
 = 
íåy
;

25 
mîge_ªsu…_íd
 = &
íåy
->
√xt
;

26 
	}
}

28 
mîge_åìs
(
åì_desc
 
t
[3], c⁄° *
ba£
);

30 c⁄° *
	$ex∂™©i⁄
(
mîge_li°
 *
íåy
)

32 
íåy
->
°age
) {

38 i‡(
íåy
->
lök
)

44 
íåy
 =É¡ry->
lök
;

45 i‡(!
íåy
)

48 i‡(
íåy
->
lök
)

51 i‡(
íåy
->
°age
 == 3)

54 
	}
}

56 *
mîge_fûe
(
blob
 *, blob *, blob *, *);

58 *
	$ªsu…
(
mîge_li°
 *
íåy
, *
size
)

60 
ty≥
[20];

61 
blob
 *
ba£
, *
our
, *
theú
;

63 i‡(!
íåy
->
°age
)

64  
	`ªad_sha1_fûe
(
íåy
->
blob
->
obje˘
.
sha1
, 
ty≥
, 
size
);

65 
ba£
 = 
NULL
;

66 i‡(
íåy
->
°age
 == 1) {

67 
ba£
 = 
íåy
->
blob
;

68 
íåy
 =É¡ry->
lök
;

70 
our
 = 
NULL
;

71 i‡(
íåy
 &&É¡ry->
°age
 == 2) {

72 
our
 = 
íåy
->
blob
;

73 
íåy
 =É¡ry->
lök
;

75 
theú
 = 
NULL
;

76 i‡(
íåy
)

77 
theú
 = 
íåy
->
blob
;

78  
	`mîge_fûe
(
ba£
, 
our
, 
theú
, 
size
);

79 
	}
}

81 *
	$‹igö
(
mîge_li°
 *
íåy
, *
size
)

83 
ty≥
[20];

84 
íåy
) {

85 i‡(
íåy
->
°age
 == 2)

86  
	`ªad_sha1_fûe
(
íåy
->
blob
->
obje˘
.
sha1
, 
ty≥
, 
size
);

87 
íåy
 =É¡ry->
lök
;

89  
NULL
;

90 
	}
}

92 
	$show_outf
(*
¥iv_
, 
mmbuf„r_t
 *
mb
, 
nbuf
)

94 
i
;

95 
i
 = 0; i < 
nbuf
; i++)

96 
	`¥ötf
("%.*s", (Ë
mb
[
i
].
size
, mb[i].
±r
);

98 
	}
}

100 
	$show_diff
(
mîge_li°
 *
íåy
)

102 
size
;

103 
mmfûe_t
 
§c
, 
d°
;

104 
xµ¨am_t
 
xµ
;

105 
xdemôc⁄f_t
 
xecfg
;

106 
xdemôcb_t
 
ecb
;

108 
xµ
.
Êags
 = 
XDF_NEED_MINIMAL
;

109 
xecfg
.
˘xÀn
 = 3;

110 
xecfg
.
Êags
 = 0;

111 
ecb
.
outf
 = 
show_outf
;

112 
ecb
.
¥iv
 = 
NULL
;

114 
§c
.
±r
 = 
	`‹igö
(
íåy
, &
size
);

115 i‡(!
§c
.
±r
)

116 
size
 = 0;

117 
§c
.
size
 = size;

118 
d°
.
±r
 = 
	`ªsu…
(
íåy
, &
size
);

119 i‡(!
d°
.
±r
)

120 
size
 = 0;

121 
d°
.
size
 = size;

122 
	`xdl_diff
(&
§c
, &
d°
, &
xµ
, &
xecfg
, &
ecb
);

123 
	`‰ì
(
§c
.
±r
);

124 
	`‰ì
(
d°
.
±r
);

125 
	}
}

127 
	$show_ªsu…_li°
(
mîge_li°
 *
íåy
)

129 
	`¥ötf
("%s\n", 
	`ex∂™©i⁄
(
íåy
));

131 
mîge_li°
 *
lök
 = 
íåy
->link;

132 c⁄° *
desc
[4] = { "result", "base", "our", "their" };

133 
	`¥ötf
(" %-6†%ÿ%†%s\n", 
desc
[
íåy
->
°age
],É¡ry->
mode
, 
	`sha1_to_hex
”¡ry->
blob
->
obje˘
.
sha1
),É¡ry->
∑th
);

134 
íåy
 = 
lök
;

135 } 
íåy
);

136 
	}
}

138 
	$show_ªsu…
()

140 
mîge_li°
 *
wÆk
;

142 
wÆk
 = 
mîge_ªsu…
;

143 
wÆk
) {

144 
	`show_ªsu…_li°
(
wÆk
);

145 
	`show_diff
(
wÆk
);

146 
wÆk
 = wÆk->
√xt
;

148 
	}
}

151 
	$ßme_íåy
(
«me_íåy
 *
a
, «me_íåy *
b
)

153  
a
->
sha1
 &&

154 
b
->
sha1
 &&

155 !
	`hashcmp
(
a
->
sha1
, 
b
->sha1) &&

156 
a
->
mode
 =
b
->mode;

157 
	}
}

159 
mîge_li°
 *
	$¸óã_íåy
(
°age
, 
mode
, c⁄° *
sha1
, c⁄° *
∑th
)

161 
mîge_li°
 *
ªs
 = 
	`xmÆloc
((*res));

163 
	`mem£t
(
ªs
, 0, (*res));

164 
ªs
->
°age
 = stage;

165 
ªs
->
∑th
 =Öath;

166 
ªs
->
mode
 = mode;

167 
ªs
->
blob
 = 
	`lookup_blob
(
sha1
);

168  
ªs
;

169 
	}
}

171 
	$ªsﬁve
(c⁄° *
ba£
, 
«me_íåy
 *
bønch1
, «me_íåy *
ªsu…
)

173 
mîge_li°
 *
‹ig
, *
föÆ
;

174 c⁄° *
∑th
;

177 i‡(!
bønch1
)

180 
∑th
 = 
	`x°rdup
(
	`mk∑th
("%s%s", 
ba£
, 
ªsu…
->path));

181 
‹ig
 = 
	`¸óã_íåy
(2, 
bønch1
->
mode
, bønch1->
sha1
, 
∑th
);

182 
föÆ
 = 
	`¸óã_íåy
(0, 
ªsu…
->
mode
,Ñesu…->
sha1
, 
∑th
);

184 
föÆ
->
lök
 = 
‹ig
;

186 
	`add_mîge_íåy
(
föÆ
);

187 
	}
}

189 
	$uƒesﬁved_dúe˘‹y
(c⁄° *
ba£
, 
«me_íåy
 
n
[3])

191 
ba£Àn
;

192 *
√wba£
;

193 
«me_íåy
 *
p
;

194 
åì_desc
 
t
[3];

195 *
buf0
, *
buf1
, *
buf2
;

197 i‡(!
ªsﬁve_dúe˘‹õs
)

199 
p
 = 
n
;

200 i‡(!
p
->
mode
) {

201 
p
++;

202 i‡(!
p
->
mode
)

203 
p
++;

205 i‡(!
	`S_ISDIR
(
p
->
mode
))

207 
ba£Àn
 = 
	`°æí
(
ba£
);

208 
√wba£
 = 
	`xmÆloc
(
ba£Àn
 + 
p
->
∑thÀn
 + 2);

209 
	`mem˝y
(
√wba£
, 
ba£
, 
ba£Àn
);

210 
	`mem˝y
(
√wba£
 + 
ba£Àn
, 
p
->
∑th
,Ö->
∑thÀn
);

211 
	`mem˝y
(
√wba£
 + 
ba£Àn
 + 
p
->
∑thÀn
, "/", 2);

213 
buf0
 = 
	`fûl_åì_des¸ùt‹
(
t
+0, 
n
[0].
sha1
);

214 
buf1
 = 
	`fûl_åì_des¸ùt‹
(
t
+1, 
n
[1].
sha1
);

215 
buf2
 = 
	`fûl_åì_des¸ùt‹
(
t
+2, 
n
[2].
sha1
);

216 
	`mîge_åìs
(
t
, 
√wba£
);

218 
	`‰ì
(
buf0
);

219 
	`‰ì
(
buf1
);

220 
	`‰ì
(
buf2
);

221 
	`‰ì
(
√wba£
);

223 
	}
}

226 
mîge_li°
 *
	$lök_íåy
(
°age
, c⁄° *
ba£
, 
«me_íåy
 *
n
, 
mîge_li°
 *
íåy
)

228 c⁄° *
∑th
;

229 
mîge_li°
 *
lök
;

231 i‡(!
n
->
mode
)

232  
íåy
;

233 i‡(
íåy
)

234 
∑th
 = 
íåy
->path;

236 
∑th
 = 
	`x°rdup
(
	`mk∑th
("%s%s", 
ba£
, 
n
->path));

237 
lök
 = 
	`¸óã_íåy
(
°age
, 
n
->
mode
,Ç->
sha1
, 
∑th
);

238 
lök
->lök = 
íåy
;

239  
lök
;

240 
	}
}

242 
	$uƒesﬁved
(c⁄° *
ba£
, 
«me_íåy
 
n
[3])

244 
mîge_li°
 *
íåy
 = 
NULL
;

246 i‡(
	`uƒesﬁved_dúe˘‹y
(
ba£
, 
n
))

254 
íåy
 = 
	`lök_íåy
(3, 
ba£
, 
n
 + 2,Éntry);

255 
íåy
 = 
	`lök_íåy
(2, 
ba£
, 
n
 + 1,Éntry);

256 
íåy
 = 
	`lök_íåy
(1, 
ba£
, 
n
 + 0,Éntry);

258 
	`add_mîge_íåy
(
íåy
);

259 
	}
}

290 
	$thªeway_ˇŒback
(
n
, 
mask
, 
«me_íåy
 *
íåy
, c⁄° *
ba£
)

293 i‡(
	`ßme_íåy
(
íåy
+1,Éntry+2)) {

294 i‡(
íåy
[0].
sha1
) {

295 
	`ªsﬁve
(
ba£
, 
NULL
, 
íåy
+1);

300 i‡(
	`ßme_íåy
(
íåy
+0,Éntry+1)) {

301 i‡(
íåy
[2].
sha1
 && !
	`S_ISDIR
”¡ry[2].
mode
)) {

302 
	`ªsﬁve
(
ba£
, 
íåy
+1,Éntry+2);

307 i‡(
	`ßme_íåy
(
íåy
+0,Éntry+2)) {

308 i‡(
íåy
[1].
sha1
 && !
	`S_ISDIR
”¡ry[1].
mode
)) {

309 
	`ªsﬁve
(
ba£
, 
NULL
, 
íåy
+1);

314 
	`uƒesﬁved
(
ba£
, 
íåy
);

315 
	}
}

317 
	$mîge_åìs
(
åì_desc
 
t
[3], c⁄° *
ba£
)

319 
	`åavî£_åìs
(3, 
t
, 
ba£
, 
thªeway_ˇŒback
);

320 
	}
}

322 *
	$gë_åì_des¸ùt‹
(
åì_desc
 *
desc
, c⁄° *
ªv
)

324 
sha1
[20];

325 *
buf
;

327 i‡(
	`gë_sha1
(
ªv
, 
sha1
))

328 
	`dõ
("unknow¿ªv %s", 
ªv
);

329 
buf
 = 
	`fûl_åì_des¸ùt‹
(
desc
, 
sha1
);

330 i‡(!
buf
)

331 
	`dõ
("%†i†nŸáÅªe", 
ªv
);

332  
buf
;

333 
	}
}

335 
	$maö
(
¨gc
, **
¨gv
)

337 
åì_desc
 
t
[3];

338 *
buf1
, *
buf2
, *
buf3
;

340 i‡(
¨gc
 != 4)

341 
	`ußge
(
mîge_åì_ußge
);

343 
	`£tup_gô_dúe˘‹y
();

345 
buf1
 = 
	`gë_åì_des¸ùt‹
(
t
+0, 
¨gv
[1]);

346 
buf2
 = 
	`gë_åì_des¸ùt‹
(
t
+1, 
¨gv
[2]);

347 
buf3
 = 
	`gë_åì_des¸ùt‹
(
t
+2, 
¨gv
[3]);

348 
	`mîge_åìs
(
t
, "");

349 
	`‰ì
(
buf1
);

350 
	`‰ì
(
buf2
);

351 
	`‰ì
(
buf3
);

353 
	`show_ªsu…
();

355 
	}
}

	@mktag.c

1 
	~"ˇche.h
"

2 
	~"èg.h
"

22 
	#MAXSIZE
 (8192)

	)

27 
	$vîify_obje˘
(*
sha1
, c⁄° *
ex≥˘ed_ty≥
)

29 
ªt
 = -1;

30 
ty≥
[100];

31 
size
;

32 *
buf„r
 = 
	`ªad_sha1_fûe
(
sha1
, 
ty≥
, &
size
);

34 i‡(
buf„r
) {

35 i‡(!
	`°rcmp
(
ty≥
, 
ex≥˘ed_ty≥
))

36 
ªt
 = 
	`check_sha1_sig«tuª
(
sha1
, 
buf„r
, 
size
, 
ty≥
);

37 
	`‰ì
(
buf„r
);

39  
ªt
;

40 
	}
}

42 #ifde‡
NO_C99_FORMAT


43 
	#PD_FMT
 "%d"

	)

45 
	#PD_FMT
 "%td"

	)

48 
	$vîify_èg
(*
buf„r
, 
size
)

50 
ty≥Àn
;

51 
ty≥
[20];

52 
sha1
[20];

53 c⁄° *
obje˘
, *
ty≥_löe
, *
èg_löe
, *
èggî_löe
;

55 i‡(
size
 < 64)

56  
	`îr‹
("wanna fool me ? you obviously gotÅhe size wrong !");

58 
buf„r
[
size
] = 0;

61 
obje˘
 = 
buf„r
;

62 i‡(
	`memcmp
(
obje˘
, "object ", 7))

63  
	`îr‹
("char%d: doesÇot start with \"object \"", 0);

65 i‡(
	`gë_sha1_hex
(
obje˘
 + 7, 
sha1
))

66  
	`îr‹
("char%d: couldÇot get SHA1 hash", 7);

69 
ty≥_löe
 = 
obje˘
 + 48;

70 i‡(
	`memcmp
(
ty≥_löe
 - 1, "\ntype ", 6))

71  
	`îr‹
("char%d: couldÇot find \"\\ntype \"", 47);

74 
èg_löe
 = 
	`°rchr
(
ty≥_löe
, '\n');

75 i‡(!
èg_löe
)

76  
	`îr‹
("ch¨" 
PD_FMT
 ": couldÇŸ födÇexà\"\\n\"", 
ty≥_löe
 - 
buf„r
);

77 
èg_löe
++;

78 i‡(
	`memcmp
(
èg_löe
, "tag ", 4) ||Åag_line[4] == '\n')

79  
	`îr‹
("ch¨" 
PD_FMT
 ":Çÿ\"èg \" found", 
èg_löe
 - 
buf„r
);

82 
ty≥Àn
 = 
èg_löe
 - 
ty≥_löe
 - 
	`°æí
("type \n");

83 i‡(
ty≥Àn
 >(
ty≥
))

84  
	`îr‹
("ch¨" 
PD_FMT
 ":Åy≥Åoÿl⁄g", 
ty≥_löe
+5 - 
buf„r
);

86 
	`mem˝y
(
ty≥
, 
ty≥_löe
+5, 
ty≥Àn
);

87 
ty≥
[
ty≥Àn
] = 0;

90 i‡(
	`vîify_obje˘
(
sha1
, 
ty≥
))

91  
	`îr‹
("ch¨%d: couldÇŸ vîify obje˘ %s", 7, 
	`sha1_to_hex
(
sha1
));

94 
èg_löe
 += 4;

96 
c
 = *
èg_löe
++;

97 i‡(
c
 == '\n')

99 i‡(
c
 > ' ')

101  
	`îr‹
("ch¨" 
PD_FMT
 ": couldÇŸ vîifyÅagÇame", 
èg_löe
 - 
buf„r
);

105 
èggî_löe
 = 
èg_löe
;

107 i‡(
	`memcmp
(
èggî_löe
, "tagger", 6) || (tagger_line[6] == '\n'))

108  
	`îr‹
("ch¨" 
PD_FMT
 ": couldÇŸ föd \"èggî\"", 
èggî_löe
 - 
buf„r
);

115 
	}
}

117 #unde‡
PD_FMT


119 
	$maö
(
¨gc
, **
¨gv
)

121 
size
 = 4096;

122 *
buf„r
 = 
	`xmÆloc
(
size
);

123 
ªsu…_sha1
[20];

125 i‡(
¨gc
 != 1)

126 
	`ußge
("git-mktag < signaturefile");

128 
	`£tup_gô_dúe˘‹y
();

130 i‡(
	`ªad_pùe
(0, &
buf„r
, &
size
)) {

131 
	`‰ì
(
buf„r
);

132 
	`dõ
("couldÇotÑead from stdin");

137 i‡(
	`vîify_èg
(
buf„r
, 
size
) < 0)

138 
	`dõ
("invalidÅag signature file");

140 i‡(
	`wrôe_sha1_fûe
(
buf„r
, 
size
, 
èg_ty≥
, 
ªsu…_sha1
) < 0)

141 
	`dõ
("unableÅo writeÅag file");

143 
	`‰ì
(
buf„r
);

145 
	`¥ötf
("%s\n", 
	`sha1_to_hex
(
ªsu…_sha1
));

147 
	}
}

	@mktree.c

6 
	~"ˇche.h
"

7 
	~"°rbuf.h
"

8 
	~"quŸe.h
"

9 
	~"åì.h
"

11 
	såìít
 {

12 
	mmode
;

13 
	msha1
[20];

14 
	mÀn
;

15 
	m«me
[
FLEX_ARRAY
];

16 } **
	gíåõs
;

17 
	gÆloc
, 
	gu£d
;

19 
	$≠≥nd_to_åì
(
mode
, *
sha1
, *
∑th
)

21 
åìít
 *
ít
;

22 
Àn
 = 
	`°æí
(
∑th
);

23 i‡(
	`°rchr
(
∑th
, '/'))

24 
	`dõ
("∑th %†c⁄èö†¶ash", 
∑th
);

26 i‡(
Æloc
 <
u£d
) {

27 
Æloc
 = 
	`Æloc_ƒ
(
u£d
);

28 
íåõs
 = 
	`xªÆloc
”¡rõs, (*íåõsË* 
Æloc
);

30 
ít
 = 
íåõs
[
u£d
++] = 
	`xmÆloc
((**íåõsË+ 
Àn
 + 1);

31 
ít
->
mode
 = mode;

32 
ít
->
Àn
 =Üen;

33 
	`hash˝y
(
ít
->
sha1
, sha1);

34 
	`mem˝y
(
ít
->
«me
, 
∑th
, 
Àn
+1);

35 
	}
}

37 
	$ít_com∑ª
(c⁄° *
a_
, c⁄° *
b_
)

39 
åìít
 *
a
 = *(åìíà**)
a_
;

40 
åìít
 *
b
 = *(åìíà**)
b_
;

41  
	`ba£_«me_com∑ª
(
a
->
«me
,á->
Àn
,á->
mode
,

42 
b
->
«me
, b->
Àn
, b->
mode
);

43 
	}
}

45 
	$wrôe_åì
(*
sha1
)

47 *
buf„r
;

48 
size
, 
off£t
;

49 
i
;

51 
	`qs‹t
(
íåõs
, 
u£d
, (*íåõs), 
ít_com∑ª
);

52 
size
 = 
i
 = 0; i < 
u£d
; i++)

53 
size
 +32 + 
íåõs
[
i
]->
Àn
;

54 
buf„r
 = 
	`xmÆloc
(
size
);

55 
off£t
 = 0;

57 
i
 = 0; i < 
u£d
; i++) {

58 
åìít
 *
ít
 = 
íåõs
[
i
];

60 i‡(
off£t
 + 
ít
->
Àn
 + 100 < 
size
) {

61 
size
 = 
	`Æloc_ƒ
(
off£t
 + 
ít
->
Àn
 + 100);

62 
buf„r
 = 
	`xªÆloc
(buf„r, 
size
);

64 
off£t
 +
	`•rötf
(
buf„r
 + off£t, "%ÿ", 
ít
->
mode
);

65 
off£t
 +
	`•rötf
(
buf„r
 + off£t, "%s", 
ít
->
«me
);

66 
buf„r
[
off£t
++] = 0;

67 
	`hash˝y
((*)
buf„r
 + 
off£t
, 
ít
->
sha1
);

68 
off£t
 += 20;

70 
	`wrôe_sha1_fûe
(
buf„r
, 
off£t
, 
åì_ty≥
, 
sha1
);

71 
	}
}

73 c⁄° 
	gmkåì_ußge
[] = "git-mktree [-z]";

75 
	$maö
(
ac
, **
av
)

77 
°rbuf
 
sb
;

78 
sha1
[20];

79 
löe_ãrmö©i⁄
 = '\n';

81 
	`£tup_gô_dúe˘‹y
();

83 (1 < 
ac
Ë&& 
av
[1][0] == '-') {

84 *
¨g
 = 
av
[1];

85 i‡(!
	`°rcmp
("-z", 
¨g
))

86 
löe_ãrmö©i⁄
 = 0;

88 
	`ußge
(
mkåì_ußge
);

89 
ac
--;

90 
av
++;

93 
	`°rbuf_öô
(&
sb
);

95 
Àn
;

96 *
±r
, *
¡r
;

97 
mode
;

98 
ty≥
[20];

99 *
∑th
;

101 
	`ªad_löe
(&
sb
, 
°dö
, 
löe_ãrmö©i⁄
);

102 i‡(
sb
.
eof
)

104 
Àn
 = 
sb
.len;

105 
±r
 = 
sb
.
buf
;

109 
mode
 = 
	`°πoul
(
±r
, &
¡r
, 8);

110 i‡(
±r
 =
¡r
 || !ntr || *ntr != ' ')

111 
	`dõ
("öpuàf‹m©Éº‹: %s", 
sb
.
buf
);

112 
±r
 = 
¡r
 + 1;

113 
¡r
 = 
	`°rchr
(
±r
, ' ');

114 i‡(!
¡r
 || 
sb
.
buf
 + 
Àn
 <=Çtr + 41 ||

115 
¡r
[41] != '\t' ||

116 
	`gë_sha1_hex
(
¡r
 + 1, 
sha1
))

117 
	`dõ
("öpuàf‹m©Éº‹: %s", 
sb
.
buf
);

118 i‡(
	`sha1_obje˘_öfo
(
sha1
, 
ty≥
, 
NULL
))

119 
	`dõ
("obje˘ %†u«vaûabÀ", 
	`sha1_to_hex
(
sha1
));

120 *
¡r
++ = 0;

121 i‡(
	`°rcmp
(
±r
, 
ty≥
))

122 
	`dõ
("obje˘Åy≥ %†mism©ch (%s)", 
±r
, 
ty≥
);

123 
¡r
 += 41;

124 i‡(
löe_ãrmö©i⁄
 && 
¡r
[0] == '"')

125 
∑th
 = 
	`unquŸe_c_°yÀ
(
¡r
, 
NULL
);

127 
∑th
 = 
¡r
;

129 
	`≠≥nd_to_åì
(
mode
, 
sha1
, 
∑th
);

131 i‡(
∑th
 !
¡r
)

132 
	`‰ì
(
∑th
);

134 
	`wrôe_åì
(
sha1
);

135 
	`puts
(
	`sha1_to_hex
(
sha1
));

136 
	`exô
(0);

137 
	}
}

	@mozilla-sha1/sha1.c

36 
	~"sha1.h
"

38 
shaHashBlock
(
SHA_CTX
 *
˘x
);

40 
	$SHA1_Inô
(
SHA_CTX
 *
˘x
) {

41 
i
;

43 
˘x
->
ÀnW
 = 0;

44 
˘x
->
sizeHi
 = ctx->
sizeLo
 = 0;

48 
˘x
->
H
[0] = 0x67452301;

49 
˘x
->
H
[1] = 0xefcdab89;

50 
˘x
->
H
[2] = 0x98badcfe;

51 
˘x
->
H
[3] = 0x10325476;

52 
˘x
->
H
[4] = 0xc3d2e1f0;

54 
i
 = 0; i < 80; i++)

55 
˘x
->
W
[
i
] = 0;

56 
	}
}

59 
	$SHA1_Upd©e
(
SHA_CTX
 *
˘x
, c⁄° *
_d©aIn
, 
Àn
) {

60 c⁄° *
d©aIn
 = 
_d©aIn
;

61 
i
;

65 
i
 = 0; i < 
Àn
; i++) {

66 
˘x
->
W
[˘x->
ÀnW
 / 4] <<= 8;

67 
˘x
->
W
[˘x->
ÀnW
 / 4] |()
d©aIn
[
i
];

68 i‡((++
˘x
->
ÀnW
) % 64 == 0) {

69 
	`shaHashBlock
(
˘x
);

70 
˘x
->
ÀnW
 = 0;

72 
˘x
->
sizeLo
 += 8;

73 
˘x
->
sizeHi
 +(˘x->
sizeLo
 < 8);

75 
	}
}

78 
	$SHA1_FöÆ
(
hashout
[20], 
SHA_CTX
 *
˘x
) {

79 
∑d0x80
 = 0x80;

80 
∑d0x00
 = 0x00;

81 
∑dÀn
[8];

82 
i
;

86 
∑dÀn
[0] = ()((
˘x
->
sizeHi
 >> 24) & 255);

87 
∑dÀn
[1] = ()((
˘x
->
sizeHi
 >> 16) & 255);

88 
∑dÀn
[2] = ()((
˘x
->
sizeHi
 >> 8) & 255);

89 
∑dÀn
[3] = ()((
˘x
->
sizeHi
 >> 0) & 255);

90 
∑dÀn
[4] = ()((
˘x
->
sizeLo
 >> 24) & 255);

91 
∑dÀn
[5] = ()((
˘x
->
sizeLo
 >> 16) & 255);

92 
∑dÀn
[6] = ()((
˘x
->
sizeLo
 >> 8) & 255);

93 
∑dÀn
[7] = ()((
˘x
->
sizeLo
 >> 0) & 255);

94 
	`SHA1_Upd©e
(
˘x
, &
∑d0x80
, 1);

95 
˘x
->
ÀnW
 != 56)

96 
	`SHA1_Upd©e
(
˘x
, &
∑d0x00
, 1);

97 
	`SHA1_Upd©e
(
˘x
, 
∑dÀn
, 8);

101 
i
 = 0; i < 20; i++) {

102 
hashout
[
i
] = ()(
˘x
->
H
[i / 4] >> 24);

103 
˘x
->
H
[
i
 / 4] <<= 8;

109 
	`SHA1_Inô
(
˘x
);

110 
	}
}

113 
	#SHA_ROT
(
X
,
n
Ë(((XË<< (n)Ë| ((XË>> (32-“))))

	)

115 
	$shaHashBlock
(
SHA_CTX
 *
˘x
) {

116 
t
;

117 
A
,
B
,
C
,
D
,
E
,
TEMP
;

119 
t
 = 16;Å <= 79;Å++)

120 
˘x
->
W
[
t
] =

121 
	`SHA_ROT
(
˘x
->
W
[
t
-3] ^ ctx->W[t-8] ^ ctx->W[t-14] ^ ctx->W[t-16], 1);

123 
A
 = 
˘x
->
H
[0];

124 
B
 = 
˘x
->
H
[1];

125 
C
 = 
˘x
->
H
[2];

126 
D
 = 
˘x
->
H
[3];

127 
E
 = 
˘x
->
H
[4];

129 
t
 = 0;Å <= 19;Å++) {

130 
TEMP
 = 
	`SHA_ROT
(
A
,5Ë+ (((
C
^
D
)&
B
)^DË+ 
E
 + 
˘x
->
W
[
t
] + 0x5a827999;

131 
E
 = 
D
; D = 
C
; C = 
	`SHA_ROT
(
B
, 30); B = 
A
; A = 
TEMP
;

133 
t
 = 20;Å <= 39;Å++) {

134 
TEMP
 = 
	`SHA_ROT
(
A
,5Ë+ (
B
^
C
^
D
Ë+ 
E
 + 
˘x
->
W
[
t
] + 0x6ed9eba1;

135 
E
 = 
D
; D = 
C
; C = 
	`SHA_ROT
(
B
, 30); B = 
A
; A = 
TEMP
;

137 
t
 = 40;Å <= 59;Å++) {

138 
TEMP
 = 
	`SHA_ROT
(
A
,5Ë+ ((
B
&
C
)|(
D
&(B|C))Ë+ 
E
 + 
˘x
->
W
[
t
] + 0x8f1bbcdc;

139 
E
 = 
D
; D = 
C
; C = 
	`SHA_ROT
(
B
, 30); B = 
A
; A = 
TEMP
;

141 
t
 = 60;Å <= 79;Å++) {

142 
TEMP
 = 
	`SHA_ROT
(
A
,5Ë+ (
B
^
C
^
D
Ë+ 
E
 + 
˘x
->
W
[
t
] + 0xca62c1d6;

143 
E
 = 
D
; D = 
C
; C = 
	`SHA_ROT
(
B
, 30); B = 
A
; A = 
TEMP
;

146 
˘x
->
H
[0] +
A
;

147 
˘x
->
H
[1] +
B
;

148 
˘x
->
H
[2] +
C
;

149 
˘x
->
H
[3] +
D
;

150 
˘x
->
H
[4] +
E
;

151 
	}
}

	@mozilla-sha1/sha1.h

37 
	mH
[5];

38 
	mW
[80];

39 
	mÀnW
;

40 
	msizeHi
,
	msizeLo
;

41 } 
	tSHA_CTX
;

43 
SHA1_Inô
(
SHA_CTX
 *
˘x
);

44 
SHA1_Upd©e
(
SHA_CTX
 *
˘x
, c⁄° *
d©aIn
, 
Àn
);

45 
SHA1_FöÆ
(
hashout
[20], 
SHA_CTX
 *
˘x
);

	@object-refs.c

1 
	~"ˇche.h
"

2 
	~"obje˘.h
"

4 
	gåack_obje˘_ªfs
 = 0;

6 
	gªfs_hash_size
, 
	gƒ_obje˘_ªfs
;

7 
obje˘_ªfs
 **
	gªfs_hash
;

9 
	$hash_obj
(
obje˘
 *
obj
, 
n
)

11 
hash
 = *(*)
obj
->
sha1
;

12  
hash
 % 
n
;

13 
	}
}

15 
	$ö£π_ªf_hash
(
obje˘_ªfs
 *
ªf
, obje˘_ªf†**
hash
, 
size
)

17 
j
 = 
	`hash_obj
(
ªf
->
ba£
, 
size
);

19 
hash
[
j
]) {

20 
j
++;

21 i‡(
j
 >
size
)

22 
j
 = 0;

24 
hash
[
j
] = 
ªf
;

25 
	}
}

27 
	$grow_ªfs_hash
()

29 
i
;

30 
√w_hash_size
 = (
ªfs_hash_size
 + 1000) * 3 / 2;

31 
obje˘_ªfs
 **
√w_hash
;

33 
√w_hash
 = 
	`xˇŒoc
(
√w_hash_size
, (
obje˘_ªfs
 *));

34 
i
 = 0; i < 
ªfs_hash_size
; i++) {

35 
obje˘_ªfs
 *
ªf
 = 
ªfs_hash
[
i
];

36 i‡(!
ªf
)

38 
	`ö£π_ªf_hash
(
ªf
, 
√w_hash
, 
√w_hash_size
);

40 
	`‰ì
(
ªfs_hash
);

41 
ªfs_hash
 = 
√w_hash
;

42 
ªfs_hash_size
 = 
√w_hash_size
;

43 
	}
}

45 
	$add_obje˘_ªfs
(
obje˘
 *
obj
, 
obje˘_ªfs
 *
ªf
)

47 
ƒ
 = 
ƒ_obje˘_ªfs
 + 1;

49 i‡(
ƒ
 > 
ªfs_hash_size
 * 2 / 3)

50 
	`grow_ªfs_hash
();

51 
ªf
->
ba£
 = 
obj
;

52 
	`ö£π_ªf_hash
(
ªf
, 
ªfs_hash
, 
ªfs_hash_size
);

53 
ƒ_obje˘_ªfs
 = 
ƒ
;

54 
	}
}

56 
obje˘_ªfs
 *
	$lookup_obje˘_ªfs
(
obje˘
 *
obj
)

58 
obje˘_ªfs
 *
ªf
;

59 
j
;

62 i‡(!
ªfs_hash_size
)

63  
NULL
;

64 
j
 = 
	`hash_obj
(
obj
, 
ªfs_hash_size
);

65 (
ªf
 = 
ªfs_hash
[
j
]Ë!
NULL
) {

66 i‡(
ªf
->
ba£
 =
obj
)

68 
j
++;

69 i‡(
j
 >
ªfs_hash_size
)

70 
j
 = 0;

72  
ªf
;

73 
	}
}

75 
obje˘_ªfs
 *
	$Æloc_obje˘_ªfs
(
cou¡
)

77 
obje˘_ªfs
 *
ªfs
;

78 
size_t
 
size
 = (*
ªfs
Ë+ 
cou¡
*(
obje˘
 *);

80 
ªfs
 = 
	`xˇŒoc
(1, 
size
);

81 
ªfs
->
cou¡
 = count;

82  
ªfs
;

83 
	}
}

85 
	$com∑ª_obje˘_poöãrs
(c⁄° *
a
, c⁄° *
b
)

87 c⁄° 
obje˘
 * c⁄° *
∑
 = 
a
;

88 c⁄° 
obje˘
 * c⁄° *
pb
 = 
b
;

89 i‡(*
∑
 =*
pb
)

91 i‡(*
∑
 < *
pb
)

95 
	}
}

97 
	$£t_obje˘_ªfs
(
obje˘
 *
obj
, 
obje˘_ªfs
 *
ªfs
)

99 
i
, 
j
;

102 i‡(
ªfs
->
cou¡
 < 1) {

103 
	`‰ì
(
ªfs
);

108 
	`qs‹t
(
ªfs
->
ªf
,Ñefs->
cou¡
, (refs->ref[0]),

109 
com∑ª_obje˘_poöãrs
);

110 
i
 = 
j
 = 1; i < 
ªfs
->
cou¡
; i++) {

111 i‡(
ªfs
->
ªf
[
i
] !=Ñefs->ref[i - 1])

112 
ªfs
->
ªf
[
j
++] =Ñefs->ªf[
i
];

114 i‡(
j
 < 
ªfs
->
cou¡
) {

116 
size_t
 
size
 = (*
ªfs
Ë+ 
j
*(
obje˘
 *);

117 
ªfs
->
cou¡
 = 
j
;

118 
ªfs
 = 
	`xªÆloc
‘efs, 
size
);

121 
i
 = 0; i < 
ªfs
->
cou¡
; i++)

122 
ªfs
->
ªf
[
i
]->
u£d
 = 1;

123 
	`add_obje˘_ªfs
(
obj
, 
ªfs
);

124 
	}
}

126 
	$m¨k_ªachabÀ
(
obje˘
 *
obj
, 
mask
)

128 c⁄° 
obje˘_ªfs
 *
ªfs
;

130 i‡(!
åack_obje˘_ªfs
)

131 
	`dõ
("cannot doÑeachability with objectÑefsÅurned off");

133 i‡(
obj
->
Êags
 & 
mask
)

135 
obj
->
Êags
 |
mask
;

136 
ªfs
 = 
	`lookup_obje˘_ªfs
(
obj
);

137 i‡(
ªfs
) {

138 
i
;

139 
i
 = 0; i < 
ªfs
->
cou¡
; i++)

140 
	`m¨k_ªachabÀ
(
ªfs
->
ªf
[
i
], 
mask
);

142 
	}
}

	@object.c

1 
	~"ˇche.h
"

2 
	~"obje˘.h
"

3 
	~"blob.h
"

4 
	~"åì.h
"

5 
	~"commô.h
"

6 
	~"èg.h
"

8 
obje˘
 **
	gobj_hash
;

9 
	gƒ_objs
, 
	gobj_hash_size
;

11 
	$gë_max_obje˘_ödex
()

13  
obj_hash_size
;

14 
	}
}

16 
obje˘
 *
	$gë_ödexed_obje˘
(
idx
)

18  
obj_hash
[
idx
];

19 
	}
}

21 c⁄° *
	gty≥_«mes
[] = {

26 
	$hash_obj
(
obje˘
 *
obj
, 
n
)

28 
hash
 = *(*)
obj
->
sha1
;

29  
hash
 % 
n
;

30 
	}
}

32 
	$ö£π_obj_hash
(
obje˘
 *
obj
, obje˘ **
hash
, 
size
)

34 
j
 = 
	`hash_obj
(
obj
, 
size
);

36 
hash
[
j
]) {

37 
j
++;

38 i‡(
j
 >
size
)

39 
j
 = 0;

41 
hash
[
j
] = 
obj
;

42 
	}
}

44 
	$hashèbÀ_ödex
(c⁄° *
sha1
)

46 
i
;

47 
	`mem˝y
(&
i
, 
sha1
, ());

48  ()(
i
 % 
obj_hash_size
);

49 
	}
}

51 
obje˘
 *
	$lookup_obje˘
(c⁄° *
sha1
)

53 
i
;

54 
obje˘
 *
obj
;

56 i‡(!
obj_hash
)

57  
NULL
;

59 
i
 = 
	`hashèbÀ_ödex
(
sha1
);

60 (
obj
 = 
obj_hash
[
i
]Ë!
NULL
) {

61 i‡(!
	`hashcmp
(
sha1
, 
obj
->sha1))

63 
i
++;

64 i‡(
i
 =
obj_hash_size
)

65 
i
 = 0;

67  
obj
;

68 
	}
}

70 
	$grow_obje˘_hash
()

72 
i
;

73 
√w_hash_size
 = 
obj_hash_size
 < 32 ? 32 : 2 * obj_hash_size;

74 
obje˘
 **
√w_hash
;

76 
√w_hash
 = 
	`xˇŒoc
(
√w_hash_size
, (
obje˘
 *));

77 
i
 = 0; i < 
obj_hash_size
; i++) {

78 
obje˘
 *
obj
 = 
obj_hash
[
i
];

79 i‡(!
obj
)

81 
	`ö£π_obj_hash
(
obj
, 
√w_hash
, 
√w_hash_size
);

83 
	`‰ì
(
obj_hash
);

84 
obj_hash
 = 
√w_hash
;

85 
obj_hash_size
 = 
√w_hash_size
;

86 
	}
}

88 
	$¸óãd_obje˘
(c⁄° *
sha1
, 
obje˘
 *
obj
)

90 
obj
->
∑r£d
 = 0;

91 
obj
->
u£d
 = 0;

92 
obj
->
ty≥
 = 
OBJ_NONE
;

93 
obj
->
Êags
 = 0;

94 
	`hash˝y
(
obj
->
sha1
, sha1);

96 i‡(
obj_hash_size
 - 1 <
ƒ_objs
 * 2)

97 
	`grow_obje˘_hash
();

99 
	`ö£π_obj_hash
(
obj
, 
obj_hash
, 
obj_hash_size
);

100 
ƒ_objs
++;

101 
	}
}

103 
obje˘
 *
	$lookup_obje˘_ty≥
(c⁄° *
sha1
, c⁄° *
ty≥
)

105 i‡(!
ty≥
) {

106  
	`lookup_unknown_obje˘
(
sha1
);

107 } i‡(!
	`°rcmp
(
ty≥
, 
blob_ty≥
)) {

108  &
	`lookup_blob
(
sha1
)->
obje˘
;

109 } i‡(!
	`°rcmp
(
ty≥
, 
åì_ty≥
)) {

110  &
	`lookup_åì
(
sha1
)->
obje˘
;

111 } i‡(!
	`°rcmp
(
ty≥
, 
commô_ty≥
)) {

112  &
	`lookup_commô
(
sha1
)->
obje˘
;

113 } i‡(!
	`°rcmp
(
ty≥
, 
èg_ty≥
)) {

114  &
	`lookup_èg
(
sha1
)->
obje˘
;

116 
	`îr‹
("Unknow¿ty≥ %s", 
ty≥
);

117  
NULL
;

119 
	}
}

121 
	u™y_obje˘
 {

122 
obje˘
 
	mobje˘
;

123 
commô
 
	mcommô
;

124 
åì
 
	måì
;

125 
blob
 
	mblob
;

126 
èg
 
	mèg
;

129 
obje˘
 *
	$lookup_unknown_obje˘
(c⁄° *
sha1
)

131 
obje˘
 *
obj
 = 
	`lookup_obje˘
(
sha1
);

132 i‡(!
obj
) {

133 
™y_obje˘
 *
ªt
 = 
	`xˇŒoc
(1, (*ret));

134 
	`¸óãd_obje˘
(
sha1
, &
ªt
->
obje˘
);

135 
ªt
->
obje˘
.
ty≥
 = 
OBJ_NONE
;

136  &
ªt
->
obje˘
;

138  
obj
;

139 
	}
}

141 
obje˘
 *
	$∑r£_obje˘_buf„r
(c⁄° *
sha1
, c⁄° *
ty≥
, 
size
, *
buf„r
, *
óãn_p
)

143 
obje˘
 *
obj
;

144 
óãn
 = 0;

146 i‡(!
	`°rcmp
(
ty≥
, 
blob_ty≥
)) {

147 
blob
 *blob = 
	`lookup_blob
(
sha1
);

148 
	`∑r£_blob_buf„r
(
blob
, 
buf„r
, 
size
);

149 
obj
 = &
blob
->
obje˘
;

150 } i‡(!
	`°rcmp
(
ty≥
, 
åì_ty≥
)) {

151 
åì
 *åì = 
	`lookup_åì
(
sha1
);

152 
obj
 = &
åì
->
obje˘
;

153 i‡(!
åì
->
obje˘
.
∑r£d
) {

154 
	`∑r£_åì_buf„r
(
åì
, 
buf„r
, 
size
);

155 
óãn
 = 1;

157 } i‡(!
	`°rcmp
(
ty≥
, 
commô_ty≥
)) {

158 
commô
 *commô = 
	`lookup_commô
(
sha1
);

159 
	`∑r£_commô_buf„r
(
commô
, 
buf„r
, 
size
);

160 i‡(!
commô
->
buf„r
) {

161 
commô
->
buf„r
 = buffer;

162 
óãn
 = 1;

164 
obj
 = &
commô
->
obje˘
;

165 } i‡(!
	`°rcmp
(
ty≥
, 
èg_ty≥
)) {

166 
èg
 *èg = 
	`lookup_èg
(
sha1
);

167 
	`∑r£_èg_buf„r
(
èg
, 
buf„r
, 
size
);

168 
obj
 = &
èg
->
obje˘
;

170 
obj
 = 
NULL
;

172 *
óãn_p
 = 
óãn
;

173  
obj
;

174 
	}
}

176 
obje˘
 *
	$∑r£_obje˘
(c⁄° *
sha1
)

178 
size
;

179 
ty≥
[20];

180 
óãn
;

181 *
buf„r
 = 
	`ªad_sha1_fûe
(
sha1
, 
ty≥
, &
size
);

183 i‡(
buf„r
) {

184 
obje˘
 *
obj
;

185 i‡(
	`check_sha1_sig«tuª
(
sha1
, 
buf„r
, 
size
, 
ty≥
) < 0)

186 
	`¥ötf
("sha1 mism©ch %s\n", 
	`sha1_to_hex
(
sha1
));

188 
obj
 = 
	`∑r£_obje˘_buf„r
(
sha1
, 
ty≥
, 
size
, 
buf„r
, &
óãn
);

189 i‡(!
óãn
)

190 
	`‰ì
(
buf„r
);

191  
obj
;

193  
NULL
;

194 
	}
}

196 
obje˘_li°
 *
	$obje˘_li°_ö£π
(
obje˘
 *
ôem
,

197 
obje˘_li°
 **
li°_p
)

199 
obje˘_li°
 *
√w_li°
 = 
	`xmÆloc
((object_list));

200 
√w_li°
->
ôem
 = item;

201 
√w_li°
->
√xt
 = *
li°_p
;

202 *
li°_p
 = 
√w_li°
;

203  
√w_li°
;

204 
	}
}

206 
	$obje˘_li°_≠≥nd
(
obje˘
 *
ôem
,

207 
obje˘_li°
 **
li°_p
)

209 *
li°_p
) {

210 
li°_p
 = &((*li°_p)->
√xt
);

212 *
li°_p
 = 
	`xmÆloc
((
obje˘_li°
));

213 (*
li°_p
)->
√xt
 = 
NULL
;

214 (*
li°_p
)->
ôem
 = item;

215 
	}
}

217 
	$obje˘_li°_Àngth
(
obje˘_li°
 *
li°
)

219 
ªt
 = 0;

220 
li°
) {

221 
li°
 =Üi°->
√xt
;

222 
ªt
++;

224  
ªt
;

225 
	}
}

227 
	$obje˘_li°_c⁄èös
(
obje˘_li°
 *
li°
, 
obje˘
 *
obj
)

229 
li°
) {

230 i‡(
li°
->
ôem
 =
obj
)

232 
li°
 =Üi°->
√xt
;

235 
	}
}

237 
	$add_obje˘_¨øy
(
obje˘
 *
obj
, c⁄° *
«me
, 
obje˘_¨øy
 *
¨øy
)

239 
ƒ
 = 
¨øy
->nr;

240 
Æloc
 = 
¨øy
->alloc;

241 
obje˘_¨øy_íåy
 *
obje˘s
 = 
¨øy
->objects;

243 i‡(
ƒ
 >
Æloc
) {

244 
Æloc
 = (alloc + 32) * 2;

245 
obje˘s
 = 
	`xªÆloc
(obje˘s, 
Æloc
 * (*objects));

246 
¨øy
->
Æloc
 =álloc;

247 
¨øy
->
obje˘s
 = objects;

249 
obje˘s
[
ƒ
].
ôem
 = 
obj
;

250 
obje˘s
[
ƒ
].
«me
 =Çame;

251 
¨øy
->
ƒ
 = ++nr;

252 
	}
}

	@object.h

1 #i‚de‡
OBJECT_H


2 
	#OBJECT_H


	)

4 
	sobje˘_li°
 {

5 
obje˘
 *
	môem
;

6 
obje˘_li°
 *
	m√xt
;

9 
	sobje˘_ªfs
 {

10 
	mcou¡
;

11 
obje˘
 *
	mba£
;

12 
obje˘
 *
	mªf
[
FLEX_ARRAY
];

15 
	sobje˘_¨øy
 {

16 
	mƒ
;

17 
	mÆloc
;

18 
	sobje˘_¨øy_íåy
 {

19 
obje˘
 *
	môem
;

20 c⁄° *
	m«me
;

21 } *
	mobje˘s
;

24 
	#TYPE_BITS
 3

	)

25 
	#FLAG_BITS
 27

	)

30 
	sobje˘
 {

31 
	m∑r£d
 : 1;

32 
	mu£d
 : 1;

33 
	mty≥
 : 
TYPE_BITS
;

34 
	mÊags
 : 
FLAG_BITS
;

35 
	msha1
[20];

38 
åack_obje˘_ªfs
;

39 c⁄° *
ty≥_«mes
[9];

41 
gë_max_obje˘_ödex
();

42 
obje˘
 *
gë_ödexed_obje˘
();

44 
ölöe
 c⁄° *
	$ty≥«me
(
ty≥
)

46  
ty≥_«mes
[
ty≥
 > 
OBJ_BAD
 ? OBJ_BAD :Åype];

47 
	}
}

49 
obje˘_ªfs
 *
lookup_obje˘_ªfs
(
obje˘
 *);

52 
obje˘
 *
lookup_obje˘
(c⁄° *
sha1
);

55 
obje˘
 *
lookup_obje˘_ty≥
(c⁄° *
sha1
, c⁄° *
ty≥
);

57 
¸óãd_obje˘
(c⁄° *
sha1
, 
obje˘
 *
obj
);

60 
obje˘
 *
∑r£_obje˘
(c⁄° *
sha1
);

66 
obje˘
 *
∑r£_obje˘_buf„r
(c⁄° *
sha1
, c⁄° *
ty≥
, 
size
, *
buf„r
, *
óãn_p
);

69 
obje˘
 *
lookup_unknown_obje˘
(c⁄° *
sha1
);

71 
obje˘_ªfs
 *
Æloc_obje˘_ªfs
(
cou¡
);

72 
£t_obje˘_ªfs
(
obje˘
 *
obj
, 
obje˘_ªfs
 *
ªfs
);

74 
m¨k_ªachabÀ
(
obje˘
 *
obj
, 
mask
);

76 
obje˘_li°
 *
obje˘_li°_ö£π
(
obje˘
 *
ôem
,

77 
obje˘_li°
 **
li°_p
);

79 
obje˘_li°_≠≥nd
(
obje˘
 *
ôem
,

80 
obje˘_li°
 **
li°_p
);

82 
obje˘_li°_Àngth
(
obje˘_li°
 *
li°
);

84 
obje˘_li°_c⁄èös
(
obje˘_li°
 *
li°
, 
obje˘
 *
obj
);

87 
add_obje˘_¨øy
(
obje˘
 *
obj
, c⁄° *
«me
, 
obje˘_¨øy
 *
¨øy
);

	@pack-check.c

1 
	~"ˇche.h
"

2 
	~"∑ck.h
"

4 
	$vîify_∑ckfûe
(
∑cked_gô
 *
p
,

5 
∑ck_wödow
 **
w_curs
)

7 
ödex_size
 = 
p
->index_size;

8 *
ödex_ba£
 = 
p
->index_base;

9 
SHA_CTX
 
˘x
;

10 
sha1
[20];

11 
off£t
 = 0, 
∑ck_sig
 = 
p
->
∑ck_size
 - 20;

12 
ƒ_obje˘s
, 
îr
, 
i
;

20 
	`SHA1_Inô
(&
˘x
);

21 
off£t
 < 
∑ck_sig
) {

22 
ªmaöög
;

23 *
ö
 = 
	`u£_∑ck
(
p
, 
w_curs
, 
off£t
, &
ªmaöög
);

24 
off£t
 +
ªmaöög
;

25 i‡(
off£t
 > 
∑ck_sig
)

26 
ªmaöög
 -
off£t
 - 
∑ck_sig
;

27 
	`SHA1_Upd©e
(&
˘x
, 
ö
, 
ªmaöög
);

29 
	`SHA1_FöÆ
(
sha1
, &
˘x
);

30 i‡(
	`hashcmp
(
sha1
, 
	`u£_∑ck
(
p
, 
w_curs
, 
∑ck_sig
, 
NULL
)))

31  
	`îr‹
("Packfile %s SHA1 mismatch with itself",

32 
p
->
∑ck_«me
);

33 i‡(
	`hashcmp
(
sha1
, (*)
ödex_ba£
 + 
ödex_size
 - 40))

34  
	`îr‹
("Packfile %s SHA1 mismatch with idx",

35 
p
->
∑ck_«me
);

36 
	`unu£_∑ck
(
w_curs
);

42 
ƒ_obje˘s
 = 
	`num_∑cked_obje˘s
(
p
);

43 
i
 = 
îr
 = 0; i < 
ƒ_obje˘s
; i++) {

44 
sha1
[20];

45 *
d©a
;

46 
ty≥
[20];

47 
size
, 
off£t
;

49 i‡(
	`¡h_∑cked_obje˘_sha1
(
p
, 
i
, 
sha1
))

50 
	`dõ
("internalÉrrorÖack-checkÇth-packed-object");

51 
off£t
 = 
	`föd_∑ck_íåy_⁄e
(
sha1
, 
p
);

52 i‡(!
off£t
)

53 
	`dõ
("internalÉrrorÖack-check find-pack-entry-one");

54 
d©a
 = 
	`u≈ack_íåy
(
p
, 
off£t
, 
ty≥
, &
size
);

55 i‡(!
d©a
) {

56 
îr
 = 
	`îr‹
("cannot unpack %s from %s",

57 
	`sha1_to_hex
(
sha1
), 
p
->
∑ck_«me
);

60 i‡(
	`check_sha1_sig«tuª
(
sha1
, 
d©a
, 
size
, 
ty≥
)) {

61 
îr
 = 
	`îr‹
("packed %s from %s is corrupt",

62 
	`sha1_to_hex
(
sha1
), 
p
->
∑ck_«me
);

63 
	`‰ì
(
d©a
);

66 
	`‰ì
(
d©a
);

69  
îr
;

70 
	}
}

73 
	#MAX_CHAIN
 40

	)

75 
	$show_∑ck_öfo
(
∑cked_gô
 *
p
)

77 
ƒ_obje˘s
, 
i
;

78 
chaö_hi°ogøm
[
MAX_CHAIN
];

80 
ƒ_obje˘s
 = 
	`num_∑cked_obje˘s
(
p
);

81 
	`mem£t
(
chaö_hi°ogøm
, 0, (chain_histogram));

83 
i
 = 0; i < 
ƒ_obje˘s
; i++) {

84 
sha1
[20], 
ba£_sha1
[20];

85 
ty≥
[20];

86 
size
;

87 
°‹e_size
;

88 
off£t
;

89 
dñè_chaö_Àngth
;

91 i‡(
	`¡h_∑cked_obje˘_sha1
(
p
, 
i
, 
sha1
))

92 
	`dõ
("internalÉrrorÖack-checkÇth-packed-object");

93 
off£t
 = 
	`föd_∑ck_íåy_⁄e
(
sha1
, 
p
);

94 i‡(!
off£t
)

95 
	`dõ
("internalÉrrorÖack-check find-pack-entry-one");

97 
	`∑cked_obje˘_öfo_dëaû
(
p
, 
off£t
, 
ty≥
, &
size
, &
°‹e_size
,

98 &
dñè_chaö_Àngth
,

99 
ba£_sha1
);

100 
	`¥ötf
("%†", 
	`sha1_to_hex
(
sha1
));

101 i‡(!
dñè_chaö_Àngth
)

102 
	`¥ötf
("%-6†%lu %lu\n", 
ty≥
, 
size
, 
off£t
);

104 
	`¥ötf
("%-6†%lu %lu %u %s\n", 
ty≥
, 
size
, 
off£t
,

105 
dñè_chaö_Àngth
, 
	`sha1_to_hex
(
ba£_sha1
));

106 i‡(
dñè_chaö_Àngth
 < 
MAX_CHAIN
)

107 
chaö_hi°ogøm
[
dñè_chaö_Àngth
]++;

109 
chaö_hi°ogøm
[0]++;

113 
i
 = 0; i < 
MAX_CHAIN
; i++) {

114 i‡(!
chaö_hi°ogøm
[
i
])

116 
	`¥ötf
("chainÜength %s %d: %d object%s\n",

117 
i
 ? "=" : ">=",

118 
i
 ? i : 
MAX_CHAIN
,

119 
chaö_hi°ogøm
[
i
],

120 1 < 
chaö_hi°ogøm
[
i
] ? "s" : "");

122 
	}
}

124 
	$vîify_∑ck
(
∑cked_gô
 *
p
, 
vîbo£
)

126 
ödex_size
 = 
p
->index_size;

127 *
ödex_ba£
 = 
p
->index_base;

128 
SHA_CTX
 
˘x
;

129 
sha1
[20];

130 
ªt
;

132 
ªt
 = 0;

134 
	`SHA1_Inô
(&
˘x
);

135 
	`SHA1_Upd©e
(&
˘x
, 
ödex_ba£
, 
ödex_size
 - 20);

136 
	`SHA1_FöÆ
(
sha1
, &
˘x
);

137 i‡(
	`hashcmp
(
sha1
, (*)
ödex_ba£
 + 
ödex_size
 - 20))

138 
ªt
 = 
	`îr‹
("Packfile index for %s SHA1 mismatch",

139 
p
->
∑ck_«me
);

141 i‡(!
ªt
) {

143 
∑ck_wödow
 *
w_curs
 = 
NULL
;

144 
ªt
 = 
	`vîify_∑ckfûe
(
p
, &
w_curs
);

145 
	`unu£_∑ck
(&
w_curs
);

148 i‡(
vîbo£
) {

149 i‡(
ªt
)

150 
	`¥ötf
("%s: bad\n", 
p
->
∑ck_«me
);

152 
	`show_∑ck_öfo
(
p
);

153 
	`¥ötf
("%s: ok\n", 
p
->
∑ck_«me
);

157  
ªt
;

158 
	}
}

	@pack-redundant.c

9 
	~"ˇche.h
"

11 
	#BLKSIZE
 512

	)

13 c⁄° 
	g∑ck_ªdund™t_ußge
[] =

16 
	glﬂd_Æl_∑cks
, 
	gvîbo£
, 
	gÆt_odb
;

18 
	sŒi°_ôem
 {

19 
Œi°_ôem
 *
	m√xt
;

20 *
	msha1
;

22 
	sŒi°
 {

23 
Œi°_ôem
 *
	m‰⁄t
;

24 
Œi°_ôem
 *
	mback
;

25 
size_t
 
	msize
;

26 } *
	gÆl_obje˘s
;

28 
	s∑ck_li°
 {

29 
∑ck_li°
 *
	m√xt
;

30 
∑cked_gô
 *
	m∑ck
;

31 
Œi°
 *
	munique_obje˘s
;

32 
Œi°
 *
	mÆl_obje˘s
;

33 } *
	gloˇl_∑cks
 = 
NULL
, *
	gÆtodb_∑cks
 = NULL;

35 
	s∂l
 {

36 
∂l
 *
	m√xt
;

37 
∑ck_li°
 *
	m∂
;

40 
Œi°_ôem
 *
	g‰ì_nodes
;

42 
ölöe
 
	$Œi°_ôem_put
(
Œi°_ôem
 *
ôem
)

44 
ôem
->
√xt
 = 
‰ì_nodes
;

45 
‰ì_nodes
 = 
ôem
;

46 
	}
}

48 
ölöe
 
Œi°_ôem
 *
	$Œi°_ôem_gë
()

50 
Œi°_ôem
 *
√w
;

51 i‡–
‰ì_nodes
 ) {

52 
√w
 = 
‰ì_nodes
;

53 
‰ì_nodes
 = fªe_nodes->
√xt
;

55 
i
 = 1;

56 
√w
 = 
	`xmÆloc
((
Œi°_ôem
Ë* 
BLKSIZE
);

57 ;
i
 < 
BLKSIZE
; i++) {

58 
	`Œi°_ôem_put
(&
√w
[
i
]);

61  
√w
;

62 
	}
}

64 
	$Œi°_‰ì
(
Œi°
 *
li°
)

66 (
li°
->
back
 =Üi°->
‰⁄t
)) {

67 
li°
->
‰⁄t
 =Üi°->‰⁄t->
√xt
;

68 
	`Œi°_ôem_put
(
li°
->
back
);

70 
	`‰ì
(
li°
);

71 
	}
}

73 
ölöe
 
	$Œi°_öô
(
Œi°
 **
li°
)

75 *
li°
 = 
	`xmÆloc
((
Œi°
));

76 (*
li°
)->
‰⁄t
 = (*li°)->
back
 = 
NULL
;

77 (*
li°
)->
size
 = 0;

78 
	}
}

80 
Œi°
 * 
	$Œi°_c›y
(
Œi°
 *
li°
)

82 
Œi°
 *
ªt
;

83 
Œi°_ôem
 *
√w
, *
ﬁd
, *
¥ev
;

85 
	`Œi°_öô
(&
ªt
);

87 i‡((
ªt
->
size
 = 
li°
->size) == 0)

88  
ªt
;

90 
√w
 = 
ªt
->
‰⁄t
 = 
	`Œi°_ôem_gë
();

91 
√w
->
sha1
 = 
li°
->
‰⁄t
->sha1;

93 
ﬁd
 = 
li°
->
‰⁄t
->
√xt
;

94 
ﬁd
) {

95 
¥ev
 = 
√w
;

96 
√w
 = 
	`Œi°_ôem_gë
();

97 
¥ev
->
√xt
 = 
√w
;

98 
√w
->
sha1
 = 
ﬁd
->sha1;

99 
ﬁd
 = old->
√xt
;

101 
√w
->
√xt
 = 
NULL
;

102 
ªt
->
back
 = 
√w
;

104  
ªt
;

105 
	}
}

107 
ölöe
 
Œi°_ôem
 * 
	$Œi°_ö£π
(
Œi°
 *
li°
,

108 
Œi°_ôem
 *
a·î
,

109 *
sha1
)

111 
Œi°_ôem
 *
√w
 = 
	`Œi°_ôem_gë
();

112 
√w
->
sha1
 = sha1;

113 
√w
->
√xt
 = 
NULL
;

115 i‡(
a·î
 !
NULL
) {

116 
√w
->
√xt
 = 
a·î
->next;

117 
a·î
->
√xt
 = 
√w
;

118 i‡(
a·î
 =
li°
->
back
)

119 
li°
->
back
 = 
√w
;

121 i‡(
li°
->
size
 == 0)

122 
li°
->
back
 = 
√w
;

124 
√w
->
√xt
 = 
li°
->
‰⁄t
;

125 
li°
->
‰⁄t
 = 
√w
;

127 
li°
->
size
++;

128  
√w
;

129 
	}
}

131 
ölöe
 
Œi°_ôem
 *
	$Œi°_ö£π_back
(
Œi°
 *
li°
, *
sha1
)

133  
	`Œi°_ö£π
(
li°
,Üi°->
back
, 
sha1
);

134 
	}
}

136 
ölöe
 
Œi°_ôem
 *
	$Œi°_ö£π_s‹ãd_unique
(
Œi°
 *
li°
, *
sha1
, 
Œi°_ôem
 *
höt
)

138 
Œi°_ôem
 *
¥ev
 = 
NULL
, *
l
;

140 
l
 = (
höt
 =
NULL
Ë? 
li°
->
‰⁄t
 : hint;

141 
l
) {

142 
cmp
 = 
	`hashcmp
(
l
->
sha1
, sha1);

143 i‡(
cmp
 > 0) {

144  
	`Œi°_ö£π
(
li°
, 
¥ev
, 
sha1
);

146 if(!
cmp
) {

147  
l
;

149 
¥ev
 = 
l
;

150 
l
 =Ü->
√xt
;

153  
	`Œi°_ö£π_back
(
li°
, 
sha1
);

154 
	}
}

157 
ölöe
 
Œi°_ôem
 * 
	$Œi°_s‹ãd_ªmove
(
Œi°
 *
li°
, c⁄° *
sha1
, 
Œi°_ôem
 *
höt
)

159 
Œi°_ôem
 *
¥ev
, *
l
;

161 
ªdo_‰om_°¨t
:

162 
l
 = (
höt
 =
NULL
Ë? 
li°
->
‰⁄t
 : hint;

163 
¥ev
 = 
NULL
;

164 
l
) {

165 
cmp
 = 
	`hashcmp
(
l
->
sha1
, sha1);

166 i‡(
cmp
 > 0)

167  
¥ev
;

168 if(!
cmp
) {

169 i‡(
¥ev
 =
NULL
) {

170 i‡(
höt
 !
NULL
 && höà!
li°
->
‰⁄t
) {

172 
höt
 = 
NULL
;

173 
ªdo_‰om_°¨t
;

175 
li°
->
‰⁄t
 = 
l
->
√xt
;

177 
¥ev
->
√xt
 = 
l
->next;

178 i‡(
l
 =
li°
->
back
)

179 
li°
->
back
 = 
¥ev
;

180 
	`Œi°_ôem_put
(
l
);

181 
li°
->
size
--;

182  
¥ev
;

184 
¥ev
 = 
l
;

185 
l
 =Ü->
√xt
;

187  
¥ev
;

188 
	}
}

191 
	$Œi°_s‹ãd_dif„ªn˚_ö∂a˚
(
Œi°
 *
A
,

192 
Œi°
 *
B
)

194 
Œi°_ôem
 *
höt
, *
b
;

196 
höt
 = 
NULL
;

197 
b
 = 
B
->
‰⁄t
;

199 
b
) {

200 
höt
 = 
	`Œi°_s‹ãd_ªmove
(
A
, 
b
->
sha1
, hint);

201 
b
 = b->
√xt
;

203 
	}
}

205 
ölöe
 
∑ck_li°
 * 
	$∑ck_li°_ö£π
(
∑ck_li°
 **
∂
,

206 
∑ck_li°
 *
íåy
)

208 
∑ck_li°
 *
p
 = 
	`xmÆloc
((pack_list));

209 
	`mem˝y
(
p
, 
íåy
, (
∑ck_li°
));

210 
p
->
√xt
 = *
∂
;

211 *
∂
 = 
p
;

212  
p
;

213 
	}
}

215 
ölöe
 
size_t
 
	$∑ck_li°_size
(
∑ck_li°
 *
∂
)

217 
size_t
 
ªt
 = 0;

218 
∂
) {

219 
ªt
++;

220 
∂
 =Öl->
√xt
;

222  
ªt
;

223 
	}
}

225 
∑ck_li°
 * 
	$∑ck_li°_dif„ªn˚
(c⁄° 
∑ck_li°
 *
A
,

226 c⁄° 
∑ck_li°
 *
B
)

228 
∑ck_li°
 *
ªt
;

229 c⁄° 
∑ck_li°
 *
∂
;

231 i‡(
A
 =
NULL
)

232  
NULL
;

234 
∂
 = 
B
;

235 
∂
 !
NULL
) {

236 i‡(
A
->
∑ck
 =
∂
->pack)

237  
	`∑ck_li°_dif„ªn˚
(
A
->
√xt
, 
B
);

238 
∂
 =Öl->
√xt
;

240 
ªt
 = 
	`xmÆloc
((
∑ck_li°
));

241 
	`mem˝y
(
ªt
, 
A
, (
∑ck_li°
));

242 
ªt
->
√xt
 = 
	`∑ck_li°_dif„ªn˚
(
A
->√xt, 
B
);

243  
ªt
;

244 
	}
}

246 
	$cmp_two_∑cks
(
∑ck_li°
 *
p1
, ∑ck_li° *
p2
)

248 
p1_off
, 
p2_off
;

249 *
p1_ba£
, *
p2_ba£
;

250 
Œi°_ôem
 *
p1_höt
 = 
NULL
, *
p2_höt
 = NULL;

252 
p1_off
 = 
p2_off
 = 256 * 4 + 4;

253 
p1_ba£
 = (*Ë
p1
->
∑ck
->
ödex_ba£
;

254 
p2_ba£
 = (*Ë
p2
->
∑ck
->
ödex_ba£
;

256 
p1_off
 <
p1
->
∑ck
->
ödex_size
 - 3 * 20 &&

257 
p2_off
 <
p2
->
∑ck
->
ödex_size
 - 3 * 20)

259 
cmp
 = 
	`hashcmp
(
p1_ba£
 + 
p1_off
, 
p2_ba£
 + 
p2_off
);

261 i‡(
cmp
 == 0) {

262 
p1_höt
 = 
	`Œi°_s‹ãd_ªmove
(
p1
->
unique_obje˘s
,

263 
p1_ba£
 + 
p1_off
, 
p1_höt
);

264 
p2_höt
 = 
	`Œi°_s‹ãd_ªmove
(
p2
->
unique_obje˘s
,

265 
p1_ba£
 + 
p1_off
, 
p2_höt
);

266 
p1_off
+=24;

267 
p2_off
+=24;

270 i‡(
cmp
 < 0) {

271 
p1_off
+=24;

273 
p2_off
+=24;

276 
	}
}

278 
	$∂l_‰ì
(
∂l
 *
l
)

280 
∂l
 *
ﬁd
;

281 
∑ck_li°
 *
›l
;

283 
l
) {

284 
ﬁd
 = 
l
;

285 
l
->
∂
) {

286 
›l
 = 
l
->
∂
;

287 
l
->
∂
 = 
›l
->
√xt
;

288 
	`‰ì
(
›l
);

290 
l
 =Ü->
√xt
;

291 
	`‰ì
(
ﬁd
);

293 
	}
}

298 
∂l
 * 
	$gë_≥rmuèti⁄s
(
∑ck_li°
 *
li°
, 
n
)

300 
∂l
 *
sub£t
, *
ªt
 = 
NULL
, *
√w_∂l
 = NULL, *pll;

302 i‡(
li°
 =
NULL
 || 
	`∑ck_li°_size
÷i°Ë< 
n
 ||Ç == 0)

303  
NULL
;

305 i‡(
n
 == 1) {

306 
li°
) {

307 
√w_∂l
 = 
	`xmÆloc
((
∂l
));

308 
√w_∂l
->
∂
 = 
NULL
;

309 
	`∑ck_li°_ö£π
(&
√w_∂l
->
∂
, 
li°
);

310 
√w_∂l
->
√xt
 = 
ªt
;

311 
ªt
 = 
√w_∂l
;

312 
li°
 =Üi°->
√xt
;

314  
ªt
;

317 
li°
->
√xt
) {

318 
sub£t
 = 
	`gë_≥rmuèti⁄s
(
li°
->
√xt
, 
n
 - 1);

319 
sub£t
) {

320 
√w_∂l
 = 
	`xmÆloc
((
∂l
));

321 
√w_∂l
->
∂
 = 
sub£t
->pl;

322 
	`∑ck_li°_ö£π
(&
√w_∂l
->
∂
, 
li°
);

323 
√w_∂l
->
√xt
 = 
ªt
;

324 
ªt
 = 
√w_∂l
;

325 
sub£t
 = sub£t->
√xt
;

327 
li°
 =Üi°->
√xt
;

329  
ªt
;

330 
	}
}

332 
	$is_su≥r£t
(
∑ck_li°
 *
∂
, 
Œi°
 *
li°
)

334 
Œi°
 *
diff
;

336 
diff
 = 
	`Œi°_c›y
(
li°
);

338 
∂
) {

339 
	`Œi°_s‹ãd_dif„ªn˚_ö∂a˚
(
diff
, 
∂
->
Æl_obje˘s
);

340 i‡(
diff
->
size
 == 0) {

341 
	`Œi°_‰ì
(
diff
);

344 
∂
 =Öl->
√xt
;

346 
	`Œi°_‰ì
(
diff
);

348 
	}
}

350 
size_t
 
	$sizeof_uni⁄
(
∑cked_gô
 *
p1
, ∑cked_gô *
p2
)

352 
size_t
 
ªt
 = 0;

353 
p1_off
, 
p2_off
;

354 *
p1_ba£
, *
p2_ba£
;

356 
p1_off
 = 
p2_off
 = 256 * 4 + 4;

357 
p1_ba£
 = (*)
p1
->
ödex_ba£
;

358 
p2_ba£
 = (*)
p2
->
ödex_ba£
;

360 
p1_off
 <
p1
->
ödex_size
 - 3 * 20 &&

361 
p2_off
 <
p2
->
ödex_size
 - 3 * 20)

363 
cmp
 = 
	`hashcmp
(
p1_ba£
 + 
p1_off
, 
p2_ba£
 + 
p2_off
);

365 i‡(
cmp
 == 0) {

366 
ªt
++;

367 
p1_off
+=24;

368 
p2_off
+=24;

371 i‡(
cmp
 < 0) {

372 
p1_off
+=24;

374 
p2_off
+=24;

377  
ªt
;

378 
	}
}

381 
size_t
 
	$gë_∑ck_ªdund™cy
(
∑ck_li°
 *
∂
)

383 
∑ck_li°
 *
sub£t
;

384 
size_t
 
ªt
 = 0;

386 i‡(
∂
 =
NULL
)

389 (
sub£t
 = 
∂
->
√xt
)) {

390 
sub£t
) {

391 
ªt
 +
	`sizeof_uni⁄
(
∂
->
∑ck
, 
sub£t
->pack);

392 
sub£t
 = sub£t->
√xt
;

394 
∂
 =Öl->
√xt
;

396  
ªt
;

397 
	}
}

399 
ölöe
 
size_t
 
	$∑ck_£t_byãcou¡
(
∑ck_li°
 *
∂
)

401 
size_t
 
ªt
 = 0;

402 
∂
) {

403 
ªt
 +
∂
->
∑ck
->
∑ck_size
;

404 
ªt
 +
∂
->
∑ck
->
ödex_size
;

405 
∂
 =Öl->
√xt
;

407  
ªt
;

408 
	}
}

410 
	$möimize
(
∑ck_li°
 **
mö
)

412 
∑ck_li°
 *
∂
, *
unique
 = 
NULL
,

413 *
n⁄_unique
 = 
NULL
, *
mö_≥rm
 = NULL;

414 
∂l
 *
≥rm
, *
≥rm_Æl
, *
≥rm_ok
 = 
NULL
, *
√w_≥rm
;

415 
Œi°
 *
missög
;

416 
size_t
 
mö_≥rm_size
 = (size_t)-1, 
≥rm_size
;

417 
n
;

419 
∂
 = 
loˇl_∑cks
;

420 
∂
) {

421 if(
∂
->
unique_obje˘s
->
size
)

422 
	`∑ck_li°_ö£π
(&
unique
, 
∂
);

424 
	`∑ck_li°_ö£π
(&
n⁄_unique
, 
∂
);

425 
∂
 =Öl->
√xt
;

428 
missög
 = 
	`Œi°_c›y
(
Æl_obje˘s
);

429 
∂
 = 
unique
;

430 
∂
) {

431 
	`Œi°_s‹ãd_dif„ªn˚_ö∂a˚
(
missög
, 
∂
->
Æl_obje˘s
);

432 
∂
 =Öl->
√xt
;

436 i‡(
missög
->
size
 == 0) {

437 *
mö
 = 
unique
;

442 
n
 = 1;Ç <
	`∑ck_li°_size
(
n⁄_unique
Ë&& !
≥rm_ok
;Ç++) {

443 
≥rm_Æl
 = 
≥rm
 = 
	`gë_≥rmuèti⁄s
(
n⁄_unique
, 
n
);

444 
≥rm
) {

445 i‡(
	`is_su≥r£t
(
≥rm
->
∂
, 
missög
)) {

446 
√w_≥rm
 = 
	`xmÆloc
((
∂l
));

447 
	`mem˝y
(
√w_≥rm
, 
≥rm
, (
∂l
));

448 
√w_≥rm
->
√xt
 = 
≥rm_ok
;

449 
≥rm_ok
 = 
√w_≥rm
;

451 
≥rm
 =Öîm->
√xt
;

453 i‡(
≥rm_ok
)

455 
	`∂l_‰ì
(
≥rm_Æl
);

457 i‡(
≥rm_ok
 =
NULL
)

458 
	`dõ
("InternalÉrror: No complete sets found!\n");

461 
≥rm
 = 
≥rm_ok
;

462 
≥rm
) {

463 
≥rm_size
 = 
	`∑ck_£t_byãcou¡
(
≥rm
->
∂
);

464 i‡(
mö_≥rm_size
 > 
≥rm_size
) {

465 
mö_≥rm_size
 = 
≥rm_size
;

466 
mö_≥rm
 = 
≥rm
->
∂
;

468 
≥rm
 =Öîm->
√xt
;

470 *
mö
 = 
mö_≥rm
;

472 
∂
 = 
unique
;

473 
∂
) {

474 
	`∑ck_li°_ö£π
(
mö
, 
∂
);

475 
∂
 =Öl->
√xt
;

477 
	}
}

479 
	$lﬂd_Æl_obje˘s
()

481 
∑ck_li°
 *
∂
 = 
loˇl_∑cks
;

482 
Œi°_ôem
 *
höt
, *
l
;

484 
	`Œi°_öô
(&
Æl_obje˘s
);

486 
∂
) {

487 
höt
 = 
NULL
;

488 
l
 = 
∂
->
Æl_obje˘s
->
‰⁄t
;

489 
l
) {

490 
höt
 = 
	`Œi°_ö£π_s‹ãd_unique
(
Æl_obje˘s
,

491 
l
->
sha1
, 
höt
);

492 
l
 =Ü->
√xt
;

494 
∂
 =Öl->
√xt
;

497 
∂
 = 
Ætodb_∑cks
;

498 
∂
) {

499 
	`Œi°_s‹ãd_dif„ªn˚_ö∂a˚
(
Æl_obje˘s
, 
∂
->all_objects);

500 
∂
 =Öl->
√xt
;

502 
	}
}

505 
	$cmp_loˇl_∑cks
()

507 
∑ck_li°
 *
sub£t
, *
∂
 = 
loˇl_∑cks
;

509 (
sub£t
 = 
∂
)) {

510 (
sub£t
 = sub£t->
√xt
))

511 
	`cmp_two_∑cks
(
∂
, 
sub£t
);

512 
∂
 =Öl->
√xt
;

514 
	}
}

516 
	$sˇn_Æt_odb_∑cks
()

518 
∑ck_li°
 *
loˇl
, *
Æt
;

520 
Æt
 = 
Ætodb_∑cks
;

521 
Æt
) {

522 
loˇl
 = 
loˇl_∑cks
;

523 
loˇl
) {

524 
	`Œi°_s‹ãd_dif„ªn˚_ö∂a˚
(
loˇl
->
unique_obje˘s
,

525 
Æt
->
Æl_obje˘s
);

526 
loˇl
 =Üoˇl->
√xt
;

528 
	`Œi°_s‹ãd_dif„ªn˚_ö∂a˚
(
Æl_obje˘s
, 
Æt
->all_objects);

529 
Æt
 =á…->
√xt
;

531 
	}
}

533 
∑ck_li°
 * 
	$add_∑ck
(
∑cked_gô
 *
p
)

535 
∑ck_li°
 
l
;

536 
size_t
 
off
;

537 *
ba£
;

539 i‡(!
p
->
∑ck_loˇl
 && !(
Æt_odb
 || 
vîbo£
))

540  
NULL
;

542 
l
.
∑ck
 = 
p
;

543 
	`Œi°_öô
(&
l
.
Æl_obje˘s
);

545 
off
 = 256 * 4 + 4;

546 
ba£
 = (*)
p
->
ödex_ba£
;

547 
off
 <
p
->
ödex_size
 - 3 * 20) {

548 
	`Œi°_ö£π_back
(
l
.
Æl_obje˘s
, 
ba£
 + 
off
);

549 
off
 += 24;

552 
l
.
unique_obje˘s
 = 
	`Œi°_c›y
÷.
Æl_obje˘s
);

553 i‡(
p
->
∑ck_loˇl
)

554  
	`∑ck_li°_ö£π
(&
loˇl_∑cks
, &
l
);

556  
	`∑ck_li°_ö£π
(&
Ætodb_∑cks
, &
l
);

557 
	}
}

559 
∑ck_li°
 * 
	$add_∑ck_fûe
(*
fûíame
)

561 
∑cked_gô
 *
p
 =Öacked_git;

563 i‡(
	`°æí
(
fûíame
) < 40)

564 
	`dõ
("BadÖack fûíame: %s\n", 
fûíame
);

566 
p
) {

567 i‡(
	`°r°r
(
p
->
∑ck_«me
, 
fûíame
))

568  
	`add_∑ck
(
p
);

569 
p
 =Ö->
√xt
;

571 
	`dõ
("Fûíamê%†nŸ found i¿∑cked_gô\n", 
fûíame
);

572 
	}
}

574 
	$lﬂd_Æl
()

576 
∑cked_gô
 *
p
 =Öacked_git;

578 
p
) {

579 
	`add_∑ck
(
p
);

580 
p
 =Ö->
√xt
;

582 
	}
}

584 
	$maö
(
¨gc
, **
¨gv
)

586 
i
;

587 
∑ck_li°
 *
mö
, *
ªd
, *
∂
;

588 
Œi°
 *
ign‹e
;

589 *
sha1
;

590 
buf
[42];

592 
	`£tup_gô_dúe˘‹y
();

594 
i
 = 1; i < 
¨gc
; i++) {

595 c⁄° *
¨g
 = 
¨gv
[
i
];

596 if(!
	`°rcmp
(
¨g
, "--")) {

597 
i
++;

600 if(!
	`°rcmp
(
¨g
, "--all")) {

601 
lﬂd_Æl_∑cks
 = 1;

604 if(!
	`°rcmp
(
¨g
, "--verbose")) {

605 
vîbo£
 = 1;

608 if(!
	`°rcmp
(
¨g
, "--alt-odb")) {

609 
Æt_odb
 = 1;

612 if(*
¨g
 == '-')

613 
	`ußge
(
∑ck_ªdund™t_ußge
);

618 
	`¥ï¨e_∑cked_gô
();

620 i‡(
lﬂd_Æl_∑cks
)

621 
	`lﬂd_Æl
();

623 *(
¨gv
 + 
i
Ë!
NULL
)

624 
	`add_∑ck_fûe
(*(
¨gv
 + 
i
++));

626 i‡(
loˇl_∑cks
 =
NULL
)

627 
	`dõ
("ZeroÖacks found!\n");

629 
	`lﬂd_Æl_obje˘s
();

631 
	`cmp_loˇl_∑cks
();

632 i‡(
Æt_odb
)

633 
	`sˇn_Æt_odb_∑cks
();

636 
	`Œi°_öô
(&
ign‹e
);

637 i‡(!
	`ißây
(0)) {

638 
	`fgës
(
buf
, (buf), 
°dö
)) {

639 
sha1
 = 
	`xmÆloc
(20);

640 i‡(
	`gë_sha1_hex
(
buf
, 
sha1
))

641 
	`dõ
("Bad sha1 o¿°dö: %s", 
buf
);

642 
	`Œi°_ö£π_s‹ãd_unique
(
ign‹e
, 
sha1
, 
NULL
);

645 
	`Œi°_s‹ãd_dif„ªn˚_ö∂a˚
(
Æl_obje˘s
, 
ign‹e
);

646 
∂
 = 
loˇl_∑cks
;

647 
∂
) {

648 
	`Œi°_s‹ãd_dif„ªn˚_ö∂a˚
(
∂
->
unique_obje˘s
, 
ign‹e
);

649 
∂
 =Öl->
√xt
;

652 
	`möimize
(&
mö
);

654 i‡(
vîbo£
) {

655 
	`Ârötf
(
°dîr
, "Thereáre %luÖacksávailable inált-odbs.\n",

656 ()
	`∑ck_li°_size
(
Ætodb_∑cks
));

657 
	`Ârötf
(
°dîr
, "The smallest (bytewise) set ofÖacks is:\n");

658 
∂
 = 
mö
;

659 
∂
) {

660 
	`Ârötf
(
°dîr
, "\t%s\n", 
∂
->
∑ck
->
∑ck_«me
);

661 
∂
 =Öl->
√xt
;

663 
	`Ârötf
(
°dîr
, "containing %lu duplicate objects "

665 ()
	`gë_∑ck_ªdund™cy
(
mö
),

666 ()
	`∑ck_£t_byãcou¡
(
mö
)/1024);

667 
	`Ârötf
(
°dîr
, "AÅotal of %lu unique objects were considered.\n",

668 ()
Æl_obje˘s
->
size
);

669 
	`Ârötf
(
°dîr
, "RedundantÖacks (with indexes):\n");

671 
∂
 = 
ªd
 = 
	`∑ck_li°_dif„ªn˚
(
loˇl_∑cks
, 
mö
);

672 
∂
) {

673 
	`¥ötf
("%s\n%s\n",

674 
	`sha1_∑ck_ödex_«me
(
∂
->
∑ck
->
sha1
),

675 
∂
->
∑ck
->
∑ck_«me
);

676 
∂
 =Öl->
√xt
;

678 i‡(
vîbo£
)

679 
	`Ârötf
(
°dîr
, "%luMB ofÑedundantÖacks inÅotal.\n",

680 ()
	`∑ck_£t_byãcou¡
(
ªd
)/(1024*1024));

683 
	}
}

	@pack.h

1 #i‚de‡
PACK_H


2 
	#PACK_H


	)

4 
	~"obje˘.h
"

9 
	#PACK_SIGNATURE
 0x5041434b

	)

10 
	#PACK_VERSION
 2

	)

11 
	#∑ck_vîsi⁄_ok
(
v
Ë((vË=
	`ht⁄l
(2Ë|| (vË=ht⁄l(3))

	)

12 
	s∑ck_hódî
 {

13 
uöt32_t
 
	mhdr_sig«tuª
;

14 
uöt32_t
 
	mhdr_vîsi⁄
;

15 
uöt32_t
 
	mhdr_íåõs
;

44 
	#PACK_IDX_SIGNATURE
 0xff744f63

	)

46 
vîify_∑ck
(
∑cked_gô
 *, );

48 
	#PH_ERROR_EOF
 (-1)

	)

49 
	#PH_ERROR_PACK_SIGNATURE
 (-2)

	)

50 
	#PH_ERROR_PROTOCOL
 (-3)

	)

51 
ªad_∑ck_hódî
(
fd
, 
∑ck_hódî
 *);

	@pager.c

1 
	~"ˇche.h
"

3 
	~<sys/£À˘.h
>

10 
	$run_∑gî
(c⁄° *
∑gî
)

16 
fd_£t
 
ö
;

18 
	`FD_ZERO
(&
ö
);

19 
	`FD_SET
(0, &
ö
);

20 
	`£À˘
(1, &
ö
, 
NULL
, &in, NULL);

22 
	`exe˛p
(
∑gî
,Öagî, 
NULL
);

23 
	`exe˛
("/bö/sh", "sh", "-c", 
∑gî
, 
NULL
);

24 
	}
}

26 
	$£tup_∑gî
()

28 
pid_t
 
pid
;

29 
fd
[2];

30 c⁄° *
∑gî
 = 
	`gëív
("GIT_PAGER");

32 i‡(!
	`ißây
(1))

34 i‡(!
∑gî
)

35 
∑gî
 = 
	`gëív
("PAGER");

36 i‡(!
∑gî
)

37 
∑gî
 = "less";

38 i‡(!*
∑gî
 || !
	`°rcmp
(pager, "cat"))

41 
∑gî_ö_u£
 = 1;

43 i‡(
	`pùe
(
fd
) < 0)

45 
pid
 = 
	`f‹k
();

46 i‡(
pid
 < 0) {

47 
	`˛o£
(
fd
[0]);

48 
	`˛o£
(
fd
[1]);

53 i‡(!
pid
) {

54 
	`dup2
(
fd
[1], 1);

55 
	`˛o£
(
fd
[0]);

56 
	`˛o£
(
fd
[1]);

61 
	`dup2
(
fd
[0], 0);

62 
	`˛o£
(
fd
[0]);

63 
	`˛o£
(
fd
[1]);

65 
	`£ãnv
("LESS", "FRSX", 0);

66 
	`run_∑gî
(
∑gî
);

67 
	`dõ
("u«bÀÅÿexecuãÖagî '%s'", 
∑gî
);

68 
	`exô
(255);

69 
	}
}

	@patch-delta.c

12 
	~"gô-com∑t-utû.h
"

13 
	~"dñè.h
"

15 *
	$∑tch_dñè
(c⁄° *
§c_buf
, 
§c_size
,

16 c⁄° *
dñè_buf
, 
dñè_size
,

17 *
d°_size
)

19 c⁄° *
d©a
, *
t›
;

20 *
d°_buf
, *
out
, 
cmd
;

21 
size
;

23 i‡(
dñè_size
 < 
DELTA_SIZE_MIN
)

24  
NULL
;

26 
d©a
 = 
dñè_buf
;

27 
t›
 = (c⁄° *Ë
dñè_buf
 + 
dñè_size
;

30 
size
 = 
	`gë_dñè_hdr_size
(&
d©a
, 
t›
);

31 i‡(
size
 !
§c_size
)

32  
NULL
;

35 
size
 = 
	`gë_dñè_hdr_size
(&
d©a
, 
t›
);

36 
d°_buf
 = 
	`xmÆloc
(
size
 + 1);

37 
d°_buf
[
size
] = 0;

39 
out
 = 
d°_buf
;

40 
d©a
 < 
t›
) {

41 
cmd
 = *
d©a
++;

42 i‡(
cmd
 & 0x80) {

43 
˝_off
 = 0, 
˝_size
 = 0;

44 i‡(
cmd
 & 0x01Ë
˝_off
 = *
d©a
++;

45 i‡(
cmd
 & 0x02Ë
˝_off
 |(*
d©a
++ << 8);

46 i‡(
cmd
 & 0x04Ë
˝_off
 |(*
d©a
++ << 16);

47 i‡(
cmd
 & 0x08Ë
˝_off
 |(*
d©a
++ << 24);

48 i‡(
cmd
 & 0x10Ë
˝_size
 = *
d©a
++;

49 i‡(
cmd
 & 0x20Ë
˝_size
 |(*
d©a
++ << 8);

50 i‡(
cmd
 & 0x40Ë
˝_size
 |(*
d©a
++ << 16);

51 i‡(
˝_size
 == 0) cp_size = 0x10000;

52 i‡(
˝_off
 + 
˝_size
 < cp_size ||

53 
˝_off
 + 
˝_size
 > 
§c_size
 ||

54 
˝_size
 > 
size
)

56 
	`mem˝y
(
out
, (*Ë
§c_buf
 + 
˝_off
, 
˝_size
);

57 
out
 +
˝_size
;

58 
size
 -
˝_size
;

59 } i‡(
cmd
) {

60 i‡(
cmd
 > 
size
)

62 
	`mem˝y
(
out
, 
d©a
, 
cmd
);

63 
out
 +
cmd
;

64 
d©a
 +
cmd
;

65 
size
 -
cmd
;

72 
	`îr‹
("unexpected delta opcode 0");

73 
bad
;

78 i‡(
d©a
 !
t›
 || 
size
 != 0) {

79 
	`îr‹
("deltaÑeplay has gone wild");

80 
bad
:

81 
	`‰ì
(
d°_buf
);

82  
NULL
;

85 *
d°_size
 = 
out
 - 
d°_buf
;

86  
d°_buf
;

87 
	}
}

	@patch-id.c

1 
	~"ˇche.h
"

3 
	$Êush_cuºít_id
(
∑tchÀn
, *
id
, 
SHA_CTX
 *
c
)

5 
ªsu…
[20];

6 
«me
[50];

8 i‡(!
∑tchÀn
)

11 
	`SHA1_FöÆ
(
ªsu…
, 
c
);

12 
	`mem˝y
(
«me
, 
	`sha1_to_hex
(
id
), 41);

13 
	`¥ötf
("%†%s\n", 
	`sha1_to_hex
(
ªsu…
), 
«me
);

14 
	`SHA1_Inô
(
c
);

15 
	}
}

17 
	$ªmove_•a˚
(*
löe
)

19 *
§c
 = 
löe
;

20 *
d°
 = 
löe
;

21 
c
;

23 (
c
 = *
§c
++) != '\0') {

24 i‡(!
	`is•a˚
(
c
))

25 *
d°
++ = 
c
;

27  
d°
 - 
löe
;

28 
	}
}

30 
	$gíî©e_id_li°
()

32 
sha1
[20];

33 
löe
[1000];

34 
SHA_CTX
 
˘x
;

35 
∑tchÀn
 = 0;

37 
	`SHA1_Inô
(&
˘x
);

38 
	`fgës
(
löe
, ÷öe), 
°dö
Ë!
NULL
) {

39 
n
[20];

40 *
p
 = 
löe
;

41 
Àn
;

43 i‡(!
	`memcmp
(
löe
, "diff-tree ", 10))

44 
p
 += 10;

45 i‡(!
	`memcmp
(
löe
, "commit ", 7))

46 
p
 += 7;

48 i‡(!
	`gë_sha1_hex
(
p
, 
n
)) {

49 
	`Êush_cuºít_id
(
∑tchÀn
, 
sha1
, &
˘x
);

50 
	`hash˝y
(
sha1
, 
n
);

51 
∑tchÀn
 = 0;

56 i‡(!
∑tchÀn
 && 
	`memcmp
(
löe
, "diff ", 5))

60 i‡(!
	`memcmp
(
löe
, "index ", 6))

64 i‡(!
	`memcmp
(
löe
, "@@ -", 4))

68 
Àn
 = 
	`ªmove_•a˚
(
löe
);

69 
∑tchÀn
 +
Àn
;

70 
	`SHA1_Upd©e
(&
˘x
, 
löe
, 
Àn
);

72 
	`Êush_cuºít_id
(
∑tchÀn
, 
sha1
, &
˘x
);

73 
	}
}

75 c⁄° 
	g∑tch_id_ußge
[] = "git-patch-id <Öatch";

77 
	$maö
(
¨gc
, **
¨gv
)

79 i‡(
¨gc
 != 1)

80 
	`ußge
(
∑tch_id_ußge
);

82 
	`gíî©e_id_li°
();

84 
	}
}

	@path-list.c

1 
	~"ˇche.h
"

2 
	~"∑th-li°.h
"

6 
	$gë_íåy_ödex
(c⁄° 
∑th_li°
 *
li°
, c⁄° *
∑th
,

7 *
exa˘_m©ch
)

9 
À·
 = -1, 
right
 = 
li°
->
ƒ
;

11 
À·
 + 1 < 
right
) {

12 
middÀ
 = (
À·
 + 
right
) / 2;

13 
com∑ª
 = 
	`°rcmp
(
∑th
, 
li°
->
ôems
[
middÀ
].path);

14 i‡(
com∑ª
 < 0)

15 
right
 = 
middÀ
;

16 i‡(
com∑ª
 > 0)

17 
À·
 = 
middÀ
;

19 *
exa˘_m©ch
 = 1;

20  
middÀ
;

24 *
exa˘_m©ch
 = 0;

25  
right
;

26 
	}
}

29 
	$add_íåy
(
∑th_li°
 *
li°
, c⁄° *
∑th
)

31 
exa˘_m©ch
;

32 
ödex
 = 
	`gë_íåy_ödex
(
li°
, 
∑th
, &
exa˘_m©ch
);

34 i‡(
exa˘_m©ch
)

35  -1 - 
ödex
;

37 i‡(
li°
->
ƒ
 + 1 >li°->
Æloc
) {

38 
li°
->
Æloc
 += 32;

39 
li°
->
ôems
 = 
	`xªÆloc
÷i°->ôems,Üi°->
Æloc


40 * (
∑th_li°_ôem
));

42 i‡(
ödex
 < 
li°
->
ƒ
)

43 
	`memmove
(
li°
->
ôems
 + 
ödex
 + 1,Üist->items + index,

44 (
li°
->
ƒ
 - 
ödex
)

45 * (
∑th_li°_ôem
));

46 
li°
->
ôems
[
ödex
].
∑th
 =Üi°->
°rdup_∑ths
 ?

47 
	`x°rdup
(
∑th
) : (*)path;

48 
li°
->
ôems
[
ödex
].
utû
 = 
NULL
;

49 
li°
->
ƒ
++;

51  
ödex
;

52 
	}
}

54 
∑th_li°_ôem
 *
	$∑th_li°_ö£π
(c⁄° *
∑th
, 
∑th_li°
 *
li°
)

56 
ödex
 = 
	`add_íåy
(
li°
, 
∑th
);

58 i‡(
ödex
 < 0)

59 
ödex
 = -1 - index;

61  
li°
->
ôems
 + 
ödex
;

62 
	}
}

64 
	$∑th_li°_has_∑th
(c⁄° 
∑th_li°
 *
li°
, c⁄° *
∑th
)

66 
exa˘_m©ch
;

67 
	`gë_íåy_ödex
(
li°
, 
∑th
, &
exa˘_m©ch
);

68  
exa˘_m©ch
;

69 
	}
}

71 
∑th_li°_ôem
 *
	$∑th_li°_lookup
(c⁄° *
∑th
, 
∑th_li°
 *
li°
)

73 
exa˘_m©ch
, 
i
 = 
	`gë_íåy_ödex
(
li°
, 
∑th
, &exact_match);

74 i‡(!
exa˘_m©ch
)

75  
NULL
;

76  
li°
->
ôems
 + 
i
;

77 
	}
}

79 
	$∑th_li°_˛ór
(
∑th_li°
 *
li°
, 
‰ì_ôems
)

81 i‡(
li°
->
ôems
) {

82 
i
;

83 i‡(
‰ì_ôems
)

84 
i
 = 0; i < 
li°
->
ƒ
; i++) {

85 i‡(
li°
->
°rdup_∑ths
)

86 
	`‰ì
(
li°
->
ôems
[
i
].
∑th
);

87 
	`‰ì
(
li°
->
ôems
[
i
].
utû
);

89 
	`‰ì
(
li°
->
ôems
);

91 
li°
->
ôems
 = 
NULL
;

92 
li°
->
ƒ
 =Üi°->
Æloc
 = 0;

93 
	}
}

95 
	$¥öt_∑th_li°
(c⁄° *
ãxt
, c⁄° 
∑th_li°
 *
p
)

97 
i
;

98 i‡–
ãxt
 )

99 
	`¥ötf
("%s\n", 
ãxt
);

100 
i
 = 0; i < 
p
->
ƒ
; i++)

101 
	`¥ötf
("%s:%p\n", 
p
->
ôems
[
i
].
∑th
,Ö->ôems[i].
utû
);

102 
	}
}

	@path-list.h

1 #i‚de‡
_PATH_LIST_H_


2 
	#_PATH_LIST_H_


	)

4 
	s∑th_li°_ôem
 {

5 *
	m∑th
;

6 *
	mutû
;

8 
	s∑th_li°


10 
∑th_li°_ôem
 *
	môems
;

11 
	mƒ
, 
	mÆloc
;

12 
	m°rdup_∑ths
:1;

15 
¥öt_∑th_li°
(c⁄° *
ãxt
, c⁄° 
∑th_li°
 *
p
);

17 
∑th_li°_has_∑th
(c⁄° 
∑th_li°
 *
li°
, c⁄° *
∑th
);

18 
∑th_li°_˛ór
(
∑th_li°
 *
li°
, 
‰ì_ôems
);

19 
∑th_li°_ôem
 *
∑th_li°_ö£π
(c⁄° *
∑th
, 
∑th_li°
 *
li°
);

20 
∑th_li°_ôem
 *
∑th_li°_lookup
(c⁄° *
∑th
, 
∑th_li°
 *
li°
);

	@path.c

13 
	~"ˇche.h
"

15 
	gbad_∑th
[] = "/bad-path/";

17 *
	$gë_∑th«me
()

19 
∑th«me_¨øy
[4][
PATH_MAX
];

20 
ödex
;

21  
∑th«me_¨øy
[3 & ++
ödex
];

22 
	}
}

24 *
	$˛ónup_∑th
(*
∑th
)

27 i‡(!
	`memcmp
(
∑th
, "./", 2)) {

28 
∑th
 += 2;

29 *
∑th
 == '/')

30 
∑th
++;

32  
∑th
;

33 
	}
}

35 *
	$mk∑th
(c⁄° *
fmt
, ...)

37 
va_li°
 
¨gs
;

38 
Àn
;

39 *
∑th«me
 = 
	`gë_∑th«me
();

41 
	`va_°¨t
(
¨gs
, 
fmt
);

42 
Àn
 = 
	`v¢¥ötf
(
∑th«me
, 
PATH_MAX
, 
fmt
, 
¨gs
);

43 
	`va_íd
(
¨gs
);

44 i‡(
Àn
 >
PATH_MAX
)

45  
bad_∑th
;

46  
	`˛ónup_∑th
(
∑th«me
);

47 
	}
}

49 *
	$gô_∑th
(c⁄° *
fmt
, ...)

51 c⁄° *
gô_dú
 = 
	`gë_gô_dú
();

52 *
∑th«me
 = 
	`gë_∑th«me
();

53 
va_li°
 
¨gs
;

54 
Àn
;

56 
Àn
 = 
	`°æí
(
gô_dú
);

57 i‡(
Àn
 > 
PATH_MAX
-100)

58  
bad_∑th
;

59 
	`mem˝y
(
∑th«me
, 
gô_dú
, 
Àn
);

60 i‡(
Àn
 && 
gô_dú
[len-1] != '/')

61 
∑th«me
[
Àn
++] = '/';

62 
	`va_°¨t
(
¨gs
, 
fmt
);

63 
Àn
 +
	`v¢¥ötf
(
∑th«me
 +Üí, 
PATH_MAX
 -Üí, 
fmt
, 
¨gs
);

64 
	`va_íd
(
¨gs
);

65 i‡(
Àn
 >
PATH_MAX
)

66  
bad_∑th
;

67  
	`˛ónup_∑th
(
∑th«me
);

68 
	}
}

72 
	$gô_mk°emp
(*
∑th
, 
size_t
 
Àn
, c⁄° *
ãm∂©e
)

74 *
ív
, *
pch
 = 
∑th
;

76 i‡((
ív
 = 
	`gëív
("TMPDIR")Ë=
NULL
) {

77 
	`°r˝y
(
pch
, "/tmp/");

78 
Àn
 -= 5;

79 
pch
 += 5;

81 
size_t
 
n
 = 
	`¢¥ötf
(
pch
, 
Àn
, "%s/", 
ív
);

83 
Àn
 -
n
;

84 
pch
 +
n
;

87 
	`°æ˝y
(
pch
, 
ãm∂©e
, 
Àn
);

89  
	`mk°emp
(
∑th
);

90 
	}
}

93 
	$vÆid©e_hódªf
(c⁄° *
∑th
)

95 
°©
 
°
;

96 *
buf
, 
buf„r
[256];

97 
sha1
[20];

98 
Àn
, 
fd
;

100 i‡(
	`l°©
(
∑th
, &
°
) < 0)

104 i‡(
	`S_ISLNK
(
°
.
°_mode
)) {

105 
Àn
 = 
	`ªadlök
(
∑th
, 
buf„r
, (buffer)-1);

106 i‡(
Àn
 >5 && !
	`memcmp
("ªfs/", 
buf„r
, 5))

114 
fd
 = 
	`›í
(
∑th
, 
O_RDONLY
);

115 i‡(
fd
 < 0)

117 
Àn
 = 
	`ªad_ö_fuŒ
(
fd
, 
buf„r
, (buffer)-1);

118 
	`˛o£
(
fd
);

123 i‡(
Àn
 < 4)

125 i‡(!
	`memcmp
("ªf:", 
buf„r
, 4)) {

126 
buf
 = 
buf„r
 + 4;

127 
Àn
 -= 4;

128 
Àn
 && 
	`is•a˚
(*
buf
))

129 
buf
++, 
Àn
--;

130 i‡(
Àn
 >5 && !
	`memcmp
("ªfs/", 
buf
, 5))

137 i‡(!
	`gë_sha1_hex
(
buf„r
, 
sha1
))

141 
	}
}

143 *
	$u£r_∑th
(*
buf
, *
∑th
, 
sz
)

145 
∑sswd
 *
pw
;

146 *
¶ash
;

147 
Àn
, 
ba£Àn
;

149 i‡(!
∑th
 ||Öath[0] != '~')

150  
NULL
;

151 
∑th
++;

152 
¶ash
 = 
	`°rchr
(
∑th
, '/');

153 i‡(
∑th
[0] == '/' || !path[0]) {

154 
pw
 = 
	`gëpwuid
(
	`gëuid
());

157 i‡(
¶ash
) {

158 *
¶ash
 = 0;

159 
pw
 = 
	`gëpw«m
(
∑th
);

160 *
¶ash
 = '/';

163 
pw
 = 
	`gëpw«m
(
∑th
);

165 i‡(!
pw
 || !pw->
pw_dú
 || 
sz
 <
	`°æí
(pw->pw_dir))

166  
NULL
;

167 
ba£Àn
 = 
	`°æí
(
pw
->
pw_dú
);

168 
	`mem˝y
(
buf
, 
pw
->
pw_dú
, 
ba£Àn
);

169 (1 < 
ba£Àn
Ë&& (
buf
[baselen-1] == '/')) {

170 
buf
[
ba£Àn
-1] = 0;

171 
ba£Àn
--;

173 i‡(
¶ash
 && slash[1]) {

174 
Àn
 = 
	`°æí
(
¶ash
);

175 i‡(
sz
 <
ba£Àn
 + 
Àn
)

176  
NULL
;

177 
	`mem˝y
(
buf
 + 
ba£Àn
, 
¶ash
, 
Àn
 + 1);

179  
buf
;

180 
	}
}

206 *
	$íãr_ªpo
(*
∑th
, 
°ri˘
)

208 
u£d_∑th
[
PATH_MAX
];

209 
vÆid©ed_∑th
[
PATH_MAX
];

211 i‡(!
∑th
)

212  
NULL
;

214 i‡(!
°ri˘
) {

215 c⁄° *
suffix
[] = {

216 ".gô/.gô", "/.gô", ".gô", "", 
NULL
,

218 
Àn
 = 
	`°æí
(
∑th
);

219 
i
;

220 (1 < 
Àn
Ë&& (
∑th
[len-1] == '/')) {

221 
∑th
[
Àn
-1] = 0;

222 
Àn
--;

224 i‡(
PATH_MAX
 <
Àn
)

225  
NULL
;

226 i‡(
∑th
[0] == '~') {

227 i‡(!
	`u£r_∑th
(
u£d_∑th
, 
∑th
, 
PATH_MAX
))

228  
NULL
;

229 
	`°r˝y
(
vÆid©ed_∑th
, 
∑th
);

230 
∑th
 = 
u£d_∑th
;

232 i‡(
PATH_MAX
 - 10 < 
Àn
)

233  
NULL
;

235 
∑th
 = 
	`°r˝y
(
u£d_∑th
,Öath);

236 
	`°r˝y
(
vÆid©ed_∑th
, 
∑th
);

238 
Àn
 = 
	`°æí
(
∑th
);

239 
i
 = 0; 
suffix
[i]; i++) {

240 
	`°r˝y
(
∑th
 + 
Àn
, 
suffix
[
i
]);

241 i‡(!
	`ac˚ss
(
∑th
, 
F_OK
)) {

242 
	`°rˇt
(
vÆid©ed_∑th
, 
suffix
[
i
]);

246 i‡(!
suffix
[
i
] || 
	`chdú
(
∑th
))

247  
NULL
;

248 
∑th
 = 
vÆid©ed_∑th
;

250 i‡(
	`chdú
(
∑th
))

251  
NULL
;

253 i‡(
	`ac˚ss
("obje˘s", 
X_OK
) == 0 &&áccess("refs", X_OK) == 0 &&

254 
	`vÆid©e_hódªf
("HEAD") == 0) {

255 
	`puãnv
("GIT_DIR=.");

256 
	`check_ªposô‹y_f‹m©
();

257  
∑th
;

260  
NULL
;

261 
	}
}

263 
	$adju°_sh¨ed_≥rm
(c⁄° *
∑th
)

265 
°©
 
°
;

266 
mode
;

268 i‡(!
sh¨ed_ªposô‹y
)

270 i‡(
	`l°©
(
∑th
, &
°
) < 0)

272 
mode
 = 
°
.
°_mode
;

273 i‡(
mode
 & 
S_IRUSR
)

274 
mode
 |(
sh¨ed_ªposô‹y
 =
PERM_GROUP


275 ? 
S_IRGRP


276 : (
sh¨ed_ªposô‹y
 =
PERM_EVERYBODY


277 ? (
S_IRGRP
|
S_IROTH
)

280 i‡(
mode
 & 
S_IWUSR
)

281 
mode
 |
S_IWGRP
;

283 i‡(
mode
 & 
S_IXUSR
)

284 
mode
 |(
sh¨ed_ªposô‹y
 =
PERM_GROUP


285 ? 
S_IXGRP


286 : (
sh¨ed_ªposô‹y
 =
PERM_EVERYBODY


287 ? (
S_IXGRP
|
S_IXOTH
)

289 i‡(
	`S_ISDIR
(
mode
))

290 
mode
 |
S_ISGID
;

291 i‡((
mode
 & 
°
.
°_mode
Ë!modê&& 
	`chmod
(
∑th
, mode) < 0)

294 
	}
}

	@peek-remote.c

1 
	~"ˇche.h
"

2 
	~"ªfs.h
"

3 
	~"pkt-löe.h
"

5 c⁄° 
	g≥ek_ªmŸe_ußge
[] =

7 c⁄° *
	gu∂ﬂd∑ck
 = "git-upload-pack";

9 
	$≥ek_ªmŸe
(
fd
[2], 
Êags
)

11 
ªf
 *ref;

13 
	`gë_ªmŸe_hóds
(
fd
[0], &
ªf
, 0, 
NULL
, 
Êags
);

14 
	`∑ckë_Êush
(
fd
[1]);

16 
ªf
) {

17 
	`¥ötf
("%s %s\n", 
	`sha1_to_hex
(
ªf
->
ﬁd_sha1
),Ñef->
«me
);

18 
ªf
 =Ñef->
√xt
;

21 
	}
}

23 
	$maö
(
¨gc
, **
¨gv
)

25 
i
, 
ªt
;

26 *
de°
 = 
NULL
;

27 
fd
[2];

28 
pid_t
 
pid
;

29 
n⁄gô
 = 0;

30 
Êags
 = 0;

32 
	`£tup_gô_dúe˘‹y_gíéy
(&
n⁄gô
);

34 
i
 = 1; i < 
¨gc
; i++) {

35 *
¨g
 = 
¨gv
[
i
];

37 i‡(*
¨g
 == '-') {

38 i‡(!
	`°∫cmp
("--u∂ﬂd-∑ck=", 
¨g
, 14)) {

39 
u∂ﬂd∑ck
 = 
¨g
 + 14;

42 i‡(!
	`°∫cmp
("--exec=", 
¨g
, 7)) {

43 
u∂ﬂd∑ck
 = 
¨g
 + 7;

46 i‡(!
	`°rcmp
("--ègs", 
¨g
)) {

47 
Êags
 |
REF_TAGS
;

50 i‡(!
	`°rcmp
("--hóds", 
¨g
)) {

51 
Êags
 |
REF_HEADS
;

54 i‡(!
	`°rcmp
("--ªfs", 
¨g
)) {

55 
Êags
 |
REF_NORMAL
;

58 
	`ußge
(
≥ek_ªmŸe_ußge
);

60 
de°
 = 
¨g
;

64 i‡(!
de°
 || 
i
 !
¨gc
 - 1)

65 
	`ußge
(
≥ek_ªmŸe_ußge
);

67 
pid
 = 
	`gô_c⁄√˘
(
fd
, 
de°
, 
u∂ﬂd∑ck
);

68 i‡(
pid
 < 0)

70 
ªt
 = 
	`≥ek_ªmŸe
(
fd
, 
Êags
);

71 
	`˛o£
(
fd
[0]);

72 
	`˛o£
(
fd
[1]);

73 
ªt
 |
	`föish_c⁄√˘
(
pid
);

74  !!
ªt
;

75 
	}
}

	@pkt-line.c

1 
	~"ˇche.h
"

2 
	~"pkt-löe.h
"

19 
ssize_t
 
	$ß„_wrôe
(
fd
, c⁄° *
buf
, 
ssize_t
 
n
)

21 
ssize_t
 
¬
 = 
n
;

22 
n
) {

23 
ªt
 = 
	`xwrôe
(
fd
, 
buf
, 
n
);

24 i‡(
ªt
 > 0) {

25 
buf
 = (*Ëbu‡+ 
ªt
;

26 
n
 -
ªt
;

29 i‡(!
ªt
)

30 
	`dõ
("writeÉrror (disk full?)");

31 
	`dõ
("wrôêîr‹ (%s)", 
	`°ªº‹
(
î∫o
));

33  
¬
;

34 
	}
}

40 
	$∑ckë_Êush
(
fd
)

42 
	`ß„_wrôe
(
fd
, "0000", 4);

43 
	}
}

45 
	#hex
(
a
Ë(
hexch¨
[◊Ë& 15])

	)

46 
	$∑ckë_wrôe
(
fd
, c⁄° *
fmt
, ...)

48 
buf„r
[1000];

49 
hexch¨
[] = "0123456789abcdef";

50 
va_li°
 
¨gs
;

51 
n
;

53 
	`va_°¨t
(
¨gs
, 
fmt
);

54 
n
 = 
	`v¢¥ötf
(
buf„r
 + 4, (buf„rË- 4, 
fmt
, 
¨gs
);

55 
	`va_íd
(
¨gs
);

56 i‡(
n
 >(
buf„r
)-4)

57 
	`dõ
("protocolÉrror: impossiblyÜongÜine");

58 
n
 += 4;

59 
buf„r
[0] = 
	`hex
(
n
 >> 12);

60 
buf„r
[1] = 
	`hex
(
n
 >> 8);

61 
buf„r
[2] = 
	`hex
(
n
 >> 4);

62 
buf„r
[3] = 
	`hex
(
n
);

63 
	`ß„_wrôe
(
fd
, 
buf„r
, 
n
);

64 
	}
}

66 
	$ß„_ªad
(
fd
, *
buf„r
, 
size
)

68 
n
 = 0;

70 
n
 < 
size
) {

71 
ªt
 = 
	`xªad
(
fd
, (*Ë
buf„r
 + 
n
, 
size
 -Ç);

72 i‡(
ªt
 < 0)

73 
	`dõ
("ªadÉº‹ (%s)", 
	`°ªº‹
(
î∫o
));

74 i‡(!
ªt
)

75 
	`dõ
("TheÑemoteÉnd hung up unexpectedly");

76 
n
 +
ªt
;

78 
	}
}

80 
	$∑ckë_ªad_löe
(
fd
, *
buf„r
, 
size
)

82 
n
;

83 
Àn
;

84 
löñí
[4];

86 
	`ß„_ªad
(
fd
, 
löñí
, 4);

88 
Àn
 = 0;

89 
n
 = 0;Ç < 4;Ç++) {

90 
c
 = 
löñí
[
n
];

91 
Àn
 <<= 4;

92 i‡(
c
 >= '0' && c <= '9') {

93 
Àn
 +
c
 - '0';

96 i‡(
c
 >= 'a' && c <= 'f') {

97 
Àn
 +
c
 - 'a' + 10;

100 i‡(
c
 >= 'A' && c <= 'F') {

101 
Àn
 +
c
 - 'A' + 10;

104 
	`dõ
("protocolÉrror: badÜineÜength character");

106 i‡(!
Àn
)

108 
Àn
 -= 4;

109 i‡(
Àn
 >
size
)

110 
	`dõ
("¥ŸocﬁÉº‹: badÜöêÀngth %d", 
Àn
);

111 
	`ß„_ªad
(
fd
, 
buf„r
, 
Àn
);

112 
buf„r
[
Àn
] = 0;

113  
Àn
;

114 
	}
}

	@pkt-line.h

1 #i‚de‡
PKTLINE_H


2 
	#PKTLINE_H


	)

4 
	~"gô-com∑t-utû.h
"

9 
∑ckë_Êush
(
fd
);

10 
	$∑ckë_wrôe
(
fd
, c⁄° *
fmt
, ...Ë
	`__©åibuã__
((
	`f‹m©
 (
¥ötf
, 2, 3)));

12 
	`∑ckë_ªad_löe
(
fd
, *
buf„r
, 
size
);

13 
ssize_t
 
	`ß„_wrôe
(, const *, ssize_t);

	@ppc/sha1.c

9 
	~<°dio.h
>

10 
	~<°rög.h
>

11 
	~"sha1.h
"

13 
sha1_c‹e
(
uöt32_t
 *
hash
, c⁄° *
p
,

14 
nblocks
);

16 
	$SHA1_Inô
(
SHA_CTX
 *
c
)

18 
c
->
hash
[0] = 0x67452301;

19 
c
->
hash
[1] = 0xEFCDAB89;

20 
c
->
hash
[2] = 0x98BADCFE;

21 
c
->
hash
[3] = 0x10325476;

22 
c
->
hash
[4] = 0xC3D2E1F0;

23 
c
->
Àn
 = 0;

24 
c
->
˙t
 = 0;

26 
	}
}

28 
	$SHA1_Upd©e
(
SHA_CTX
 *
c
, c⁄° *
±r
, 
n
)

30 
nb
;

31 c⁄° *
p
 = 
±r
;

33 
c
->
Àn
 +(
uöt64_t
Ë
n
 << 3;

34 
n
 != 0) {

35 i‡(
c
->
˙t
 || 
n
 < 64) {

36 
nb
 = 64 - 
c
->
˙t
;

37 i‡(
nb
 > 
n
)

38 
nb
 = 
n
;

39 
	`mem˝y
(&
c
->
buf
.
b
[c->
˙t
], 
p
, 
nb
);

40 i‡((
c
->
˙t
 +
nb
) == 64) {

41 
	`sha1_c‹e
(
c
->
hash
, c->
buf
.
b
, 1);

42 
c
->
˙t
 = 0;

45 
nb
 = 
n
 >> 6;

46 
	`sha1_c‹e
(
c
->
hash
, 
p
, 
nb
);

47 
nb
 <<= 6;

49 
n
 -
nb
;

50 
p
 +
nb
;

53 
	}
}

55 
	$SHA1_FöÆ
(*
hash
, 
SHA_CTX
 *
c
)

57 
˙t
 = 
c
->cnt;

59 
c
->
buf
.
b
[
˙t
++] = 0x80;

60 i‡(
˙t
 > 56) {

61 i‡(
˙t
 < 64)

62 
	`mem£t
(&
c
->
buf
.
b
[
˙t
], 0, 64 - cnt);

63 
	`sha1_c‹e
(
c
->
hash
, c->
buf
.
b
, 1);

64 
˙t
 = 0;

66 i‡(
˙t
 < 56)

67 
	`mem£t
(&
c
->
buf
.
b
[
˙t
], 0, 56 - cnt);

68 
c
->
buf
.
l
[7] = c->
Àn
;

69 
	`sha1_c‹e
(
c
->
hash
, c->
buf
.
b
, 1);

70 
	`mem˝y
(
hash
, 
c
->hash, 20);

72 
	}
}

	@ppc/sha1.h

6 
	~<°döt.h
>

8 
	ssha_c⁄ãxt
 {

9 
uöt32_t
 
	mhash
[5];

10 
uöt32_t
 
	m˙t
;

11 
uöt64_t
 
	mÀn
;

13 
	mb
[64];

14 
uöt64_t
 
	ml
[8];

15 } 
	mbuf
;

16 } 
	tSHA_CTX
;

18 
SHA1_Inô
(
SHA_CTX
 *
c
);

19 
SHA1_Upd©e
(
SHA_CTX
 *
c
, c⁄° *
p
, 
n
);

20 
SHA1_FöÆ
(*
hash
, 
SHA_CTX
 *
c
);

	@quote.c

1 
	~"ˇche.h
"

2 
	~"quŸe.h
"

15 #unde‡
EMIT


16 
	#EMIT
(
x
Ëdÿ{ i‡(++
Àn
 < 
n
Ë*
bp
++ = (x); } 0)

	)

18 
ölöe
 
	$√ed_bs_quŸe
(
c
)

20  (
c
 == '\'' || c == '!');

21 
	}
}

23 
size_t
 
	$sq_quŸe_buf
(*
d°
, 
size_t
 
n
, c⁄° *
§c
)

25 
c
;

26 *
bp
 = 
d°
;

27 
size_t
 
Àn
 = 0;

29 
	`EMIT
('\'');

30 (
c
 = *
§c
++)) {

31 i‡(
	`√ed_bs_quŸe
(
c
)) {

32 
	`EMIT
('\'');

33 
	`EMIT
('\\');

34 
	`EMIT
(
c
);

35 
	`EMIT
('\'');

37 
	`EMIT
(
c
);

40 
	`EMIT
('\'');

42 i‡–
n
 )

43 *
bp
 = 0;

45  
Àn
;

46 
	}
}

48 
	$sq_quŸe_¥öt
(
FILE
 *
°ªam
, c⁄° *
§c
)

50 
c
;

52 
	`Âutc
('\'', 
°ªam
);

53 (
c
 = *
§c
++)) {

54 i‡(
	`√ed_bs_quŸe
(
c
)) {

55 
	`Âuts
("'\\", 
°ªam
);

56 
	`Âutc
(
c
, 
°ªam
);

57 
	`Âutc
('\'', 
°ªam
);

59 
	`Âutc
(
c
, 
°ªam
);

62 
	`Âutc
('\'', 
°ªam
);

63 
	}
}

65 *
	$sq_quŸe
(c⁄° *
§c
)

67 *
buf
;

68 
size_t
 
˙t
;

70 
˙t
 = 
	`sq_quŸe_buf
(
NULL
, 0, 
§c
) + 1;

71 
buf
 = 
	`xmÆloc
(
˙t
);

72 
	`sq_quŸe_buf
(
buf
, 
˙t
, 
§c
);

74  
buf
;

75 
	}
}

77 *
	$sq_quŸe_¨gv
(c⁄° ** 
¨gv
, 
cou¡
)

79 *
buf
, *
to
;

80 
i
;

81 
size_t
 
Àn
 = 0;

84 i‡(
cou¡
 < 0) {

85 
cou¡
 = 0; 
¨gv
[count]; count++)

90 i‡(!
cou¡
)

91  
	`xˇŒoc
(1,1);

94 
i
 = 0; i < 
cou¡
; i++)

95 
Àn
 +
	`sq_quŸe_buf
(
NULL
, 0, 
¨gv
[
i
]) + 1;

98 
to
 = 
buf
 = 
	`xmÆloc
(
Àn
 + 1);

101 
i
 = 0; i < 
cou¡
; ++i) {

102 *
to
++ = ' ';

103 
to
 +
	`sq_quŸe_buf
—o, 
Àn
, 
¨gv
[
i
]);

106  
buf
;

107 
	}
}

113 
	$add_to_°rög
(**
±Ω
, *
sizï
, c⁄° *
°r
, 
quŸe
)

115 *
p
 = *
±Ω
;

116 
size
 = *
sizï
;

117 
oc
;

118 
îr
 = 0;

120 i‡(
quŸe
)

121 
oc
 = 
	`sq_quŸe_buf
(
p
, 
size
, 
°r
);

123 
oc
 = 
	`°æí
(
°r
);

124 
	`mem˝y
(
p
, 
°r
, (
size
 <
oc
) ? size - 1 : oc);

127 i‡(
size
 <
oc
) {

128 
îr
 = 1;

129 
oc
 = 
size
 - 1;

132 *
±Ω
 +
oc
;

133 **
±Ω
 = '\0';

134 *
sizï
 -
oc
;

135  
îr
;

136 
	}
}

138 *
	$sq_dequŸe
(*
¨g
)

140 *
d°
 = 
¨g
;

141 *
§c
 = 
¨g
;

142 
c
;

144 i‡(*
§c
 != '\'')

145  
NULL
;

147 
c
 = *++
§c
;

148 i‡(!
c
)

149  
NULL
;

150 i‡(
c
 != '\'') {

151 *
d°
++ = 
c
;

155 *++
§c
) {

157 *
d°
 = 0;

158  
¨g
;

160 
c
 = *++
§c
;

161 i‡(
	`√ed_bs_quŸe
(
c
Ë&& *++
§c
 == '\'') {

162 *
d°
++ = 
c
;

167  
NULL
;

170 
	}
}

193 
	$quŸe_c_°yÀ_cou¡ed
(c⁄° *
«me
, 
«mñí
,

194 *
outbuf
, 
FILE
 *
outÂ
, 
no_dq
)

196 #unde‡
EMIT


197 
	#EMIT
(
c
) \

198 (
outbuf
 ? (*outbuf++ = (
c
)Ë: 
outÂ
 ? 
	`Âutc
(c, outÂË: (
cou¡
++))

	)

200 
	#EMITQ
(Ë
	`EMIT
('\\')

	)

202 c⁄° *
•
;

203 
ch
, 
cou¡
 = 0, 
√edquŸe
 = 0;

205 i‡(!
no_dq
)

206 
	`EMIT
('"');

207 
•
 = 
«me
; s∞<Çamê+ 
«mñí
; sp++) {

208 
ch
 = *
•
;

209 i‡(!
ch
)

211 i‡((
ch
 < ' ') || (ch == '"') || (ch == '\\') ||

212 (
ch
 >= 0177)) {

213 
√edquŸe
 = 1;

214 
ch
) {

215 '\a': 
	`EMITQ
(); 
ch
 = 'a'; ;

216 '\b': 
	`EMITQ
(); 
ch
 = 'b'; ;

217 '\f': 
	`EMITQ
(); 
ch
 = 'f'; ;

218 '\n': 
	`EMITQ
(); 
ch
 = 'n'; ;

219 '\r': 
	`EMITQ
(); 
ch
 = 'r'; ;

220 '\t': 
	`EMITQ
(); 
ch
 = 't'; ;

221 '\v': 
	`EMITQ
(); 
ch
 = 'v'; ;

224 '"': 
	`EMITQ
(); ;

227 
	`EMITQ
();

228 
	`EMIT
(((
ch
 >> 6) & 03) + '0');

229 
	`EMIT
(((
ch
 >> 3) & 07) + '0');

230 
ch
 = (ch & 07) + '0';

234 
	`EMIT
(
ch
);

236 i‡(!
no_dq
)

237 
	`EMIT
('"');

238 i‡(
outbuf
)

239 *
outbuf
 = 0;

241  
√edquŸe
 ? 
cou¡
 : 0;

242 
	}
}

244 
	$quŸe_c_°yÀ
(c⁄° *
«me
, *
outbuf
, 
FILE
 *
outÂ
, 
no_dq
)

246 
˙t
 = 
	`°æí
(
«me
);

247  
	`quŸe_c_°yÀ_cou¡ed
(
«me
, 
˙t
, 
outbuf
, 
outÂ
, 
no_dq
);

248 
	}
}

259 *
	$unquŸe_c_°yÀ
(c⁄° *
quŸed
, c⁄° **
ídp
)

261 c⁄° *
•
;

262 *
«me
 = 
NULL
, *
ouç
 = NULL;

263 
cou¡
 = 0, 
ch
, 
ac
;

265 #unde‡
EMIT


266 
	#EMIT
(
c
Ë(
ouç
 ? (*ouç++ = (c)Ë: (
cou¡
++))

	)

268 i‡(*
quŸed
++ != '"')

269  
NULL
;

273 
•
 = 
quŸed
; (
ch
 = *sp++) != '"'; ) {

274 i‡(
ch
 == '\\') {

275 
ch
 = *
•
++) {

276 'a': 
ch
 = '\a'; ;

277 'b': 
ch
 = '\b'; ;

278 'f': 
ch
 = '\f'; ;

279 'n': 
ch
 = '\n'; ;

280 'r': 
ch
 = '\r'; ;

281 't': 
ch
 = '\t'; ;

282 'v': 
ch
 = '\v'; ;

296 
ac
 = ((
ch
 - '0') << 6);

297 i‡((
ch
 = *
•
++) < '0' || '7' < ch)

298  
NULL
;

299 
ac
 |((
ch
 - '0') << 3);

300 i‡((
ch
 = *
•
++) < '0' || '7' < ch)

301  
NULL
;

302 
ac
 |(
ch
 - '0');

303 
ch
 = 
ac
;

306  
NULL
;

309 
	`EMIT
(
ch
);

312 i‡(
«me
) {

313 *
ouç
 = 0;

314 i‡(
ídp
)

315 *
ídp
 = 
•
;

316  
«me
;

318 
ouç
 = 
«me
 = 
	`xmÆloc
(
cou¡
 + 1);

320 
	}
}

322 
	$wrôe_«me_quŸed
(c⁄° *
¥efix
, 
¥efix_Àn
,

323 c⁄° *
«me
, 
quŸe
, 
FILE
 *
out
)

325 
√edquŸe
;

327 i‡(!
quŸe
) {

328 
no_quŸe
:

329 i‡(
¥efix_Àn
)

330 
	`Ârötf
(
out
, "%.*s", 
¥efix_Àn
, 
¥efix
);

331 
	`Âuts
(
«me
, 
out
);

335 
√edquŸe
 = 0;

336 i‡(
¥efix_Àn
)

337 
√edquŸe
 = 
	`quŸe_c_°yÀ_cou¡ed
(
¥efix
, 
¥efix_Àn
,

338 
NULL
, NULL, 0);

339 i‡(!
√edquŸe
)

340 
√edquŸe
 = 
	`quŸe_c_°yÀ
(
«me
, 
NULL
, NULL, 0);

341 i‡(
√edquŸe
) {

342 
	`Âutc
('"', 
out
);

343 i‡(
¥efix_Àn
)

344 
	`quŸe_c_°yÀ_cou¡ed
(
¥efix
, 
¥efix_Àn
,

345 
NULL
, 
out
, 1);

346 
	`quŸe_c_°yÀ
(
«me
, 
NULL
, 
out
, 1);

347 
	`Âutc
('"', 
out
);

350 
no_quŸe
;

351 
	}
}

355 
	$≥æ_quŸe_¥öt
(
FILE
 *
°ªam
, c⁄° *
§c
)

357 c⁄° 
sq
 = '\'';

358 c⁄° 
bq
 = '\\';

359 
c
;

361 
	`Âutc
(
sq
, 
°ªam
);

362 (
c
 = *
§c
++)) {

363 i‡(
c
 =
sq
 || c =
bq
)

364 
	`Âutc
(
bq
, 
°ªam
);

365 
	`Âutc
(
c
, 
°ªam
);

367 
	`Âutc
(
sq
, 
°ªam
);

368 
	}
}

370 
	$pyth⁄_quŸe_¥öt
(
FILE
 *
°ªam
, c⁄° *
§c
)

372 c⁄° 
sq
 = '\'';

373 c⁄° 
bq
 = '\\';

374 c⁄° 
∆
 = '\n';

375 
c
;

377 
	`Âutc
(
sq
, 
°ªam
);

378 (
c
 = *
§c
++)) {

379 i‡(
c
 =
∆
) {

380 
	`Âutc
(
bq
, 
°ªam
);

381 
	`Âutc
('n', 
°ªam
);

384 i‡(
c
 =
sq
 || c =
bq
)

385 
	`Âutc
(
bq
, 
°ªam
);

386 
	`Âutc
(
c
, 
°ªam
);

388 
	`Âutc
(
sq
, 
°ªam
);

389 
	}
}

391 
	$t˛_quŸe_¥öt
(
FILE
 *
°ªam
, c⁄° *
§c
)

393 
c
;

395 
	`Âutc
('"', 
°ªam
);

396 (
c
 = *
§c
++)) {

397 
c
) {

401 
	`Âutc
('\\', 
°ªam
);

403 
	`Âutc
(
c
, 
°ªam
);

406 
	`Âuts
("\\f", 
°ªam
);

409 
	`Âuts
("\\r", 
°ªam
);

412 
	`Âuts
("\\n", 
°ªam
);

415 
	`Âuts
("\\t", 
°ªam
);

418 
	`Âuts
("\\v", 
°ªam
);

422 
	`Âutc
('"', 
°ªam
);

423 
	}
}

	@quote.h

1 #i‚de‡
QUOTE_H


2 
	#QUOTE_H


	)

4 
	~<°ddef.h
>

5 
	~<°dio.h
>

31 *
sq_quŸe
(c⁄° *
§c
);

32 
sq_quŸe_¥öt
(
FILE
 *
°ªam
, c⁄° *
§c
);

33 
size_t
 
sq_quŸe_buf
(*
d°
, size_à
n
, c⁄° *
§c
);

34 *
sq_quŸe_¨gv
(c⁄° ** 
¨gv
, 
cou¡
);

40 
add_to_°rög
(**
±Ω
, *
sizï
, c⁄° *
°r
, 
quŸe
);

46 *
sq_dequŸe
(*);

48 
quŸe_c_°yÀ
(c⁄° *
«me
, *
outbuf
, 
FILE
 *
outÂ
,

49 
nodq
);

50 *
unquŸe_c_°yÀ
(c⁄° *
quŸed
, c⁄° **
ídp
);

52 
wrôe_«me_quŸed
(c⁄° *
¥efix
, 
¥efix_Àn
,

53 c⁄° *
«me
, 
quŸe
, 
FILE
 *
out
);

56 
≥æ_quŸe_¥öt
(
FILE
 *
°ªam
, c⁄° *
§c
);

57 
pyth⁄_quŸe_¥öt
(
FILE
 *
°ªam
, c⁄° *
§c
);

58 
t˛_quŸe_¥öt
(
FILE
 *
°ªam
, c⁄° *
§c
);

	@reachable.c

1 
	~"ˇche.h
"

2 
	~"ªfs.h
"

3 
	~"èg.h
"

4 
	~"commô.h
"

5 
	~"blob.h
"

6 
	~"diff.h
"

7 
	~"ªvisi⁄.h
"

8 
	~"ªachabÀ.h
"

9 
	~"ˇche-åì.h
"

11 
	$¥o˚ss_blob
(
blob
 *blob,

12 
obje˘_¨øy
 *
p
,

13 
«me_∑th
 *
∑th
,

14 c⁄° *
«me
)

16 
obje˘
 *
obj
 = &
blob
->object;

18 i‡(
obj
->
Êags
 & 
SEEN
)

20 
obj
->
Êags
 |
SEEN
;

22 
	}
}

24 
	$¥o˚ss_åì
(
åì
 *tree,

25 
obje˘_¨øy
 *
p
,

26 
«me_∑th
 *
∑th
,

27 c⁄° *
«me
)

29 
obje˘
 *
obj
 = &
åì
->object;

30 
åì_desc
 
desc
;

31 
«me_íåy
 
íåy
;

32 
«me_∑th
 
me
;

34 i‡(
obj
->
Êags
 & 
SEEN
)

36 
obj
->
Êags
 |
SEEN
;

37 i‡(
	`∑r£_åì
(
åì
) < 0)

38 
	`dõ
("badÅªêobje˘ %s", 
	`sha1_to_hex
(
obj
->
sha1
));

39 
«me
 = 
	`x°rdup
(name);

40 
	`add_obje˘
(
obj
, 
p
, 
∑th
, 
«me
);

41 
me
.
up
 = 
∑th
;

42 
me
.
ñem
 = 
«me
;

43 
me
.
ñem_Àn
 = 
	`°æí
(
«me
);

45 
desc
.
buf
 = 
åì
->
buf„r
;

46 
desc
.
size
 = 
åì
->size;

48 
	`åì_íåy
(&
desc
, &
íåy
)) {

49 i‡(
	`S_ISDIR
(
íåy
.
mode
))

50 
	`¥o˚ss_åì
(
	`lookup_åì
(
íåy
.
sha1
), 
p
, &
me
,É¡ry.
∑th
);

52 
	`¥o˚ss_blob
(
	`lookup_blob
(
íåy
.
sha1
), 
p
, &
me
,É¡ry.
∑th
);

54 
	`‰ì
(
åì
->
buf„r
);

55 
åì
->
buf„r
 = 
NULL
;

56 
	}
}

58 
	$¥o˚ss_èg
(
èg
 *èg, 
obje˘_¨øy
 *
p
, c⁄° *
«me
)

60 
obje˘
 *
obj
 = &
èg
->object;

61 
«me_∑th
 
me
;

63 i‡(
obj
->
Êags
 & 
SEEN
)

65 
obj
->
Êags
 |
SEEN
;

67 
me
.
up
 = 
NULL
;

68 
me
.
ñem
 = "tag:/";

69 
me
.
ñem_Àn
 = 5;

71 i‡(
	`∑r£_èg
(
èg
) < 0)

72 
	`dõ
("badÅag obje˘ %s", 
	`sha1_to_hex
(
obj
->
sha1
));

73 
	`add_obje˘
(
èg
->
ègged
, 
p
, 
NULL
, 
«me
);

74 
	}
}

76 
	$wÆk_commô_li°
(
ªv_öfo
 *
ªvs
)

78 
i
;

79 
commô
 *commit;

80 
obje˘_¨øy
 
obje˘s
 = { 0, 0, 
NULL
 };

83 (
commô
 = 
	`gë_ªvisi⁄
(
ªvs
)Ë!
NULL
)

84 
	`¥o˚ss_åì
(
commô
->
åì
, &
obje˘s
, 
NULL
, "");

87 
i
 = 0; i < 
ªvs
->
≥ndög
.
ƒ
; i++) {

88 
obje˘_¨øy_íåy
 *
≥ndög
 = 
ªvs
->≥ndög.
obje˘s
 + 
i
;

89 
obje˘
 *
obj
 = 
≥ndög
->
ôem
;

90 c⁄° *
«me
 = 
≥ndög
->name;

91 i‡(
obj
->
ty≥
 =
OBJ_TAG
) {

92 
	`¥o˚ss_èg
((
èg
 *Ë
obj
, &
obje˘s
, 
«me
);

95 i‡(
obj
->
ty≥
 =
OBJ_TREE
) {

96 
	`¥o˚ss_åì
((
åì
 *)
obj
, &
obje˘s
, 
NULL
, 
«me
);

99 i‡(
obj
->
ty≥
 =
OBJ_BLOB
) {

100 
	`¥o˚ss_blob
((
blob
 *)
obj
, &
obje˘s
, 
NULL
, 
«me
);

103 
	`dõ
("unknow¿≥ndög obje˘ %†(%s)", 
	`sha1_to_hex
(
obj
->
sha1
), 
«me
);

105 
	}
}

107 
	$add_⁄e_ªÊog_ít
(*
osha1
, *
nsha1
,

108 c⁄° *
emaû
, 
time°amp
, 
tz
,

109 c⁄° *
mesßge
, *
cb_d©a
)

111 
obje˘
 *object;

112 
ªv_öfo
 *
ªvs
 = (ªv_öfÿ*)
cb_d©a
;

114 
obje˘
 = 
	`∑r£_obje˘
(
osha1
);

115 i‡(
obje˘
)

116 
	`add_≥ndög_obje˘
(
ªvs
, 
obje˘
, "");

117 
obje˘
 = 
	`∑r£_obje˘
(
nsha1
);

118 i‡(
obje˘
)

119 
	`add_≥ndög_obje˘
(
ªvs
, 
obje˘
, "");

121 
	}
}

123 
	$add_⁄e_ªf
(c⁄° *
∑th
, c⁄° *
sha1
, 
Êag
, *
cb_d©a
)

125 
obje˘
 *obje˘ = 
	`∑r£_obje˘
(
sha1
);

126 
ªv_öfo
 *
ªvs
 = (ªv_öfÿ*)
cb_d©a
;

128 i‡(!
obje˘
)

129 
	`dõ
("bad obje˘Ñef: %s:%s", 
∑th
, 
	`sha1_to_hex
(
sha1
));

130 
	`add_≥ndög_obje˘
(
ªvs
, 
obje˘
, "");

133 
	}
}

135 
	$add_⁄e_ªÊog
(c⁄° *
∑th
, c⁄° *
sha1
, 
Êag
, *
cb_d©a
)

137 
	`f‹_óch_ªÊog_ít
(
∑th
, 
add_⁄e_ªÊog_ít
, 
cb_d©a
);

139 
	}
}

141 
	$add_⁄e_åì
(c⁄° *
sha1
, 
ªv_öfo
 *
ªvs
)

143 
åì
 *åì = 
	`lookup_åì
(
sha1
);

144 
	`add_≥ndög_obje˘
(
ªvs
, &
åì
->
obje˘
, "");

145 
	}
}

147 
	$add_ˇche_åì
(
ˇche_åì
 *
ô
, 
ªv_öfo
 *
ªvs
)

149 
i
;

151 i‡(
ô
->
íåy_cou¡
 >= 0)

152 
	`add_⁄e_åì
(
ô
->
sha1
, 
ªvs
);

153 
i
 = 0; i < 
ô
->
subåì_ƒ
; i++)

154 
	`add_ˇche_åì
(
ô
->
down
[
i
]->
ˇche_åì
, 
ªvs
);

155 
	}
}

157 
	$add_ˇche_ªfs
(
ªv_öfo
 *
ªvs
)

159 
i
;

161 
	`ªad_ˇche
();

162 
i
 = 0; i < 
a˘ive_ƒ
; i++) {

163 
	`lookup_blob
(
a˘ive_ˇche
[
i
]->
sha1
);

171 i‡(
a˘ive_ˇche_åì
)

172 
	`add_ˇche_åì
(
a˘ive_ˇche_åì
, 
ªvs
);

173 
	}
}

175 
	$m¨k_ªachabÀ_obje˘s
(
ªv_öfo
 *
ªvs
, 
m¨k_ªÊog
)

181 
ªvs
->
èg_obje˘s
 = 1;

182 
ªvs
->
blob_obje˘s
 = 1;

183 
ªvs
->
åì_obje˘s
 = 1;

186 
	`add_ˇche_ªfs
(
ªvs
);

189 
	`f‹_óch_ªf
(
add_⁄e_ªf
, 
ªvs
);

192 i‡(
m¨k_ªÊog
)

193 
	`f‹_óch_ªÊog
(
add_⁄e_ªÊog
, 
ªvs
);

199 
	`¥ï¨e_ªvisi⁄_wÆk
(
ªvs
);

200 
	`wÆk_commô_li°
(
ªvs
);

201 
	}
}

	@reachable.h

1 #i‚de‡
REACHEABLE_H


2 
	#REACHEABLE_H


	)

4 
m¨k_ªachabÀ_obje˘s
(
ªv_öfo
 *
ªvs
, 
m¨k_ªÊog
);

	@read-cache.c

6 
	~"ˇche.h
"

7 
	~"ˇche-åì.h
"

18 
	#CACHE_EXT
(
s
Ë–(s[0]<<24)|(s[1]<<16)|(s[2]<<8)|(s[3]Ë)

	)

19 
	#CACHE_EXT_TREE
 0x54524545

	)

21 
ˇche_íåy
 **
	ga˘ive_ˇche
;

22 
time_t
 
	gödex_fûe_time°amp
;

23 
	ga˘ive_ƒ
, 
	ga˘ive_Æloc
, 
	ga˘ive_ˇche_ch™ged
;

25 
ˇche_åì
 *
	ga˘ive_ˇche_åì
;

27 
	gˇche_î∫o
;

29 *
	gˇche_mm≠
;

30 
size_t
 
	gˇche_mm≠_size
;

37 
	$fûl_°©_ˇche_öfo
(
ˇche_íåy
 *
˚
, 
°©
 *
°
)

39 
˚
->
˚_˘ime
.
£c
 = 
	`ht⁄l
(
°
->
°_˘ime
);

40 
˚
->
˚_mtime
.
£c
 = 
	`ht⁄l
(
°
->
°_mtime
);

41 #ifde‡
USE_NSEC


42 
˚
->
˚_˘ime
.
n£c
 = 
	`ht⁄l
(
°
->
°_˘im
.
tv_n£c
);

43 
˚
->
˚_mtime
.
n£c
 = 
	`ht⁄l
(
°
->
°_mtim
.
tv_n£c
);

45 
˚
->
˚_dev
 = 
	`ht⁄l
(
°
->
°_dev
);

46 
˚
->
˚_öo
 = 
	`ht⁄l
(
°
->
°_öo
);

47 
˚
->
˚_uid
 = 
	`ht⁄l
(
°
->
°_uid
);

48 
˚
->
˚_gid
 = 
	`ht⁄l
(
°
->
°_gid
);

49 
˚
->
˚_size
 = 
	`ht⁄l
(
°
->
°_size
);

51 i‡(
assume_unch™ged
)

52 
˚
->
˚_Êags
 |
	`ht⁄s
(
CE_VALID
);

53 
	}
}

55 
	$˚_com∑ª_d©a
(
ˇche_íåy
 *
˚
, 
°©
 *
°
)

57 
m©ch
 = -1;

58 
fd
 = 
	`›í
(
˚
->
«me
, 
O_RDONLY
);

60 i‡(
fd
 >= 0) {

61 
sha1
[20];

62 i‡(!
	`ödex_fd
(
sha1
, 
fd
, 
°
, 0, 
NULL
))

63 
m©ch
 = 
	`hashcmp
(
sha1
, 
˚
->sha1);

66  
m©ch
;

67 
	}
}

69 
	$˚_com∑ª_lök
(
ˇche_íåy
 *
˚
, 
ex≥˘ed_size
)

71 
m©ch
 = -1;

72 *
èrgë
;

73 *
buf„r
;

74 
size
;

75 
ty≥
[10];

76 
Àn
;

78 
èrgë
 = 
	`xmÆloc
(
ex≥˘ed_size
);

79 
Àn
 = 
	`ªadlök
(
˚
->
«me
, 
èrgë
, 
ex≥˘ed_size
);

80 i‡(
Àn
 !
ex≥˘ed_size
) {

81 
	`‰ì
(
èrgë
);

84 
buf„r
 = 
	`ªad_sha1_fûe
(
˚
->
sha1
, 
ty≥
, &
size
);

85 i‡(!
buf„r
) {

86 
	`‰ì
(
èrgë
);

89 i‡(
size
 =
ex≥˘ed_size
)

90 
m©ch
 = 
	`memcmp
(
buf„r
, 
èrgë
, 
size
);

91 
	`‰ì
(
buf„r
);

92 
	`‰ì
(
èrgë
);

93  
m©ch
;

94 
	}
}

96 
	$˚_modifõd_check_fs
(
ˇche_íåy
 *
˚
, 
°©
 *
°
)

98 
°
->
°_mode
 & 
S_IFMT
) {

99 
S_IFREG
:

100 i‡(
	`˚_com∑ª_d©a
(
˚
, 
°
))

101  
DATA_CHANGED
;

103 
S_IFLNK
:

104 i‡(
	`˚_com∑ª_lök
(
˚
, 
°
->
°_size
))

105  
DATA_CHANGED
;

108  
TYPE_CHANGED
;

111 
	}
}

113 
	$˚_m©ch_°©_basic
(
ˇche_íåy
 *
˚
, 
°©
 *
°
)

115 
ch™ged
 = 0;

117 
	`¡ohl
(
˚
->
˚_mode
Ë& 
S_IFMT
) {

118 
S_IFREG
:

119 
ch™ged
 |!
	`S_ISREG
(
°
->
°_mode
Ë? 
TYPE_CHANGED
 : 0;

123 i‡(
åu°_execuèbÀ_bô
 &&

124 (0100 & (
	`¡ohl
(
˚
->
˚_mode
Ë^ 
°
->
°_mode
)))

125 
ch™ged
 |
MODE_CHANGED
;

127 
S_IFLNK
:

128 
ch™ged
 |!
	`S_ISLNK
(
°
->
°_mode
Ë? 
TYPE_CHANGED
 : 0;

131 
	`dõ
("öã∫ÆÉº‹: ce_modêi†%o", 
	`¡ohl
(
˚
->
˚_mode
));

133 i‡(
˚
->
˚_mtime
.
£c
 !
	`ht⁄l
(
°
->
°_mtime
))

134 
ch™ged
 |
MTIME_CHANGED
;

135 i‡(
˚
->
˚_˘ime
.
£c
 !
	`ht⁄l
(
°
->
°_˘ime
))

136 
ch™ged
 |
CTIME_CHANGED
;

138 #ifde‡
USE_NSEC


144 i‡(
˚
->
˚_mtime
.
n£c
 !
	`ht⁄l
(
°
->
°_mtim
.
tv_n£c
))

145 
ch™ged
 |
MTIME_CHANGED
;

146 i‡(
˚
->
˚_˘ime
.
n£c
 !
	`ht⁄l
(
°
->
°_˘im
.
tv_n£c
))

147 
ch™ged
 |
CTIME_CHANGED
;

150 i‡(
˚
->
˚_uid
 !
	`ht⁄l
(
°
->
°_uid
) ||

151 
˚
->
˚_gid
 !
	`ht⁄l
(
°
->
°_gid
))

152 
ch™ged
 |
OWNER_CHANGED
;

153 i‡(
˚
->
˚_öo
 !
	`ht⁄l
(
°
->
°_öo
))

154 
ch™ged
 |
INODE_CHANGED
;

156 #ifde‡
USE_STDEV


162 i‡(
˚
->
˚_dev
 !
	`ht⁄l
(
°
->
°_dev
))

163 
ch™ged
 |
INODE_CHANGED
;

166 i‡(
˚
->
˚_size
 !
	`ht⁄l
(
°
->
°_size
))

167 
ch™ged
 |
DATA_CHANGED
;

169  
ch™ged
;

170 
	}
}

172 
	$˚_m©ch_°©
(
ˇche_íåy
 *
˚
, 
°©
 *
°
, 
›ti⁄s
)

174 
ch™ged
;

175 
ign‹e_vÆid
 = 
›ti⁄s
 & 01;

176 
assume_øcy_is_modifõd
 = 
›ti⁄s
 & 02;

182 i‡(!
ign‹e_vÆid
 && (
˚
->
˚_Êags
 & 
	`ht⁄s
(
CE_VALID
)))

185 
ch™ged
 = 
	`˚_m©ch_°©_basic
(
˚
, 
°
);

203 i‡(!
ch™ged
 &&

204 
ödex_fûe_time°amp
 &&

205 
ödex_fûe_time°amp
 <
	`¡ohl
(
˚
->
˚_mtime
.
£c
)) {

206 i‡(
assume_øcy_is_modifõd
)

207 
ch™ged
 |
DATA_CHANGED
;

209 
ch™ged
 |
	`˚_modifõd_check_fs
(
˚
, 
°
);

212  
ch™ged
;

213 
	}
}

215 
	$˚_modifõd
(
ˇche_íåy
 *
˚
, 
°©
 *
°
, 
ªÆly
)

217 
ch™ged
, 
ch™ged_fs
;

218 
ch™ged
 = 
	`˚_m©ch_°©
(
˚
, 
°
, 
ªÆly
);

219 i‡(!
ch™ged
)

225 i‡(
ch™ged
 & (
MODE_CHANGED
 | 
TYPE_CHANGED
))

226  
ch™ged
;

232 i‡((
ch™ged
 & 
DATA_CHANGED
Ë&& 
˚
->
˚_size
 !
	`ht⁄l
(0))

233  
ch™ged
;

235 
ch™ged_fs
 = 
	`˚_modifõd_check_fs
(
˚
, 
°
);

236 i‡(
ch™ged_fs
)

237  
ch™ged
 | 
ch™ged_fs
;

239 
	}
}

241 
	$ba£_«me_com∑ª
(c⁄° *
«me1
, 
Àn1
, 
mode1
,

242 c⁄° *
«me2
, 
Àn2
, 
mode2
)

244 
c1
, 
c2
;

245 
Àn
 = 
Àn1
 < 
Àn2
 ?Üen1 :Üen2;

246 
cmp
;

248 
cmp
 = 
	`memcmp
(
«me1
, 
«me2
, 
Àn
);

249 i‡(
cmp
)

250  
cmp
;

251 
c1
 = 
«me1
[
Àn
];

252 
c2
 = 
«me2
[
Àn
];

253 i‡(!
c1
 && 
	`S_ISDIR
(
mode1
))

254 
c1
 = '/';

255 i‡(!
c2
 && 
	`S_ISDIR
(
mode2
))

256 
c2
 = '/';

257  (
c1
 < 
c2
) ? -1 : (c1 > c2) ? 1 : 0;

258 
	}
}

260 
	$ˇche_«me_com∑ª
(c⁄° *
«me1
, 
Êags1
, c⁄° *
«me2
, 
Êags2
)

262 
Àn1
 = 
Êags1
 & 
CE_NAMEMASK
;

263 
Àn2
 = 
Êags2
 & 
CE_NAMEMASK
;

264 
Àn
 = 
Àn1
 < 
Àn2
 ?Üen1 :Üen2;

265 
cmp
;

267 
cmp
 = 
	`memcmp
(
«me1
, 
«me2
, 
Àn
);

268 i‡(
cmp
)

269  
cmp
;

270 i‡(
Àn1
 < 
Àn2
)

272 i‡(
Àn1
 > 
Àn2
)

276 
Êags1
 &
CE_STAGEMASK
;

277 
Êags2
 &
CE_STAGEMASK
;

279 i‡(
Êags1
 < 
Êags2
)

281 i‡(
Êags1
 > 
Êags2
)

284 
	}
}

286 
	$ˇche_«me_pos
(c⁄° *
«me
, 
«mñí
)

288 
fú°
, 
œ°
;

290 
fú°
 = 0;

291 
œ°
 = 
a˘ive_ƒ
;

292 
œ°
 > 
fú°
) {

293 
√xt
 = (
œ°
 + 
fú°
) >> 1;

294 
ˇche_íåy
 *
˚
 = 
a˘ive_ˇche
[
√xt
];

295 
cmp
 = 
	`ˇche_«me_com∑ª
(
«me
, 
«mñí
, 
˚
->«me, 
	`¡ohs
(˚->
˚_Êags
));

296 i‡(!
cmp
)

297  
√xt
;

298 i‡(
cmp
 < 0) {

299 
œ°
 = 
√xt
;

302 
fú°
 = 
√xt
+1;

304  -
fú°
-1;

305 
	}
}

308 
	$ªmove_ˇche_íåy_©
(
pos
)

310 
a˘ive_ˇche_ch™ged
 = 1;

311 
a˘ive_ƒ
--;

312 i‡(
pos
 >
a˘ive_ƒ
)

314 
	`memmove
(
a˘ive_ˇche
 + 
pos
,á˘ive_ˇchê+Öo†+ 1, (
a˘ive_ƒ
 -ÖosË* (
ˇche_íåy
 *));

316 
	}
}

318 
	$ªmove_fûe_‰om_ˇche
(c⁄° *
∑th
)

320 
pos
 = 
	`ˇche_«me_pos
(
∑th
, 
	`°æí
(path));

321 i‡(
pos
 < 0)

322 
pos
 = -pos-1;

323 
pos
 < 
a˘ive_ƒ
 && !
	`°rcmp
(
a˘ive_ˇche
[pos]->
«me
, 
∑th
))

324 
	`ªmove_ˇche_íåy_©
(
pos
);

326 
	}
}

328 
	$add_fûe_to_ödex
(c⁄° *
∑th
, 
vîbo£
)

330 
size
, 
«mñí
;

331 
°©
 
°
;

332 
ˇche_íåy
 *
˚
;

334 i‡(
	`l°©
(
∑th
, &
°
))

335 
	`dõ
("%s: u«bÀÅÿ°© (%s)", 
∑th
, 
	`°ªº‹
(
î∫o
));

337 i‡(!
	`S_ISREG
(
°
.
°_mode
Ë&& !
	`S_ISLNK
(st.st_mode))

338 
	`dõ
("%s: c™ o∆yáddÑeguœ∏fûe†‹ symbﬁi¯löks", 
∑th
);

340 
«mñí
 = 
	`°æí
(
∑th
);

341 
size
 = 
	`ˇche_íåy_size
(
«mñí
);

342 
˚
 = 
	`xˇŒoc
(1, 
size
);

343 
	`mem˝y
(
˚
->
«me
, 
∑th
, 
«mñí
);

344 
˚
->
˚_Êags
 = 
	`ht⁄s
(
«mñí
);

345 
	`fûl_°©_ˇche_öfo
(
˚
, &
°
);

347 
˚
->
˚_mode
 = 
	`¸óã_˚_mode
(
°
.
°_mode
);

348 i‡(!
åu°_execuèbÀ_bô
) {

352 
pos
 = 
	`ˇche_«me_pos
(
∑th
, 
«mñí
);

353 i‡(
pos
 >= 0)

354 
˚
->
˚_mode
 = 
a˘ive_ˇche
[
pos
]->ce_mode;

355 i‡(
	`S_ISREG
(
°
.
°_mode
))

356 
˚
->
˚_mode
 = 
	`¸óã_˚_mode
(
S_IFREG
 | 0666);

359 i‡(
	`ödex_∑th
(
˚
->
sha1
, 
∑th
, &
°
, 1))

360 
	`dõ
("u«bÀÅÿödex fûê%s", 
∑th
);

361 i‡(
	`add_ˇche_íåy
(
˚
, 
ADD_CACHE_OK_TO_ADD
|
ADD_CACHE_OK_TO_REPLACE
))

362 
	`dõ
("u«bÀÅÿadd %†tÿödex",
∑th
);

363 i‡(
vîbo£
)

364 
	`¥ötf
("add '%s'\n", 
∑th
);

365 
	`ˇche_åì_övÆid©e_∑th
(
a˘ive_ˇche_åì
, 
∑th
);

367 
	}
}

369 
	$˚_ßme_«me
(
ˇche_íåy
 *
a
, ˇche_íåy *
b
)

371 
Àn
 = 
	`˚_«mñí
(
a
);

372  
	`˚_«mñí
(
b
Ë=
Àn
 && !
	`memcmp
(
a
->
«me
, b->name,Üen);

373 
	}
}

375 
	$˚_∑th_m©ch
(c⁄° 
ˇche_íåy
 *
˚
, c⁄° **
∑th•ec
)

377 c⁄° *
m©ch
, *
«me
;

378 
Àn
;

380 i‡(!
∑th•ec
)

383 
Àn
 = 
	`˚_«mñí
(
˚
);

384 
«me
 = 
˚
->name;

385 (
m©ch
 = *
∑th•ec
++Ë!
NULL
) {

386 
m©chÀn
 = 
	`°æí
(
m©ch
);

387 i‡(
m©chÀn
 > 
Àn
)

389 i‡(
	`memcmp
(
«me
, 
m©ch
, 
m©chÀn
))

391 i‡(
m©chÀn
 && 
«me
[matchlen-1] == '/')

393 i‡(
«me
[
m©chÀn
] == '/' || !name[matchlen])

395 i‡(!
m©chÀn
)

399 
	}
}

409 
	$vîify_dŸfûe
(c⁄° *
ª°
)

416 *
ª°
) {

426 i‡(
ª°
[1] != 'i')

428 i‡(
ª°
[2] != 't')

430 
ª°
 += 2;

433 i‡(
ª°
[1] == '\0' ||Ñest[1] == '/')

437 
	}
}

439 
	$vîify_∑th
(c⁄° *
∑th
)

441 
c
;

443 
öside
;

445 i‡(!
c
)

447 i‡(
c
 == '/') {

448 
öside
:

449 
c
 = *
∑th
++;

450 
c
) {

456 i‡(
	`vîify_dŸfûe
(
∑th
))

461 
c
 = *
∑th
++;

463 
	}
}

469 
	$has_fûe_«me
(c⁄° 
ˇche_íåy
 *
˚
, 
pos
, 
ok_to_ª∂a˚
)

471 
ªtvÆ
 = 0;

472 
Àn
 = 
	`˚_«mñí
(
˚
);

473 
°age
 = 
	`˚_°age
(
˚
);

474 c⁄° *
«me
 = 
˚
->name;

476 
pos
 < 
a˘ive_ƒ
) {

477 
ˇche_íåy
 *
p
 = 
a˘ive_ˇche
[
pos
++];

479 i‡(
Àn
 >
	`˚_«mñí
(
p
))

481 i‡(
	`memcmp
(
«me
, 
p
->«me, 
Àn
))

483 i‡(
	`˚_°age
(
p
Ë!
°age
)

485 i‡(
p
->
«me
[
Àn
] != '/')

487 
ªtvÆ
 = -1;

488 i‡(!
ok_to_ª∂a˚
)

490 
	`ªmove_ˇche_íåy_©
(--
pos
);

492  
ªtvÆ
;

493 
	}
}

499 
	$has_dú_«me
(c⁄° 
ˇche_íåy
 *
˚
, 
pos
, 
ok_to_ª∂a˚
)

501 
ªtvÆ
 = 0;

502 
°age
 = 
	`˚_°age
(
˚
);

503 c⁄° *
«me
 = 
˚
->name;

504 c⁄° *
¶ash
 = 
«me
 + 
	`˚_«mñí
(
˚
);

507 
Àn
;

510 i‡(*--
¶ash
 == '/')

512 i‡(
¶ash
 <
˚
->
«me
)

513  
ªtvÆ
;

515 
Àn
 = 
¶ash
 - 
«me
;

517 
pos
 = 
	`ˇche_«me_pos
(
«me
, 
	`¡ohs
(
	`¸óã_˚_Êags
(
Àn
, 
°age
)));

518 i‡(
pos
 >= 0) {

519 
ªtvÆ
 = -1;

520 i‡(!
ok_to_ª∂a˚
)

522 
	`ªmove_ˇche_íåy_©
(
pos
);

531 
pos
 = -pos-1;

532 
pos
 < 
a˘ive_ƒ
) {

533 
ˇche_íåy
 *
p
 = 
a˘ive_ˇche
[
pos
];

534 i‡((
	`˚_«mñí
(
p
Ë<
Àn
) ||

535 (
p
->
«me
[
Àn
] != '/') ||

536 
	`memcmp
(
p
->
«me
,Çame, 
Àn
))

538 i‡(
	`˚_°age
(
p
Ë=
°age
)

544  
ªtvÆ
;

545 
pos
++;

548  
ªtvÆ
;

549 
	}
}

560 
	$check_fûe_dúe˘‹y_c⁄Êi˘
(c⁄° 
ˇche_íåy
 *
˚
, 
pos
, 
ok_to_ª∂a˚
)

567 
ªtvÆ
 = 
	`has_fûe_«me
(
˚
, 
pos
, 
ok_to_ª∂a˚
);

572  
ªtvÆ
 + 
	`has_dú_«me
(
˚
, 
pos
, 
ok_to_ª∂a˚
);

573 
	}
}

575 
	$add_ˇche_íåy
(
ˇche_íåy
 *
˚
, 
›ti⁄
)

577 
pos
;

578 
ok_to_add
 = 
›ti⁄
 & 
ADD_CACHE_OK_TO_ADD
;

579 
ok_to_ª∂a˚
 = 
›ti⁄
 & 
ADD_CACHE_OK_TO_REPLACE
;

580 
skù_df_check
 = 
›ti⁄
 & 
ADD_CACHE_SKIP_DFCHECK
;

582 
pos
 = 
	`ˇche_«me_pos
(
˚
->
«me
, 
	`¡ohs
(˚->
˚_Êags
));

585 i‡(
pos
 >= 0) {

586 
a˘ive_ˇche_ch™ged
 = 1;

587 
a˘ive_ˇche
[
pos
] = 
˚
;

590 
pos
 = -pos-1;

596 i‡(
pos
 < 
a˘ive_ƒ
 && 
	`˚_°age
(
˚
) == 0) {

597 
	`˚_ßme_«me
(
a˘ive_ˇche
[
pos
], 
˚
)) {

598 
ok_to_add
 = 1;

599 i‡(!
	`ªmove_ˇche_íåy_©
(
pos
))

604 i‡(!
ok_to_add
)

606 i‡(!
	`vîify_∑th
(
˚
->
«me
))

609 i‡(!
skù_df_check
 &&

610 
	`check_fûe_dúe˘‹y_c⁄Êi˘
(
˚
, 
pos
, 
ok_to_ª∂a˚
)) {

611 i‡(!
ok_to_ª∂a˚
)

612  
	`îr‹
("'%s'áµór†a†bŸhá fûê™dá†®dúe˘‹y", 
˚
->
«me
);

613 
pos
 = 
	`ˇche_«me_pos
(
˚
->
«me
, 
	`¡ohs
(˚->
˚_Êags
));

614 
pos
 = -pos-1;

618 i‡(
a˘ive_ƒ
 =
a˘ive_Æloc
) {

619 
a˘ive_Æloc
 = 
	`Æloc_ƒ
(active_alloc);

620 
a˘ive_ˇche
 = 
	`xªÆloc
◊˘ive_ˇche, 
a˘ive_Æloc
 * (
ˇche_íåy
 *));

624 
a˘ive_ƒ
++;

625 i‡(
a˘ive_ƒ
 > 
pos
)

626 
	`memmove
(
a˘ive_ˇche
 + 
pos
 + 1,á˘ive_ˇchê+Öos, (
a˘ive_ƒ
 -Öo†- 1Ë* (
˚
));

627 
a˘ive_ˇche
[
pos
] = 
˚
;

628 
a˘ive_ˇche_ch™ged
 = 1;

630 
	}
}

643 
ˇche_íåy
 *
	$ª‰esh_ˇche_íåy
(
ˇche_íåy
 *
˚
, 
ªÆly
)

645 
°©
 
°
;

646 
ˇche_íåy
 *
upd©ed
;

647 
ch™ged
, 
size
;

649 i‡(
	`l°©
(
˚
->
«me
, &
°
) < 0) {

650 
ˇche_î∫o
 = 
î∫o
;

651  
NULL
;

654 
ch™ged
 = 
	`˚_m©ch_°©
(
˚
, &
°
, 
ªÆly
);

655 i‡(!
ch™ged
) {

656 i‡(
ªÆly
 && 
assume_unch™ged
 &&

657 !(
˚
->
˚_Êags
 & 
	`ht⁄s
(
CE_VALID
)))

660  
˚
;

663 i‡(
	`˚_modifõd
(
˚
, &
°
, 
ªÆly
)) {

664 
ˇche_î∫o
 = 
EINVAL
;

665  
NULL
;

668 
size
 = 
	`˚_size
(
˚
);

669 
upd©ed
 = 
	`xmÆloc
(
size
);

670 
	`mem˝y
(
upd©ed
, 
˚
, 
size
);

671 
	`fûl_°©_ˇche_öfo
(
upd©ed
, &
°
);

679 i‡(!
ªÆly
 && 
assume_unch™ged
 && !(
˚
->
˚_Êags
 & 
	`ht⁄s
(
CE_VALID
)))

680 
upd©ed
->
˚_Êags
 &~
	`ht⁄s
(
CE_VALID
);

682  
upd©ed
;

683 
	}
}

685 
	$ª‰esh_ˇche
(
Êags
)

687 
i
;

688 
has_îr‹s
 = 0;

689 
ªÆly
 = (
Êags
 & 
REFRESH_REALLY
) != 0;

690 
Ælow_unmîged
 = (
Êags
 & 
REFRESH_UNMERGED
) != 0;

691 
quõt
 = (
Êags
 & 
REFRESH_QUIET
) != 0;

692 
nŸ_√w
 = (
Êags
 & 
REFRESH_IGNORE_MISSING
) != 0;

694 
i
 = 0; i < 
a˘ive_ƒ
; i++) {

695 
ˇche_íåy
 *
˚
, *
√w
;

696 
˚
 = 
a˘ive_ˇche
[
i
];

697 i‡(
	`˚_°age
(
˚
)) {

698 (
i
 < 
a˘ive_ƒ
) &&

699 ! 
	`°rcmp
(
a˘ive_ˇche
[
i
]->
«me
, 
˚
->name))

700 
i
++;

701 
i
--;

702 i‡(
Ælow_unmîged
)

704 
	`¥ötf
("%s:Çìd†mîge\n", 
˚
->
«me
);

705 
has_îr‹s
 = 1;

709 
√w
 = 
	`ª‰esh_ˇche_íåy
(
˚
, 
ªÆly
);

710 i‡(
√w
 =
˚
)

712 i‡(!
√w
) {

713 i‡(
nŸ_√w
 && 
ˇche_î∫o
 =
ENOENT
)

715 i‡(
ªÆly
 && 
ˇche_î∫o
 =
EINVAL
) {

719 
˚
->
˚_Êags
 &~
	`ht⁄s
(
CE_VALID
);

720 
a˘ive_ˇche_ch™ged
 = 1;

722 i‡(
quõt
)

724 
	`¥ötf
("%s:Çìd†upd©e\n", 
˚
->
«me
);

725 
has_îr‹s
 = 1;

728 
a˘ive_ˇche_ch™ged
 = 1;

732 
a˘ive_ˇche
[
i
] = 
√w
;

734  
has_îr‹s
;

735 
	}
}

737 
	$vîify_hdr
(
ˇche_hódî
 *
hdr
, 
size
)

739 
SHA_CTX
 
c
;

740 
sha1
[20];

742 i‡(
hdr
->
hdr_sig«tuª
 !
	`ht⁄l
(
CACHE_SIGNATURE
))

743  
	`îr‹
("bad signature");

744 i‡(
hdr
->
hdr_vîsi⁄
 !
	`ht⁄l
(2))

745  
	`îr‹
("bad index version");

746 
	`SHA1_Inô
(&
c
);

747 
	`SHA1_Upd©e
(&
c
, 
hdr
, 
size
 - 20);

748 
	`SHA1_FöÆ
(
sha1
, &
c
);

749 i‡(
	`hashcmp
(
sha1
, (*)
hdr
 + 
size
 - 20))

750  
	`îr‹
("bad index file sha1 signature");

752 
	}
}

754 
	$ªad_ödex_exãnsi⁄
(c⁄° *
ext
, *
d©a
, 
sz
)

756 
	`CACHE_EXT
(
ext
)) {

757 
CACHE_EXT_TREE
:

758 
a˘ive_ˇche_åì
 = 
	`ˇche_åì_ªad
(
d©a
, 
sz
);

761 i‡(*
ext
 < 'A' || 'Z' < *ext)

762  
	`îr‹
("index uses %.4sÉxtension, which we doÇot understand",

763 
ext
);

764 
	`Ârötf
(
°dîr
, "ign‹ög %.4†exãnsi⁄\n", 
ext
);

768 
	}
}

770 
	$ªad_ˇche
()

772  
	`ªad_ˇche_‰om
(
	`gë_ödex_fûe
());

773 
	}
}

776 
	$ªad_ˇche_‰om
(c⁄° *
∑th
)

778 
fd
, 
i
;

779 
°©
 
°
;

780 
off£t
;

781 
ˇche_hódî
 *
hdr
;

783 
î∫o
 = 
EBUSY
;

784 i‡(
ˇche_mm≠
)

785  
a˘ive_ƒ
;

787 
î∫o
 = 
ENOENT
;

788 
ödex_fûe_time°amp
 = 0;

789 
fd
 = 
	`›í
(
∑th
, 
O_RDONLY
);

790 i‡(
fd
 < 0) {

791 i‡(
î∫o
 =
ENOENT
)

793 
	`dõ
("ödex fûê›í faûed (%s)", 
	`°ªº‹
(
î∫o
));

796 i‡(!
	`f°©
(
fd
, &
°
)) {

797 
ˇche_mm≠_size
 = 
°
.
°_size
;

798 
î∫o
 = 
EINVAL
;

799 i‡(
ˇche_mm≠_size
 >(
ˇche_hódî
) + 20)

800 
ˇche_mm≠
 = 
	`xmm≠
(
NULL
, 
ˇche_mm≠_size
, 
PROT_READ
 | 
PROT_WRITE
, 
MAP_PRIVATE
, 
fd
, 0);

802 
	`dõ
("index file smallerÅhanÉxpected");

804 
	`dõ
("ˇ¬Ÿ sèàthê›í index (%s)", 
	`°ªº‹
(
î∫o
));

805 
	`˛o£
(
fd
);

807 
hdr
 = 
ˇche_mm≠
;

808 i‡(
	`vîify_hdr
(
hdr
, 
ˇche_mm≠_size
) < 0)

809 
unm≠
;

811 
a˘ive_ƒ
 = 
	`¡ohl
(
hdr
->
hdr_íåõs
);

812 
a˘ive_Æloc
 = 
	`Æloc_ƒ
(
a˘ive_ƒ
);

813 
a˘ive_ˇche
 = 
	`xˇŒoc
(
a˘ive_Æloc
, (
ˇche_íåy
 *));

815 
off£t
 = (*
hdr
);

816 
i
 = 0; i < 
a˘ive_ƒ
; i++) {

817 
ˇche_íåy
 *
˚
 = (ˇche_íåy *Ë((*Ë
ˇche_mm≠
 + 
off£t
);

818 
off£t
 = off£à+ 
	`˚_size
(
˚
);

819 
a˘ive_ˇche
[
i
] = 
˚
;

821 
ödex_fûe_time°amp
 = 
°
.
°_mtime
;

822 
off£t
 <
ˇche_mm≠_size
 - 20 - 8) {

829 
extsize
;

830 
	`mem˝y
(&
extsize
, (*Ë
ˇche_mm≠
 + 
off£t
 + 4, 4);

831 
extsize
 = 
	`¡ohl
(extsize);

832 i‡(
	`ªad_ödex_exãnsi⁄
(((c⁄° *Ë
ˇche_mm≠
Ë+ 
off£t
,

833 (*Ë
ˇche_mm≠
 + 
off£t
 + 8,

834 
extsize
) < 0)

835 
unm≠
;

836 
off£t
 += 8;

837 
off£t
 +
extsize
;

839  
a˘ive_ƒ
;

841 
unm≠
:

842 
	`munm≠
(
ˇche_mm≠
, 
ˇche_mm≠_size
);

843 
î∫o
 = 
EINVAL
;

844 
	`dõ
("index file corrupt");

845 
	}
}

847 
	$disˇrd_ˇche
()

849 
ªt
;

851 
a˘ive_ƒ
 = 
a˘ive_ˇche_ch™ged
 = 0;

852 
ödex_fûe_time°amp
 = 0;

853 
	`ˇche_åì_‰ì
(&
a˘ive_ˇche_åì
);

854 i‡(
ˇche_mm≠
 =
NULL
)

856 
ªt
 = 
	`munm≠
(
ˇche_mm≠
, 
ˇche_mm≠_size
);

857 
ˇche_mm≠
 = 
NULL
;

858 
ˇche_mm≠_size
 = 0;

861  
ªt
;

862 
	}
}

864 
	#WRITE_BUFFER_SIZE
 8192

	)

865 
	gwrôe_buf„r
[
WRITE_BUFFER_SIZE
];

866 
	gwrôe_buf„r_Àn
;

868 
	$˚_wrôe_Êush
(
SHA_CTX
 *
c⁄ãxt
, 
fd
)

870 
buf„ªd
 = 
wrôe_buf„r_Àn
;

871 i‡(
buf„ªd
) {

872 
	`SHA1_Upd©e
(
c⁄ãxt
, 
wrôe_buf„r
, 
buf„ªd
);

873 i‡(
	`wrôe_ö_fuŒ
(
fd
, 
wrôe_buf„r
, 
buf„ªd
) != buffered)

875 
wrôe_buf„r_Àn
 = 0;

878 
	}
}

880 
	$˚_wrôe
(
SHA_CTX
 *
c⁄ãxt
, 
fd
, *
d©a
, 
Àn
)

882 
Àn
) {

883 
buf„ªd
 = 
wrôe_buf„r_Àn
;

884 
∑πül
 = 
WRITE_BUFFER_SIZE
 - 
buf„ªd
;

885 i‡(
∑πül
 > 
Àn
)

886 
∑πül
 = 
Àn
;

887 
	`mem˝y
(
wrôe_buf„r
 + 
buf„ªd
, 
d©a
, 
∑πül
);

888 
buf„ªd
 +
∑πül
;

889 i‡(
buf„ªd
 =
WRITE_BUFFER_SIZE
) {

890 
wrôe_buf„r_Àn
 = 
buf„ªd
;

891 i‡(
	`˚_wrôe_Êush
(
c⁄ãxt
, 
fd
))

893 
buf„ªd
 = 0;

895 
wrôe_buf„r_Àn
 = 
buf„ªd
;

896 
Àn
 -
∑πül
;

897 
d©a
 = (*Ëd©®+ 
∑πül
;

900 
	}
}

902 
	$wrôe_ödex_ext_hódî
(
SHA_CTX
 *
c⁄ãxt
, 
fd
,

903 
ext
, 
sz
)

905 
ext
 = 
	`ht⁄l
(ext);

906 
sz
 = 
	`ht⁄l
(sz);

907  ((
	`˚_wrôe
(
c⁄ãxt
, 
fd
, &
ext
, 4) < 0) ||

908 (
	`˚_wrôe
(
c⁄ãxt
, 
fd
, &
sz
, 4) < 0)) ? -1 : 0;

909 
	}
}

911 
	$˚_Êush
(
SHA_CTX
 *
c⁄ãxt
, 
fd
)

913 
À·
 = 
wrôe_buf„r_Àn
;

915 i‡(
À·
) {

916 
wrôe_buf„r_Àn
 = 0;

917 
	`SHA1_Upd©e
(
c⁄ãxt
, 
wrôe_buf„r
, 
À·
);

921 i‡(
À·
 + 20 > 
WRITE_BUFFER_SIZE
) {

922 i‡(
	`wrôe_ö_fuŒ
(
fd
, 
wrôe_buf„r
, 
À·
) !=Üeft)

924 
À·
 = 0;

928 
	`SHA1_FöÆ
(
wrôe_buf„r
 + 
À·
, 
c⁄ãxt
);

929 
À·
 += 20;

930  (
	`wrôe_ö_fuŒ
(
fd
, 
wrôe_buf„r
, 
À·
) !=Üeft) ? -1 : 0;

931 
	}
}

933 
	$˚_smudge_øcûy_˛ón_íåy
(
ˇche_íåy
 *
˚
)

941 
°©
 
°
;

943 i‡(
	`l°©
(
˚
->
«me
, &
°
) < 0)

945 i‡(
	`˚_m©ch_°©_basic
(
˚
, &
°
))

947 i‡(
	`˚_modifõd_check_fs
(
˚
, &
°
)) {

973 
˚
->
˚_size
 = 
	`ht⁄l
(0);

975 
	}
}

977 
	$wrôe_ˇche
(
√wfd
, 
ˇche_íåy
 **
ˇche
, 
íåõs
)

979 
SHA_CTX
 
c
;

980 
ˇche_hódî
 
hdr
;

981 
i
, 
ªmoved
;

983 
i
 = 
ªmoved
 = 0; i < 
íåõs
; i++)

984 i‡(!
ˇche
[
i
]->
˚_mode
)

985 
ªmoved
++;

987 
hdr
.
hdr_sig«tuª
 = 
	`ht⁄l
(
CACHE_SIGNATURE
);

988 
hdr
.
hdr_vîsi⁄
 = 
	`ht⁄l
(2);

989 
hdr
.
hdr_íåõs
 = 
	`ht⁄l
(
íåõs
 - 
ªmoved
);

991 
	`SHA1_Inô
(&
c
);

992 i‡(
	`˚_wrôe
(&
c
, 
√wfd
, &
hdr
, (hdr)) < 0)

995 
i
 = 0; i < 
íåõs
; i++) {

996 
ˇche_íåy
 *
˚
 = 
ˇche
[
i
];

997 i‡(!
˚
->
˚_mode
)

999 i‡(
ödex_fûe_time°amp
 &&

1000 
ödex_fûe_time°amp
 <
	`¡ohl
(
˚
->
˚_mtime
.
£c
))

1001 
	`˚_smudge_øcûy_˛ón_íåy
(
˚
);

1002 i‡(
	`˚_wrôe
(&
c
, 
√wfd
, 
˚
, 
	`˚_size
(ce)) < 0)

1007 i‡(
a˘ive_ˇche_åì
) {

1008 
sz
;

1009 *
d©a
 = 
	`ˇche_åì_wrôe
(
a˘ive_ˇche_åì
, &
sz
);

1010 i‡(
d©a
 &&

1011 !
	`wrôe_ödex_ext_hódî
(&
c
, 
√wfd
, 
CACHE_EXT_TREE
, 
sz
) &&

1012 !
	`˚_wrôe
(&
c
, 
√wfd
, 
d©a
, 
sz
))

1013 
	`‰ì
(
d©a
);

1015 
	`‰ì
(
d©a
);

1019  
	`˚_Êush
(&
c
, 
√wfd
);

1020 
	}
}

	@receive-pack.c

1 
	~"ˇche.h
"

2 
	~"∑ck.h
"

3 
	~"ªfs.h
"

4 
	~"pkt-löe.h
"

5 
	~"run-comm™d.h
"

6 
	~"exec_cmd.h
"

7 
	~"commô.h
"

8 
	~"obje˘.h
"

10 c⁄° 
	gª˚ive_∑ck_ußge
[] = "git-receive-pack <git-dir>";

12 
	gdíy_n⁄_Á°_f‹w¨ds
 = 0;

13 
	gª˚ive_u≈ack_limô
 = -1;

14 
	gå™s„r_u≈ack_limô
 = -1;

15 
	gu≈ack_limô
 = 100;

16 
	gªp‹t_°©us
;

18 
	gˇ∑bûôõs
[] = "Ñeport-status delete-refs ";

19 
	gˇ∑bûôõs_£¡
;

21 
	$ª˚ive_∑ck_c⁄fig
(c⁄° *
v¨
, c⁄° *
vÆue
)

23 i‡(
	`°rcmp
(
v¨
, "receive.denynonfastforwards") == 0) {

24 
díy_n⁄_Á°_f‹w¨ds
 = 
	`gô_c⁄fig_boﬁ
(
v¨
, 
vÆue
);

28 i‡(
	`°rcmp
(
v¨
, "receive.unpacklimit") == 0) {

29 
ª˚ive_u≈ack_limô
 = 
	`gô_c⁄fig_öt
(
v¨
, 
vÆue
);

33 i‡(
	`°rcmp
(
v¨
, "transfer.unpacklimit") == 0) {

34 
å™s„r_u≈ack_limô
 = 
	`gô_c⁄fig_öt
(
v¨
, 
vÆue
);

38  
	`gô_deÁu…_c⁄fig
(
v¨
, 
vÆue
);

39 
	}
}

41 
	$show_ªf
(c⁄° *
∑th
, c⁄° *
sha1
, 
Êag
, *
cb_d©a
)

43 i‡(
ˇ∑bûôõs_£¡
)

44 
	`∑ckë_wrôe
(1, "%†%s\n", 
	`sha1_to_hex
(
sha1
), 
∑th
);

46 
	`∑ckë_wrôe
(1, "%s %s%c%s\n",

47 
	`sha1_to_hex
(
sha1
), 
∑th
, 0, 
ˇ∑bûôõs
);

48 
ˇ∑bûôõs_£¡
 = 1;

50 
	}
}

52 
	$wrôe_hód_öfo
()

54 
	`f‹_óch_ªf
(
show_ªf
, 
NULL
);

55 i‡(!
ˇ∑bûôõs_£¡
)

56 
	`show_ªf
("ˇ∑bûôõs^{}", 
nuŒ_sha1
, 0, 
NULL
);

58 
	}
}

60 
	scomm™d
 {

61 
comm™d
 *
	m√xt
;

62 c⁄° *
	mîr‹_°rög
;

63 
	mﬁd_sha1
[20];

64 
	m√w_sha1
[20];

65 
	mªf_«me
[
FLEX_ARRAY
];

68 
comm™d
 *
	gcomm™ds
;

70 
	gupd©e_hook
[] = "hooks/update";

72 
	$run_upd©e_hook
(c⁄° *
ª‚ame
,

73 *
ﬁd_hex
, *
√w_hex
)

75 
code
;

77 i‡(
	`ac˚ss
(
upd©e_hook
, 
X_OK
) < 0)

79 
code
 = 
	`run_comm™d_›t
(
RUN_COMMAND_NO_STDIN


80 | 
RUN_COMMAND_STDOUT_TO_STDERR
,

81 
upd©e_hook
, 
ª‚ame
, 
ﬁd_hex
, 
√w_hex
, 
NULL
);

82 
code
) {

85 -
ERR_RUN_COMMAND_FORK
:

86  
	`îr‹
("hook fork failed");

87 -
ERR_RUN_COMMAND_EXEC
:

88  
	`îr‹
("hookÉxecute failed");

89 -
ERR_RUN_COMMAND_WAITPID
:

90  
	`îr‹
("waitpid failed");

91 -
ERR_RUN_COMMAND_WAITPID_WRONG_PID
:

92  
	`îr‹
("waitpid is confused");

93 -
ERR_RUN_COMMAND_WAITPID_SIGNAL
:

94  
	`îr‹
("%†dõd o‡sig«l", 
upd©e_hook
);

95 -
ERR_RUN_COMMAND_WAITPID_NOEXIT
:

96  
	`îr‹
("%†dõd så™gñy", 
upd©e_hook
);

98 
	`îr‹
("%†exôed wôhÉº‹ codê%d", 
upd©e_hook
, -
code
);

99  -
code
;

101 
	}
}

103 
	$upd©e
(
comm™d
 *
cmd
)

105 c⁄° *
«me
 = 
cmd
->
ªf_«me
;

106 *
ﬁd_sha1
 = 
cmd
->old_sha1;

107 *
√w_sha1
 = 
cmd
->new_sha1;

108 
√w_hex
[41], 
ﬁd_hex
[41];

109 
ªf_lock
 *
lock
;

111 
cmd
->
îr‹_°rög
 = 
NULL
;

112 i‡(!
	`°∫cmp
(
«me
, "ªfs/", 5Ë&& 
	`check_ªf_f‹m©
(name + 5)) {

113 
cmd
->
îr‹_°rög
 = "funnyÑefname";

114  
	`îr‹
("refusingÅo create funnyÑef '%s'Üocally",

115 
«me
);

118 
	`°r˝y
(
√w_hex
, 
	`sha1_to_hex
(
√w_sha1
));

119 
	`°r˝y
(
ﬁd_hex
, 
	`sha1_to_hex
(
ﬁd_sha1
));

121 i‡(!
	`is_nuŒ_sha1
(
√w_sha1
Ë&& !
	`has_sha1_fûe
(new_sha1)) {

122 
cmd
->
îr‹_°rög
 = "badÖack";

123  
	`îr‹
("unpack should have generated %s, "

124 "buàI c™'àföd it!", 
√w_hex
);

126 i‡(
díy_n⁄_Á°_f‹w¨ds
 && !
	`is_nuŒ_sha1
(
√w_sha1
) &&

127 !
	`is_nuŒ_sha1
(
ﬁd_sha1
) &&

128 !
	`°∫cmp
(
«me
, "refs/heads/", 11)) {

129 
commô
 *
ﬁd_commô
, *
√w_commô
;

130 
commô_li°
 *
ba£s
, *
ít
;

132 
ﬁd_commô
 = (
commô
 *)
	`∑r£_obje˘
(
ﬁd_sha1
);

133 
√w_commô
 = (
commô
 *)
	`∑r£_obje˘
(
√w_sha1
);

134 
ba£s
 = 
	`gë_mîge_ba£s
(
ﬁd_commô
, 
√w_commô
, 1);

135 
ít
 = 
ba£s
;É¡;É¡ =É¡->
√xt
)

136 i‡(!
	`hashcmp
(
ﬁd_sha1
, 
ít
->
ôem
->
obje˘
.
sha1
))

138 
	`‰ì_commô_li°
(
ba£s
);

139 i‡(!
ít
)

140  
	`îr‹
("denyingÇon-fast forward;"

143 i‡(
	`run_upd©e_hook
(
«me
, 
ﬁd_hex
, 
√w_hex
)) {

144 
cmd
->
îr‹_°rög
 = "hook declined";

145  
	`îr‹
("hook de˛öedÅÿupd©ê%s", 
«me
);

148 i‡(
	`is_nuŒ_sha1
(
√w_sha1
)) {

149 i‡(
	`dñëe_ªf
(
«me
, 
ﬁd_sha1
)) {

150 
cmd
->
îr‹_°rög
 = "failedÅo delete";

151  
	`îr‹
("ÁûedÅÿdñëê%s", 
«me
);

153 
	`Ârötf
(
°dîr
, "%s: %†-> dñëed\n", 
«me
, 
ﬁd_hex
);

156 
lock
 = 
	`lock_™y_ªf_f‹_upd©e
(
«me
, 
ﬁd_sha1
);

157 i‡(!
lock
) {

158 
cmd
->
îr‹_°rög
 = "failedÅoÜock";

159  
	`îr‹
("ÁûedÅÿlock %s", 
«me
);

161 
	`wrôe_ªf_sha1
(
lock
, 
√w_sha1
, "push");

162 
	`Ârötf
(
°dîr
, "%s: %†-> %s\n", 
«me
, 
ﬁd_hex
, 
√w_hex
);

165 
	}
}

167 
	gupd©e_po°_hook
[] = "hooks/post-update";

169 
	$run_upd©e_po°_hook
(
comm™d
 *
cmd
)

171 
comm™d
 *
cmd_p
;

172 
¨gc
;

173 c⁄° **
¨gv
;

175 i‡(
	`ac˚ss
(
upd©e_po°_hook
, 
X_OK
) < 0)

177 
¨gc
 = 1, 
cmd_p
 = 
cmd
; cmd_p; cmd_∞cmd_p->
√xt
) {

178 i‡(
cmd_p
->
îr‹_°rög
)

180 
¨gc
++;

182 
¨gv
 = 
	`xmÆloc
((*¨gvË* (1 + 
¨gc
));

183 
¨gv
[0] = 
upd©e_po°_hook
;

185 
¨gc
 = 1, 
cmd_p
 = 
cmd
; cmd_p; cmd_∞cmd_p->
√xt
) {

186 *
p
;

187 i‡(
cmd_p
->
îr‹_°rög
)

189 
p
 = 
	`xmÆloc
(
	`°æí
(
cmd_p
->
ªf_«me
) + 1);

190 
	`°r˝y
(
p
, 
cmd_p
->
ªf_«me
);

191 
¨gv
[
¨gc
] = 
p
;

192 
¨gc
++;

194 
¨gv
[
¨gc
] = 
NULL
;

195 
	`run_comm™d_v_›t
(
¨gv
, 
RUN_COMMAND_NO_STDIN


196 | 
RUN_COMMAND_STDOUT_TO_STDERR
);

197 
	}
}

203 
	$execuã_comm™ds
()

205 
comm™d
 *
cmd
 = 
comm™ds
;

207 
cmd
) {

208 
	`upd©e
(
cmd
);

209 
cmd
 = cmd->
√xt
;

211 
	`run_upd©e_po°_hook
(
comm™ds
);

212 
	}
}

214 
	$ªad_hód_öfo
()

216 
comm™d
 **
p
 = &
comm™ds
;

218 
löe
[1000];

219 
ﬁd_sha1
[20], 
√w_sha1
[20];

220 
comm™d
 *
cmd
;

221 *
ª‚ame
;

222 
Àn
, 
ªÊí
;

224 
Àn
 = 
	`∑ckë_ªad_löe
(0, 
löe
, (line));

225 i‡(!
Àn
)

227 i‡(
löe
[
Àn
-1] == '\n')

228 
löe
[--
Àn
] = 0;

229 i‡(
Àn
 < 83 ||

230 
löe
[40] != ' ' ||

231 
löe
[81] != ' ' ||

232 
	`gë_sha1_hex
(
löe
, 
ﬁd_sha1
) ||

233 
	`gë_sha1_hex
(
löe
 + 41, 
√w_sha1
))

234 
	`dõ
("protocolÉrror:Éxpected old/new/ref, got '%s'",

235 
löe
);

237 
ª‚ame
 = 
löe
 + 82;

238 
ªÊí
 = 
	`°æí
(
ª‚ame
);

239 i‡(
ªÊí
 + 82 < 
Àn
) {

240 i‡(
	`°r°r
(
ª‚ame
 + 
ªÊí
 + 1, "report-status"))

241 
ªp‹t_°©us
 = 1;

243 
cmd
 = 
	`xmÆloc
((
comm™d
Ë+ 
Àn
 - 80);

244 
	`hash˝y
(
cmd
->
ﬁd_sha1
, old_sha1);

245 
	`hash˝y
(
cmd
->
√w_sha1
,Çew_sha1);

246 
	`mem˝y
(
cmd
->
ªf_«me
, 
löe
 + 82, 
Àn
 - 81);

247 
cmd
->
îr‹_°rög
 = "n/a (unpackerÉrror)";

248 
cmd
->
√xt
 = 
NULL
;

249 *
p
 = 
cmd
;

250 
p
 = &
cmd
->
√xt
;

252 
	}
}

254 c⁄° *
	$∑r£_∑ck_hódî
(
∑ck_hódî
 *
hdr
)

256 
	`ªad_∑ck_hódî
(0, 
hdr
)) {

257 
PH_ERROR_EOF
:

260 
PH_ERROR_PACK_SIGNATURE
:

263 
PH_ERROR_PROTOCOL
:

270  
NULL
;

272 
	}
}

274 c⁄° *
	g∑ck_lockfûe
;

276 c⁄° *
	$u≈ack
()

278 
∑ck_hódî
 
hdr
;

279 c⁄° *
hdr_îr
;

280 
hdr_¨g
[38];

282 
hdr_îr
 = 
	`∑r£_∑ck_hódî
(&
hdr
);

283 i‡(
hdr_îr
)

284  
hdr_îr
;

285 
	`¢¥ötf
(
hdr_¨g
, (hdr_arg), "--pack_header=%u,%u",

286 
	`¡ohl
(
hdr
.
hdr_vîsi⁄
),Çtohl(hdr.
hdr_íåõs
));

288 i‡(
	`¡ohl
(
hdr
.
hdr_íåõs
Ë< 
u≈ack_limô
) {

289 
code
;

290 c⁄° *
u≈ackî
[3];

291 
u≈ackî
[0] = "unpack-objects";

292 
u≈ackî
[1] = 
hdr_¨g
;

293 
u≈ackî
[2] = 
NULL
;

294 
code
 = 
	`run_comm™d_v_›t
(
u≈ackî
, 
RUN_GIT_CMD
);

295 
code
) {

297  
NULL
;

298 -
ERR_RUN_COMMAND_FORK
:

300 -
ERR_RUN_COMMAND_EXEC
:

302 -
ERR_RUN_COMMAND_WAITPID
:

304 -
ERR_RUN_COMMAND_WAITPID_WRONG_PID
:

306 -
ERR_RUN_COMMAND_WAITPID_SIGNAL
:

308 -
ERR_RUN_COMMAND_WAITPID_NOEXIT
:

314 c⁄° *
kì≥r
[6];

315 
fd
[2], 
s
, 
Àn
, 
°©us
;

316 
pid_t
 
pid
;

317 
kìp_¨g
[256];

318 
∑ck«me
[46];

320 
s
 = 
	`•rötf
(
kìp_¨g
, "--kìpÙe˚ive-∑ck %ò⁄ ", 
	`gëpid
());

321 i‡(
	`gëho°«me
(
kìp_¨g
 + 
s
, (keep_arg) - s))

322 
	`°r˝y
(
kìp_¨g
 + 
s
, "localhost");

324 
kì≥r
[0] = "index-pack";

325 
kì≥r
[1] = "--stdin";

326 
kì≥r
[2] = "--fix-thin";

327 
kì≥r
[3] = 
hdr_¨g
;

328 
kì≥r
[4] = 
kìp_¨g
;

329 
kì≥r
[5] = 
NULL
;

331 i‡(
	`pùe
(
fd
) < 0)

333 
pid
 = 
	`f‹k
();

334 i‡(
pid
 < 0)

336 i‡(!
pid
) {

337 
	`dup2
(
fd
[1], 1);

338 
	`˛o£
(
fd
[1]);

339 
	`˛o£
(
fd
[0]);

340 
	`execv_gô_cmd
(
kì≥r
);

341 
	`dõ
("execv of index-pack failed");

343 
	`˛o£
(
fd
[1]);

352 
Àn
 = 0;

353 
Àn
 < 46 && (
s
 = 
	`xªad
(
fd
[0], 
∑ck«me
+len, 46-len)) > 0;

354 
Àn
 +
s
);

355 
	`˛o£
(
fd
[0]);

356 i‡(
Àn
 =46 && 
∑ck«me
[45] == '\n' &&

357 
	`memcmp
(
∑ck«me
, "keep\t", 5) == 0) {

358 
∑th
[
PATH_MAX
];

359 
∑ck«me
[45] = 0;

360 
	`¢¥ötf
(
∑th
, (path), "%s/pack/pack-%s.keep",

361 
	`gë_obje˘_dúe˘‹y
(), 
∑ck«me
 + 5);

362 
∑ck_lockfûe
 = 
	`x°rdup
(
∑th
);

366 
	`waôpid
(
pid
, &
°©us
, 0) < 0)

367 i‡(
î∫o
 !
EINTR
)

369 i‡(
	`WIFEXITED
(
°©us
)) {

370 
code
 = 
	`WEXITSTATUS
(
°©us
);

371 i‡(
code
)

373 
	`ª¥ï¨e_∑cked_gô
();

374  
NULL
;

378 
	}
}

380 
	$ªp‹t
(c⁄° *
u≈ack_°©us
)

382 
comm™d
 *
cmd
;

383 
	`∑ckë_wrôe
(1, "unpack %s\n",

384 
u≈ack_°©us
 ? unpack_status : "ok");

385 
cmd
 = 
comm™ds
; cmd; cmd = cmd->
√xt
) {

386 i‡(!
cmd
->
îr‹_°rög
)

387 
	`∑ckë_wrôe
(1, "ok %s\n",

388 
cmd
->
ªf_«me
);

390 
	`∑ckë_wrôe
(1, "ng %s %s\n",

391 
cmd
->
ªf_«me
, cmd->
îr‹_°rög
);

393 
	`∑ckë_Êush
(1);

394 
	}
}

396 
	$dñëe_⁄ly
(
comm™d
 *
cmd
)

398 
cmd
) {

399 i‡(!
	`is_nuŒ_sha1
(
cmd
->
√w_sha1
))

401 
cmd
 = cmd->
√xt
;

404 
	}
}

406 
	$maö
(
¨gc
, **
¨gv
)

408 
i
;

409 *
dú
 = 
NULL
;

411 
¨gv
++;

412 
i
 = 1; i < 
¨gc
; i++) {

413 *
¨g
 = *
¨gv
++;

415 i‡(*
¨g
 == '-') {

417 
	`ußge
(
ª˚ive_∑ck_ußge
);

419 i‡(
dú
)

420 
	`ußge
(
ª˚ive_∑ck_ußge
);

421 
dú
 = 
¨g
;

423 i‡(!
dú
)

424 
	`ußge
(
ª˚ive_∑ck_ußge
);

426 i‡(!
	`íãr_ªpo
(
dú
, 0))

427 
	`dõ
("'%s': u«bÀÅÿchdú o∏nŸá gôárchive", 
dú
);

429 i‡(
	`is_ªposô‹y_shÆlow
())

430 
	`dõ
("attemptÅoÖush intoá shallowÑepository");

432 
	`gô_c⁄fig
(
ª˚ive_∑ck_c⁄fig
);

434 i‡(0 <
å™s„r_u≈ack_limô
)

435 
u≈ack_limô
 = 
å™s„r_u≈ack_limô
;

436 i‡(0 <
ª˚ive_u≈ack_limô
)

437 
u≈ack_limô
 = 
ª˚ive_u≈ack_limô
;

439 
	`wrôe_hód_öfo
();

442 
	`∑ckë_Êush
(1);

444 
	`ªad_hód_öfo
();

445 i‡(
comm™ds
) {

446 c⁄° *
u≈ack_°©us
 = 
NULL
;

448 i‡(!
	`dñëe_⁄ly
(
comm™ds
))

449 
u≈ack_°©us
 = 
	`u≈ack
();

450 i‡(!
u≈ack_°©us
)

451 
	`execuã_comm™ds
();

452 i‡(
∑ck_lockfûe
)

453 
	`u∆ök
(
∑ck_lockfûe
);

454 i‡(
ªp‹t_°©us
)

455 
	`ªp‹t
(
u≈ack_°©us
);

458 
	}
}

	@reflog-walk.c

1 
	~"ˇche.h
"

2 
	~"commô.h
"

3 
	~"ªfs.h
"

4 
	~"diff.h
"

5 
	~"ªvisi⁄.h
"

6 
	~"∑th-li°.h
"

7 
	~"ªÊog-wÆk.h
"

9 
	scom∂ëe_ªÊogs
 {

10 *
	mªf
;

11 
	sªÊog_öfo
 {

12 
	mosha1
[20], 
	mnsha1
[20];

13 *
	memaû
;

14 
	mtime°amp
;

15 
	mtz
;

16 *
	mmesßge
;

17 } *
	môems
;

18 
	mƒ
, 
	mÆloc
;

21 
	$ªad_⁄e_ªÊog
(*
osha1
, *
nsha1
,

22 c⁄° *
emaû
, 
time°amp
, 
tz
,

23 c⁄° *
mesßge
, *
cb_d©a
)

25 
com∂ëe_ªÊogs
 *
¨øy
 = 
cb_d©a
;

26 
ªÊog_öfo
 *
ôem
;

28 i‡(
¨øy
->
ƒ
 >¨øy->
Æloc
) {

29 
¨øy
->
Æloc
 = 
	`Æloc_ƒ
◊ºay->
ƒ
 + 1);

30 
¨øy
->
ôems
 = 
	`xªÆloc
◊ºay->ôems,áºay->
Æloc
 *

31 (
ªÊog_öfo
));

33 
ôem
 = 
¨øy
->
ôems
 +áºay->
ƒ
;

34 
	`mem˝y
(
ôem
->
osha1
, osha1, 20);

35 
	`mem˝y
(
ôem
->
nsha1
,Çsha1, 20);

36 
ôem
->
emaû
 = 
	`x°rdup
(email);

37 
ôem
->
time°amp
 =Åimestamp;

38 
ôem
->
tz
 =Åz;

39 
ôem
->
mesßge
 = 
	`x°rdup
(message);

40 
¨øy
->
ƒ
++;

42 
	}
}

44 
com∂ëe_ªÊogs
 *
	$ªad_com∂ëe_ªÊog
(c⁄° *
ªf
)

46 
com∂ëe_ªÊogs
 *
ªÊogs
 =

47 
	`xˇŒoc
((
com∂ëe_ªÊogs
), 1);

48 
ªÊogs
->
ªf
 = 
	`x°rdup
(ref);

49 
	`f‹_óch_ªÊog_ít
(
ªf
, 
ªad_⁄e_ªÊog
, 
ªÊogs
);

50 i‡(
ªÊogs
->
ƒ
 == 0) {

51 
sha1
[20];

52 c⁄° *
«me
 = 
	`ªsﬁve_ªf
(
ªf
, 
sha1
, 1, 
NULL
);

53 i‡(
«me
)

54 
	`f‹_óch_ªÊog_ít
(
«me
, 
ªad_⁄e_ªÊog
, 
ªÊogs
);

56 i‡(
ªÊogs
->
ƒ
 == 0) {

57 
Àn
 = 
	`°æí
(
ªf
);

58 *
ª‚ame
 = 
	`xmÆloc
(
Àn
 + 12);

59 
	`•rötf
(
ª‚ame
, "ªfs/%s", 
ªf
);

60 
	`f‹_óch_ªÊog_ít
(
ª‚ame
, 
ªad_⁄e_ªÊog
, 
ªÊogs
);

61 i‡(
ªÊogs
->
ƒ
 == 0) {

62 
	`•rötf
(
ª‚ame
, "ªfs/hóds/%s", 
ªf
);

63 
	`f‹_óch_ªÊog_ít
(
ª‚ame
, 
ªad_⁄e_ªÊog
, 
ªÊogs
);

65 
	`‰ì
(
ª‚ame
);

67  
ªÊogs
;

68 
	}
}

70 
	$gë_ªÊog_ª˙o_by_time
(
com∂ëe_ªÊogs
 *
¨øy
,

71 
time°amp
)

73 
i
;

74 
i
 = 
¨øy
->
ƒ
 - 1; i >= 0; i--)

75 i‡(
time°amp
 >
¨øy
->
ôems
[
i
].timestamp)

76  
i
;

78 
	}
}

80 
	scommô_öfo_lifo
 {

81 
	scommô_öfo
 {

82 
commô
 *
	mcommô
;

83 *
	mutû
;

84 } *
	môems
;

85 
	mƒ
, 
	mÆloc
;

88 
commô_öfo
 *
	$gë_commô_öfo
(
commô
 *commit,

89 
commô_öfo_lifo
 *
lifo
, 
p›
)

91 
i
;

92 
i
 = 0; i < 
lifo
->
ƒ
; i++)

93 i‡(
lifo
->
ôems
[
i
].
commô
 == commit) {

94 
commô_öfo
 *
ªsu…
 = &
lifo
->
ôems
[
i
];

95 i‡(
p›
) {

96 i‡(
i
 + 1 < 
lifo
->
ƒ
)

97 
	`memmove
(
lifo
->
ôems
 + 
i
,

98 
lifo
->
ôems
 + 
i
 + 1,

99 (
lifo
->
ƒ
 - 
i
) *

100 (
commô_öfo
));

101 
lifo
->
ƒ
--;

103  
ªsu…
;

105  
NULL
;

106 
	}
}

108 
	$add_commô_öfo
(
commô
 *commô, *
utû
,

109 
commô_öfo_lifo
 *
lifo
)

111 
commô_öfo
 *
öfo
;

112 i‡(
lifo
->
ƒ
 >lifo->
Æloc
) {

113 
lifo
->
Æloc
 = 
	`Æloc_ƒ
÷ifo->
ƒ
 + 1);

114 
lifo
->
ôems
 = 
	`xªÆloc
(lifo->items,

115 
lifo
->
Æloc
 * (
commô_öfo
));

117 
öfo
 = 
lifo
->
ôems
 +Üifo->
ƒ
;

118 
öfo
->
commô
 = commit;

119 
öfo
->
utû
 = util;

120 
lifo
->
ƒ
++;

121 
	}
}

123 
	scommô_ªÊog
 {

124 
	mÊag
, 
	mª˙o
;

125 
com∂ëe_ªÊogs
 *
	mªÊogs
;

128 
	sªÊog_wÆk_öfo
 {

129 
commô_öfo_lifo
 
	mªÊogs
;

130 
∑th_li°
 
	mcom∂ëe_ªÊogs
;

131 
commô_ªÊog
 *
	mœ°_commô_ªÊog
;

134 
	$öô_ªÊog_wÆk
(
ªÊog_wÆk_öfo
** 
öfo
)

136 *
öfo
 = 
	`xˇŒoc
((
ªÊog_wÆk_öfo
), 1);

137 
	}
}

139 
	$add_ªÊog_f‹_wÆk
(
ªÊog_wÆk_öfo
 *
öfo
,

140 
commô
 *commô, c⁄° *
«me
)

142 
time°amp
 = 0;

143 
ª˙o
 = -1;

144 
∑th_li°_ôem
 *
ôem
;

145 
com∂ëe_ªÊogs
 *
ªÊogs
;

146 *
bønch
, *
©
 = 
	`°rchr
(
«me
, '@');

147 
commô_ªÊog
 *commit_reflog;

149 i‡(
commô
->
obje˘
.
Êags
 & 
UNINTERESTING
)

150 
	`dõ
 ("C™nŸ wÆkÑeÊog†f‹ %s", 
«me
);

152 
bønch
 = 
	`x°rdup
(
«me
);

153 i‡(
©
 &&át[1] == '{') {

154 *
ï
;

155 
bønch
[
©
 - 
«me
] = '\0';

156 
ª˙o
 = 
	`°πoul
(
©
 + 2, &
ï
, 10);

157 i‡(*
ï
 != '}') {

158 
ª˙o
 = -1;

159 
time°amp
 = 
	`≠¥oxid©e
(
©
 + 2);

162 
ª˙o
 = 0;

164 
ôem
 = 
	`∑th_li°_lookup
(
bønch
, &
öfo
->
com∂ëe_ªÊogs
);

165 i‡(
ôem
)

166 
ªÊogs
 = 
ôem
->
utû
;

168 i‡(*
bønch
 == '\0') {

169 
sha1
[20];

170 c⁄° *
hód
 = 
	`ªsﬁve_ªf
("HEAD", 
sha1
, 0, 
NULL
);

171 i‡(!
hód
)

172 
	`dõ
 ("No current branch");

173 
	`‰ì
(
bønch
);

174 
bønch
 = 
	`x°rdup
(
hód
);

176 
ªÊogs
 = 
	`ªad_com∂ëe_ªÊog
(
bønch
);

177 i‡(!
ªÊogs
 ||ÑeÊogs->
ƒ
 == 0) {

178 
sha1
[20];

179 *
b
;

180 i‡(
	`dwim_log
(
bønch
, 
	`°æí
(bønch), 
sha1
, &
b
) == 1) {

181 i‡(
ªÊogs
) {

182 
	`‰ì
(
ªÊogs
->
ªf
);

183 
	`‰ì
(
ªÊogs
);

185 
	`‰ì
(
bønch
);

186 
bønch
 = 
b
;

187 
ªÊogs
 = 
	`ªad_com∂ëe_ªÊog
(
bønch
);

190 i‡(!
ªÊogs
 ||ÑeÊogs->
ƒ
 == 0)

191 
	`dõ
("NÿªÊog†found f‹ '%s'", 
bønch
);

192 
	`∑th_li°_ö£π
(
bønch
, &
öfo
->
com∂ëe_ªÊogs
)->
utû


193 
ªÊogs
;

196 
commô_ªÊog
 = 
	`xˇŒoc
((commit_reflog), 1);

197 i‡(
ª˙o
 < 0) {

198 
commô_ªÊog
->
Êag
 = 1;

199 
commô_ªÊog
->
ª˙o
 = 
	`gë_ªÊog_ª˙o_by_time
(
ªÊogs
, 
time°amp
);

200 i‡(
commô_ªÊog
->
ª˙o
 < 0) {

201 
	`‰ì
(
bønch
);

202 
	`‰ì
(
commô_ªÊog
);

206 
commô_ªÊog
->
ª˙o
 = 
ªÊogs
->
ƒ
 -Ñecno - 1;

207 
commô_ªÊog
->
ªÊogs
 =Ñeflogs;

209 
	`add_commô_öfo
(
commô
, 
commô_ªÊog
, &
öfo
->
ªÊogs
);

210 
	}
}

212 
	$Áke_ªÊog_∑ª¡
(
ªÊog_wÆk_öfo
 *
öfo
, 
commô
 *commit)

214 
commô_öfo
 *commit_info =

215 
	`gë_commô_öfo
(
commô
, &
öfo
->
ªÊogs
, 0);

216 
commô_ªÊog
 *commit_reflog;

217 
ªÊog_öfo
 *
ªÊog
;

219 
öfo
->
œ°_commô_ªÊog
 = 
NULL
;

220 i‡(!
commô_öfo
)

223 
commô_ªÊog
 = 
commô_öfo
->
utû
;

224 i‡(
commô_ªÊog
->
ª˙o
 < 0) {

225 
commô
->
∑ª¡s
 = 
NULL
;

229 
ªÊog
 = &
commô_ªÊog
->
ªÊogs
->
ôems
[commô_ªÊog->
ª˙o
];

230 
öfo
->
œ°_commô_ªÊog
 = 
commô_ªÊog
;

231 
commô_ªÊog
->
ª˙o
--;

232 
commô_öfo
->
commô
 = (commô *)
	`∑r£_obje˘
(
ªÊog
->
osha1
);

233 i‡(!
commô_öfo
->
commô
) {

234 
commô
->
∑ª¡s
 = 
NULL
;

238 
commô
->
∑ª¡s
 = 
	`xˇŒoc
((
commô_li°
), 1);

239 
commô
->
∑ª¡s
->
ôem
 = 
commô_öfo
->commit;

240 
commô
->
obje˘
.
Êags
 &~(
ADDED
 | 
SEEN
 | 
SHOWN
);

241 
	}
}

243 
	$show_ªÊog_mesßge
(
ªÊog_wÆk_öfo
* 
öfo
, 
⁄ñöe
,

244 
ªœtive_d©e
)

246 i‡(
öfo
 && info->
œ°_commô_ªÊog
) {

247 
commô_ªÊog
 *commô_ªÊog = 
öfo
->
œ°_commô_ªÊog
;

248 
ªÊog_öfo
 *
öfo
;

250 
öfo
 = &
commô_ªÊog
->
ªÊogs
->
ôems
[commô_ªÊog->
ª˙o
+1];

251 i‡(
⁄ñöe
) {

252 
	`¥ötf
("%s@{", 
commô_ªÊog
->
ªÊogs
->
ªf
);

253 i‡(
commô_ªÊog
->
Êag
 || 
ªœtive_d©e
)

254 
	`¥ötf
("%s", 
	`show_d©e
(
öfo
->
time°amp
, 0, 1));

256 
	`¥ötf
("%d", 
commô_ªÊog
->
ªÊogs
->
ƒ


257 - 2 - 
commô_ªÊog
->
ª˙o
);

258 
	`¥ötf
("}: %s", 
öfo
->
mesßge
);

261 
	`¥ötf
("ReÊog: %s@{", 
commô_ªÊog
->
ªÊogs
->
ªf
);

262 i‡(
commô_ªÊog
->
Êag
 || 
ªœtive_d©e
)

263 
	`¥ötf
("%s", 
	`show_d©e
(
öfo
->
time°amp
,

264 
öfo
->
tz
,

265 
ªœtive_d©e
));

267 
	`¥ötf
("%d", 
commô_ªÊog
->
ªÊogs
->
ƒ


268 - 2 - 
commô_ªÊog
->
ª˙o
);

269 
	`¥ötf
("} (%s)\nReflog message: %s",

270 
öfo
->
emaû
, info->
mesßge
);

273 
	}
}

	@reflog-walk.h

1 #i‚de‡
REFLOG_WALK_H


2 
	#REFLOG_WALK_H


	)

4 
öô_ªÊog_wÆk
(
ªÊog_wÆk_öfo
** 
öfo
);

5 
add_ªÊog_f‹_wÆk
(
ªÊog_wÆk_öfo
 *
öfo
,

6 
commô
 *commô, c⁄° *
«me
);

7 
Áke_ªÊog_∑ª¡
(
ªÊog_wÆk_öfo
 *
öfo
,

8 
commô
 *commit);

9 
show_ªÊog_mesßge
(
ªÊog_wÆk_öfo
 *
öfo
, , );

	@refs.c

1 
	~"ˇche.h
"

2 
	~"ªfs.h
"

3 
	~"obje˘.h
"

4 
	~"èg.h
"

7 
	#REF_KNOWS_PEELED
 04

	)

9 
	sªf_li°
 {

10 
ªf_li°
 *
	m√xt
;

11 
	mÊag
;

12 
	msha1
[20];

13 
	m≥ñed
[20];

14 
	m«me
[
FLEX_ARRAY
];

17 c⁄° *
	$∑r£_ªf_löe
(*
löe
, *
sha1
)

27 
Àn
 = 
	`°æí
(
löe
) - 42;

29 i‡(
Àn
 <= 0)

30  
NULL
;

31 i‡(
	`gë_sha1_hex
(
löe
, 
sha1
) < 0)

32  
NULL
;

33 i‡(!
	`is•a˚
(
löe
[40]))

34  
NULL
;

35 
löe
 += 41;

36 i‡(
	`is•a˚
(*
löe
))

37  
NULL
;

38 i‡(
löe
[
Àn
] != '\n')

39  
NULL
;

40 
löe
[
Àn
] = 0;

42  
löe
;

43 
	}
}

45 
ªf_li°
 *
	$add_ªf
(c⁄° *
«me
, c⁄° *
sha1
,

46 
Êag
, 
ªf_li°
 *
li°
,

47 
ªf_li°
 **
√w_íåy
)

49 
Àn
;

50 
ªf_li°
 **
p
 = &
li°
, *
íåy
;

53 (
íåy
 = *
p
Ë!
NULL
) {

54 
cmp
 = 
	`°rcmp
(
íåy
->
«me
,Çame);

55 i‡(
cmp
 > 0)

59 i‡(!
cmp
) {

60 i‡(
√w_íåy
)

61 *
√w_íåy
 = 
íåy
;

62  
li°
;

64 
p
 = &
íåy
->
√xt
;

68 
Àn
 = 
	`°æí
(
«me
) + 1;

69 
íåy
 = 
	`xmÆloc
((
ªf_li°
Ë+ 
Àn
);

70 
	`hash˝y
(
íåy
->
sha1
, sha1);

71 
	`hash˛r
(
íåy
->
≥ñed
);

72 
	`mem˝y
(
íåy
->
«me
,Çame, 
Àn
);

73 
íåy
->
Êag
 = flag;

74 
íåy
->
√xt
 = *
p
;

75 *
p
 = 
íåy
;

76 i‡(
√w_íåy
)

77 *
√w_íåy
 = 
íåy
;

78  
li°
;

79 
	}
}

85 
	sˇched_ªfs
 {

86 
	mdid_loo£
;

87 
	mdid_∑cked
;

88 
ªf_li°
 *
	mloo£
;

89 
ªf_li°
 *
	m∑cked
;

90 } 
	gˇched_ªfs
;

92 
	$‰ì_ªf_li°
(
ªf_li°
 *
li°
)

94 
ªf_li°
 *
√xt
;

95  ; 
li°
;Üi° = 
√xt
) {

96 
√xt
 = 
li°
->next;

97 
	`‰ì
(
li°
);

99 
	}
}

101 
	$övÆid©e_ˇched_ªfs
()

103 
ˇched_ªfs
 *
ˇ
 = &cached_refs;

105 i‡(
ˇ
->
did_loo£
 && ca->
loo£
)

106 
	`‰ì_ªf_li°
(
ˇ
->
loo£
);

107 i‡(
ˇ
->
did_∑cked
 && ca->
∑cked
)

108 
	`‰ì_ªf_li°
(
ˇ
->
∑cked
);

109 
ˇ
->
loo£
 = ca->
∑cked
 = 
NULL
;

110 
ˇ
->
did_loo£
 = ca->
did_∑cked
 = 0;

111 
	}
}

113 
	$ªad_∑cked_ªfs
(
FILE
 *
f
, 
ˇched_ªfs
 *cached_refs)

115 
ªf_li°
 *
li°
 = 
NULL
;

116 
ªf_li°
 *
œ°
 = 
NULL
;

117 
ªÊöe
[
PATH_MAX
];

118 
Êag
 = 
REF_ISPACKED
;

120 
	`fgës
(
ªÊöe
, ‘eÊöe), 
f
)) {

121 
sha1
[20];

122 c⁄° *
«me
;

123 c⁄° 
hódî
[] = "#Öack-refs with:";

125 i‡(!
	`°∫cmp
(
ªÊöe
, 
hódî
, (header)-1)) {

126 c⁄° *
åaôs
 = 
ªÊöe
 + (
hódî
) - 1;

127 i‡(
	`°r°r
(
åaôs
, "Öeeled "))

128 
Êag
 |
REF_KNOWS_PEELED
;

133 
«me
 = 
	`∑r£_ªf_löe
(
ªÊöe
, 
sha1
);

134 i‡(
«me
) {

135 
li°
 = 
	`add_ªf
(
«me
, 
sha1
, 
Êag
,Üi°, &
œ°
);

138 i‡(
œ°
 &&

139 
ªÊöe
[0] == '^' &&

140 
	`°æí
(
ªÊöe
) == 42 &&

141 
ªÊöe
[41] == '\n' &&

142 !
	`gë_sha1_hex
(
ªÊöe
 + 1, 
sha1
))

143 
	`hash˝y
(
œ°
->
≥ñed
, 
sha1
);

145 
ˇched_ªfs
->
∑cked
 = 
li°
;

146 
	}
}

148 
ªf_li°
 *
	$gë_∑cked_ªfs
()

150 i‡(!
ˇched_ªfs
.
did_∑cked
) {

151 
FILE
 *
f
 = 
	`f›í
(
	`gô_∑th
("packed-refs"), "r");

152 
ˇched_ªfs
.
∑cked
 = 
NULL
;

153 i‡(
f
) {

154 
	`ªad_∑cked_ªfs
(
f
, &
ˇched_ªfs
);

155 
	`f˛o£
(
f
);

157 
ˇched_ªfs
.
did_∑cked
 = 1;

159  
ˇched_ªfs
.
∑cked
;

160 
	}
}

162 
ªf_li°
 *
	$gë_ªf_dú
(c⁄° *
ba£
, 
ªf_li°
 *
li°
)

164 
DIR
 *
dú
 = 
	`›ídú
(
	`gô_∑th
("%s", 
ba£
));

166 i‡(
dú
) {

167 
dúít
 *
de
;

168 
ba£Àn
 = 
	`°æí
(
ba£
);

169 *
ªf
 = 
	`xmÆloc
(
ba£Àn
 + 257);

171 
	`mem˝y
(
ªf
, 
ba£
, 
ba£Àn
);

172 i‡(
ba£Àn
 && 
ba£
[baselen-1] != '/')

173 
ªf
[
ba£Àn
++] = '/';

175 (
de
 = 
	`ªaddú
(
dú
)Ë!
NULL
) {

176 
sha1
[20];

177 
°©
 
°
;

178 
Êag
;

179 
«mñí
;

181 i‡(
de
->
d_«me
[0] == '.')

183 
«mñí
 = 
	`°æí
(
de
->
d_«me
);

184 i‡(
«mñí
 > 255)

186 i‡(
	`has_exãnsi⁄
(
de
->
d_«me
, ".lock"))

188 
	`mem˝y
(
ªf
 + 
ba£Àn
, 
de
->
d_«me
, 
«mñí
+1);

189 i‡(
	`°©
(
	`gô_∑th
("%s", 
ªf
), &
°
) < 0)

191 i‡(
	`S_ISDIR
(
°
.
°_mode
)) {

192 
li°
 = 
	`gë_ªf_dú
(
ªf
,Üist);

195 i‡(!
	`ªsﬁve_ªf
(
ªf
, 
sha1
, 1, &
Êag
)) {

196 
	`îr‹
("%†poöt†nowhîe!", 
ªf
);

199 
li°
 = 
	`add_ªf
(
ªf
, 
sha1
, 
Êag
,Üi°, 
NULL
);

201 
	`‰ì
(
ªf
);

202 
	`˛o£dú
(
dú
);

204  
li°
;

205 
	}
}

207 
ªf_li°
 *
	$gë_loo£_ªfs
()

209 i‡(!
ˇched_ªfs
.
did_loo£
) {

210 
ˇched_ªfs
.
loo£
 = 
	`gë_ªf_dú
("ªfs", 
NULL
);

211 
ˇched_ªfs
.
did_loo£
 = 1;

213  
ˇched_ªfs
.
loo£
;

214 
	}
}

217 
	#MAXDEPTH
 5

	)

219 c⁄° *
	$ªsﬁve_ªf
(c⁄° *
ªf
, *
sha1
, 
ªadög
, *
Êag
)

221 
dïth
 = 
MAXDEPTH
, 
Àn
;

222 
buf„r
[256];

223 
ªf_buf„r
[256];

225 i‡(
Êag
)

226 *
Êag
 = 0;

229 c⁄° *
∑th
 = 
	`gô_∑th
("%s", 
ªf
);

230 
°©
 
°
;

231 *
buf
;

232 
fd
;

234 i‡(--
dïth
 < 0)

235  
NULL
;

244 i‡(
	`l°©
(
∑th
, &
°
) < 0) {

245 
ªf_li°
 *
li°
 = 
	`gë_∑cked_ªfs
();

246 
li°
) {

247 i‡(!
	`°rcmp
(
ªf
, 
li°
->
«me
)) {

248 
	`hash˝y
(
sha1
, 
li°
->sha1);

249 i‡(
Êag
)

250 *
Êag
 |
REF_ISPACKED
;

251  
ªf
;

253 
li°
 =Üi°->
√xt
;

255 i‡(
ªadög
 || 
î∫o
 !
ENOENT
)

256  
NULL
;

257 
	`hash˛r
(
sha1
);

258  
ªf
;

262 i‡(
	`S_ISLNK
(
°
.
°_mode
)) {

263 
Àn
 = 
	`ªadlök
(
∑th
, 
buf„r
, (buffer)-1);

264 i‡(
Àn
 >5 && !
	`memcmp
("ªfs/", 
buf„r
, 5)) {

265 
buf„r
[
Àn
] = 0;

266 
	`°r˝y
(
ªf_buf„r
, 
buf„r
);

267 
ªf
 = 
ªf_buf„r
;

268 i‡(
Êag
)

269 *
Êag
 |
REF_ISSYMREF
;

275 i‡(
	`S_ISDIR
(
°
.
°_mode
)) {

276 
î∫o
 = 
EISDIR
;

277  
NULL
;

284 
fd
 = 
	`›í
(
∑th
, 
O_RDONLY
);

285 i‡(
fd
 < 0)

286  
NULL
;

287 
Àn
 = 
	`ªad_ö_fuŒ
(
fd
, 
buf„r
, (buffer)-1);

288 
	`˛o£
(
fd
);

293 i‡(
Àn
 < 4 || 
	`memcmp
("ªf:", 
buf„r
, 4))

295 
buf
 = 
buf„r
 + 4;

296 
Àn
 -= 4;

297 
Àn
 && 
	`is•a˚
(*
buf
))

298 
buf
++, 
Àn
--;

299 
Àn
 && 
	`is•a˚
(
buf
[len-1]))

300 
Àn
--;

301 
buf
[
Àn
] = 0;

302 
	`mem˝y
(
ªf_buf„r
, 
buf
, 
Àn
 + 1);

303 
ªf
 = 
ªf_buf„r
;

304 i‡(
Êag
)

305 *
Êag
 |
REF_ISSYMREF
;

307 i‡(
Àn
 < 40 || 
	`gë_sha1_hex
(
buf„r
, 
sha1
))

308  
NULL
;

309  
ªf
;

310 
	}
}

312 
	$ªad_ªf
(c⁄° *
ªf
, *
sha1
)

314 i‡(
	`ªsﬁve_ªf
(
ªf
, 
sha1
, 1, 
NULL
))

317 
	}
}

319 
	$do_⁄e_ªf
(c⁄° *
ba£
, 
óch_ªf_‚
 
‚
, 
åim
,

320 *
cb_d©a
, 
ªf_li°
 *
íåy
)

322 i‡(
	`°∫cmp
(
ba£
, 
íåy
->
«me
, 
åim
))

324 i‡(
	`is_nuŒ_sha1
(
íåy
->
sha1
))

326 i‡(!
	`has_sha1_fûe
(
íåy
->
sha1
)) {

327 
	`îr‹
("%†d€†nŸÖoöàtÿ®vÆid obje˘!", 
íåy
->
«me
);

330  
	`‚
(
íåy
->
«me
 + 
åim
,É¡ry->
sha1
,É¡ry->
Êag
, 
cb_d©a
);

331 
	}
}

333 
	$≥ñ_ªf
(c⁄° *
ªf
, *
sha1
)

335 
Êag
;

336 
ba£
[20];

337 
obje˘
 *
o
;

339 i‡(!
	`ªsﬁve_ªf
(
ªf
, 
ba£
, 1, &
Êag
))

342 i‡((
Êag
 & 
REF_ISPACKED
)) {

343 
ªf_li°
 *
li°
 = 
	`gë_∑cked_ªfs
();

345 
li°
) {

346 i‡(!
	`°rcmp
(
li°
->
«me
, 
ªf
)) {

347 i‡(
li°
->
Êag
 & 
REF_KNOWS_PEELED
) {

348 
	`hash˝y
(
sha1
, 
li°
->
≥ñed
);

354 
li°
 =Üi°->
√xt
;

359 
o
 = 
	`∑r£_obje˘
(
ba£
);

360 i‡(
o
->
ty≥
 =
OBJ_TAG
) {

361 
o
 = 
	`dîef_èg
(o, 
ªf
, 0);

362 i‡(
o
) {

363 
	`hash˝y
(
sha1
, 
o
->sha1);

368 
	}
}

370 
	$do_f‹_óch_ªf
(c⁄° *
ba£
, 
óch_ªf_‚
 
‚
, 
åim
,

371 *
cb_d©a
)

373 
ªtvÆ
;

374 
ªf_li°
 *
∑cked
 = 
	`gë_∑cked_ªfs
();

375 
ªf_li°
 *
loo£
 = 
	`gë_loo£_ªfs
();

377 
∑cked
 && 
loo£
) {

378 
ªf_li°
 *
íåy
;

379 
cmp
 = 
	`°rcmp
(
∑cked
->
«me
, 
loo£
->name);

380 i‡(!
cmp
) {

381 
∑cked
 =Öacked->
√xt
;

384 i‡(
cmp
 > 0) {

385 
íåy
 = 
loo£
;

386 
loo£
 =Üoo£->
√xt
;

388 
íåy
 = 
∑cked
;

389 
∑cked
 =Öacked->
√xt
;

391 
ªtvÆ
 = 
	`do_⁄e_ªf
(
ba£
, 
‚
, 
åim
, 
cb_d©a
, 
íåy
);

392 i‡(
ªtvÆ
)

393  
ªtvÆ
;

396 
∑cked
 =Öacked ?Öacked : 
loo£
;Öacked;Öacked =Öacked->
√xt
) {

397 
ªtvÆ
 = 
	`do_⁄e_ªf
(
ba£
, 
‚
, 
åim
, 
cb_d©a
, 
∑cked
);

398 i‡(
ªtvÆ
)

399  
ªtvÆ
;

402 
	}
}

404 
	$hód_ªf
(
óch_ªf_‚
 
‚
, *
cb_d©a
)

406 
sha1
[20];

407 
Êag
;

409 i‡(
	`ªsﬁve_ªf
("HEAD", 
sha1
, 1, &
Êag
))

410  
	`‚
("HEAD", 
sha1
, 
Êag
, 
cb_d©a
);

412 
	}
}

414 
	$f‹_óch_ªf
(
óch_ªf_‚
 
‚
, *
cb_d©a
)

416  
	`do_f‹_óch_ªf
("ªfs/", 
‚
, 0, 
cb_d©a
);

417 
	}
}

419 
	$f‹_óch_èg_ªf
(
óch_ªf_‚
 
‚
, *
cb_d©a
)

421  
	`do_f‹_óch_ªf
("ªfs/ègs/", 
‚
, 10, 
cb_d©a
);

422 
	}
}

424 
	$f‹_óch_bønch_ªf
(
óch_ªf_‚
 
‚
, *
cb_d©a
)

426  
	`do_f‹_óch_ªf
("ªfs/hóds/", 
‚
, 11, 
cb_d©a
);

427 
	}
}

429 
	$f‹_óch_ªmŸe_ªf
(
óch_ªf_‚
 
‚
, *
cb_d©a
)

431  
	`do_f‹_óch_ªf
("ªfs/ªmŸes/", 
‚
, 13, 
cb_d©a
);

432 
	}
}

439 
	$gë_ªf_sha1
(c⁄° *
ªf
, *
sha1
)

441 i‡(
	`check_ªf_f‹m©
(
ªf
))

443  
	`ªad_ªf
(
	`mk∑th
("ªfs/%s", 
ªf
), 
sha1
);

444 
	}
}

456 
ölöe
 
	$bad_ªf_ch¨
(
ch
)

458  (((Ë
ch
) <= ' ' ||

459 
ch
 == '~' || ch == '^' || ch == ':' ||

461 
ch
 == '?' || ch == '*' || ch == '[');

462 
	}
}

464 
	$check_ªf_f‹m©
(c⁄° *
ªf
)

466 
ch
, 
Àvñ
;

467 c⁄° *
˝
 = 
ªf
;

469 
Àvñ
 = 0;

471 (
ch
 = *
˝
++) == '/')

473 i‡(!
ch
)

477 i‡(
ch
 ='.' || 
	`bad_ªf_ch¨
(ch))

481 (
ch
 = *
˝
++) != 0) {

482 i‡(
	`bad_ªf_ch¨
(
ch
))

484 i‡(
ch
 == '/')

486 i‡(
ch
 ='.' && *
˝
 == '.')

489 
Àvñ
++;

490 i‡(!
ch
) {

491 i‡(
Àvñ
 < 2)

496 
	}
}

498 
ªf_lock
 *
	$vîify_lock
(
ªf_lock
 *
lock
,

499 c⁄° *
ﬁd_sha1
, 
mu°exi°
)

501 i‡(!
	`ªsﬁve_ªf
(
lock
->
ªf_«me
,Üock->
ﬁd_sha1
, 
mu°exi°
, 
NULL
)) {

502 
	`îr‹
("C™'àvîifyÑe‡%s", 
lock
->
ªf_«me
);

503 
	`u∆ock_ªf
(
lock
);

504  
NULL
;

506 i‡(
	`hashcmp
(
lock
->
ﬁd_sha1
, old_sha1)) {

507 
	`îr‹
("Re‡%†i†© %†buàex≥˘ed %s", 
lock
->
ªf_«me
,

508 
	`sha1_to_hex
(
lock
->
ﬁd_sha1
), sha1_to_hex(old_sha1));

509 
	`u∆ock_ªf
(
lock
);

510  
NULL
;

512  
lock
;

513 
	}
}

515 
	$ªmove_em±y_dú_ªcursive
(*
∑th
, 
Àn
)

517 
DIR
 *
dú
 = 
	`›ídú
(
∑th
);

518 
dúít
 *
e
;

519 
ªt
 = 0;

521 i‡(!
dú
)

523 i‡(
∑th
[
Àn
-1] != '/')

524 
∑th
[
Àn
++] = '/';

525 (
e
 = 
	`ªaddú
(
dú
)Ë!
NULL
) {

526 
°©
 
°
;

527 
«mÀn
;

528 i‡((
e
->
d_«me
[0] == '.') &&

529 ((
e
->
d_«me
[1] == 0) ||

530 ((
e
->
d_«me
[1] == '.') &&É->d_name[2] == 0)))

533 
«mÀn
 = 
	`°æí
(
e
->
d_«me
);

534 i‡((
Àn
 + 
«mÀn
 < 
PATH_MAX
) &&

535 
	`°r˝y
(
∑th
 + 
Àn
, 
e
->
d_«me
) &&

536 !
	`l°©
(
∑th
, &
°
) &&

537 
	`S_ISDIR
(
°
.
°_mode
) &&

538 !
	`ªmove_em±y_dú_ªcursive
(
∑th
, 
Àn
 + 
«mÀn
))

542 
ªt
 = -1;

545 
	`˛o£dú
(
dú
);

546 i‡(!
ªt
) {

547 
∑th
[
Àn
] = 0;

548 
ªt
 = 
	`rmdú
(
∑th
);

550  
ªt
;

551 
	}
}

553 
	$ªmove_em±y_dúe˘‹õs
(*
fûe
)

559 
∑th
[
PATH_MAX
];

560 
Àn
 = 
	`°æí
(
fûe
);

562 i‡(
Àn
 >
PATH_MAX
)

564 
	`°r˝y
(
∑th
, 
fûe
);

565  
	`ªmove_em±y_dú_ªcursive
(
∑th
, 
Àn
);

566 
	}
}

568 
	$is_ª‚ame_avaûabÀ
(c⁄° *
ªf
, c⁄° *
ﬁdªf
,

569 
ªf_li°
 *
li°
, 
quõt
)

571 
«mÀn
 = 
	`°æí
(
ªf
);

572 
li°
) {

574 i‡(!
ﬁdªf
 || 
	`°rcmp
(ﬁdªf, 
li°
->
«me
)) {

575 
Àn
 = 
	`°æí
(
li°
->
«me
);

576 
cm∂í
 = (
«mÀn
 < 
Àn
) ?Çamlen :Üen;

577 c⁄° *
Àad
 = (
«mÀn
 < 
Àn
Ë? 
li°
->
«me
 : 
ªf
;

578 i‡(!
	`°∫cmp
(
ªf
, 
li°
->
«me
, 
cm∂í
) &&

579 
Àad
[
cm∂í
] == '/') {

580 i‡(!
quõt
)

581 
	`îr‹
("'%s'Éxists; cannot create '%s'",

582 
li°
->
«me
, 
ªf
);

586 
li°
 =Üi°->
√xt
;

589 
	}
}

591 
ªf_lock
 *
	$lock_ªf_sha1_basic
(c⁄° *
ªf
, c⁄° *
ﬁd_sha1
, *
Êag
)

593 *
ªf_fûe
;

594 c⁄° *
‹ig_ªf
 = 
ªf
;

595 
ªf_lock
 *
lock
;

596 
°©
 
°
;

597 
œ°_î∫o
 = 0;

598 
mu°exi°
 = (
ﬁd_sha1
 && !
	`is_nuŒ_sha1
(old_sha1));

600 
lock
 = 
	`xˇŒoc
(1, (
ªf_lock
));

601 
lock
->
lock_fd
 = -1;

603 
ªf
 = 
	`ªsﬁve_ªf
‘ef, 
lock
->
ﬁd_sha1
, 
mu°exi°
, 
Êag
);

604 i‡(!
ªf
 && 
î∫o
 =
EISDIR
) {

610 
ªf_fûe
 = 
	`gô_∑th
("%s", 
‹ig_ªf
);

611 i‡(
	`ªmove_em±y_dúe˘‹õs
(
ªf_fûe
)) {

612 
œ°_î∫o
 = 
î∫o
;

613 
	`îr‹
("thîê¨ê°û»ªf†undî '%s'", 
‹ig_ªf
);

614 
îr‹_ªtu∫
;

616 
ªf
 = 
	`ªsﬁve_ªf
(
‹ig_ªf
, 
lock
->
ﬁd_sha1
, 
mu°exi°
, 
Êag
);

618 i‡(!
ªf
) {

619 
œ°_î∫o
 = 
î∫o
;

620 
	`îr‹
("unableÅoÑesolveÑeference %s: %s",

621 
‹ig_ªf
, 
	`°ªº‹
(
î∫o
));

622 
îr‹_ªtu∫
;

629 i‡(
	`is_nuŒ_sha1
(
lock
->
ﬁd_sha1
) &&

630 !
	`is_ª‚ame_avaûabÀ
(
ªf
, 
NULL
, 
	`gë_∑cked_ªfs
(), 0))

631 
îr‹_ªtu∫
;

633 
lock
->
lk
 = 
	`xˇŒoc
(1, (
lock_fûe
));

635 
lock
->
ªf_«me
 = 
	`x°rdup
(
ªf
);

636 
lock
->
‹ig_ªf_«me
 = 
	`x°rdup
(
‹ig_ªf
);

637 
ªf_fûe
 = 
	`gô_∑th
("%s", 
ªf
);

638 
lock
->
f‹˚_wrôe
 = 
	`l°©
(
ªf_fûe
, &
°
Ë&& 
î∫o
 =
ENOENT
;

640 i‡(
	`ß„_¸óã_Àadög_dúe˘‹õs
(
ªf_fûe
)) {

641 
œ°_î∫o
 = 
î∫o
;

642 
	`îr‹
("u«bÀÅÿ¸óã dúe˘‹y f‹ %s", 
ªf_fûe
);

643 
îr‹_ªtu∫
;

645 
lock
->
lock_fd
 = 
	`hﬁd_lock_fûe_f‹_upd©e
÷ock->
lk
, 
ªf_fûe
, 1);

647  
ﬁd_sha1
 ? 
	`vîify_lock
(
lock
, old_sha1, 
mu°exi°
) :Üock;

649 
îr‹_ªtu∫
:

650 
	`u∆ock_ªf
(
lock
);

651 
î∫o
 = 
œ°_î∫o
;

652  
NULL
;

653 
	}
}

655 
ªf_lock
 *
	$lock_ªf_sha1
(c⁄° *
ªf
, c⁄° *
ﬁd_sha1
)

657 
ªÂ©h
[
PATH_MAX
];

658 i‡(
	`check_ªf_f‹m©
(
ªf
))

659  
NULL
;

660 
	`°r˝y
(
ªÂ©h
, 
	`mk∑th
("ªfs/%s", 
ªf
));

661  
	`lock_ªf_sha1_basic
(
ªÂ©h
, 
ﬁd_sha1
, 
NULL
);

662 
	}
}

664 
ªf_lock
 *
	$lock_™y_ªf_f‹_upd©e
(c⁄° *
ªf
, c⁄° *
ﬁd_sha1
)

666 i‡(
	`check_ªf_f‹m©
(
ªf
) == -1)

667  
NULL
;

668  
	`lock_ªf_sha1_basic
(
ªf
, 
ﬁd_sha1
, 
NULL
);

669 
	}
}

671 
lock_fûe
 
	g∑cklock
;

673 
	$ª∑ck_wôhout_ªf
(c⁄° *
ª‚ame
)

675 
ªf_li°
 *
li°
, *
∑cked_ªf_li°
;

676 
fd
;

677 
found
 = 0;

679 
∑cked_ªf_li°
 = 
	`gë_∑cked_ªfs
();

680 
li°
 = 
∑cked_ªf_li°
;Üi°;Üi° =Üi°->
√xt
) {

681 i‡(!
	`°rcmp
(
ª‚ame
, 
li°
->
«me
)) {

682 
found
 = 1;

686 i‡(!
found
)

688 
fd
 = 
	`hﬁd_lock_fûe_f‹_upd©e
(&
∑cklock
, 
	`gô_∑th
("packed-refs"), 0);

689 i‡(
fd
 < 0)

690  
	`îr‹
("ˇ¬Ÿ dñëê'%s' fromÖackedÑefs", 
ª‚ame
);

692 
li°
 = 
∑cked_ªf_li°
;Üi°;Üi° =Üi°->
√xt
) {

693 
löe
[
PATH_MAX
 + 100];

694 
Àn
;

696 i‡(!
	`°rcmp
(
ª‚ame
, 
li°
->
«me
))

698 
Àn
 = 
	`¢¥ötf
(
löe
, (line), "%s %s\n",

699 
	`sha1_to_hex
(
li°
->
sha1
),Üi°->
«me
);

701 i‡(
Àn
 > (
löe
))

702 
	`dõ
("toÿl⁄gáÑe‚amê'%s'", 
li°
->
«me
);

703 
	`wrôe_‹_dõ
(
fd
, 
löe
, 
Àn
);

705  
	`commô_lock_fûe
(&
∑cklock
);

706 
	}
}

708 
	$dñëe_ªf
(c⁄° *
ª‚ame
, *
sha1
)

710 
ªf_lock
 *
lock
;

711 
îr
, 
i
, 
ªt
 = 0, 
Êag
 = 0;

713 
lock
 = 
	`lock_ªf_sha1_basic
(
ª‚ame
, 
sha1
, &
Êag
);

714 i‡(!
lock
)

716 i‡(!(
Êag
 & 
REF_ISPACKED
)) {

718 
i
 = 
	`°æí
(
lock
->
lk
->
fûíame
) - 5;

719 
lock
->
lk
->
fûíame
[
i
] = 0;

720 
îr
 = 
	`u∆ök
(
lock
->
lk
->
fûíame
);

721 i‡(
îr
) {

722 
ªt
 = 1;

723 
	`îr‹
("unlink(%s) failed: %s",

724 
lock
->
lk
->
fûíame
, 
	`°ªº‹
(
î∫o
));

726 
lock
->
lk
->
fûíame
[
i
] = '.';

732 
ªt
 |
	`ª∑ck_wôhout_ªf
(
ª‚ame
);

734 
îr
 = 
	`u∆ök
(
	`gô_∑th
("logs/%s", 
lock
->
ªf_«me
));

735 i‡(
îr
 && 
î∫o
 !
ENOENT
)

736 
	`Ârötf
(
°dîr
, "warning: unlink(%s) failed: %s",

737 
	`gô_∑th
("logs/%s", 
lock
->
ªf_«me
), 
	`°ªº‹
(
î∫o
));

738 
	`övÆid©e_ˇched_ªfs
();

739 
	`u∆ock_ªf
(
lock
);

740  
ªt
;

741 
	}
}

743 
	$ª«me_ªf
(c⁄° *
ﬁdªf
, c⁄° *
√wªf
, c⁄° *
logmsg
)

745 c⁄° 
ª«med_ªf
[] = "RENAMED-REF";

746 
sha1
[20], 
‹ig_sha1
[20];

747 
Êag
 = 0, 
logmoved
 = 0;

748 
ªf_lock
 *
lock
;

749 
°©
 
logöfo
;

750 
log
 = !
	`l°©
(
	`gô_∑th
("logs/%s", 
ﬁdªf
), &
logöfo
);

752 i‡(
	`S_ISLNK
(
logöfo
.
°_mode
))

753  
	`îr‹
("ªÊog f‹ %†i†®symlök", 
ﬁdªf
);

755 i‡(!
	`ªsﬁve_ªf
(
ﬁdªf
, 
‹ig_sha1
, 1, &
Êag
))

756  
	`îr‹
("ª‚amê%†nŸ found", 
ﬁdªf
);

758 i‡(!
	`is_ª‚ame_avaûabÀ
(
√wªf
, 
ﬁdªf
, 
	`gë_∑cked_ªfs
(), 0))

761 i‡(!
	`is_ª‚ame_avaûabÀ
(
√wªf
, 
ﬁdªf
, 
	`gë_loo£_ªfs
(), 0))

764 
lock
 = 
	`lock_ªf_sha1_basic
(
ª«med_ªf
, 
NULL
, NULL);

765 i‡(!
lock
)

766  
	`îr‹
("u«bÀÅÿlock %s", 
ª«med_ªf
);

767 
lock
->
f‹˚_wrôe
 = 1;

768 i‡(
	`wrôe_ªf_sha1
(
lock
, 
‹ig_sha1
, 
logmsg
))

769  
	`îr‹
("u«bÀÅÿßvêcuºíàsha1 i¿%s", 
ª«med_ªf
);

771 i‡(
log
 && 
	`ª«me
(
	`gô_∑th
("logs/%s", 
ﬁdªf
), git_path("tmp-renamed-log")))

772  
	`îr‹
("unableÅo moveÜogfileÜogs/%sÅoÅmp-renamed-log: %s",

773 
ﬁdªf
, 
	`°ªº‹
(
î∫o
));

775 i‡(
	`dñëe_ªf
(
ﬁdªf
, 
‹ig_sha1
)) {

776 
	`îr‹
("u«bÀÅÿdñëêﬁd %s", 
ﬁdªf
);

777 
rﬁlback
;

780 i‡(
	`ªsﬁve_ªf
(
√wªf
, 
sha1
, 1, &
Êag
Ë&& 
	`dñëe_ªf
(newref, sha1)) {

781 i‡(
î∫o
==
EISDIR
) {

782 i‡(
	`ªmove_em±y_dúe˘‹õs
(
	`gô_∑th
("%s", 
√wªf
))) {

783 
	`îr‹
("Dúe˘‹yÇŸÉm±y: %s", 
√wªf
);

784 
rﬁlback
;

787 
	`îr‹
("u«bÀÅÿdñëêexi°ög %s", 
√wªf
);

788 
rﬁlback
;

792 i‡(
log
 && 
	`ß„_¸óã_Àadög_dúe˘‹õs
(
	`gô_∑th
("logs/%s", 
√wªf
))) {

793 
	`îr‹
("u«bÀÅÿ¸óã dúe˘‹y f‹ %s", 
√wªf
);

794 
rﬁlback
;

797 
ªåy
:

798 i‡(
log
 && 
	`ª«me
(
	`gô_∑th
("tmp-ª«med-log"), gô_∑th("logs/%s", 
√wªf
))) {

799 i‡(
î∫o
==
EISDIR
 ||Éºno==
ENOTDIR
) {

805 i‡(
	`ªmove_em±y_dúe˘‹õs
(
	`gô_∑th
("logs/%s", 
√wªf
))) {

806 
	`îr‹
("Dúe˘‹yÇŸÉm±y:Üogs/%s", 
√wªf
);

807 
rﬁlback
;

809 
ªåy
;

811 
	`îr‹
("unableÅo moveÜogfileÅmp-renamed-logÅoÜogs/%s: %s",

812 
√wªf
, 
	`°ªº‹
(
î∫o
));

813 
rﬁlback
;

816 
logmoved
 = 
log
;

818 
lock
 = 
	`lock_ªf_sha1_basic
(
√wªf
, 
NULL
, NULL);

819 i‡(!
lock
) {

820 
	`îr‹
("u«bÀÅÿlock %†f‹ upd©e", 
√wªf
);

821 
rﬁlback
;

824 
lock
->
f‹˚_wrôe
 = 1;

825 
	`hash˝y
(
lock
->
ﬁd_sha1
, 
‹ig_sha1
);

826 i‡(
	`wrôe_ªf_sha1
(
lock
, 
‹ig_sha1
, 
logmsg
)) {

827 
	`îr‹
("u«bÀÅÿwrôêcuºíàsha1 i¡ÿ%s", 
√wªf
);

828 
rﬁlback
;

831 i‡(!
	`°∫cmp
(
ﬁdªf
, "refs/heads/", 11) &&

832 !
	`°∫cmp
(
√wªf
, "refs/heads/", 11)) {

833 
ﬁd£˘i⁄
[1024], 
√w£˘i⁄
[1024];

835 
	`¢¥ötf
(
ﬁd£˘i⁄
, 1024, "bønch.%s", 
ﬁdªf
 + 11);

836 
	`¢¥ötf
(
√w£˘i⁄
, 1024, "bønch.%s", 
√wªf
 + 11);

837 i‡(
	`gô_c⁄fig_ª«me_£˘i⁄
(
ﬁd£˘i⁄
, 
√w£˘i⁄
) < 0)

843 
rﬁlback
:

844 
lock
 = 
	`lock_ªf_sha1_basic
(
ﬁdªf
, 
NULL
, NULL);

845 i‡(!
lock
) {

846 
	`îr‹
("u«bÀÅÿlock %†f‹Ñﬁlback", 
ﬁdªf
);

847 
rﬁlbacklog
;

850 
lock
->
f‹˚_wrôe
 = 1;

851 
Êag
 = 
log_Æl_ªf_upd©es
;

852 
log_Æl_ªf_upd©es
 = 0;

853 i‡(
	`wrôe_ªf_sha1
(
lock
, 
‹ig_sha1
, 
NULL
))

854 
	`îr‹
("u«bÀÅÿwrôêcuºíàsha1 i¡ÿ%s", 
ﬁdªf
);

855 
log_Æl_ªf_upd©es
 = 
Êag
;

857 
rﬁlbacklog
:

858 i‡(
logmoved
 && 
	`ª«me
(
	`gô_∑th
("logs/%s", 
√wªf
), gô_∑th("logs/%s", 
ﬁdªf
)))

859 
	`îr‹
("unableÅoÑestoreÜogfile %s from %s: %s",

860 
ﬁdªf
, 
√wªf
, 
	`°ªº‹
(
î∫o
));

861 i‡(!
logmoved
 && 
log
 &&

862 
	`ª«me
(
	`gô_∑th
("tmp-ª«med-log"), gô_∑th("logs/%s", 
ﬁdªf
)))

863 
	`îr‹
("unableÅoÑestoreÜogfile %s fromÅmp-renamed-log: %s",

864 
ﬁdªf
, 
	`°ªº‹
(
î∫o
));

867 
	}
}

869 
	$u∆ock_ªf
(
ªf_lock
 *
lock
)

871 i‡(
lock
->
lock_fd
 >= 0) {

872 
	`˛o£
(
lock
->
lock_fd
);

874 i‡(
lock
->
lk
)

875 
	`rﬁlback_lock_fûe
(
lock
->
lk
);

877 
	`‰ì
(
lock
->
ªf_«me
);

878 
	`‰ì
(
lock
->
‹ig_ªf_«me
);

879 
	`‰ì
(
lock
);

880 
	}
}

882 
	$log_ªf_wrôe
(c⁄° *
ªf_«me
, c⁄° *
ﬁd_sha1
,

883 c⁄° *
√w_sha1
, c⁄° *
msg
)

885 
logfd
, 
wrôãn
, 
oÊags
 = 
O_APPEND
 | 
O_WRONLY
;

886 
maxÀn
, 
Àn
;

887 
msgÀn
;

888 *
log_fûe
, *
logªc
;

889 c⁄° *
commôãr
;

891 i‡(
log_Æl_ªf_upd©es
 < 0)

892 
log_Æl_ªf_upd©es
 = !
	`is_b¨e_ªposô‹y
();

894 
log_fûe
 = 
	`gô_∑th
("logs/%s", 
ªf_«me
);

896 i‡(
log_Æl_ªf_upd©es
 &&

897 (!
	`°∫cmp
(
ªf_«me
, "refs/heads/", 11) ||

898 !
	`°∫cmp
(
ªf_«me
, "refs/remotes/", 13) ||

899 !
	`°rcmp
(
ªf_«me
, "HEAD"))) {

900 i‡(
	`ß„_¸óã_Àadög_dúe˘‹õs
(
log_fûe
) < 0)

901  
	`îr‹
("unableÅo create directory for %s",

902 
log_fûe
);

903 
oÊags
 |
O_CREAT
;

906 
logfd
 = 
	`›í
(
log_fûe
, 
oÊags
, 0666);

907 i‡(
logfd
 < 0) {

908 i‡(!(
oÊags
 & 
O_CREAT
Ë&& 
î∫o
 =
ENOENT
)

911 i‡((
oÊags
 & 
O_CREAT
Ë&& 
î∫o
 =
EISDIR
) {

912 i‡(
	`ªmove_em±y_dúe˘‹õs
(
log_fûe
)) {

913  
	`îr‹
("Thereáre stillÜogs under '%s'",

914 
log_fûe
);

916 
logfd
 = 
	`›í
(
log_fûe
, 
oÊags
, 0666);

919 i‡(
logfd
 < 0)

920  
	`îr‹
("UnableÅoáppendÅo %s: %s",

921 
log_fûe
, 
	`°ªº‹
(
î∫o
));

924 
msgÀn
 = 0;

925 i‡(
msg
) {

927  ; *
msg
; msg++)

928 i‡(!
	`is•a˚
(*
msg
))

930 i‡(*
msg
) {

931 c⁄° *
ï
 = 
	`°rchr
(
msg
, '\n');

932 i‡(
ï
)

933 
msgÀn
 = 
ï
 - 
msg
;

935 
msgÀn
 = 
	`°æí
(
msg
);

939 
commôãr
 = 
	`gô_commôãr_öfo
(-1);

940 
maxÀn
 = 
	`°æí
(
commôãr
Ë+ 
msgÀn
 + 100;

941 
logªc
 = 
	`xmÆloc
(
maxÀn
);

942 
Àn
 = 
	`•rötf
(
logªc
, "%s %s %s\n",

943 
	`sha1_to_hex
(
ﬁd_sha1
),

944 
	`sha1_to_hex
(
√w_sha1
),

945 
commôãr
);

946 i‡(
msgÀn
)

947 
Àn
 +
	`•rötf
(
logªc
 +Üí - 1, "\t%.*s\n", 
msgÀn
, 
msg
) - 1;

948 
wrôãn
 = 
Àn
 <
maxÀn
 ? 
	`wrôe_ö_fuŒ
(
logfd
, 
logªc
,Üen) : -1;

949 
	`‰ì
(
logªc
);

950 
	`˛o£
(
logfd
);

951 i‡(
wrôãn
 !
Àn
)

952  
	`îr‹
("U«bÀÅÿ≠≥ndÅÿ%s", 
log_fûe
);

954 
	}
}

956 
	$wrôe_ªf_sha1
(
ªf_lock
 *
lock
,

957 c⁄° *
sha1
, c⁄° *
logmsg
)

959 
ãrm
 = '\n';

961 i‡(!
lock
)

963 i‡(!
lock
->
f‹˚_wrôe
 && !
	`hashcmp
÷ock->
ﬁd_sha1
, 
sha1
)) {

964 
	`u∆ock_ªf
(
lock
);

967 i‡(
	`wrôe_ö_fuŒ
(
lock
->
lock_fd
, 
	`sha1_to_hex
(
sha1
), 40) != 40 ||

968 
	`wrôe_ö_fuŒ
(
lock
->
lock_fd
, &
ãrm
, 1) != 1

969 || 
	`˛o£
(
lock
->
lock_fd
) < 0) {

970 
	`îr‹
("Couldn'àwrôê%s", 
lock
->
lk
->
fûíame
);

971 
	`u∆ock_ªf
(
lock
);

974 
	`övÆid©e_ˇched_ªfs
();

975 i‡(
	`log_ªf_wrôe
(
lock
->
ªf_«me
,Üock->
ﬁd_sha1
, 
sha1
, 
logmsg
) < 0 ||

976 (
	`°rcmp
(
lock
->
ªf_«me
,Üock->
‹ig_ªf_«me
) &&

977 
	`log_ªf_wrôe
(
lock
->
‹ig_ªf_«me
,Üock->
ﬁd_sha1
, 
sha1
, 
logmsg
) < 0)) {

978 
	`u∆ock_ªf
(
lock
);

981 i‡(
	`commô_lock_fûe
(
lock
->
lk
)) {

982 
	`îr‹
("Couldn'à£à%s", 
lock
->
ªf_«me
);

983 
	`u∆ock_ªf
(
lock
);

986 
lock
->
lock_fd
 = -1;

987 
	`u∆ock_ªf
(
lock
);

989 
	}
}

991 
	$¸óã_symªf
(c⁄° *
ªf_èrgë
, c⁄° *
ªfs_hóds_ma°î
,

992 c⁄° *
logmsg
)

994 c⁄° *
lock∑th
;

995 
ªf
[1000];

996 
fd
, 
Àn
, 
wrôãn
;

997 *
gô_HEAD
 = 
	`x°rdup
(
	`gô_∑th
("%s", 
ªf_èrgë
));

998 
ﬁd_sha1
[20], 
√w_sha1
[20];

1000 i‡(
logmsg
 && 
	`ªad_ªf
(
ªf_èrgë
, 
ﬁd_sha1
))

1001 
	`hash˛r
(
ﬁd_sha1
);

1003 i‡(
	`ß„_¸óã_Àadög_dúe˘‹õs
(
gô_HEAD
) < 0)

1004  
	`îr‹
("u«bÀÅÿ¸óã dúe˘‹y f‹ %s", 
gô_HEAD
);

1006 #i‚de‡
NO_SYMLINK_HEAD


1007 i‡(
¥e„r_symlök_ªfs
) {

1008 
	`u∆ök
(
gô_HEAD
);

1009 i‡(!
	`symlök
(
ªfs_hóds_ma°î
, 
gô_HEAD
))

1010 
d⁄e
;

1011 
	`Ârötf
(
°dîr
, "no symlink - falling backÅo symbolicÑef\n");

1015 
Àn
 = 
	`¢¥ötf
(
ªf
, ‘ef), "ªf: %s\n", 
ªfs_hóds_ma°î
);

1016 i‡((
ªf
Ë<
Àn
) {

1017 
	`îr‹
("ª‚amêtoÿl⁄g: %s", 
ªfs_hóds_ma°î
);

1018 
îr‹_‰ì_ªtu∫
;

1020 
lock∑th
 = 
	`mk∑th
("%s.lock", 
gô_HEAD
);

1021 
fd
 = 
	`›í
(
lock∑th
, 
O_CREAT
 | 
O_EXCL
 | 
O_WRONLY
, 0666);

1022 i‡(
fd
 < 0) {

1023 
	`îr‹
("U«bÀÅÿ›í %†f‹ wrôög", 
lock∑th
);

1024 
îr‹_‰ì_ªtu∫
;

1026 
wrôãn
 = 
	`wrôe_ö_fuŒ
(
fd
, 
ªf
, 
Àn
);

1027 
	`˛o£
(
fd
);

1028 i‡(
wrôãn
 !
Àn
) {

1029 
	`îr‹
("U«bÀÅÿwrôêtÿ%s", 
lock∑th
);

1030 
îr‹_u∆ök_ªtu∫
;

1032 i‡(
	`ª«me
(
lock∑th
, 
gô_HEAD
) < 0) {

1033 
	`îr‹
("U«bÀÅÿ¸óã %s", 
gô_HEAD
);

1034 
îr‹_u∆ök_ªtu∫
;

1036 i‡(
	`adju°_sh¨ed_≥rm
(
gô_HEAD
)) {

1037 
	`îr‹
("U«bÀÅÿfixÖîmissi⁄†⁄ %s", 
lock∑th
);

1038 
îr‹_u∆ök_ªtu∫
:

1039 
	`u∆ök
(
lock∑th
);

1040 
îr‹_‰ì_ªtu∫
:

1041 
	`‰ì
(
gô_HEAD
);

1045 
d⁄e
:

1046 i‡(
logmsg
 && !
	`ªad_ªf
(
ªfs_hóds_ma°î
, 
√w_sha1
))

1047 
	`log_ªf_wrôe
(
ªf_èrgë
, 
ﬁd_sha1
, 
√w_sha1
, 
logmsg
);

1049 
	`‰ì
(
gô_HEAD
);

1051 
	}
}

1053 *
	$ªf_msg
(c⁄° *
löe
, c⁄° *
ídp
)

1055 c⁄° *
ï
;

1056 *
msg
;

1058 
löe
 += 82;

1059 
ï
 = 
löe
;É∞< 
ídp
 && *ep != '\n';Ép++)

1061 
msg
 = 
	`xmÆloc
(
ï
 - 
löe
 + 1);

1062 
	`mem˝y
(
msg
, 
löe
, 
ï
 -Üine);

1063 
msg
[
ï
 - 
löe
] = 0;

1064  
msg
;

1065 
	}
}

1067 
	$ªad_ªf_©
(c⁄° *
ªf
, 
©_time
, 
˙t
, *
sha1
, **
msg
, *
cutoff_time
, *
cutoff_tz
, *
cutoff_˙t
)

1069 c⁄° *
logfûe
, *
logd©a
, *
logíd
, *
ªc
, *
œ°gt
, *
œ°ªc
;

1070 *
tz_c
;

1071 
logfd
, 
tz
, 
ªc˙t
 = 0;

1072 
°©
 
°
;

1073 
d©e
;

1074 
logged_sha1
[20];

1075 *
log_m≠≥d
;

1077 
logfûe
 = 
	`gô_∑th
("logs/%s", 
ªf
);

1078 
logfd
 = 
	`›í
(
logfûe
, 
O_RDONLY
, 0);

1079 i‡(
logfd
 < 0)

1080 
	`dõ
("U«bÀÅÿªadÜog %s: %s", 
logfûe
, 
	`°ªº‹
(
î∫o
));

1081 
	`f°©
(
logfd
, &
°
);

1082 i‡(!
°
.
°_size
)

1083 
	`dõ
("Log %†i†em±y.", 
logfûe
);

1084 
log_m≠≥d
 = 
	`xmm≠
(
NULL
, 
°
.
°_size
, 
PROT_READ
, 
MAP_PRIVATE
, 
logfd
, 0);

1085 
logd©a
 = 
log_m≠≥d
;

1086 
	`˛o£
(
logfd
);

1088 
œ°ªc
 = 
NULL
;

1089 
ªc
 = 
logíd
 = 
logd©a
 + 
°
.
°_size
;

1090 
logd©a
 < 
ªc
) {

1091 
ªc˙t
++;

1092 i‡(
logd©a
 < 
ªc
 && *(rec-1) == '\n')

1093 
ªc
--;

1094 
œ°gt
 = 
NULL
;

1095 
logd©a
 < 
ªc
 && *(rec-1) != '\n') {

1096 
ªc
--;

1097 i‡(*
ªc
 == '>')

1098 
œ°gt
 = 
ªc
;

1100 i‡(!
œ°gt
)

1101 
	`dõ
("Log %†i†c‹ru±.", 
logfûe
);

1102 
d©e
 = 
	`°πoul
(
œ°gt
 + 1, &
tz_c
, 10);

1103 i‡(
d©e
 <
©_time
 || 
˙t
 == 0) {

1104 
tz
 = 
	`°πoul
(
tz_c
, 
NULL
, 10);

1105 i‡(
msg
)

1106 *
msg
 = 
	`ªf_msg
(
ªc
, 
logíd
);

1107 i‡(
cutoff_time
)

1108 *
cutoff_time
 = 
d©e
;

1109 i‡(
cutoff_tz
)

1110 *
cutoff_tz
 = 
tz
;

1111 i‡(
cutoff_˙t
)

1112 *
cutoff_˙t
 = 
ªc˙t
 - 1;

1113 i‡(
œ°ªc
) {

1114 i‡(
	`gë_sha1_hex
(
œ°ªc
, 
logged_sha1
))

1115 
	`dõ
("Log %†i†c‹ru±.", 
logfûe
);

1116 i‡(
	`gë_sha1_hex
(
ªc
 + 41, 
sha1
))

1117 
	`dõ
("Log %†i†c‹ru±.", 
logfûe
);

1118 i‡(
	`hashcmp
(
logged_sha1
, 
sha1
)) {

1119 
	`Ârötf
(
°dîr
,

1121 
logfûe
, 
	`show_rfc2822_d©e
(
d©e
, 
tz
));

1124 i‡(
d©e
 =
©_time
) {

1125 i‡(
	`gë_sha1_hex
(
ªc
 + 41, 
sha1
))

1126 
	`dõ
("Log %†i†c‹ru±.", 
logfûe
);

1129 i‡(
	`gë_sha1_hex
(
ªc
 + 41, 
logged_sha1
))

1130 
	`dõ
("Log %†i†c‹ru±.", 
logfûe
);

1131 i‡(
	`hashcmp
(
logged_sha1
, 
sha1
)) {

1132 
	`Ârötf
(
°dîr
,

1134 
logfûe
, 
	`show_rfc2822_d©e
(
d©e
, 
tz
));

1137 
	`munm≠
(
log_m≠≥d
, 
°
.
°_size
);

1140 
œ°ªc
 = 
ªc
;

1141 i‡(
˙t
 > 0)

1142 
˙t
--;

1145 
ªc
 = 
logd©a
;

1146 
ªc
 < 
logíd
 && *rec != '>' && *rec != '\n')

1147 
ªc
++;

1148 i‡(
ªc
 =
logíd
 || *rec == '\n')

1149 
	`dõ
("Log %†i†c‹ru±.", 
logfûe
);

1150 
d©e
 = 
	`°πoul
(
ªc
 + 1, &
tz_c
, 10);

1151 
tz
 = 
	`°πoul
(
tz_c
, 
NULL
, 10);

1152 i‡(
	`gë_sha1_hex
(
logd©a
, 
sha1
))

1153 
	`dõ
("Log %†i†c‹ru±.", 
logfûe
);

1154 i‡(
msg
)

1155 *
msg
 = 
	`ªf_msg
(
logd©a
, 
logíd
);

1156 
	`munm≠
(
log_m≠≥d
, 
°
.
°_size
);

1158 i‡(
cutoff_time
)

1159 *
cutoff_time
 = 
d©e
;

1160 i‡(
cutoff_tz
)

1161 *
cutoff_tz
 = 
tz
;

1162 i‡(
cutoff_˙t
)

1163 *
cutoff_˙t
 = 
ªc˙t
;

1165 
	}
}

1167 
	$f‹_óch_ªÊog_ít
(c⁄° *
ªf
, 
óch_ªÊog_ít_‚
 
‚
, *
cb_d©a
)

1169 c⁄° *
logfûe
;

1170 
FILE
 *
logÂ
;

1171 
buf
[1024];

1172 
ªt
 = 0;

1174 
logfûe
 = 
	`gô_∑th
("logs/%s", 
ªf
);

1175 
logÂ
 = 
	`f›í
(
logfûe
, "r");

1176 i‡(!
logÂ
)

1178 
	`fgës
(
buf
, (buf), 
logÂ
)) {

1179 
osha1
[20], 
nsha1
[20];

1180 *
emaû_íd
, *
mesßge
;

1181 
time°amp
;

1182 
Àn
, 
tz
;

1185 
Àn
 = 
	`°æí
(
buf
);

1186 i‡(
Àn
 < 83 || 
buf
[len-1] != '\n' ||

1187 
	`gë_sha1_hex
(
buf
, 
osha1
) || buf[40] != ' ' ||

1188 
	`gë_sha1_hex
(
buf
 + 41, 
nsha1
) || buf[81] != ' ' ||

1189 !(
emaû_íd
 = 
	`°rchr
(
buf
 + 82, '>')) ||

1190 
emaû_íd
[1] != ' ' ||

1191 !(
time°amp
 = 
	`°πoul
(
emaû_íd
 + 2, &
mesßge
, 10)) ||

1192 !
mesßge
 || message[0] != ' ' ||

1193 (
mesßge
[1] != '+' && message[1] != '-') ||

1194 !
	`isdigô
(
mesßge
[2]) || !isdigit(message[3]) ||

1195 !
	`isdigô
(
mesßge
[4]) || !isdigit(message[5]))

1197 
emaû_íd
[1] = '\0';

1198 
tz
 = 
	`°πﬁ
(
mesßge
 + 1, 
NULL
, 10);

1199 i‡(
mesßge
[6] != '\t')

1200 
mesßge
 += 6;

1202 
mesßge
 += 7;

1203 
ªt
 = 
	`‚
(
osha1
, 
nsha1
, 
buf
+82, 
time°amp
, 
tz
, 
mesßge
, 
cb_d©a
);

1204 i‡(
ªt
)

1207 
	`f˛o£
(
logÂ
);

1208  
ªt
;

1209 
	}
}

1211 
	$do_f‹_óch_ªÊog
(c⁄° *
ba£
, 
óch_ªf_‚
 
‚
, *
cb_d©a
)

1213 
DIR
 *
dú
 = 
	`›ídú
(
	`gô_∑th
("logs/%s", 
ba£
));

1214 
ªtvÆ
 = 0;

1216 i‡(
dú
) {

1217 
dúít
 *
de
;

1218 
ba£Àn
 = 
	`°æí
(
ba£
);

1219 *
log
 = 
	`xmÆloc
(
ba£Àn
 + 257);

1221 
	`mem˝y
(
log
, 
ba£
, 
ba£Àn
);

1222 i‡(
ba£Àn
 && 
ba£
[baselen-1] != '/')

1223 
log
[
ba£Àn
++] = '/';

1225 (
de
 = 
	`ªaddú
(
dú
)Ë!
NULL
) {

1226 
°©
 
°
;

1227 
«mñí
;

1229 i‡(
de
->
d_«me
[0] == '.')

1231 
«mñí
 = 
	`°æí
(
de
->
d_«me
);

1232 i‡(
«mñí
 > 255)

1234 i‡(
	`has_exãnsi⁄
(
de
->
d_«me
, ".lock"))

1236 
	`mem˝y
(
log
 + 
ba£Àn
, 
de
->
d_«me
, 
«mñí
+1);

1237 i‡(
	`°©
(
	`gô_∑th
("logs/%s", 
log
), &
°
) < 0)

1239 i‡(
	`S_ISDIR
(
°
.
°_mode
)) {

1240 
ªtvÆ
 = 
	`do_f‹_óch_ªÊog
(
log
, 
‚
, 
cb_d©a
);

1242 
sha1
[20];

1243 i‡(!
	`ªsﬁve_ªf
(
log
, 
sha1
, 0, 
NULL
))

1244 
ªtvÆ
 = 
	`îr‹
("badÑe‡f‹ %s", 
log
);

1246 
ªtvÆ
 = 
	`‚
(
log
, 
sha1
, 0, 
cb_d©a
);

1248 i‡(
ªtvÆ
)

1251 
	`‰ì
(
log
);

1252 
	`˛o£dú
(
dú
);

1254 i‡(*
ba£
)

1255  
î∫o
;

1256  
ªtvÆ
;

1257 
	}
}

1259 
	$f‹_óch_ªÊog
(
óch_ªf_‚
 
‚
, *
cb_d©a
)

1261  
	`do_f‹_óch_ªÊog
("", 
‚
, 
cb_d©a
);

1262 
	}
}

	@refs.h

1 #i‚de‡
REFS_H


2 
	#REFS_H


	)

4 
	sªf_lock
 {

5 *
	mªf_«me
;

6 *
	m‹ig_ªf_«me
;

7 
lock_fûe
 *
	mlk
;

8 
	mﬁd_sha1
[20];

9 
	mlock_fd
;

10 
	mf‹˚_wrôe
;

13 
	#REF_ISSYMREF
 01

	)

14 
	#REF_ISPACKED
 02

	)

20 
	tóch_ªf_‚
(c⁄° *
	tª‚ame
, c⁄° *
	tsha1
, 
	tÊags
, *
	tcb_d©a
);

21 
hód_ªf
(
óch_ªf_‚
, *);

22 
f‹_óch_ªf
(
óch_ªf_‚
, *);

23 
f‹_óch_èg_ªf
(
óch_ªf_‚
, *);

24 
f‹_óch_bønch_ªf
(
óch_ªf_‚
, *);

25 
f‹_óch_ªmŸe_ªf
(
óch_ªf_‚
, *);

27 
≥ñ_ªf
(const *, *);

30 
gë_ªf_sha1
(c⁄° *
ªf
, *
sha1
);

33 
ªf_lock
 *
lock_ªf_sha1
(c⁄° *
ªf
, c⁄° *
ﬁd_sha1
);

36 
ªf_lock
 *
lock_™y_ªf_f‹_upd©e
(c⁄° *
ªf
, c⁄° *
ﬁd_sha1
);

39 
u∆ock_ªf
(
ªf_lock
 *
lock
);

42 
wrôe_ªf_sha1
(
ªf_lock
 *
lock
, c⁄° *
sha1
, c⁄° *
msg
);

45 
ªad_ªf_©
(c⁄° *
ªf
, 
©_time
, 
˙t
, *
sha1
, **
msg
, *
cutoff_time
, *
cutoff_tz
, *
cutoff_˙t
);

48 
	tóch_ªÊog_ít_‚
(*
	tosha1
, *
	tnsha1
, const *, , , const *, *);

49 
f‹_óch_ªÊog_ít
(c⁄° *
ªf
, 
óch_ªÊog_ít_‚
 
‚
, *
cb_d©a
);

55 
f‹_óch_ªÊog
(
óch_ªf_‚
, *);

58 
check_ªf_f‹m©
(c⁄° *
èrgë
);

61 
ª«me_ªf
(c⁄° *
ﬁdªf
, c⁄° *
√wªf
, c⁄° *
logmsg
);

	@revision.c

1 
	~"ˇche.h
"

2 
	~"èg.h
"

3 
	~"blob.h
"

4 
	~"åì.h
"

5 
	~"commô.h
"

6 
	~"diff.h
"

7 
	~"ªfs.h
"

8 
	~"ªvisi⁄.h
"

9 
	~"gªp.h
"

10 
	~"ªÊog-wÆk.h
"

12 *
	$∑th_«me
(
«me_∑th
 *
∑th
, c⁄° *
«me
)

14 
«me_∑th
 *
p
;

15 *
n
, *
m
;

16 
∆í
 = 
	`°æí
(
«me
);

17 
Àn
 = 
∆í
 + 1;

19 
p
 = 
∑th
;Ö;Ö =Ö->
up
) {

20 i‡(
p
->
ñem_Àn
)

21 
Àn
 +
p
->
ñem_Àn
 + 1;

23 
n
 = 
	`xmÆloc
(
Àn
);

24 
m
 = 
n
 + 
Àn
 - (
∆í
 + 1);

25 
	`°r˝y
(
m
, 
«me
);

26 
p
 = 
∑th
;Ö;Ö =Ö->
up
) {

27 i‡(
p
->
ñem_Àn
) {

28 
m
 -
p
->
ñem_Àn
 + 1;

29 
	`mem˝y
(
m
, 
p
->
ñem
,Ö->
ñem_Àn
);

30 
m
[
p
->
ñem_Àn
] = '/';

33  
n
;

34 
	}
}

36 
	$add_obje˘
(
obje˘
 *
obj
,

37 
obje˘_¨øy
 *
p
,

38 
«me_∑th
 *
∑th
,

39 c⁄° *
«me
)

41 
	`add_obje˘_¨øy
(
obj
, 
	`∑th_«me
(
∑th
, 
«me
), 
p
);

42 
	}
}

44 
	$m¨k_blob_unöãª°ög
(
blob
 *blob)

46 i‡(
blob
->
obje˘
.
Êags
 & 
UNINTERESTING
)

48 
blob
->
obje˘
.
Êags
 |
UNINTERESTING
;

49 
	}
}

51 
	$m¨k_åì_unöãª°ög
(
åì
 *tree)

53 
åì_desc
 
desc
;

54 
«me_íåy
 
íåy
;

55 
obje˘
 *
obj
 = &
åì
->object;

57 i‡(
obj
->
Êags
 & 
UNINTERESTING
)

59 
obj
->
Êags
 |
UNINTERESTING
;

60 i‡(!
	`has_sha1_fûe
(
obj
->
sha1
))

62 i‡(
	`∑r£_åì
(
åì
) < 0)

63 
	`dõ
("badÅªê%s", 
	`sha1_to_hex
(
obj
->
sha1
));

65 
desc
.
buf
 = 
åì
->
buf„r
;

66 
desc
.
size
 = 
åì
->size;

67 
	`åì_íåy
(&
desc
, &
íåy
)) {

68 i‡(
	`S_ISDIR
(
íåy
.
mode
))

69 
	`m¨k_åì_unöãª°ög
(
	`lookup_åì
(
íåy
.
sha1
));

71 
	`m¨k_blob_unöãª°ög
(
	`lookup_blob
(
íåy
.
sha1
));

78 
	`‰ì
(
åì
->
buf„r
);

79 
åì
->
buf„r
 = 
NULL
;

80 
	}
}

82 
	$m¨k_∑ª¡s_unöãª°ög
(
commô
 *commit)

84 
commô_li°
 *
∑ª¡s
 = 
commô
->parents;

86 
∑ª¡s
) {

87 
commô
 *commô = 
∑ª¡s
->
ôem
;

88 i‡(!(
commô
->
obje˘
.
Êags
 & 
UNINTERESTING
)) {

89 
commô
->
obje˘
.
Êags
 |
UNINTERESTING
;

99 i‡(
commô
->
∑ª¡s
)

100 
	`m¨k_∑ª¡s_unöãª°ög
(
commô
);

111 i‡(!
	`has_sha1_fûe
(
commô
->
obje˘
.
sha1
))

112 
commô
->
obje˘
.
∑r£d
 = 1;

113 
∑ª¡s
 =Ö¨íts->
√xt
;

115 
	}
}

117 
	$add_≥ndög_obje˘
(
ªv_öfo
 *
ªvs
, 
obje˘
 *
obj
, c⁄° *
«me
)

119 
	`add_obje˘_¨øy
(
obj
, 
«me
, &
ªvs
->
≥ndög
);

120 i‡(
ªvs
->
ªÊog_öfo
 && 
obj
->
ty≥
 =
OBJ_COMMIT
)

121 
	`add_ªÊog_f‹_wÆk
(
ªvs
->
ªÊog_öfo
,

122 (
commô
 *)
obj
, 
«me
);

123 
	}
}

125 
obje˘
 *
	$gë_ª„ªn˚
(
ªv_öfo
 *
ªvs
, c⁄° *
«me
, c⁄° *
sha1
, 
Êags
)

127 
obje˘
 *object;

129 
obje˘
 = 
	`∑r£_obje˘
(
sha1
);

130 i‡(!
obje˘
)

131 
	`dõ
("bad obje˘ %s", 
«me
);

132 
obje˘
->
Êags
 |= flags;

133  
obje˘
;

134 
	}
}

136 
commô
 *
	$h™dÀ_commô
(
ªv_öfo
 *
ªvs
, 
obje˘
 *obje˘, c⁄° *
«me
)

138 
Êags
 = 
obje˘
->flags;

143 
obje˘
->
ty≥
 =
OBJ_TAG
) {

144 
èg
 *èg = (èg *Ë
obje˘
;

145 i‡(
ªvs
->
èg_obje˘s
 && !(
Êags
 & 
UNINTERESTING
))

146 
	`add_≥ndög_obje˘
(
ªvs
, 
obje˘
, 
èg
->tag);

147 
obje˘
 = 
	`∑r£_obje˘
(
èg
->
ègged
->
sha1
);

148 i‡(!
obje˘
)

149 
	`dõ
("bad obje˘ %s", 
	`sha1_to_hex
(
èg
->
ègged
->
sha1
));

156 i‡(
obje˘
->
ty≥
 =
OBJ_COMMIT
) {

157 
commô
 *commô = (commô *)
obje˘
;

158 i‡(
	`∑r£_commô
(
commô
) < 0)

159 
	`dõ
("u«bÀÅÿ∑r£ commô %s", 
«me
);

160 i‡(
Êags
 & 
UNINTERESTING
) {

161 
commô
->
obje˘
.
Êags
 |
UNINTERESTING
;

162 
	`m¨k_∑ª¡s_unöãª°ög
(
commô
);

163 
ªvs
->
limôed
 = 1;

165  
commô
;

172 i‡(
obje˘
->
ty≥
 =
OBJ_TREE
) {

173 
åì
 *åì = (åì *)
obje˘
;

174 i‡(!
ªvs
->
åì_obje˘s
)

175  
NULL
;

176 i‡(
Êags
 & 
UNINTERESTING
) {

177 
	`m¨k_åì_unöãª°ög
(
åì
);

178  
NULL
;

180 
	`add_≥ndög_obje˘
(
ªvs
, 
obje˘
, "");

181  
NULL
;

187 i‡(
obje˘
->
ty≥
 =
OBJ_BLOB
) {

188 
blob
 *blob = (blob *)
obje˘
;

189 i‡(!
ªvs
->
blob_obje˘s
)

190  
NULL
;

191 i‡(
Êags
 & 
UNINTERESTING
) {

192 
	`m¨k_blob_unöãª°ög
(
blob
);

193  
NULL
;

195 
	`add_≥ndög_obje˘
(
ªvs
, 
obje˘
, "");

196  
NULL
;

198 
	`dõ
("%†i†unknow¿obje˘", 
«me
);

199 
	}
}

201 
	$evîybody_unöãª°ög
(
commô_li°
 *
‹ig
)

203 
commô_li°
 *
li°
 = 
‹ig
;

204 
li°
) {

205 
commô
 *commô = 
li°
->
ôem
;

206 
li°
 =Üi°->
√xt
;

207 i‡(
commô
->
obje˘
.
Êags
 & 
UNINTERESTING
)

212 
	}
}

214 
	gåì_dif„ªn˚
 = 
REV_TREE_SAME
;

216 
	$fûe_add_ªmove
(
diff_›ti⁄s
 *
›ti⁄s
,

217 
addªmove
, 
mode
,

218 c⁄° *
sha1
,

219 c⁄° *
ba£
, c⁄° *
∑th
)

221 
diff
 = 
REV_TREE_DIFFERENT
;

230 i‡(
addªmove
 == '+') {

231 
diff
 = 
åì_dif„ªn˚
;

232 i‡(
diff
 !
REV_TREE_SAME
)

234 
diff
 = 
REV_TREE_NEW
;

236 
åì_dif„ªn˚
 = 
diff
;

237 
	}
}

239 
	$fûe_ch™ge
(
diff_›ti⁄s
 *
›ti⁄s
,

240 
ﬁd_mode
, 
√w_mode
,

241 c⁄° *
ﬁd_sha1
,

242 c⁄° *
√w_sha1
,

243 c⁄° *
ba£
, c⁄° *
∑th
)

245 
åì_dif„ªn˚
 = 
REV_TREE_DIFFERENT
;

246 
	}
}

248 
	$ªv_com∑ª_åì
(
ªv_öfo
 *
ªvs
, 
åì
 *
t1
, åì *
t2
)

250 i‡(!
t1
)

251  
REV_TREE_NEW
;

252 i‡(!
t2
)

253  
REV_TREE_DIFFERENT
;

254 
åì_dif„ªn˚
 = 
REV_TREE_SAME
;

255 i‡(
	`diff_åì_sha1
(
t1
->
obje˘
.
sha1
, 
t2
->object.sha1, "",

256 &
ªvs
->
¥unög
) < 0)

257  
REV_TREE_DIFFERENT
;

258  
åì_dif„ªn˚
;

259 
	}
}

261 
	$ªv_ßme_åì_as_em±y
(
ªv_öfo
 *
ªvs
, 
åì
 *
t1
)

263 
ªtvÆ
;

264 *
åì
;

265 
åì_desc
 
em±y
, 
ªÆ
;

267 i‡(!
t1
)

270 
åì
 = 
	`ªad_obje˘_wôh_ª„ªn˚
(
t1
->
obje˘
.
sha1
, 
åì_ty≥
, &
ªÆ
.
size
, 
NULL
);

271 i‡(!
åì
)

273 
ªÆ
.
buf
 = 
åì
;

275 
em±y
.
buf
 = "";

276 
em±y
.
size
 = 0;

278 
åì_dif„ªn˚
 = 0;

279 
ªtvÆ
 = 
	`diff_åì
(&
em±y
, &
ªÆ
, "", &
ªvs
->
¥unög
);

280 
	`‰ì
(
åì
);

282  
ªtvÆ
 >0 && !
åì_dif„ªn˚
;

283 
	}
}

285 
	$åy_to_sim∂ify_commô
(
ªv_öfo
 *
ªvs
, 
commô
 *commit)

287 
commô_li°
 **
µ
, *
∑ª¡
;

288 
åì_ch™ged
 = 0, 
åì_ßme
 = 0;

290 i‡(!
commô
->
åì
)

293 i‡(!
commô
->
∑ª¡s
) {

294 i‡(!
	`ªv_ßme_åì_as_em±y
(
ªvs
, 
commô
->
åì
))

295 
commô
->
obje˘
.
Êags
 |
TREECHANGE
;

299 
µ
 = &
commô
->
∑ª¡s
;

300 (
∑ª¡
 = *
µ
Ë!
NULL
) {

301 
commô
 *
p
 = 
∑ª¡
->
ôem
;

303 
	`∑r£_commô
(
p
);

304 
	`ªv_com∑ª_åì
(
ªvs
, 
p
->
åì
, 
commô
->tree)) {

305 
REV_TREE_SAME
:

306 
åì_ßme
 = 1;

307 i‡(!
ªvs
->
sim∂ify_hi°‹y
 || (
p
->
obje˘
.
Êags
 & 
UNINTERESTING
)) {

314 
µ
 = &
∑ª¡
->
√xt
;

317 
∑ª¡
->
√xt
 = 
NULL
;

318 
commô
->
∑ª¡s
 = 
∑ª¡
;

321 
REV_TREE_NEW
:

322 i‡(
ªvs
->
ªmove_em±y_åìs
 &&

323 
	`ªv_ßme_åì_as_em±y
(
ªvs
, 
p
->
åì
)) {

332 
	`∑r£_commô
(
p
);

333 
p
->
∑ª¡s
 = 
NULL
;

336 
REV_TREE_DIFFERENT
:

337 
åì_ch™ged
 = 1;

338 
µ
 = &
∑ª¡
->
√xt
;

341 
	`dõ
("badÅªêcom∑ª f‹ commô %s", 
	`sha1_to_hex
(
commô
->
obje˘
.
sha1
));

343 i‡(
åì_ch™ged
 && !
åì_ßme
)

344 
commô
->
obje˘
.
Êags
 |
TREECHANGE
;

345 
	}
}

347 
	$add_∑ª¡s_to_li°
(
ªv_öfo
 *
ªvs
, 
commô
 *commô, 
commô_li°
 **
li°
)

349 
commô_li°
 *
∑ª¡
 = 
commô
->
∑ª¡s
;

350 
À·_Êag
;

352 i‡(
commô
->
obje˘
.
Êags
 & 
ADDED
)

354 
commô
->
obje˘
.
Êags
 |
ADDED
;

368 i‡(
commô
->
obje˘
.
Êags
 & 
UNINTERESTING
) {

369 
∑ª¡
) {

370 
commô
 *
p
 = 
∑ª¡
->
ôem
;

371 
∑ª¡
 =Ö¨ít->
√xt
;

372 
	`∑r£_commô
(
p
);

373 
p
->
obje˘
.
Êags
 |
UNINTERESTING
;

374 i‡(
p
->
∑ª¡s
)

375 
	`m¨k_∑ª¡s_unöãª°ög
(
p
);

376 i‡(
p
->
obje˘
.
Êags
 & 
SEEN
)

378 
p
->
obje˘
.
Êags
 |
SEEN
;

379 
	`ö£π_by_d©e
(
p
, 
li°
);

389 i‡(
ªvs
->
¥u√_‚
)

390 
ªvs
->
	`¥u√_‚
‘evs, 
commô
);

392 i‡(
ªvs
->
no_wÆk
)

395 
À·_Êag
 = (
commô
->
obje˘
.
Êags
 & 
SYMMETRIC_LEFT
);

396 
∑ª¡
 = 
commô
->
∑ª¡s
;

397 
∑ª¡
) {

398 
commô
 *
p
 = 
∑ª¡
->
ôem
;

400 
∑ª¡
 =Ö¨ít->
√xt
;

402 
	`∑r£_commô
(
p
);

403 
p
->
obje˘
.
Êags
 |
À·_Êag
;

404 i‡(
p
->
obje˘
.
Êags
 & 
SEEN
)

406 
p
->
obje˘
.
Êags
 |
SEEN
;

407 
	`ö£π_by_d©e
(
p
, 
li°
);

409 
	}
}

411 
	$limô_li°
(
ªv_öfo
 *
ªvs
)

413 
commô_li°
 *
li°
 = 
ªvs
->
commôs
;

414 
commô_li°
 *
√wli°
 = 
NULL
;

415 
commô_li°
 **
p
 = &
√wli°
;

417 
li°
) {

418 
commô_li°
 *
íåy
 = 
li°
;

419 
commô
 *commô = 
li°
->
ôem
;

420 
obje˘
 *
obj
 = &
commô
->object;

422 
li°
 =Üi°->
√xt
;

423 
	`‰ì
(
íåy
);

425 i‡(
ªvs
->
max_age
 !-1 && (
commô
->
d©e
 <Ñevs->max_age))

426 
obj
->
Êags
 |
UNINTERESTING
;

427 
	`add_∑ª¡s_to_li°
(
ªvs
, 
commô
, &
li°
);

428 i‡(
obj
->
Êags
 & 
UNINTERESTING
) {

429 
	`m¨k_∑ª¡s_unöãª°ög
(
commô
);

430 i‡(
	`evîybody_unöãª°ög
(
li°
))

434 i‡(
ªvs
->
mö_age
 !-1 && (
commô
->
d©e
 >Ñevs->min_age))

436 
p
 = &
	`commô_li°_ö£π
(
commô
,Ö)->
√xt
;

438 i‡(
ªvs
->
bound¨y
) {

440 
li°
 = 
√wli°
;Üi°;Üi° =Üi°->
√xt
) {

441 
commô
 *commô = 
li°
->
ôem
;

442 
commô
->
obje˘
.
Êags
 |
TMP_MARK
;

444 
li°
 = 
√wli°
;Üi°;Üi° =Üi°->
√xt
) {

445 
commô
 *commô = 
li°
->
ôem
;

446 
obje˘
 *
obj
 = &
commô
->object;

447 
commô_li°
 *
∑ª¡
;

448 i‡(
obj
->
Êags
 & 
UNINTERESTING
)

450 
∑ª¡
 = 
commô
->
∑ª¡s
;

451 
∑ª¡
;

452 
∑ª¡
 =Ö¨ít->
√xt
) {

453 
commô
 *
pcommô
 = 
∑ª¡
->
ôem
;

454 i‡(!(
pcommô
->
obje˘
.
Êags
 & 
UNINTERESTING
))

456 
pcommô
->
obje˘
.
Êags
 |
BOUNDARY
;

457 i‡(
pcommô
->
obje˘
.
Êags
 & 
TMP_MARK
)

459 
pcommô
->
obje˘
.
Êags
 |
TMP_MARK
;

460 
p
 = &
	`commô_li°_ö£π
(
pcommô
,Ö)->
√xt
;

463 
li°
 = 
√wli°
;Üi°;Üi° =Üi°->
√xt
) {

464 
commô
 *commô = 
li°
->
ôem
;

465 
commô
->
obje˘
.
Êags
 &~
TMP_MARK
;

468 
ªvs
->
commôs
 = 
√wli°
;

469 
	}
}

471 
	sÆl_ªfs_cb
 {

472 
	mÆl_Êags
;

473 
	mw¨√d_bad_ªÊog
;

474 
ªv_öfo
 *
	mÆl_ªvs
;

475 c⁄° *
	m«me_f‹_îr‹msg
;

478 
	$h™dÀ_⁄e_ªf
(c⁄° *
∑th
, c⁄° *
sha1
, 
Êag
, *
cb_d©a
)

480 
Æl_ªfs_cb
 *
cb
 = 
cb_d©a
;

481 
obje˘
 *obje˘ = 
	`gë_ª„ªn˚
(
cb
->
Æl_ªvs
, 
∑th
, 
sha1
,

482 
cb
->
Æl_Êags
);

483 
	`add_≥ndög_obje˘
(
cb
->
Æl_ªvs
, 
obje˘
, "");

485 
	}
}

487 
	$h™dÀ_Æl
(
ªv_öfo
 *
ªvs
, 
Êags
)

489 
Æl_ªfs_cb
 
cb
;

490 
cb
.
Æl_ªvs
 = 
ªvs
;

491 
cb
.
Æl_Êags
 = 
Êags
;

492 
	`f‹_óch_ªf
(
h™dÀ_⁄e_ªf
, &
cb
);

493 
	}
}

495 
	$h™dÀ_⁄e_ªÊog_commô
(*
sha1
, *
cb_d©a
)

497 
Æl_ªfs_cb
 *
cb
 = 
cb_d©a
;

498 i‡(!
	`is_nuŒ_sha1
(
sha1
)) {

499 
obje˘
 *
o
 = 
	`∑r£_obje˘
(
sha1
);

500 i‡(
o
) {

501 
o
->
Êags
 |
cb
->
Æl_Êags
;

502 
	`add_≥ndög_obje˘
(
cb
->
Æl_ªvs
, 
o
, "");

504 i‡(!
cb
->
w¨√d_bad_ªÊog
) {

505 
	`w¨n
("reflog of '%s'ÑeferencesÖruned commits",

506 
cb
->
«me_f‹_îr‹msg
);

507 
cb
->
w¨√d_bad_ªÊog
 = 1;

510 
	}
}

512 
	$h™dÀ_⁄e_ªÊog_ít
(*
osha1
, *
nsha1
,

513 c⁄° *
emaû
, 
time°amp
, 
tz
,

514 c⁄° *
mesßge
, *
cb_d©a
)

516 
	`h™dÀ_⁄e_ªÊog_commô
(
osha1
, 
cb_d©a
);

517 
	`h™dÀ_⁄e_ªÊog_commô
(
nsha1
, 
cb_d©a
);

519 
	}
}

521 
	$h™dÀ_⁄e_ªÊog
(c⁄° *
∑th
, c⁄° *
sha1
, 
Êag
, *
cb_d©a
)

523 
Æl_ªfs_cb
 *
cb
 = 
cb_d©a
;

524 
cb
->
w¨√d_bad_ªÊog
 = 0;

525 
cb
->
«me_f‹_îr‹msg
 = 
∑th
;

526 
	`f‹_óch_ªÊog_ít
(
∑th
, 
h™dÀ_⁄e_ªÊog_ít
, 
cb_d©a
);

528 
	}
}

530 
	$h™dÀ_ªÊog
(
ªv_öfo
 *
ªvs
, 
Êags
)

532 
Æl_ªfs_cb
 
cb
;

533 
cb
.
Æl_ªvs
 = 
ªvs
;

534 
cb
.
Æl_Êags
 = 
Êags
;

535 
	`f‹_óch_ªÊog
(
h™dÀ_⁄e_ªÊog
, &
cb
);

536 
	}
}

538 
	$add_∑ª¡s_⁄ly
(
ªv_öfo
 *
ªvs
, c⁄° *
¨g
, 
Êags
)

540 
sha1
[20];

541 
obje˘
 *
ô
;

542 
commô
 *commit;

543 
commô_li°
 *
∑ª¡s
;

545 i‡(*
¨g
 == '^') {

546 
Êags
 ^
UNINTERESTING
;

547 
¨g
++;

549 i‡(
	`gë_sha1
(
¨g
, 
sha1
))

552 
ô
 = 
	`gë_ª„ªn˚
(
ªvs
, 
¨g
, 
sha1
, 0);

553 i‡(
ô
->
ty≥
 !
OBJ_TAG
)

555 
	`hash˝y
(
sha1
, ((
èg
*)
ô
)->
ègged
->sha1);

557 i‡(
ô
->
ty≥
 !
OBJ_COMMIT
)

559 
commô
 = (commô *)
ô
;

560 
∑ª¡s
 = 
commô
->∑ª¡s;Ö¨íts;Ö¨ít†∑ª¡s->
√xt
) {

561 
ô
 = &
∑ª¡s
->
ôem
->
obje˘
;

562 
ô
->
Êags
 |= flags;

563 
	`add_≥ndög_obje˘
(
ªvs
, 
ô
, 
¨g
);

566 
	}
}

568 
	$öô_ªvisi⁄s
(
ªv_öfo
 *
ªvs
, c⁄° *
¥efix
)

570 
	`mem£t
(
ªvs
, 0, (*revs));

572 
ªvs
->
abbªv
 = 
DEFAULT_ABBREV
;

573 
ªvs
->
ign‹e_mîges
 = 1;

574 
ªvs
->
sim∂ify_hi°‹y
 = 1;

575 
ªvs
->
¥unög
.
ªcursive
 = 1;

576 
ªvs
->
¥unög
.
add_ªmove
 = 
fûe_add_ªmove
;

577 
ªvs
->
¥unög
.
ch™ge
 = 
fûe_ch™ge
;

578 
ªvs
->
lifo
 = 1;

579 
ªvs
->
dí£
 = 1;

580 
ªvs
->
¥efix
 =Örefix;

581 
ªvs
->
max_age
 = -1;

582 
ªvs
->
mö_age
 = -1;

583 
ªvs
->
skù_cou¡
 = -1;

584 
ªvs
->
max_cou¡
 = -1;

586 
ªvs
->
¥u√_‚
 = 
NULL
;

587 
ªvs
->
¥u√_d©a
 = 
NULL
;

589 
ªvs
->
t›o_£âî
 = 
t›o_s‹t_deÁu…_£âî
;

590 
ªvs
->
t›o_gëãr
 = 
t›o_s‹t_deÁu…_gëãr
;

592 
ªvs
->
commô_f‹m©
 = 
CMIT_FMT_DEFAULT
;

594 
	`diff_£tup
(&
ªvs
->
diff›t
);

595 
	}
}

597 
	$add_≥ndög_commô_li°
(
ªv_öfo
 *
ªvs
,

598 
commô_li°
 *commit_list,

599 
Êags
)

601 
commô_li°
) {

602 
obje˘
 *obje˘ = &
commô_li°
->
ôem
->object;

603 
obje˘
->
Êags
 |= flags;

604 
	`add_≥ndög_obje˘
(
ªvs
, 
obje˘
, 
	`sha1_to_hex
(obje˘->
sha1
));

605 
commô_li°
 = commô_li°->
√xt
;

607 
	}
}

609 
	$¥ï¨e_show_mîge
(
ªv_öfo
 *
ªvs
)

611 
commô_li°
 *
ba£s
;

612 
commô
 *
hód
, *
Ÿhî
;

613 
sha1
[20];

614 c⁄° **
¥u√
 = 
NULL
;

615 
i
, 
¥u√_num
 = 1;

617 i‡(
	`gë_sha1
("HEAD", 
sha1
Ë|| !(
hód
 = 
	`lookup_commô
(sha1)))

618 
	`dõ
("--merge without HEAD?");

619 i‡(
	`gë_sha1
("MERGE_HEAD", 
sha1
Ë|| !(
Ÿhî
 = 
	`lookup_commô
(sha1)))

620 
	`dõ
("--merge without MERGE_HEAD?");

621 
	`add_≥ndög_obje˘
(
ªvs
, &
hód
->
obje˘
, "HEAD");

622 
	`add_≥ndög_obje˘
(
ªvs
, &
Ÿhî
->
obje˘
, "MERGE_HEAD");

623 
ba£s
 = 
	`gë_mîge_ba£s
(
hód
, 
Ÿhî
, 1);

624 
ba£s
) {

625 
commô
 *
ô
 = 
ba£s
->
ôem
;

626 
commô_li°
 *
n
 = 
ba£s
->
√xt
;

627 
	`‰ì
(
ba£s
);

628 
ba£s
 = 
n
;

629 
ô
->
obje˘
.
Êags
 |
UNINTERESTING
;

630 
	`add_≥ndög_obje˘
(
ªvs
, &
ô
->
obje˘
, "(merge-base)");

633 i‡(!
a˘ive_ƒ
)

634 
	`ªad_ˇche
();

635 
i
 = 0; i < 
a˘ive_ƒ
; i++) {

636 
ˇche_íåy
 *
˚
 = 
a˘ive_ˇche
[
i
];

637 i‡(!
	`˚_°age
(
˚
))

639 i‡(
	`˚_∑th_m©ch
(
˚
, 
ªvs
->
¥u√_d©a
)) {

640 
¥u√_num
++;

641 
¥u√
 = 
	`xªÆloc
’ru√, (*¥u√Ë* 
¥u√_num
);

642 
¥u√
[
¥u√_num
-2] = 
˚
->
«me
;

643 
¥u√
[
¥u√_num
-1] = 
NULL
;

645 (
i
+1 < 
a˘ive_ƒ
) &&

646 
	`˚_ßme_«me
(
˚
, 
a˘ive_ˇche
[
i
+1]))

647 
i
++;

649 
ªvs
->
¥u√_d©a
 = 
¥u√
;

650 
	}
}

652 
	$h™dÀ_ªvisi⁄_¨g
(c⁄° *
¨g
, 
ªv_öfo
 *
ªvs
,

653 
Êags
,

654 
ˇ¡_be_fûíame
)

656 *
dŸdŸ
;

657 
obje˘
 *object;

658 
sha1
[20];

659 
loˇl_Êags
;

661 
dŸdŸ
 = 
	`°r°r
(
¨g
, "..");

662 i‡(
dŸdŸ
) {

663 
‰om_sha1
[20];

664 c⁄° *
√xt
 = 
dŸdŸ
 + 2;

665 c⁄° *
this
 = 
¨g
;

666 
symmëric
 = *
√xt
 == '.';

667 
Êags_ex˛ude
 = 
Êags
 ^ 
UNINTERESTING
;

669 *
dŸdŸ
 = 0;

670 
√xt
 +
symmëric
;

672 i‡(!*
√xt
)

673 
√xt
 = "HEAD";

674 i‡(
dŸdŸ
 =
¨g
)

675 
this
 = "HEAD";

676 i‡(!
	`gë_sha1
(
this
, 
‰om_sha1
) &&

677 !
	`gë_sha1
(
√xt
, 
sha1
)) {

678 
commô
 *
a
, *
b
;

679 
commô_li°
 *
ex˛ude
;

681 
a
 = 
	`lookup_commô_ª„ªn˚
(
‰om_sha1
);

682 
b
 = 
	`lookup_commô_ª„ªn˚
(
sha1
);

683 i‡(!
a
 || !
b
) {

684 
	`dõ
(
symmëric
 ?

687 
¨g
, 
√xt
);

690 i‡(!
ˇ¡_be_fûíame
) {

691 *
dŸdŸ
 = '.';

692 
	`vîify_n⁄_fûíame
(
ªvs
->
¥efix
, 
¨g
);

695 i‡(
symmëric
) {

696 
ex˛ude
 = 
	`gë_mîge_ba£s
(
a
, 
b
, 1);

697 
	`add_≥ndög_commô_li°
(
ªvs
, 
ex˛ude
,

698 
Êags_ex˛ude
);

699 
	`‰ì_commô_li°
(
ex˛ude
);

700 
a
->
obje˘
.
Êags
 |Êag†| 
SYMMETRIC_LEFT
;

702 
a
->
obje˘
.
Êags
 |
Êags_ex˛ude
;

703 
b
->
obje˘
.
Êags
 |= flags;

704 
	`add_≥ndög_obje˘
(
ªvs
, &
a
->
obje˘
, 
this
);

705 
	`add_≥ndög_obje˘
(
ªvs
, &
b
->
obje˘
, 
√xt
);

708 *
dŸdŸ
 = '.';

710 
dŸdŸ
 = 
	`°r°r
(
¨g
, "^@");

711 i‡(
dŸdŸ
 && !dotdot[2]) {

712 *
dŸdŸ
 = 0;

713 i‡(
	`add_∑ª¡s_⁄ly
(
ªvs
, 
¨g
, 
Êags
))

715 *
dŸdŸ
 = '^';

717 
dŸdŸ
 = 
	`°r°r
(
¨g
, "^!");

718 i‡(
dŸdŸ
 && !dotdot[2]) {

719 *
dŸdŸ
 = 0;

720 i‡(!
	`add_∑ª¡s_⁄ly
(
ªvs
, 
¨g
, 
Êags
 ^ 
UNINTERESTING
))

721 *
dŸdŸ
 = '^';

724 
loˇl_Êags
 = 0;

725 i‡(*
¨g
 == '^') {

726 
loˇl_Êags
 = 
UNINTERESTING
;

727 
¨g
++;

729 i‡(
	`gë_sha1
(
¨g
, 
sha1
))

731 i‡(!
ˇ¡_be_fûíame
)

732 
	`vîify_n⁄_fûíame
(
ªvs
->
¥efix
, 
¨g
);

733 
obje˘
 = 
	`gë_ª„ªn˚
(
ªvs
, 
¨g
, 
sha1
, 
Êags
 ^ 
loˇl_Êags
);

734 
	`add_≥ndög_obje˘
(
ªvs
, 
obje˘
, 
¨g
);

736 
	}
}

738 
	$add_gªp
(
ªv_öfo
 *
ªvs
, c⁄° *
±n
, 
gªp_∑t_tokí
 
wh©
)

740 i‡(!
ªvs
->
gªp_fûãr
) {

741 
gªp_›t
 *
›t
 = 
	`xˇŒoc
(1, (*opt));

742 
›t
->
°©us_⁄ly
 = 1;

743 
›t
->
∑âîn_èû
 = &(›t->
∑âîn_li°
);

744 
›t
->
ªgÊags
 = 
REG_NEWLINE
;

745 
ªvs
->
gªp_fûãr
 = 
›t
;

747 
	`≠≥nd_gªp_∑âîn
(
ªvs
->
gªp_fûãr
, 
±n
,

748 "comm™dÜöe", 0, 
wh©
);

749 
	}
}

751 
	$add_hódî_gªp
(
ªv_öfo
 *
ªvs
, c⁄° *
fõld
, c⁄° *
∑âîn
)

753 *
∑t
;

754 c⁄° *
¥efix
;

755 
∑éí
, 
ÊdÀn
;

757 
ÊdÀn
 = 
	`°æí
(
fõld
);

758 
∑éí
 = 
	`°æí
(
∑âîn
);

759 
∑t
 = 
	`xmÆloc
(
∑éí
 + 
ÊdÀn
 + 10);

760 
¥efix
 = ".*";

761 i‡(*
∑âîn
 == '^') {

762 
¥efix
 = "";

763 
∑âîn
++;

765 
	`•rötf
(
∑t
, "^%†%s%s", 
fõld
, 
¥efix
, 
∑âîn
);

766 
	`add_gªp
(
ªvs
, 
∑t
, 
GREP_PATTERN_HEAD
);

767 
	}
}

769 
	$add_mesßge_gªp
(
ªv_öfo
 *
ªvs
, c⁄° *
∑âîn
)

771 
	`add_gªp
(
ªvs
, 
∑âîn
, 
GREP_PATTERN_BODY
);

772 
	}
}

774 
	$add_ign‹e_∑cked
(
ªv_öfo
 *
ªvs
, c⁄° *
«me
)

776 
num
 = ++
ªvs
->
num_ign‹e_∑cked
;

778 
ªvs
->
ign‹e_∑cked
 = 
	`xªÆloc
(revs->ignore_packed,

779 (c⁄° **Ë* (
num
 + 1));

780 
ªvs
->
ign‹e_∑cked
[
num
-1] = 
«me
;

781 
ªvs
->
ign‹e_∑cked
[
num
] = 
NULL
;

782 
	}
}

791 
	$£tup_ªvisi⁄s
(
¨gc
, c⁄° **
¨gv
, 
ªv_öfo
 *
ªvs
, c⁄° *
def
)

793 
i
, 
Êags
, 
£í_dashdash
, 
show_mîge
;

794 c⁄° **
uƒecognized
 = 
¨gv
 + 1;

795 
À·
 = 1;

796 
Æl_m©ch
 = 0;

799 
£í_dashdash
 = 0;

800 
i
 = 1; i < 
¨gc
; i++) {

801 c⁄° *
¨g
 = 
¨gv
[
i
];

802 i‡(
	`°rcmp
(
¨g
, "--"))

804 
¨gv
[
i
] = 
NULL
;

805 
¨gc
 = 
i
;

806 
ªvs
->
¥u√_d©a
 = 
	`gë_∑th•ec
‘evs->
¥efix
, 
¨gv
 + 
i
 + 1);

807 
£í_dashdash
 = 1;

811 
Êags
 = 
show_mîge
 = 0;

812 
i
 = 1; i < 
¨gc
; i++) {

813 c⁄° *
¨g
 = 
¨gv
[
i
];

814 i‡(*
¨g
 == '-') {

815 
›ts
;

816 i‡(!
	`°∫cmp
(
¨g
, "--max-count=", 12)) {

817 
ªvs
->
max_cou¡
 = 
	`©oi
(
¨g
 + 12);

820 i‡(!
	`°∫cmp
(
¨g
, "--skip=", 7)) {

821 
ªvs
->
skù_cou¡
 = 
	`©oi
(
¨g
 + 7);

825 i‡((*
¨g
 ='-'Ë&& 
	`isdigô
(arg[1])) {

826 
ªvs
->
max_cou¡
 = 
	`©oi
(
¨g
 + 1);

829 i‡(!
	`°rcmp
(
¨g
, "-n")) {

830 i‡(
¨gc
 <
i
 + 1)

831 
	`dõ
("-nÑequiresánárgument");

832 
ªvs
->
max_cou¡
 = 
	`©oi
(
¨gv
[++
i
]);

835 i‡(!
	`°∫cmp
(
¨g
,"-n",2)) {

836 
ªvs
->
max_cou¡
 = 
	`©oi
(
¨g
 + 2);

839 i‡(!
	`°∫cmp
(
¨g
, "--max-age=", 10)) {

840 
ªvs
->
max_age
 = 
	`©oi
(
¨g
 + 10);

843 i‡(!
	`°∫cmp
(
¨g
, "--since=", 8)) {

844 
ªvs
->
max_age
 = 
	`≠¥oxid©e
(
¨g
 + 8);

847 i‡(!
	`°∫cmp
(
¨g
, "--after=", 8)) {

848 
ªvs
->
max_age
 = 
	`≠¥oxid©e
(
¨g
 + 8);

851 i‡(!
	`°∫cmp
(
¨g
, "--min-age=", 10)) {

852 
ªvs
->
mö_age
 = 
	`©oi
(
¨g
 + 10);

855 i‡(!
	`°∫cmp
(
¨g
, "--before=", 9)) {

856 
ªvs
->
mö_age
 = 
	`≠¥oxid©e
(
¨g
 + 9);

859 i‡(!
	`°∫cmp
(
¨g
, "--until=", 8)) {

860 
ªvs
->
mö_age
 = 
	`≠¥oxid©e
(
¨g
 + 8);

863 i‡(!
	`°rcmp
(
¨g
, "--all")) {

864 
	`h™dÀ_Æl
(
ªvs
, 
Êags
);

867 i‡(!
	`°rcmp
(
¨g
, "--reflog")) {

868 
	`h™dÀ_ªÊog
(
ªvs
, 
Êags
);

871 i‡(!
	`°rcmp
(
¨g
, "-g") ||

872 !
	`°rcmp
(
¨g
, "--walk-reflogs")) {

873 
	`öô_ªÊog_wÆk
(&
ªvs
->
ªÊog_öfo
);

876 i‡(!
	`°rcmp
(
¨g
, "--not")) {

877 
Êags
 ^
UNINTERESTING
;

880 i‡(!
	`°rcmp
(
¨g
, "--default")) {

881 i‡(++
i
 >
¨gc
)

882 
	`dõ
("bad --defaultárgument");

883 
def
 = 
¨gv
[
i
];

886 i‡(!
	`°rcmp
(
¨g
, "--merge")) {

887 
show_mîge
 = 1;

890 i‡(!
	`°rcmp
(
¨g
, "--topo-order")) {

891 
ªvs
->
t›o_‹dî
 = 1;

894 i‡(!
	`°rcmp
(
¨g
, "--date-order")) {

895 
ªvs
->
lifo
 = 0;

896 
ªvs
->
t›o_‹dî
 = 1;

899 i‡(!
	`°rcmp
(
¨g
, "--parents")) {

900 
ªvs
->
∑ª¡s
 = 1;

903 i‡(!
	`°rcmp
(
¨g
, "--dense")) {

904 
ªvs
->
dí£
 = 1;

907 i‡(!
	`°rcmp
(
¨g
, "--sparse")) {

908 
ªvs
->
dí£
 = 0;

911 i‡(!
	`°rcmp
(
¨g
, "--remove-empty")) {

912 
ªvs
->
ªmove_em±y_åìs
 = 1;

915 i‡(!
	`°rcmp
(
¨g
, "--no-merges")) {

916 
ªvs
->
no_mîges
 = 1;

919 i‡(!
	`°rcmp
(
¨g
, "--boundary")) {

920 
ªvs
->
bound¨y
 = 1;

923 i‡(!
	`°rcmp
(
¨g
, "--left-right")) {

924 
ªvs
->
À·_right
 = 1;

927 i‡(!
	`°rcmp
(
¨g
, "--objects")) {

928 
ªvs
->
èg_obje˘s
 = 1;

929 
ªvs
->
åì_obje˘s
 = 1;

930 
ªvs
->
blob_obje˘s
 = 1;

933 i‡(!
	`°rcmp
(
¨g
, "--objects-edge")) {

934 
ªvs
->
èg_obje˘s
 = 1;

935 
ªvs
->
åì_obje˘s
 = 1;

936 
ªvs
->
blob_obje˘s
 = 1;

937 
ªvs
->
edge_höt
 = 1;

940 i‡(!
	`°rcmp
(
¨g
, "--unpacked")) {

941 
ªvs
->
u≈acked
 = 1;

942 
	`‰ì
(
ªvs
->
ign‹e_∑cked
);

943 
ªvs
->
ign‹e_∑cked
 = 
NULL
;

944 
ªvs
->
num_ign‹e_∑cked
 = 0;

947 i‡(!
	`°∫cmp
(
¨g
, "--unpacked=", 11)) {

948 
ªvs
->
u≈acked
 = 1;

949 
	`add_ign‹e_∑cked
(
ªvs
, 
¨g
+11);

952 i‡(!
	`°rcmp
(
¨g
, "-r")) {

953 
ªvs
->
diff
 = 1;

954 
ªvs
->
diff›t
.
ªcursive
 = 1;

957 i‡(!
	`°rcmp
(
¨g
, "-t")) {

958 
ªvs
->
diff
 = 1;

959 
ªvs
->
diff›t
.
ªcursive
 = 1;

960 
ªvs
->
diff›t
.
åì_ö_ªcursive
 = 1;

963 i‡(!
	`°rcmp
(
¨g
, "-m")) {

964 
ªvs
->
ign‹e_mîges
 = 0;

967 i‡(!
	`°rcmp
(
¨g
, "-c")) {

968 
ªvs
->
diff
 = 1;

969 
ªvs
->
dí£_comböed_mîges
 = 0;

970 
ªvs
->
comböe_mîges
 = 1;

973 i‡(!
	`°rcmp
(
¨g
, "--cc")) {

974 
ªvs
->
diff
 = 1;

975 
ªvs
->
dí£_comböed_mîges
 = 1;

976 
ªvs
->
comböe_mîges
 = 1;

979 i‡(!
	`°rcmp
(
¨g
, "-v")) {

980 
ªvs
->
vîbo£_hódî
 = 1;

983 i‡(!
	`°∫cmp
(
¨g
, "--pretty", 8)) {

984 
ªvs
->
vîbo£_hódî
 = 1;

985 
ªvs
->
commô_f‹m©
 = 
	`gë_commô_f‹m©
(
¨g
+8);

988 i‡(!
	`°rcmp
(
¨g
, "--root")) {

989 
ªvs
->
show_roŸ_diff
 = 1;

992 i‡(!
	`°rcmp
(
¨g
, "--no-commit-id")) {

993 
ªvs
->
no_commô_id
 = 1;

996 i‡(!
	`°rcmp
(
¨g
, "--always")) {

997 
ªvs
->
Æways_show_hódî
 = 1;

1000 i‡(!
	`°rcmp
(
¨g
, "--no-abbrev")) {

1001 
ªvs
->
abbªv
 = 0;

1004 i‡(!
	`°rcmp
(
¨g
, "--abbrev")) {

1005 
ªvs
->
abbªv
 = 
DEFAULT_ABBREV
;

1008 i‡(!
	`°∫cmp
(
¨g
, "--abbrev=", 9)) {

1009 
ªvs
->
abbªv
 = 
	`°πoul
(
¨g
 + 9, 
NULL
, 10);

1010 i‡(
ªvs
->
abbªv
 < 
MINIMUM_ABBREV
)

1011 
ªvs
->
abbªv
 = 
MINIMUM_ABBREV
;

1012 i‡(
ªvs
->
abbªv
 > 40)

1013 
ªvs
->
abbªv
 = 40;

1016 i‡(!
	`°rcmp
(
¨g
, "--abbrev-commit")) {

1017 
ªvs
->
abbªv_commô
 = 1;

1020 i‡(!
	`°rcmp
(
¨g
, "--full-diff")) {

1021 
ªvs
->
diff
 = 1;

1022 
ªvs
->
fuŒ_diff
 = 1;

1025 i‡(!
	`°rcmp
(
¨g
, "--full-history")) {

1026 
ªvs
->
sim∂ify_hi°‹y
 = 0;

1029 i‡(!
	`°rcmp
(
¨g
, "--relative-date")) {

1030 
ªvs
->
ªœtive_d©e
 = 1;

1037 i‡(!
	`°∫cmp
(
¨g
, "--author=", 9)) {

1038 
	`add_hódî_gªp
(
ªvs
, "auth‹", 
¨g
+9);

1041 i‡(!
	`°∫cmp
(
¨g
, "--committer=", 12)) {

1042 
	`add_hódî_gªp
(
ªvs
, "commôãr", 
¨g
+12);

1045 i‡(!
	`°∫cmp
(
¨g
, "--grep=", 7)) {

1046 
	`add_mesßge_gªp
(
ªvs
, 
¨g
+7);

1049 i‡(!
	`°rcmp
(
¨g
, "--all-match")) {

1050 
Æl_m©ch
 = 1;

1053 i‡(!
	`°∫cmp
(
¨g
, "--encoding=", 11)) {

1054 
¨g
 += 11;

1055 i‡(
	`°rcmp
(
¨g
, "none"))

1056 
gô_log_ouçut_ícodög
 = 
	`°rdup
(
¨g
);

1058 
gô_log_ouçut_ícodög
 = "";

1062 
›ts
 = 
	`diff_›t_∑r£
(&
ªvs
->
diff›t
, 
¨gv
+
i
, 
¨gc
-i);

1063 i‡(
›ts
 > 0) {

1064 
ªvs
->
diff
 = 1;

1065 
i
 +
›ts
 - 1;

1068 *
uƒecognized
++ = 
¨g
;

1069 
À·
++;

1073 i‡(
	`h™dÀ_ªvisi⁄_¨g
(
¨g
, 
ªvs
, 
Êags
, 
£í_dashdash
)) {

1074 
j
;

1075 i‡(
£í_dashdash
 || *
¨g
 == '^')

1076 
	`dõ
("badÑevisi⁄ '%s'", 
¨g
);

1084 
j
 = 
i
; j < 
¨gc
; j++)

1085 
	`vîify_fûíame
(
ªvs
->
¥efix
, 
¨gv
[
j
]);

1087 
ªvs
->
¥u√_d©a
 = 
	`gë_∑th•ec
‘evs->
¥efix
,

1088 
¨gv
 + 
i
);

1093 i‡(
show_mîge
)

1094 
	`¥ï¨e_show_mîge
(
ªvs
);

1095 i‡(
def
 && !
ªvs
->
≥ndög
.
ƒ
) {

1096 
sha1
[20];

1097 
obje˘
 *object;

1098 i‡(
	`gë_sha1
(
def
, 
sha1
))

1099 
	`dõ
("bad deÁu…Ñevisi⁄ '%s'", 
def
);

1100 
obje˘
 = 
	`gë_ª„ªn˚
(
ªvs
, 
def
, 
sha1
, 0);

1101 
	`add_≥ndög_obje˘
(
ªvs
, 
obje˘
, 
def
);

1104 i‡(
ªvs
->
t›o_‹dî
)

1105 
ªvs
->
limôed
 = 1;

1107 i‡(
ªvs
->
¥u√_d©a
) {

1108 
	`diff_åì_£tup_∑ths
(
ªvs
->
¥u√_d©a
, &ªvs->
¥unög
);

1109 
ªvs
->
¥u√_‚
 = 
åy_to_sim∂ify_commô
;

1110 i‡(!
ªvs
->
fuŒ_diff
)

1111 
	`diff_åì_£tup_∑ths
(
ªvs
->
¥u√_d©a
, &ªvs->
diff›t
);

1113 i‡(
ªvs
->
comböe_mîges
) {

1114 
ªvs
->
ign‹e_mîges
 = 0;

1115 i‡(
ªvs
->
dí£_comböed_mîges
 && !ªvs->
diff›t
.
ouçut_f‹m©
)

1116 
ªvs
->
diff›t
.
ouçut_f‹m©
 = 
DIFF_FORMAT_PATCH
;

1118 
ªvs
->
diff›t
.
abbªv
 =Ñevs->abbrev;

1119 i‡(
	`diff_£tup_d⁄e
(&
ªvs
->
diff›t
) < 0)

1120 
	`dõ
("diff_setup_done failed");

1122 i‡(
ªvs
->
gªp_fûãr
) {

1123 
ªvs
->
gªp_fûãr
->
Æl_m©ch
 =áll_match;

1124 
	`compûe_gªp_∑âîns
(
ªvs
->
gªp_fûãr
);

1127  
À·
;

1128 
	}
}

1130 
	$¥ï¨e_ªvisi⁄_wÆk
(
ªv_öfo
 *
ªvs
)

1132 
ƒ
 = 
ªvs
->
≥ndög
.nr;

1133 
obje˘_¨øy_íåy
 *
e
, *
li°
;

1135 
e
 = 
li°
 = 
ªvs
->
≥ndög
.
obje˘s
;

1136 
ªvs
->
≥ndög
.
ƒ
 = 0;

1137 
ªvs
->
≥ndög
.
Æloc
 = 0;

1138 
ªvs
->
≥ndög
.
obje˘s
 = 
NULL
;

1139 --
ƒ
 >= 0) {

1140 
commô
 *commô = 
	`h™dÀ_commô
(
ªvs
, 
e
->
ôem
,É->
«me
);

1141 i‡(
commô
) {

1142 i‡(!(
commô
->
obje˘
.
Êags
 & 
SEEN
)) {

1143 
commô
->
obje˘
.
Êags
 |
SEEN
;

1144 
	`ö£π_by_d©e
(
commô
, &
ªvs
->
commôs
);

1147 
e
++;

1149 
	`‰ì
(
li°
);

1151 i‡(
ªvs
->
no_wÆk
)

1153 i‡(
ªvs
->
limôed
)

1154 
	`limô_li°
(
ªvs
);

1155 i‡(
ªvs
->
t›o_‹dî
)

1156 
	`s‹t_ö_t›ﬁogiˇl_‹dî_‚
(&
ªvs
->
commôs
,Ñevs->
lifo
,

1157 
ªvs
->
t›o_£âî
,

1158 
ªvs
->
t›o_gëãr
);

1159 
	}
}

1161 
	$ªwrôe_⁄e
(
ªv_öfo
 *
ªvs
, 
commô
 **
µ
)

1164 
commô
 *
p
 = *
µ
;

1165 i‡(!
ªvs
->
limôed
)

1166 
	`add_∑ª¡s_to_li°
(
ªvs
, 
p
, &ªvs->
commôs
);

1167 i‡(
p
->
∑ª¡s
 &&Ö->∑ª¡s->
√xt
)

1169 i‡(
p
->
obje˘
.
Êags
 & (
TREECHANGE
 | 
UNINTERESTING
))

1171 i‡(!
p
->
∑ª¡s
)

1173 *
µ
 = 
p
->
∑ª¡s
->
ôem
;

1175 
	}
}

1177 
	$ªwrôe_∑ª¡s
(
ªv_öfo
 *
ªvs
, 
commô
 *commit)

1179 
commô_li°
 **
µ
 = &
commô
->
∑ª¡s
;

1180 *
µ
) {

1181 
commô_li°
 *
∑ª¡
 = *
µ
;

1182 i‡(
	`ªwrôe_⁄e
(
ªvs
, &
∑ª¡
->
ôem
) < 0) {

1183 *
µ
 = 
∑ª¡
->
√xt
;

1186 
µ
 = &
∑ª¡
->
√xt
;

1188 
	}
}

1190 
	$m¨k_bound¨y_to_show
(
commô
 *commit)

1192 
commô_li°
 *
p
 = 
commô
->
∑ª¡s
;

1193 
p
) {

1194 
commô
 = 
p
->
ôem
;

1195 
p
 =Ö->
√xt
;

1196 i‡(
commô
->
obje˘
.
Êags
 & 
BOUNDARY
)

1197 
commô
->
obje˘
.
Êags
 |
BOUNDARY_SHOW
;

1199 
	}
}

1201 
	$commô_m©ch
(
commô
 *commô, 
ªv_öfo
 *
›t
)

1203 i‡(!
›t
->
gªp_fûãr
)

1205  
	`gªp_buf„r
(
›t
->
gªp_fûãr
,

1206 
NULL
,

1207 
commô
->
buf„r
, 
	`°æí
(commit->buffer));

1208 
	}
}

1210 
commô
 *
	$gë_ªvisi⁄_1
(
ªv_öfo
 *
ªvs
)

1212 i‡(!
ªvs
->
commôs
)

1213  
NULL
;

1216 
commô_li°
 *
íåy
 = 
ªvs
->
commôs
;

1217 
commô
 *commô = 
íåy
->
ôem
;

1219 
ªvs
->
commôs
 = 
íåy
->
√xt
;

1220 
	`‰ì
(
íåy
);

1222 i‡(
ªvs
->
ªÊog_öfo
)

1223 
	`Áke_ªÊog_∑ª¡
(
ªvs
->
ªÊog_öfo
, 
commô
);

1230 i‡(!
ªvs
->
limôed
) {

1231 i‡(
ªvs
->
max_age
 != -1 &&

1232 (
commô
->
d©e
 < 
ªvs
->
max_age
))

1234 
	`add_∑ª¡s_to_li°
(
ªvs
, 
commô
, &ªvs->
commôs
);

1236 i‡(
commô
->
obje˘
.
Êags
 & 
SHOWN
)

1239 i‡(
ªvs
->
u≈acked
 && 
	`has_sha1_∑ck
(
commô
->
obje˘
.
sha1
,

1240 
ªvs
->
ign‹e_∑cked
))

1251 i‡(
commô
->
obje˘
.
Êags
 & 
BOUNDARY_SHOW
) {

1252 
commô
->
obje˘
.
Êags
 |
SHOWN
;

1253  
commô
;

1255 i‡(
commô
->
obje˘
.
Êags
 & 
UNINTERESTING
)

1257 i‡(
ªvs
->
mö_age
 !-1 && (
commô
->
d©e
 >Ñevs->min_age))

1259 i‡(
ªvs
->
no_mîges
 &&

1260 
commô
->
∑ª¡s
 && commô->∑ª¡s->
√xt
)

1262 i‡(!
	`commô_m©ch
(
commô
, 
ªvs
))

1264 i‡(
ªvs
->
¥u√_‚
 &&Ñevs->
dí£
) {

1266 i‡(!(
commô
->
obje˘
.
Êags
 & 
TREECHANGE
)) {

1268 i‡(!
ªvs
->
∑ª¡s
)

1271 i‡(!
commô
->
∑ª¡s
 || !commô->∑ª¡s->
√xt
)

1274 i‡(
ªvs
->
∑ª¡s
)

1275 
	`ªwrôe_∑ª¡s
(
ªvs
, 
commô
);

1277 i‡(
ªvs
->
bound¨y
)

1278 
	`m¨k_bound¨y_to_show
(
commô
);

1279 
commô
->
obje˘
.
Êags
 |
SHOWN
;

1280  
commô
;

1281 } 
ªvs
->
commôs
);

1282  
NULL
;

1283 
	}
}

1285 
commô
 *
	$gë_ªvisi⁄
(
ªv_öfo
 *
ªvs
)

1287 
commô
 *
c
 = 
NULL
;

1289 i‡(0 < 
ªvs
->
skù_cou¡
) {

1290 (
c
 = 
	`gë_ªvisi⁄_1
(
ªvs
)Ë!
NULL
) {

1291 i‡(
ªvs
->
skù_cou¡
-- <= 0)

1297 
ªvs
->
max_cou¡
) {

1301  
NULL
;

1303 
ªvs
->
max_cou¡
--;

1305 i‡(
c
)

1306  
c
;

1307  
	`gë_ªvisi⁄_1
(
ªvs
);

1308 
	}
}

	@revision.h

1 #i‚de‡
REVISION_H


2 
	#REVISION_H


	)

4 
	#SEEN
 (1u<<0)

	)

5 
	#UNINTERESTING
 (1u<<1)

	)

6 
	#TREECHANGE
 (1u<<2)

	)

7 
	#SHOWN
 (1u<<3)

	)

8 
	#TMP_MARK
 (1u<<4Ë

	)

9 
	#BOUNDARY
 (1u<<5)

	)

10 
	#BOUNDARY_SHOW
 (1u<<6)

	)

11 
	#ADDED
 (1u<<7Ë

	)

12 
	#SYMMETRIC_LEFT
 (1u<<8)

	)

14 
	gªv_öfo
;

15 
	glog_öfo
;

17 (
	t¥u√_‚_t
)(
	tªv_öfo
 *
	tªvs
, 
	tcommô
 *commit);

19 
	sªv_öfo
 {

21 
commô_li°
 *
commôs
;

22 
obje˘_¨øy
 
≥ndög
;

25 c⁄° *
¥efix
;

26 *
¥u√_d©a
;

27 
¥u√_‚_t
 *
¥u√_‚
;

30 
dí£
:1,

31 
no_mîges
:1,

32 
no_wÆk
:1,

33 
ªmove_em±y_åìs
:1,

34 
sim∂ify_hi°‹y
:1,

35 
lifo
:1,

36 
t›o_‹dî
:1,

37 
èg_obje˘s
:1,

38 
åì_obje˘s
:1,

39 
blob_obje˘s
:1,

40 
edge_höt
:1,

41 
limôed
:1,

42 
u≈acked
:1,

43 
bound¨y
:1,

44 
À·_right
:1,

45 
∑ª¡s
:1;

48 
diff
:1,

49 
fuŒ_diff
:1,

50 
show_roŸ_diff
:1,

51 
no_commô_id
:1,

52 
vîbo£_hódî
:1,

53 
ign‹e_mîges
:1,

54 
comböe_mîges
:1,

55 
dí£_comböed_mîges
:1,

56 
Æways_show_hódî
:1;

59 
shown_⁄e
:1,

60 
abbªv_commô
:1,

61 
ªœtive_d©e
:1;

63 c⁄° **
ign‹e_∑cked
;

64 
num_ign‹e_∑cked
;

66 
abbªv
;

67 
cmô_fmt
 
commô_f‹m©
;

68 
log_öfo
 *
logöfo
;

69 
ƒ
, 
tŸÆ
;

70 c⁄° *
mime_bound¨y
;

71 c⁄° *
mesßge_id
;

72 c⁄° *
ªf_mesßge_id
;

73 c⁄° *
add_signoff
;

74 c⁄° *
exåa_hódîs
;

75 c⁄° *
log_ªícode
;

78 
gªp_›t
 *
gªp_fûãr
;

81 
skù_cou¡
;

82 
max_cou¡
;

83 
max_age
;

84 
mö_age
;

87 
diff_›ti⁄s
 
diff›t
;

88 
diff_›ti⁄s
 
¥unög
;

90 
t›o_s‹t_£t_‚_t
 
t›o_£âî
;

91 
t›o_s‹t_gë_‚_t
 
t›o_gëãr
;

93 
ªÊog_wÆk_öfo
 *
ªÊog_öfo
;

96 
	#REV_TREE_SAME
 0

	)

97 
	#REV_TREE_NEW
 1

	)

98 
	#REV_TREE_DIFFERENT
 2

	)

101 
	`ªv_ßme_åì_as_em±y
(
ªv_öfo
 *, 
åì
 *
t1
);

102 
	`ªv_com∑ª_åì
(
ªv_öfo
 *, 
åì
 *
t1
, åì *
t2
);

104 
	`öô_ªvisi⁄s
(
ªv_öfo
 *
ªvs
, c⁄° *
¥efix
);

105 
	`£tup_ªvisi⁄s
(
¨gc
, c⁄° **
¨gv
, 
ªv_öfo
 *
ªvs
, c⁄° *
def
);

106 
	`h™dÀ_ªvisi⁄_¨g
(c⁄° *
¨g
, 
ªv_öfo
 *
ªvs
,
Êags
,
ˇ¡_be_fûíame
);

108 
	`¥ï¨e_ªvisi⁄_wÆk
(
ªv_öfo
 *
ªvs
);

109 
commô
 *
	`gë_ªvisi⁄
(
ªv_öfo
 *
ªvs
);

111 
	`m¨k_∑ª¡s_unöãª°ög
(
commô
 *commit);

112 
	`m¨k_åì_unöãª°ög
(
åì
 *tree);

114 
	s«me_∑th
 {

115 
«me_∑th
 *
up
;

116 
ñem_Àn
;

117 c⁄° *
ñem
;

120 
	`add_obje˘
(
obje˘
 *
obj
,

121 
obje˘_¨øy
 *
p
,

122 
«me_∑th
 *
∑th
,

123 c⁄° *
«me
);

125 
	`add_≥ndög_obje˘
(
ªv_öfo
 *
ªvs
, 
obje˘
 *
obj
, c⁄° *
«me
);

	@rsh.c

1 
	~"ˇche.h
"

2 
	~"rsh.h
"

3 
	~"quŸe.h
"

5 
	#COMMAND_SIZE
 4096

	)

7 
	$£tup_c⁄√˘i⁄
(*
fd_ö
, *
fd_out
, c⁄° *
ªmŸe_¥og
,

8 *
uæ
, 
rmt_¨gc
, **
rmt_¨gv
)

10 *
ho°
;

11 *
∑th
;

12 
sv
[2];

13 
comm™d
[
COMMAND_SIZE
];

14 *
po¢
;

15 
sizí
;

16 
of
;

17 
i
;

18 
pid_t
 
pid
;

20 i‡(!
	`°rcmp
(
uæ
, "-")) {

21 *
fd_ö
 = 0;

22 *
fd_out
 = 1;

26 
ho°
 = 
	`°r°r
(
uæ
, "//");

27 i‡(
ho°
) {

28 
ho°
 += 2;

29 
∑th
 = 
	`°rchr
(
ho°
, '/');

31 
ho°
 = 
uæ
;

32 
∑th
 = 
	`°rchr
(
ho°
, ':');

33 i‡(
∑th
)

34 *(
∑th
++) = '\0';

36 i‡(!
∑th
) {

37  
	`îr‹
("Bad URL: %s", 
uæ
);

40 
sizí
 = 
COMMAND_SIZE
;

41 
po¢
 = 
comm™d
;

42 
of
 = 0;

43 
of
 |
	`add_to_°rög
(&
po¢
, &
sizí
, "env ", 0);

44 
of
 |
	`add_to_°rög
(&
po¢
, &
sizí
, 
GIT_DIR_ENVIRONMENT
 "=", 0);

45 
of
 |
	`add_to_°rög
(&
po¢
, &
sizí
, 
∑th
, 1);

46 
of
 |
	`add_to_°rög
(&
po¢
, &
sizí
, " ", 0);

47 
of
 |
	`add_to_°rög
(&
po¢
, &
sizí
, 
ªmŸe_¥og
, 1);

49  
i
 = 0 ; i < 
rmt_¨gc
 ; i++ ) {

50 
of
 |
	`add_to_°rög
(&
po¢
, &
sizí
, " ", 0);

51 
of
 |
	`add_to_°rög
(&
po¢
, &
sizí
, 
rmt_¨gv
[
i
], 1);

54 
of
 |
	`add_to_°rög
(&
po¢
, &
sizí
, " -", 0);

56 i‡–
of
 )

57  
	`îr‹
("CommandÜineÅooÜong");

59 i‡(
	`sockë∑ú
(
AF_UNIX
, 
SOCK_STREAM
, 0, 
sv
))

60  
	`îr‹
("Couldn't create socket");

62 
pid
 = 
	`f‹k
();

63 i‡(
pid
 < 0)

64  
	`îr‹
("Couldn't fork");

65 i‡(!
pid
) {

66 c⁄° *
ssh
, *
ssh_ba£«me
;

67 
ssh
 = 
	`gëív
("GIT_SSH");

68 i‡(!
ssh
) ssh = "ssh";

69 
ssh_ba£«me
 = 
	`°ºchr
(
ssh
, '/');

70 i‡(!
ssh_ba£«me
)

71 
ssh_ba£«me
 = 
ssh
;

73 
ssh_ba£«me
++;

74 
	`˛o£
(
sv
[1]);

75 
	`dup2
(
sv
[0], 0);

76 
	`dup2
(
sv
[0], 1);

77 
	`exe˛p
(
ssh
, 
ssh_ba£«me
, 
ho°
, 
comm™d
, 
NULL
);

79 
	`˛o£
(
sv
[0]);

80 *
fd_ö
 = 
sv
[1];

81 *
fd_out
 = 
sv
[1];

83 
	}
}

	@rsh.h

1 #i‚de‡
RSH_H


2 
	#RSH_H


	)

4 
£tup_c⁄√˘i⁄
(*
fd_ö
, *
fd_out
, c⁄° *
ªmŸe_¥og
,

5 *
uæ
, 
rmt_¨gc
, **
rmt_¨gv
);

	@run-command.c

1 
	~"ˇche.h
"

2 
	~"run-comm™d.h
"

3 
	~"exec_cmd.h
"

5 
	$run_comm™d_v_›t
(c⁄° **
¨gv
, 
Êags
)

7 
pid_t
 
pid
 = 
	`f‹k
();

9 i‡(
pid
 < 0)

10  -
ERR_RUN_COMMAND_FORK
;

11 i‡(!
pid
) {

12 i‡(
Êags
 & 
RUN_COMMAND_NO_STDIN
) {

13 
fd
 = 
	`›í
("/dev/nuŒ", 
O_RDWR
);

14 
	`dup2
(
fd
, 0);

15 
	`˛o£
(
fd
);

17 i‡(
Êags
 & 
RUN_COMMAND_STDOUT_TO_STDERR
)

18 
	`dup2
(2, 1);

19 i‡(
Êags
 & 
RUN_GIT_CMD
) {

20 
	`execv_gô_cmd
(
¨gv
);

22 
	`execvp
(
¨gv
[0], (*const*)árgv);

24 
	`dõ
("exe¯%†Áûed.", 
¨gv
[0]);

27 
°©us
, 
code
;

28 
pid_t
 
waôög
 = 
	`waôpid
(
pid
, &
°©us
, 0);

30 i‡(
waôög
 < 0) {

31 i‡(
î∫o
 =
EINTR
)

33 
	`îr‹
("waôpid faûed (%s)", 
	`°ªº‹
(
î∫o
));

34  -
ERR_RUN_COMMAND_WAITPID
;

36 i‡(
waôög
 !
pid
)

37  -
ERR_RUN_COMMAND_WAITPID_WRONG_PID
;

38 i‡(
	`WIFSIGNALED
(
°©us
))

39  -
ERR_RUN_COMMAND_WAITPID_SIGNAL
;

41 i‡(!
	`WIFEXITED
(
°©us
))

42  -
ERR_RUN_COMMAND_WAITPID_NOEXIT
;

43 
code
 = 
	`WEXITSTATUS
(
°©us
);

44 i‡(
code
)

45  -
code
;

48 
	}
}

50 
	$run_comm™d_v
(c⁄° **
¨gv
)

52  
	`run_comm™d_v_›t
(
¨gv
, 0);

53 
	}
}

55 
	$run_comm™d_va_›t
(
›t
, c⁄° *
cmd
, 
va_li°
 
∑øm
)

57 
¨gc
;

58 c⁄° *
¨gv
[
MAX_RUN_COMMAND_ARGS
];

59 c⁄° *
¨g
;

61 
¨gv
[0] = (*Ë
cmd
;

62 
¨gc
 = 1;

63 
¨gc
 < 
MAX_RUN_COMMAND_ARGS
) {

64 
¨g
 = 
¨gv
[
¨gc
++] = 
	`va_¨g
(
∑øm
, *);

65 i‡(!
¨g
)

68 i‡(
MAX_RUN_COMMAND_ARGS
 <
¨gc
)

69  
	`îr‹
("toÿm™yárg†tÿru¿%s", 
cmd
);

70  
	`run_comm™d_v_›t
(
¨gv
, 
›t
);

71 
	}
}

73 
	$run_comm™d_›t
(
›t
, c⁄° *
cmd
, ...)

75 
va_li°
 
∑øms
;

76 
r
;

78 
	`va_°¨t
(
∑øms
, 
cmd
);

79 
r
 = 
	`run_comm™d_va_›t
(
›t
, 
cmd
, 
∑øms
);

80 
	`va_íd
(
∑øms
);

81  
r
;

82 
	}
}

84 
	$run_comm™d
(c⁄° *
cmd
, ...)

86 
va_li°
 
∑øms
;

87 
r
;

89 
	`va_°¨t
(
∑øms
, 
cmd
);

90 
r
 = 
	`run_comm™d_va_›t
(0, 
cmd
, 
∑øms
);

91 
	`va_íd
(
∑øms
);

92  
r
;

93 
	}
}

	@run-command.h

1 #i‚de‡
RUN_COMMAND_H


2 
	#RUN_COMMAND_H


	)

4 
	#MAX_RUN_COMMAND_ARGS
 256

	)

6 
	mERR_RUN_COMMAND_FORK
 = 10000,

7 
	mERR_RUN_COMMAND_EXEC
,

8 
	mERR_RUN_COMMAND_WAITPID
,

9 
	mERR_RUN_COMMAND_WAITPID_WRONG_PID
,

10 
	mERR_RUN_COMMAND_WAITPID_SIGNAL
,

11 
	mERR_RUN_COMMAND_WAITPID_NOEXIT
,

14 
	#RUN_COMMAND_NO_STDIN
 1

	)

15 
	#RUN_GIT_CMD
 2

	)

16 
	#RUN_COMMAND_STDOUT_TO_STDERR
 4

	)

17 
run_comm™d_v_›t
(c⁄° **
¨gv
, 
›t
);

18 
run_comm™d_v
(c⁄° **
¨gv
);

19 
run_comm™d_›t
(
›t
, c⁄° *
cmd
, ...);

20 
run_comm™d
(c⁄° *
cmd
, ...);

	@send-pack.c

1 
	~"ˇche.h
"

2 
	~"commô.h
"

3 
	~"èg.h
"

4 
	~"ªfs.h
"

5 
	~"pkt-löe.h
"

6 
	~"exec_cmd.h
"

8 c⁄° 
	g£nd_∑ck_ußge
[] =

11 c⁄° *
	gª˚ivïack
 = "git-receive-pack";

12 
	gvîbo£
;

13 
	g£nd_Æl
;

14 
	gf‹˚_upd©e
;

15 
	gu£_thö_∑ck
;

20 
	$∑ck_obje˘s
(
fd
, 
ªf
 *
ªfs
)

22 
pùe_fd
[2];

23 
pid_t
 
pid
;

25 i‡(
	`pùe
(
pùe_fd
) < 0)

26  
	`îr‹
("send-pack:Öipe failed");

27 
pid
 = 
	`f‹k
();

28 i‡(
pid
 < 0)

29  
	`îr‹
("send-pack: unableÅo fork git-pack-objects");

30 i‡(!
pid
) {

36 c⁄° *
¨gs
[] = {

41 
NULL
,

42 
NULL
,

44 i‡(
u£_thö_∑ck
)

45 
¨gs
[4] = "--thin";

46 
	`dup2
(
pùe_fd
[0], 0);

47 
	`dup2
(
fd
, 1);

48 
	`˛o£
(
pùe_fd
[0]);

49 
	`˛o£
(
pùe_fd
[1]);

50 
	`˛o£
(
fd
);

51 
	`execv_gô_cmd
(
¨gs
);

52 
	`dõ
("gô-∑ck-obje˘†exe¯Áûed (%s)", 
	`°ªº‹
(
î∫o
));

59 
	`˛o£
(
pùe_fd
[0]);

60 
	`˛o£
(
fd
);

62 
ªfs
) {

63 
buf
[42];

65 i‡(!
	`is_nuŒ_sha1
(
ªfs
->
ﬁd_sha1
) &&

66 
	`has_sha1_fûe
(
ªfs
->
ﬁd_sha1
)) {

67 
	`mem˝y
(
buf
 + 1, 
	`sha1_to_hex
(
ªfs
->
ﬁd_sha1
), 40);

68 
buf
[0] = '^';

69 
buf
[41] = '\n';

70 i‡(!
	`wrôe_‹_whöe
(
pùe_fd
[1], 
buf
, 42,

74 i‡(!
	`is_nuŒ_sha1
(
ªfs
->
√w_sha1
)) {

75 
	`mem˝y
(
buf
, 
	`sha1_to_hex
(
ªfs
->
√w_sha1
), 40);

76 
buf
[40] = '\n';

77 i‡(!
	`wrôe_‹_whöe
(
pùe_fd
[1], 
buf
, 41,

81 
ªfs
 =Ñefs->
√xt
;

83 
	`˛o£
(
pùe_fd
[1]);

86 
°©us
, 
code
;

87 
pid_t
 
waôög
 = 
	`waôpid
(
pid
, &
°©us
, 0);

89 i‡(
waôög
 < 0) {

90 i‡(
î∫o
 =
EINTR
)

92  
	`îr‹
("waôpid faûed (%s)", 
	`°ªº‹
(
î∫o
));

94 i‡((
waôög
 !
pid
Ë|| 
	`WIFSIGNALED
(
°©us
) ||

95 !
	`WIFEXITED
(
°©us
))

96  
	`îr‹
("pack-objects died with strangeÉrror");

97 
code
 = 
	`WEXITSTATUS
(
°©us
);

98 i‡(
code
)

99  -
code
;

102 
	}
}

104 
	$unm¨k_™d_‰ì
(
commô_li°
 *
li°
, 
m¨k
)

106 
li°
) {

107 
commô_li°
 *
ãmp
 = 
li°
;

108 
ãmp
->
ôem
->
obje˘
.
Êags
 &~
m¨k
;

109 
li°
 = 
ãmp
->
√xt
;

110 
	`‰ì
(
ãmp
);

112 
	}
}

114 
	$ªf_√wî
(c⁄° *
√w_sha1
,

115 c⁄° *
ﬁd_sha1
)

117 
obje˘
 *
o
;

118 
commô
 *
ﬁd
, *
√w
;

119 
commô_li°
 *
li°
, *
u£d
;

120 
found
 = 0;

125 
o
 = 
	`dîef_èg
(
	`∑r£_obje˘
(
ﬁd_sha1
), 
NULL
, 0);

126 i‡(!
o
 || o->
ty≥
 !
OBJ_COMMIT
)

128 
ﬁd
 = (
commô
 *Ë
o
;

130 
o
 = 
	`dîef_èg
(
	`∑r£_obje˘
(
√w_sha1
), 
NULL
, 0);

131 i‡(!
o
 || o->
ty≥
 !
OBJ_COMMIT
)

133 
√w
 = (
commô
 *Ë
o
;

135 i‡(
	`∑r£_commô
(
√w
) < 0)

138 
u£d
 = 
li°
 = 
NULL
;

139 
	`commô_li°_ö£π
(
√w
, &
li°
);

140 
li°
) {

141 
√w
 = 
	`p›_mo°_ª˚¡_commô
(&
li°
, 1);

142 
	`commô_li°_ö£π
(
√w
, &
u£d
);

143 i‡(
√w
 =
ﬁd
) {

144 
found
 = 1;

148 
	`unm¨k_™d_‰ì
(
li°
, 1);

149 
	`unm¨k_™d_‰ì
(
u£d
, 1);

150  
found
;

151 
	}
}

153 
ªf
 *
	gloˇl_ªfs
, **
	gloˇl_èû
;

154 
ªf
 *
	gªmŸe_ªfs
, **
	gªmŸe_èû
;

156 
	$⁄e_loˇl_ªf
(c⁄° *
ª‚ame
, c⁄° *
sha1
, 
Êag
, *
cb_d©a
)

158 
ªf
 *ref;

159 
Àn
 = 
	`°æí
(
ª‚ame
) + 1;

160 
ªf
 = 
	`xˇŒoc
(1, (*ªfË+ 
Àn
);

161 
	`hash˝y
(
ªf
->
√w_sha1
, 
sha1
);

162 
	`mem˝y
(
ªf
->
«me
, 
ª‚ame
, 
Àn
);

163 *
loˇl_èû
 = 
ªf
;

164 
loˇl_èû
 = &
ªf
->
√xt
;

166 
	}
}

168 
	$gë_loˇl_hóds
()

170 
loˇl_èû
 = &
loˇl_ªfs
;

171 
	`f‹_óch_ªf
(
⁄e_loˇl_ªf
, 
NULL
);

172 
	}
}

174 
	$ª˚ive_°©us
(
ö
)

176 
löe
[1000];

177 
ªt
 = 0;

178 
Àn
 = 
	`∑ckë_ªad_löe
(
ö
, 
löe
, (line));

179 i‡(
Àn
 < 10 || 
	`memcmp
(
löe
, "unpack ", 7)) {

180 
	`Ârötf
(
°dîr
, "didÇotÑeceive status back\n");

183 i‡(
	`memcmp
(
löe
, "unpack ok\n", 10)) {

184 
	`Âuts
(
löe
, 
°dîr
);

185 
ªt
 = -1;

188 
Àn
 = 
	`∑ckë_ªad_löe
(
ö
, 
löe
, (line));

189 i‡(!
Àn
)

191 i‡(
Àn
 < 3 ||

192 (
	`memcmp
(
löe
, "ok", 2) && memcmp(line, "ng", 2))) {

193 
	`Ârötf
(
°dîr
, "¥ŸocﬁÉº‹: %s\n", 
löe
);

194 
ªt
 = -1;

197 i‡(!
	`memcmp
(
löe
, "ok", 2))

199 
	`Âuts
(
löe
, 
°dîr
);

200 
ªt
 = -1;

202  
ªt
;

203 
	}
}

205 
	$£nd_∑ck
(
ö
, 
out
, 
ƒ_ªf•ec
, **
ªf•ec
)

207 
ªf
 *ref;

208 
√w_ªfs
;

209 
ªt
 = 0;

210 
ask_f‹_°©us_ªp‹t
 = 0;

211 
Ælow_dñëög_ªfs
 = 0;

212 
ex≥˘_°©us_ªp‹t
 = 0;

215 
ªmŸe_èû
 = 
	`gë_ªmŸe_hóds
(
ö
, &
ªmŸe_ªfs
, 0, 
NULL
, 
REF_NORMAL
);

216 
	`gë_loˇl_hóds
();

219 i‡(
	`£rvî_suµ‹ts
("report-status"))

220 
ask_f‹_°©us_ªp‹t
 = 1;

221 i‡(
	`£rvî_suµ‹ts
("delete-refs"))

222 
Ælow_dñëög_ªfs
 = 1;

225 i‡(!
ªmŸe_èû
)

226 
ªmŸe_èû
 = &
ªmŸe_ªfs
;

227 i‡(
	`m©ch_ªfs
(
loˇl_ªfs
, 
ªmŸe_ªfs
, &
ªmŸe_èû
,

228 
ƒ_ªf•ec
, 
ªf•ec
, 
£nd_Æl
))

231 i‡(!
ªmŸe_ªfs
) {

232 
	`Ârötf
(
°dîr
, "NoÑefs in commonándÇone specified; doingÇothing.\n");

239 
√w_ªfs
 = 0;

240 
ªf
 = 
ªmŸe_ªfs
;Ñef;Ñe‡ªf->
√xt
) {

241 
ﬁd_hex
[60], *
√w_hex
;

242 
dñëe_ªf
;

244 i‡(!
ªf
->
≥î_ªf
)

247 
dñëe_ªf
 = 
	`is_nuŒ_sha1
(
ªf
->
≥î_ªf
->
√w_sha1
);

248 i‡(
dñëe_ªf
 && !
Ælow_dñëög_ªfs
) {

249 
	`îr‹
("remote doesÇot support deletingÑefs");

250 
ªt
 = -2;

253 i‡(!
dñëe_ªf
 &&

254 !
	`hashcmp
(
ªf
->
ﬁd_sha1
,Ñef->
≥î_ªf
->
√w_sha1
)) {

255 i‡(
vîbo£
)

256 
	`Ârötf
(
°dîr
, "'%s': up-to-d©e\n", 
ªf
->
«me
);

279 i‡(!
f‹˚_upd©e
 &&

280 !
dñëe_ªf
 &&

281 !
	`is_nuŒ_sha1
(
ªf
->
ﬁd_sha1
) &&

282 !
ªf
->
f‹˚
) {

283 i‡(!
	`has_sha1_fûe
(
ªf
->
ﬁd_sha1
) ||

284 !
	`ªf_√wî
(
ªf
->
≥î_ªf
->
√w_sha1
,

285 
ªf
->
ﬁd_sha1
)) {

293 
	`îr‹
("remote '%s' isÇotá strict "

297 
ªf
->
«me
,

298 
ªf
->
≥î_ªf
->
«me
);

299 
ªt
 = -2;

303 
	`hash˝y
(
ªf
->
√w_sha1
,Ñef->
≥î_ªf
->new_sha1);

304 i‡(!
dñëe_ªf
)

305 
√w_ªfs
++;

306 
	`°r˝y
(
ﬁd_hex
, 
	`sha1_to_hex
(
ªf
->
ﬁd_sha1
));

307 
√w_hex
 = 
	`sha1_to_hex
(
ªf
->
√w_sha1
);

309 i‡(
ask_f‹_°©us_ªp‹t
) {

310 
	`∑ckë_wrôe
(
out
, "%s %s %s%c%s",

311 
ﬁd_hex
, 
√w_hex
, 
ªf
->
«me
, 0,

313 
ask_f‹_°©us_ªp‹t
 = 0;

314 
ex≥˘_°©us_ªp‹t
 = 1;

317 
	`∑ckë_wrôe
(
out
, "%s %s %s",

318 
ﬁd_hex
, 
√w_hex
, 
ªf
->
«me
);

319 i‡(
dñëe_ªf
)

320 
	`Ârötf
(
°dîr
, "dñëög '%s'\n", 
ªf
->
«me
);

322 
	`Ârötf
(
°dîr
, "upd©ög '%s'", 
ªf
->
«me
);

323 i‡(
	`°rcmp
(
ªf
->
«me
,Ñef->
≥î_ªf
->name))

324 
	`Ârötf
(
°dîr
, " using '%s'",

325 
ªf
->
≥î_ªf
->
«me
);

326 
	`Ârötf
(
°dîr
, "\n from %s\nÅo %s\n",

327 
ﬁd_hex
, 
√w_hex
);

331 
	`∑ckë_Êush
(
out
);

332 i‡(
√w_ªfs
)

333 
ªt
 = 
	`∑ck_obje˘s
(
out
, 
ªmŸe_ªfs
);

334 
	`˛o£
(
out
);

336 i‡(
ex≥˘_°©us_ªp‹t
) {

337 i‡(
	`ª˚ive_°©us
(
ö
))

338 
ªt
 = -4;

341 i‡(!
√w_ªfs
 && 
ªt
 == 0)

342 
	`Ârötf
(
°dîr
, "Everything up-to-date\n");

343  
ªt
;

344 
	}
}

346 
	$vîify_ªmŸe_«mes
(
ƒ_hóds
, **
hóds
)

348 
i
;

350 
i
 = 0; i < 
ƒ_hóds
; i++) {

351 c⁄° *
ªmŸe
 = 
	`°rchr
(
hóds
[
i
], ':');

353 
ªmŸe
 =ÑemŸê? (ªmŸê+ 1Ë: 
hóds
[
i
];

354 
	`check_ªf_f‹m©
(
ªmŸe
)) {

361 
	`dõ
("remoteÖart ofÑefspec isÇotá validÇame in %s",

362 
hóds
[
i
]);

364 
	}
}

366 
	$maö
(
¨gc
, **
¨gv
)

368 
i
, 
ƒ_hóds
 = 0;

369 *
de°
 = 
NULL
;

370 **
hóds
 = 
NULL
;

371 
fd
[2], 
ªt
;

372 
pid_t
 
pid
;

374 
	`£tup_gô_dúe˘‹y
();

375 
	`gô_c⁄fig
(
gô_deÁu…_c⁄fig
);

377 
¨gv
++;

378 
i
 = 1; i < 
¨gc
; i++, 
¨gv
++) {

379 *
¨g
 = *
¨gv
;

381 i‡(*
¨g
 == '-') {

382 i‡(!
	`°∫cmp
(
¨g
, "--receive-pack=", 15)) {

383 
ª˚ivïack
 = 
¨g
 + 15;

386 i‡(!
	`°∫cmp
(
¨g
, "--exec=", 7)) {

387 
ª˚ivïack
 = 
¨g
 + 7;

390 i‡(!
	`°rcmp
(
¨g
, "--all")) {

391 
£nd_Æl
 = 1;

394 i‡(!
	`°rcmp
(
¨g
, "--force")) {

395 
f‹˚_upd©e
 = 1;

398 i‡(!
	`°rcmp
(
¨g
, "--verbose")) {

399 
vîbo£
 = 1;

402 i‡(!
	`°rcmp
(
¨g
, "--thin")) {

403 
u£_thö_∑ck
 = 1;

406 
	`ußge
(
£nd_∑ck_ußge
);

408 i‡(!
de°
) {

409 
de°
 = 
¨g
;

412 
hóds
 = 
¨gv
;

413 
ƒ_hóds
 = 
¨gc
 - 
i
;

416 i‡(!
de°
)

417 
	`ußge
(
£nd_∑ck_ußge
);

418 i‡(
hóds
 && 
£nd_Æl
)

419 
	`ußge
(
£nd_∑ck_ußge
);

420 
	`vîify_ªmŸe_«mes
(
ƒ_hóds
, 
hóds
);

422 
pid
 = 
	`gô_c⁄√˘
(
fd
, 
de°
, 
ª˚ivïack
);

423 i‡(
pid
 < 0)

425 
ªt
 = 
	`£nd_∑ck
(
fd
[0], fd[1], 
ƒ_hóds
, 
hóds
);

426 
	`˛o£
(
fd
[0]);

427 
	`˛o£
(
fd
[1]);

428 
ªt
 |
	`föish_c⁄√˘
(
pid
);

429  !!
ªt
;

430 
	}
}

	@server-info.c

1 
	~"ˇche.h
"

2 
	~"ªfs.h
"

3 
	~"obje˘.h
"

4 
	~"commô.h
"

5 
	~"èg.h
"

8 
FILE
 *
	göfo_ªf_Â
;

10 
	$add_öfo_ªf
(c⁄° *
∑th
, c⁄° *
sha1
, 
Êag
, *
cb_d©a
)

12 
obje˘
 *
o
 = 
	`∑r£_obje˘
(
sha1
);

13 i‡(!
o
)

16 
	`Ârötf
(
öfo_ªf_Â
, "%s %s\n", 
	`sha1_to_hex
(
sha1
), 
∑th
);

17 i‡(
o
->
ty≥
 =
OBJ_TAG
) {

18 
o
 = 
	`dîef_èg
(o, 
∑th
, 0);

19 i‡(
o
)

20 
	`Ârötf
(
öfo_ªf_Â
, "%s %s^{}\n",

21 
	`sha1_to_hex
(
o
->
sha1
), 
∑th
);

24 
	}
}

26 
	$upd©e_öfo_ªfs
(
f‹˚
)

28 *
∑th0
 = 
	`x°rdup
(
	`gô_∑th
("info/refs"));

29 
Àn
 = 
	`°æí
(
∑th0
);

30 *
∑th1
 = 
	`xmÆloc
(
Àn
 + 2);

32 
	`°r˝y
(
∑th1
, 
∑th0
);

33 
	`°r˝y
(
∑th1
 + 
Àn
, "+");

35 
	`ß„_¸óã_Àadög_dúe˘‹õs
(
∑th0
);

36 
öfo_ªf_Â
 = 
	`f›í
(
∑th1
, "w");

37 i‡(!
öfo_ªf_Â
)

38  
	`îr‹
("u«bÀÅÿupd©ê%s", 
∑th0
);

39 
	`f‹_óch_ªf
(
add_öfo_ªf
, 
NULL
);

40 
	`f˛o£
(
öfo_ªf_Â
);

41 
	`ª«me
(
∑th1
, 
∑th0
);

42 
	`‰ì
(
∑th0
);

43 
	`‰ì
(
∑th1
);

45 
	}
}

48 
	s∑ck_öfo
 {

49 
∑cked_gô
 *
	mp
;

50 
	mﬁd_num
;

51 
	m√w_num
;

52 
	mƒ_Æloc
;

53 
	mƒ_hóds
;

54 (*
	mhód
)[20];

55 } **
	göfo
;

56 
	gnum_∑ck
;

57 c⁄° *
	gobjdú
;

58 
	gobjdúÀn
;

60 
∑ck_öfo
 *
	$föd_∑ck_by_«me
(c⁄° *
«me
)

62 
i
;

63 
i
 = 0; i < 
num_∑ck
; i++) {

64 
∑cked_gô
 *
p
 = 
öfo
[
i
]->p;

66 i‡(!
	`°rcmp
(
p
->
∑ck_«me
 + 
objdúÀn
 + 6, 
«me
))

67  
öfo
[
i
];

69  
NULL
;

70 
	}
}

75 
	$∑r£_∑ck_def
(c⁄° *
löe
, 
ﬁd_˙t
)

77 
∑ck_öfo
 *
i
 = 
	`föd_∑ck_by_«me
(
löe
 + 2);

78 i‡(
i
) {

79 
i
->
ﬁd_num
 = 
ﬁd_˙t
;

86 
	}
}

91 
	$ªad_∑ck_öfo_fûe
(c⁄° *
öfofûe
)

93 
FILE
 *
Â
;

94 
löe
[1000];

95 
ﬁd_˙t
 = 0;

97 
Â
 = 
	`f›í
(
öfofûe
, "r");

98 i‡(!
Â
)

101 
	`fgës
(
löe
, ÷öe), 
Â
)) {

102 
Àn
 = 
	`°æí
(
löe
);

103 i‡(
löe
[
Àn
-1] == '\n')

104 
löe
[--
Àn
] = 0;

106 i‡(!
Àn
)

109 
löe
[0]) {

111 i‡(
	`∑r£_∑ck_def
(
löe
, 
ﬁd_˙t
++))

112 
out_°Æe
;

115 
out_°Æe
;

118 
out_°Æe
;

121 
	`îr‹
("uƒecognized: %s", 
löe
);

125 
	`f˛o£
(
Â
);

127 
out_°Æe
:

128 
	`f˛o£
(
Â
);

130 
	}
}

132 
	$com∑ª_öfo
(c⁄° *
a_
, c⁄° *
b_
)

134 
∑ck_öfo
 * c⁄°* 
a
 = 
a_
;

135 
∑ck_öfo
 * c⁄°* 
b
 = 
b_
;

137 i‡(0 <(*
a
)->
ﬁd_num
 && 0 <(*
b
)->old_num)

139  (*
a
)->
ﬁd_num
 - (*
b
)->old_num;

140 i‡(0 <(*
a
)->
ﬁd_num
)

143 i‡(0 <(*
b
)->
ﬁd_num
)

148 i‡((*
a
)->
p
 =(*
b
)->p)

150 i‡((*
a
)->
p
 < (*
b
)->p)

154 
	}
}

156 
	$öô_∑ck_öfo
(c⁄° *
öfofûe
, 
f‹˚
)

158 
∑cked_gô
 *
p
;

159 
°Æe
;

160 
i
 = 0;

162 
objdú
 = 
	`gë_obje˘_dúe˘‹y
();

163 
objdúÀn
 = 
	`°æí
(
objdú
);

165 
	`¥ï¨e_∑cked_gô
();

166 
p
 = 
∑cked_gô
;Ö;Ö =Ö->
√xt
) {

170 i‡(!
p
->
∑ck_loˇl
)

172 
i
++;

174 
num_∑ck
 = 
i
;

175 
öfo
 = 
	`xˇŒoc
(
num_∑ck
, (
∑ck_öfo
 *));

176 
i
 = 0, 
p
 = 
∑cked_gô
;Ö;Ö =Ö->
√xt
) {

177 i‡(!
p
->
∑ck_loˇl
)

179 
öfo
[
i
] = 
	`xˇŒoc
(1, (
∑ck_öfo
));

180 
öfo
[
i
]->
p
 =Ö;

181 
öfo
[
i
]->
ﬁd_num
 = -1;

182 
i
++;

185 i‡(
öfofûe
 && !
f‹˚
)

186 
°Æe
 = 
	`ªad_∑ck_öfo_fûe
(
öfofûe
);

188 
°Æe
 = 1;

190 
i
 = 0; i < 
num_∑ck
; i++) {

191 i‡(
°Æe
) {

192 
öfo
[
i
]->
ﬁd_num
 = -1;

193 
öfo
[
i
]->
ƒ_hóds
 = 0;

198 
	`qs‹t
(
öfo
, 
num_∑ck
, (öfo[0]), 
com∑ª_öfo
);

199 
i
 = 0; i < 
num_∑ck
; i++)

200 
öfo
[
i
]->
√w_num
 = i;

201 
	}
}

203 
	$wrôe_∑ck_öfo_fûe
(
FILE
 *
Â
)

205 
i
;

206 
i
 = 0; i < 
num_∑ck
; i++)

207 
	`Ârötf
(
Â
, "P %s\n", 
öfo
[
i
]->
p
->
∑ck_«me
 + 
objdúÀn
 + 6);

208 
	`Âutc
('\n', 
Â
);

209 
	}
}

211 
	$upd©e_öfo_∑cks
(
f‹˚
)

213 
öfofûe
[
PATH_MAX
];

214 
«me
[
PATH_MAX
];

215 
«mñí
;

216 
FILE
 *
Â
;

218 
«mñí
 = 
	`•rötf
(
öfofûe
, "%s/öfo/∑cks", 
	`gë_obje˘_dúe˘‹y
());

219 
	`°r˝y
(
«me
, 
öfofûe
);

220 
	`°r˝y
(
«me
 + 
«mñí
, "+");

222 
	`öô_∑ck_öfo
(
öfofûe
, 
f‹˚
);

224 
	`ß„_¸óã_Àadög_dúe˘‹õs
(
«me
);

225 
Â
 = 
	`f›í
(
«me
, "w");

226 i‡(!
Â
)

227  
	`îr‹
("ˇ¬Ÿ o≥¿%s", 
«me
);

228 
	`wrôe_∑ck_öfo_fûe
(
Â
);

229 
	`f˛o£
(
Â
);

230 
	`ª«me
(
«me
, 
öfofûe
);

232 
	}
}

235 
	$upd©e_£rvî_öfo
(
f‹˚
)

241 
îrs
 = 0;

243 
îrs
 =Éº†| 
	`upd©e_öfo_ªfs
(
f‹˚
);

244 
îrs
 =Éº†| 
	`upd©e_öfo_∑cks
(
f‹˚
);

247 
	`u∆ök
(
	`gô_∑th
("info/rev-cache"));

249  
îrs
;

250 
	}
}

	@setup.c

1 
	~"ˇche.h
"

3 c⁄° *
	$¥efix_∑th
(c⁄° *
¥efix
, 
Àn
, c⁄° *
∑th
)

5 c⁄° *
‹ig
 = 
∑th
;

7 
c
;

8 i‡(*
∑th
 != '.')

10 
c
 = 
∑th
[1];

12 i‡(!
c
) {

13 
∑th
++;

17 i‡(
c
 == '/') {

18 
∑th
 += 2;

21 i‡(
c
 != '.')

23 
c
 = 
∑th
[2];

24 i‡(!
c
)

25 
∑th
 += 2;

26 i‡(
c
 == '/')

27 
∑th
 += 3;

33 i‡(!
Àn
)

34 
	`dõ
("'%s' i†outsidêªposô‹y", 
‹ig
);

35 
Àn
--;

36 } 
Àn
 && 
¥efix
[len-1] != '/');

39 i‡(
Àn
) {

40 
•e˛í
 = 
	`°æí
(
∑th
);

41 *
n
 = 
	`xmÆloc
(
•e˛í
 + 
Àn
 + 1);

43 
	`mem˝y
(
n
, 
¥efix
, 
Àn
);

44 
	`mem˝y
(
n
 + 
Àn
, 
∑th
, 
•e˛í
+1);

45 
∑th
 = 
n
;

47  
∑th
;

48 
	}
}

55 c⁄° *
	$¥efix_fûíame
(c⁄° *
pfx
, 
pfx_Àn
, c⁄° *
¨g
)

57 
∑th
[
PATH_MAX
];

58 i‡(!
pfx
 || !*pfx || 
¨g
[0] == '/')

59  
¨g
;

60 
	`mem˝y
(
∑th
, 
pfx
, 
pfx_Àn
);

61 
	`°r˝y
(
∑th
 + 
pfx_Àn
, 
¨g
);

62  
∑th
;

63 
	}
}

72 
	$vîify_fûíame
(c⁄° *
¥efix
, c⁄° *
¨g
)

74 c⁄° *
«me
;

75 
°©
 
°
;

77 i‡(*
¨g
 == '-')

78 
	`dõ
("bad fœg '%s' u£dá·î fûíame", 
¨g
);

79 
«me
 = 
¥efix
 ? 
	`¥efix_fûíame
’ªfix, 
	`°æí
’ªfix), 
¨g
) :árg;

80 i‡(!
	`l°©
(
«me
, &
°
))

82 i‡(
î∫o
 =
ENOENT
)

83 
	`dõ
("ambiguousárgument '%s': unknownÑevision orÖathÇot inÅhe workingÅree.\n"

84 "U£ '--'Åÿ£∑øãÖ©h†‰omÑevisi⁄s", 
¨g
);

85 
	`dõ
("'%s': %s", 
¨g
, 
	`°ªº‹
(
î∫o
));

86 
	}
}

93 
	$vîify_n⁄_fûíame
(c⁄° *
¥efix
, c⁄° *
¨g
)

95 c⁄° *
«me
;

96 
°©
 
°
;

98 i‡(
	`is_öside_gô_dú
())

100 i‡(*
¨g
 == '-')

102 
«me
 = 
¥efix
 ? 
	`¥efix_fûíame
’ªfix, 
	`°æí
’ªfix), 
¨g
) :árg;

103 i‡(!
	`l°©
(
«me
, &
°
))

104 
	`dõ
("ambiguousárgument '%s': bothÑevisionánd filename\n"

105 "U£ '--'Åÿ£∑øã fûíame†‰omÑevisi⁄s", 
¨g
);

106 i‡(
î∫o
 !
ENOENT
)

107 
	`dõ
("'%s': %s", 
¨g
, 
	`°ªº‹
(
î∫o
));

108 
	}
}

110 c⁄° **
	$gë_∑th•ec
(c⁄° *
¥efix
, c⁄° **
∑th•ec
)

112 c⁄° *
íåy
 = *
∑th•ec
;

113 c⁄° **
p
;

114 
¥efixÀn
;

116 i‡(!
¥efix
 && !
íåy
)

117  
NULL
;

119 i‡(!
íåy
) {

120 c⁄° *
•ec
[2];

121 
•ec
[0] = 
¥efix
;

122 
•ec
[1] = 
NULL
;

123  
•ec
;

127 
p
 = 
∑th•ec
;

128 
¥efixÀn
 = 
¥efix
 ? 
	`°æí
(prefix) : 0;

130 *
p
 = 
	`¥efix_∑th
(
¥efix
, 
¥efixÀn
, 
íåy
);

131 } (
íåy
 = *++
p
Ë!
NULL
);

132  (c⁄° **Ë
∑th•ec
;

133 
	}
}

146 
	$is_gô_dúe˘‹y
(c⁄° *
su•e˘
)

148 
∑th
[
PATH_MAX
];

149 
size_t
 
Àn
 = 
	`°æí
(
su•e˘
);

151 
	`°r˝y
(
∑th
, 
su•e˘
);

152 i‡(
	`gëív
(
DB_ENVIRONMENT
)) {

153 i‡(
	`ac˚ss
(
	`gëív
(
DB_ENVIRONMENT
), 
X_OK
))

157 
	`°r˝y
(
∑th
 + 
Àn
, "/objects");

158 i‡(
	`ac˚ss
(
∑th
, 
X_OK
))

162 
	`°r˝y
(
∑th
 + 
Àn
, "/refs");

163 i‡(
	`ac˚ss
(
∑th
, 
X_OK
))

166 
	`°r˝y
(
∑th
 + 
Àn
, "/HEAD");

167 i‡(
	`vÆid©e_hódªf
(
∑th
))

171 
	}
}

173 
	göside_gô_dú
 = -1;

175 
	$is_öside_gô_dú
()

177 i‡(
öside_gô_dú
 < 0) {

178 
buf„r
[1024];

180 i‡(
	`is_b¨e_ªposô‹y
())

181  (
öside_gô_dú
 = 1);

182 i‡(
	`gëcwd
(
buf„r
, (buffer))) {

183 c⁄° *
gô_dú
 = 
	`gë_gô_dú
(), *
cwd
 = 
buf„r
;

184 *
gô_dú
 && *gô_dú =*
cwd
) {

185 
gô_dú
++;

186 
cwd
++;

188 
öside_gô_dú
 = !*
gô_dú
;

190 
öside_gô_dú
 = 0;

192  
öside_gô_dú
;

193 
	}
}

195 c⁄° *
	$£tup_gô_dúe˘‹y_gíéy
(*
n⁄gô_ok
)

197 
cwd
[
PATH_MAX
+1];

198 c⁄° *
gôdúív
;

199 
Àn
, 
off£t
;

206 
gôdúív
 = 
	`gëív
(
GIT_DIR_ENVIRONMENT
);

207 i‡(
gôdúív
) {

208 i‡(
PATH_MAX
 - 40 < 
	`°æí
(
gôdúív
))

209 
	`dõ
("'$%s'Åoÿbig", 
GIT_DIR_ENVIRONMENT
);

210 i‡(
	`is_gô_dúe˘‹y
(
gôdúív
))

211  
NULL
;

212 i‡(
n⁄gô_ok
) {

213 *
n⁄gô_ok
 = 1;

214  
NULL
;

216 
	`dõ
("NŸá gôÑïosô‹y: '%s'", 
gôdúív
);

219 i‡(!
	`gëcwd
(
cwd
, (cwd)) || cwd[0] != '/')

220 
	`dõ
("UnableÅoÑead current working directory");

222 
off£t
 = 
Àn
 = 
	`°æí
(
cwd
);

224 i‡(
	`is_gô_dúe˘‹y
(".git"))

226 
	`chdú
("..");

228 i‡(!
off£t
) {

229 i‡(
	`is_gô_dúe˘‹y
(
cwd
)) {

230 i‡(
	`chdú
(
cwd
))

231 
	`dõ
("Cannot come backÅo cwd");

232 
	`£ãnv
(
GIT_DIR_ENVIRONMENT
, 
cwd
, 1);

233 
öside_gô_dú
 = 1;

234  
NULL
;

236 i‡(
n⁄gô_ok
) {

237 i‡(
	`chdú
(
cwd
))

238 
	`dõ
("Cannot come backÅo cwd");

239 *
n⁄gô_ok
 = 1;

240  
NULL
;

242 
	`dõ
("Notá gitÑepository");

244 } 
cwd
[--
off£t
] != '/');

247 i‡(
off£t
 =
Àn
)

248  
NULL
;

251 
off£t
++;

252 
cwd
[
Àn
++] = '/';

253 
cwd
[
Àn
] = 0;

254 
öside_gô_dú
 = !
	`°∫cmp
(
cwd
 + 
off£t
, ".git/", 5);

255  
cwd
 + 
off£t
;

256 
	}
}

258 
	$gô_c⁄fig_≥rm
(c⁄° *
v¨
, c⁄° *
vÆue
)

260 i‡(
vÆue
) {

261 i‡(!
	`°rcmp
(
vÆue
, "umask"))

262  
PERM_UMASK
;

263 i‡(!
	`°rcmp
(
vÆue
, "group"))

264  
PERM_GROUP
;

265 i‡(!
	`°rcmp
(
vÆue
, "all") ||

266 !
	`°rcmp
(
vÆue
, "world") ||

267 !
	`°rcmp
(
vÆue
, "everybody"))

268  
PERM_EVERYBODY
;

270  
	`gô_c⁄fig_boﬁ
(
v¨
, 
vÆue
);

271 
	}
}

273 
	$check_ªposô‹y_f‹m©_vîsi⁄
(c⁄° *
v¨
, c⁄° *
vÆue
)

275 i‡(
	`°rcmp
(
v¨
, "core.repositoryformatversion") == 0)

276 
ªposô‹y_f‹m©_vîsi⁄
 = 
	`gô_c⁄fig_öt
(
v¨
, 
vÆue
);

277 i‡(
	`°rcmp
(
v¨
, "core.sharedrepository") == 0)

278 
sh¨ed_ªposô‹y
 = 
	`gô_c⁄fig_≥rm
(
v¨
, 
vÆue
);

280 
	}
}

282 
	$check_ªposô‹y_f‹m©
()

284 
	`gô_c⁄fig
(
check_ªposô‹y_f‹m©_vîsi⁄
);

285 i‡(
GIT_REPO_VERSION
 < 
ªposô‹y_f‹m©_vîsi⁄
)

286 
	`dõ
 ("Expected gitÑepo version <= %d, found %d",

287 
GIT_REPO_VERSION
, 
ªposô‹y_f‹m©_vîsi⁄
);

289 
	}
}

291 c⁄° *
	$£tup_gô_dúe˘‹y
()

293 c⁄° *
ªtvÆ
 = 
	`£tup_gô_dúe˘‹y_gíéy
(
NULL
);

294 
	`check_ªposô‹y_f‹m©
();

295  
ªtvÆ
;

296 
	}
}

	@sha1_file.c

9 
	~"ˇche.h
"

10 
	~"dñè.h
"

11 
	~"∑ck.h
"

12 
	~"blob.h
"

13 
	~"commô.h
"

14 
	~"èg.h
"

15 
	~"åì.h
"

17 #i‚de‡
O_NOATIME


18 #i‡
deföed
(
__löux__
Ë&& (deföed(
__i386__
Ë|| deföed(
__PPC__
))

19 
	#O_NOATIME
 01000000

	)

21 
	#O_NOATIME
 0

	)

25 #ifde‡
NO_C99_FORMAT


26 
	#SZ_FMT
 "lu"

	)

28 
	#SZ_FMT
 "zu"

	)

31 c⁄° 
	gnuŒ_sha1
[20];

33 
	gsha1_fûe_›í_Êag
 = 
O_NOATIME
;

35 sig√d 
	ghexvÆ_èbÀ
[256] = {

70 
	$gë_sha1_hex
(c⁄° *
hex
, *
sha1
)

72 
i
;

73 
i
 = 0; i < 20; i++) {

74 
vÆ
 = (
	`hexvÆ
(
hex
[0]) << 4) | hexval(hex[1]);

75 i‡(
vÆ
 & ~0xff)

77 *
sha1
++ = 
vÆ
;

78 
hex
 += 2;

81 
	}
}

83 
	$ß„_¸óã_Àadög_dúe˘‹õs
(*
∑th
)

85 *
pos
 = 
∑th
;

86 
°©
 
°
;

88 i‡(*
pos
 == '/')

89 
pos
++;

91 
pos
) {

92 
pos
 = 
	`°rchr
(pos, '/');

93 i‡(!
pos
)

95 *
pos
 = 0;

96 i‡(!
	`°©
(
∑th
, &
°
)) {

98 i‡(!
	`S_ISDIR
(
°
.
°_mode
)) {

99 *
pos
 = '/';

103 i‡(
	`mkdú
(
∑th
, 0777)) {

104 *
pos
 = '/';

107 i‡(
	`adju°_sh¨ed_≥rm
(
∑th
)) {

108 *
pos
 = '/';

111 *
pos
++ = '/';

114 
	}
}

116 * 
	$sha1_to_hex
(c⁄° *
sha1
)

118 
bu‚o
;

119 
hexbuf„r
[4][50];

120 c⁄° 
hex
[] = "0123456789abcdef";

121 *
buf„r
 = 
hexbuf„r
[3 & ++
bu‚o
], *
buf
 = buffer;

122 
i
;

124 
i
 = 0; i < 20; i++) {

125 
vÆ
 = *
sha1
++;

126 *
buf
++ = 
hex
[
vÆ
 >> 4];

127 *
buf
++ = 
hex
[
vÆ
 & 0xf];

129 *
buf
 = '\0';

131  
buf„r
;

132 
	}
}

134 
	$fûl_sha1_∑th
(*
∑thbuf
, c⁄° *
sha1
)

136 
i
;

137 
i
 = 0; i < 20; i++) {

138 
hex
[] = "0123456789abcdef";

139 
vÆ
 = 
sha1
[
i
];

140 *
pos
 = 
∑thbuf
 + 
i
*2 + (i > 0);

141 *
pos
++ = 
hex
[
vÆ
 >> 4];

142 *
pos
 = 
hex
[
vÆ
 & 0xf];

144 
	}
}

156 *
	$sha1_fûe_«me
(c⁄° *
sha1
)

158 *
«me
, *
ba£
;

160 i‡(!
ba£
) {

161 c⁄° *
sha1_fûe_dúe˘‹y
 = 
	`gë_obje˘_dúe˘‹y
();

162 
Àn
 = 
	`°æí
(
sha1_fûe_dúe˘‹y
);

163 
ba£
 = 
	`xmÆloc
(
Àn
 + 60);

164 
	`mem˝y
(
ba£
, 
sha1_fûe_dúe˘‹y
, 
Àn
);

165 
	`mem£t
(
ba£
+
Àn
, 0, 60);

166 
ba£
[
Àn
] = '/';

167 
ba£
[
Àn
+3] = '/';

168 
«me
 = 
ba£
 + 
Àn
 + 1;

170 
	`fûl_sha1_∑th
(
«me
, 
sha1
);

171  
ba£
;

172 
	}
}

174 *
	$sha1_∑ck_«me
(c⁄° *
sha1
)

176 c⁄° 
hex
[] = "0123456789abcdef";

177 *
«me
, *
ba£
, *
buf
;

178 
i
;

180 i‡(!
ba£
) {

181 c⁄° *
sha1_fûe_dúe˘‹y
 = 
	`gë_obje˘_dúe˘‹y
();

182 
Àn
 = 
	`°æí
(
sha1_fûe_dúe˘‹y
);

183 
ba£
 = 
	`xmÆloc
(
Àn
 + 60);

184 
	`•rötf
(
ba£
, "%s/∑ck/∑ck-1234567890123456789012345678901234567890.∑ck", 
sha1_fûe_dúe˘‹y
);

185 
«me
 = 
ba£
 + 
Àn
 + 11;

188 
buf
 = 
«me
;

190 
i
 = 0; i < 20; i++) {

191 
vÆ
 = *
sha1
++;

192 *
buf
++ = 
hex
[
vÆ
 >> 4];

193 *
buf
++ = 
hex
[
vÆ
 & 0xf];

196  
ba£
;

197 
	}
}

199 *
	$sha1_∑ck_ödex_«me
(c⁄° *
sha1
)

201 c⁄° 
hex
[] = "0123456789abcdef";

202 *
«me
, *
ba£
, *
buf
;

203 
i
;

205 i‡(!
ba£
) {

206 c⁄° *
sha1_fûe_dúe˘‹y
 = 
	`gë_obje˘_dúe˘‹y
();

207 
Àn
 = 
	`°æí
(
sha1_fûe_dúe˘‹y
);

208 
ba£
 = 
	`xmÆloc
(
Àn
 + 60);

209 
	`•rötf
(
ba£
, "%s/∑ck/∑ck-1234567890123456789012345678901234567890.idx", 
sha1_fûe_dúe˘‹y
);

210 
«me
 = 
ba£
 + 
Àn
 + 11;

213 
buf
 = 
«me
;

215 
i
 = 0; i < 20; i++) {

216 
vÆ
 = *
sha1
++;

217 *
buf
++ = 
hex
[
vÆ
 >> 4];

218 *
buf
++ = 
hex
[
vÆ
 & 0xf];

221  
ba£
;

222 
	}
}

224 
Æã∫©e_obje˘_d©aba£
 *
	gÆt_odb_li°
;

225 
Æã∫©e_obje˘_d©aba£
 **
	gÆt_odb_èû
;

227 
ªad_öfo_Æã∫©es
(c⁄° * 
Æã∫©es
, 
dïth
);

244 
	$lök_Æt_odb_íåy
(c⁄° * 
íåy
, 
Àn
, c⁄° * 
ªœtive_ba£
, 
dïth
)

246 
°©
 
°
;

247 c⁄° *
objdú
 = 
	`gë_obje˘_dúe˘‹y
();

248 
Æã∫©e_obje˘_d©aba£
 *
ít
;

249 
Æã∫©e_obje˘_d©aba£
 *
Æt
;

251 
pfxÀn
 = 
Àn
;

252 
íéí
 = 
pfxÀn
 + 43;

253 
ba£_Àn
 = -1;

255 i‡(*
íåy
 !'/' && 
ªœtive_ba£
) {

257 i‡(
ba£_Àn
 < 0)

258 
ba£_Àn
 = 
	`°æí
(
ªœtive_ba£
) + 1;

259 
íéí
 +
ba£_Àn
;

260 
pfxÀn
 +
ba£_Àn
;

262 
ít
 = 
	`xmÆloc
((*ítË+ 
íéí
);

264 i‡(*
íåy
 !'/' && 
ªœtive_ba£
) {

265 
	`mem˝y
(
ít
->
ba£
, 
ªœtive_ba£
, 
ba£_Àn
 - 1);

266 
ít
->
ba£
[
ba£_Àn
 - 1] = '/';

267 
	`mem˝y
(
ít
->
ba£
 + 
ba£_Àn
, 
íåy
, 
Àn
);

270 
	`mem˝y
(
ít
->
ba£
, 
íåy
, 
pfxÀn
);

272 
ít
->
«me
 =É¡->
ba£
 + 
pfxÀn
 + 1;

273 
ít
->
ba£
[
pfxÀn
 + 3] = '/';

274 
ít
->
ba£
[
pfxÀn
] =É¡->ba£[
íéí
-1] = 0;

277 i‡(
	`°©
(
ít
->
ba£
, &
°
Ë|| !
	`S_ISDIR
(°.
°_mode
)) {

278 
	`îr‹
("object directory %s doesÇotÉxist; "

280 
ít
->
ba£
);

281 
	`‰ì
(
ít
);

288 
Æt
 = 
Æt_odb_li°
;á…;á… =á…->
√xt
) {

289 i‡(!
	`memcmp
(
ít
->
ba£
, 
Æt
->ba£, 
pfxÀn
)) {

290 
	`‰ì
(
ít
);

294 i‡(!
	`memcmp
(
ít
->
ba£
, 
objdú
, 
pfxÀn
)) {

295 
	`‰ì
(
ít
);

300 *
Æt_odb_èû
 = 
ít
;

301 
Æt_odb_èû
 = &(
ít
->
√xt
);

302 
ít
->
√xt
 = 
NULL
;

305 
	`ªad_öfo_Æã∫©es
(
ít
->
ba£
, 
dïth
 + 1);

307 
ít
->
ba£
[
pfxÀn
] = '/';

310 
	}
}

312 
	$lök_Æt_odb_íåõs
(c⁄° *
Æt
, c⁄° *
ï
, 
£p
,

313 c⁄° *
ªœtive_ba£
, 
dïth
)

315 c⁄° *
˝
, *
œ°
;

317 i‡(
dïth
 > 5) {

318 
	`îr‹
("%s: ignoringálternate object stores,ÇestingÅoo deep.",

319 
ªœtive_ba£
);

323 
œ°
 = 
Æt
;

324 
œ°
 < 
ï
) {

325 
˝
 = 
œ°
;

326 i‡(
˝
 < 
ï
 && *cp == '#') {

327 
˝
 < 
ï
 && *˝ !
£p
)

328 
˝
++;

329 
œ°
 = 
˝
 + 1;

332 
˝
 < 
ï
 && *˝ !
£p
)

333 
˝
++;

334 i‡(
œ°
 !
˝
) {

335 i‡((*
œ°
 !'/'Ë&& 
dïth
) {

336 
	`îr‹
("%s: ignoringÑelativeálternate object store %s",

337 
ªœtive_ba£
, 
œ°
);

339 
	`lök_Æt_odb_íåy
(
œ°
, 
˝
 -Üast,

340 
ªœtive_ba£
, 
dïth
);

343 
˝
 < 
ï
 && *˝ =
£p
)

344 
˝
++;

345 
œ°
 = 
˝
;

347 
	}
}

349 
	$ªad_öfo_Æã∫©es
(c⁄° * 
ªœtive_ba£
, 
dïth
)

351 *
m≠
;

352 
°©
 
°
;

353 
∑th
[
PATH_MAX
];

354 
fd
;

356 
	`•rötf
(
∑th
, "%s/öfo/Æã∫©es", 
ªœtive_ba£
);

357 
fd
 = 
	`›í
(
∑th
, 
O_RDONLY
);

358 i‡(
fd
 < 0)

360 i‡(
	`f°©
(
fd
, &
°
Ë|| (°.
°_size
 == 0)) {

361 
	`˛o£
(
fd
);

364 
m≠
 = 
	`xmm≠
(
NULL
, 
°
.
°_size
, 
PROT_READ
, 
MAP_PRIVATE
, 
fd
, 0);

365 
	`˛o£
(
fd
);

367 
	`lök_Æt_odb_íåõs
(
m≠
, m≠ + 
°
.
°_size
, '\n', 
ªœtive_ba£
, 
dïth
);

369 
	`munm≠
(
m≠
, 
°
.
°_size
);

370 
	}
}

372 
	$¥ï¨e_Æt_odb
()

374 c⁄° *
Æt
;

376 
Æt
 = 
	`gëív
(
ALTERNATE_DB_ENVIRONMENT
);

377 i‡(!
Æt
)ált = "";

379 i‡(
Æt_odb_èû
)

381 
Æt_odb_èû
 = &
Æt_odb_li°
;

382 
	`lök_Æt_odb_íåõs
(
Æt
,á… + 
	`°æí
◊…), ':', 
NULL
, 0);

384 
	`ªad_öfo_Æã∫©es
(
	`gë_obje˘_dúe˘‹y
(), 0);

385 
	}
}

387 *
	$föd_sha1_fûe
(c⁄° *
sha1
, 
°©
 *
°
)

389 *
«me
 = 
	`sha1_fûe_«me
(
sha1
);

390 
Æã∫©e_obje˘_d©aba£
 *
Æt
;

392 i‡(!
	`°©
(
«me
, 
°
))

393  
«me
;

394 
	`¥ï¨e_Æt_odb
();

395 
Æt
 = 
Æt_odb_li°
;á…;á… =á…->
√xt
) {

396 
«me
 = 
Æt
->name;

397 
	`fûl_sha1_∑th
(
«me
, 
sha1
);

398 i‡(!
	`°©
(
Æt
->
ba£
, 
°
))

399  
Æt
->
ba£
;

401  
NULL
;

402 
	}
}

404 
	g∑ck_u£d_˘r
;

405 
	g∑ck_mm≠_ˇŒs
;

406 
	g≥ak_∑ck_›í_wödows
;

407 
	g∑ck_›í_wödows
;

408 
size_t
 
	g≥ak_∑ck_m≠≥d
;

409 
size_t
 
	g∑ck_m≠≥d
;

410 
size_t
 
	g∑ge_size
;

411 
∑cked_gô
 *
	g∑cked_gô
;

413 
	$∑ck_ªp‹t
()

415 
	`Ârötf
(
°dîr
,

416 "∑ck_ªp‹t: gë∑gesize(Ë = %10" 
SZ_FMT
 "\n"

417 "∑ck_ªp‹t: c‹e.∑ckedGôWödowSizê%10" 
SZ_FMT
 "\n"

418 "∑ck_ªp‹t: c‹e.∑ckedGôLimô = %10" 
SZ_FMT
 "\n",

419 
∑ge_size
,

420 
∑cked_gô_wödow_size
,

421 
∑cked_gô_limô
);

422 
	`Ârötf
(
°dîr
,

427 "%10" 
SZ_FMT
 " / %10" SZ_FMT "\n",

428 
∑ck_u£d_˘r
,

429 
∑ck_mm≠_ˇŒs
,

430 
∑ck_›í_wödows
, 
≥ak_∑ck_›í_wödows
,

431 
∑ck_m≠≥d
, 
≥ak_∑ck_m≠≥d
);

432 
	}
}

434 
	$check_∑cked_gô_idx
(c⁄° *
∑th
, *
idx_size_
,

435 **
idx_m≠_
)

437 *
idx_m≠
;

438 
uöt32_t
 *
ödex
;

439 
idx_size
;

440 
ƒ
, 
i
;

441 
fd
 = 
	`›í
(
∑th
, 
O_RDONLY
);

442 
°©
 
°
;

443 i‡(
fd
 < 0)

445 i‡(
	`f°©
(
fd
, &
°
)) {

446 
	`˛o£
(
fd
);

449 
idx_size
 = 
°
.
°_size
;

450 
idx_m≠
 = 
	`xmm≠
(
NULL
, 
idx_size
, 
PROT_READ
, 
MAP_PRIVATE
, 
fd
, 0);

451 
	`˛o£
(
fd
);

453 
ödex
 = 
idx_m≠
;

454 *
idx_m≠_
 = 
idx_m≠
;

455 *
idx_size_
 = 
idx_size
;

458 i‡(
idx_size
 < 4*256 + 20 + 20)

459  
	`îr‹
("ödex fûê%†i†toÿsmÆl", 
∑th
);

465 i‡(
ödex
[0] =
	`ht⁄l
(
PACK_IDX_SIGNATURE
))

466  
	`îr‹
("index file %s isáÇewer version"

469 
∑th
);

471 
ƒ
 = 0;

472 
i
 = 0; i < 256; i++) {

473 
n
 = 
	`¡ohl
(
ödex
[
i
]);

474 i‡(
n
 < 
ƒ
)

475  
	`îr‹
("n⁄-m⁄Ÿ⁄i¯ödex %s", 
∑th
);

476 
ƒ
 = 
n
;

486 i‡(
idx_size
 !4*256 + 
ƒ
 * 24 + 20 + 20)

487  
	`îr‹
("wr⁄g index fûêsizêö %s", 
∑th
);

490 
	}
}

492 
	$sˇn_wödows
(
∑cked_gô
 *
p
,

493 
∑cked_gô
 **
Ãu_p
,

494 
∑ck_wödow
 **
Ãu_w
,

495 
∑ck_wödow
 **
Ãu_l
)

497 
∑ck_wödow
 *
w
, *
w_l
;

499 
w_l
 = 
NULL
, 
w
 = 
p
->
wödows
; w; w = w->
√xt
) {

500 i‡(!
w
->
öu£_˙t
) {

501 i‡(!*
Ãu_w
 || 
w
->
œ°_u£d
 < (*lru_w)->last_used) {

502 *
Ãu_p
 = 
p
;

503 *
Ãu_w
 = 
w
;

504 *
Ãu_l
 = 
w_l
;

507 
w_l
 = 
w
;

509 
	}
}

511 
	$unu£_⁄e_wödow
(
∑cked_gô
 *
cuºít
)

513 
∑cked_gô
 *
p
, *
Ãu_p
 = 
NULL
;

514 
∑ck_wödow
 *
Ãu_w
 = 
NULL
, *
Ãu_l
 = NULL;

516 i‡(
cuºít
)

517 
	`sˇn_wödows
(
cuºít
, &
Ãu_p
, &
Ãu_w
, &
Ãu_l
);

518 
p
 = 
∑cked_gô
;Ö;Ö =Ö->
√xt
)

519 
	`sˇn_wödows
(
p
, &
Ãu_p
, &
Ãu_w
, &
Ãu_l
);

520 i‡(
Ãu_p
) {

521 
	`munm≠
(
Ãu_w
->
ba£
,Üru_w->
Àn
);

522 
∑ck_m≠≥d
 -
Ãu_w
->
Àn
;

523 i‡(
Ãu_l
)

524 
Ãu_l
->
√xt
 = 
Ãu_w
->next;

526 
Ãu_p
->
wödows
 = 
Ãu_w
->
√xt
;

527 i‡(!
Ãu_p
->
wödows
 &&Üru_∞!
cuºít
) {

528 
	`˛o£
(
Ãu_p
->
∑ck_fd
);

529 
Ãu_p
->
∑ck_fd
 = -1;

532 
	`‰ì
(
Ãu_w
);

533 
∑ck_›í_wödows
--;

537 
	}
}

539 
	$ªÀa£_∑ck_mem‹y
(
size_t
 
√ed
)

541 
size_t
 
cur
 = 
∑ck_m≠≥d
;

542 
√ed
 >(
cur
 - 
∑ck_m≠≥d
Ë&& 
	`unu£_⁄e_wödow
(
NULL
))

544 
	}
}

546 
	$unu£_∑ck
(
∑ck_wödow
 **
w_curs‹
)

548 
∑ck_wödow
 *
w
 = *
w_curs‹
;

549 i‡(
w
) {

550 
w
->
öu£_˙t
--;

551 *
w_curs‹
 = 
NULL
;

553 
	}
}

559 
	$›í_∑cked_gô_1
(
∑cked_gô
 *
p
)

561 
°©
 
°
;

562 
∑ck_hódî
 
hdr
;

563 
sha1
[20];

564 *
idx_sha1
;

565 
fd_Êag
;

567 
p
->
∑ck_fd
 = 
	`›í
’->
∑ck_«me
, 
O_RDONLY
);

568 i‡(
p
->
∑ck_fd
 < 0 || 
	`f°©
’->∑ck_fd, &
°
))

572 i‡(!
p
->
∑ck_size
) {

573 i‡(!
	`S_ISREG
(
°
.
°_mode
))

574  
	`îr‹
("∑ckfûê%†nŸáÑeguœ∏fûe", 
p
->
∑ck_«me
);

575 
p
->
∑ck_size
 = 
°
.
°_size
;

576 } i‡(
p
->
∑ck_size
 !
°
.
°_size
)

577  
	`îr‹
("∑ckfûê%†sizêch™ged", 
p
->
∑ck_«me
);

582 
fd_Êag
 = 
	`f˙é
(
p
->
∑ck_fd
, 
F_GETFD
, 0);

583 i‡(
fd_Êag
 < 0)

584  
	`îr‹
("cannot determine file descriptor flags");

585 
fd_Êag
 |
FD_CLOEXEC
;

586 i‡(
	`f˙é
(
p
->
∑ck_fd
, 
F_SETFD
, 
fd_Êag
) == -1)

587  
	`îr‹
("cannot set FD_CLOEXEC");

590 i‡(
	`ªad_ö_fuŒ
(
p
->
∑ck_fd
, &
hdr
, (hdr)) != (hdr))

591  
	`îr‹
("fûê%†i†Á∏toÿsh‹àtÿbê®∑ckfûe", 
p
->
∑ck_«me
);

592 i‡(
hdr
.
hdr_sig«tuª
 !
	`ht⁄l
(
PACK_SIGNATURE
))

593  
	`îr‹
("fûê%†i†nŸá GITÖackfûe", 
p
->
∑ck_«me
);

594 i‡(!
	`∑ck_vîsi⁄_ok
(
hdr
.
hdr_vîsi⁄
))

595  
	`îr‹
("packfile %s is version %uándÇot supported"

597 
p
->
∑ck_«me
, 
	`¡ohl
(
hdr
.
hdr_vîsi⁄
));

600 i‡(
	`num_∑cked_obje˘s
(
p
Ë!
	`¡ohl
(
hdr
.
hdr_íåõs
))

601  
	`îr‹
("packfile %s claimsÅo have %u objects"

603 
p
->
∑ck_«me
, 
	`¡ohl
(
hdr
.
hdr_íåõs
),

604 
	`num_∑cked_obje˘s
(
p
));

605 i‡(
	`l£ek
(
p
->
∑ck_fd
,Ö->
∑ck_size
 - (
sha1
), 
SEEK_SET
) == -1)

606  
	`îr‹
("íd o‡∑ckfûê%†i†u«vaûabÀ", 
p
->
∑ck_«me
);

607 i‡(
	`ªad_ö_fuŒ
(
p
->
∑ck_fd
, 
sha1
, (sha1)) != (sha1))

608  
	`îr‹
("∑ckfûê%†sig«tuª i†u«vaûabÀ", 
p
->
∑ck_«me
);

609 
idx_sha1
 = ((*)
p
->
ödex_ba£
Ë+Ö->
ödex_size
 - 40;

610 i‡(
	`hashcmp
(
sha1
, 
idx_sha1
))

611  
	`îr‹
("∑ckfûê%†d€†nŸ m©ch index", 
p
->
∑ck_«me
);

613 
	}
}

615 
	$›í_∑cked_gô
(
∑cked_gô
 *
p
)

617 i‡(!
	`›í_∑cked_gô_1
(
p
))

619 i‡(
p
->
∑ck_fd
 != -1) {

620 
	`˛o£
(
p
->
∑ck_fd
);

621 
p
->
∑ck_fd
 = -1;

624 
	}
}

626 
	$ö_wödow
(
∑ck_wödow
 *
wö
, 
off£t
)

634 
off_t
 
wö_off
 = 
wö
->
off£t
;

635  
wö_off
 <
off£t


636 && (
off£t
 + 20Ë<(
wö_off
 + 
wö
->
Àn
);

637 
	}
}

639 * 
	$u£_∑ck
(
∑cked_gô
 *
p
,

640 
∑ck_wödow
 **
w_curs‹
,

641 
off£t
,

642 *
À·
)

644 
∑ck_wödow
 *
wö
 = *
w_curs‹
;

646 i‡(
p
->
∑ck_fd
 =-1 && 
	`›í_∑cked_gô
(p))

647 
	`dõ
("∑ckfûê%†ˇ¬Ÿ bêac˚s£d", 
p
->
∑ck_«me
);

654 i‡(
off£t
 > (
p
->
∑ck_size
 - 20))

655 
	`dõ
("offset beyondÉnd ofÖackfile (truncatedÖack?)");

657 i‡(!
wö
 || !
	`ö_wödow
(wö, 
off£t
)) {

658 i‡(
wö
)

659 
wö
->
öu£_˙t
--;

660 
wö
 = 
p
->
wödows
; wö; wö = wö->
√xt
) {

661 i‡(
	`ö_wödow
(
wö
, 
off£t
))

664 i‡(!
wö
) {

665 i‡(!
∑ge_size
)

666 
∑ge_size
 = 
	`gë∑gesize
();

667 
wö
 = 
	`xˇŒoc
(1, (*win));

668 
wö
->
off£t
 = (off£à/ 
∑ge_size
) *Öage_size;

669 
wö
->
Àn
 = 
p
->
∑ck_size
 - wö->
off£t
;

670 i‡(
wö
->
Àn
 > 
∑cked_gô_wödow_size
)

671 
wö
->
Àn
 = 
∑cked_gô_wödow_size
;

672 
∑ck_m≠≥d
 +
wö
->
Àn
;

673 
∑cked_gô_limô
 < 
∑ck_m≠≥d


674 && 
	`unu£_⁄e_wödow
(
p
))

676 
wö
->
ba£
 = 
	`xmm≠
(
NULL
, wö->
Àn
,

677 
PROT_READ
, 
MAP_PRIVATE
,

678 
p
->
∑ck_fd
, 
wö
->
off£t
);

679 i‡(
wö
->
ba£
 =
MAP_FAILED
)

680 
	`dõ
("packfile %s cannot be mapped: %s",

681 
p
->
∑ck_«me
,

682 
	`°ªº‹
(
î∫o
));

683 
∑ck_mm≠_ˇŒs
++;

684 
∑ck_›í_wödows
++;

685 i‡(
∑ck_m≠≥d
 > 
≥ak_∑ck_m≠≥d
)

686 
≥ak_∑ck_m≠≥d
 = 
∑ck_m≠≥d
;

687 i‡(
∑ck_›í_wödows
 > 
≥ak_∑ck_›í_wödows
)

688 
≥ak_∑ck_›í_wödows
 = 
∑ck_›í_wödows
;

689 
wö
->
√xt
 = 
p
->
wödows
;

690 
p
->
wödows
 = 
wö
;

693 i‡(
wö
 !*
w_curs‹
) {

694 
wö
->
œ°_u£d
 = 
∑ck_u£d_˘r
++;

695 
wö
->
öu£_˙t
++;

696 *
w_curs‹
 = 
wö
;

698 
off£t
 -
wö
->offset;

699 i‡(
À·
)

700 *
À·
 = 
wö
->
Àn
 - 
off£t
;

701  
wö
->
ba£
 + 
off£t
;

702 
	}
}

704 
∑cked_gô
 *
	$add_∑cked_gô
(*
∑th
, 
∑th_Àn
, 
loˇl
)

706 
°©
 
°
;

707 
∑cked_gô
 *
p
;

708 
idx_size
;

709 *
idx_m≠
;

710 
sha1
[20];

712 i‡(
	`check_∑cked_gô_idx
(
∑th
, &
idx_size
, &
idx_m≠
))

713  
NULL
;

716 
	`°r˝y
(
∑th
 + 
∑th_Àn
 - 4, ".pack");

717 i‡(
	`°©
(
∑th
, &
°
Ë|| !
	`S_ISREG
(°.
°_mode
)) {

718 
	`munm≠
(
idx_m≠
, 
idx_size
);

719  
NULL
;

724 
p
 = 
	`xmÆloc
((*pË+ 
∑th_Àn
 + 2);

725 
	`°r˝y
(
p
->
∑ck_«me
, 
∑th
);

726 
p
->
ödex_size
 = 
idx_size
;

727 
p
->
∑ck_size
 = 
°
.
°_size
;

728 
p
->
ödex_ba£
 = 
idx_m≠
;

729 
p
->
√xt
 = 
NULL
;

730 
p
->
wödows
 = 
NULL
;

731 
p
->
∑ck_fd
 = -1;

732 
p
->
∑ck_loˇl
 = 
loˇl
;

733 i‡((
∑th_Àn
 > 44Ë&& !
	`gë_sha1_hex
(
∑th
 +Ö©h_À¿- 44, 
sha1
))

734 
	`hash˝y
(
p
->
sha1
, sha1);

735  
p
;

736 
	}
}

738 
∑cked_gô
 *
	$∑r£_∑ck_ödex
(*
sha1
)

740 *
∑th
 = 
	`sha1_∑ck_ödex_«me
(
sha1
);

741  
	`∑r£_∑ck_ödex_fûe
(
sha1
, 
∑th
);

742 
	}
}

744 
∑cked_gô
 *
	$∑r£_∑ck_ödex_fûe
(c⁄° *
sha1
, *
idx_∑th
)

746 
∑cked_gô
 *
p
;

747 
idx_size
;

748 *
idx_m≠
;

749 *
∑th
;

751 i‡(
	`check_∑cked_gô_idx
(
idx_∑th
, &
idx_size
, &
idx_m≠
))

752  
NULL
;

754 
∑th
 = 
	`sha1_∑ck_«me
(
sha1
);

756 
p
 = 
	`xmÆloc
((*pË+ 
	`°æí
(
∑th
) + 2);

757 
	`°r˝y
(
p
->
∑ck_«me
, 
∑th
);

758 
p
->
ödex_size
 = 
idx_size
;

759 
p
->
∑ck_size
 = 0;

760 
p
->
ödex_ba£
 = 
idx_m≠
;

761 
p
->
√xt
 = 
NULL
;

762 
p
->
wödows
 = 
NULL
;

763 
p
->
∑ck_fd
 = -1;

764 
	`hash˝y
(
p
->
sha1
, sha1);

765  
p
;

766 
	}
}

768 
	$ö°Æl_∑cked_gô
(
∑cked_gô
 *
∑ck
)

770 
∑ck
->
√xt
 = 
∑cked_gô
;

771 
∑cked_gô
 = 
∑ck
;

772 
	}
}

774 
	$¥ï¨e_∑cked_gô_⁄e
(*
objdú
, 
loˇl
)

776 
∑th
[
PATH_MAX
];

777 
Àn
;

778 
DIR
 *
dú
;

779 
dúít
 *
de
;

781 
	`•rötf
(
∑th
, "%s/∑ck", 
objdú
);

782 
Àn
 = 
	`°æí
(
∑th
);

783 
dú
 = 
	`›ídú
(
∑th
);

784 i‡(!
dú
) {

785 i‡(
î∫o
 !
ENOENT
)

786 
	`îr‹
("unableÅo open objectÖack directory: %s: %s",

787 
∑th
, 
	`°ªº‹
(
î∫o
));

790 
∑th
[
Àn
++] = '/';

791 (
de
 = 
	`ªaddú
(
dú
)Ë!
NULL
) {

792 
«mñí
 = 
	`°æí
(
de
->
d_«me
);

793 
∑cked_gô
 *
p
;

795 i‡(!
	`has_exãnsi⁄
(
de
->
d_«me
, ".idx"))

799 
	`°r˝y
(
∑th
 + 
Àn
, 
de
->
d_«me
);

800 
p
 = 
∑cked_gô
;Ö;Ö =Ö->
√xt
) {

801 i‡(!
	`memcmp
(
∑th
, 
p
->
∑ck_«me
, 
Àn
 + 
«mñí
 - 4))

804 i‡(
p
)

809 
p
 = 
	`add_∑cked_gô
(
∑th
, 
Àn
 + 
«mñí
, 
loˇl
);

810 i‡(!
p
)

812 
	`ö°Æl_∑cked_gô
(
p
);

814 
	`˛o£dú
(
dú
);

815 
	}
}

817 
	g¥ï¨e_∑cked_gô_run_⁄˚
 = 0;

818 
	$¥ï¨e_∑cked_gô
()

820 
Æã∫©e_obje˘_d©aba£
 *
Æt
;

822 i‡(
¥ï¨e_∑cked_gô_run_⁄˚
)

824 
	`¥ï¨e_∑cked_gô_⁄e
(
	`gë_obje˘_dúe˘‹y
(), 1);

825 
	`¥ï¨e_Æt_odb
();

826 
Æt
 = 
Æt_odb_li°
;á…;á… =á…->
√xt
) {

827 
Æt
->
«me
[-1] = 0;

828 
	`¥ï¨e_∑cked_gô_⁄e
(
Æt
->
ba£
, 0);

829 
Æt
->
«me
[-1] = '/';

831 
¥ï¨e_∑cked_gô_run_⁄˚
 = 1;

832 
	}
}

834 
	$ª¥ï¨e_∑cked_gô
()

836 
¥ï¨e_∑cked_gô_run_⁄˚
 = 0;

837 
	`¥ï¨e_∑cked_gô
();

838 
	}
}

840 
	$check_sha1_sig«tuª
(c⁄° *
sha1
, *
m≠
, 
size
, c⁄° *
ty≥
)

842 
ªÆ_sha1
[20];

843 
	`hash_sha1_fûe
(
m≠
, 
size
, 
ty≥
, 
ªÆ_sha1
);

844  
	`hashcmp
(
sha1
, 
ªÆ_sha1
) ? -1 : 0;

845 
	}
}

847 *
	$m≠_sha1_fûe
(c⁄° *
sha1
, *
size
)

849 
°©
 
°
;

850 *
m≠
;

851 
fd
;

852 *
fûíame
 = 
	`föd_sha1_fûe
(
sha1
, &
°
);

854 i‡(!
fûíame
) {

855  
NULL
;

858 
fd
 = 
	`›í
(
fûíame
, 
O_RDONLY
 | 
sha1_fûe_›í_Êag
);

859 i‡(
fd
 < 0) {

861 
sha1_fûe_›í_Êag
) {

863 
fd
 = 
	`›í
(
fûíame
, 
O_RDONLY
);

864 i‡(
fd
 >= 0)

868  
NULL
;

874 
sha1_fûe_›í_Êag
 = 0;

876 
m≠
 = 
	`xmm≠
(
NULL
, 
°
.
°_size
, 
PROT_READ
, 
MAP_PRIVATE
, 
fd
, 0);

877 
	`˛o£
(
fd
);

878 *
size
 = 
°
.
°_size
;

879  
m≠
;

880 
	}
}

882 
	$Àgacy_loo£_obje˘
(*
m≠
)

884 
w‹d
;

891 
w‹d
 = (
m≠
[0] << 8) + map[1];

892 i‡(
m≠
[0] =0x78 && !(
w‹d
 % 31))

896 
	}
}

898 
	$u≈ack_obje˘_hódî_gíéy
(c⁄° *
buf
, 
Àn
, 
obje˘_ty≥
 *
ty≥
, *
sizï
)

900 
shi·
;

901 
c
;

902 
size
;

903 
u£d
 = 0;

905 
c
 = 
buf
[
u£d
++];

906 *
ty≥
 = (
c
 >> 4) & 7;

907 
size
 = 
c
 & 15;

908 
shi·
 = 4;

909 
c
 & 0x80) {

910 i‡(
Àn
 <
u£d
)

912 i‡((Ë* 8 <
shi·
)

914 
c
 = 
buf
[
u£d
++];

915 
size
 +(
c
 & 0x7fË<< 
shi·
;

916 
shi·
 += 7;

918 *
sizï
 = 
size
;

919  
u£d
;

920 
	}
}

922 
	$u≈ack_sha1_hódî
(
z_°ªam
 *
°ªam
, *
m≠
, 
m≠size
, *
buf„r
, 
bufsiz
)

924 
size
, 
u£d
;

925 c⁄° 
vÆid_loo£_obje˘_ty≥
[8] = {

930 
obje˘_ty≥
 
ty≥
;

933 
	`mem£t
(
°ªam
, 0, (*stream));

934 
°ªam
->
√xt_ö
 = 
m≠
;

935 
°ªam
->
avaû_ö
 = 
m≠size
;

936 
°ªam
->
√xt_out
 = 
buf„r
;

937 
°ªam
->
avaû_out
 = 
bufsiz
;

939 i‡(
	`Àgacy_loo£_obje˘
(
m≠
)) {

940 
	`öÊ©eInô
(
°ªam
);

941  
	`öÊ©e
(
°ªam
, 0);

944 
u£d
 = 
	`u≈ack_obje˘_hódî_gíéy
(
m≠
, 
m≠size
, &
ty≥
, &
size
);

945 i‡(!
u£d
 || !
vÆid_loo£_obje˘_ty≥
[
ty≥
])

947 
m≠
 +
u£d
;

948 
m≠size
 -
u£d
;

951 
°ªam
->
√xt_ö
 = 
m≠
;

952 
°ªam
->
avaû_ö
 = 
m≠size
;

953 
	`öÊ©eInô
(
°ªam
);

956 
°ªam
->
tŸÆ_out
 = 1 + 
	`¢¥ötf
(
buf„r
, 
bufsiz
, "%s %lu",

957 
ty≥_«mes
[
ty≥
], 
size
);

959 
	}
}

961 *
	$u≈ack_sha1_ª°
(
z_°ªam
 *
°ªam
, *
buf„r
, 
size
)

963 
byãs
 = 
	`°æí
(
buf„r
) + 1;

964 *
buf
 = 
	`xmÆloc
(1+
size
);

965 
n
;

967 
n
 = 
°ªam
->
tŸÆ_out
 - 
byãs
;

968 i‡(
n
 > 
size
)

969 
n
 = 
size
;

970 
	`mem˝y
(
buf
, (*Ë
buf„r
 + 
byãs
, 
n
);

971 
byãs
 = 
n
;

972 i‡(
byãs
 < 
size
) {

973 
°ªam
->
√xt_out
 = 
buf
 + 
byãs
;

974 
°ªam
->
avaû_out
 = 
size
 - 
byãs
;

975 
	`öÊ©e
(
°ªam
, 
Z_FINISH
Ë=
Z_OK
)

978 
buf
[
size
] = 0;

979 
	`öÊ©eEnd
(
°ªam
);

980  
buf
;

981 
	}
}

988 
	$∑r£_sha1_hódî
(*
hdr
, *
ty≥
, *
sizï
)

990 
i
;

991 
size
;

998 
i
 = 10;

1000 
c
 = *
hdr
++;

1001 i‡(
c
 == ' ')

1003 i‡(!--
i
)

1005 *
ty≥
++ = 
c
;

1007 *
ty≥
 = 0;

1013 
size
 = *
hdr
++ - '0';

1014 i‡(
size
 > 9)

1016 i‡(
size
) {

1018 
c
 = *
hdr
 - '0';

1019 i‡(
c
 > 9)

1021 
hdr
++;

1022 
size
 = sizê* 10 + 
c
;

1025 *
sizï
 = 
size
;

1030  *
hdr
 ? -1 : 0;

1031 
	}
}

1033 * 
	$u≈ack_sha1_fûe
(*
m≠
, 
m≠size
, *
ty≥
, *
size
)

1035 
ªt
;

1036 
z_°ªam
 
°ªam
;

1037 
hdr
[8192];

1039 
ªt
 = 
	`u≈ack_sha1_hódî
(&
°ªam
, 
m≠
, 
m≠size
, 
hdr
, (hdr));

1040 i‡(
ªt
 < 
Z_OK
 || 
	`∑r£_sha1_hódî
(
hdr
, 
ty≥
, 
size
) < 0)

1041  
NULL
;

1043  
	`u≈ack_sha1_ª°
(&
°ªam
, 
hdr
, *
size
);

1044 
	}
}

1046 
	$gë_dñè_ba£
(
∑cked_gô
 *
p
,

1047 
∑ck_wödow
 **
w_curs
,

1048 
off£t
,

1049 
obje˘_ty≥
 
köd
,

1050 
dñè_obj_off£t
,

1051 *
ba£_obj_off£t
)

1053 *
ba£_öfo
 = 
	`u£_∑ck
(
p
, 
w_curs
, 
off£t
, 
NULL
);

1054 
ba£_off£t
;

1062 i‡(
köd
 =
OBJ_OFS_DELTA
) {

1063 
u£d
 = 0;

1064 
c
 = 
ba£_öfo
[
u£d
++];

1065 
ba£_off£t
 = 
c
 & 127;

1066 
c
 & 128) {

1067 
ba£_off£t
 += 1;

1068 i‡(!
ba£_off£t
 || base_offset & ~(~0UL >> 7))

1069 
	`dõ
("offset value overflow for delta base object");

1070 
c
 = 
ba£_öfo
[
u£d
++];

1071 
ba£_off£t
 = (ba£_off£à<< 7Ë+ (
c
 & 127);

1073 
ba£_off£t
 = 
dñè_obj_off£t
 - base_offset;

1074 i‡(
ba£_off£t
 >
dñè_obj_off£t
)

1075 
	`dõ
("delta base offset out of bound");

1076 
off£t
 +
u£d
;

1077 } i‡(
köd
 =
OBJ_REF_DELTA
) {

1079 
ba£_off£t
 = 
	`föd_∑ck_íåy_⁄e
(
ba£_öfo
, 
p
);

1080 i‡(!
ba£_off£t
)

1081 
	`dõ
("failedÅo find delta-pack base object %s",

1082 
	`sha1_to_hex
(
ba£_öfo
));

1083 
off£t
 += 20;

1085 
	`dõ
("IámÅotally screwed");

1086 *
ba£_obj_off£t
 = 
ba£_off£t
;

1087  
off£t
;

1088 
	}
}

1091 
∑cked_obje˘_öfo
(
∑cked_gô
 *
p
, 
off£t
,

1092 *
ty≥
, *
sizï
);

1094 
	$∑cked_dñè_öfo
(
∑cked_gô
 *
p
,

1095 
∑ck_wödow
 **
w_curs
,

1096 
off£t
,

1097 
obje˘_ty≥
 
köd
,

1098 
obj_off£t
,

1099 *
ty≥
,

1100 *
sizï
)

1102 
ba£_off£t
;

1104 
off£t
 = 
	`gë_dñè_ba£
(
p
, 
w_curs
, off£t, 
köd
,

1105 
obj_off£t
, &
ba£_off£t
);

1112 i‡(
	`∑cked_obje˘_öfo
(
p
, 
ba£_off£t
, 
ty≥
, 
NULL
))

1113 
	`dõ
("cannot get info for delta-pack base");

1115 i‡(
sizï
) {

1116 c⁄° *
d©a
;

1117 
dñè_hód
[20], *
ö
;

1118 
ªsu…_size
;

1119 
z_°ªam
 
°ªam
;

1120 
°
;

1122 
	`mem£t
(&
°ªam
, 0, (stream));

1123 
°ªam
.
√xt_out
 = 
dñè_hód
;

1124 
°ªam
.
avaû_out
 = (
dñè_hód
);

1126 
	`öÊ©eInô
(&
°ªam
);

1128 
ö
 = 
	`u£_∑ck
(
p
, 
w_curs
, 
off£t
, &
°ªam
.
avaû_ö
);

1129 
°ªam
.
√xt_ö
 = 
ö
;

1130 
°
 = 
	`öÊ©e
(&
°ªam
, 
Z_FINISH
);

1131 
off£t
 +
°ªam
.
√xt_ö
 - 
ö
;

1132 } (
°
 =
Z_OK
 || sà=
Z_BUF_ERROR
)

1133 && 
°ªam
.
tŸÆ_out
 < (
dñè_hód
));

1134 
	`öÊ©eEnd
(&
°ªam
);

1135 i‡((
°
 !
Z_STREAM_END
) &&

1136 
°ªam
.
tŸÆ_out
 !(
dñè_hód
))

1137 
	`dõ
("delta data unpack-initial failed");

1142 
d©a
 = 
dñè_hód
;

1145 
	`gë_dñè_hdr_size
(&
d©a
, 
dñè_hód
+(delta_head));

1148 
ªsu…_size
 = 
	`gë_dñè_hdr_size
(&
d©a
, 
dñè_hód
+(delta_head));

1149 *
sizï
 = 
ªsu…_size
;

1152 
	}
}

1154 
	$u≈ack_obje˘_hódî
(
∑cked_gô
 *
p
,

1155 
∑ck_wödow
 **
w_curs
,

1156 
off£t
,

1157 
obje˘_ty≥
 *
ty≥
,

1158 *
sizï
)

1160 *
ba£
;

1161 
À·
;

1162 
u£d
;

1170 
ba£
 = 
	`u£_∑ck
(
p
, 
w_curs
, 
off£t
, &
À·
);

1171 
u£d
 = 
	`u≈ack_obje˘_hódî_gíéy
(
ba£
, 
À·
, 
ty≥
, 
sizï
);

1172 i‡(!
u£d
)

1173 
	`dõ
("object offset outside ofÖack file");

1175  
off£t
 + 
u£d
;

1176 
	}
}

1178 
	$∑cked_obje˘_öfo_dëaû
(
∑cked_gô
 *
p
,

1179 
off£t
,

1180 *
ty≥
,

1181 *
size
,

1182 *
°‹e_size
,

1183 *
dñè_chaö_Àngth
,

1184 *
ba£_sha1
)

1186 
∑ck_wödow
 *
w_curs
 = 
NULL
;

1187 
obj_off£t
, 
vÆ
;

1188 *
√xt_sha1
;

1189 
obje˘_ty≥
 
köd
;

1191 *
dñè_chaö_Àngth
 = 0;

1192 
obj_off£t
 = 
off£t
;

1193 
off£t
 = 
	`u≈ack_obje˘_hódî
(
p
, &
w_curs
, off£t, &
köd
, 
size
);

1196 
köd
) {

1198 
	`dõ
("pack %s contains unknown objectÅype %d",

1199 
p
->
∑ck_«me
, 
köd
);

1200 
OBJ_COMMIT
:

1201 
OBJ_TREE
:

1202 
OBJ_BLOB
:

1203 
OBJ_TAG
:

1204 
	`°r˝y
(
ty≥
, 
ty≥_«mes
[
köd
]);

1205 *
°‹e_size
 = 0;

1206 
	`unu£_∑ck
(&
w_curs
);

1208 
OBJ_OFS_DELTA
:

1209 
	`gë_dñè_ba£
(
p
, &
w_curs
, 
off£t
, 
köd
,

1210 
obj_off£t
, &
off£t
);

1211 i‡(*
dñè_chaö_Àngth
 == 0) {

1215 
OBJ_REF_DELTA
:

1216 
√xt_sha1
 = 
	`u£_∑ck
(
p
, &
w_curs
, 
off£t
, 
NULL
);

1217 i‡(*
dñè_chaö_Àngth
 == 0)

1218 
	`hash˝y
(
ba£_sha1
, 
√xt_sha1
);

1219 
off£t
 = 
	`föd_∑ck_íåy_⁄e
(
√xt_sha1
, 
p
);

1222 
obj_off£t
 = 
off£t
;

1223 
off£t
 = 
	`u≈ack_obje˘_hódî
(
p
, &
w_curs
, off£t, &
köd
, &
vÆ
);

1224 (*
dñè_chaö_Àngth
)++;

1226 
	}
}

1228 
	$∑cked_obje˘_öfo
(
∑cked_gô
 *
p
, 
off£t
,

1229 *
ty≥
, *
sizï
)

1231 
∑ck_wödow
 *
w_curs
 = 
NULL
;

1232 
size
, 
obj_off£t
 = 
off£t
;

1233 
obje˘_ty≥
 
köd
;

1234 
r
;

1236 
off£t
 = 
	`u≈ack_obje˘_hódî
(
p
, &
w_curs
, off£t, &
köd
, &
size
);

1238 
köd
) {

1239 
OBJ_OFS_DELTA
:

1240 
OBJ_REF_DELTA
:

1241 
r
 = 
	`∑cked_dñè_öfo
(
p
, &
w_curs
, 
off£t
, 
köd
,

1242 
obj_off£t
, 
ty≥
, 
sizï
);

1243 
	`unu£_∑ck
(&
w_curs
);

1244  
r
;

1245 
OBJ_COMMIT
:

1246 
OBJ_TREE
:

1247 
OBJ_BLOB
:

1248 
OBJ_TAG
:

1249 
	`°r˝y
(
ty≥
, 
ty≥_«mes
[
köd
]);

1250 
	`unu£_∑ck
(&
w_curs
);

1253 
	`dõ
("pack %s contains unknown objectÅype %d",

1254 
p
->
∑ck_«me
, 
köd
);

1256 i‡(
sizï
)

1257 *
sizï
 = 
size
;

1259 
	}
}

1261 *
	$u≈ack_com¥es£d_íåy
(
∑cked_gô
 *
p
,

1262 
∑ck_wödow
 **
w_curs
,

1263 
off£t
,

1264 
size
)

1266 
°
;

1267 
z_°ªam
 
°ªam
;

1268 *
buf„r
, *
ö
;

1270 
buf„r
 = 
	`xmÆloc
(
size
 + 1);

1271 
buf„r
[
size
] = 0;

1272 
	`mem£t
(&
°ªam
, 0, (stream));

1273 
°ªam
.
√xt_out
 = 
buf„r
;

1274 
°ªam
.
avaû_out
 = 
size
;

1276 
	`öÊ©eInô
(&
°ªam
);

1278 
ö
 = 
	`u£_∑ck
(
p
, 
w_curs
, 
off£t
, &
°ªam
.
avaû_ö
);

1279 
°ªam
.
√xt_ö
 = 
ö
;

1280 
°
 = 
	`öÊ©e
(&
°ªam
, 
Z_FINISH
);

1281 
off£t
 +
°ªam
.
√xt_ö
 - 
ö
;

1282 } 
°
 =
Z_OK
 || sà=
Z_BUF_ERROR
);

1283 
	`öÊ©eEnd
(&
°ªam
);

1284 i‡((
°
 !
Z_STREAM_END
Ë|| 
°ªam
.
tŸÆ_out
 !
size
) {

1285 
	`‰ì
(
buf„r
);

1286  
NULL
;

1289  
buf„r
;

1290 
	}
}

1292 *
	$u≈ack_dñè_íåy
(
∑cked_gô
 *
p
,

1293 
∑ck_wödow
 **
w_curs
,

1294 
off£t
,

1295 
dñè_size
,

1296 
obje˘_ty≥
 
köd
,

1297 
obj_off£t
,

1298 *
ty≥
,

1299 *
sizï
)

1301 *
dñè_d©a
, *
ªsu…
, *
ba£
;

1302 
ªsu…_size
, 
ba£_size
, 
ba£_off£t
;

1304 
off£t
 = 
	`gë_dñè_ba£
(
p
, 
w_curs
, off£t, 
köd
,

1305 
obj_off£t
, &
ba£_off£t
);

1306 
ba£
 = 
	`u≈ack_íåy
(
p
, 
ba£_off£t
, 
ty≥
, &
ba£_size
);

1307 i‡(!
ba£
)

1308 
	`dõ
("failedÅoÑead delta base objectát %lu from %s",

1309 
ba£_off£t
, 
p
->
∑ck_«me
);

1311 
dñè_d©a
 = 
	`u≈ack_com¥es£d_íåy
(
p
, 
w_curs
, 
off£t
, 
dñè_size
);

1312 
ªsu…
 = 
	`∑tch_dñè
(
ba£
, 
ba£_size
,

1313 
dñè_d©a
, 
dñè_size
,

1314 &
ªsu…_size
);

1315 i‡(!
ªsu…
)

1316 
	`dõ
("failedÅoápply delta");

1317 
	`‰ì
(
dñè_d©a
);

1318 
	`‰ì
(
ba£
);

1319 *
sizï
 = 
ªsu…_size
;

1320  
ªsu…
;

1321 
	}
}

1323 *
	$u≈ack_íåy
(
∑cked_gô
 *
p
, 
off£t
,

1324 *
ty≥
, *
sizï
)

1326 
∑ck_wödow
 *
w_curs
 = 
NULL
;

1327 
size
, 
obj_off£t
 = 
off£t
;

1328 
obje˘_ty≥
 
köd
;

1329 *
ªtvÆ
;

1331 
off£t
 = 
	`u≈ack_obje˘_hódî
(
p
, &
w_curs
, off£t, &
köd
, &
size
);

1332 
köd
) {

1333 
OBJ_OFS_DELTA
:

1334 
OBJ_REF_DELTA
:

1335 
ªtvÆ
 = 
	`u≈ack_dñè_íåy
(
p
, &
w_curs
, 
off£t
, 
size
,

1336 
köd
, 
obj_off£t
, 
ty≥
, 
sizï
);

1338 
OBJ_COMMIT
:

1339 
OBJ_TREE
:

1340 
OBJ_BLOB
:

1341 
OBJ_TAG
:

1342 
	`°r˝y
(
ty≥
, 
ty≥_«mes
[
köd
]);

1343 *
sizï
 = 
size
;

1344 
ªtvÆ
 = 
	`u≈ack_com¥es£d_íåy
(
p
, &
w_curs
, 
off£t
, 
size
);

1347 
	`dõ
("unknow¿obje˘Åy≥ %òö %s", 
köd
, 
p
->
∑ck_«me
);

1349 
	`unu£_∑ck
(&
w_curs
);

1350  
ªtvÆ
;

1351 
	}
}

1353 
	$num_∑cked_obje˘s
(c⁄° 
∑cked_gô
 *
p
)

1356  (
p
->
ödex_size
 - 20 - 20 - 4*256) / 24;

1357 
	}
}

1359 
	$¡h_∑cked_obje˘_sha1
(c⁄° 
∑cked_gô
 *
p
, 
n
,

1360 * 
sha1
)

1362 *
ödex
 = 
p
->
ödex_ba£
 + 256;

1363 i‡(
n
 < 0 || 
	`num_∑cked_obje˘s
(
p
) <=Ç)

1365 
	`hash˝y
(
sha1
, (*Ë
ödex
 + (24 * 
n
) + 4);

1367 
	}
}

1369 
	$föd_∑ck_íåy_⁄e
(c⁄° *
sha1
,

1370 
∑cked_gô
 *
p
)

1372 
uöt32_t
 *
Àvñ1_ofs
 = 
p
->
ödex_ba£
;

1373 
hi
 = 
	`¡ohl
(
Àvñ1_ofs
[*
sha1
]);

1374 
lo
 = ((*
sha1
 =0x0Ë? 0 : 
	`¡ohl
(
Àvñ1_ofs
[*sha1 - 1]));

1375 *
ödex
 = 
p
->
ödex_ba£
 + 256;

1378 
mi
 = (
lo
 + 
hi
) / 2;

1379 
cmp
 = 
	`hashcmp
((*)
ödex
 + (24 * 
mi
Ë+ 4, 
sha1
);

1380 i‡(!
cmp
)

1381  
	`¡ohl
(*((
uöt32_t
 *)((*)
ödex
 + (24 * 
mi
))));

1382 i‡(
cmp
 > 0)

1383 
hi
 = 
mi
;

1385 
lo
 = 
mi
+1;

1386 } 
lo
 < 
hi
);

1388 
	}
}

1390 
	$m©ches_∑ck_«me
(
∑cked_gô
 *
p
, c⁄° *
ig
)

1392 c⁄° *
œ°_c
, *
c
;

1394 i‡(!
	`°rcmp
(
p
->
∑ck_«me
, 
ig
))

1397 
c
 = 
p
->
∑ck_«me
, 
œ°_c
 = c; *c;)

1398 i‡(*
c
 == '/')

1399 
œ°_c
 = ++
c
;

1401 ++
c
;

1402 i‡(!
	`°rcmp
(
œ°_c
, 
ig
))

1406 
	}
}

1408 
	$föd_∑ck_íåy
(c⁄° *
sha1
, 
∑ck_íåy
 *
e
, c⁄° **
ign‹e_∑cked
)

1410 
∑cked_gô
 *
p
;

1411 
off£t
;

1413 
	`¥ï¨e_∑cked_gô
();

1415 
p
 = 
∑cked_gô
;Ö;Ö =Ö->
√xt
) {

1416 i‡(
ign‹e_∑cked
) {

1417 c⁄° **
ig
;

1418 
ig
 = 
ign‹e_∑cked
; *ig; ig++)

1419 i‡(!
	`m©ches_∑ck_«me
(
p
, *
ig
))

1421 i‡(*
ig
)

1424 
off£t
 = 
	`föd_∑ck_íåy_⁄e
(
sha1
, 
p
);

1425 i‡(
off£t
) {

1434 i‡(
p
->
∑ck_fd
 =-1 && 
	`›í_∑cked_gô
(p)) {

1435 
	`îr‹
("∑ckfûê%†ˇ¬Ÿ bêac˚s£d", 
p
->
∑ck_«me
);

1438 
e
->
off£t
 = offset;

1439 
e
->
p
 =Ö;

1440 
	`hash˝y
(
e
->
sha1
, sha1);

1445 
	}
}

1447 
∑cked_gô
 *
	$föd_sha1_∑ck
(c⁄° *
sha1
,

1448 
∑cked_gô
 *
∑cks
)

1450 
∑cked_gô
 *
p
;

1452 
p
 = 
∑cks
;Ö;Ö =Ö->
√xt
) {

1453 i‡(
	`föd_∑ck_íåy_⁄e
(
sha1
, 
p
))

1454  
p
;

1456  
NULL
;

1458 
	}
}

1460 
	$sha1_loo£_obje˘_öfo
(c⁄° *
sha1
, *
ty≥
, *
sizï
)

1462 
°©us
;

1463 
m≠size
, 
size
;

1464 *
m≠
;

1465 
z_°ªam
 
°ªam
;

1466 
hdr
[128];

1468 
m≠
 = 
	`m≠_sha1_fûe
(
sha1
, &
m≠size
);

1469 i‡(!
m≠
)

1470  
	`îr‹
("u«bÀÅÿföd %s", 
	`sha1_to_hex
(
sha1
));

1471 i‡(
	`u≈ack_sha1_hódî
(&
°ªam
, 
m≠
, 
m≠size
, 
hdr
, (hdr)) < 0)

1472 
°©us
 = 
	`îr‹
("unableÅo unpack %s header",

1473 
	`sha1_to_hex
(
sha1
));

1474 i‡(
	`∑r£_sha1_hódî
(
hdr
, 
ty≥
, &
size
) < 0)

1475 
°©us
 = 
	`îr‹
("u«bÀÅÿ∑r£ %†hódî", 
	`sha1_to_hex
(
sha1
));

1477 
°©us
 = 0;

1478 i‡(
sizï
)

1479 *
sizï
 = 
size
;

1481 
	`öÊ©eEnd
(&
°ªam
);

1482 
	`munm≠
(
m≠
, 
m≠size
);

1483  
°©us
;

1484 
	}
}

1486 
	$sha1_obje˘_öfo
(c⁄° *
sha1
, *
ty≥
, *
sizï
)

1488 
∑ck_íåy
 
e
;

1490 i‡(!
	`föd_∑ck_íåy
(
sha1
, &
e
, 
NULL
)) {

1491 
	`ª¥ï¨e_∑cked_gô
();

1492 i‡(!
	`föd_∑ck_íåy
(
sha1
, &
e
, 
NULL
))

1493  
	`sha1_loo£_obje˘_öfo
(
sha1
, 
ty≥
, 
sizï
);

1495  
	`∑cked_obje˘_öfo
(
e
.
p
,É.
off£t
, 
ty≥
, 
sizï
);

1496 
	}
}

1498 *
	$ªad_∑cked_sha1
(c⁄° *
sha1
, *
ty≥
, *
size
)

1500 
∑ck_íåy
 
e
;

1502 i‡(!
	`föd_∑ck_íåy
(
sha1
, &
e
, 
NULL
))

1503  
NULL
;

1505  
	`u≈ack_íåy
(
e
.
p
,É.
off£t
, 
ty≥
, 
size
);

1506 
	}
}

1514 
	sˇched_obje˘
 {

1515 
	msha1
[20];

1516 c⁄° *
	mty≥
;

1517 *
	mbuf
;

1518 
	msize
;

1519 } *
	gˇched_obje˘s
;

1520 
	gˇched_obje˘_ƒ
, 
	gˇched_obje˘_Æloc
;

1522 
ˇched_obje˘
 *
	$föd_ˇched_obje˘
(c⁄° *
sha1
)

1524 
i
;

1525 
ˇched_obje˘
 *
co
 = 
ˇched_obje˘s
;

1527 
i
 = 0; i < 
ˇched_obje˘_ƒ
; i++, 
co
++) {

1528 i‡(!
	`hashcmp
(
co
->
sha1
, sha1))

1529  
co
;

1531  
NULL
;

1532 
	}
}

1534 
	$¥ëíd_sha1_fûe
(*
buf
, 
Àn
, c⁄° *
ty≥
, *
sha1
)

1536 
ˇched_obje˘
 *
co
;

1538 
	`hash_sha1_fûe
(
buf
, 
Àn
, 
ty≥
, 
sha1
);

1539 i‡(
	`has_sha1_fûe
(
sha1
Ë|| 
	`föd_ˇched_obje˘
(sha1))

1541 i‡(
ˇched_obje˘_Æloc
 <
ˇched_obje˘_ƒ
) {

1542 
ˇched_obje˘_Æloc
 = 
	`Æloc_ƒ
(cached_object_alloc);

1543 
ˇched_obje˘s
 = 
	`xªÆloc
(cached_objects,

1544 (*
ˇched_obje˘s
) *

1545 
ˇched_obje˘_Æloc
);

1547 
co
 = &
ˇched_obje˘s
[
ˇched_obje˘_ƒ
++];

1548 
co
->
size
 = 
Àn
;

1549 
co
->
ty≥
 = 
	`°rdup
(type);

1550 
	`hash˝y
(
co
->
sha1
, sha1);

1552 
	}
}

1554 * 
	$ªad_sha1_fûe
(c⁄° *
sha1
, *
ty≥
, *
size
)

1556 
m≠size
;

1557 *
m≠
, *
buf
;

1558 
ˇched_obje˘
 *
co
;

1560 
co
 = 
	`föd_ˇched_obje˘
(
sha1
);

1561 i‡(
co
) {

1562 
buf
 = 
	`xmÆloc
(
co
->
size
 + 1);

1563 
	`mem˝y
(
buf
, 
co
->buf, co->
size
);

1564 ((*)
buf
)[
co
->
size
] = 0;

1565 
	`°r˝y
(
ty≥
, 
co
->type);

1566 *
size
 = 
co
->size;

1567  
buf
;

1570 
buf
 = 
	`ªad_∑cked_sha1
(
sha1
, 
ty≥
, 
size
);

1571 i‡(
buf
)

1572  
buf
;

1573 
m≠
 = 
	`m≠_sha1_fûe
(
sha1
, &
m≠size
);

1574 i‡(
m≠
) {

1575 
buf
 = 
	`u≈ack_sha1_fûe
(
m≠
, 
m≠size
, 
ty≥
, 
size
);

1576 
	`munm≠
(
m≠
, 
m≠size
);

1577  
buf
;

1579 
	`ª¥ï¨e_∑cked_gô
();

1580  
	`ªad_∑cked_sha1
(
sha1
, 
ty≥
, 
size
);

1581 
	}
}

1583 *
	$ªad_obje˘_wôh_ª„ªn˚
(c⁄° *
sha1
,

1584 c⁄° *
ªquúed_ty≥
,

1585 *
size
,

1586 *
a˘uÆ_sha1_ªtu∫
)

1588 
ty≥
[20];

1589 *
buf„r
;

1590 
isize
;

1591 
a˘uÆ_sha1
[20];

1593 
	`hash˝y
(
a˘uÆ_sha1
, 
sha1
);

1595 
ªf_Àngth
 = -1;

1596 c⁄° *
ªf_ty≥
 = 
NULL
;

1598 
buf„r
 = 
	`ªad_sha1_fûe
(
a˘uÆ_sha1
, 
ty≥
, &
isize
);

1599 i‡(!
buf„r
)

1600  
NULL
;

1601 i‡(!
	`°rcmp
(
ty≥
, 
ªquúed_ty≥
)) {

1602 *
size
 = 
isize
;

1603 i‡(
a˘uÆ_sha1_ªtu∫
)

1604 
	`hash˝y
(
a˘uÆ_sha1_ªtu∫
, 
a˘uÆ_sha1
);

1605  
buf„r
;

1608 i‡(!
	`°rcmp
(
ty≥
, 
commô_ty≥
))

1609 
ªf_ty≥
 = "tree ";

1610 i‡(!
	`°rcmp
(
ty≥
, 
èg_ty≥
))

1611 
ªf_ty≥
 = "object ";

1613 
	`‰ì
(
buf„r
);

1614  
NULL
;

1616 
ªf_Àngth
 = 
	`°æí
(
ªf_ty≥
);

1618 i‡(
	`memcmp
(
buf„r
, 
ªf_ty≥
, 
ªf_Àngth
) ||

1619 
	`gë_sha1_hex
((*Ë
buf„r
 + 
ªf_Àngth
, 
a˘uÆ_sha1
)) {

1620 
	`‰ì
(
buf„r
);

1621  
NULL
;

1623 
	`‰ì
(
buf„r
);

1627 
	}
}

1629 
	$wrôe_sha1_fûe_¥ï¨e
(*
buf
, 
Àn
,

1630 c⁄° *
ty≥
, *
sha1
,

1631 *
hdr
, *
hdæí
)

1633 
SHA_CTX
 
c
;

1636 *
hdæí
 = 
	`•rötf
((*)
hdr
, "%†%lu", 
ty≥
, 
Àn
)+1;

1639 
	`SHA1_Inô
(&
c
);

1640 
	`SHA1_Upd©e
(&
c
, 
hdr
, *
hdæí
);

1641 
	`SHA1_Upd©e
(&
c
, 
buf
, 
Àn
);

1642 
	`SHA1_FöÆ
(
sha1
, &
c
);

1643 
	}
}

1651 
	$lök_ãmp_to_fûe
(c⁄° *
tmpfûe
, c⁄° *
fûíame
)

1653 
ªt
;

1654 *
dú
;

1656 i‡(!
	`lök
(
tmpfûe
, 
fûíame
))

1666 
ªt
 = 
î∫o
;

1667 
dú
 = 
	`°ºchr
(
fûíame
, '/');

1668 i‡(
dú
) {

1669 *
dú
 = 0;

1670 i‡(!
	`mkdú
(
fûíame
, 0777Ë&& 
	`adju°_sh¨ed_≥rm
(filename)) {

1671 *
dú
 = '/';

1674 *
dú
 = '/';

1675 i‡(!
	`lök
(
tmpfûe
, 
fûíame
))

1677 
ªt
 = 
î∫o
;

1679  
ªt
;

1680 
	}
}

1685 
	$move_ãmp_to_fûe
(c⁄° *
tmpfûe
, c⁄° *
fûíame
)

1687 
ªt
 = 
	`lök_ãmp_to_fûe
(
tmpfûe
, 
fûíame
);

1700 i‡(
ªt
 &&Ñë !
EEXIST
) {

1701 i‡(!
	`ª«me
(
tmpfûe
, 
fûíame
))

1703 
ªt
 = 
î∫o
;

1705 
	`u∆ök
(
tmpfûe
);

1706 i‡(
ªt
) {

1707 i‡(
ªt
 !
EEXIST
) {

1708  
	`îr‹
("u«bÀÅÿwrôêsha1 fûíamê%s: %s\n", 
fûíame
, 
	`°ªº‹
(
ªt
));

1714 
	}
}

1716 
	$wrôe_buf„r
(
fd
, c⁄° *
buf
, 
size_t
 
Àn
)

1718 i‡(
	`wrôe_ö_fuŒ
(
fd
, 
buf
, 
Àn
) < 0)

1719  
	`îr‹
("fûêwrôêîr‹ (%s)", 
	`°ªº‹
(
î∫o
));

1721 
	}
}

1723 
	$wrôe_bö¨y_hódî
(*
hdr
, 
obje˘_ty≥
 
ty≥
, 
Àn
)

1725 
hdr_Àn
;

1726 
c
;

1728 
c
 = (
ty≥
 << 4Ë| (
Àn
 & 15);

1729 
Àn
 >>= 4;

1730 
hdr_Àn
 = 1;

1731 
Àn
) {

1732 *
hdr
++ = 
c
 | 0x80;

1733 
hdr_Àn
++;

1734 
c
 = (
Àn
 & 0x7f);

1735 
Àn
 >>= 7;

1737 *
hdr
 = 
c
;

1738  
hdr_Àn
;

1739 
	}
}

1741 
	$£tup_obje˘_hódî
(
z_°ªam
 *
°ªam
, c⁄° *
ty≥
, 
Àn
)

1743 
obj_ty≥
, 
hdr
;

1745 i‡(
u£_Àgacy_hódîs
) {

1746 
	`deÊ©e
(
°ªam
, 0Ë=
Z_OK
)

1750 i‡(!
	`°rcmp
(
ty≥
, 
blob_ty≥
))

1751 
obj_ty≥
 = 
OBJ_BLOB
;

1752 i‡(!
	`°rcmp
(
ty≥
, 
åì_ty≥
))

1753 
obj_ty≥
 = 
OBJ_TREE
;

1754 i‡(!
	`°rcmp
(
ty≥
, 
commô_ty≥
))

1755 
obj_ty≥
 = 
OBJ_COMMIT
;

1756 i‡(!
	`°rcmp
(
ty≥
, 
èg_ty≥
))

1757 
obj_ty≥
 = 
OBJ_TAG
;

1759 
	`dõ
("åyögÅÿgíî©êbogu†obje˘ o‡ty≥ '%s'", 
ty≥
);

1760 
hdr
 = 
	`wrôe_bö¨y_hódî
(
°ªam
->
√xt_out
, 
obj_ty≥
, 
Àn
);

1761 
°ªam
->
tŸÆ_out
 = 
hdr
;

1762 
°ªam
->
√xt_out
 +
hdr
;

1763 
°ªam
->
avaû_out
 -
hdr
;

1764 
	}
}

1766 
	$hash_sha1_fûe
(*
buf
, 
Àn
, c⁄° *
ty≥
,

1767 *
sha1
)

1769 
hdr
[50];

1770 
hdæí
;

1771 
	`wrôe_sha1_fûe_¥ï¨e
(
buf
, 
Àn
, 
ty≥
, 
sha1
, 
hdr
, &
hdæí
);

1773 
	}
}

1775 
	$wrôe_sha1_fûe
(*
buf
, 
Àn
, c⁄° *
ty≥
, *
ªtu∫sha1
)

1777 
size
;

1778 *
com¥es£d
;

1779 
z_°ªam
 
°ªam
;

1780 
sha1
[20];

1781 *
fûíame
;

1782 
tmpfûe
[
PATH_MAX
];

1783 
hdr
[50];

1784 
fd
, 
hdæí
;

1789 
	`wrôe_sha1_fûe_¥ï¨e
(
buf
, 
Àn
, 
ty≥
, 
sha1
, 
hdr
, &
hdæí
);

1790 
fûíame
 = 
	`sha1_fûe_«me
(
sha1
);

1791 i‡(
ªtu∫sha1
)

1792 
	`hash˝y
(
ªtu∫sha1
, 
sha1
);

1793 i‡(
	`has_sha1_fûe
(
sha1
))

1795 
fd
 = 
	`›í
(
fûíame
, 
O_RDONLY
);

1796 i‡(
fd
 >= 0) {

1801 
	`˛o£
(
fd
);

1805 i‡(
î∫o
 !
ENOENT
) {

1806  
	`îr‹
("sha1 fûê%s: %s\n", 
fûíame
, 
	`°ªº‹
(
î∫o
));

1809 
	`¢¥ötf
(
tmpfûe
, —mpfûe), "%s/obj_XXXXXX", 
	`gë_obje˘_dúe˘‹y
());

1811 
fd
 = 
	`mk°emp
(
tmpfûe
);

1812 i‡(
fd
 < 0) {

1813 i‡(
î∫o
 =
EPERM
)

1814  
	`îr‹
("ösufficõ¡Öîmissi⁄ f‹áddögá¿obje˘Åÿªposô‹y d©aba£ %s\n", 
	`gë_obje˘_dúe˘‹y
());

1816  
	`îr‹
("u«bÀÅÿ¸óãÅemp‹¨y sha1 fûíamê%s: %s\n", 
tmpfûe
, 
	`°ªº‹
(
î∫o
));

1820 
	`mem£t
(&
°ªam
, 0, (stream));

1821 
	`deÊ©eInô
(&
°ªam
, 
zlib_com¥essi⁄_Àvñ
);

1822 
size
 = 8 + 
	`deÊ©eBound
(&
°ªam
, 
Àn
+
hdæí
);

1823 
com¥es£d
 = 
	`xmÆloc
(
size
);

1826 
°ªam
.
√xt_out
 = 
com¥es£d
;

1827 
°ªam
.
avaû_out
 = 
size
;

1830 
°ªam
.
√xt_ö
 = 
hdr
;

1831 
°ªam
.
avaû_ö
 = 
hdæí
;

1832 
	`£tup_obje˘_hódî
(&
°ªam
, 
ty≥
, 
Àn
);

1835 
°ªam
.
√xt_ö
 = 
buf
;

1836 
°ªam
.
avaû_ö
 = 
Àn
;

1837 
	`deÊ©e
(&
°ªam
, 
Z_FINISH
Ë=
Z_OK
)

1839 
	`deÊ©eEnd
(&
°ªam
);

1840 
size
 = 
°ªam
.
tŸÆ_out
;

1842 i‡(
	`wrôe_buf„r
(
fd
, 
com¥es£d
, 
size
) < 0)

1843 
	`dõ
("unableÅo write sha1 file");

1844 
	`fchmod
(
fd
, 0444);

1845 
	`˛o£
(
fd
);

1846 
	`‰ì
(
com¥es£d
);

1848  
	`move_ãmp_to_fûe
(
tmpfûe
, 
fûíame
);

1849 
	}
}

1855 *
	$ª∑ck_obje˘
(c⁄° *
sha1
, *
objsize
)

1857 
size_t
 
size
;

1858 
z_°ªam
 
°ªam
;

1859 *
u≈acked
;

1860 
Àn
;

1861 
ty≥
[20];

1862 
hdr
[50];

1863 
hdæí
;

1864 *
buf
;

1867 
u≈acked
 = 
	`ªad_∑cked_sha1
(
sha1
, 
ty≥
, &
Àn
);

1868 i‡(!
u≈acked
)

1869 
	`îr‹
("ˇ¬ŸÑód sha1_fûêf‹ %s", 
	`sha1_to_hex
(
sha1
));

1871 
hdæí
 = 
	`•rötf
(
hdr
, "%†%lu", 
ty≥
, 
Àn
) + 1;

1874 
	`mem£t
(&
°ªam
, 0, (stream));

1875 
	`deÊ©eInô
(&
°ªam
, 
zlib_com¥essi⁄_Àvñ
);

1876 
size
 = 
	`deÊ©eBound
(&
°ªam
, 
Àn
 + 
hdæí
);

1877 
buf
 = 
	`xmÆloc
(
size
);

1880 
°ªam
.
√xt_out
 = 
buf
;

1881 
°ªam
.
avaû_out
 = 
size
;

1884 
°ªam
.
√xt_ö
 = (*)
hdr
;

1885 
°ªam
.
avaû_ö
 = 
hdæí
;

1886 
	`deÊ©e
(&
°ªam
, 0Ë=
Z_OK
)

1890 
°ªam
.
√xt_ö
 = 
u≈acked
;

1891 
°ªam
.
avaû_ö
 = 
Àn
;

1892 
	`deÊ©e
(&
°ªam
, 
Z_FINISH
Ë=
Z_OK
)

1894 
	`deÊ©eEnd
(&
°ªam
);

1895 
	`‰ì
(
u≈acked
);

1897 *
objsize
 = 
°ªam
.
tŸÆ_out
;

1898  
buf
;

1899 
	}
}

1901 
	$wrôe_sha1_to_fd
(
fd
, c⁄° *
sha1
)

1903 
ªtvÆ
;

1904 
objsize
;

1905 *
buf
 = 
	`m≠_sha1_fûe
(
sha1
, &
objsize
);

1907 i‡(
buf
) {

1908 
ªtvÆ
 = 
	`wrôe_buf„r
(
fd
, 
buf
, 
objsize
);

1909 
	`munm≠
(
buf
, 
objsize
);

1910  
ªtvÆ
;

1913 
buf
 = 
	`ª∑ck_obje˘
(
sha1
, &
objsize
);

1914 
ªtvÆ
 = 
	`wrôe_buf„r
(
fd
, 
buf
, 
objsize
);

1915 
	`‰ì
(
buf
);

1916  
ªtvÆ
;

1917 
	}
}

1919 
	$wrôe_sha1_‰om_fd
(c⁄° *
sha1
, 
fd
, *
buf„r
,

1920 
size_t
 
bufsize
, size_à*
buÂo¢
)

1922 
tmpfûe
[
PATH_MAX
];

1923 
loˇl
;

1924 
z_°ªam
 
°ªam
;

1925 
ªÆ_sha1
[20];

1926 
disˇrd
[4096];

1927 
ªt
;

1928 
SHA_CTX
 
c
;

1930 
	`¢¥ötf
(
tmpfûe
, —mpfûe), "%s/obj_XXXXXX", 
	`gë_obje˘_dúe˘‹y
());

1932 
loˇl
 = 
	`mk°emp
(
tmpfûe
);

1933 i‡(
loˇl
 < 0) {

1934 i‡(
î∫o
 =
EPERM
)

1935  
	`îr‹
("ösufficõ¡Öîmissi⁄ f‹áddögá¿obje˘Åÿªposô‹y d©aba£ %s\n", 
	`gë_obje˘_dúe˘‹y
());

1937  
	`îr‹
("u«bÀÅÿ¸óãÅemp‹¨y sha1 fûíamê%s: %s\n", 
tmpfûe
, 
	`°ªº‹
(
î∫o
));

1940 
	`mem£t
(&
°ªam
, 0, (stream));

1942 
	`öÊ©eInô
(&
°ªam
);

1944 
	`SHA1_Inô
(&
c
);

1947 
ssize_t
 
size
;

1948 i‡(*
buÂo¢
) {

1949 
°ªam
.
avaû_ö
 = *
buÂo¢
;

1950 
°ªam
.
√xt_ö
 = (*Ë
buf„r
;

1952 
°ªam
.
√xt_out
 = 
disˇrd
;

1953 
°ªam
.
avaû_out
 = (
disˇrd
);

1954 
ªt
 = 
	`öÊ©e
(&
°ªam
, 
Z_SYNC_FLUSH
);

1955 
	`SHA1_Upd©e
(&
c
, 
disˇrd
, (discard) -

1956 
°ªam
.
avaû_out
);

1957 } 
°ªam
.
avaû_ö
 && 
ªt
 =
Z_OK
);

1958 i‡(
	`wrôe_buf„r
(
loˇl
, 
buf„r
, *
buÂo¢
 - 
°ªam
.
avaû_ö
) < 0)

1959 
	`dõ
("unableÅo write sha1 file");

1960 
	`memmove
(
buf„r
, buf„∏+ *
buÂo¢
 - 
°ªam
.
avaû_ö
,

1961 
°ªam
.
avaû_ö
);

1962 *
buÂo¢
 = 
°ªam
.
avaû_ö
;

1963 i‡(
ªt
 !
Z_OK
)

1966 
size
 = 
	`xªad
(
fd
, 
buf„r
 + *
buÂo¢
, 
bufsize
 - *bufposn);

1967 i‡(
size
 <= 0) {

1968 
	`˛o£
(
loˇl
);

1969 
	`u∆ök
(
tmpfûe
);

1970 i‡(!
size
)

1971  
	`îr‹
("Connection closed?");

1972 
	`≥º‹
("Reading from connection");

1975 *
buÂo¢
 +
size
;

1977 
	`öÊ©eEnd
(&
°ªam
);

1979 
	`˛o£
(
loˇl
);

1980 
	`SHA1_FöÆ
(
ªÆ_sha1
, &
c
);

1981 i‡(
ªt
 !
Z_STREAM_END
) {

1982 
	`u∆ök
(
tmpfûe
);

1983  
	`îr‹
("Fûê%†c‹ru±ed", 
	`sha1_to_hex
(
sha1
));

1985 i‡(
	`hashcmp
(
sha1
, 
ªÆ_sha1
)) {

1986 
	`u∆ök
(
tmpfûe
);

1987  
	`îr‹
("Fûê%†ha†bad hash", 
	`sha1_to_hex
(
sha1
));

1990  
	`move_ãmp_to_fûe
(
tmpfûe
, 
	`sha1_fûe_«me
(
sha1
));

1991 
	}
}

1993 
	$has_∑ck_ödex
(c⁄° *
sha1
)

1995 
°©
 
°
;

1996 i‡(
	`°©
(
	`sha1_∑ck_ödex_«me
(
sha1
), &
°
))

1999 
	}
}

2001 
	$has_∑ck_fûe
(c⁄° *
sha1
)

2003 
°©
 
°
;

2004 i‡(
	`°©
(
	`sha1_∑ck_«me
(
sha1
), &
°
))

2007 
	}
}

2009 
	$has_sha1_∑ck
(c⁄° *
sha1
, c⁄° **
ign‹e_∑cked
)

2011 
∑ck_íåy
 
e
;

2012  
	`föd_∑ck_íåy
(
sha1
, &
e
, 
ign‹e_∑cked
);

2013 
	}
}

2015 
	$has_sha1_fûe
(c⁄° *
sha1
)

2017 
°©
 
°
;

2018 
∑ck_íåy
 
e
;

2020 i‡(
	`föd_∑ck_íåy
(
sha1
, &
e
, 
NULL
))

2022  
	`föd_sha1_fûe
(
sha1
, &
°
) ? 1 : 0;

2023 
	}
}

2034 
	$ªad_pùe
(
fd
, ** 
ªtu∫_buf
, * 
ªtu∫_size
)

2036 * 
buf
 = *
ªtu∫_buf
;

2037 
size
 = *
ªtu∫_size
;

2038 
úë
;

2039 
off
 = 0;

2042 
úë
 = 
	`xªad
(
fd
, 
buf
 + 
off
, 
size
 - off);

2043 i‡(
úë
 > 0) {

2044 
off
 +
úë
;

2045 i‡(
off
 =
size
) {

2046 
size
 *= 2;

2047 
buf
 = 
	`xªÆloc
(buf, 
size
);

2050 } 
úë
 > 0);

2052 *
ªtu∫_buf
 = 
buf
;

2053 *
ªtu∫_size
 = 
off
;

2055 i‡(
úë
 < 0)

2058 
	}
}

2060 
	$ödex_pùe
(*
sha1
, 
fd
, c⁄° *
ty≥
, 
wrôe_obje˘
)

2062 
size
 = 4096;

2063 *
buf
 = 
	`xmÆloc
(
size
);

2064 
ªt
;

2066 i‡(
	`ªad_pùe
(
fd
, &
buf
, &
size
)) {

2067 
	`‰ì
(
buf
);

2071 i‡(!
ty≥
)

2072 
ty≥
 = 
blob_ty≥
;

2073 i‡(
wrôe_obje˘
)

2074 
ªt
 = 
	`wrôe_sha1_fûe
(
buf
, 
size
, 
ty≥
, 
sha1
);

2076 
ªt
 = 
	`hash_sha1_fûe
(
buf
, 
size
, 
ty≥
, 
sha1
);

2077 
	`‰ì
(
buf
);

2078  
ªt
;

2079 
	}
}

2081 
	$ödex_fd
(*
sha1
, 
fd
, 
°©
 *
°
, 
wrôe_obje˘
, c⁄° *
ty≥
)

2083 
size
 = 
°
->
°_size
;

2084 *
buf
;

2085 
ªt
;

2087 
buf
 = "";

2088 i‡(
size
)

2089 
buf
 = 
	`xmm≠
(
NULL
, 
size
, 
PROT_READ
, 
MAP_PRIVATE
, 
fd
, 0);

2090 
	`˛o£
(
fd
);

2092 i‡(!
ty≥
)

2093 
ty≥
 = 
blob_ty≥
;

2095 i‡(
wrôe_obje˘
)

2096 
ªt
 = 
	`wrôe_sha1_fûe
(
buf
, 
size
, 
ty≥
, 
sha1
);

2098 
ªt
 = 
	`hash_sha1_fûe
(
buf
, 
size
, 
ty≥
, 
sha1
);

2099 i‡(
size
)

2100 
	`munm≠
(
buf
, 
size
);

2101  
ªt
;

2102 
	}
}

2104 
	$ödex_∑th
(*
sha1
, c⁄° *
∑th
, 
°©
 *
°
, 
wrôe_obje˘
)

2106 
fd
;

2107 *
èrgë
;

2109 
°
->
°_mode
 & 
S_IFMT
) {

2110 
S_IFREG
:

2111 
fd
 = 
	`›í
(
∑th
, 
O_RDONLY
);

2112 i‡(
fd
 < 0)

2113  
	`îr‹
("›í(\"%s\"): %s", 
∑th
,

2114 
	`°ªº‹
(
î∫o
));

2115 i‡(
	`ödex_fd
(
sha1
, 
fd
, 
°
, 
wrôe_obje˘
, 
NULL
) < 0)

2116  
	`îr‹
("%s: failedÅo insert into database",

2117 
∑th
);

2119 
S_IFLNK
:

2120 
èrgë
 = 
	`xmÆloc
(
°
->
°_size
+1);

2121 i‡(
	`ªadlök
(
∑th
, 
èrgë
, 
°
->
°_size
+1) != st->st_size) {

2122 *
îr°r
 = 
	`°ªº‹
(
î∫o
);

2123 
	`‰ì
(
èrgë
);

2124  
	`îr‹
("ªadlök(\"%s\"): %s", 
∑th
,

2125 
îr°r
);

2127 i‡(!
wrôe_obje˘
)

2128 
	`hash_sha1_fûe
(
èrgë
, 
°
->
°_size
, 
blob_ty≥
, 
sha1
);

2129 i‡(
	`wrôe_sha1_fûe
(
èrgë
, 
°
->
°_size
, 
blob_ty≥
, 
sha1
))

2130  
	`îr‹
("%s: failedÅo insert into database",

2131 
∑th
);

2132 
	`‰ì
(
èrgë
);

2135  
	`îr‹
("%s: unsuµ‹ãd fûêty≥", 
∑th
);

2138 
	}
}

2140 
	$ªad_∑ck_hódî
(
fd
, 
∑ck_hódî
 *
hódî
)

2142 *
c
 = (*)
hódî
;

2143 
ssize_t
 
ªmaöög
 = (
∑ck_hódî
);

2145 
ssize_t
 
r
 = 
	`xªad
(
fd
, 
c
, 
ªmaöög
);

2146 i‡(
r
 <= 0)

2148  
PH_ERROR_EOF
;

2149 
ªmaöög
 -
r
;

2150 
c
 +
r
;

2151 } 
ªmaöög
 > 0);

2152 i‡(
hódî
->
hdr_sig«tuª
 !
	`ht⁄l
(
PACK_SIGNATURE
))

2154  
PH_ERROR_PACK_SIGNATURE
;

2155 i‡(!
	`∑ck_vîsi⁄_ok
(
hódî
->
hdr_vîsi⁄
))

2157  
PH_ERROR_PROTOCOL
;

2159 
	}
}

	@sha1_name.c

1 
	~"ˇche.h
"

2 
	~"èg.h
"

3 
	~"commô.h
"

4 
	~"åì.h
"

5 
	~"blob.h
"

6 
	~"åì-wÆk.h
"

7 
	~"ªfs.h
"

9 
	$föd_sh‹t_obje˘_fûíame
(
Àn
, c⁄° *
«me
, *
sha1
)

11 
Æã∫©e_obje˘_d©aba£
 *
Æt
;

12 
hex
[40];

13 
found
 = 0;

14 
Æã∫©e_obje˘_d©aba£
 *
Ákì¡
;

16 i‡(!
Ákì¡
) {

17 c⁄° *
objdú
 = 
	`gë_obje˘_dúe˘‹y
();

18 
objdú_Àn
 = 
	`°æí
(
objdú
);

19 
íéí
 = 
objdú_Àn
 + 43;

20 
Ákì¡
 = 
	`xmÆloc
((*Ákì¡Ë+ 
íéí
);

21 
	`mem˝y
(
Ákì¡
->
ba£
, 
objdú
, 
objdú_Àn
);

22 
Ákì¡
->
«me
 = fakì¡->
ba£
 + 
objdú_Àn
 + 1;

23 
Ákì¡
->
«me
[-1] = '/';

25 
Ákì¡
->
√xt
 = 
Æt_odb_li°
;

27 
	`•rötf
(
hex
, "%.2s", 
«me
);

28 
Æt
 = 
Ákì¡
;á… && 
found
 < 2;á… =á…->
√xt
) {

29 
dúít
 *
de
;

30 
DIR
 *
dú
;

31 
	`•rötf
(
Æt
->
«me
, "%.2s/",Çame);

32 
dú
 = 
	`›ídú
(
Æt
->
ba£
);

33 i‡(!
dú
)

35 (
de
 = 
	`ªaddú
(
dú
)Ë!
NULL
) {

36 i‡(
	`°æí
(
de
->
d_«me
) != 38)

38 i‡(
	`memcmp
(
de
->
d_«me
, 
«me
 + 2, 
Àn
 - 2))

40 i‡(!
found
) {

41 
	`mem˝y
(
hex
 + 2, 
de
->
d_«me
, 38);

42 
found
++;

44 i‡(
	`memcmp
(
hex
 + 2, 
de
->
d_«me
, 38)) {

45 
found
 = 2;

49 
	`˛o£dú
(
dú
);

51 i‡(
found
 == 1)

52  
	`gë_sha1_hex
(
hex
, 
sha1
) == 0;

53  
found
;

54 
	}
}

56 
	$m©ch_sha
(
Àn
, c⁄° *
a
, c⁄° *
b
)

59 i‡(*
a
 !*
b
)

61 
a
++;

62 
b
++;

63 
Àn
 -= 2;

64 } 
Àn
 > 1);

65 i‡(
Àn
)

66 i‡((*
a
 ^ *
b
) & 0xf0)

69 
	}
}

71 
	$föd_sh‹t_∑cked_obje˘
(
Àn
, c⁄° *
m©ch
, *
sha1
)

73 
∑cked_gô
 *
p
;

74 
found_sha1
[20];

75 
found
 = 0;

77 
	`¥ï¨e_∑cked_gô
();

78 
p
 = 
∑cked_gô
;Ö && 
found
 < 2;Ö =Ö->
√xt
) {

79 
num
 = 
	`num_∑cked_obje˘s
(
p
);

80 
fú°
 = 0, 
œ°
 = 
num
;

81 
fú°
 < 
œ°
) {

82 
mid
 = (
fú°
 + 
œ°
) / 2;

83 
now
[20];

84 
cmp
;

86 
	`¡h_∑cked_obje˘_sha1
(
p
, 
mid
, 
now
);

87 
cmp
 = 
	`hashcmp
(
m©ch
, 
now
);

88 i‡(!
cmp
) {

89 
fú°
 = 
mid
;

92 i‡(
cmp
 > 0) {

93 
fú°
 = 
mid
+1;

96 
œ°
 = 
mid
;

98 i‡(
fú°
 < 
num
) {

99 
now
[20], 
√xt
[20];

100 
	`¡h_∑cked_obje˘_sha1
(
p
, 
fú°
, 
now
);

101 i‡(
	`m©ch_sha
(
Àn
, 
m©ch
, 
now
)) {

102 i‡(
	`¡h_∑cked_obje˘_sha1
(
p
, 
fú°
+1, 
√xt
) ||

103 !
	`m©ch_sha
(
Àn
, 
m©ch
, 
√xt
)) {

105 i‡(!
found
) {

106 
	`hash˝y
(
found_sha1
, 
now
);

107 
found
++;

109 i‡(
	`hashcmp
(
found_sha1
, 
now
)) {

110 
found
 = 2;

116 
found
 = 2;

122 i‡(
found
 == 1)

123 
	`hash˝y
(
sha1
, 
found_sha1
);

124  
found
;

125 
	}
}

127 
	#SHORT_NAME_NOT_FOUND
 (-1)

	)

128 
	#SHORT_NAME_AMBIGUOUS
 (-2)

	)

130 
	$föd_unique_sh‹t_obje˘
(
Àn
, *
ˇn⁄iˇl
,

131 *
ªs
, *
sha1
)

133 
has_u≈acked
, 
has_∑cked
;

134 
u≈acked_sha1
[20], 
∑cked_sha1
[20];

136 
has_u≈acked
 = 
	`föd_sh‹t_obje˘_fûíame
(
Àn
, 
ˇn⁄iˇl
, 
u≈acked_sha1
);

137 
has_∑cked
 = 
	`föd_sh‹t_∑cked_obje˘
(
Àn
, 
ªs
, 
∑cked_sha1
);

138 i‡(!
has_u≈acked
 && !
has_∑cked
)

139  
SHORT_NAME_NOT_FOUND
;

140 i‡(1 < 
has_u≈acked
 || 1 < 
has_∑cked
)

141  
SHORT_NAME_AMBIGUOUS
;

142 i‡(
has_u≈acked
 !
has_∑cked
) {

143 
	`hash˝y
(
sha1
, (
has_∑cked
 ? 
∑cked_sha1
 : 
u≈acked_sha1
));

147 i‡(
	`hashcmp
(
∑cked_sha1
, 
u≈acked_sha1
))

148  
SHORT_NAME_AMBIGUOUS
;

149 
	`hash˝y
(
sha1
, 
∑cked_sha1
);

151 
	}
}

153 
	$gë_sh‹t_sha1
(c⁄° *
«me
, 
Àn
, *
sha1
,

154 
quõéy
)

156 
i
, 
°©us
;

157 
ˇn⁄iˇl
[40];

158 
ªs
[20];

160 i‡(
Àn
 < 
MINIMUM_ABBREV
 ||Üen > 40)

162 
	`hash˛r
(
ªs
);

163 
	`mem£t
(
ˇn⁄iˇl
, 'x', 40);

164 
i
 = 0; i < 
Àn
 ;i++) {

165 
c
 = 
«me
[
i
];

166 
vÆ
;

167 i‡(
c
 >= '0' && c <= '9')

168 
vÆ
 = 
c
 - '0';

169 i‡(
c
 >= 'a' && c <= 'f')

170 
vÆ
 = 
c
 - 'a' + 10;

171 i‡(
c
 >= 'A' && c <='F') {

172 
vÆ
 = 
c
 - 'A' + 10;

173 
c
 -= 'A' - 'a';

177 
ˇn⁄iˇl
[
i
] = 
c
;

178 i‡(!(
i
 & 1))

179 
vÆ
 <<= 4;

180 
ªs
[
i
 >> 1] |
vÆ
;

183 
°©us
 = 
	`föd_unique_sh‹t_obje˘
(
i
, 
ˇn⁄iˇl
, 
ªs
, 
sha1
);

184 i‡(!
quõéy
 && (
°©us
 =
SHORT_NAME_AMBIGUOUS
))

185  
	`îr‹
("sh‹àSHA1 %.*†i†ambiguous.", 
Àn
, 
ˇn⁄iˇl
);

186  
°©us
;

187 
	}
}

189 c⁄° *
	$föd_unique_abbªv
(c⁄° *
sha1
, 
Àn
)

191 
°©us
, 
is_nuŒ
;

192 
hex
[41];

194 
is_nuŒ
 = 
	`is_nuŒ_sha1
(
sha1
);

195 
	`mem˝y
(
hex
, 
	`sha1_to_hex
(
sha1
), 40);

196 i‡(
Àn
 == 40 || !len)

197  
hex
;

198 
Àn
 < 40) {

199 
sha1_ªt
[20];

200 
°©us
 = 
	`gë_sh‹t_sha1
(
hex
, 
Àn
, 
sha1_ªt
, 1);

201 i‡(!
°©us
 ||

202 (
is_nuŒ
 && 
°©us
 !
SHORT_NAME_AMBIGUOUS
)) {

203 
hex
[
Àn
] = 0;

204  
hex
;

206 i‡(
°©us
 !
SHORT_NAME_AMBIGUOUS
)

207  
NULL
;

208 
Àn
++;

210  
NULL
;

211 
	}
}

213 
	$ambiguous_∑th
(c⁄° *
∑th
, 
Àn
)

215 
¶ash
 = 1;

216 
˙t
;

218 
˙t
 = 0; c¡ < 
Àn
; cnt++) {

219 *
∑th
++) {

223 i‡(
¶ash
)

225 
¶ash
 = 1;

230 
¶ash
 = 0;

235  
¶ash
;

236 
	}
}

238 c⁄° *
	gªf_fmt
[] = {

245 
NULL


248 
	$dwim_ªf
(c⁄° *
°r
, 
Àn
, *
sha1
, **
ªf
)

250 c⁄° **
p
, *
r
;

251 
ªfs_found
 = 0;

253 *
ªf
 = 
NULL
;

254 
p
 = 
ªf_fmt
; *p;Ö++) {

255 
sha1_‰om_ªf
[20];

256 *
this_ªsu…
;

258 
this_ªsu…
 = 
ªfs_found
 ? 
sha1_‰om_ªf
 : 
sha1
;

259 
r
 = 
	`ªsﬁve_ªf
(
	`mk∑th
(*
p
, 
Àn
, 
°r
), 
this_ªsu…
, 1, 
NULL
);

260 i‡(
r
) {

261 i‡(!
ªfs_found
++)

262 *
ªf
 = 
	`x°rdup
(
r
);

263 i‡(!
w¨n_ambiguous_ªfs
)

267  
ªfs_found
;

268 
	}
}

270 
	$dwim_log
(c⁄° *
°r
, 
Àn
, *
sha1
, **
log
)

272 c⁄° **
p
;

273 
logs_found
 = 0;

275 *
log
 = 
NULL
;

276 
p
 = 
ªf_fmt
; *p;Ö++) {

277 
°©
 
°
;

278 
hash
[20];

279 
∑th
[
PATH_MAX
];

280 c⁄° *
ªf
, *
ô
;

282 
	`°r˝y
(
∑th
, 
	`mk∑th
(*
p
, 
Àn
, 
°r
));

283 
ªf
 = 
	`ªsﬁve_ªf
(
∑th
, 
hash
, 0, 
NULL
);

284 i‡(!
ªf
)

286 i‡(!
	`°©
(
	`gô_∑th
("logs/%s", 
∑th
), &
°
) &&

287 
	`S_ISREG
(
°
.
°_mode
))

288 
ô
 = 
∑th
;

289 i‡(
	`°rcmp
(
ªf
, 
∑th
) &&

290 !
	`°©
(
	`gô_∑th
("logs/%s", 
ªf
), &
°
) &&

291 
	`S_ISREG
(
°
.
°_mode
))

292 
ô
 = 
ªf
;

295 i‡(!
logs_found
++) {

296 *
log
 = 
	`x°rdup
(
ô
);

297 
	`hash˝y
(
sha1
, 
hash
);

299 i‡(!
w¨n_ambiguous_ªfs
)

302  
logs_found
;

303 
	}
}

305 
	$gë_sha1_basic
(c⁄° *
°r
, 
Àn
, *
sha1
)

307 c⁄° *
w¨nög
 = "warning:Ñefname '%.*s' isámbiguous.\n";

308 *
ªÆ_ªf
 = 
NULL
;

309 
ªfs_found
 = 0;

310 
©
, 
ªÊog_Àn
;

312 i‡(
Àn
 =40 && !
	`gë_sha1_hex
(
°r
, 
sha1
))

316 
ªÊog_Àn
 = 
©
 = 0;

317 i‡(
°r
[
Àn
-1] == '}') {

318 
©
 = 0;áà< 
Àn
 - 1;át++) {

319 i‡(
°r
[
©
] == '@' && str[at+1] == '{') {

320 
ªÊog_Àn
 = (
Àn
-1Ë- (
©
+2);

321 
Àn
 = 
©
;

328 i‡(
Àn
 && 
	`ambiguous_∑th
(
°r
,Üen))

331 i‡(!
Àn
 && 
ªÊog_Àn
) {

333 
ªfs_found
 = 
	`dwim_ªf
("HEAD", 4, 
sha1
, &
ªÆ_ªf
);

334 } i‡(
ªÊog_Àn
)

335 
ªfs_found
 = 
	`dwim_log
(
°r
, 
Àn
, 
sha1
, &
ªÆ_ªf
);

337 
ªfs_found
 = 
	`dwim_ªf
(
°r
, 
Àn
, 
sha1
, &
ªÆ_ªf
);

339 i‡(!
ªfs_found
)

342 i‡(
w¨n_ambiguous_ªfs
 && 
ªfs_found
 > 1)

343 
	`Ârötf
(
°dîr
, 
w¨nög
, 
Àn
, 
°r
);

345 i‡(
ªÊog_Àn
) {

346 
¡h
, 
i
;

347 
©_time
;

348 
co_time
;

349 
co_tz
, 
co_˙t
;

352 
i
 = 
¡h
 = 0; 0 <¡h && i < 
ªÊog_Àn
; i++) {

353 
ch
 = 
°r
[
©
+2+
i
];

354 i‡('0' <
ch
 && ch <= '9')

355 
¡h
 =Çth * 10 + 
ch
 - '0';

357 
¡h
 = -1;

359 i‡(0 <
¡h
)

360 
©_time
 = 0;

362 
©_time
 = 
	`≠¥oxid©e
(
°r
 + 
©
 + 2);

363 i‡(
	`ªad_ªf_©
(
ªÆ_ªf
, 
©_time
, 
¡h
, 
sha1
, 
NULL
,

364 &
co_time
, &
co_tz
, &
co_˙t
)) {

365 i‡(
©_time
)

366 
	`Ârötf
(
°dîr
,

368 "backÅÿ%s.\n", 
Àn
, 
°r
,

369 
	`show_rfc2822_d©e
(
co_time
, 
co_tz
));

371 
	`Ârötf
(
°dîr
,

373 "%dÉ¡rõs.\n", 
Àn
, 
°r
, 
co_˙t
);

377 
	`‰ì
(
ªÆ_ªf
);

379 
	}
}

381 
gë_sha1_1
(c⁄° *
«me
, 
Àn
, *
sha1
);

383 
	$gë_∑ª¡
(c⁄° *
«me
, 
Àn
,

384 *
ªsu…
, 
idx
)

386 
sha1
[20];

387 
ªt
 = 
	`gë_sha1_1
(
«me
, 
Àn
, 
sha1
);

388 
commô
 *commit;

389 
commô_li°
 *
p
;

391 i‡(
ªt
)

392  
ªt
;

393 
commô
 = 
	`lookup_commô_ª„ªn˚
(
sha1
);

394 i‡(!
commô
)

396 i‡(
	`∑r£_commô
(
commô
))

398 i‡(!
idx
) {

399 
	`hash˝y
(
ªsu…
, 
commô
->
obje˘
.
sha1
);

402 
p
 = 
commô
->
∑ª¡s
;

403 
p
) {

404 i‡(!--
idx
) {

405 
	`hash˝y
(
ªsu…
, 
p
->
ôem
->
obje˘
.
sha1
);

408 
p
 =Ö->
√xt
;

411 
	}
}

413 
	$gë_¡h_™˚°‹
(c⁄° *
«me
, 
Àn
,

414 *
ªsu…
, 
gíî©i⁄
)

416 
sha1
[20];

417 
ªt
 = 
	`gë_sha1_1
(
«me
, 
Àn
, 
sha1
);

418 i‡(
ªt
)

419  
ªt
;

421 
gíî©i⁄
--) {

422 
commô
 *commô = 
	`lookup_commô_ª„ªn˚
(
sha1
);

424 i‡(!
commô
 || 
	`∑r£_commô
(commôË|| !commô->
∑ª¡s
)

426 
	`hash˝y
(
sha1
, 
commô
->
∑ª¡s
->
ôem
->
obje˘
.sha1);

428 
	`hash˝y
(
ªsu…
, 
sha1
);

430 
	}
}

432 
	$≥ñ_⁄i⁄
(c⁄° *
«me
, 
Àn
, *
sha1
)

434 
ouãr
[20];

435 c⁄° *
•
;

436 
ex≥˘ed_ty≥
 = 0;

437 
obje˘
 *
o
;

447 i‡(
Àn
 < 4 || 
«me
[len-1] != '}')

450 
•
 = 
«me
 + 
Àn
 - 1;Çame <= sp; sp--) {

451 
ch
 = *
•
;

452 i‡(
ch
 ='{' && 
«me
 < 
•
 && sp[-1] == '^')

455 i‡(
•
 <
«me
)

458 
•
++;

459 i‡(!
	`°∫cmp
(
commô_ty≥
, 
•
, 6) && sp[6] == '}')

460 
ex≥˘ed_ty≥
 = 
OBJ_COMMIT
;

461 i‡(!
	`°∫cmp
(
åì_ty≥
, 
•
, 4) && sp[4] == '}')

462 
ex≥˘ed_ty≥
 = 
OBJ_TREE
;

463 i‡(!
	`°∫cmp
(
blob_ty≥
, 
•
, 4) && sp[4] == '}')

464 
ex≥˘ed_ty≥
 = 
OBJ_BLOB
;

465 i‡(
•
[0] == '}')

466 
ex≥˘ed_ty≥
 = 
OBJ_NONE
;

470 i‡(
	`gë_sha1_1
(
«me
, 
•
 -Çamê- 2, 
ouãr
))

473 
o
 = 
	`∑r£_obje˘
(
ouãr
);

474 i‡(!
o
)

476 i‡(!
ex≥˘ed_ty≥
) {

477 
o
 = 
	`dîef_èg
(o, 
«me
, 
•
 -Çame - 2);

478 i‡(!
o
 || (!o->
∑r£d
 && !
	`∑r£_obje˘
(o->
sha1
)))

480 
	`hash˝y
(
sha1
, 
o
->sha1);

489 i‡(!
o
 || (!o->
∑r£d
 && !
	`∑r£_obje˘
(o->
sha1
)))

491 i‡(
o
->
ty≥
 =
ex≥˘ed_ty≥
) {

492 
	`hash˝y
(
sha1
, 
o
->sha1);

495 i‡(
o
->
ty≥
 =
OBJ_TAG
)

496 
o
 = ((
èg
*Ëo)->
ègged
;

497 i‡(
o
->
ty≥
 =
OBJ_COMMIT
)

498 
o
 = &(((
commô
 *Ëo)->
åì
->
obje˘
);

500  
	`îr‹
("%.*s:Éxpected %sÅype, butÅhe object dereferencesÅo %sÅype",

501 
Àn
, 
«me
, 
	`ty≥«me
(
ex≥˘ed_ty≥
),

502 
	`ty≥«me
(
o
->
ty≥
));

503 i‡(!
o
->
∑r£d
)

504 
	`∑r£_obje˘
(
o
->
sha1
);

508 
	}
}

510 
	$gë_des¸ibe_«me
(c⁄° *
«me
, 
Àn
, *
sha1
)

512 c⁄° *
˝
;

514 
˝
 = 
«me
 + 
Àn
 - 1;Çame + 2 <= cp; cp--) {

515 
ch
 = *
˝
;

516 i‡(
	`hexvÆ
(
ch
) & ~0377) {

520 i‡(
ch
 ='g' && 
˝
[-1] == '-') {

521 
˝
++;

522 
Àn
 -
˝
 - 
«me
;

523  
	`gë_sh‹t_sha1
(
˝
, 
Àn
, 
sha1
, 1);

528 
	}
}

530 
	$gë_sha1_1
(c⁄° *
«me
, 
Àn
, *
sha1
)

532 
ªt
, 
has_suffix
;

533 c⁄° *
˝
;

539 
has_suffix
 = 0;

540 
˝
 = 
«me
 + 
Àn
 - 1;Çame <= cp; cp--) {

541 
ch
 = *
˝
;

542 i‡('0' <
ch
 && ch <= '9')

544 i‡(
ch
 == '~' || ch == '^')

545 
has_suffix
 = 
ch
;

549 i‡(
has_suffix
) {

550 
num
 = 0;

551 
Àn1
 = 
˝
 - 
«me
;

552 
˝
++;

553 
˝
 < 
«me
 + 
Àn
)

554 
num
 =Çum * 10 + *
˝
++ - '0';

555 i‡(
has_suffix
 == '^') {

556 i‡(!
num
 && 
Àn1
 =
Àn
 - 1)

557 
num
 = 1;

558  
	`gë_∑ª¡
(
«me
, 
Àn1
, 
sha1
, 
num
);

561  
	`gë_¡h_™˚°‹
(
«me
, 
Àn1
, 
sha1
, 
num
);

564 
ªt
 = 
	`≥ñ_⁄i⁄
(
«me
, 
Àn
, 
sha1
);

565 i‡(!
ªt
)

568 
ªt
 = 
	`gë_sha1_basic
(
«me
, 
Àn
, 
sha1
);

569 i‡(!
ªt
)

573 
ªt
 = 
	`gë_des¸ibe_«me
(
«me
, 
Àn
, 
sha1
);

574 i‡(!
ªt
)

577  
	`gë_sh‹t_sha1
(
«me
, 
Àn
, 
sha1
, 0);

578 
	}
}

584 
	$gë_sha1
(c⁄° *
«me
, *
sha1
)

586 
ªt
, 
bøckë_dïth
;

587 
unu£d
;

588 
«mñí
 = 
	`°æí
(
«me
);

589 c⁄° *
˝
;

591 
	`¥ï¨e_Æt_odb
();

592 
ªt
 = 
	`gë_sha1_1
(
«me
, 
«mñí
, 
sha1
);

593 i‡(!
ªt
)

594  
ªt
;

599 i‡(
«me
[0] == ':') {

600 
°age
 = 0;

601 
ˇche_íåy
 *
˚
;

602 
pos
;

603 i‡(
«mñí
 < 3 ||

604 
«me
[2] != ':' ||

605 
«me
[1] < '0' || '3' <Çame[1])

606 
˝
 = 
«me
 + 1;

608 
°age
 = 
«me
[1] - '0';

609 
˝
 = 
«me
 + 3;

611 
«mñí
 =Çamñí - (
˝
 - 
«me
);

612 i‡(!
a˘ive_ˇche
)

613 
	`ªad_ˇche
();

614 i‡(
a˘ive_ƒ
 < 0)

616 
pos
 = 
	`ˇche_«me_pos
(
˝
, 
«mñí
);

617 i‡(
pos
 < 0)

618 
pos
 = -pos - 1;

619 
pos
 < 
a˘ive_ƒ
) {

620 
˚
 = 
a˘ive_ˇche
[
pos
];

621 i‡(
	`˚_«mñí
(
˚
Ë!
«mñí
 ||

622 
	`memcmp
(
˚
->
«me
, 
˝
, 
«mñí
))

624 i‡(
	`˚_°age
(
˚
Ë=
°age
) {

625 
	`hash˝y
(
sha1
, 
˚
->sha1);

628 
pos
++;

632 
˝
 = 
«me
, 
bøckë_dïth
 = 0; *cp; cp++) {

633 i‡(*
˝
 == '{')

634 
bøckë_dïth
++;

635 i‡(
bøckë_dïth
 && *
˝
 == '}')

636 
bøckë_dïth
--;

637 i‡(!
bøckë_dïth
 && *
˝
 == ':')

640 i‡(*
˝
 == ':') {

641 
åì_sha1
[20];

642 i‡(!
	`gë_sha1_1
(
«me
, 
˝
-«me, 
åì_sha1
))

643  
	`gë_åì_íåy
(
åì_sha1
, 
˝
+1, 
sha1
,

644 &
unu£d
);

646  
ªt
;

647 
	}
}

	@shallow.c

1 
	~"ˇche.h
"

2 
	~"commô.h
"

3 
	~"èg.h
"

5 
	gis_shÆlow
 = -1;

7 
	$ªgi°î_shÆlow
(c⁄° *
sha1
)

9 
commô_gø·
 *
gø·
 =

10 
	`xmÆloc
((
commô_gø·
));

11 
commô
 *commô = 
	`lookup_commô
(
sha1
);

13 
	`hash˝y
(
gø·
->
sha1
, sha1);

14 
gø·
->
ƒ_∑ª¡
 = -1;

15 i‡(
commô
 && commô->
obje˘
.
∑r£d
)

16 
commô
->
∑ª¡s
 = 
NULL
;

17  
	`ªgi°î_commô_gø·
(
gø·
, 0);

18 
	}
}

20 
	$is_ªposô‹y_shÆlow
()

22 
FILE
 *
Â
;

23 
buf
[1024];

25 i‡(
is_shÆlow
 >= 0)

26  
is_shÆlow
;

28 
Â
 = 
	`f›í
(
	`gô_∑th
("shallow"), "r");

29 i‡(!
Â
) {

30 
is_shÆlow
 = 0;

31  
is_shÆlow
;

33 
is_shÆlow
 = 1;

35 
	`fgës
(
buf
, (buf), 
Â
)) {

36 
sha1
[20];

37 i‡(
	`gë_sha1_hex
(
buf
, 
sha1
))

38 
	`dõ
("bad shÆlowÜöe: %s", 
buf
);

39 
	`ªgi°î_shÆlow
(
sha1
);

41 
	`f˛o£
(
Â
);

42  
is_shÆlow
;

43 
	}
}

45 
commô_li°
 *
	$gë_shÆlow_commôs
(
obje˘_¨øy
 *
hóds
, 
dïth
,

46 
shÆlow_Êag
, 
nŸ_shÆlow_Êag
)

48 
i
 = 0, 
cur_dïth
 = 0;

49 
commô_li°
 *
ªsu…
 = 
NULL
;

50 
obje˘_¨øy
 
°ack
 = {0, 0, 
NULL
};

51 
commô
 *commô = 
NULL
;

53 
commô
 || 
i
 < 
hóds
->
ƒ
 || 
°ack
.nr) {

54 
commô_li°
 *
p
;

55 i‡(!
commô
) {

56 i‡(
i
 < 
hóds
->
ƒ
) {

57 
commô
 = (commit *)

58 
	`dîef_èg
(
hóds
->
obje˘s
[
i
++].
ôem
, 
NULL
, 0);

59 i‡(
commô
->
obje˘
.
ty≥
 !
OBJ_COMMIT
) {

60 
commô
 = 
NULL
;

63 i‡(!
commô
->
utû
)

64 
commô
->
utû
 = 
	`xmÆloc
(());

65 *(*)
commô
->
utû
 = 0;

66 
cur_dïth
 = 0;

68 
commô
 = (commit *)

69 
°ack
.
obje˘s
[--°ack.
ƒ
].
ôem
;

70 
cur_dïth
 = *(*)
commô
->
utû
;

73 
	`∑r£_commô
(
commô
);

74 
commô
->
obje˘
.
Êags
 |
nŸ_shÆlow_Êag
;

75 
cur_dïth
++;

76 
p
 = 
commô
->
∑ª¡s
, commô = 
NULL
;Ö;Ö =Ö->
√xt
) {

77 i‡(!
p
->
ôem
->
utû
) {

78 *
poöãr
 = 
	`xmÆloc
(());

79 
p
->
ôem
->
utû
 = 
poöãr
;

80 *
poöãr
 = 
cur_dïth
;

82 *
poöãr
 = 
p
->
ôem
->
utû
;

83 i‡(
cur_dïth
 >*
poöãr
)

85 *
poöãr
 = 
cur_dïth
;

87 i‡(
cur_dïth
 < 
dïth
) {

88 i‡(
p
->
√xt
)

89 
	`add_obje˘_¨øy
(&
p
->
ôem
->
obje˘
,

90 
NULL
, &
°ack
);

92 
commô
 = 
p
->
ôem
;

93 
cur_dïth
 = *(*)
commô
->
utû
;

96 
	`commô_li°_ö£π
(
p
->
ôem
, &
ªsu…
);

97 
p
->
ôem
->
obje˘
.
Êags
 |
shÆlow_Êag
;

102  
ªsu…
;

103 
	}
}

	@shell.c

1 
	~"ˇche.h
"

2 
	~"quŸe.h
"

3 
	~"exec_cmd.h
"

5 
	$do_gíîic_cmd
(c⁄° *
me
, *
¨g
)

7 c⁄° *
my_¨gv
[4];

9 i‡(!
¨g
 || !◊rg = 
	`sq_dequŸe
(arg)))

10 
	`dõ
("badárgument");

11 i‡(
	`°∫cmp
(
me
, "git-", 4))

12 
	`dõ
("bad command");

14 
my_¨gv
[0] = 
me
 + 4;

15 
my_¨gv
[1] = 
¨g
;

16 
my_¨gv
[2] = 
NULL
;

18  
	`execv_gô_cmd
(
my_¨gv
);

19 
	}
}

21 
	scomm™ds
 {

22 c⁄° *
	m«me
;

23 (*
	mexec
)(c⁄° *
	mme
, *
	m¨g
);

24 } 
	gcmd_li°
[] = {

25 { "gô-ª˚ive-∑ck", 
do_gíîic_cmd
 },

26 { "gô-u∂ﬂd-∑ck", 
do_gíîic_cmd
 },

27 { 
NULL
 },

30 
	$maö
(
¨gc
, **
¨gv
)

32 *
¥og
;

33 
comm™ds
 *
cmd
;

36 i‡(
¨gc
 !3 || 
	`°rcmp
(
¨gv
[1], "-c"))

37 
	`dõ
("What do youÅhink Iám? A shell?");

39 
¥og
 = 
¨gv
[2];

40 
¨gv
 += 2;

41 
¨gc
 -= 2;

42 
cmd
 = 
cmd_li°
 ; cmd->
«me
 ; cmd++) {

43 
Àn
 = 
	`°æí
(
cmd
->
«me
);

44 *
¨g
;

45 i‡(
	`°∫cmp
(
cmd
->
«me
, 
¥og
, 
Àn
))

47 
¨g
 = 
NULL
;

48 
¥og
[
Àn
]) {

50 
¨g
 = 
NULL
;

53 
¨g
 = 
¥og
 + 
Àn
 + 1;

58 
	`exô
(
cmd
->
	`exec
(cmd->
«me
, 
¨g
));

60 
	`dõ
("uƒecognized comm™d '%s'", 
¥og
);

61 
	}
}

	@show-index.c

1 
	~"ˇche.h
"

3 
	$maö
(
¨gc
, **
¨gv
)

5 
i
;

6 
ƒ
;

7 
íåy
[6];

8 
t›_ödex
[256];

10 i‡(
	`‰ód
(
t›_ödex
, —›_ödex), 1, 
°dö
) != 1)

11 
	`dõ
("unableÅoÑead index");

12 
ƒ
 = 0;

13 
i
 = 0; i < 256; i++) {

14 
n
 = 
	`¡ohl
(
t›_ödex
[
i
]);

15 i‡(
n
 < 
ƒ
)

16 
	`dõ
("corrupt index file");

17 
ƒ
 = 
n
;

19 
i
 = 0; i < 
ƒ
; i++) {

20 
off£t
;

22 i‡(
	`‰ód
(
íåy
, 24, 1, 
°dö
) != 1)

23 
	`dõ
("u«bÀÅÿªadÉ¡ry %u/%u", 
i
, 
ƒ
);

24 
off£t
 = 
	`¡ohl
(
íåy
[0]);

25 
	`¥ötf
("%u %s\n", 
off£t
, 
	`sha1_to_hex
((*)(
íåy
+1)));

28 
	}
}

	@sideband.c

1 
	~"pkt-löe.h
"

2 
	~"sideb™d.h
"

14 
	$ªcv_sideb™d
(c⁄° *
me
, 
ö_°ªam
, 
out
, 
îr
)

16 
buf
[7 + 
LARGE_PACKET_MAX
 + 1];

17 
	`°r˝y
(
buf
, "remote:");

19 
b™d
, 
Àn
;

20 
Àn
 = 
	`∑ckë_ªad_löe
(
ö_°ªam
, 
buf
+7, 
LARGE_PACKET_MAX
);

21 i‡(
Àn
 == 0)

23 i‡(
Àn
 < 1) {

24 
Àn
 = 
	`•rötf
(
buf
, "%s:ÖrŸocﬁÉº‹:Çÿb™d desig«t‹\n", 
me
);

25 
	`ß„_wrôe
(
îr
, 
buf
, 
Àn
);

26  
SIDEBAND_PROTOCOL_ERROR
;

28 
b™d
 = 
buf
[7] & 0xff;

29 
Àn
--;

30 
b™d
) {

32 
buf
[7] = ' ';

33 
buf
[8+
Àn
] = '\n';

34 
	`ß„_wrôe
(
îr
, 
buf
, 8+
Àn
+1);

35  
SIDEBAND_REMOTE_ERROR
;

37 
buf
[7] = ' ';

38 
	`ß„_wrôe
(
îr
, 
buf
, 8+
Àn
);

41 
	`ß„_wrôe
(
out
, 
buf
+8, 
Àn
);

44 
Àn
 = 
	`•rötf
(
buf
,

46 
me
, 
b™d
);

47 
	`ß„_wrôe
(
îr
, 
buf
, 
Àn
);

48  
SIDEBAND_PROTOCOL_ERROR
;

52 
	}
}

58 
ssize_t
 
	$£nd_sideb™d
(
fd
, 
b™d
, c⁄° *
d©a
, 
ssize_t
 
sz
, 
∑ckë_max
)

60 
ssize_t
 
ssz
 = 
sz
;

61 c⁄° *
p
 = 
d©a
;

63 
sz
) {

64 
n
;

65 
hdr
[5];

67 
n
 = 
sz
;

68 i‡(
∑ckë_max
 - 5 < 
n
)

69 
n
 = 
∑ckë_max
 - 5;

70 
	`•rötf
(
hdr
, "%04x", 
n
 + 5);

71 
hdr
[4] = 
b™d
;

72 
	`ß„_wrôe
(
fd
, 
hdr
, 5);

73 
	`ß„_wrôe
(
fd
, 
p
, 
n
);

74 
p
 +
n
;

75 
sz
 -
n
;

77  
ssz
;

78 
	}
}

	@sideband.h

1 #i‚de‡
SIDEBAND_H


2 
	#SIDEBAND_H


	)

4 
	#SIDEBAND_PROTOCOL_ERROR
 -2

	)

5 
	#SIDEBAND_REMOTE_ERROR
 -1

	)

7 
	#DEFAULT_PACKET_MAX
 1000

	)

8 
	#LARGE_PACKET_MAX
 65520

	)

10 
ªcv_sideb™d
(c⁄° *
me
, 
ö_°ªam
, 
out
, 
îr
);

11 
ssize_t
 
£nd_sideb™d
(
fd
, 
b™d
, c⁄° *
d©a
, ssize_à
sz
, 
∑ckë_max
);

	@ssh-fetch.c

1 #i‚de‡
COUNTERPART_ENV_NAME


2 
	#COUNTERPART_ENV_NAME
 "GIT_SSH_UPLOAD"

	)

4 #i‚de‡
COUNTERPART_PROGRAM_NAME


5 
	#COUNTERPART_PROGRAM_NAME
 "gô-ssh-u∂ﬂd"

	)

7 #i‚de‡
MY_PROGRAM_NAME


8 
	#MY_PROGRAM_NAME
 "gô-ssh-„tch"

	)

11 
	~"ˇche.h
"

12 
	~"commô.h
"

13 
	~"rsh.h
"

14 
	~"„tch.h
"

15 
	~"ªfs.h
"

17 
	gfd_ö
;

18 
	gfd_out
;

20 
	gªmŸe_vîsi⁄
;

21 
	gloˇl_vîsi⁄
 = 1;

23 
	g¥e„tches
;

25 
obje˘_li°
 *
	gö_å™sô
;

26 
obje˘_li°
 **
	gíd_of_å™sô
 = &
ö_å™sô
;

28 
	$¥e„tch
(*
sha1
)

30 
ty≥
 = 'o';

31 
obje˘_li°
 *
node
;

32 i‡(
¥e„tches
 > 100) {

33 
	`„tch
(
ö_å™sô
->
ôem
->
sha1
);

35 
node
 = 
	`xmÆloc
((
obje˘_li°
));

36 
node
->
√xt
 = 
NULL
;

37 
node
->
ôem
 = 
	`lookup_unknown_obje˘
(
sha1
);

38 *
íd_of_å™sô
 = 
node
;

39 
íd_of_å™sô
 = &
node
->
√xt
;

41 
	`wrôe_ö_fuŒ
(
fd_out
, &
ty≥
, 1);

42 
	`wrôe_ö_fuŒ
(
fd_out
, 
sha1
, 20);

43 
¥e„tches
++;

44 
	}
}

46 
	gc⁄n_buf
[4096];

47 
size_t
 
	gc⁄n_buf_po¢
;

49 
	$„tch
(*
sha1
)

51 
ªt
;

52 sig√d 
ªmŸe
;

53 
obje˘_li°
 *
ãmp
;

55 i‡(
	`hashcmp
(
sha1
, 
ö_å™sô
->
ôem
->sha1)) {

57  
	`has_sha1_fûe
(
sha1
) ? 0 : -1;

59 
¥e„tches
--;

60 
ãmp
 = 
ö_å™sô
;

61 
ö_å™sô
 = in_å™sô->
√xt
;

62 i‡(!
ö_å™sô
)

63 
íd_of_å™sô
 = &
ö_å™sô
;

64 
	`‰ì
(
ãmp
);

66 i‡(
c⁄n_buf_po¢
) {

67 
ªmŸe
 = 
c⁄n_buf
[0];

68 
	`memmove
(
c⁄n_buf
, c⁄n_bu‡+ 1, --
c⁄n_buf_po¢
);

70 i‡(
	`xªad
(
fd_ö
, &
ªmŸe
, 1) < 1)

74 i‡(
ªmŸe
 < 0)

75  
ªmŸe
;

76 
ªt
 = 
	`wrôe_sha1_‰om_fd
(
sha1
, 
fd_ö
, 
c⁄n_buf
, 4096, &
c⁄n_buf_po¢
);

77 i‡(!
ªt
)

78 
	`puŒ_ßy
("gŸ %s\n", 
	`sha1_to_hex
(
sha1
));

79  
ªt
;

80 
	}
}

82 
	$gë_vîsi⁄
()

84 
ty≥
 = 'v';

85 i‡(
	`wrôe_ö_fuŒ
(
fd_out
, &
ty≥
, 1) != 1 ||

86 
	`wrôe_ö_fuŒ
(
fd_out
, &
loˇl_vîsi⁄
, 1)) {

87  
	`îr‹
("Couldn'tÑequest version fromÑemoteÉnd");

89 i‡(
	`xªad
(
fd_ö
, &
ªmŸe_vîsi⁄
, 1) < 1) {

90  
	`îr‹
("Couldn'tÑead version fromÑemoteÉnd");

93 
	}
}

95 
	$„tch_ªf
(*
ªf
, *
sha1
)

97 sig√d 
ªmŸe
;

98 
ty≥
 = 'r';

99 
Àngth
 = 
	`°æí
(
ªf
) + 1;

100 i‡(
	`wrôe_ö_fuŒ
(
fd_out
, &
ty≥
, 1) != 1 ||

101 
	`wrôe_ö_fuŒ
(
fd_out
, 
ªf
, 
Àngth
) !=Üength)

104 i‡(
	`ªad_ö_fuŒ
(
fd_ö
, &
ªmŸe
, 1) != 1)

106 i‡(
ªmŸe
 < 0)

107  
ªmŸe
;

108 i‡(
	`ªad_ö_fuŒ
(
fd_ö
, 
sha1
, 20) != 20)

111 
	}
}

113 c⁄° 
	gssh_„tch_ußge
[] =

114 
MY_PROGRAM_NAME


116 
	$maö
(
¨gc
, **
¨gv
)

118 c⁄° *
wrôe_ªf
 = 
NULL
;

119 *
commô_id
;

120 *
uæ
;

121 
¨g
 = 1;

122 c⁄° *
¥og
;

124 
¥og
 = 
	`gëív
("GIT_SSH_PUSH");

125 i‡(!
¥og
)Örog = "git-ssh-upload";

127 
	`£tup_gô_dúe˘‹y
();

128 
	`gô_c⁄fig
(
gô_deÁu…_c⁄fig
);

130 
¨g
 < 
¨gc
 && 
¨gv
[arg][0] == '-') {

131 i‡(
¨gv
[
¨g
][1] == 't') {

132 
gë_åì
 = 1;

133 } i‡(
¨gv
[
¨g
][1] == 'c') {

134 
gë_hi°‹y
 = 1;

135 } i‡(
¨gv
[
¨g
][1] == 'a') {

136 
gë_Æl
 = 1;

137 
gë_åì
 = 1;

138 
gë_hi°‹y
 = 1;

139 } i‡(
¨gv
[
¨g
][1] == 'v') {

140 
gë_vîbo£ly
 = 1;

141 } i‡(
¨gv
[
¨g
][1] == 'w') {

142 
wrôe_ªf
 = 
¨gv
[
¨g
 + 1];

143 
¨g
++;

144 } i‡(!
	`°rcmp
(
¨gv
[
¨g
], "--recover")) {

145 
gë_ªcovî
 = 1;

147 
¨g
++;

149 i‡(
¨gc
 < 
¨g
 + 2) {

150 
	`ußge
(
ssh_„tch_ußge
);

153 
commô_id
 = 
¨gv
[
¨g
];

154 
uæ
 = 
¨gv
[
¨g
 + 1];

156 i‡(
	`£tup_c⁄√˘i⁄
(&
fd_ö
, &
fd_out
, 
¥og
, 
uæ
, 
¨g
, 
¨gv
 + 1))

159 i‡(
	`gë_vîsi⁄
())

162 i‡(
	`puŒ
(1, &
commô_id
, &
wrôe_ªf
, 
uæ
))

166 
	}
}

	@ssh-pull.c

1 
	#COUNTERPART_ENV_NAME
 "GIT_SSH_PUSH"

	)

2 
	#COUNTERPART_PROGRAM_NAME
 "gô-ssh-push"

	)

3 
	#MY_PROGRAM_NAME
 "gô-ssh-puŒ"

	)

4 
	~"ssh-„tch.c
"

	@ssh-push.c

1 
	#COUNTERPART_ENV_NAME
 "GIT_SSH_PULL"

	)

2 
	#COUNTERPART_PROGRAM_NAME
 "gô-ssh-puŒ"

	)

3 
	#MY_PROGRAM_NAME
 "gô-ssh-push"

	)

4 
	~"ssh-u∂ﬂd.c
"

	@ssh-upload.c

1 #i‚de‡
COUNTERPART_ENV_NAME


2 
	#COUNTERPART_ENV_NAME
 "GIT_SSH_FETCH"

	)

4 #i‚de‡
COUNTERPART_PROGRAM_NAME


5 
	#COUNTERPART_PROGRAM_NAME
 "gô-ssh-„tch"

	)

7 #i‚de‡
MY_PROGRAM_NAME


8 
	#MY_PROGRAM_NAME
 "gô-ssh-u∂ﬂd"

	)

11 
	~"ˇche.h
"

12 
	~"rsh.h
"

13 
	~"ªfs.h
"

15 
	gloˇl_vîsi⁄
 = 1;

16 
	gªmŸe_vîsi⁄
;

18 
	gvîbo£
;

20 
	$£rve_obje˘
(
fd_ö
, 
fd_out
) {

21 
ssize_t
 
size
;

22 
sha1
[20];

23 sig√d 
ªmŸe
;

25 
size
 = 
	`ªad_ö_fuŒ
(
fd_ö
, 
sha1
, 20);

26 i‡(
size
 < 0) {

27 
	`≥º‹
("git-ssh-upload:Ñead ");

30 i‡(!
size
)

33 i‡(
vîbo£
)

34 
	`Ârötf
(
°dîr
, "Sîvög %s\n", 
	`sha1_to_hex
(
sha1
));

36 
ªmŸe
 = 0;

38 i‡(!
	`has_sha1_fûe
(
sha1
)) {

39 
	`Ârötf
(
°dîr
, "git-ssh-upload: couldÇot find %s\n",

40 
	`sha1_to_hex
(
sha1
));

41 
ªmŸe
 = -1;

44 i‡(
	`wrôe_ö_fuŒ
(
fd_out
, &
ªmŸe
, 1) != 1)

47 i‡(
ªmŸe
 < 0)

50  
	`wrôe_sha1_to_fd
(
fd_out
, 
sha1
);

51 
	}
}

53 
	$£rve_vîsi⁄
(
fd_ö
, 
fd_out
)

55 i‡(
	`xªad
(
fd_ö
, &
ªmŸe_vîsi⁄
, 1) < 1)

57 
	`wrôe_ö_fuŒ
(
fd_out
, &
loˇl_vîsi⁄
, 1);

59 
	}
}

61 
	$£rve_ªf
(
fd_ö
, 
fd_out
)

63 
ªf
[
PATH_MAX
];

64 
sha1
[20];

65 
po¢
 = 0;

66 sig√d 
ªmŸe
 = 0;

68 i‡(
po¢
 >
PATH_MAX
 || 
	`xªad
(
fd_ö
, 
ªf
 +Öosn, 1) < 1)

70 
po¢
++;

71 } 
ªf
[
po¢
 - 1]);

73 i‡(
vîbo£
)

74 
	`Ârötf
(
°dîr
, "Sîvög %s\n", 
ªf
);

76 i‡(
	`gë_ªf_sha1
(
ªf
, 
sha1
))

77 
ªmŸe
 = -1;

78 i‡(
	`wrôe_ö_fuŒ
(
fd_out
, &
ªmŸe
, 1) != 1)

80 i‡(
ªmŸe
)

82 
	`wrôe_ö_fuŒ
(
fd_out
, 
sha1
, 20);

84 
	}
}

87 
	$£rvi˚
(
fd_ö
, 
fd_out
) {

88 
ty≥
;

89 
ªtvÆ
;

91 
ªtvÆ
 = 
	`xªad
(
fd_ö
, &
ty≥
, 1);

92 i‡(
ªtvÆ
 < 1) {

93 i‡(
ªtvÆ
 < 0)

94 
	`≥º‹
("git-ssh-upload:Ñead ");

97 i‡(
ty≥
 ='v' && 
	`£rve_vîsi⁄
(
fd_ö
, 
fd_out
))

99 i‡(
ty≥
 ='o' && 
	`£rve_obje˘
(
fd_ö
, 
fd_out
))

101 i‡(
ty≥
 ='r' && 
	`£rve_ªf
(
fd_ö
, 
fd_out
))

104 
	}
}

106 c⁄° 
	gssh_push_ußge
[] =

107 
MY_PROGRAM_NAME
 " [-c] [-t] [-a] [-wÑef] commit-id url";

109 
	$maö
(
¨gc
, **
¨gv
)

111 
¨g
 = 1;

112 *
commô_id
;

113 *
uæ
;

114 
fd_ö
, 
fd_out
;

115 c⁄° *
¥og
;

116 
sha1
[20];

117 
hex
[41];

119 
¥og
 = 
	`gëív
(
COUNTERPART_ENV_NAME
);

120 i‡(!
¥og
Ë¥og = 
COUNTERPART_PROGRAM_NAME
;

122 
	`£tup_gô_dúe˘‹y
();

124 
¨g
 < 
¨gc
 && 
¨gv
[arg][0] == '-') {

125 i‡(
¨gv
[
¨g
][1] == 'w')

126 
¨g
++;

127 
¨g
++;

129 i‡(
¨gc
 < 
¨g
 + 2)

130 
	`ußge
(
ssh_push_ußge
);

131 
commô_id
 = 
¨gv
[
¨g
];

132 
uæ
 = 
¨gv
[
¨g
 + 1];

133 i‡(
	`gë_sha1
(
commô_id
, 
sha1
))

134 
	`dõ
("NŸá vÆid obje˘Çamê%s", 
commô_id
);

135 
	`mem˝y
(
hex
, 
	`sha1_to_hex
(
sha1
), (hex));

136 
¨gv
[
¨g
] = 
hex
;

138 i‡(
	`£tup_c⁄√˘i⁄
(&
fd_ö
, &
fd_out
, 
¥og
, 
uæ
, 
¨g
, 
¨gv
 + 1))

141 
	`£rvi˚
(
fd_ö
, 
fd_out
);

143 
	}
}

	@strbuf.c

1 
	~"ˇche.h
"

2 
	~"°rbuf.h
"

4 
	$°rbuf_öô
(
°rbuf
 *
sb
) {

5 
sb
->
buf
 = 
NULL
;

6 
sb
->
eof
 = sb->
Æloc
 = sb->
Àn
 = 0;

7 
	}
}

9 
	$°rbuf_begö
(
°rbuf
 *
sb
) {

10 
	`‰ì
(
sb
->
buf
);

11 
	`°rbuf_öô
(
sb
);

12 
	}
}

14 
ölöe
 
	$°rbuf_add
(
°rbuf
 *
sb
, 
ch
) {

15 i‡(
sb
->
Æloc
 <sb->
Àn
) {

16 
sb
->
Æloc
 = sb->alloc * 3 / 2 + 16;

17 
sb
->
buf
 = 
	`xªÆloc
(sb->buf, sb->
Æloc
);

19 
sb
->
buf
[sb->
Àn
++] = 
ch
;

20 
	}
}

22 
	$°rbuf_íd
(
°rbuf
 *
sb
) {

23 
	`°rbuf_add
(
sb
, 0);

24 
	}
}

26 
	$ªad_löe
(
°rbuf
 *
sb
, 
FILE
 *
Â
, 
ãrm
) {

27 
ch
;

28 
	`°rbuf_begö
(
sb
);

29 i‡(
	`„of
(
Â
)) {

30 
sb
->
eof
 = 1;

33 (
ch
 = 
	`fgëc
(
Â
)Ë!
EOF
) {

34 i‡(
ch
 =
ãrm
)

36 
	`°rbuf_add
(
sb
, 
ch
);

38 i‡(
ch
 =
EOF
 && 
sb
->
Àn
 == 0)

39 
sb
->
eof
 = 1;

40 
	`°rbuf_íd
(
sb
);

41 
	}
}

	@strbuf.h

1 #i‚de‡
STRBUF_H


2 
	#STRBUF_H


	)

3 
	s°rbuf
 {

4 
	mÆloc
;

5 
	mÀn
;

6 
	meof
;

7 *
	mbuf
;

10 
°rbuf_öô
(
°rbuf
 *);

11 
ªad_löe
(
°rbuf
 *, 
FILE
 *, );

	@tag.c

1 
	~"ˇche.h
"

2 
	~"èg.h
"

4 c⁄° *
	gèg_ty≥
 = "tag";

6 
obje˘
 *
	$dîef_èg
(
obje˘
 *
o
, c⁄° *
w¨n
, 
w¨∆í
)

8 
o
 && o->
ty≥
 =
OBJ_TAG
)

9 
o
 = 
	`∑r£_obje˘
(((
èg
 *)o)->
ègged
->
sha1
);

10 i‡(!
o
 && 
w¨n
) {

11 i‡(!
w¨∆í
)

12 
w¨∆í
 = 
	`°æí
(
w¨n
);

13 
	`îr‹
("missög obje˘Ñe„ªn˚d by '%.*s'", 
w¨∆í
, 
w¨n
);

15  
o
;

16 
	}
}

18 
èg
 *
	$lookup_èg
(c⁄° *
sha1
)

20 
obje˘
 *
obj
 = 
	`lookup_obje˘
(
sha1
);

21 i‡(!
obj
) {

22 
èg
 *
ªt
 = 
	`Æloc_èg_node
();

23 
	`¸óãd_obje˘
(
sha1
, &
ªt
->
obje˘
);

24 
ªt
->
obje˘
.
ty≥
 = 
OBJ_TAG
;

25  
ªt
;

27 i‡(!
obj
->
ty≥
)

28 
obj
->
ty≥
 = 
OBJ_TAG
;

29 i‡(
obj
->
ty≥
 !
OBJ_TAG
) {

30 
	`îr‹
("Object %s isá %s,ÇotáÅree",

31 
	`sha1_to_hex
(
sha1
), 
	`ty≥«me
(
obj
->
ty≥
));

32  
NULL
;

34  (
èg
 *Ë
obj
;

35 
	}
}

37 
	$∑r£_èg_buf„r
(
èg
 *
ôem
, *
d©a
, 
size
)

39 
ty≥Àn
, 
ègÀn
;

40 
obje˘
[20];

41 c⁄° *
ty≥_löe
, *
èg_löe
, *
sig_löe
;

42 
ty≥
[20];

44 i‡(
ôem
->
obje˘
.
∑r£d
)

46 
ôem
->
obje˘
.
∑r£d
 = 1;

48 i‡(
size
 < 64)

50 i‡(
	`memcmp
("obje˘ ", 
d©a
, 7Ë|| 
	`gë_sha1_hex
((*Ëd©®+ 7, 
obje˘
))

53 
ty≥_löe
 = (*Ë
d©a
 + 48;

54 i‡(
	`memcmp
("\¡y≥ ", 
ty≥_löe
-1, 6))

57 
èg_löe
 = 
	`°rchr
(
ty≥_löe
, '\n');

58 i‡(!
èg_löe
 || 
	`memcmp
("tag ", ++tag_line, 4))

61 
sig_löe
 = 
	`°rchr
(
èg_löe
, '\n');

62 i‡(!
sig_löe
)

64 
sig_löe
++;

66 
ty≥Àn
 = 
èg_löe
 - 
ty≥_löe
 - 
	`°æí
("type \n");

67 i‡(
ty≥Àn
 >= 20)

69 
	`mem˝y
(
ty≥
, 
ty≥_löe
 + 5, 
ty≥Àn
);

70 
ty≥
[
ty≥Àn
] = '\0';

71 
ègÀn
 = 
sig_löe
 - 
èg_löe
 - 
	`°æí
("tag \n");

72 
ôem
->
èg
 = 
	`xmÆloc
(
ègÀn
 + 1);

73 
	`mem˝y
(
ôem
->
èg
, 
èg_löe
 + 4, 
ègÀn
);

74 
ôem
->
èg
[
ègÀn
] = '\0';

76 
ôem
->
ègged
 = 
	`lookup_obje˘_ty≥
(
obje˘
, 
ty≥
);

77 i‡(
ôem
->
ègged
 && 
åack_obje˘_ªfs
) {

78 
obje˘_ªfs
 *
ªfs
 = 
	`Æloc_obje˘_ªfs
(1);

79 
ªfs
->
ªf
[0] = 
ôem
->
ègged
;

80 
	`£t_obje˘_ªfs
(&
ôem
->
obje˘
, 
ªfs
);

84 
	}
}

86 
	$∑r£_èg
(
èg
 *
ôem
)

88 
ty≥
[20];

89 *
d©a
;

90 
size
;

91 
ªt
;

93 i‡(
ôem
->
obje˘
.
∑r£d
)

95 
d©a
 = 
	`ªad_sha1_fûe
(
ôem
->
obje˘
.
sha1
, 
ty≥
, &
size
);

96 i‡(!
d©a
)

97  
	`îr‹
("CouldÇotÑead %s",

98 
	`sha1_to_hex
(
ôem
->
obje˘
.
sha1
));

99 i‡(
	`°rcmp
(
ty≥
, 
èg_ty≥
)) {

100 
	`‰ì
(
d©a
);

101  
	`îr‹
("Object %sÇotáÅag",

102 
	`sha1_to_hex
(
ôem
->
obje˘
.
sha1
));

104 
ªt
 = 
	`∑r£_èg_buf„r
(
ôem
, 
d©a
, 
size
);

105 
	`‰ì
(
d©a
);

106  
ªt
;

107 
	}
}

	@tag.h

1 #i‚de‡
TAG_H


2 
	#TAG_H


	)

4 
	~"obje˘.h
"

6 c⁄° *
èg_ty≥
;

8 
	sèg
 {

9 
obje˘
 
	mobje˘
;

10 
obje˘
 *
	mègged
;

11 *
	mèg
;

12 *
	msig«tuª
;

15 
èg
 *
lookup_èg
(c⁄° *
sha1
);

16 
∑r£_èg_buf„r
(
èg
 *
ôem
, *
d©a
, 
size
);

17 
∑r£_èg
(
èg
 *
ôem
);

18 
obje˘
 *
dîef_èg
(object *, const *, );

	@tar.h

1 
	#TYPEFLAG_AUTO
 '\0'

	)

2 
	#TYPEFLAG_REG
 '0'

	)

3 
	#TYPEFLAG_LNK
 '2'

	)

4 
	#TYPEFLAG_DIR
 '5'

	)

5 
	#TYPEFLAG_GLOBAL_HEADER
 'g'

	)

6 
	#TYPEFLAG_EXT_HEADER
 'x'

	)

8 
	su°¨_hódî
 {

9 
	m«me
[100];

10 
	mmode
[8];

11 
	muid
[8];

12 
	mgid
[8];

13 
	msize
[12];

14 
	mmtime
[12];

15 
	mchksum
[8];

16 
	mty≥Êag
[1];

17 
	mlök«me
[100];

18 
	mmagic
[6];

19 
	mvîsi⁄
[2];

20 
	mu«me
[32];

21 
	mg«me
[32];

22 
	mdevmaj‹
[8];

23 
	mdevmö‹
[8];

24 
	m¥efix
[155];

	@test-date.c

1 
	~"ˇche.h
"

3 
	$maö
(
¨gc
, **
¨gv
)

5 
i
;

7 
i
 = 1; i < 
¨gc
; i++) {

8 
ªsu…
[100];

9 
time_t
 
t
;

11 
	`mem˝y
(
ªsu…
, "bad", 4);

12 
	`∑r£_d©e
(
¨gv
[
i
], 
ªsu…
, (result));

13 
t
 = 
	`°πoul
(
ªsu…
, 
NULL
, 0);

14 
	`¥ötf
("%†-> %†-> %s", 
¨gv
[
i
], 
ªsu…
, 
	`˘ime
(&
t
));

16 
t
 = 
	`≠¥oxid©e
(
¨gv
[
i
]);

17 
	`¥ötf
("%†-> %s\n", 
¨gv
[
i
], 
	`˘ime
(&
t
));

20 
	}
}

	@test-delta.c

11 
	~"gô-com∑t-utû.h
"

12 
	~"dñè.h
"

14 c⁄° 
	gußge
[] =

17 
	$maö
(
¨gc
, *
¨gv
[])

19 
fd
;

20 
°©
 
°
;

21 *
‰om_buf
, *
d©a_buf
, *
out_buf
;

22 
‰om_size
, 
d©a_size
, 
out_size
;

24 i‡(
¨gc
 !5 || (
	`°rcmp
(
¨gv
[1], "-d") && strcmp(argv[1], "-p"))) {

25 
	`Ârötf
(
°dîr
, "Ußge: %s\n", 
ußge
);

29 
fd
 = 
	`›í
(
¨gv
[2], 
O_RDONLY
);

30 i‡(
fd
 < 0 || 
	`f°©
(fd, &
°
)) {

31 
	`≥º‹
(
¨gv
[2]);

34 
‰om_size
 = 
°
.
°_size
;

35 
‰om_buf
 = 
	`mm≠
(
NULL
, 
‰om_size
, 
PROT_READ
, 
MAP_PRIVATE
, 
fd
, 0);

36 i‡(
‰om_buf
 =
MAP_FAILED
) {

37 
	`≥º‹
(
¨gv
[2]);

38 
	`˛o£
(
fd
);

41 
	`˛o£
(
fd
);

43 
fd
 = 
	`›í
(
¨gv
[3], 
O_RDONLY
);

44 i‡(
fd
 < 0 || 
	`f°©
(fd, &
°
)) {

45 
	`≥º‹
(
¨gv
[3]);

48 
d©a_size
 = 
°
.
°_size
;

49 
d©a_buf
 = 
	`mm≠
(
NULL
, 
d©a_size
, 
PROT_READ
, 
MAP_PRIVATE
, 
fd
, 0);

50 i‡(
d©a_buf
 =
MAP_FAILED
) {

51 
	`≥º‹
(
¨gv
[3]);

52 
	`˛o£
(
fd
);

55 
	`˛o£
(
fd
);

57 i‡(
¨gv
[1][1] == 'd')

58 
out_buf
 = 
	`diff_dñè
(
‰om_buf
, 
‰om_size
,

59 
d©a_buf
, 
d©a_size
,

60 &
out_size
, 0);

62 
out_buf
 = 
	`∑tch_dñè
(
‰om_buf
, 
‰om_size
,

63 
d©a_buf
, 
d©a_size
,

64 &
out_size
);

65 i‡(!
out_buf
) {

66 
	`Ârötf
(
°dîr
, "delta operation failed (returned NULL)\n");

70 
fd
 = 
	`›í
 (
¨gv
[4], 
O_WRONLY
|
O_CREAT
|
O_TRUNC
, 0666);

71 i‡(
fd
 < 0 || 
	`wrôe_ö_fuŒ
(fd, 
out_buf
, 
out_size
) != out_size) {

72 
	`≥º‹
(
¨gv
[4]);

77 
	}
}

	@test-sha1.c

1 
	~"ˇche.h
"

3 
	$maö
(
ac
, **
av
)

5 
SHA_CTX
 
˘x
;

6 
sha1
[20];

7 
bufsz
 = 8192;

8 *
buf„r
;

10 i‡(
ac
 == 2)

11 
bufsz
 = 
	`°πoul
(
av
[1], 
NULL
, 10) * 1024 * 1024;

13 i‡(!
bufsz
)

14 
bufsz
 = 8192;

16 (
buf„r
 = 
	`mÆloc
(
bufsz
)Ë=
NULL
) {

17 
	`Ârötf
(
°dîr
, "bufsz %u i†toÿbig, hÆvög...\n", 
bufsz
);

18 
bufsz
 /= 2;

19 i‡(
bufsz
 < 1024)

20 
	`dõ
("OOPS");

23 
	`SHA1_Inô
(&
˘x
);

26 
ssize_t
 
sz
, 
this_sz
;

27 *
˝
 = 
buf„r
;

28 
room
 = 
bufsz
;

29 
this_sz
 = 0;

30 
room
) {

31 
sz
 = 
	`xªad
(0, 
˝
, 
room
);

32 i‡(
sz
 == 0)

34 i‡(
sz
 < 0)

35 
	`dõ
("ã°-sha1: %s", 
	`°ªº‹
(
î∫o
));

36 
this_sz
 +
sz
;

37 
˝
 +
sz
;

38 
room
 -
sz
;

40 i‡(
this_sz
 == 0)

42 
	`SHA1_Upd©e
(&
˘x
, 
buf„r
, 
this_sz
);

44 
	`SHA1_FöÆ
(
sha1
, &
˘x
);

45 
	`puts
(
	`sha1_to_hex
(
sha1
));

46 
	`exô
(0);

47 
	}
}

	@trace.c

25 
	~"ˇche.h
"

26 
	~"quŸe.h
"

29 
	$gô_va•rötf
(**
°Ω
, c⁄° *
fmt
, 
va_li°
 
≠
)

31 
Àn
;

32 
tmp
[1024];

34 i‡((
Àn
 = 
	`v¢¥ötf
(
tmp
, —mp), 
fmt
, 
≠
)) < 0 ||

35 !(*
°Ω
 = 
	`xmÆloc
(
Àn
 + 1)))

37 i‡(
Àn
 >()(
tmp
))

38 
	`v•rötf
(*
°Ω
, 
fmt
, 
≠
);

40 
	`mem˝y
(*
°Ω
, 
tmp
, 
Àn
 + 1);

41  
Àn
;

42 
	}
}

45 
	$nfva•rötf
(**
°r
, c⁄° *
fmt
, 
va_li°
 
va
)

47 
ªt
 = 
	`gô_va•rötf
(
°r
, 
fmt
, 
va
);

48 i‡(
ªt
 < 0)

49 
	`dõ
("Fatal: Out of memory\n");

50  
ªt
;

51 
	}
}

54 
	$gë_åa˚_fd
(*
√ed_˛o£
)

56 *
åa˚
 = 
	`gëív
("GIT_TRACE");

58 i‡(!
åa˚
 || !
	`°rcmp
(trace, "") ||

59 !
	`°rcmp
(
åa˚
, "0"Ë|| !
	`°rˇ£cmp
(trace, "false"))

61 i‡(!
	`°rcmp
(
åa˚
, "1"Ë|| !
	`°rˇ£cmp
(trace, "true"))

62  
STDERR_FILENO
;

63 i‡(
	`°æí
(
åa˚
Ë=1 && 
	`isdigô
(*trace))

64  
	`©oi
(
åa˚
);

65 i‡(*
åa˚
 == '/') {

66 
fd
 = 
	`›í
(
åa˚
, 
O_WRONLY
 | 
O_APPEND
 | 
O_CREAT
, 0666);

67 i‡(
fd
 == -1) {

68 
	`Ârötf
(
°dîr
,

71 
åa˚
, 
	`°ªº‹
(
î∫o
));

72  
STDERR_FILENO
;

74 *
√ed_˛o£
 = 1;

75  
fd
;

78 
	`Ârötf
(
°dîr
, "Wh© d€†'%s' f‹ GIT_TRACE món†?\n", 
åa˚
);

79 
	`Ârötf
(
°dîr
, "If you wantÅoÅrace intoá file, "

82 
	`Ârötf
(
°dîr
, "DefaultingÅoÅracing on stderr...\n");

84  
STDERR_FILENO
;

85 
	}
}

87 c⁄° 
	gîr_msg
[] = "CouldÇotÅrace into fd given by "

90 
	$åa˚_¥ötf
(c⁄° *
f‹m©
, ...)

92 *
åa˚_°r
;

93 
va_li°
 
ª°
;

94 
√ed_˛o£
 = 0;

95 
fd
 = 
	`gë_åa˚_fd
(&
√ed_˛o£
);

97 i‡(!
fd
)

100 
	`va_°¨t
(
ª°
, 
f‹m©
);

101 
	`nfva•rötf
(&
åa˚_°r
, 
f‹m©
, 
ª°
);

102 
	`va_íd
(
ª°
);

104 
	`wrôe_‹_whöe_pùe
(
fd
, 
åa˚_°r
, 
	`°æí
—ø˚_°r), 
îr_msg
);

106 
	`‰ì
(
åa˚_°r
);

108 i‡(
√ed_˛o£
)

109 
	`˛o£
(
fd
);

110 
	}
}

112 
	$åa˚_¨gv_¥ötf
(c⁄° **
¨gv
, 
cou¡
, c⁄° *
f‹m©
, ...)

114 *
¨gv_°r
, *
f‹m©_°r
, *
åa˚_°r
;

115 
size_t
 
¨gv_Àn
, 
f‹m©_Àn
, 
åa˚_Àn
;

116 
va_li°
 
ª°
;

117 
√ed_˛o£
 = 0;

118 
fd
 = 
	`gë_åa˚_fd
(&
√ed_˛o£
);

120 i‡(!
fd
)

124 
¨gv_°r
 = 
	`sq_quŸe_¨gv
(
¨gv
, 
cou¡
);

125 
¨gv_Àn
 = 
	`°æí
(
¨gv_°r
);

128 
	`va_°¨t
(
ª°
, 
f‹m©
);

129 
	`nfva•rötf
(&
f‹m©_°r
, 
f‹m©
, 
ª°
);

130 
	`va_íd
(
ª°
);

133 
f‹m©_Àn
 = 
	`°æí
(
f‹m©_°r
);

134 
åa˚_Àn
 = 
¨gv_Àn
 + 
f‹m©_Àn
 + 1;

135 
åa˚_°r
 = 
	`xmÆloc
(
åa˚_Àn
 + 1);

138 
	`°∫˝y
(
åa˚_°r
, 
f‹m©_°r
, 
f‹m©_Àn
);

139 
	`°∫˝y
(
åa˚_°r
 + 
f‹m©_Àn
, 
¨gv_°r
, 
¨gv_Àn
);

140 
	`°r˝y
(
åa˚_°r
 + 
åa˚_Àn
 - 1, "\n");

142 
	`wrôe_‹_whöe_pùe
(
fd
, 
åa˚_°r
, 
åa˚_Àn
, 
îr_msg
);

144 
	`‰ì
(
¨gv_°r
);

145 
	`‰ì
(
f‹m©_°r
);

146 
	`‰ì
(
åa˚_°r
);

148 i‡(
√ed_˛o£
)

149 
	`˛o£
(
fd
);

150 
	}
}

	@tree-diff.c

4 
	~"ˇche.h
"

5 
	~"diff.h
"

6 
	~"åì.h
"

8 *
	$mÆloc_ba£
(c⁄° *
ba£
, c⁄° *
∑th
, 
∑thÀn
)

10 
ba£Àn
 = 
	`°æí
(
ba£
);

11 *
√wba£
 = 
	`xmÆloc
(
ba£Àn
 + 
∑thÀn
 + 2);

12 
	`mem˝y
(
√wba£
, 
ba£
, 
ba£Àn
);

13 
	`mem˝y
(
√wba£
 + 
ba£Àn
, 
∑th
, 
∑thÀn
);

14 
	`mem˝y
(
√wba£
 + 
ba£Àn
 + 
∑thÀn
, "/", 2);

15  
√wba£
;

16 
	}
}

18 
show_íåy
(
diff_›ti⁄s
 *
›t
, c⁄° *
¥efix
, 
åì_desc
 *
desc
,

19 c⁄° *
ba£
);

21 
	$com∑ª_åì_íåy
(
åì_desc
 *
t1
, åì_des¯*
t2
, c⁄° *
ba£
, 
diff_›ti⁄s
 *
›t
)

23 
mode1
, 
mode2
;

24 c⁄° *
∑th1
, *
∑th2
;

25 c⁄° *
sha1
, *
sha2
;

26 
cmp
, 
∑thÀn1
, 
∑thÀn2
;

28 
sha1
 = 
	`åì_íåy_exåa˘
(
t1
, &
∑th1
, &
mode1
);

29 
sha2
 = 
	`åì_íåy_exåa˘
(
t2
, &
∑th2
, &
mode2
);

31 
∑thÀn1
 = 
	`°æí
(
∑th1
);

32 
∑thÀn2
 = 
	`°æí
(
∑th2
);

33 
cmp
 = 
	`ba£_«me_com∑ª
(
∑th1
, 
∑thÀn1
, 
mode1
, 
∑th2
, 
∑thÀn2
, 
mode2
);

34 i‡(
cmp
 < 0) {

35 
	`show_íåy
(
›t
, "-", 
t1
, 
ba£
);

38 i‡(
cmp
 > 0) {

39 
	`show_íåy
(
›t
, "+", 
t2
, 
ba£
);

42 i‡(!
›t
->
föd_c›õs_h¨dî
 && !
	`hashcmp
(
sha1
, 
sha2
Ë&& 
mode1
 =
mode2
)

49 i‡(
	`S_ISDIR
(
mode1
Ë!S_ISDIR(
mode2
)) {

50 
	`show_íåy
(
›t
, "-", 
t1
, 
ba£
);

51 
	`show_íåy
(
›t
, "+", 
t2
, 
ba£
);

55 i‡(
›t
->
ªcursive
 && 
	`S_ISDIR
(
mode1
)) {

56 
ªtvÆ
;

57 *
√wba£
 = 
	`mÆloc_ba£
(
ba£
, 
∑th1
, 
∑thÀn1
);

58 i‡(
›t
->
åì_ö_ªcursive
)

59 
›t
->
	`ch™ge
(›t, 
mode1
, 
mode2
,

60 
sha1
, 
sha2
, 
ba£
, 
∑th1
);

61 
ªtvÆ
 = 
	`diff_åì_sha1
(
sha1
, 
sha2
, 
√wba£
, 
›t
);

62 
	`‰ì
(
√wba£
);

63  
ªtvÆ
;

66 
›t
->
	`ch™ge
(›t, 
mode1
, 
mode2
, 
sha1
, 
sha2
, 
ba£
, 
∑th1
);

68 
	}
}

70 
	$öãª°ög
(
åì_desc
 *
desc
, c⁄° *
ba£
, 
diff_›ti⁄s
 *
›t
)

72 c⁄° *
∑th
;

73 
mode
;

74 
i
;

75 
ba£Àn
, 
∑thÀn
;

77 i‡(!
›t
->
ƒ_∑ths
)

80 ()
	`åì_íåy_exåa˘
(
desc
, &
∑th
, &
mode
);

82 
∑thÀn
 = 
	`°æí
(
∑th
);

83 
ba£Àn
 = 
	`°æí
(
ba£
);

85 
i
=0; i < 
›t
->
ƒ_∑ths
; i++) {

86 c⁄° *
m©ch
 = 
›t
->
∑ths
[
i
];

87 
m©chÀn
 = 
›t
->
∑thÀns
[
i
];

89 i‡(
ba£Àn
 >
m©chÀn
) {

91 i‡(
	`°∫cmp
(
ba£
, 
m©ch
, 
m©chÀn
))

99 i‡(
	`°∫cmp
(
ba£
, 
m©ch
, 
ba£Àn
))

102 
m©ch
 +
ba£Àn
;

103 
m©chÀn
 -
ba£Àn
;

105 i‡(
∑thÀn
 > 
m©chÀn
)

108 i‡(
m©chÀn
 > 
∑thÀn
) {

109 i‡(
m©ch
[
∑thÀn
] != '/')

111 i‡(!
	`S_ISDIR
(
mode
))

115 i‡(
	`°∫cmp
(
∑th
, 
m©ch
, 
∑thÀn
))

121 
	}
}

124 
	$show_åì
(
diff_›ti⁄s
 *
›t
, c⁄° *
¥efix
, 
åì_desc
 *
desc
, c⁄° *
ba£
)

126 
desc
->
size
) {

127 i‡(
	`öãª°ög
(
desc
, 
ba£
, 
›t
))

128 
	`show_íåy
(
›t
, 
¥efix
, 
desc
, 
ba£
);

129 
	`upd©e_åì_íåy
(
desc
);

131 
	}
}

134 
	$show_íåy
(
diff_›ti⁄s
 *
›t
, c⁄° *
¥efix
, 
åì_desc
 *
desc
,

135 c⁄° *
ba£
)

137 
mode
;

138 c⁄° *
∑th
;

139 c⁄° *
sha1
 = 
	`åì_íåy_exåa˘
(
desc
, &
∑th
, &
mode
);

141 i‡(
›t
->
ªcursive
 && 
	`S_ISDIR
(
mode
)) {

142 
ty≥
[20];

143 *
√wba£
 = 
	`mÆloc_ba£
(
ba£
, 
∑th
, 
	`°æí
(path));

144 
åì_desc
 
ö√r
;

145 *
åì
;

147 
åì
 = 
	`ªad_sha1_fûe
(
sha1
, 
ty≥
, &
ö√r
.
size
);

148 i‡(!
åì
 || 
	`°rcmp
(
ty≥
, 
åì_ty≥
))

149 
	`dõ
("c‹ru±Åªêsh®%s", 
	`sha1_to_hex
(
sha1
));

151 
ö√r
.
buf
 = 
åì
;

152 
	`show_åì
(
›t
, 
¥efix
, &
ö√r
, 
√wba£
);

154 
	`‰ì
(
åì
);

155 
	`‰ì
(
√wba£
);

157 
›t
->
	`add_ªmove
(›t, 
¥efix
[0], 
mode
, 
sha1
, 
ba£
, 
∑th
);

159 
	}
}

161 
	$diff_åì
(
åì_desc
 *
t1
, åì_des¯*
t2
, c⁄° *
ba£
, 
diff_›ti⁄s
 *
›t
)

163 
t1
->
size
 | 
t2
->size) {

164 i‡(
›t
->
ƒ_∑ths
 && 
t1
->
size
 && !
	`öãª°ög
—1, 
ba£
, opt)) {

165 
	`upd©e_åì_íåy
(
t1
);

168 i‡(
›t
->
ƒ_∑ths
 && 
t2
->
size
 && !
	`öãª°ög
—2, 
ba£
, opt)) {

169 
	`upd©e_åì_íåy
(
t2
);

172 i‡(!
t1
->
size
) {

173 
	`show_íåy
(
›t
, "+", 
t2
, 
ba£
);

174 
	`upd©e_åì_íåy
(
t2
);

177 i‡(!
t2
->
size
) {

178 
	`show_íåy
(
›t
, "-", 
t1
, 
ba£
);

179 
	`upd©e_åì_íåy
(
t1
);

182 
	`com∑ª_åì_íåy
(
t1
, 
t2
, 
ba£
, 
›t
)) {

184 
	`upd©e_åì_íåy
(
t1
);

187 
	`upd©e_åì_íåy
(
t1
);

190 
	`upd©e_åì_íåy
(
t2
);

193 
	`dõ
("git-diff-tree: internalÉrror");

196 
	}
}

198 
	$diff_åì_sha1
(c⁄° *
ﬁd
, c⁄° *
√w
, c⁄° *
ba£
, 
diff_›ti⁄s
 *
›t
)

200 *
åì1
, *
åì2
;

201 
åì_desc
 
t1
, 
t2
;

202 
ªtvÆ
;

204 
åì1
 = 
	`ªad_obje˘_wôh_ª„ªn˚
(
ﬁd
, 
åì_ty≥
, &
t1
.
size
, 
NULL
);

205 i‡(!
åì1
)

206 
	`dõ
("u«bÀÅÿªad sour˚Åªê(%s)", 
	`sha1_to_hex
(
ﬁd
));

207 
åì2
 = 
	`ªad_obje˘_wôh_ª„ªn˚
(
√w
, 
åì_ty≥
, &
t2
.
size
, 
NULL
);

208 i‡(!
åì2
)

209 
	`dõ
("u«bÀÅÿªad de°ö©i⁄Åªê(%s)", 
	`sha1_to_hex
(
√w
));

210 
t1
.
buf
 = 
åì1
;

211 
t2
.
buf
 = 
åì2
;

212 
ªtvÆ
 = 
	`diff_åì
(&
t1
, &
t2
, 
ba£
, 
›t
);

213 
	`‰ì
(
åì1
);

214 
	`‰ì
(
åì2
);

215  
ªtvÆ
;

216 
	}
}

218 
	$diff_roŸ_åì_sha1
(c⁄° *
√w
, c⁄° *
ba£
, 
diff_›ti⁄s
 *
›t
)

220 
ªtvÆ
;

221 *
åì
;

222 
åì_desc
 
em±y
, 
ªÆ
;

224 
åì
 = 
	`ªad_obje˘_wôh_ª„ªn˚
(
√w
, 
åì_ty≥
, &
ªÆ
.
size
, 
NULL
);

225 i‡(!
åì
)

226 
	`dõ
("u«bÀÅÿªadÑoŸÅªê(%s)", 
	`sha1_to_hex
(
√w
));

227 
ªÆ
.
buf
 = 
åì
;

229 
em±y
.
size
 = 0;

230 
em±y
.
buf
 = "";

231 
ªtvÆ
 = 
	`diff_åì
(&
em±y
, &
ªÆ
, 
ba£
, 
›t
);

232 
	`‰ì
(
åì
);

233  
ªtvÆ
;

234 
	}
}

236 
	$cou¡_∑ths
(c⁄° **
∑ths
)

238 
i
 = 0;

239 *
∑ths
++)

240 
i
++;

241  
i
;

242 
	}
}

244 
	$diff_åì_ªÀa£_∑ths
(
diff_›ti⁄s
 *
›t
)

246 
	`‰ì
(
›t
->
∑thÀns
);

247 
	}
}

249 
	$diff_åì_£tup_∑ths
(c⁄° **
p
, 
diff_›ti⁄s
 *
›t
)

251 
›t
->
ƒ_∑ths
 = 0;

252 
›t
->
∑thÀns
 = 
NULL
;

253 
›t
->
∑ths
 = 
NULL
;

255 i‡(
p
) {

256 
i
;

258 
›t
->
∑ths
 = 
p
;

259 
›t
->
ƒ_∑ths
 = 
	`cou¡_∑ths
(
p
);

260 i‡(
›t
->
ƒ_∑ths
 == 0) {

261 
›t
->
∑thÀns
 = 
NULL
;

264 
›t
->
∑thÀns
 = 
	`xmÆloc
(›t->
ƒ_∑ths
 * ());

265 
i
=0; i < 
›t
->
ƒ_∑ths
; i++)

266 
›t
->
∑thÀns
[
i
] = 
	`°æí
(
p
[i]);

268 
	}
}

	@tree-walk.c

1 
	~"ˇche.h
"

2 
	~"åì-wÆk.h
"

3 
	~"åì.h
"

5 *
	$fûl_åì_des¸ùt‹
(
åì_desc
 *
desc
, c⁄° *
sha1
)

7 
size
 = 0;

8 *
buf
 = 
NULL
;

10 i‡(
sha1
) {

11 
buf
 = 
	`ªad_obje˘_wôh_ª„ªn˚
(
sha1
, 
åì_ty≥
, &
size
, 
NULL
);

12 i‡(!
buf
)

13 
	`dõ
("u«bÀÅÿªadÅªê%s", 
	`sha1_to_hex
(
sha1
));

15 
desc
->
size
 = size;

16 
desc
->
buf
 = buf;

17  
buf
;

18 
	}
}

20 
	$íåy_com∑ª
(
«me_íåy
 *
a
, «me_íåy *
b
)

22  
	`ba£_«me_com∑ª
(

23 
a
->
∑th
,á->
∑thÀn
,á->
mode
,

24 
b
->
∑th
, b->
∑thÀn
, b->
mode
);

25 
	}
}

27 
	$íåy_˛ór
(
«me_íåy
 *
a
)

29 
	`mem£t
(
a
, 0, (*a));

30 
	}
}

32 
	$íåy_exåa˘
(
åì_desc
 *
t
, 
«me_íåy
 *
a
)

34 
a
->
sha1
 = 
	`åì_íåy_exåa˘
(
t
, &a->
∑th
, &a->
mode
);

35 
a
->
∑thÀn
 = 
	`°æí
◊->
∑th
);

36 
	}
}

38 
	$upd©e_åì_íåy
(
åì_desc
 *
desc
)

40 c⁄° *
buf
 = 
desc
->buf;

41 
size
 = 
desc
->size;

42 
Àn
 = 
	`°æí
(
buf
) + 1 + 20;

44 i‡(
size
 < 
Àn
)

45 
	`dõ
("corruptÅree file");

46 
desc
->
buf
 = (*Ëbu‡+ 
Àn
;

47 
desc
->
size
 = sizê- 
Àn
;

48 
	}
}

50 c⁄° *
	$gë_mode
(c⁄° *
°r
, *
modï
)

52 
c
;

53 
mode
 = 0;

55 (
c
 = *
°r
++) != ' ') {

56 i‡(
c
 < '0' || c > '7')

57  
NULL
;

58 
mode
 = (modê<< 3Ë+ (
c
 - '0');

60 *
modï
 = 
mode
;

61  
°r
;

62 
	}
}

64 c⁄° *
	$åì_íåy_exåa˘
(
åì_desc
 *
desc
, c⁄° **
∑thp
, *
modï
)

66 c⁄° *
åì
 = 
desc
->
buf
;

67 
size
 = 
desc
->size;

68 
Àn
 = 
	`°æí
(
åì
)+1;

69 c⁄° *
sha1
 = (*Ë
åì
 + 
Àn
;

70 c⁄° *
∑th
;

71 
mode
;

73 
∑th
 = 
	`gë_mode
(
åì
, &
mode
);

74 i‡(!
∑th
 || 
size
 < 
Àn
 + 20)

75 
	`dõ
("corruptÅree file");

76 *
∑thp
 = 
∑th
;

77 *
modï
 = 
	`ˇn⁄_mode
(
mode
);

78  
sha1
;

79 
	}
}

81 
	$åì_íåy
(
åì_desc
 *
desc
, 
«me_íåy
 *
íåy
)

83 c⁄° *
åì
 = 
desc
->
buf
;

84 c⁄° *
∑th
;

85 
Àn
, 
size
 = 
desc
->size;

87 i‡(!
size
)

90 
∑th
 = 
	`gë_mode
(
åì
, &
íåy
->
mode
);

91 i‡(!
∑th
)

92 
	`dõ
("corruptÅree file");

94 
íåy
->
∑th
 =Öath;

95 
Àn
 = 
	`°æí
(
∑th
);

96 
íåy
->
∑thÀn
 = 
Àn
;

98 
∑th
 +
Àn
 + 1;

99 
íåy
->
sha1
 = (c⁄° *Ë
∑th
;

101 
∑th
 += 20;

102 
Àn
 = 
∑th
 - (*Ë
åì
;

103 i‡(
Àn
 > 
size
)

104 
	`dõ
("corruptÅree file");

106 
desc
->
buf
 = 
∑th
;

107 
desc
->
size
 = sizê- 
Àn
;

109 
	}
}

111 
	$åavî£_åìs
(
n
, 
åì_desc
 *
t
, c⁄° *
ba£
, 
åavî£_ˇŒback_t
 
ˇŒback
)

113 
«me_íåy
 *
íåy
 = 
	`xmÆloc
(
n
*(*entry));

116 
mask
 = 0;

117 
i
, 
œ°
;

119 
œ°
 = -1;

120 
i
 = 0; i < 
n
; i++) {

121 i‡(!
t
[
i
].
size
)

123 
	`íåy_exåa˘
(
t
+
i
, 
íåy
+i);

124 i‡(
œ°
 >= 0) {

125 
cmp
 = 
	`íåy_com∑ª
(
íåy
+
i
,É¡ry+
œ°
);

131 i‡(
cmp
 > 0)

137 i‡(
cmp
 < 0)

138 
mask
 = 0;

140 
mask
 |1u»<< 
i
;

141 
œ°
 = 
i
;

143 i‡(!
mask
)

150 
i
 = 0; i < 
n
; i++) {

151 i‡(
mask
 & (1u»<< 
i
)) {

152 
	`upd©e_åì_íåy
(
t
+
i
);

155 
	`íåy_˛ór
(
íåy
 + 
i
);

157 
	`ˇŒback
(
n
, 
mask
, 
íåy
, 
ba£
);

159 
	`‰ì
(
íåy
);

160 
	}
}

162 
	$föd_åì_íåy
(
åì_desc
 *
t
, c⁄° *
«me
, *
ªsu…
, *
mode
)

164 
«mñí
 = 
	`°æí
(
«me
);

165 
t
->
size
) {

166 c⁄° *
íåy
;

167 c⁄° *
sha1
;

168 
íåyÀn
, 
cmp
;

170 
sha1
 = 
	`åì_íåy_exåa˘
(
t
, &
íåy
, 
mode
);

171 
	`upd©e_åì_íåy
(
t
);

172 
íåyÀn
 = 
	`°æí
(
íåy
);

173 i‡(
íåyÀn
 > 
«mñí
)

175 
cmp
 = 
	`memcmp
(
«me
, 
íåy
, 
íåyÀn
);

176 i‡(
cmp
 > 0)

178 i‡(
cmp
 < 0)

180 i‡(
íåyÀn
 =
«mñí
) {

181 
	`hash˝y
(
ªsu…
, 
sha1
);

184 i‡(
«me
[
íåyÀn
] != '/')

186 i‡(!
	`S_ISDIR
(*
mode
))

188 i‡(++
íåyÀn
 =
«mñí
) {

189 
	`hash˝y
(
ªsu…
, 
sha1
);

192  
	`gë_åì_íåy
(
sha1
, 
«me
 + 
íåyÀn
, 
ªsu…
, 
mode
);

195 
	}
}

197 
	$gë_åì_íåy
(c⁄° *
åì_sha1
, c⁄° *
«me
, *
sha1
, *
mode
)

199 
ªtvÆ
;

200 *
åì
;

201 
åì_desc
 
t
;

202 
roŸ
[20];

204 
åì
 = 
	`ªad_obje˘_wôh_ª„ªn˚
(
åì_sha1
, 
åì_ty≥
, &
t
.
size
, 
roŸ
);

205 i‡(!
åì
)

208 i‡(
«me
[0] == '\0') {

209 
	`hash˝y
(
sha1
, 
roŸ
);

213 
t
.
buf
 = 
åì
;

214 
ªtvÆ
 = 
	`föd_åì_íåy
(&
t
, 
«me
, 
sha1
, 
mode
);

215 
	`‰ì
(
åì
);

216  
ªtvÆ
;

217 
	}
}

	@tree-walk.h

1 #i‚de‡
TREE_WALK_H


2 
	#TREE_WALK_H


	)

4 
	såì_desc
 {

5 c⁄° *
	mbuf
;

6 
	msize
;

9 
	s«me_íåy
 {

10 c⁄° *
	msha1
;

11 c⁄° *
	m∑th
;

12 
	mmode
;

13 
	m∑thÀn
;

16 
upd©e_åì_íåy
(
åì_desc
 *);

17 c⁄° *
åì_íåy_exåa˘
(
åì_desc
 *, const **, *);

20 
åì_íåy
(
åì_desc
 *, 
«me_íåy
 *);

22 *
fûl_åì_des¸ùt‹
(
åì_desc
 *
desc
, c⁄° *
sha1
);

24 (*
	tåavî£_ˇŒback_t
)(
	tn
, 
	tmask
, 
	t«me_íåy
 *
	tíåy
, c⁄° *
	tba£
);

26 
	`åavî£_åìs
(
n
, 
åì_desc
 *
t
, c⁄° *
ba£
, 
åavî£_ˇŒback_t
 
ˇŒback
);

28 
	`gë_åì_íåy
(const *, const *, *, *);

	@tree.c

1 
	~"ˇche.h
"

2 
	~"åì.h
"

3 
	~"blob.h
"

4 
	~"commô.h
"

5 
	~"èg.h
"

6 
	~"åì-wÆk.h
"

8 c⁄° *
	gåì_ty≥
 = "tree";

10 
	$ªad_⁄e_íåy
(c⁄° *
sha1
, c⁄° *
ba£
, 
ba£Àn
, c⁄° *
∑th«me
, 
mode
, 
°age
)

12 
Àn
;

13 
size
;

14 
ˇche_íåy
 *
˚
;

16 i‡(
	`S_ISDIR
(
mode
))

17  
READ_TREE_RECURSIVE
;

19 
Àn
 = 
	`°æí
(
∑th«me
);

20 
size
 = 
	`ˇche_íåy_size
(
ba£Àn
 + 
Àn
);

21 
˚
 = 
	`xˇŒoc
(1, 
size
);

23 
˚
->
˚_mode
 = 
	`¸óã_˚_mode
(
mode
);

24 
˚
->
˚_Êags
 = 
	`¸óã_˚_Êags
(
ba£Àn
 + 
Àn
, 
°age
);

25 
	`mem˝y
(
˚
->
«me
, 
ba£
, 
ba£Àn
);

26 
	`mem˝y
(
˚
->
«me
 + 
ba£Àn
, 
∑th«me
, 
Àn
+1);

27 
	`hash˝y
(
˚
->
sha1
, sha1);

28  
	`add_ˇche_íåy
(
˚
, 
ADD_CACHE_OK_TO_ADD
|
ADD_CACHE_SKIP_DFCHECK
);

29 
	}
}

31 
	$m©ch_åì_íåy
(c⁄° *
ba£
, 
ba£Àn
, c⁄° *
∑th
, 
mode
, c⁄° **
∑ths
)

33 c⁄° *
m©ch
;

34 
∑thÀn
;

36 i‡(!
∑ths
)

38 
∑thÀn
 = 
	`°æí
(
∑th
);

39 (
m©ch
 = *
∑ths
++Ë!
NULL
) {

40 
m©chÀn
 = 
	`°æí
(
m©ch
);

42 i‡(
ba£Àn
 >
m©chÀn
) {

44 i‡(
	`°∫cmp
(
ba£
, 
m©ch
, 
m©chÀn
))

51 i‡(
	`°∫cmp
(
ba£
, 
m©ch
, 
ba£Àn
))

54 
m©ch
 +
ba£Àn
;

55 
m©chÀn
 -
ba£Àn
;

57 i‡(
∑thÀn
 > 
m©chÀn
)

60 i‡(
m©chÀn
 > 
∑thÀn
) {

61 i‡(
m©ch
[
∑thÀn
] != '/')

63 i‡(!
	`S_ISDIR
(
mode
))

67 i‡(
	`°∫cmp
(
∑th
, 
m©ch
, 
∑thÀn
))

73 
	}
}

75 
	$ªad_åì_ªcursive
(
åì
 *tree,

76 c⁄° *
ba£
, 
ba£Àn
,

77 
°age
, c⁄° **
m©ch
,

78 
ªad_åì_‚_t
 
‚
)

80 
åì_desc
 
desc
;

81 
«me_íåy
 
íåy
;

83 i‡(
	`∑r£_åì
(
åì
))

86 
desc
.
buf
 = 
åì
->
buf„r
;

87 
desc
.
size
 = 
åì
->size;

89 
	`åì_íåy
(&
desc
, &
íåy
)) {

90 i‡(!
	`m©ch_åì_íåy
(
ba£
, 
ba£Àn
, 
íåy
.
∑th
,É¡ry.
mode
, 
m©ch
))

93 
	`‚
(
íåy
.
sha1
, 
ba£
, 
ba£Àn
,É¡ry.
∑th
,É¡ry.
mode
, 
°age
)) {

96 
READ_TREE_RECURSIVE
:

101 i‡(
	`S_ISDIR
(
íåy
.
mode
)) {

102 
ªtvÆ
;

103 *
√wba£
;

105 
√wba£
 = 
	`xmÆloc
(
ba£Àn
 + 1 + 
íåy
.
∑thÀn
);

106 
	`mem˝y
(
√wba£
, 
ba£
, 
ba£Àn
);

107 
	`mem˝y
(
√wba£
 + 
ba£Àn
, 
íåy
.
∑th
,É¡ry.
∑thÀn
);

108 
√wba£
[
ba£Àn
 + 
íåy
.
∑thÀn
] = '/';

109 
ªtvÆ
 = 
	`ªad_åì_ªcursive
(
	`lookup_åì
(
íåy
.
sha1
),

110 
√wba£
,

111 
ba£Àn
 + 
íåy
.
∑thÀn
 + 1,

112 
°age
, 
m©ch
, 
‚
);

113 
	`‰ì
(
√wba£
);

114 i‡(
ªtvÆ
)

120 
	}
}

122 
	$ªad_åì
(
åì
 *åì, 
°age
, c⁄° **
m©ch
)

124  
	`ªad_åì_ªcursive
(
åì
, "", 0, 
°age
, 
m©ch
, 
ªad_⁄e_íåy
);

125 
	}
}

127 
åì
 *
	$lookup_åì
(c⁄° *
sha1
)

129 
obje˘
 *
obj
 = 
	`lookup_obje˘
(
sha1
);

130 i‡(!
obj
) {

131 
åì
 *
ªt
 = 
	`Æloc_åì_node
();

132 
	`¸óãd_obje˘
(
sha1
, &
ªt
->
obje˘
);

133 
ªt
->
obje˘
.
ty≥
 = 
OBJ_TREE
;

134  
ªt
;

136 i‡(!
obj
->
ty≥
)

137 
obj
->
ty≥
 = 
OBJ_TREE
;

138 i‡(
obj
->
ty≥
 !
OBJ_TREE
) {

139 
	`îr‹
("Object %s isá %s,ÇotáÅree",

140 
	`sha1_to_hex
(
sha1
), 
	`ty≥«me
(
obj
->
ty≥
));

141  
NULL
;

143  (
åì
 *Ë
obj
;

144 
	}
}

146 
	$åack_åì_ªfs
(
åì
 *
ôem
)

148 
n_ªfs
 = 0, 
i
;

149 
obje˘_ªfs
 *
ªfs
;

150 
åì_desc
 
desc
;

151 
«me_íåy
 
íåy
;

154 
desc
.
buf
 = 
ôem
->
buf„r
;

155 
desc
.
size
 = 
ôem
->size;

156 
desc
.
size
) {

157 
n_ªfs
++;

158 
	`upd©e_åì_íåy
(&
desc
);

162 
i
 = 0;

163 
ªfs
 = 
	`Æloc_obje˘_ªfs
(
n_ªfs
);

164 
desc
.
buf
 = 
ôem
->
buf„r
;

165 
desc
.
size
 = 
ôem
->size;

166 
	`åì_íåy
(&
desc
, &
íåy
)) {

167 
obje˘
 *
obj
;

169 i‡(
	`S_ISDIR
(
íåy
.
mode
))

170 
obj
 = &
	`lookup_åì
(
íåy
.
sha1
)->
obje˘
;

172 
obj
 = &
	`lookup_blob
(
íåy
.
sha1
)->
obje˘
;

173 
ªfs
->
ªf
[
i
++] = 
obj
;

175 
	`£t_obje˘_ªfs
(&
ôem
->
obje˘
, 
ªfs
);

176 
	}
}

178 
	$∑r£_åì_buf„r
(
åì
 *
ôem
, *
buf„r
, 
size
)

180 i‡(
ôem
->
obje˘
.
∑r£d
)

182 
ôem
->
obje˘
.
∑r£d
 = 1;

183 
ôem
->
buf„r
 = buffer;

184 
ôem
->
size
 = size;

186 i‡(
åack_obje˘_ªfs
)

187 
	`åack_åì_ªfs
(
ôem
);

189 
	}
}

191 
	$∑r£_åì
(
åì
 *
ôem
)

193 
ty≥
[20];

194 *
buf„r
;

195 
size
;

197 i‡(
ôem
->
obje˘
.
∑r£d
)

199 
buf„r
 = 
	`ªad_sha1_fûe
(
ôem
->
obje˘
.
sha1
, 
ty≥
, &
size
);

200 i‡(!
buf„r
)

201  
	`îr‹
("CouldÇotÑead %s",

202 
	`sha1_to_hex
(
ôem
->
obje˘
.
sha1
));

203 i‡(
	`°rcmp
(
ty≥
, 
åì_ty≥
)) {

204 
	`‰ì
(
buf„r
);

205  
	`îr‹
("Object %sÇotáÅree",

206 
	`sha1_to_hex
(
ôem
->
obje˘
.
sha1
));

208  
	`∑r£_åì_buf„r
(
ôem
, 
buf„r
, 
size
);

209 
	}
}

211 
åì
 *
	$∑r£_åì_ödúe˘
(c⁄° *
sha1
)

213 
obje˘
 *
obj
 = 
	`∑r£_obje˘
(
sha1
);

215 i‡(!
obj
)

216  
NULL
;

217 i‡(
obj
->
ty≥
 =
OBJ_TREE
)

218  (
åì
 *Ë
obj
;

219 i‡(
obj
->
ty≥
 =
OBJ_COMMIT
)

220 
obj
 = &(((
commô
 *Ëobj)->
åì
->
obje˘
);

221 i‡(
obj
->
ty≥
 =
OBJ_TAG
)

222 
obj
 = ((
èg
 *Ëobj)->
ègged
;

224  
NULL
;

225 i‡(!
obj
->
∑r£d
)

226 
	`∑r£_obje˘
(
obj
->
sha1
);

228 
	}
}

	@tree.h

1 #i‚de‡
TREE_H


2 
	#TREE_H


	)

4 
	~"obje˘.h
"

6 c⁄° *
åì_ty≥
;

8 
	såì
 {

9 
obje˘
 
	mobje˘
;

10 *
	mbuf„r
;

11 
	msize
;

14 
åì
 *
lookup_åì
(c⁄° *
sha1
);

16 
∑r£_åì_buf„r
(
åì
 *
ôem
, *
buf„r
, 
size
);

18 
∑r£_åì
(
åì
 *tree);

21 
åì
 *
∑r£_åì_ödúe˘
(c⁄° *
sha1
);

23 
	#READ_TREE_RECURSIVE
 1

	)

24 (*
	tªad_åì_‚_t
)(const *, const *, , const *, , );

26 
	`ªad_åì_ªcursive
(
åì
 *tree,

27 c⁄° *
ba£
, 
ba£Àn
,

28 
°age
, c⁄° **
m©ch
,

29 
ªad_åì_‚_t
 
‚
);

31 
	`ªad_åì
(
åì
 *åì, 
°age
, c⁄° **
∑ths
);

	@unpack-file.c

1 
	~"ˇche.h
"

2 
	~"blob.h
"

4 *
	$¸óã_ãmp_fûe
(*
sha1
)

6 
∑th
[50];

7 *
buf
;

8 
ty≥
[100];

9 
size
;

10 
fd
;

12 
buf
 = 
	`ªad_sha1_fûe
(
sha1
, 
ty≥
, &
size
);

13 i‡(!
buf
 || 
	`°rcmp
(
ty≥
, 
blob_ty≥
))

14 
	`dõ
("u«bÀÅÿªad blob obje˘ %s", 
	`sha1_to_hex
(
sha1
));

16 
	`°r˝y
(
∑th
, ".merge_file_XXXXXX");

17 
fd
 = 
	`mk°emp
(
∑th
);

18 i‡(
fd
 < 0)

19 
	`dõ
("unableÅo createÅemp-file");

20 i‡(
	`wrôe_ö_fuŒ
(
fd
, 
buf
, 
size
) != size)

21 
	`dõ
("unableÅo writeÅemp-file");

22 
	`˛o£
(
fd
);

23  
∑th
;

24 
	}
}

26 
	$maö
(
¨gc
, **
¨gv
)

28 
sha1
[20];

30 i‡(
¨gc
 != 2)

31 
	`ußge
("git-unpack-file <sha1>");

32 i‡(
	`gë_sha1
(
¨gv
[1], 
sha1
))

33 
	`dõ
("NŸá vÆid obje˘Çamê%s", 
¨gv
[1]);

35 
	`£tup_gô_dúe˘‹y
();

36 
	`gô_c⁄fig
(
gô_deÁu…_c⁄fig
);

38 
	`puts
(
	`¸óã_ãmp_fûe
(
sha1
));

40 
	}
}

	@unpack-trees.c

1 
	~"ˇche.h
"

2 
	~"dú.h
"

3 
	~"åì.h
"

4 
	~"åì-wÆk.h
"

5 
	~"ˇche-åì.h
"

6 
	~"u≈ack-åìs.h
"

8 
	#DBRT_DEBUG
 1

	)

10 
	såì_íåy_li°
 {

11 
åì_íåy_li°
 *
	m√xt
;

12 
	mdúe˘‹y
 : 1;

13 
	mexecuèbÀ
 : 1;

14 
	msymlök
 : 1;

15 
	mmode
;

16 c⁄° *
	m«me
;

17 c⁄° *
	msha1
;

20 
åì_íåy_li°
 *
	$¸óã_åì_íåy_li°
(
åì
 *tree)

22 
åì_desc
 
desc
;

23 
«me_íåy
 
⁄e
;

24 
åì_íåy_li°
 *
ªt
 = 
NULL
;

25 
åì_íåy_li°
 **
li°_p
 = &
ªt
;

27 i‡(!
åì
->
obje˘
.
∑r£d
)

28 
	`∑r£_åì
(
åì
);

30 
desc
.
buf
 = 
åì
->
buf„r
;

31 
desc
.
size
 = 
åì
->size;

33 
	`åì_íåy
(&
desc
, &
⁄e
)) {

34 
åì_íåy_li°
 *
íåy
;

36 
íåy
 = 
	`xmÆloc
((
åì_íåy_li°
));

37 
íåy
->
«me
 = 
⁄e
.
∑th
;

38 
íåy
->
sha1
 = 
⁄e
.sha1;

39 
íåy
->
mode
 = 
⁄e
.mode;

40 
íåy
->
dúe˘‹y
 = 
	`S_ISDIR
(
⁄e
.
mode
) != 0;

41 
íåy
->
execuèbÀ
 = (
⁄e
.
mode
 & 
S_IXUSR
) != 0;

42 
íåy
->
symlök
 = 
	`S_ISLNK
(
⁄e
.
mode
) != 0;

43 
íåy
->
√xt
 = 
NULL
;

45 *
li°_p
 = 
íåy
;

46 
li°_p
 = &
íåy
->
√xt
;

48  
ªt
;

49 
	}
}

51 
	$ítcmp
(c⁄° *
«me1
, 
dú1
, c⁄° *
«me2
, 
dú2
)

53 
Àn1
 = 
	`°æí
(
«me1
);

54 
Àn2
 = 
	`°æí
(
«me2
);

55 
Àn
 = 
Àn1
 < 
Àn2
 ?Üen1 :Üen2;

56 
ªt
 = 
	`memcmp
(
«me1
, 
«me2
, 
Àn
);

57 
c1
, 
c2
;

58 i‡(
ªt
)

59  
ªt
;

60 
c1
 = 
«me1
[
Àn
];

61 
c2
 = 
«me2
[
Àn
];

62 i‡(!
c1
 && 
dú1
)

63 
c1
 = '/';

64 i‡(!
c2
 && 
dú2
)

65 
c2
 = '/';

66 
ªt
 = (
c1
 < 
c2
) ? -1 : (c1 > c2) ? 1 : 0;

67 i‡(
c1
 && 
c2
 && !
ªt
)

68 
ªt
 = 
Àn1
 - 
Àn2
;

69  
ªt
;

70 
	}
}

72 
	$u≈ack_åìs_ªc
(
åì_íåy_li°
 **
po¢s
, 
Àn
,

73 c⁄° *
ba£
, 
u≈ack_åìs_›ti⁄s
 *
o
,

74 *
ödpos
,

75 
åì_íåy_li°
 *
df_c⁄Êi˘_li°
)

77 
ba£Àn
 = 
	`°æí
(
ba£
);

78 
§c_size
 = 
Àn
 + 1;

79 
i_°k
 = i_stk;

80 
ªtvÆ
 = 0;

82 i‡(
o
->
dú
)

83 
i_°k
 = 
	`push_ex˛ude_≥r_dúe˘‹y
(
o
->
dú
, 
ba£
, 
	`°æí
(base));

86 
i
;

87 c⁄° *
fú°
;

88 
fú°dú
 = 0;

89 
∑thÀn
;

90 
˚_size
;

91 
åì_íåy_li°
 **
subpo¢s
;

92 
ˇche_íåy
 **
§c
;

93 
™y_fûes
 = 0;

94 
™y_dús
 = 0;

95 *
ˇche_«me
;

96 
˚_°age
;

100 
fú°
 = 
NULL
;

101 
ˇche_«me
 = 
NULL
;

104 i‡(
o
->
mîge
 && *
ödpos
 < 
a˘ive_ƒ
) {

122 
ˇche_«me
 = 
a˘ive_ˇche
[*
ödpos
]->
«me
;

123 i‡(
	`°æí
(
ˇche_«me
Ë> 
ba£Àn
 &&

124 !
	`memcmp
(
ˇche_«me
, 
ba£
, 
ba£Àn
)) {

125 
ˇche_«me
 +
ba£Àn
;

126 
fú°
 = 
ˇche_«me
;

128 
ˇche_«me
 = 
NULL
;

132 #i‡
DBRT_DEBUG
 > 1

133 i‡(
fú°
)

134 
	`¥ötf
("ödex %s\n", 
fú°
);

136 
i
 = 0; i < 
Àn
; i++) {

137 i‡(!
po¢s
[
i
] ||Öo¢s[i] =
df_c⁄Êi˘_li°
)

139 #i‡
DBRT_DEBUG
 > 1

140 
	`¥ötf
("%d %s\n", 
i
 + 1, 
po¢s
[i]->
«me
);

142 i‡(!
fú°
 || 
	`ítcmp
(fú°, 
fú°dú
,

143 
po¢s
[
i
]->
«me
,

144 
po¢s
[
i
]->
dúe˘‹y
) > 0) {

145 
fú°
 = 
po¢s
[
i
]->
«me
;

146 
fú°dú
 = 
po¢s
[
i
]->
dúe˘‹y
;

150 i‡(!
fú°
)

151 
Àave_dúe˘‹y
;

153 
∑thÀn
 = 
	`°æí
(
fú°
);

154 
˚_size
 = 
	`ˇche_íåy_size
(
ba£Àn
 + 
∑thÀn
);

156 
§c
 = 
	`xˇŒoc
(
§c_size
, (
ˇche_íåy
 *));

158 
subpo¢s
 = 
	`xˇŒoc
(
Àn
, (
åì_li°_íåy
 *));

160 i‡(
ˇche_«me
 && !
	`°rcmp
(ˇche_«me, 
fú°
)) {

161 
™y_fûes
 = 1;

162 
§c
[0] = 
a˘ive_ˇche
[*
ödpos
];

163 
	`ªmove_ˇche_íåy_©
(*
ödpos
);

166 
i
 = 0; i < 
Àn
; i++) {

167 
ˇche_íåy
 *
˚
;

169 i‡(!
po¢s
[
i
] ||

170 (
po¢s
[
i
] !
df_c⁄Êi˘_li°
 &&

171 
	`°rcmp
(
fú°
, 
po¢s
[
i
]->
«me
))) {

175 i‡(
po¢s
[
i
] =
df_c⁄Êi˘_li°
) {

176 
§c
[
i
 + 
o
->
mîge
] = o->
df_c⁄Êi˘_íåy
;

180 i‡(
po¢s
[
i
]->
dúe˘‹y
) {

181 
åì
 *åì = 
	`lookup_åì
(
po¢s
[
i
]->
sha1
);

182 
™y_dús
 = 1;

183 
	`∑r£_åì
(
åì
);

184 
subpo¢s
[
i
] = 
	`¸óã_åì_íåy_li°
(
åì
);

185 
po¢s
[
i
] =Öo¢s[i]->
√xt
;

186 
§c
[
i
 + 
o
->
mîge
] = o->
df_c⁄Êi˘_íåy
;

190 i‡(!
o
->
mîge
)

191 
˚_°age
 = 0;

192 i‡(
i
 + 1 < 
o
->
hód_idx
)

193 
˚_°age
 = 1;

194 i‡(
i
 + 1 > 
o
->
hód_idx
)

195 
˚_°age
 = 3;

197 
˚_°age
 = 2;

199 
˚
 = 
	`xˇŒoc
(1, 
˚_size
);

200 
˚
->
˚_mode
 = 
	`¸óã_˚_mode
(
po¢s
[
i
]->
mode
);

201 
˚
->
˚_Êags
 = 
	`¸óã_˚_Êags
(
ba£Àn
 + 
∑thÀn
,

202 
˚_°age
);

203 
	`mem˝y
(
˚
->
«me
, 
ba£
, 
ba£Àn
);

204 
	`mem˝y
(
˚
->
«me
 + 
ba£Àn
, 
fú°
, 
∑thÀn
 + 1);

206 
™y_fûes
 = 1;

208 
	`hash˝y
(
˚
->
sha1
, 
po¢s
[
i
]->sha1);

209 
§c
[
i
 + 
o
->
mîge
] = 
˚
;

210 
subpo¢s
[
i
] = 
df_c⁄Êi˘_li°
;

211 
po¢s
[
i
] =Öo¢s[i]->
√xt
;

213 i‡(
™y_fûes
) {

214 i‡(
o
->
mîge
) {

215 
ªt
;

217 #i‡
DBRT_DEBUG
 > 1

218 
	`¥ötf
("%s:\n", 
fú°
);

219 
i
 = 0; i < 
§c_size
; i++) {

220 
	`¥ötf
(" %d ", 
i
);

221 i‡(
§c
[
i
])

222 
	`¥ötf
("%s\n", 
	`sha1_to_hex
(
§c
[
i
]->
sha1
));

224 
	`¥ötf
("\n");

227 
ªt
 = 
o
->
	`‚
(
§c
, o);

229 #i‡
DBRT_DEBUG
 > 1

230 
	`¥ötf
("Added %dÉ¡rõs\n", 
ªt
);

232 *
ödpos
 +
ªt
;

234 
i
 = 0; i < 
§c_size
; i++) {

235 i‡(
§c
[
i
]) {

236 
	`add_ˇche_íåy
(
§c
[
i
], 
ADD_CACHE_OK_TO_ADD
|
ADD_CACHE_SKIP_DFCHECK
);

241 i‡(
™y_dús
) {

242 *
√wba£
 = 
	`xmÆloc
(
ba£Àn
 + 2 + 
∑thÀn
);

243 
	`mem˝y
(
√wba£
, 
ba£
, 
ba£Àn
);

244 
	`mem˝y
(
√wba£
 + 
ba£Àn
, 
fú°
, 
∑thÀn
);

245 
√wba£
[
ba£Àn
 + 
∑thÀn
] = '/';

246 
√wba£
[
ba£Àn
 + 
∑thÀn
 + 1] = '\0';

247 i‡(
	`u≈ack_åìs_ªc
(
subpo¢s
, 
Àn
, 
√wba£
, 
o
,

248 
ödpos
, 
df_c⁄Êi˘_li°
)) {

249 
ªtvÆ
 = -1;

250 
Àave_dúe˘‹y
;

252 
	`‰ì
(
√wba£
);

254 
	`‰ì
(
subpo¢s
);

255 
	`‰ì
(
§c
);

258 
Àave_dúe˘‹y
:

259 i‡(
o
->
dú
)

260 
	`p›_ex˛ude_≥r_dúe˘‹y
(
o
->
dú
, 
i_°k
);

261  
ªtvÆ
;

262 
	}
}

268 
	$u∆ök_íåy
(*
«me
)

270 *
˝
, *
¥ev
;

272 i‡(
	`u∆ök
(
«me
))

274 
¥ev
 = 
NULL
;

276 
°©us
;

277 
˝
 = 
	`°ºchr
(
«me
, '/');

278 i‡(
¥ev
)

279 *
¥ev
 = '/';

280 i‡(!
˝
)

283 *
˝
 = 0;

284 
°©us
 = 
	`rmdú
(
«me
);

285 i‡(
°©us
) {

286 *
˝
 = '/';

289 
¥ev
 = 
˝
;

291 
	}
}

293 vﬁ©ûê
sig_©omic_t
 
	g¥ogªss_upd©e
;

295 
	$¥ogªss_öãrvÆ
(
signum
)

297 
¥ogªss_upd©e
 = 1;

298 
	}
}

300 
	$£tup_¥ogªss_sig«l
()

302 
siga˘i⁄
 
ß
;

303 
ôimîvÆ
 
v
;

305 
	`mem£t
(&
ß
, 0, (sa));

306 
ß
.
ß_h™dÀr
 = 
¥ogªss_öãrvÆ
;

307 
	`sigem±y£t
(&
ß
.
ß_mask
);

308 
ß
.
ß_Êags
 = 
SA_RESTART
;

309 
	`siga˘i⁄
(
SIGALRM
, &
ß
, 
NULL
);

311 
v
.
ô_öãrvÆ
.
tv_£c
 = 1;

312 
v
.
ô_öãrvÆ
.
tv_u£c
 = 0;

313 
v
.
ô_vÆue
 = v.
ô_öãrvÆ
;

314 
	`£tôimî
(
ITIMER_REAL
, &
v
, 
NULL
);

315 
	}
}

317 
checkout
 
	g°©e
;

318 
	$check_upd©es
(
ˇche_íåy
 **
§c
, 
ƒ
,

319 
u≈ack_åìs_›ti⁄s
 *
o
)

321 
mask
 = 
	`ht⁄s
(
CE_UPDATE
);

322 
œ°_≥r˚¡
 = 200, 
˙t
 = 0, 
tŸÆ
 = 0;

324 i‡(
o
->
upd©e
 && o->
vîbo£_upd©e
) {

325 
tŸÆ
 = 
˙t
 = 0; c¡ < 
ƒ
; cnt++) {

326 
ˇche_íåy
 *
˚
 = 
§c
[
˙t
];

327 i‡(!
˚
->
˚_mode
 || ce->
˚_Êags
 & 
mask
)

328 
tŸÆ
++;

332 i‡(
tŸÆ
 < 250)

333 
tŸÆ
 = 0;

335 i‡(
tŸÆ
) {

336 
	`Ârötf
(
°dîr
, "Checking files out...\n");

337 
	`£tup_¥ogªss_sig«l
();

338 
¥ogªss_upd©e
 = 1;

340 
˙t
 = 0;

343 
ƒ
--) {

344 
ˇche_íåy
 *
˚
 = *
§c
++;

346 i‡(
tŸÆ
) {

347 i‡(!
˚
->
˚_mode
 || ce->
˚_Êags
 & 
mask
) {

348 
≥r˚¡
;

349 
˙t
++;

350 
≥r˚¡
 = (
˙t
 * 100Ë/ 
tŸÆ
;

351 i‡(
≥r˚¡
 !
œ°_≥r˚¡
 ||

352 
¥ogªss_upd©e
) {

353 
	`Ârötf
(
°dîr
, "%4u%% (%u/%u) done\r",

354 
≥r˚¡
, 
˙t
, 
tŸÆ
);

355 
œ°_≥r˚¡
 = 
≥r˚¡
;

356 
¥ogªss_upd©e
 = 0;

360 i‡(!
˚
->
˚_mode
) {

361 i‡(
o
->
upd©e
)

362 
	`u∆ök_íåy
(
˚
->
«me
);

365 i‡(
˚
->
˚_Êags
 & 
mask
) {

366 
˚
->
˚_Êags
 &~
mask
;

367 i‡(
o
->
upd©e
)

368 
	`checkout_íåy
(
˚
, &
°©e
, 
NULL
);

371 i‡(
tŸÆ
) {

372 
	`sig«l
(
SIGALRM
, 
SIG_IGN
);

373 
	`Âutc
('\n', 
°dîr
);

375 
	}
}

377 
	$u≈ack_åìs
(
obje˘_li°
 *
åìs
, 
u≈ack_åìs_›ti⁄s
 *
o
)

379 
ödpos
 = 0;

380 
Àn
 = 
	`obje˘_li°_Àngth
(
åìs
);

381 
åì_íåy_li°
 **
po¢s
;

382 
i
;

383 
obje˘_li°
 *
po¢
 = 
åìs
;

384 
åì_íåy_li°
 
df_c⁄Êi˘_li°
;

385 
ˇche_íåy
 *
dfc
;

387 
	`mem£t
(&
df_c⁄Êi˘_li°
, 0, (df_conflict_list));

388 
df_c⁄Êi˘_li°
.
√xt
 = &df_conflict_list;

389 
	`mem£t
(&
°©e
, 0, (state));

390 
°©e
.
ba£_dú
 = "";

391 
°©e
.
f‹˚
 = 1;

392 
°©e
.
quõt
 = 1;

393 
°©e
.
ª‰esh_ˇche
 = 1;

395 
o
->
mîge_size
 = 
Àn
;

397 i‡(!
dfc
)

398 
dfc
 = 
	`xˇŒoc
(1, (
ˇche_íåy
) + 1);

399 
o
->
df_c⁄Êi˘_íåy
 = 
dfc
;

401 i‡(
Àn
) {

402 
po¢s
 = 
	`xmÆloc
(
Àn
 * (
åì_íåy_li°
 *));

403 
i
 = 0; i < 
Àn
; i++) {

404 
po¢s
[
i
] = 
	`¸óã_åì_íåy_li°
((
åì
 *Ë
po¢
->
ôem
);

405 
po¢
 =Öo¢->
√xt
;

407 i‡(
	`u≈ack_åìs_ªc
(
po¢s
, 
Àn
, 
o
->
¥efix
 ? o->prefix : "",

408 
o
, &
ödpos
, &
df_c⁄Êi˘_li°
))

412 i‡(
o
->
åivül_mîges_⁄ly
 && o->
n⁄åivül_mîge
)

413 
	`dõ
("MergeÑequires file-level merging");

415 
	`check_upd©es
(
a˘ive_ˇche
, 
a˘ive_ƒ
, 
o
);

417 
	}
}

421 
	$ªje˘_mîge
(
ˇche_íåy
 *
˚
)

423 
	`dõ
("Entry '%s' would be overwritten by merge. Cannot merge.",

424 
˚
->
«me
);

425 
	}
}

427 
	$ßme
(
ˇche_íåy
 *
a
, ˇche_íåy *
b
)

429 i‡(!!
a
 !!!
b
)

431 i‡(!
a
 && !
b
)

433  
a
->
˚_mode
 =
b
->ce_mode &&

434 !
	`hashcmp
(
a
->
sha1
, 
b
->sha1);

435 
	}
}

442 
	$vîify_u±od©e
(
ˇche_íåy
 *
˚
,

443 
u≈ack_åìs_›ti⁄s
 *
o
)

445 
°©
 
°
;

447 i‡(
o
->
ödex_⁄ly
 || o->
ª£t
)

450 i‡(!
	`l°©
(
˚
->
«me
, &
°
)) {

451 
ch™ged
 = 
	`˚_m©ch_°©
(
˚
, &
°
, 1);

452 i‡(!
ch™ged
)

454 
î∫o
 = 0;

456 i‡(
o
->
ª£t
) {

457 
˚
->
˚_Êags
 |
	`ht⁄s
(
CE_UPDATE
);

460 i‡(
î∫o
 =
ENOENT
)

462 
	`dõ
("E¡ry '%s'ÇŸ u±od©e. C™nŸ mîge.", 
˚
->
«me
);

463 
	}
}

465 
	$övÆid©e_˚_∑th
(
ˇche_íåy
 *
˚
)

467 i‡(
˚
)

468 
	`ˇche_åì_övÆid©e_∑th
(
a˘ive_ˇche_åì
, 
˚
->
«me
);

469 
	}
}

475 
	$vîify_ab£¡
(c⁄° *
∑th
, c⁄° *
a˘i⁄
,

476 
u≈ack_åìs_›ti⁄s
 *
o
)

478 
°©
 
°
;

480 i‡(
o
->
ödex_⁄ly
 || o->
ª£t
 || !o->
upd©e
)

482 i‡(!
	`l°©
(
∑th
, &
°
Ë&& !(
o
->
dú
 && 
	`ex˛uded
(o->dir,Öath)))

483 
	`dõ
("Untracked workingÅree file '%s' "

484 "would bê%†by mîge.", 
∑th
, 
a˘i⁄
);

485 
	}
}

487 
	$mîged_íåy
(
ˇche_íåy
 *
mîge
, ˇche_íåy *
ﬁd
,

488 
u≈ack_åìs_›ti⁄s
 *
o
)

490 
mîge
->
˚_Êags
 |
	`ht⁄s
(
CE_UPDATE
);

491 i‡(
ﬁd
) {

499 i‡(
	`ßme
(
ﬁd
, 
mîge
)) {

500 *
mîge
 = *
ﬁd
;

502 
	`vîify_u±od©e
(
ﬁd
, 
o
);

503 
	`övÆid©e_˚_∑th
(
ﬁd
);

507 
	`vîify_ab£¡
(
mîge
->
«me
, "ovîwrôãn", 
o
);

508 
	`övÆid©e_˚_∑th
(
mîge
);

511 
mîge
->
˚_Êags
 &~
	`ht⁄s
(
CE_STAGEMASK
);

512 
	`add_ˇche_íåy
(
mîge
, 
ADD_CACHE_OK_TO_ADD
|
ADD_CACHE_OK_TO_REPLACE
);

514 
	}
}

516 
	$dñëed_íåy
(
ˇche_íåy
 *
˚
, ˇche_íåy *
ﬁd
,

517 
u≈ack_åìs_›ti⁄s
 *
o
)

519 i‡(
ﬁd
)

520 
	`vîify_u±od©e
(
ﬁd
, 
o
);

522 
	`vîify_ab£¡
(
˚
->
«me
, "ªmoved", 
o
);

523 
˚
->
˚_mode
 = 0;

524 
	`add_ˇche_íåy
(
˚
, 
ADD_CACHE_OK_TO_ADD
|
ADD_CACHE_OK_TO_REPLACE
);

525 
	`övÆid©e_˚_∑th
(
˚
);

527 
	}
}

529 
	$kìp_íåy
(
ˇche_íåy
 *
˚
)

531 
	`add_ˇche_íåy
(
˚
, 
ADD_CACHE_OK_TO_ADD
);

533 
	}
}

535 #i‡
DBRT_DEBUG


536 
	$show_°age_íåy
(
FILE
 *
o
,

537 c⁄° *
œbñ
, c⁄° 
ˇche_íåy
 *
˚
)

539 i‡(!
˚
)

540 
	`Ârötf
(
o
, "%†(missög)\n", 
œbñ
);

542 
	`Ârötf
(
o
, "%s%06o %s %d\t%s\n",

543 
œbñ
,

544 
	`¡ohl
(
˚
->
˚_mode
),

545 
	`sha1_to_hex
(
˚
->
sha1
),

546 
	`˚_°age
(
˚
),

547 
˚
->
«me
);

548 
	}
}

551 
	$thªeway_mîge
(
ˇche_íåy
 **
°ages
,

552 
u≈ack_åìs_›ti⁄s
 *
o
)

554 
ˇche_íåy
 *
ödex
;

555 
ˇche_íåy
 *
hód
;

556 
ˇche_íåy
 *
ªmŸe
 = 
°ages
[
o
->
hód_idx
 + 1];

557 
cou¡
;

558 
hód_m©ch
 = 0;

559 
ªmŸe_m©ch
 = 0;

560 c⁄° *
∑th
 = 
NULL
;

562 
df_c⁄Êi˘_hód
 = 0;

563 
df_c⁄Êi˘_ªmŸe
 = 0;

565 
™y_™c_missög
 = 0;

566 
no_™c_exi°s
 = 1;

567 
i
;

569 
i
 = 1; i < 
o
->
hód_idx
; i++) {

570 i‡(!
°ages
[
i
])

571 
™y_™c_missög
 = 1;

573 i‡(!
∑th
)

574 
∑th
 = 
°ages
[
i
]->
«me
;

575 
no_™c_exi°s
 = 0;

579 
ödex
 = 
°ages
[0];

580 
hód
 = 
°ages
[
o
->
hód_idx
];

582 i‡(
hód
 =
o
->
df_c⁄Êi˘_íåy
) {

583 
df_c⁄Êi˘_hód
 = 1;

584 
hód
 = 
NULL
;

587 i‡(
ªmŸe
 =
o
->
df_c⁄Êi˘_íåy
) {

588 
df_c⁄Êi˘_ªmŸe
 = 1;

589 
ªmŸe
 = 
NULL
;

592 i‡(!
∑th
 && 
ödex
)

593 
∑th
 = 
ödex
->
«me
;

594 i‡(!
∑th
 && 
hód
)

595 
∑th
 = 
hód
->
«me
;

596 i‡(!
∑th
 && 
ªmŸe
)

597 
∑th
 = 
ªmŸe
->
«me
;

602 i‡(!
	`ßme
(
ªmŸe
, 
hód
)) {

603 
i
 = 1; i < 
o
->
hód_idx
; i++) {

604 i‡(
	`ßme
(
°ages
[
i
], 
hód
)) {

605 
hód_m©ch
 = 
i
;

607 i‡(
	`ßme
(
°ages
[
i
], 
ªmŸe
)) {

608 
ªmŸe_m©ch
 = 
i
;

618 i‡(
ªmŸe
 && !
df_c⁄Êi˘_hód
 && 
hód_m©ch
 && !
ªmŸe_m©ch
) {

619 i‡(
ödex
 && !
	`ßme
(ödex, 
ªmŸe
Ë&& !ßme(ödex, 
hód
))

620 
	`ªje˘_mîge
(
ödex
);

621  
	`mîged_íåy
(
ªmŸe
, 
ödex
, 
o
);

627 i‡(
ödex
 && !
	`ßme
(ödex, 
hód
)) {

628 
	`ªje˘_mîge
(
ödex
);

631 i‡(
hód
) {

633 i‡(
	`ßme
(
hód
, 
ªmŸe
))

634  
	`mîged_íåy
(
hód
, 
ödex
, 
o
);

636 i‡(!
df_c⁄Êi˘_ªmŸe
 && 
ªmŸe_m©ch
 && !
hód_m©ch
)

637  
	`mîged_íåy
(
hód
, 
ödex
, 
o
);

641 i‡(!
hód
 && !
ªmŸe
 && 
™y_™c_missög
)

647 i‡(
o
->
aggªssive
) {

648 
hód_dñëed
 = !
hód
 && !
df_c⁄Êi˘_hód
;

649 
ªmŸe_dñëed
 = !
ªmŸe
 && !
df_c⁄Êi˘_ªmŸe
;

654 i‡((
hód_dñëed
 && 
ªmŸe_dñëed
) ||

655 (
hód_dñëed
 && 
ªmŸe
 && 
ªmŸe_m©ch
) ||

656 (
ªmŸe_dñëed
 && 
hód
 && 
hód_m©ch
)) {

657 i‡(
ödex
)

658  
	`dñëed_íåy
(
ödex
, index, 
o
);

659 i‡(
∑th
 && !
hód_dñëed
)

660 
	`vîify_ab£¡
(
∑th
, "ªmoved", 
o
);

666 i‡(
no_™c_exi°s
 && 
hód
 && 
ªmŸe
 && 
	`ßme
(head,Ñemote))

667  
	`mîged_íåy
(
hód
, 
ödex
, 
o
);

675 i‡(
ödex
) {

676 
	`vîify_u±od©e
(
ödex
, 
o
);

679 
o
->
n⁄åivül_mîge
 = 1;

682 
cou¡
 = 0;

683 i‡(!
hód_m©ch
 || !
ªmŸe_m©ch
) {

684 
i
 = 1; i < 
o
->
hód_idx
; i++) {

685 i‡(
°ages
[
i
]) {

686 
	`kìp_íåy
(
°ages
[
i
]);

687 
cou¡
++;

692 #i‡
DBRT_DEBUG


694 
	`Ârötf
(
°dîr
, "read-tree: warning #16 detected\n");

695 
	`show_°age_íåy
(
°dîr
, "hód ", 
°ages
[
hód_m©ch
]);

696 
	`show_°age_íåy
(
°dîr
, "ªmŸê", 
°ages
[
ªmŸe_m©ch
]);

699 i‡(
hód
Ë{ 
cou¡
 +
	`kìp_íåy
(head); }

700 i‡(
ªmŸe
Ë{ 
cou¡
 +
	`kìp_íåy
(remote); }

701  
cou¡
;

702 
	}
}

713 
	$twoway_mîge
(
ˇche_íåy
 **
§c
,

714 
u≈ack_åìs_›ti⁄s
 *
o
)

716 
ˇche_íåy
 *
cuºít
 = 
§c
[0];

717 
ˇche_íåy
 *
ﬁdåì
 = 
§c
[1], *
√wåì
 = src[2];

719 i‡(
o
->
mîge_size
 != 2)

720  
	`îr‹
("Cannot doáÅwoway merge of %dÅrees",

721 
o
->
mîge_size
);

723 i‡(
cuºít
) {

724 i‡((!
ﬁdåì
 && !
√wåì
) ||

725 (!
ﬁdåì
 && 
√wåì
 &&

726 
	`ßme
(
cuºít
, 
√wåì
)) ||

727 (
ﬁdåì
 && 
√wåì
 &&

728 
	`ßme
(
ﬁdåì
, 
√wåì
)) ||

729 (
ﬁdåì
 && 
√wåì
 &&

730 !
	`ßme
(
ﬁdåì
, 
√wåì
) &&

731 
	`ßme
(
cuºít
, 
√wåì
))) {

732  
	`kìp_íåy
(
cuºít
);

734 i‡(
ﬁdåì
 && !
√wåì
 && 
	`ßme
(
cuºít
, oldtree)) {

736  
	`dñëed_íåy
(
ﬁdåì
, 
cuºít
, 
o
);

738 i‡(
ﬁdåì
 && 
√wåì
 &&

739 
	`ßme
(
cuºít
, 
ﬁdåì
Ë&& !ßme(cuºít, 
√wåì
)) {

741  
	`mîged_íåy
(
√wåì
, 
cuºít
, 
o
);

745 i‡(
ﬁdåì
)

746 
	`ªje˘_mîge
(
ﬁdåì
);

747 i‡(
cuºít
)

748 
	`ªje˘_mîge
(
cuºít
);

749 i‡(
√wåì
)

750 
	`ªje˘_mîge
(
√wåì
);

754 i‡(
√wåì
)

755  
	`mîged_íåy
(
√wåì
, 
cuºít
, 
o
);

757  
	`dñëed_íåy
(
ﬁdåì
, 
cuºít
, 
o
);

758 
	}
}

766 
	$böd_mîge
(
ˇche_íåy
 **
§c
,

767 
u≈ack_åìs_›ti⁄s
 *
o
)

769 
ˇche_íåy
 *
ﬁd
 = 
§c
[0];

770 
ˇche_íåy
 *
a
 = 
§c
[1];

772 i‡(
o
->
mîge_size
 != 1)

773  
	`îr‹
("Cannot doá bind merge of %dÅrees\n",

774 
o
->
mîge_size
);

775 i‡(
a
 && 
ﬁd
)

776 
	`dõ
("E¡ry '%s' ovîœps. C™nŸ böd.", 
a
->
«me
);

777 i‡(!
a
)

778  
	`kìp_íåy
(
ﬁd
);

780  
	`mîged_íåy
(
a
, 
NULL
, 
o
);

781 
	}
}

789 
	$⁄eway_mîge
(
ˇche_íåy
 **
§c
,

790 
u≈ack_åìs_›ti⁄s
 *
o
)

792 
ˇche_íåy
 *
ﬁd
 = 
§c
[0];

793 
ˇche_íåy
 *
a
 = 
§c
[1];

795 i‡(
o
->
mîge_size
 != 1)

796  
	`îr‹
("Cannot doá oneway merge of %dÅrees",

797 
o
->
mîge_size
);

799 i‡(!
a
)

800  
	`dñëed_íåy
(
ﬁd
, old, 
o
);

801 i‡(
ﬁd
 && 
	`ßme
(ﬁd, 
a
)) {

802 i‡(
o
->
ª£t
) {

803 
°©
 
°
;

804 i‡(
	`l°©
(
ﬁd
->
«me
, &
°
) ||

805 
	`˚_m©ch_°©
(
ﬁd
, &
°
, 1))

806 
ﬁd
->
˚_Êags
 |
	`ht⁄s
(
CE_UPDATE
);

808  
	`kìp_íåy
(
ﬁd
);

810  
	`mîged_íåy
(
a
, 
ﬁd
, 
o
);

811 
	}
}

	@unpack-trees.h

1 #i‚de‡
UNPACK_TREES_H


2 
	#UNPACK_TREES_H


	)

4 
	gu≈ack_åìs_›ti⁄s
;

6 (*
	tmîge_‚_t
)(
	tˇche_íåy
 **
	t§c
,

7 
	tu≈ack_åìs_›ti⁄s
 *
	t›ti⁄s
);

9 
	su≈ack_åìs_›ti⁄s
 {

10 
ª£t
;

11 
mîge
;

12 
upd©e
;

13 
ödex_⁄ly
;

14 
n⁄åivül_mîge
;

15 
åivül_mîges_⁄ly
;

16 
vîbo£_upd©e
;

17 
aggªssive
;

18 c⁄° *
¥efix
;

19 
dú_°ru˘
 *
dú
;

20 
mîge_‚_t
 
‚
;

22 
hód_idx
;

23 
mîge_size
;

25 
ˇche_íåy
 *
df_c⁄Êi˘_íåy
;

28 
	`u≈ack_åìs
(
obje˘_li°
 *
åìs
,

29 
u≈ack_åìs_›ti⁄s
 *
›ti⁄s
);

31 
	`thªeway_mîge
(
ˇche_íåy
 **
°ages
, 
u≈ack_åìs_›ti⁄s
 *
o
);

32 
	`twoway_mîge
(
ˇche_íåy
 **
§c
, 
u≈ack_åìs_›ti⁄s
 *
o
);

33 
	`böd_mîge
(
ˇche_íåy
 **
§c
, 
u≈ack_åìs_›ti⁄s
 *
o
);

34 
	`⁄eway_mîge
(
ˇche_íåy
 **
§c
, 
u≈ack_åìs_›ti⁄s
 *
o
);

	@update-server-info.c

1 
	~"ˇche.h
"

3 c⁄° 
	gupd©e_£rvî_öfo_ußge
[] =

6 
	$maö
(
ac
, **
av
)

8 
i
;

9 
f‹˚
 = 0;

10 
i
 = 1; i < 
ac
; i++) {

11 i‡(
av
[
i
][0] == '-') {

12 i‡(!
	`°rcmp
("--f‹˚", 
av
[
i
]) ||

13 !
	`°rcmp
("-f", 
av
[
i
]))

14 
f‹˚
 = 1;

16 
	`ußge
(
upd©e_£rvî_öfo_ußge
);

19 i‡(
i
 !
ac
)

20 
	`ußge
(
upd©e_£rvî_öfo_ußge
);

22 
	`£tup_gô_dúe˘‹y
();

24  !!
	`upd©e_£rvî_öfo
(
f‹˚
);

25 
	}
}

	@upload-pack.c

1 
	~"ˇche.h
"

2 
	~"ªfs.h
"

3 
	~"pkt-löe.h
"

4 
	~"sideb™d.h
"

5 
	~"èg.h
"

6 
	~"obje˘.h
"

7 
	~"commô.h
"

8 
	~"exec_cmd.h
"

9 
	~"diff.h
"

10 
	~"ªvisi⁄.h
"

11 
	~"li°-obje˘s.h
"

13 c⁄° 
	gu∂ﬂd_∑ck_ußge
[] = "git-upload-pack [--strict] [--timeout=nn] <dir>";

16 
	#THEY_HAVE
 (1u << 11)

	)

17 
	#OUR_REF
 (1u << 12)

	)

18 
	#WANTED
 (1u << 13)

	)

19 
	#COMMON_KNOWN
 (1u << 14)

	)

20 
	#REACHABLE
 (1u << 15)

	)

22 
	#SHALLOW
 (1u << 16)

	)

23 
	#NOT_SHALLOW
 (1u << 17)

	)

24 
	#CLIENT_SHALLOW
 (1u << 18)

	)

26 
	gﬁde°_have
;

28 
	gmu…i_ack
, 
	gƒ_our_ªfs
;

29 
	gu£_thö_∑ck
, 
	gu£_ofs_dñè
;

30 
obje˘_¨øy
 
	ghave_obj
;

31 
obje˘_¨øy
 
	gw™t_obj
;

32 
	gtimeout
;

36 
	gu£_sideb™d
;

38 
	$ª£t_timeout
()

40 
	`Æ¨m
(
timeout
);

41 
	}
}

43 
	$°rù
(*
löe
, 
Àn
)

45 i‡(
Àn
 && 
löe
[len-1] == '\n')

46 
löe
[--
Àn
] = 0;

47  
Àn
;

48 
	}
}

50 
ssize_t
 
	$£nd_˛õ¡_d©a
(
fd
, c⁄° *
d©a
, 
ssize_t
 
sz
)

52 i‡(
u£_sideb™d
)

53  
	`£nd_sideb™d
(1, 
fd
, 
d©a
, 
sz
, 
u£_sideb™d
);

54 i‡(
fd
 == 3)

56 
fd
 = 2;

57 i‡(
fd
 == 2) {

59 
	`xwrôe
(
fd
, 
d©a
, 
sz
);

60  
sz
;

62  
	`ß„_wrôe
(
fd
, 
d©a
, 
sz
);

63 
	}
}

65 
FILE
 *
	g∑ck_pùe
 = 
NULL
;

66 
	$show_commô
(
commô
 *commit)

68 i‡(
commô
->
obje˘
.
Êags
 & 
BOUNDARY
)

69 
	`Âutc
('-', 
∑ck_pùe
);

70 i‡(
	`Âuts
(
	`sha1_to_hex
(
commô
->
obje˘
.
sha1
), 
∑ck_pùe
) < 0)

71 
	`dõ
("broken outputÖipe");

72 
	`Âutc
('\n', 
∑ck_pùe
);

73 
	`fÊush
(
∑ck_pùe
);

74 
	`‰ì
(
commô
->
buf„r
);

75 
commô
->
buf„r
 = 
NULL
;

76 
	}
}

78 
	$show_obje˘
(
obje˘_¨øy_íåy
 *
p
)

83 c⁄° *
ï
 = 
	`°rchr
(
p
->
«me
, '\n');

84 i‡(
ï
) {

85 
	`Ârötf
(
∑ck_pùe
, "%†%.*s\n", 
	`sha1_to_hex
(
p
->
ôem
->
sha1
),

86 (Ë(
ï
 - 
p
->
«me
),

87 
p
->
«me
);

90 
	`Ârötf
(
∑ck_pùe
, "%s %s\n",

91 
	`sha1_to_hex
(
p
->
ôem
->
sha1
),Ö->
«me
);

92 
	}
}

94 
	$show_edge
(
commô
 *commit)

96 
	`Ârötf
(
∑ck_pùe
, "-%s\n", 
	`sha1_to_hex
(
commô
->
obje˘
.
sha1
));

97 
	}
}

99 
	$¸óã_∑ck_fûe
()

104 
Õ_pùe
[2], 
pu_pùe
[2], 
≥_pùe
[2];

105 
pid_t
 
pid_ªv_li°
, 
pid_∑ck_obje˘s
;

106 
¸óã_fuŒ_∑ck
 = (
ƒ_our_ªfs
 =
w™t_obj
.
ƒ
 && !
have_obj
.nr);

107 
d©a
[8193], 
¥ogªss
[128];

108 
ab‹t_msg
[] = "aborting dueÅoÖossibleÑepository "

110 
buf„ªd
 = -1;

112 i‡(
	`pùe
(
Õ_pùe
) < 0)

113 
	`dõ
("git-upload-pack: unableÅo createÖipe");

114 
pid_ªv_li°
 = 
	`f‹k
();

115 i‡(
pid_ªv_li°
 < 0)

116 
	`dõ
("git-upload-pack: unableÅo fork git-rev-list");

118 i‡(!
pid_ªv_li°
) {

119 
i
;

120 
ªv_öfo
 
ªvs
;

122 
∑ck_pùe
 = 
	`fd›í
(
Õ_pùe
[1], "w");

124 i‡(
¸óã_fuŒ_∑ck
)

125 
u£_thö_∑ck
 = 0;

126 
	`öô_ªvisi⁄s
(&
ªvs
, 
NULL
);

127 
ªvs
.
èg_obje˘s
 = 1;

128 
ªvs
.
åì_obje˘s
 = 1;

129 
ªvs
.
blob_obje˘s
 = 1;

130 i‡(
u£_thö_∑ck
)

131 
ªvs
.
edge_höt
 = 1;

133 i‡(
¸óã_fuŒ_∑ck
) {

134 c⁄° *
¨gs
[] = {"ªv-li°", "--Æl", 
NULL
};

135 
	`£tup_ªvisi⁄s
(2, 
¨gs
, &
ªvs
, 
NULL
);

137 
i
 = 0; i < 
w™t_obj
.
ƒ
; i++) {

138 
obje˘
 *
o
 = 
w™t_obj
.
obje˘s
[
i
].
ôem
;

140 
o
->
Êags
 &~
UNINTERESTING
;

141 
	`add_≥ndög_obje˘
(&
ªvs
, 
o
, 
NULL
);

143 
i
 = 0; i < 
have_obj
.
ƒ
; i++) {

144 
obje˘
 *
o
 = 
have_obj
.
obje˘s
[
i
].
ôem
;

145 
o
->
Êags
 |
UNINTERESTING
;

146 
	`add_≥ndög_obje˘
(&
ªvs
, 
o
, 
NULL
);

148 
	`£tup_ªvisi⁄s
(0, 
NULL
, &
ªvs
, NULL);

150 
	`¥ï¨e_ªvisi⁄_wÆk
(&
ªvs
);

151 
	`m¨k_edges_unöãª°ög
(
ªvs
.
commôs
, &ªvs, 
show_edge
);

152 
	`åavî£_commô_li°
(&
ªvs
, 
show_commô
, 
show_obje˘
);

153 
	`exô
(0);

156 i‡(
	`pùe
(
pu_pùe
) < 0)

157 
	`dõ
("git-upload-pack: unableÅo createÖipe");

158 i‡(
	`pùe
(
≥_pùe
) < 0)

159 
	`dõ
("git-upload-pack: unableÅo createÖipe");

160 
pid_∑ck_obje˘s
 = 
	`f‹k
();

161 i‡(
pid_∑ck_obje˘s
 < 0) {

163 
	`kûl
(
pid_ªv_li°
, 
SIGKILL
);

164 
	`dõ
("git-upload-pack: unableÅo fork git-pack-objects");

166 i‡(!
pid_∑ck_obje˘s
) {

167 
	`dup2
(
Õ_pùe
[0], 0);

168 
	`dup2
(
pu_pùe
[1], 1);

169 
	`dup2
(
≥_pùe
[1], 2);

171 
	`˛o£
(
Õ_pùe
[0]);

172 
	`˛o£
(
Õ_pùe
[1]);

173 
	`˛o£
(
pu_pùe
[0]);

174 
	`˛o£
(
pu_pùe
[1]);

175 
	`˛o£
(
≥_pùe
[0]);

176 
	`˛o£
(
≥_pùe
[1]);

177 
	`exe˛_gô_cmd
("pack-objects", "--stdout", "--progress",

178 
u£_ofs_dñè
 ? "--dñè-ba£-off£t" : 
NULL
,

179 
NULL
);

180 
	`kûl
(
pid_ªv_li°
, 
SIGKILL
);

181 
	`dõ
("git-upload-pack: unableÅoÉxec git-pack-objects");

184 
	`˛o£
(
Õ_pùe
[0]);

185 
	`˛o£
(
Õ_pùe
[1]);

190 
	`˛o£
(
≥_pùe
[1]);

191 
	`˛o£
(
pu_pùe
[1]);

194 c⁄° *
who
;

195 
pﬁlfd
 
pfd
[2];

196 
pid_t
 
pid
;

197 
°©us
;

198 
ssize_t
 
sz
;

199 
≥
, 
pu
, 
pﬁlsize
;

201 
	`ª£t_timeout
();

203 
pﬁlsize
 = 0;

204 
≥
 = 
pu
 = -1;

206 i‡(0 <
pu_pùe
[0]) {

207 
pfd
[
pﬁlsize
].
fd
 = 
pu_pùe
[0];

208 
pfd
[
pﬁlsize
].
evíts
 = 
POLLIN
;

209 
pu
 = 
pﬁlsize
;

210 
pﬁlsize
++;

212 i‡(0 <
≥_pùe
[0]) {

213 
pfd
[
pﬁlsize
].
fd
 = 
≥_pùe
[0];

214 
pfd
[
pﬁlsize
].
evíts
 = 
POLLIN
;

215 
≥
 = 
pﬁlsize
;

216 
pﬁlsize
++;

219 i‡(
pﬁlsize
) {

220 i‡(
	`pﬁl
(
pfd
, 
pﬁlsize
, -1) < 0) {

221 i‡(
î∫o
 !
EINTR
) {

222 
	`îr‹
("poll failed,Ñesuming: %s",

223 
	`°ªº‹
(
î∫o
));

224 
	`¶ìp
(1);

228 i‡(0 <
pu
 && (
pfd
[pu].
ªvíts
 & (
POLLIN
|
POLLHUP
))) {

240 *
˝
 = 
d©a
;

241 
ssize_t
 
outsz
 = 0;

242 i‡(0 <
buf„ªd
) {

243 *
˝
++ = 
buf„ªd
;

244 
outsz
++;

246 
sz
 = 
	`xªad
(
pu_pùe
[0], 
˝
,

247 (
d©a
Ë- 
outsz
);

248 i‡(0 < 
sz
)

250 i‡(
sz
 == 0) {

251 
	`˛o£
(
pu_pùe
[0]);

252 
pu_pùe
[0] = -1;

255 
Áû
;

256 
sz
 +
outsz
;

257 i‡(1 < 
sz
) {

258 
buf„ªd
 = 
d©a
[
sz
-1] & 0xFF;

259 
sz
--;

262 
buf„ªd
 = -1;

263 
sz
 = 
	`£nd_˛õ¡_d©a
(1, 
d©a
, sz);

264 i‡(
sz
 < 0)

265 
Áû
;

267 i‡(0 <
≥
 && (
pfd
[≥].
ªvíts
 & (
POLLIN
|
POLLHUP
))) {

271 
sz
 = 
	`xªad
(
≥_pùe
[0], 
¥ogªss
,

272 (
¥ogªss
));

273 i‡(0 < 
sz
)

274 
	`£nd_˛õ¡_d©a
(2, 
¥ogªss
, 
sz
);

275 i‡(
sz
 == 0) {

276 
	`˛o£
(
≥_pùe
[0]);

277 
≥_pùe
[0] = -1;

280 
Áû
;

285 i‡(
pid_ªv_li°
 || 
pid_∑ck_obje˘s
) {

286 
pid
 = 
	`waôpid
(-1, &
°©us
, 
WNOHANG
);

287 i‡(!
pid
)

289 
who
 = ((
pid
 =
pid_ªv_li°
) ? "git-rev-list" :

290 (
pid
 =
pid_∑ck_obje˘s
) ? "git-pack-objects" :

291 
NULL
);

292 i‡(!
who
) {

293 i‡(
pid
 < 0) {

294 
	`îr‹
("git-upload-pack: %s",

295 
	`°ªº‹
(
î∫o
));

296 
Áû
;

298 
	`îr‹
("git-upload-pack: we weren't "

299 "waôög f‹ %d", 
pid
);

302 i‡(!
	`WIFEXITED
(
°©us
Ë|| 
	`WEXITSTATUS
(status) > 0) {

303 
	`îr‹
("git-upload-pack: %s died withÉrror.",

304 
who
);

305 
Áû
;

307 i‡(
pid
 =
pid_ªv_li°
)

308 
pid_ªv_li°
 = 0;

309 i‡(
pid
 =
pid_∑ck_obje˘s
)

310 
pid_∑ck_obje˘s
 = 0;

311 i‡(
pid_ªv_li°
 || 
pid_∑ck_obje˘s
)

316 i‡(
pﬁlsize
)

320 i‡(0 <
buf„ªd
) {

321 
d©a
[0] = 
buf„ªd
;

322 
sz
 = 
	`£nd_˛õ¡_d©a
(1, 
d©a
, 1);

323 i‡(
sz
 < 0)

324 
Áû
;

325 
	`Ârötf
(
°dîr
, "flushed.\n");

327 i‡(
u£_sideb™d
)

328 
	`∑ckë_Êush
(1);

331 
Áû
:

332 i‡(
pid_∑ck_obje˘s
)

333 
	`kûl
(
pid_∑ck_obje˘s
, 
SIGKILL
);

334 i‡(
pid_ªv_li°
)

335 
	`kûl
(
pid_ªv_li°
, 
SIGKILL
);

336 
	`£nd_˛õ¡_d©a
(3, 
ab‹t_msg
, (abort_msg));

337 
	`dõ
("gô-u∂ﬂd-∑ck: %s", 
ab‹t_msg
);

338 
	}
}

340 
	$gŸ_sha1
(*
hex
, *
sha1
)

342 
obje˘
 *
o
;

343 
we_k√w_they_have
 = 0;

345 i‡(
	`gë_sha1_hex
(
hex
, 
sha1
))

346 
	`dõ
("gô-u∂ﬂd-∑ck:Éx≥˘ed SHA1 obje˘, gŸ '%s'", 
hex
);

347 i‡(!
	`has_sha1_fûe
(
sha1
))

350 
o
 = 
	`lookup_obje˘
(
sha1
);

351 i‡(!(
o
 && o->
∑r£d
))

352 
o
 = 
	`∑r£_obje˘
(
sha1
);

353 i‡(!
o
)

354 
	`dõ
("o›†(%s)", 
	`sha1_to_hex
(
sha1
));

355 i‡(
o
->
ty≥
 =
OBJ_COMMIT
) {

356 
commô_li°
 *
∑ª¡s
;

357 
commô
 *commô = (commô *)
o
;

358 i‡(
o
->
Êags
 & 
THEY_HAVE
)

359 
we_k√w_they_have
 = 1;

361 
o
->
Êags
 |
THEY_HAVE
;

362 i‡(!
ﬁde°_have
 || (
commô
->
d©e
 < oldest_have))

363 
ﬁde°_have
 = 
commô
->
d©e
;

364 
∑ª¡s
 = 
commô
->parents;

365 
∑ª¡s
;

366 
∑ª¡s
 =Ö¨íts->
√xt
)

367 
∑ª¡s
->
ôem
->
obje˘
.
Êags
 |
THEY_HAVE
;

369 i‡(!
we_k√w_they_have
) {

370 
	`add_obje˘_¨øy
(
o
, 
NULL
, &
have_obj
);

374 
	}
}

376 
	$ªachabÀ
(
commô
 *
w™t
)

378 
commô_li°
 *
w‹k
 = 
NULL
;

380 
	`ö£π_by_d©e
(
w™t
, &
w‹k
);

381 
w‹k
) {

382 
commô_li°
 *
li°
 = 
w‹k
->
√xt
;

383 
commô
 *commô = 
w‹k
->
ôem
;

384 
	`‰ì
(
w‹k
);

385 
w‹k
 = 
li°
;

387 i‡(
commô
->
obje˘
.
Êags
 & 
THEY_HAVE
) {

388 
w™t
->
obje˘
.
Êags
 |
COMMON_KNOWN
;

391 i‡(!
commô
->
obje˘
.
∑r£d
)

392 
	`∑r£_obje˘
(
commô
->
obje˘
.
sha1
);

393 i‡(
commô
->
obje˘
.
Êags
 & 
REACHABLE
)

395 
commô
->
obje˘
.
Êags
 |
REACHABLE
;

396 i‡(
commô
->
d©e
 < 
ﬁde°_have
)

398 
li°
 = 
commô
->
∑ª¡s
;Üi°;Üi° =Üi°->
√xt
) {

399 
commô
 *
∑ª¡
 = 
li°
->
ôem
;

400 i‡(!(
∑ª¡
->
obje˘
.
Êags
 & 
REACHABLE
))

401 
	`ö£π_by_d©e
(
∑ª¡
, &
w‹k
);

404 
w™t
->
obje˘
.
Êags
 |
REACHABLE
;

405 
	`˛ór_commô_m¨ks
(
w™t
, 
REACHABLE
);

406 
	`‰ì_commô_li°
(
w‹k
);

407  (
w™t
->
obje˘
.
Êags
 & 
COMMON_KNOWN
);

408 
	}
}

410 
	$ok_to_give_up
()

412 
i
;

414 i‡(!
have_obj
.
ƒ
)

417 
i
 = 0; i < 
w™t_obj
.
ƒ
; i++) {

418 
obje˘
 *
w™t
 = 
w™t_obj
.
obje˘s
[
i
].
ôem
;

420 i‡(
w™t
->
Êags
 & 
COMMON_KNOWN
)

422 
w™t
 = 
	`dîef_èg
(want, "a wantÜine", 0);

423 i‡(!
w™t
 || w™t->
ty≥
 !
OBJ_COMMIT
) {

429 
w™t_obj
.
obje˘s
[
i
].
ôem
->
Êags
 |
COMMON_KNOWN
;

432 i‡(!
	`ªachabÀ
((
commô
 *)
w™t
))

436 
	}
}

438 
	$gë_comm⁄_commôs
()

440 
löe
[1000];

441 
sha1
[20];

442 
hex
[41], 
œ°_hex
[41];

443 
Àn
;

445 
åack_obje˘_ªfs
 = 0;

446 
ßve_commô_buf„r
 = 0;

449 
Àn
 = 
	`∑ckë_ªad_löe
(0, 
löe
, (line));

450 
	`ª£t_timeout
();

452 i‡(!
Àn
) {

453 i‡(
have_obj
.
ƒ
 =0 || 
mu…i_ack
)

454 
	`∑ckë_wrôe
(1, "NAK\n");

457 
Àn
 = 
	`°rù
(
löe
,Üen);

458 i‡(!
	`°∫cmp
(
löe
, "have ", 5)) {

459 
	`gŸ_sha1
(
löe
+5, 
sha1
)) {

461 i‡(
mu…i_ack
 && 
	`ok_to_give_up
())

462 
	`∑ckë_wrôe
(1, "ACK %s continue\n",

463 
	`sha1_to_hex
(
sha1
));

466 
	`mem˝y
(
hex
, 
	`sha1_to_hex
(
sha1
), 41);

467 i‡(
mu…i_ack
) {

468 c⁄° *
msg
 = "ACK %s continue\n";

469 
	`∑ckë_wrôe
(1, 
msg
, 
hex
);

470 
	`mem˝y
(
œ°_hex
, 
hex
, 41);

472 i‡(
have_obj
.
ƒ
 == 1)

473 
	`∑ckë_wrôe
(1, "ACK %s\n", 
hex
);

478 i‡(!
	`°rcmp
(
löe
, "done")) {

479 i‡(
have_obj
.
ƒ
 > 0) {

480 i‡(
mu…i_ack
)

481 
	`∑ckë_wrôe
(1, "ACK %s\n", 
œ°_hex
);

484 
	`∑ckë_wrôe
(1, "NAK\n");

487 
	`dõ
("gô-u∂ﬂd-∑ck:Éx≥˘ed SHA1Üi°, gŸ '%s'", 
löe
);

489 
	}
}

491 
	$ª˚ive_√eds
()

493 
obje˘_¨øy
 
shÆlows
 = {0, 0, 
NULL
};

494 
löe
[1000];

495 
Àn
, 
dïth
 = 0;

498 
obje˘
 *
o
;

499 
sha1_buf
[20];

500 
Àn
 = 
	`∑ckë_ªad_löe
(0, 
löe
, (line));

501 
	`ª£t_timeout
();

502 i‡(!
Àn
)

505 i‡(!
	`°∫cmp
("shÆlow ", 
löe
, 8)) {

506 
sha1
[20];

507 
obje˘
 *object;

508 
u£_thö_∑ck
 = 0;

509 i‡(
	`gë_sha1
(
löe
 + 8, 
sha1
))

510 
	`dõ
("övÆid shÆlowÜöe: %s", 
löe
);

511 
obje˘
 = 
	`∑r£_obje˘
(
sha1
);

512 i‡(!
obje˘
)

513 
	`dõ
("didÇŸ föd obje˘ f‹ %s", 
löe
);

514 
obje˘
->
Êags
 |
CLIENT_SHALLOW
;

515 
	`add_obje˘_¨øy
(
obje˘
, 
NULL
, &
shÆlows
);

518 i‡(!
	`°∫cmp
("dì≥¿", 
löe
, 7)) {

519 *
íd
;

520 
u£_thö_∑ck
 = 0;

521 
dïth
 = 
	`°πﬁ
(
löe
 + 7, &
íd
, 0);

522 i‡(
íd
 =
löe
 + 7 || 
dïth
 <= 0)

523 
	`dõ
("InvÆid dì≥n: %s", 
löe
);

526 i‡(
	`°∫cmp
("w™à", 
löe
, 5) ||

527 
	`gë_sha1_hex
(
löe
+5, 
sha1_buf
))

528 
	`dõ
("git-upload-pack:ÖrotocolÉrror, "

529 "ex≥˘edÅÿgë sha,ÇŸ '%s'", 
löe
);

530 i‡(
	`°r°r
(
löe
+45, "multi_ack"))

531 
mu…i_ack
 = 1;

532 i‡(
	`°r°r
(
löe
+45, "thin-pack"))

533 
u£_thö_∑ck
 = 1;

534 i‡(
	`°r°r
(
löe
+45, "ofs-delta"))

535 
u£_ofs_dñè
 = 1;

536 i‡(
	`°r°r
(
löe
+45, "side-band-64k"))

537 
u£_sideb™d
 = 
LARGE_PACKET_MAX
;

538 i‡(
	`°r°r
(
löe
+45, "side-band"))

539 
u£_sideb™d
 = 
DEFAULT_PACKET_MAX
;

549 
o
 = 
	`lookup_obje˘
(
sha1_buf
);

550 i‡(!
o
 || !(o->
Êags
 & 
OUR_REF
))

551 
	`dõ
("gô-u∂ﬂd-∑ck:ÇŸ ou∏ª‡%s", 
löe
+5);

552 i‡(!(
o
->
Êags
 & 
WANTED
)) {

553 
o
->
Êags
 |
WANTED
;

554 
	`add_obje˘_¨øy
(
o
, 
NULL
, &
w™t_obj
);

557 i‡(
dïth
 =0 && 
shÆlows
.
ƒ
 == 0)

559 i‡(
dïth
 > 0) {

560 
commô_li°
 *
ªsu…
, *
backup
;

561 
i
;

562 
backup
 = 
ªsu…
 = 
	`gë_shÆlow_commôs
(&
w™t_obj
, 
dïth
,

563 
SHALLOW
, 
NOT_SHALLOW
);

564 
ªsu…
) {

565 
obje˘
 *obje˘ = &
ªsu…
->
ôem
->object;

566 i‡(!(
obje˘
->
Êags
 & (
CLIENT_SHALLOW
|
NOT_SHALLOW
))) {

567 
	`∑ckë_wrôe
(1, "shallow %s",

568 
	`sha1_to_hex
(
obje˘
->
sha1
));

569 
	`ªgi°î_shÆlow
(
obje˘
->
sha1
);

571 
ªsu…
 =Ñesu…->
√xt
;

573 
	`‰ì_commô_li°
(
backup
);

574 
i
 = 0; i < 
shÆlows
.
ƒ
; i++) {

575 
obje˘
 *obje˘ = 
shÆlows
.
obje˘s
[
i
].
ôem
;

576 i‡(
obje˘
->
Êags
 & 
NOT_SHALLOW
) {

577 
commô_li°
 *
∑ª¡s
;

578 
	`∑ckë_wrôe
(1, "unshallow %s",

579 
	`sha1_to_hex
(
obje˘
->
sha1
));

580 
obje˘
->
Êags
 &~
CLIENT_SHALLOW
;

582 
	`uƒegi°î_shÆlow
(
obje˘
->
sha1
);

583 
obje˘
->
∑r£d
 = 0;

584 
	`∑r£_commô
((
commô
 *)
obje˘
);

585 
∑ª¡s
 = ((
commô
 *)
obje˘
)->parents;

586 
∑ª¡s
) {

587 
	`add_obje˘_¨øy
(&
∑ª¡s
->
ôem
->
obje˘
,

588 
NULL
, &
w™t_obj
);

589 
∑ª¡s
 =Ö¨íts->
√xt
;

593 
	`ªgi°î_shÆlow
(
obje˘
->
sha1
);

595 
	`∑ckë_Êush
(1);

597 i‡(
shÆlows
.
ƒ
 > 0) {

598 
i
;

599 
i
 = 0; i < 
shÆlows
.
ƒ
; i++)

600 
	`ªgi°î_shÆlow
(
shÆlows
.
obje˘s
[
i
].
ôem
->
sha1
);

602 
	`‰ì
(
shÆlows
.
obje˘s
);

603 
	}
}

605 
	$£nd_ªf
(c⁄° *
ª‚ame
, c⁄° *
sha1
, 
Êag
, *
cb_d©a
)

607 c⁄° *
ˇ∑bûôõs
 = "multi_ackÅhin-pack side-band"

609 
obje˘
 *
o
 = 
	`∑r£_obje˘
(
sha1
);

611 i‡(!
o
)

612 
	`dõ
("gô-u∂ﬂd-∑ck: c™nŸ föd obje˘ %s:", 
	`sha1_to_hex
(
sha1
));

614 i‡(
ˇ∑bûôõs
)

615 
	`∑ckë_wrôe
(1, "%†%s%c%s\n", 
	`sha1_to_hex
(
sha1
), 
ª‚ame
,

616 0, 
ˇ∑bûôõs
);

618 
	`∑ckë_wrôe
(1, "%†%s\n", 
	`sha1_to_hex
(
sha1
), 
ª‚ame
);

619 
ˇ∑bûôõs
 = 
NULL
;

620 i‡(!(
o
->
Êags
 & 
OUR_REF
)) {

621 
o
->
Êags
 |
OUR_REF
;

622 
ƒ_our_ªfs
++;

624 i‡(
o
->
ty≥
 =
OBJ_TAG
) {

625 
o
 = 
	`dîef_èg
(o, 
ª‚ame
, 0);

626 
	`∑ckë_wrôe
(1, "%†%s^{}\n", 
	`sha1_to_hex
(
o
->
sha1
), 
ª‚ame
);

629 
	}
}

631 
	$u∂ﬂd_∑ck
()

633 
	`ª£t_timeout
();

634 
	`hód_ªf
(
£nd_ªf
, 
NULL
);

635 
	`f‹_óch_ªf
(
£nd_ªf
, 
NULL
);

636 
	`∑ckë_Êush
(1);

637 
	`ª˚ive_√eds
();

638 i‡(
w™t_obj
.
ƒ
) {

639 
	`gë_comm⁄_commôs
();

640 
	`¸óã_∑ck_fûe
();

642 
	}
}

644 
	$maö
(
¨gc
, **
¨gv
)

646 *
dú
;

647 
i
;

648 
°ri˘
 = 0;

650 
i
 = 1; i < 
¨gc
; i++) {

651 *
¨g
 = 
¨gv
[
i
];

653 i‡(
¨g
[0] != '-')

655 i‡(!
	`°rcmp
(
¨g
, "--strict")) {

656 
°ri˘
 = 1;

659 i‡(!
	`°∫cmp
(
¨g
, "--timeout=", 10)) {

660 
timeout
 = 
	`©oi
(
¨g
+10);

663 i‡(!
	`°rcmp
(
¨g
, "--")) {

664 
i
++;

669 i‡(
i
 !
¨gc
-1)

670 
	`ußge
(
u∂ﬂd_∑ck_ußge
);

671 
dú
 = 
¨gv
[
i
];

673 i‡(!
	`íãr_ªpo
(
dú
, 
°ri˘
))

674 
	`dõ
("'%s': u«bÀÅÿchdú o∏nŸá gôárchive", 
dú
);

675 i‡(
	`is_ªposô‹y_shÆlow
())

676 
	`dõ
("attemptÅo fetch/clone fromá shallowÑepository");

677 
	`u∂ﬂd_∑ck
();

679 
	}
}

	@usage.c

6 
	~"gô-com∑t-utû.h
"

8 
	$ªp‹t
(c⁄° *
¥efix
, c⁄° *
îr
, 
va_li°
 
∑øms
)

10 
	`Âuts
(
¥efix
, 
°dîr
);

11 
	`vÂrötf
(
°dîr
, 
îr
, 
∑øms
);

12 
	`Âuts
("\n", 
°dîr
);

13 
	}
}

15 
NORETURN
 
	$ußge_buûtö
(c⁄° *
îr
)

17 
	`Ârötf
(
°dîr
, "ußge: %s\n", 
îr
);

18 
	`exô
(129);

19 
	}
}

21 
NORETURN
 
	$dõ_buûtö
(c⁄° *
îr
, 
va_li°
 
∑øms
)

23 
	`ªp‹t
("Áèl: ", 
îr
, 
∑øms
);

24 
	`exô
(128);

25 
	}
}

27 
	$îr‹_buûtö
(c⁄° *
îr
, 
va_li°
 
∑øms
)

29 
	`ªp‹t
("îr‹: ", 
îr
, 
∑øms
);

30 
	}
}

32 
	$w¨n_buûtö
(c⁄° *
w¨n
, 
va_li°
 
∑øms
)

34 
	`ªp‹t
("w¨nög: ", 
w¨n
, 
∑øms
);

35 
	}
}

39 (*
ußge_routöe
)(c⁄° *
îr
Ë
NORETURN
 = 
ußge_buûtö
;

40 (*
dõ_routöe
)(c⁄° *
îr
, 
va_li°
 
∑øms
Ë
NORETURN
 = 
dõ_buûtö
;

41 (*
îr‹_routöe
)(c⁄° *
îr
, 
va_li°
 
∑øms
Ë
îr‹_buûtö
;

42 (*
w¨n_routöe
)(c⁄° *
îr
, 
va_li°
 
∑øms
Ë
w¨n_buûtö
;

44 
	$£t_ußge_routöe
((*
routöe
)(c⁄° *
îr
Ë
NORETURN
)

46 
ußge_routöe
 = 
routöe
;

47 
	}
}

49 
	$£t_dõ_routöe
((*
routöe
)(c⁄° *
îr
, 
va_li°
 
∑øms
Ë
NORETURN
)

51 
dõ_routöe
 = 
routöe
;

52 
	}
}

54 
	$£t_îr‹_routöe
((*
routöe
)(c⁄° *
îr
, 
va_li°
 
∑øms
))

56 
îr‹_routöe
 = 
routöe
;

57 
	}
}

59 
	$£t_w¨n_routöe
((*
routöe
)(c⁄° *
w¨n
, 
va_li°
 
∑øms
))

61 
w¨n_routöe
 = 
routöe
;

62 
	}
}

65 
	$ußge
(c⁄° *
îr
)

67 
	`ußge_routöe
(
îr
);

68 
	}
}

70 
	$dõ
(c⁄° *
îr
, ...)

72 
va_li°
 
∑øms
;

74 
	`va_°¨t
(
∑øms
, 
îr
);

75 
	`dõ_routöe
(
îr
, 
∑øms
);

76 
	`va_íd
(
∑øms
);

77 
	}
}

79 
	$îr‹
(c⁄° *
îr
, ...)

81 
va_li°
 
∑øms
;

83 
	`va_°¨t
(
∑øms
, 
îr
);

84 
	`îr‹_routöe
(
îr
, 
∑øms
);

85 
	`va_íd
(
∑øms
);

87 
	}
}

89 
	$w¨n
(c⁄° *
w¨n
, ...)

91 
va_li°
 
∑øms
;

93 
	`va_°¨t
(
∑øms
, 
w¨n
);

94 
	`w¨n_routöe
(
w¨n
, 
∑øms
);

95 
	`va_íd
(
∑øms
);

96 
	}
}

	@utf8.c

1 
	~"gô-com∑t-utû.h
"

2 
	~"utf8.h
"

6 
	söãrvÆ
 {

7 
	mfú°
;

8 
	mœ°
;

12 
	$bi£¨ch
(
wch¨_t
 
ucs
, c⁄° 
öãrvÆ
 *
èbÀ
, 
max
) {

13 
mö
 = 0;

14 
mid
;

16 i‡(
ucs
 < 
èbÀ
[0].
fú°
 || uc†>ÅabÀ[
max
].
œ°
)

18 
max
 >
mö
) {

19 
mid
 = (
mö
 + 
max
) / 2;

20 i‡(
ucs
 > 
èbÀ
[
mid
].
œ°
)

21 
mö
 = 
mid
 + 1;

22 i‡(
ucs
 < 
èbÀ
[
mid
].
fú°
)

23 
max
 = 
mid
 - 1;

29 
	}
}

63 
	$wcwidth
(
wch¨_t
 
ch
)

70 c⁄° 
öãrvÆ
 
comböög
[] = {

116 i‡(
ch
 == 0)

118 i‡(
ch
 < 32 || (ch >= 0x7f && ch < 0xa0))

122 i‡(
	`bi£¨ch
(
ch
, 
comböög
, (combining)

123 / (
öãrvÆ
) - 1))

132 (
ch
 >= 0x1100 &&

134 (
ch
 <= 0x115f ||

135 
ch
 == 0x2329 || ch == 0x232a ||

137 (
ch
 >= 0x2e80 && ch <= 0xa4cf &&

138 
ch
 != 0x303f) ||

140 (
ch
 >= 0xac00 && ch <= 0xd7a3) ||

142 (
ch
 >= 0xf900 && ch <= 0xfaff) ||

144 (
ch
 >= 0xfe30 && ch <= 0xfe6f) ||

146 (
ch
 >= 0xff00 && ch <= 0xff60) ||

147 (
ch
 >= 0xffe0 && ch <= 0xffe6) ||

148 (
ch
 >= 0x20000 && ch <= 0x2fffd) ||

149 (
ch
 >= 0x30000 && ch <= 0x3fffd)));

150 
	}
}

157 
	$utf8_width
(c⁄° **
°¨t
)

159 *
s
 = (*)*
°¨t
;

160 
wch¨_t
 
ch
;

162 i‡(*
s
 < 0x80) {

164 
ch
 = *
s
;

165 *
°¨t
 += 1;

166 } i‡((
s
[0] & 0xe0) == 0xc0) {

168 i‡((
s
[1] & 0xc0) != 0x80 ||

170 (
s
[0] & 0xfe) == 0xc0)

171 
övÆid
;

172 
ch
 = ((
s
[0] & 0x1f) << 6) | (s[1] & 0x3f);

173 *
°¨t
 += 2;

174 } i‡((
s
[0] & 0xf0) == 0xe0) {

176 i‡((
s
[1] & 0xc0) != 0x80 ||

177 (
s
[2] & 0xc0) != 0x80 ||

179 (
s
[0] == 0xe0 && (s[1] & 0xe0) == 0x80) ||

181 (
s
[0] == 0xed && (s[1] & 0xe0) == 0xa0) ||

183 (
s
[0] == 0xef && s[1] == 0xbf &&

184 (
s
[2] & 0xfe) == 0xbe))

185 
övÆid
;

186 
ch
 = ((
s
[0] & 0x0f) << 12) |

187 ((
s
[1] & 0x3f) << 6) | (s[2] & 0x3f);

188 *
°¨t
 += 3;

189 } i‡((
s
[0] & 0xf8) == 0xf0) {

191 i‡((
s
[1] & 0xc0) != 0x80 ||

192 (
s
[2] & 0xc0) != 0x80 ||

193 (
s
[3] & 0xc0) != 0x80 ||

195 (
s
[0] == 0xf0 && (s[1] & 0xf0) == 0x80) ||

197 (
s
[0] == 0xf4 && s[1] > 0x8f) || s[0] > 0xf4)

198 
övÆid
;

199 
ch
 = ((
s
[0] & 0x07) << 18) | ((s[1] & 0x3f) << 12) |

200 ((
s
[2] & 0x3f) << 6) | (s[3] & 0x3f);

201 *
°¨t
 += 4;

203 
övÆid
:

204 *
°¨t
 = 
NULL
;

208  
	`wcwidth
(
ch
);

209 
	}
}

211 
	$is_utf8
(c⁄° *
ãxt
)

213 *
ãxt
) {

214 i‡(*
ãxt
 == '\n' || *text == '\t' || *text == '\r') {

215 
ãxt
++;

218 
	`utf8_width
(&
ãxt
);

219 i‡(!
ãxt
)

223 
	}
}

225 
	$¥öt_•a˚s
(
cou¡
)

227 c⁄° 
s
[] = " ";

228 
cou¡
 >(
s
)) {

229 
	`fwrôe
(
s
, (sË- 1, 1, 
°dout
);

230 
cou¡
 -(
s
) - 1;

232 
	`fwrôe
(
s
, 
cou¡
, 1, 
°dout
);

233 
	}
}

239 
	$¥öt_wøµed_ãxt
(c⁄° *
ãxt
, 
ödít
, 
ödít2
, 
width
)

241 
w
 = 
ödít
, 
assume_utf8
 = 
	`is_utf8
(
ãxt
);

242 c⁄° *
bﬁ
 = 
ãxt
, *
•a˚
 = 
NULL
;

245 
c
 = *
ãxt
;

246 i‡(!
c
 || 
	`is•a˚
(c)) {

247 i‡(
w
 < 
width
 || !
•a˚
) {

248 c⁄° *
°¨t
 = 
bﬁ
;

249 i‡(
•a˚
)

250 
°¨t
 = 
•a˚
;

252 
	`¥öt_•a˚s
(
ödít
);

253 
	`fwrôe
(
°¨t
, 
ãxt
 - sèπ, 1, 
°dout
);

254 i‡(!
c
) {

255 
	`putch¨
('\n');

257 } i‡(
c
 == '\t')

258 
w
 |= 0x07;

259 
•a˚
 = 
ãxt
;

260 
w
++;

261 
ãxt
++;

264 
	`putch¨
('\n');

265 
ãxt
 = 
bﬁ
 = 
•a˚
 + 1;

266 
•a˚
 = 
NULL
;

267 
w
 = 
ödít
 = 
ödít2
;

271 i‡(
assume_utf8
)

272 
w
 +
	`utf8_width
(&
ãxt
);

274 
w
++;

275 
ãxt
++;

278 
	}
}

280 
	$is_ícodög_utf8
(c⁄° *
«me
)

282 i‡(!
«me
)

284 i‡(!
	`°rˇ£cmp
(
«me
, "utf-8") || !strcasecmp(name, "utf8"))

287 
	}
}

293 #i‚de‡
NO_ICONV


294 *
	$ªícode_°rög
(c⁄° *
ö
, c⁄° *
out_ícodög
, c⁄° *
ö_ícodög
)

296 
ic⁄v_t
 
c⁄v
;

297 
size_t
 
ösz
, 
outsz
, 
ouèŒoc
;

298 *
out
, *
ouços
, *
˝
;

300 i‡(!
ö_ícodög
)

301  
NULL
;

302 
c⁄v
 = 
	`ic⁄v_›í
(
out_ícodög
, 
ö_ícodög
);

303 i‡(
c⁄v
 =(
ic⁄v_t
) -1)

304  
NULL
;

305 
ösz
 = 
	`°æí
(
ö
);

306 
outsz
 = 
ösz
;

307 
ouèŒoc
 = 
outsz
 + 1;

308 
out
 = 
	`xmÆloc
(
ouèŒoc
);

309 
ouços
 = 
out
;

310 
˝
 = (*)
ö
;

313 
size_t
 
˙t
 = 
	`ic⁄v
(
c⁄v
, &
˝
, &
ösz
, &
ouços
, &
outsz
);

315 i‡(
˙t
 == -1) {

316 
size_t
 
soÁr
;

317 i‡(
î∫o
 !
E2BIG
) {

318 
	`‰ì
(
out
);

319 
	`ic⁄v_˛o£
(
c⁄v
);

320  
NULL
;

327 
soÁr
 = 
ouços
 - 
out
;

328 
ouèŒoc
 = 
soÁr
 + 
ösz
 * 2 + 32;

329 
out
 = 
	`xªÆloc
(out, 
ouèŒoc
);

330 
ouços
 = 
out
 + 
soÁr
;

331 
outsz
 = 
ouèŒoc
 - 
soÁr
 - 1;

334 *
ouços
 = '\0';

338 
	`ic⁄v_˛o£
(
c⁄v
);

339  
out
;

340 
	}
}

	@utf8.h

1 #i‚de‡
GIT_UTF8_H


2 
	#GIT_UTF8_H


	)

4 
utf8_width
(c⁄° **
°¨t
);

5 
is_utf8
(c⁄° *
ãxt
);

6 
is_ícodög_utf8
(c⁄° *
«me
);

8 
¥öt_wøµed_ãxt
(c⁄° *
ãxt
, 
ödít
, 
ödít2
, 
Àn
);

10 #i‚de‡
NO_ICONV


11 *
ªícode_°rög
(c⁄° *
ö
, c⁄° *
out_ícodög
, c⁄° *
ö_ícodög
);

13 
	#ªícode_°rög
(
a
,
b
,
c
Ë
NULL


	)

	@var.c

6 
	~"ˇche.h
"

8 c⁄° 
	gv¨_ußge
[] = "git-var [-l | <variable>]";

10 
	sgô_v¨
 {

11 c⁄° *
	m«me
;

12 c⁄° *(*
	mªad
)();

14 
gô_v¨
 
	ggô_v¨s
[] = {

15 { "GIT_COMMITTER_IDENT", 
gô_commôãr_öfo
 },

16 { "GIT_AUTHOR_IDENT", 
gô_auth‹_öfo
 },

17 { "", 
NULL
 },

20 
	$li°_v¨s
()

22 
gô_v¨
 *
±r
;

23 
±r
 = 
gô_v¨s
;Öå->
ªad
;Ötr++) {

24 
	`¥ötf
("%s=%s\n", 
±r
->
«me
,Öå->
	`ªad
(0));

26 
	}
}

28 c⁄° *
	$ªad_v¨
(c⁄° *
v¨
)

30 
gô_v¨
 *
±r
;

31 c⁄° *
vÆ
;

32 
vÆ
 = 
NULL
;

33 
±r
 = 
gô_v¨s
;Öå->
ªad
;Ötr++) {

34 i‡(
	`°rcmp
(
v¨
, 
±r
->
«me
) == 0) {

35 
vÆ
 = 
±r
->
	`ªad
(1);

39  
vÆ
;

40 
	}
}

42 
	$show_c⁄fig
(c⁄° *
v¨
, c⁄° *
vÆue
)

44 i‡(
vÆue
)

45 
	`¥ötf
("%s=%s\n", 
v¨
, 
vÆue
);

47 
	`¥ötf
("%s\n", 
v¨
);

48  
	`gô_deÁu…_c⁄fig
(
v¨
, 
vÆue
);

49 
	}
}

51 
	$maö
(
¨gc
, **
¨gv
)

53 c⁄° *
vÆ
;

54 i‡(
¨gc
 != 2) {

55 
	`ußge
(
v¨_ußge
);

58 
	`£tup_gô_dúe˘‹y
();

59 
vÆ
 = 
NULL
;

61 i‡(
	`°rcmp
(
¨gv
[1], "-l") == 0) {

62 
	`gô_c⁄fig
(
show_c⁄fig
);

63 
	`li°_v¨s
();

66 
	`gô_c⁄fig
(
gô_deÁu…_c⁄fig
);

67 
vÆ
 = 
	`ªad_v¨
(
¨gv
[1]);

68 i‡(!
vÆ
)

69 
	`ußge
(
v¨_ußge
);

71 
	`¥ötf
("%s\n", 
vÆ
);

74 
	}
}

	@write_or_die.c

1 
	~"ˇche.h
"

3 
	$ªad_ö_fuŒ
(
fd
, *
buf
, 
size_t
 
cou¡
)

5 *
p
 = 
buf
;

6 
ssize_t
 
tŸÆ
 = 0;

8 
cou¡
 > 0) {

9 
ssize_t
 
lﬂded
 = 
	`xªad
(
fd
, 
p
, 
cou¡
);

10 i‡(
lﬂded
 <= 0)

11  
tŸÆ
 ?ÅŸÆ : 
lﬂded
;

12 
cou¡
 -
lﬂded
;

13 
p
 +
lﬂded
;

14 
tŸÆ
 +
lﬂded
;

17  
tŸÆ
;

18 
	}
}

20 
	$wrôe_ö_fuŒ
(
fd
, c⁄° *
buf
, 
size_t
 
cou¡
)

22 c⁄° *
p
 = 
buf
;

23 
ssize_t
 
tŸÆ
 = 0;

25 
cou¡
 > 0) {

26 
ssize_t
 
wrôãn
 = 
	`xwrôe
(
fd
, 
p
, 
cou¡
);

27 i‡(
wrôãn
 < 0)

29 i‡(!
wrôãn
) {

30 
î∫o
 = 
ENOSPC
;

33 
cou¡
 -
wrôãn
;

34 
p
 +
wrôãn
;

35 
tŸÆ
 +
wrôãn
;

38  
tŸÆ
;

39 
	}
}

41 
	$wrôe_‹_dõ
(
fd
, c⁄° *
buf
, 
size_t
 
cou¡
)

43 i‡(
	`wrôe_ö_fuŒ
(
fd
, 
buf
, 
cou¡
) < 0) {

44 i‡(
î∫o
 =
EPIPE
)

45 
	`exô
(0);

46 
	`dõ
("wrôêîr‹ (%s)", 
	`°ªº‹
(
î∫o
));

48 
	}
}

50 
	$wrôe_‹_whöe_pùe
(
fd
, c⁄° *
buf
, 
size_t
 
cou¡
, c⁄° *
msg
)

52 i‡(
	`wrôe_ö_fuŒ
(
fd
, 
buf
, 
cou¡
) < 0) {

53 i‡(
î∫o
 =
EPIPE
)

54 
	`exô
(0);

55 
	`Ârötf
(
°dîr
, "%s: writeÉrror (%s)\n",

56 
msg
, 
	`°ªº‹
(
î∫o
));

61 
	}
}

63 
	$wrôe_‹_whöe
(
fd
, c⁄° *
buf
, 
size_t
 
cou¡
, c⁄° *
msg
)

65 i‡(
	`wrôe_ö_fuŒ
(
fd
, 
buf
, 
cou¡
) < 0) {

66 
	`Ârötf
(
°dîr
, "%s: writeÉrror (%s)\n",

67 
msg
, 
	`°ªº‹
(
î∫o
));

72 
	}
}

	@wt-status.c

1 
	~"ˇche.h
"

2 
	~"wt-°©us.h
"

3 
	~"cﬁ‹.h
"

4 
	~"obje˘.h
"

5 
	~"dú.h
"

6 
	~"commô.h
"

7 
	~"diff.h
"

8 
	~"ªvisi⁄.h
"

9 
	~"diffc‹e.h
"

11 
	gwt_°©us_u£_cﬁ‹
 = 0;

12 
	gwt_°©us_cﬁ‹s
[][
COLOR_MAXLEN
] = {

19 c⁄° 
	gu£_add_msg
[] =

21 c⁄° 
	gu£_add_rm_msg
[] =

23 c⁄° 
	gu£_add_to_ö˛ude_msg
[] =

26 
	$∑r£_°©us_¶Ÿ
(c⁄° *
v¨
, 
off£t
)

28 i‡(!
	`°rˇ£cmp
(
v¨
+
off£t
, "header"))

29  
WT_STATUS_HEADER
;

30 i‡(!
	`°rˇ£cmp
(
v¨
+
off£t
, "updated")

31 || !
	`°rˇ£cmp
(
v¨
+
off£t
, "added"))

32  
WT_STATUS_UPDATED
;

33 i‡(!
	`°rˇ£cmp
(
v¨
+
off£t
, "changed"))

34  
WT_STATUS_CHANGED
;

35 i‡(!
	`°rˇ£cmp
(
v¨
+
off£t
, "untracked"))

36  
WT_STATUS_UNTRACKED
;

37 
	`dõ
("bad c⁄fig v¨übÀ '%s'", 
v¨
);

38 
	}
}

40 c⁄° * 
	$cﬁ‹
(
¶Ÿ
)

42  
wt_°©us_u£_cﬁ‹
 ? 
wt_°©us_cﬁ‹s
[
¶Ÿ
] : "";

43 
	}
}

45 
	$wt_°©us_¥ï¨e
(
wt_°©us
 *
s
)

47 
sha1
[20];

48 c⁄° *
hód
;

50 
	`mem£t
(
s
, 0, (*s));

51 
hód
 = 
	`ªsﬁve_ªf
("HEAD", 
sha1
, 0, 
NULL
);

52 
s
->
bønch
 = 
hód
 ? 
	`x°rdup
(hódË: 
NULL
;

53 
s
->
ª„ªn˚
 = "HEAD";

54 
	}
}

56 
	$wt_°©us_¥öt_ˇched_hódî
(c⁄° *
ª„ªn˚
)

58 c⁄° *
c
 = 
	`cﬁ‹
(
WT_STATUS_HEADER
);

59 
	`cﬁ‹_¥ötf_ 
(
c
, "# ChangesÅo be committed:");

60 i‡(
ª„ªn˚
) {

61 
	`cﬁ‹_¥ötf_ 
(
c
, "# (u£ \"gôÑe£à%†<fûe>...\"Åÿun°age)", 
ª„ªn˚
);

63 
	`cﬁ‹_¥ötf_ 
(
c
, "# (use \"gitÑm --cached <file>...\"Åo unstage)");

65 
	`cﬁ‹_¥ötf_ 
(
c
, "#");

66 
	}
}

68 
	$wt_°©us_¥öt_hódî
(c⁄° *
maö
, c⁄° *
sub
)

70 c⁄° *
c
 = 
	`cﬁ‹
(
WT_STATUS_HEADER
);

71 
	`cﬁ‹_¥ötf_ 
(
c
, "# %s:", 
maö
);

72 
	`cﬁ‹_¥ötf_ 
(
c
, "# (%s)", 
sub
);

73 
	`cﬁ‹_¥ötf_ 
(
c
, "#");

74 
	}
}

76 
	$wt_°©us_¥öt_åaûî
()

78 
	`cﬁ‹_¥ötf_ 
(
	`cﬁ‹
(
WT_STATUS_HEADER
), "#");

79 
	}
}

81 c⁄° *
	$quŸe_¸lf
(c⁄° *
ö
, *
buf
, 
size_t
 
sz
)

83 c⁄° *
sˇn
;

84 *
out
;

85 c⁄° *
ªt
 = 
ö
;

87 
sˇn
 = 
ö
, 
out
 = 
buf
; *scan; scan++) {

88 
ch
 = *
sˇn
;

89 
quŸed
;

91 
ch
) {

93 
quŸed
 = 'n';

96 
quŸed
 = 'r';

99 *
out
++ = 
ch
;

102 *
out
++ = '\\';

103 *
out
++ = 
quŸed
;

104 
ªt
 = 
buf
;

106 *
out
 = '\0';

107  
ªt
;

108 
	}
}

110 
	$wt_°©us_¥öt_fûïaú
(
t
, 
diff_fûïaú
 *
p
)

112 c⁄° *
c
 = 
	`cﬁ‹
(
t
);

113 c⁄° *
⁄e
, *
two
;

114 
⁄ebuf
[
PATH_MAX
], 
twobuf
[PATH_MAX];

116 
⁄e
 = 
	`quŸe_¸lf
(
p
->⁄e->
∑th
, 
⁄ebuf
, (onebuf));

117 
two
 = 
	`quŸe_¸lf
(
p
->two->
∑th
, 
twobuf
, (twobuf));

119 
	`cﬁ‹_¥ötf
(
	`cﬁ‹
(
WT_STATUS_HEADER
), "#\t");

120 
p
->
°©us
) {

121 
DIFF_STATUS_ADDED
:

122 
	`cﬁ‹_¥ötf
(
c
, "√w fûe: %s", 
⁄e
);

124 
DIFF_STATUS_COPIED
:

125 
	`cﬁ‹_¥ötf
(
c
, "c›õd: %†-> %s", 
⁄e
, 
two
);

127 
DIFF_STATUS_DELETED
:

128 
	`cﬁ‹_¥ötf
(
c
, "dñëed: %s", 
⁄e
);

130 
DIFF_STATUS_MODIFIED
:

131 
	`cﬁ‹_¥ötf
(
c
, "modifõd: %s", 
⁄e
);

133 
DIFF_STATUS_RENAMED
:

134 
	`cﬁ‹_¥ötf
(
c
, "ª«med: %†-> %s", 
⁄e
, 
two
);

136 
DIFF_STATUS_TYPE_CHANGED
:

137 
	`cﬁ‹_¥ötf
(
c
, "ty≥ch™ge: %s", 
⁄e
);

139 
DIFF_STATUS_UNKNOWN
:

140 
	`cﬁ‹_¥ötf
(
c
, "unknown: %s", 
⁄e
);

142 
DIFF_STATUS_UNMERGED
:

143 
	`cﬁ‹_¥ötf
(
c
, "unmîged: %s", 
⁄e
);

146 
	`dõ
("bug: unh™dÀd dif‡°©u†%c", 
p
->
°©us
);

148 
	`¥ötf
("\n");

149 
	}
}

151 
	$wt_°©us_¥öt_upd©ed_cb
(
diff_queue_°ru˘
 *
q
,

152 
diff_›ti⁄s
 *
›ti⁄s
,

153 *
d©a
)

155 
wt_°©us
 *
s
 = 
d©a
;

156 
shown_hódî
 = 0;

157 
i
;

158 
i
 = 0; i < 
q
->
ƒ
; i++) {

159 i‡(
q
->
queue
[
i
]->
°©us
 == 'U')

161 i‡(!
shown_hódî
) {

162 
	`wt_°©us_¥öt_ˇched_hódî
(
s
->
ª„ªn˚
);

163 
s
->
commôabÀ
 = 1;

164 
shown_hódî
 = 1;

166 
	`wt_°©us_¥öt_fûïaú
(
WT_STATUS_UPDATED
, 
q
->
queue
[
i
]);

168 i‡(
shown_hódî
)

169 
	`wt_°©us_¥öt_åaûî
();

170 
	}
}

172 
	$wt_°©us_¥öt_ch™ged_cb
(
diff_queue_°ru˘
 *
q
,

173 
diff_›ti⁄s
 *
›ti⁄s
,

174 *
d©a
)

176 
wt_°©us
 *
s
 = 
d©a
;

177 
i
;

178 i‡(
q
->
ƒ
) {

179 c⁄° *
msg
 = 
u£_add_msg
;

180 
s
->
w‹kdú_dúty
 = 1;

181 
i
 = 0; i < 
q
->
ƒ
; i++)

182 i‡(
q
->
queue
[
i
]->
°©us
 =
DIFF_STATUS_DELETED
) {

183 
msg
 = 
u£_add_rm_msg
;

186 
	`wt_°©us_¥öt_hódî
("Ch™ged buànŸ upd©ed", 
msg
);

188 
i
 = 0; i < 
q
->
ƒ
; i++)

189 
	`wt_°©us_¥öt_fûïaú
(
WT_STATUS_CHANGED
, 
q
->
queue
[
i
]);

190 i‡(
q
->
ƒ
)

191 
	`wt_°©us_¥öt_åaûî
();

192 
	}
}

194 
	$wt_°©us_¥öt_öôül
(
wt_°©us
 *
s
)

196 
i
;

197 
buf
[
PATH_MAX
];

199 
	`ªad_ˇche
();

200 i‡(
a˘ive_ƒ
) {

201 
s
->
commôabÀ
 = 1;

202 
	`wt_°©us_¥öt_ˇched_hódî
(
NULL
);

204 
i
 = 0; i < 
a˘ive_ƒ
; i++) {

205 
	`cﬁ‹_¥ötf
(
	`cﬁ‹
(
WT_STATUS_HEADER
), "#\t");

206 
	`cﬁ‹_¥ötf_ 
(
	`cﬁ‹
(
WT_STATUS_UPDATED
), "new file: %s",

207 
	`quŸe_¸lf
(
a˘ive_ˇche
[
i
]->
«me
,

208 
buf
, (buf)));

210 i‡(
a˘ive_ƒ
)

211 
	`wt_°©us_¥öt_åaûî
();

212 
	}
}

214 
	$wt_°©us_¥öt_upd©ed
(
wt_°©us
 *
s
)

216 
ªv_öfo
 
ªv
;

217 
	`öô_ªvisi⁄s
(&
ªv
, 
NULL
);

218 
	`£tup_ªvisi⁄s
(0, 
NULL
, &
ªv
, 
s
->
ª„ªn˚
);

219 
ªv
.
diff›t
.
ouçut_f‹m©
 |
DIFF_FORMAT_CALLBACK
;

220 
ªv
.
diff›t
.
f‹m©_ˇŒback
 = 
wt_°©us_¥öt_upd©ed_cb
;

221 
ªv
.
diff›t
.
f‹m©_ˇŒback_d©a
 = 
s
;

222 
ªv
.
diff›t
.
dëe˘_ª«me
 = 1;

223 
	`run_diff_ödex
(&
ªv
, 1);

224 
	}
}

226 
	$wt_°©us_¥öt_ch™ged
(
wt_°©us
 *
s
)

228 
ªv_öfo
 
ªv
;

229 
	`öô_ªvisi⁄s
(&
ªv
, "");

230 
	`£tup_ªvisi⁄s
(0, 
NULL
, &
ªv
, NULL);

231 
ªv
.
diff›t
.
ouçut_f‹m©
 |
DIFF_FORMAT_CALLBACK
;

232 
ªv
.
diff›t
.
f‹m©_ˇŒback
 = 
wt_°©us_¥öt_ch™ged_cb
;

233 
ªv
.
diff›t
.
f‹m©_ˇŒback_d©a
 = 
s
;

234 
	`run_diff_fûes
(&
ªv
, 0);

235 
	}
}

237 
	$wt_°©us_¥öt_u¡øcked
(
wt_°©us
 *
s
)

239 
dú_°ru˘
 
dú
;

240 c⁄° *
x
;

241 
i
;

242 
shown_hódî
 = 0;

244 
	`mem£t
(&
dú
, 0, (dir));

246 
dú
.
ex˛ude_≥r_dú
 = ".gitignore";

247 i‡(!
s
->
u¡øcked
) {

248 
dú
.
show_Ÿhî_dúe˘‹õs
 = 1;

249 
dú
.
hide_em±y_dúe˘‹õs
 = 1;

251 
x
 = 
	`gô_∑th
("info/exclude");

252 i‡(
	`fûe_exi°s
(
x
))

253 
	`add_ex˛udes_‰om_fûe
(&
dú
, 
x
);

255 
	`ªad_dúe˘‹y
(&
dú
, ".", "", 0);

256 
i
 = 0; i < 
dú
.
ƒ
; i++) {

259 
dú_íåy
 *
ít
 = 
dú
.
íåõs
[
i
];

260 
pos
 = 
	`ˇche_«me_pos
(
ít
->
«me
,É¡->
Àn
);

261 
ˇche_íåy
 *
˚
;

262 i‡(0 <
pos
)

263 
	`dõ
("bug in wt_status_print_untracked");

264 
pos
 = -pos - 1;

265 i‡(
pos
 < 
a˘ive_ƒ
) {

266 
˚
 = 
a˘ive_ˇche
[
pos
];

267 i‡(
	`˚_«mñí
(
˚
Ë=
ít
->
Àn
 &&

268 !
	`memcmp
(
˚
->
«me
, 
ít
->«me,É¡->
Àn
))

271 i‡(!
shown_hódî
) {

272 
s
->
w‹kdú_u¡øcked
 = 1;

273 
	`wt_°©us_¥öt_hódî
("Untracked files",

274 
u£_add_to_ö˛ude_msg
);

275 
shown_hódî
 = 1;

277 
	`cﬁ‹_¥ötf
(
	`cﬁ‹
(
WT_STATUS_HEADER
), "#\t");

278 
	`cﬁ‹_¥ötf_ 
(
	`cﬁ‹
(
WT_STATUS_UNTRACKED
), "%.*s",

279 
ít
->
Àn
,É¡->
«me
);

281 
	}
}

283 
	$wt_°©us_¥öt_vîbo£
(
wt_°©us
 *
s
)

285 
ªv_öfo
 
ªv
;

286 
	`öô_ªvisi⁄s
(&
ªv
, 
NULL
);

287 
	`£tup_ªvisi⁄s
(0, 
NULL
, &
ªv
, 
s
->
ª„ªn˚
);

288 
ªv
.
diff›t
.
ouçut_f‹m©
 |
DIFF_FORMAT_PATCH
;

289 
ªv
.
diff›t
.
dëe˘_ª«me
 = 1;

290 
	`run_diff_ödex
(&
ªv
, 1);

291 
	}
}

293 
	$wt_°©us_¥öt
(
wt_°©us
 *
s
)

295 
sha1
[20];

296 
s
->
is_öôül
 = 
	`gë_sha1
(s->
ª„ªn˚
, 
sha1
) ? 1 : 0;

298 i‡(
s
->
bønch
) {

299 c⁄° *
⁄_wh©
 = "On branch ";

300 c⁄° *
bønch_«me
 = 
s
->
bønch
;

301 i‡(!
	`°∫cmp
(
bønch_«me
, "refs/heads/", 11))

302 
bønch_«me
 += 11;

303 i‡(!
	`°rcmp
(
bønch_«me
, "HEAD")) {

304 
bønch_«me
 = "";

305 
⁄_wh©
 = "Not currently onány branch.";

307 
	`cﬁ‹_¥ötf_ 
(
	`cﬁ‹
(
WT_STATUS_HEADER
),

308 "# %s%s", 
⁄_wh©
, 
bønch_«me
);

311 i‡(
s
->
is_öôül
) {

312 
	`cﬁ‹_¥ötf_ 
(
	`cﬁ‹
(
WT_STATUS_HEADER
), "#");

313 
	`cﬁ‹_¥ötf_ 
(
	`cﬁ‹
(
WT_STATUS_HEADER
), "# Initial commit");

314 
	`cﬁ‹_¥ötf_ 
(
	`cﬁ‹
(
WT_STATUS_HEADER
), "#");

315 
	`wt_°©us_¥öt_öôül
(
s
);

318 
	`wt_°©us_¥öt_upd©ed
(
s
);

319 
	`disˇrd_ˇche
();

322 
	`wt_°©us_¥öt_ch™ged
(
s
);

323 
	`wt_°©us_¥öt_u¡øcked
(
s
);

325 i‡(
s
->
vîbo£
 && !s->
is_öôül
)

326 
	`wt_°©us_¥öt_vîbo£
(
s
);

327 i‡(!
s
->
commôabÀ
) {

328 i‡(
s
->
amíd
)

329 
	`¥ötf
("# No changes\n");

330 i‡(
s
->
w‹kdú_dúty
)

331 
	`¥ötf
("no changesáddedÅo commit (use \"gitádd\"ánd/or \"git commit -a\")\n");

332 i‡(
s
->
w‹kdú_u¡øcked
)

333 
	`¥ötf
("nothingáddedÅo commit but untracked filesÖresent (use \"gitádd\"ÅoÅrack)\n");

334 i‡(
s
->
is_öôül
)

335 
	`¥ötf
("nothingÅo commit (create/copy filesánd use \"gitádd\"ÅoÅrack)\n");

337 
	`¥ötf
("nothingÅo commit (working directory clean)\n");

339 
	}
}

341 
	$gô_°©us_c⁄fig
(c⁄° *
k
, c⁄° *
v
)

343 i‡(!
	`°rcmp
(
k
, "status.color") || !strcmp(k, "color.status")) {

344 
wt_°©us_u£_cﬁ‹
 = 
	`gô_c⁄fig_cﬁ‹boﬁ
(
k
, 
v
);

347 i‡(!
	`°∫cmp
(
k
, "status.color.", 13) || !strncmp(k, "color.status.", 13)) {

348 
¶Ÿ
 = 
	`∑r£_°©us_¶Ÿ
(
k
, 13);

349 
	`cﬁ‹_∑r£
(
v
, 
k
, 
wt_°©us_cﬁ‹s
[
¶Ÿ
]);

351  
	`gô_deÁu…_c⁄fig
(
k
, 
v
);

352 
	}
}

	@wt-status.h

1 #i‚de‡
STATUS_H


2 
	#STATUS_H


	)

4 
	ecﬁ‹_wt_°©us
 {

5 
	mWT_STATUS_HEADER
,

6 
	mWT_STATUS_UPDATED
,

7 
	mWT_STATUS_CHANGED
,

8 
	mWT_STATUS_UNTRACKED
,

11 
	swt_°©us
 {

12 
	mis_öôül
;

13 *
	mbønch
;

14 c⁄° *
	mª„ªn˚
;

15 
	mvîbo£
;

16 
	mamíd
;

17 
	mu¡øcked
;

19 
	mcommôabÀ
;

20 
	mw‹kdú_dúty
;

21 
	mw‹kdú_u¡øcked
;

24 
gô_°©us_c⁄fig
(c⁄° *
v¨
, c⁄° *
vÆue
);

25 
wt_°©us_¥ï¨e
(
wt_°©us
 *
s
);

26 
wt_°©us_¥öt
(
wt_°©us
 *
s
);

	@xdiff-interface.c

1 
	~"ˇche.h
"

2 
	~"xdiff-öãrÁ˚.h
"

4 
	$∑r£_num
(**
˝_p
, *
num_p
)

6 *
˝
 = *
˝_p
;

7 
num
 = 0;

8 
ªad_some
;

10 '0' <*
˝
 && *cp <= '9')

11 
num
 =Çum * 10 + *
˝
++ - '0';

12 i‡(!(
ªad_some
 = 
˝
 - *
˝_p
))

14 *
˝_p
 = 
˝
;

15 *
num_p
 = 
num
;

17 
	}
}

19 
	$∑r£_hunk_hódî
(*
löe
, 
Àn
,

20 *
ob
, *
⁄
,

21 *
nb
, *
¬
)

23 *
˝
;

24 
˝
 = 
löe
 + 4;

25 i‡(
	`∑r£_num
(&
˝
, 
ob
)) {

26 
bad_löe
:

27  
	`îr‹
("mÆf‹med dif‡ouçut: %s", 
löe
);

29 i‡(*
˝
 == ',') {

30 
˝
++;

31 i‡(
	`∑r£_num
(&
˝
, 
⁄
))

32 
bad_löe
;

35 *
⁄
 = 1;

36 i‡(*
˝
++ != ' ' || *cp++ != '+')

37 
bad_löe
;

38 i‡(
	`∑r£_num
(&
˝
, 
nb
))

39 
bad_löe
;

40 i‡(*
˝
 == ',') {

41 
˝
++;

42 i‡(
	`∑r£_num
(&
˝
, 
¬
))

43 
bad_löe
;

46 *
¬
 = 1;

47  -!!
	`memcmp
(
˝
, " @@", 3);

48 
	}
}

50 
	$c⁄sume_⁄e
(*
¥iv_
, *
s
, 
size
)

52 
xdiff_emô_°©e
 *
¥iv
 = 
¥iv_
;

53 *
ï
;

54 
size
) {

55 
this_size
;

56 
ï
 = 
	`memchr
(
s
, '\n', 
size
);

57 
this_size
 = (
ï
 =
NULL
Ë? 
size
 : (ï - 
s
 + 1);

58 
¥iv
->
	`c⁄sume
’riv, 
s
, 
this_size
);

59 
size
 -
this_size
;

60 
s
 +
this_size
;

62 
	}
}

64 
	$xdiff_outf
(*
¥iv_
, 
mmbuf„r_t
 *
mb
, 
nbuf
)

66 
xdiff_emô_°©e
 *
¥iv
 = 
¥iv_
;

67 
i
;

69 
i
 = 0; i < 
nbuf
; i++) {

70 i‡(
mb
[
i
].
±r
[mb[i].
size
-1] != '\n') {

72 
¥iv
->
ªmaödî
 = 
	`xªÆloc
(priv->remainder,

73 
¥iv
->
ªmaödî_size
 +

74 
mb
[
i
].
size
);

75 
	`mem˝y
(
¥iv
->
ªmaödî
 +Öriv->
ªmaödî_size
,

76 
mb
[
i
].
±r
, mb[i].
size
);

77 
¥iv
->
ªmaödî_size
 +
mb
[
i
].
size
;

82 i‡(!
¥iv
->
ªmaödî
) {

83 
	`c⁄sume_⁄e
(
¥iv
, 
mb
[
i
].
±r
, mb[i].
size
);

86 
¥iv
->
ªmaödî
 = 
	`xªÆloc
(priv->remainder,

87 
¥iv
->
ªmaödî_size
 +

88 
mb
[
i
].
size
);

89 
	`mem˝y
(
¥iv
->
ªmaödî
 +Öriv->
ªmaödî_size
,

90 
mb
[
i
].
±r
, mb[i].
size
);

91 
	`c⁄sume_⁄e
(
¥iv
,Öriv->
ªmaödî
,

92 
¥iv
->
ªmaödî_size
 + 
mb
[
i
].
size
);

93 
	`‰ì
(
¥iv
->
ªmaödî
);

94 
¥iv
->
ªmaödî
 = 
NULL
;

95 
¥iv
->
ªmaödî_size
 = 0;

97 i‡(
¥iv
->
ªmaödî
) {

98 
	`c⁄sume_⁄e
(
¥iv
,Öriv->
ªmaödî
,Öriv->
ªmaödî_size
);

99 
	`‰ì
(
¥iv
->
ªmaödî
);

100 
¥iv
->
ªmaödî
 = 
NULL
;

101 
¥iv
->
ªmaödî_size
 = 0;

104 
	}
}

106 
	$ªad_mmfûe
(
mmfûe_t
 *
±r
, c⁄° *
fûíame
)

108 
°©
 
°
;

109 
FILE
 *
f
;

111 i‡(
	`°©
(
fûíame
, &
°
))

112  
	`îr‹
("CouldÇŸ sèà%s", 
fûíame
);

113 i‡((
f
 = 
	`f›í
(
fûíame
, "rb")Ë=
NULL
)

114  
	`îr‹
("CouldÇŸ o≥¿%s", 
fûíame
);

115 
±r
->±∏
	`xmÆloc
(
°
.
°_size
);

116 i‡(
	`‰ód
(
±r
->±r, 
°
.
°_size
, 1, 
f
) != 1)

117  
	`îr‹
("CouldÇŸÑód %s", 
fûíame
);

118 
	`f˛o£
(
f
);

119 
±r
->
size
 = 
°
.
°_size
;

121 
	}
}

	@xdiff-interface.h

1 #i‚de‡
XDIFF_INTERFACE_H


2 
	#XDIFF_INTERFACE_H


	)

4 
	~"xdiff/xdiff.h
"

6 
	gxdiff_emô_°©e
;

8 (*
	txdiff_emô_c⁄sume_‚
)(*, *, );

10 
	sxdiff_emô_°©e
 {

11 
xdiff_emô_c⁄sume_‚
 
c⁄sume
;

12 *
ªmaödî
;

13 
ªmaödî_size
;

16 
	`xdiff_outf
(*
¥iv_
, 
mmbuf„r_t
 *
mb
, 
nbuf
);

17 
	`∑r£_hunk_hódî
(*
löe
, 
Àn
,

18 *
ob
, *
⁄
,

19 *
nb
, *
¬
);

20 
	`ªad_mmfûe
(
mmfûe_t
 *
±r
, c⁄° *
fûíame
);

	@xdiff/xdiff.h

23 #i‡!
deföed
(
XDIFF_H
)

24 
	#XDIFF_H


	)

26 #ifde‡
__˝lu•lus


31 
	#XDF_NEED_MINIMAL
 (1 << 1)

	)

32 
	#XDF_IGNORE_WHITESPACE
 (1 << 2)

	)

33 
	#XDF_IGNORE_WHITESPACE_CHANGE
 (1 << 3)

	)

34 
	#XDF_WHITESPACE_FLAGS
 (
XDF_IGNORE_WHITESPACE
 | 
XDF_IGNORE_WHITESPACE_CHANGE
)

	)

36 
	#XDL_PATCH_NORMAL
 '-'

	)

37 
	#XDL_PATCH_REVERSE
 '+'

	)

38 
	#XDL_PATCH_MODEMASK
 ((1 << 8Ë- 1)

	)

39 
	#XDL_PATCH_IGNOREBSPACE
 (1 << 8)

	)

41 
	#XDL_EMIT_FUNCNAMES
 (1 << 0)

	)

42 
	#XDL_EMIT_COMMON
 (1 << 1)

	)

44 
	#XDL_MMB_READONLY
 (1 << 0)

	)

46 
	#XDL_MMF_ATOMIC
 (1 << 0)

	)

48 
	#XDL_BDOP_INS
 1

	)

49 
	#XDL_BDOP_CPY
 2

	)

50 
	#XDL_BDOP_INSB
 3

	)

52 
	#XDL_MERGE_MINIMAL
 0

	)

53 
	#XDL_MERGE_EAGER
 1

	)

54 
	#XDL_MERGE_ZEALOUS
 2

	)

56 
	ss_mmfûe
 {

57 *
±r
;

58 
size
;

59 } 
	tmmfûe_t
;

61 
	ss_mmbuf„r
 {

62 *
±r
;

63 
size
;

64 } 
	tmmbuf„r_t
;

66 
	ss_xµ¨am
 {

67 
Êags
;

68 } 
	txµ¨am_t
;

70 
	ss_xdemôcb
 {

71 *
¥iv
;

72 (*
outf
)(*, 
mmbuf„r_t
 *, );

73 } 
	txdemôcb_t
;

75 
	ss_xdemôc⁄f
 {

76 
˘xÀn
;

77 
Êags
;

78 } 
	txdemôc⁄f_t
;

80 
	ss_bdifÂ¨am
 {

81 
bsize
;

82 } 
	tbdifÂ¨am_t
;

85 
	#xdl_mÆloc
(
x
Ë
	`mÆloc
(x)

	)

86 
	#xdl_‰ì
(
±r
Ë
	`‰ì
’å)

	)

87 
	#xdl_ªÆloc
(
±r
,
x
Ë
	`ªÆloc
’å,x)

	)

89 *
xdl_mmfûe_fú°
(
mmfûe_t
 *
mmf
, *
size
);

90 *
xdl_mmfûe_√xt
(
mmfûe_t
 *
mmf
, *
size
);

91 
xdl_mmfûe_size
(
mmfûe_t
 *
mmf
);

93 
xdl_diff
(
mmfûe_t
 *
mf1
, mmfûe_à*
mf2
, 
xµ¨am_t
 c⁄° *
xµ
,

94 
xdemôc⁄f_t
 c⁄° *
xecfg
, 
xdemôcb_t
 *
ecb
);

96 
xdl_mîge
(
mmfûe_t
 *
‹ig
, mmfûe_à*
mf1
, c⁄° *
«me1
,

97 
mmfûe_t
 *
mf2
, c⁄° *
«me2
,

98 
xµ¨am_t
 c⁄° *
xµ
, 
Àvñ
, 
mmbuf„r_t
 *
ªsu…
);

100 #ifde‡
__˝lu•lus


	@xdiff/xdiffi.c

23 
	~"xö˛ude.h
"

27 
	#XDL_MAX_COST_MIN
 256

	)

28 
	#XDL_HEUR_MIN_COST
 256

	)

29 
	#XDL_LINE_MAX
 ()((1UL << (8 * (Ë- 1)Ë- 1)

	)

30 
	#XDL_SNAKE_CNT
 20

	)

31 
	#XDL_K_HEUR
 4

	)

35 
	ss_xdp•lô
 {

36 
	mi1
, 
	mi2
;

37 
	mmö_lo
, 
	mmö_hi
;

38 } 
	txdp•lô_t
;

43 
xdl_•lô
(c⁄° *
ha1
, 
off1
, 
lim1
,

44 c⁄° *
ha2
, 
off2
, 
lim2
,

45 *
kvdf
, *
kvdb
, 
√ed_mö
, 
xdp•lô_t
 *
•l
,

46 
xdÆg€nv_t
 *
xív
);

47 
xdch™ge_t
 *
xdl_add_ch™ge
(xdch™ge_à*
xs¸
, 
i1
, 
i2
, 
chg1
, 
chg2
);

62 
	$xdl_•lô
(c⁄° *
ha1
, 
off1
, 
lim1
,

63 c⁄° *
ha2
, 
off2
, 
lim2
,

64 *
kvdf
, *
kvdb
, 
√ed_mö
, 
xdp•lô_t
 *
•l
,

65 
xdÆg€nv_t
 *
xív
) {

66 
dmö
 = 
off1
 - 
lim2
, 
dmax
 = 
lim1
 - 
off2
;

67 
fmid
 = 
off1
 - 
off2
, 
bmid
 = 
lim1
 - 
lim2
;

68 
odd
 = (
fmid
 - 
bmid
) & 1;

69 
fmö
 = 
fmid
, 
fmax
 = fmid;

70 
bmö
 = 
bmid
, 
bmax
 = bmid;

71 
ec
, 
d
, 
i1
, 
i2
, 
¥ev1
, 
be°
, 
dd
, 
v
, 
k
;

76 
kvdf
[
fmid
] = 
off1
;

77 
kvdb
[
bmid
] = 
lim1
;

79 
ec
 = 1;;Éc++) {

80 
gŸ_¢ake
 = 0;

89 i‡(
fmö
 > 
dmö
)

90 
kvdf
[--
fmö
 - 1] = -1;

92 ++
fmö
;

93 i‡(
fmax
 < 
dmax
)

94 
kvdf
[++
fmax
 + 1] = -1;

96 --
fmax
;

98 
d
 = 
fmax
; d >
fmö
; d -= 2) {

99 i‡(
kvdf
[
d
 - 1] >= kvdf[d + 1])

100 
i1
 = 
kvdf
[
d
 - 1] + 1;

102 
i1
 = 
kvdf
[
d
 + 1];

103 
¥ev1
 = 
i1
;

104 
i2
 = 
i1
 - 
d
;

105 ; 
i1
 < 
lim1
 && 
i2
 < 
lim2
 && 
ha1
[i1] =
ha2
[i2]; i1++, i2++);

106 i‡(
i1
 - 
¥ev1
 > 
xív
->
¢ake_˙t
)

107 
gŸ_¢ake
 = 1;

108 
kvdf
[
d
] = 
i1
;

109 i‡(
odd
 && 
bmö
 <
d
 && d <
bmax
 && 
kvdb
[d] <
i1
) {

110 
•l
->
i1
 = i1;

111 
•l
->
i2
 = i2;

112 
•l
->
mö_lo
 = s∂->
mö_hi
 = 1;

113  
ec
;

124 i‡(
bmö
 > 
dmö
)

125 
kvdb
[--
bmö
 - 1] = 
XDL_LINE_MAX
;

127 ++
bmö
;

128 i‡(
bmax
 < 
dmax
)

129 
kvdb
[++
bmax
 + 1] = 
XDL_LINE_MAX
;

131 --
bmax
;

133 
d
 = 
bmax
; d >
bmö
; d -= 2) {

134 i‡(
kvdb
[
d
 - 1] < kvdb[d + 1])

135 
i1
 = 
kvdb
[
d
 - 1];

137 
i1
 = 
kvdb
[
d
 + 1] - 1;

138 
¥ev1
 = 
i1
;

139 
i2
 = 
i1
 - 
d
;

140 ; 
i1
 > 
off1
 && 
i2
 > 
off2
 && 
ha1
[i1 - 1] =
ha2
[i2 - 1]; i1--, i2--);

141 i‡(
¥ev1
 - 
i1
 > 
xív
->
¢ake_˙t
)

142 
gŸ_¢ake
 = 1;

143 
kvdb
[
d
] = 
i1
;

144 i‡(!
odd
 && 
fmö
 <
d
 && d <
fmax
 && 
i1
 <
kvdf
[d]) {

145 
•l
->
i1
 = i1;

146 
•l
->
i2
 = i2;

147 
•l
->
mö_lo
 = s∂->
mö_hi
 = 1;

148  
ec
;

152 i‡(
√ed_mö
)

165 i‡(
gŸ_¢ake
 && 
ec
 > 
xív
->
heur_mö
) {

166 
be°
 = 0, 
d
 = 
fmax
; d >
fmö
; d -= 2) {

167 
dd
 = 
d
 > 
fmid
 ? d - fmid: fmid - d;

168 
i1
 = 
kvdf
[
d
];

169 
i2
 = 
i1
 - 
d
;

170 
v
 = (
i1
 - 
off1
Ë+ (
i2
 - 
off2
Ë- 
dd
;

172 i‡(
v
 > 
XDL_K_HEUR
 * 
ec
 && v > 
be°
 &&

173 
off1
 + 
xív
->
¢ake_˙t
 <
i1
 && i1 < 
lim1
 &&

174 
off2
 + 
xív
->
¢ake_˙t
 <
i2
 && i2 < 
lim2
) {

175 
k
 = 1; 
ha1
[
i1
 - k] =
ha2
[
i2
 - k]; k++)

176 i‡(
k
 =
xív
->
¢ake_˙t
) {

177 
be°
 = 
v
;

178 
•l
->
i1
 = i1;

179 
•l
->
i2
 = i2;

184 i‡(
be°
 > 0) {

185 
•l
->
mö_lo
 = 1;

186 
•l
->
mö_hi
 = 0;

187  
ec
;

190 
be°
 = 0, 
d
 = 
bmax
; d >
bmö
; d -= 2) {

191 
dd
 = 
d
 > 
bmid
 ? d - bmid: bmid - d;

192 
i1
 = 
kvdb
[
d
];

193 
i2
 = 
i1
 - 
d
;

194 
v
 = (
lim1
 - 
i1
Ë+ (
lim2
 - 
i2
Ë- 
dd
;

196 i‡(
v
 > 
XDL_K_HEUR
 * 
ec
 && v > 
be°
 &&

197 
off1
 < 
i1
 && i1 <
lim1
 - 
xív
->
¢ake_˙t
 &&

198 
off2
 < 
i2
 && i2 <
lim2
 - 
xív
->
¢ake_˙t
) {

199 
k
 = 0; 
ha1
[
i1
 + k] =
ha2
[
i2
 + k]; k++)

200 i‡(
k
 =
xív
->
¢ake_˙t
 - 1) {

201 
be°
 = 
v
;

202 
•l
->
i1
 = i1;

203 
•l
->
i2
 = i2;

208 i‡(
be°
 > 0) {

209 
•l
->
mö_lo
 = 0;

210 
•l
->
mö_hi
 = 1;

211  
ec
;

219 i‡(
ec
 >
xív
->
mxco°
) {

220 
fbe°
, 
fbe°1
, 
bbe°
, 
bbe°1
;

222 
fbe°
 = 
fbe°1
 = -1;

223 
d
 = 
fmax
; d >
fmö
; d -= 2) {

224 
i1
 = 
	`XDL_MIN
(
kvdf
[
d
], 
lim1
);

225 
i2
 = 
i1
 - 
d
;

226 i‡(
lim2
 < 
i2
)

227 
i1
 = 
lim2
 + 
d
, 
i2
 =Üim2;

228 i‡(
fbe°
 < 
i1
 + 
i2
) {

229 
fbe°
 = 
i1
 + 
i2
;

230 
fbe°1
 = 
i1
;

234 
bbe°
 = 
bbe°1
 = 
XDL_LINE_MAX
;

235 
d
 = 
bmax
; d >
bmö
; d -= 2) {

236 
i1
 = 
	`XDL_MAX
(
off1
, 
kvdb
[
d
]);

237 
i2
 = 
i1
 - 
d
;

238 i‡(
i2
 < 
off2
)

239 
i1
 = 
off2
 + 
d
, 
i2
 = off2;

240 i‡(
i1
 + 
i2
 < 
bbe°
) {

241 
bbe°
 = 
i1
 + 
i2
;

242 
bbe°1
 = 
i1
;

246 i‡((
lim1
 + 
lim2
Ë- 
bbe°
 < 
fbe°
 - (
off1
 + 
off2
)) {

247 
•l
->
i1
 = 
fbe°1
;

248 
•l
->
i2
 = 
fbe°
 - 
fbe°1
;

249 
•l
->
mö_lo
 = 1;

250 
•l
->
mö_hi
 = 0;

252 
•l
->
i1
 = 
bbe°1
;

253 
•l
->
i2
 = 
bbe°
 - 
bbe°1
;

254 
•l
->
mö_lo
 = 0;

255 
•l
->
mö_hi
 = 1;

257  
ec
;

262 
	}
}

270 
	$xdl_ªcs_cmp
(
diffd©a_t
 *
dd1
, 
off1
, 
lim1
,

271 
diffd©a_t
 *
dd2
, 
off2
, 
lim2
,

272 *
kvdf
, *
kvdb
, 
√ed_mö
, 
xdÆg€nv_t
 *
xív
) {

273 c⁄° *
ha1
 = 
dd1
->
ha
, *
ha2
 = 
dd2
->ha;

278 ; 
off1
 < 
lim1
 && 
off2
 < 
lim2
 && 
ha1
[off1] =
ha2
[off2]; off1++, off2++);

279 ; 
off1
 < 
lim1
 && 
off2
 < 
lim2
 && 
ha1
[lim1 - 1] =
ha2
[lim2 - 1];Üim1--,Üim2--);

285 i‡(
off1
 =
lim1
) {

286 *
rchg2
 = 
dd2
->
rchg
;

287 *
rödex2
 = 
dd2
->
rödex
;

289 ; 
off2
 < 
lim2
; off2++)

290 
rchg2
[
rödex2
[
off2
]] = 1;

291 } i‡(
off2
 =
lim2
) {

292 *
rchg1
 = 
dd1
->
rchg
;

293 *
rödex1
 = 
dd1
->
rödex
;

295 ; 
off1
 < 
lim1
; off1++)

296 
rchg1
[
rödex1
[
off1
]] = 1;

298 
ec
;

299 
xdp•lô_t
 
•l
;

300 
•l
.
i1
 = s∂.
i2
 = 0;

305 i‡((
ec
 = 
	`xdl_•lô
(
ha1
, 
off1
, 
lim1
, 
ha2
, 
off2
, 
lim2
, 
kvdf
, 
kvdb
,

306 
√ed_mö
, &
•l
, 
xív
)) < 0) {

314 i‡(
	`xdl_ªcs_cmp
(
dd1
, 
off1
, 
•l
.
i1
, 
dd2
, 
off2
, s∂.
i2
,

315 
kvdf
, 
kvdb
, 
•l
.
mö_lo
, 
xív
) < 0 ||

316 
	`xdl_ªcs_cmp
(
dd1
, 
•l
.
i1
, 
lim1
, 
dd2
, s∂.
i2
, 
lim2
,

317 
kvdf
, 
kvdb
, 
•l
.
mö_hi
, 
xív
) < 0) {

324 
	}
}

327 
	$xdl_do_diff
(
mmfûe_t
 *
mf1
, mmfûe_à*
mf2
, 
xµ¨am_t
 c⁄° *
xµ
,

328 
xd„nv_t
 *
xe
) {

329 
ndügs
;

330 *
kvd
, *
kvdf
, *
kvdb
;

331 
xdÆg€nv_t
 
xív
;

332 
diffd©a_t
 
dd1
, 
dd2
;

334 i‡(
	`xdl_¥ï¨e_ív
(
mf1
, 
mf2
, 
xµ
, 
xe
) < 0) {

343 
ndügs
 = 
xe
->
xdf1
.
ƒeff
 + xe->
xdf2
.nreff + 3;

344 i‡(!(
kvd
 = (*Ë
	`xdl_mÆloc
((2 * 
ndügs
 + 2) * ()))) {

346 
	`xdl_‰ì_ív
(
xe
);

349 
kvdf
 = 
kvd
;

350 
kvdb
 = 
kvdf
 + 
ndügs
;

351 
kvdf
 +
xe
->
xdf2
.
ƒeff
 + 1;

352 
kvdb
 +
xe
->
xdf2
.
ƒeff
 + 1;

354 
xív
.
mxco°
 = 
	`xdl_bogosqπ
(
ndügs
);

355 i‡(
xív
.
mxco°
 < 
XDL_MAX_COST_MIN
)

356 
xív
.
mxco°
 = 
XDL_MAX_COST_MIN
;

357 
xív
.
¢ake_˙t
 = 
XDL_SNAKE_CNT
;

358 
xív
.
heur_mö
 = 
XDL_HEUR_MIN_COST
;

360 
dd1
.
ƒec
 = 
xe
->
xdf1
.
ƒeff
;

361 
dd1
.
ha
 = 
xe
->
xdf1
.ha;

362 
dd1
.
rchg
 = 
xe
->
xdf1
.rchg;

363 
dd1
.
rödex
 = 
xe
->
xdf1
.rindex;

364 
dd2
.
ƒec
 = 
xe
->
xdf2
.
ƒeff
;

365 
dd2
.
ha
 = 
xe
->
xdf2
.ha;

366 
dd2
.
rchg
 = 
xe
->
xdf2
.rchg;

367 
dd2
.
rödex
 = 
xe
->
xdf2
.rindex;

369 i‡(
	`xdl_ªcs_cmp
(&
dd1
, 0, dd1.
ƒec
, &
dd2
, 0, dd2.nrec,

370 
kvdf
, 
kvdb
, (
xµ
->
Êags
 & 
XDF_NEED_MINIMAL
Ë!0, &
xív
) < 0) {

372 
	`xdl_‰ì
(
kvd
);

373 
	`xdl_‰ì_ív
(
xe
);

377 
	`xdl_‰ì
(
kvd
);

380 
	}
}

383 
xdch™ge_t
 *
	$xdl_add_ch™ge
(
xdch™ge_t
 *
xs¸
, 
i1
, 
i2
, 
chg1
, 
chg2
) {

384 
xdch™ge_t
 *
xch
;

386 i‡(!(
xch
 = (
xdch™ge_t
 *Ë
	`xdl_mÆloc
((xdchange_t))))

387  
NULL
;

389 
xch
->
√xt
 = 
xs¸
;

390 
xch
->
i1
 = i1;

391 
xch
->
i2
 = i2;

392 
xch
->
chg1
 = chg1;

393 
xch
->
chg2
 = chg2;

395  
xch
;

396 
	}
}

399 
	$xdl_ch™ge_com∑˘
(
xdfûe_t
 *
xdf
, xdfûe_à*
xdfo
, 
Êags
) {

400 
ix
, 
ixo
, 
ixs
, 
ixªf
, 
gΩsiz
, 
ƒec
 = 
xdf
->nrec;

401 *
rchg
 = 
xdf
->rchg, *
rchgo
 = 
xdfo
->rchg;

402 
xªc‹d_t
 **
ªcs
 = 
xdf
->recs;

409 
ix
 = 
ixo
 = 0;;) {

419 ; 
ix
 < 
ƒec
 && !
rchg
[ix]; ix++)

420 
rchgo
[
ixo
++]);

421 i‡(
ix
 =
ƒec
)

429 
ixs
 = 
ix
;

430 
ix
++; 
rchg
[ix]; ix++);

431 ; 
rchgo
[
ixo
]; ixo++);

434 
gΩsiz
 = 
ix
 - 
ixs
;

441 
ixs
 > 0 && 
ªcs
[ix†- 1]->
ha
 =ªcs[
ix
 - 1]->ha &&

442 
	`xdl_ªcm©ch
(
ªcs
[
ixs
 - 1]->
±r
,Ñecs[ix†- 1]->
size
,Ñecs[
ix
 - 1]->±r,Ñecs[ix - 1]->size, 
Êags
)) {

443 
rchg
[--
ixs
] = 1;

444 
rchg
[--
ix
] = 0;

452 ; 
rchg
[
ixs
 - 1]; ixs--);

453 
rchgo
[--
ixo
]);

462 
ixªf
 = 
rchgo
[
ixo
 - 1] ? 
ix
: 
ƒec
;

469 
ix
 < 
ƒec
 && 
ªcs
[
ixs
]->
ha
 ==Ñecs[ix]->ha &&

470 
	`xdl_ªcm©ch
(
ªcs
[
ixs
]->
±r
,Ñecs[ixs]->
size
,Ñecs[
ix
]->±r,Ñecs[ix]->size, 
Êags
)) {

471 
rchg
[
ixs
++] = 0;

472 
rchg
[
ix
++] = 1;

482 ; 
rchg
[
ix
]; ix++);

483 
rchgo
[++
ixo
])

484 
ixªf
 = 
ix
;

486 } 
gΩsiz
 !
ix
 - 
ixs
);

492 
ixªf
 < 
ix
) {

493 
rchg
[--
ixs
] = 1;

494 
rchg
[--
ix
] = 0;

495 
rchgo
[--
ixo
]);

500 
	}
}

503 
	$xdl_buûd_s¸ùt
(
xd„nv_t
 *
xe
, 
xdch™ge_t
 **
xs¸
) {

504 
xdch™ge_t
 *
cs¸
 = 
NULL
, *
xch
;

505 *
rchg1
 = 
xe
->
xdf1
.
rchg
, *
rchg2
 = xe->
xdf2
.rchg;

506 
i1
, 
i2
, 
l1
, 
l2
;

511 
i1
 = 
xe
->
xdf1
.
ƒec
, 
i2
 = xe->
xdf2
.nrec; i1 >= 0 || i2 >= 0; i1--, i2--)

512 i‡(
rchg1
[
i1
 - 1] || 
rchg2
[
i2
 - 1]) {

513 
l1
 = 
i1
; 
rchg1
[i1 - 1]; i1--);

514 
l2
 = 
i2
; 
rchg2
[i2 - 1]; i2--);

516 i‡(!(
xch
 = 
	`xdl_add_ch™ge
(
cs¸
, 
i1
, 
i2
, 
l1
 - i1, 
l2
 - i2))) {

517 
	`xdl_‰ì_s¸ùt
(
cs¸
);

520 
cs¸
 = 
xch
;

523 *
xs¸
 = 
cs¸
;

526 
	}
}

529 
	$xdl_‰ì_s¸ùt
(
xdch™ge_t
 *
xs¸
) {

530 
xdch™ge_t
 *
xch
;

532 (
xch
 = 
xs¸
Ë!
NULL
) {

533 
xs¸
 = xs¸->
√xt
;

534 
	`xdl_‰ì
(
xch
);

536 
	}
}

539 
	$xdl_diff
(
mmfûe_t
 *
mf1
, mmfûe_à*
mf2
, 
xµ¨am_t
 c⁄° *
xµ
,

540 
xdemôc⁄f_t
 c⁄° *
xecfg
, 
xdemôcb_t
 *
ecb
) {

541 
xdch™ge_t
 *
xs¸
;

542 
xd„nv_t
 
xe
;

544 i‡(
	`xdl_do_diff
(
mf1
, 
mf2
, 
xµ
, &
xe
) < 0) {

548 i‡(
	`xdl_ch™ge_com∑˘
(&
xe
.
xdf1
, &xe.
xdf2
, 
xµ
->
Êags
) < 0 ||

549 
	`xdl_ch™ge_com∑˘
(&
xe
.
xdf2
, &xe.
xdf1
, 
xµ
->
Êags
) < 0 ||

550 
	`xdl_buûd_s¸ùt
(&
xe
, &
xs¸
) < 0) {

552 
	`xdl_‰ì_ív
(&
xe
);

555 i‡(
xs¸
) {

556 i‡(
	`xdl_emô_diff
(&
xe
, 
xs¸
, 
ecb
, 
xecfg
) < 0) {

558 
	`xdl_‰ì_s¸ùt
(
xs¸
);

559 
	`xdl_‰ì_ív
(&
xe
);

562 
	`xdl_‰ì_s¸ùt
(
xs¸
);

564 
	`xdl_‰ì_ív
(&
xe
);

567 
	}
}

	@xdiff/xdiffi.h

23 #i‡!
deföed
(
XDIFFI_H
)

24 
	#XDIFFI_H


	)

27 
	ss_diffd©a
 {

28 
	mƒec
;

29 c⁄° *
	mha
;

30 *
	mrödex
;

31 *
	mrchg
;

32 } 
	tdiffd©a_t
;

34 
	ss_xdÆg€nv
 {

35 
	mmxco°
;

36 
	m¢ake_˙t
;

37 
	mheur_mö
;

38 } 
	txdÆg€nv_t
;

40 
	ss_xdch™ge
 {

41 
s_xdch™ge
 *
	m√xt
;

42 
	mi1
, 
	mi2
;

43 
	mchg1
, 
	mchg2
;

44 } 
	txdch™ge_t
;

48 
xdl_ªcs_cmp
(
diffd©a_t
 *
dd1
, 
off1
, 
lim1
,

49 
diffd©a_t
 *
dd2
, 
off2
, 
lim2
,

50 *
kvdf
, *
kvdb
, 
√ed_mö
, 
xdÆg€nv_t
 *
xív
);

51 
xdl_do_diff
(
mmfûe_t
 *
mf1
, mmfûe_à*
mf2
, 
xµ¨am_t
 c⁄° *
xµ
,

52 
xd„nv_t
 *
xe
);

53 
xdl_ch™ge_com∑˘
(
xdfûe_t
 *
xdf
, xdfûe_à*
xdfo
, 
Êags
);

54 
xdl_buûd_s¸ùt
(
xd„nv_t
 *
xe
, 
xdch™ge_t
 **
xs¸
);

55 
xdl_‰ì_s¸ùt
(
xdch™ge_t
 *
xs¸
);

56 
xdl_emô_diff
(
xd„nv_t
 *
xe
, 
xdch™ge_t
 *
xs¸
, 
xdemôcb_t
 *
ecb
,

57 
xdemôc⁄f_t
 c⁄° *
xecfg
);

	@xdiff/xemit.c

23 
	~"xö˛ude.h
"

28 
xdl_gë_ªc
(
xdfûe_t
 *
xdf
, 
ri
, c⁄° **
ªc
);

29 
xdl_emô_ªc‹d
(
xdfûe_t
 *
xdf
, 
ri
, c⁄° *
¥e
, 
xdemôcb_t
 *
ecb
);

30 
xdch™ge_t
 *
xdl_gë_hunk
(xdch™ge_à*
xs¸
, 
xdemôc⁄f_t
 c⁄° *
xecfg
);

35 
	$xdl_gë_ªc
(
xdfûe_t
 *
xdf
, 
ri
, c⁄° **
ªc
) {

37 *
ªc
 = 
xdf
->
ªcs
[
ri
]->
±r
;

39  
xdf
->
ªcs
[
ri
]->
size
;

40 
	}
}

43 
	$xdl_emô_ªc‹d
(
xdfûe_t
 *
xdf
, 
ri
, c⁄° *
¥e
, 
xdemôcb_t
 *
ecb
) {

44 
size
, 
psize
 = 
	`°æí
(
¥e
);

45 c⁄° *
ªc
;

47 
size
 = 
	`xdl_gë_ªc
(
xdf
, 
ri
, &
ªc
);

48 i‡(
	`xdl_emô_dif‰ec
(
ªc
, 
size
, 
¥e
, 
psize
, 
ecb
) < 0) {

54 
	}
}

61 
xdch™ge_t
 *
	$xdl_gë_hunk
(
xdch™ge_t
 *
xs¸
, 
xdemôc⁄f_t
 c⁄° *
xecfg
) {

62 
xdch™ge_t
 *
xch
, *
xchp
;

64 
xchp
 = 
xs¸
, 
xch
 = xs¸->
√xt
; xch; xchp = xch, xch = xch->next)

65 i‡(
xch
->
i1
 - (
xchp
->i1 + xchp->
chg1
Ë> 2 * 
xecfg
->
˘xÀn
)

68  
xchp
;

69 
	}
}

72 
	$xdl_föd_func
(
xdfûe_t
 *
xf
, 
i
, *
buf
, 
sz
, *
Œ
) {

80 c⁄° *
ªc
;

81 
Àn
;

83 *
Œ
 = 0;

84 
i
-- > 0) {

85 
Àn
 = 
	`xdl_gë_ªc
(
xf
, 
i
, &
ªc
);

86 i‡(
Àn
 > 0 &&

87 (
	`ißÕha
(()*
ªc
) ||

88 *
ªc
 == '_' ||

89 *
ªc
 == '$')) {

90 i‡(
Àn
 > 
sz
)

91 
Àn
 = 
sz
;

92 0 < 
Àn
 && 
	`is•a˚
(()
ªc
[len - 1]))

93 
Àn
--;

94 
	`mem˝y
(
buf
, 
ªc
, 
Àn
);

95 *
Œ
 = 
Àn
;

99 
	}
}

102 
	$xdl_emô_comm⁄
(
xd„nv_t
 *
xe
, 
xdch™ge_t
 *
xs¸
, 
xdemôcb_t
 *
ecb
,

103 
xdemôc⁄f_t
 c⁄° *
xecfg
) {

104 
xdfûe_t
 *
xdf
 = &
xe
->
xdf1
;

105 c⁄° *
rchg
 = 
xdf
->rchg;

106 
ix
;

108 
ix
 = 0; ix < 
xdf
->
ƒec
; ix++) {

109 i‡(
rchg
[
ix
])

111 i‡(
	`xdl_emô_ªc‹d
(
xdf
, 
ix
, "", 
ecb
))

115 
	}
}

117 
	$xdl_emô_diff
(
xd„nv_t
 *
xe
, 
xdch™ge_t
 *
xs¸
, 
xdemôcb_t
 *
ecb
,

118 
xdemôc⁄f_t
 c⁄° *
xecfg
) {

119 
s1
, 
s2
, 
e1
, 
e2
, 
l˘x
;

120 
xdch™ge_t
 *
xch
, *
xche
;

121 
funcbuf
[80];

122 
fun˛í
 = 0;

124 i‡(
xecfg
->
Êags
 & 
XDL_EMIT_COMMON
)

125  
	`xdl_emô_comm⁄
(
xe
, 
xs¸
, 
ecb
, 
xecfg
);

127 
xch
 = 
xche
 = 
xs¸
; xch; xch = xche->
√xt
) {

128 
xche
 = 
	`xdl_gë_hunk
(
xch
, 
xecfg
);

130 
s1
 = 
	`XDL_MAX
(
xch
->
i1
 - 
xecfg
->
˘xÀn
, 0);

131 
s2
 = 
	`XDL_MAX
(
xch
->
i2
 - 
xecfg
->
˘xÀn
, 0);

133 
l˘x
 = 
xecfg
->
˘xÀn
;

134 
l˘x
 = 
	`XDL_MIN
÷˘x, 
xe
->
xdf1
.
ƒec
 - (
xche
->
i1
 + xche->
chg1
));

135 
l˘x
 = 
	`XDL_MIN
÷˘x, 
xe
->
xdf2
.
ƒec
 - (
xche
->
i2
 + xche->
chg2
));

137 
e1
 = 
xche
->
i1
 + xche->
chg1
 + 
l˘x
;

138 
e2
 = 
xche
->
i2
 + xche->
chg2
 + 
l˘x
;

144 i‡(
xecfg
->
Êags
 & 
XDL_EMIT_FUNCNAMES
) {

145 
	`xdl_föd_func
(&
xe
->
xdf1
, 
s1
, 
funcbuf
,

146 (
funcbuf
), &
fun˛í
);

148 i‡(
	`xdl_emô_hunk_hdr
(
s1
 + 1, 
e1
 - s1, 
s2
 + 1, 
e2
 - s2,

149 
funcbuf
, 
fun˛í
, 
ecb
) < 0)

155 ; 
s1
 < 
xch
->
i1
; s1++)

156 i‡(
	`xdl_emô_ªc‹d
(&
xe
->
xdf1
, 
s1
, " ", 
ecb
) < 0)

159 
s1
 = 
xch
->
i1
, 
s2
 = xch->
i2
;; xch = xch->
√xt
) {

163 ; 
s1
 < 
xch
->
i1
 && 
s2
 < xch->
i2
; s1++, s2++)

164 i‡(
	`xdl_emô_ªc‹d
(&
xe
->
xdf1
, 
s1
, " ", 
ecb
) < 0)

170 
s1
 = 
xch
->
i1
; s1 < xch->i1 + xch->
chg1
; s1++)

171 i‡(
	`xdl_emô_ªc‹d
(&
xe
->
xdf1
, 
s1
, "-", 
ecb
) < 0)

177 
s2
 = 
xch
->
i2
; s2 < xch->i2 + xch->
chg2
; s2++)

178 i‡(
	`xdl_emô_ªc‹d
(&
xe
->
xdf2
, 
s2
, "+", 
ecb
) < 0)

181 i‡(
xch
 =
xche
)

183 
s1
 = 
xch
->
i1
 + xch->
chg1
;

184 
s2
 = 
xch
->
i2
 + xch->
chg2
;

190 
s1
 = 
xche
->
i1
 + xche->
chg1
; s1 < 
e1
; s1++)

191 i‡(
	`xdl_emô_ªc‹d
(&
xe
->
xdf1
, 
s1
, " ", 
ecb
) < 0)

196 
	}
}

	@xdiff/xemit.h

23 #i‡!
deföed
(
XEMIT_H
)

24 
	#XEMIT_H


	)

28 
xdl_emô_diff
(
xd„nv_t
 *
xe
, 
xdch™ge_t
 *
xs¸
, 
xdemôcb_t
 *
ecb
,

29 
xdemôc⁄f_t
 c⁄° *
xecfg
);

	@xdiff/xinclude.h

23 #i‡!
deföed
(
XINCLUDE_H
)

24 
	#XINCLUDE_H


	)

26 
	~<˘y≥.h
>

27 
	~<°dio.h
>

28 
	~<°dlib.h
>

29 
	~<uni°d.h
>

30 
	~<°rög.h
>

31 
	~<limôs.h
>

33 
	~"xma¸os.h
"

34 
	~"xdiff.h
"

35 
	~"xty≥s.h
"

36 
	~"xutûs.h
"

37 
	~"x¥ï¨e.h
"

38 
	~"xdiffi.h
"

39 
	~"xemô.h
"

	@xdiff/xmacros.h

23 #i‡!
deföed
(
XMACROS_H
)

24 
	#XMACROS_H


	)

29 
	#XDL_MIN
(
a
, 
b
Ë(◊Ë< (bË? (a): (b))

	)

30 
	#XDL_MAX
(
a
, 
b
Ë(◊Ë> (bË? (a): (b))

	)

31 
	#XDL_ABS
(
v
Ë((vË>0 ? (v): -(v))

	)

32 
	#XDL_ISDIGIT
(
c
Ë((cË>'0' && (cË<'9')

	)

33 
	#XDL_ADDBITS
(
v
,
b
Ë((vË+ ((vË>> (b)))

	)

34 
	#XDL_MASKBITS
(
b
Ë((1UL << (b)Ë- 1)

	)

35 
	#XDL_HASHLONG
(
v
,
b
Ë(
	`XDL_ADDBITS
(()(v), bË& 
	`XDL_MASKBITS
(b))

	)

36 
	#XDL_PTRFREE
(
p
Ëdÿ{ i‡’Ë{ 
	`xdl_‰ì
’); (pË
NULL
; } } 0)

	)

37 
	#XDL_LE32_PUT
(
p
, 
v
) \

39 *
__p
 = (*Ë(
p
); \

40 *
__p
++ = (Ë(
v
); \

41 *
__p
++ = (Ë((
v
) >> 8); \

42 *
__p
++ = (Ë((
v
) >> 16); \

43 *
__p
 = (Ë((
v
) >> 24); \

44 } 0)

	)

45 
	#XDL_LE32_GET
(
p
, 
v
) \

47 c⁄° *
__p
 = (c⁄° *Ë(
p
); \

48 (
v
Ë(Ë
__p
[0] | (() __p[1]) << 8 | \

49 ((Ë
__p
[2]) << 16 | (() __p[3]) << 24; \

50 } 0)

	)

	@xdiff/xmerge.c

23 
	~"xö˛ude.h
"

25 
	ss_xdmîge
 {

26 
s_xdmîge
 *
	m√xt
;

32 
	mmode
;

33 
	mi1
, 
	mi2
;

34 
	mchg1
, 
	mchg2
;

35 } 
	txdmîge_t
;

37 
	$xdl_≠≥nd_mîge
(
xdmîge_t
 **
mîge
, 
mode
,

38 
i1
, 
chg1
, 
i2
, 
chg2
)

40 
xdmîge_t
 *
m
 = *
mîge
;

41 i‡(
m
 && (
i1
 <m->i1 + m->
chg1
 || 
i2
 <m->i2 + m->
chg2
)) {

42 i‡(
mode
 !
m
->mode)

43 
m
->
mode
 = 0;

44 
m
->
chg1
 = 
i1
 + chg1 - m->i1;

45 
m
->
chg2
 = 
i2
 + chg2 - m->i2;

47 
m
 = 
	`xdl_mÆloc
((
xdmîge_t
));

48 i‡(!
m
)

50 
m
->
√xt
 = 
NULL
;

51 
m
->
mode
 = mode;

52 
m
->
i1
 = i1;

53 
m
->
chg1
 = chg1;

54 
m
->
i2
 = i2;

55 
m
->
chg2
 = chg2;

56 i‡(*
mîge
)

57 (*
mîge
)->
√xt
 = 
m
;

58 *
mîge
 = 
m
;

61 
	}
}

63 
	$xdl_˛ónup_mîge
(
xdmîge_t
 *
c
)

65 
cou¡
 = 0;

66 
xdmîge_t
 *
√xt_c
;

69 ; 
c
; c = 
√xt_c
) {

70 i‡(
c
->
mode
 == 0)

71 
cou¡
++;

72 
√xt_c
 = 
c
->
√xt
;

73 
	`‰ì
(
c
);

75  
cou¡
;

76 
	}
}

78 
	$xdl_mîge_cmp_löes
(
xd„nv_t
 *
xe1
, 
i1
, xd„nv_à*
xe2
, 
i2
,

79 
löe_cou¡
, 
Êags
)

81 
i
;

82 
xªc‹d_t
 **
ªc1
 = 
xe1
->
xdf2
.
ªcs
 + 
i1
;

83 
xªc‹d_t
 **
ªc2
 = 
xe2
->
xdf2
.
ªcs
 + 
i2
;

85 
i
 = 0; i < 
löe_cou¡
; i++) {

86 
ªsu…
 = 
	`xdl_ªcm©ch
(
ªc1
[
i
]->
±r
,Ñec1[i]->
size
,

87 
ªc2
[
i
]->
±r
,Ñec2[i]->
size
, 
Êags
);

88 i‡(!
ªsu…
)

92 
	}
}

94 
	$xdl_ªcs_c›y
(
xd„nv_t
 *
xe
, 
i
, 
cou¡
, 
add_∆
, *
de°
)

96 
xªc‹d_t
 **
ªcs
 = 
xe
->
xdf2
.ªc†+ 
i
;

97 
size
 = 0;

99 i‡(
cou¡
 < 1)

102 
i
 = 0; i < 
cou¡
; 
size
 +
ªcs
[i++]->size)

103 i‡(
de°
)

104 
	`mem˝y
(
de°
 + 
size
, 
ªcs
[
i
]->
±r
,Ñecs[i]->size);

105 i‡(
add_∆
) {

106 
i
 = 
ªcs
[
cou¡
 - 1]->
size
;

107 i‡(
i
 =0 || 
ªcs
[
cou¡
 - 1]->
±r
[i - 1] != '\n') {

108 i‡(
de°
)

109 
de°
[
size
] = '\n';

110 
size
++;

113  
size
;

114 
	}
}

116 
	$xdl_fûl_mîge_buf„r
(
xd„nv_t
 *
xe1
, c⁄° *
«me1
,

117 
xd„nv_t
 *
xe2
, c⁄° *
«me2
, 
xdmîge_t
 *
m
, *
de°
)

119 c⁄° 
m¨kî_size
 = 7;

120 
m¨kî1_size
 = (
«me1
 ? 
	`°æí
(name1) + 1 : 0);

121 
m¨kî2_size
 = (
«me2
 ? 
	`°æí
(name2) + 1 : 0);

122 
c⁄Êi˘_m¨kî_size
 = 3 * (
m¨kî_size
 + 1)

123 + 
m¨kî1_size
 + 
m¨kî2_size
;

124 
size
, 
i1
, 
j
;

126 
size
 = 
i1
 = 0; 
m
; m = m->
√xt
) {

127 i‡(
m
->
mode
 == 0) {

128 
size
 +
	`xdl_ªcs_c›y
(
xe1
, 
i1
, 
m
->i1 - i1, 0,

129 
de°
 ? de° + 
size
 : 
NULL
);

130 i‡(
de°
) {

131 
j
 = 0; j < 
m¨kî_size
; j++)

132 
de°
[
size
++] = '<';

133 i‡(
m¨kî1_size
) {

134 
de°
[
size
] = ' ';

135 
	`mem˝y
(
de°
 + 
size
 + 1, 
«me1
,

136 
m¨kî1_size
 - 1);

137 
size
 +
m¨kî1_size
;

139 
de°
[
size
++] = '\n';

141 
size
 +
c⁄Êi˘_m¨kî_size
;

142 
size
 +
	`xdl_ªcs_c›y
(
xe1
, 
m
->
i1
, m->
chg1
, 1,

143 
de°
 ? de° + 
size
 : 
NULL
);

144 i‡(
de°
) {

145 
j
 = 0; j < 
m¨kî_size
; j++)

146 
de°
[
size
++] = '=';

147 
de°
[
size
++] = '\n';

149 
size
 +
	`xdl_ªcs_c›y
(
xe2
, 
m
->
i2
, m->
chg2
, 1,

150 
de°
 ? de° + 
size
 : 
NULL
);

151 i‡(
de°
) {

152 
j
 = 0; j < 
m¨kî_size
; j++)

153 
de°
[
size
++] = '>';

154 i‡(
m¨kî2_size
) {

155 
de°
[
size
] = ' ';

156 
	`mem˝y
(
de°
 + 
size
 + 1, 
«me2
,

157 
m¨kî2_size
 - 1);

158 
size
 +
m¨kî2_size
;

160 
de°
[
size
++] = '\n';

162 } i‡(
m
->
mode
 == 1)

163 
size
 +
	`xdl_ªcs_c›y
(
xe1
, 
i1
, 
m
->i1 + m->
chg1
 - i1, 0,

164 
de°
 ? de° + 
size
 : 
NULL
);

165 i‡(
m
->
mode
 == 2)

166 
size
 +
	`xdl_ªcs_c›y
(
xe2
, 
m
->
i2
 - m->
i1
 + i1,

167 
m
->
i1
 + m->
chg2
 - i1, 0,

168 
de°
 ? de° + 
size
 : 
NULL
);

171 
i1
 = 
m
->i1 + m->
chg1
;

173 
size
 +
	`xdl_ªcs_c›y
(
xe1
, 
i1
, xe1->
xdf2
.
ƒec
 - i1, 0,

174 
de°
 ? de° + 
size
 : 
NULL
);

175  
size
;

176 
	}
}

182 
	$xdl_ªföe_c⁄Êi˘s
(
xd„nv_t
 *
xe1
, xd„nv_à*
xe2
, 
xdmîge_t
 *
m
,

183 
xµ¨am_t
 c⁄° *
xµ
)

185 ; 
m
; m = m->
√xt
) {

186 
mmfûe_t
 
t1
, 
t2
;

187 
xd„nv_t
 
xe
;

188 
xdch™ge_t
 *
xs¸
, *
x
;

189 
i1
 = 
m
->i1, 
i2
 = m->i2;

192 i‡(
m
->
mode
)

196 i‡(
m
->
chg1
 =0 || m->
chg2
 == 0)

203 
t1
.
±r
 = (*)
xe1
->
xdf2
.
ªcs
[
m
->
i1
]->ptr;

204 
t1
.
size
 = 
xe1
->
xdf2
.
ªcs
[
m
->
i1
 + m->
chg1
 - 1]->
±r


205 + 
xe1
->
xdf2
.
ªcs
[
m
->
i1
 + m->
chg1
 - 1]->
size
 - 
t1
.
±r
;

206 
t2
.
±r
 = (*)
xe2
->
xdf2
.
ªcs
[
m
->
i2
]->ptr;

207 
t2
.
size
 = 
xe2
->
xdf2
.
ªcs
[
m
->
i2
 + m->
chg2
 - 1]->
±r


208 + 
xe2
->
xdf2
.
ªcs
[
m
->
i2
 + m->
chg2
 - 1]->
size
 - 
t2
.
±r
;

209 i‡(
	`xdl_do_diff
(&
t1
, &
t2
, 
xµ
, &
xe
) < 0)

211 i‡(
	`xdl_ch™ge_com∑˘
(&
xe
.
xdf1
, &xe.
xdf2
, 
xµ
->
Êags
) < 0 ||

212 
	`xdl_ch™ge_com∑˘
(&
xe
.
xdf2
, &xe.
xdf1
, 
xµ
->
Êags
) < 0 ||

213 
	`xdl_buûd_s¸ùt
(&
xe
, &
xs¸
) < 0) {

214 
	`xdl_‰ì_ív
(&
xe
);

217 i‡(!
xs¸
) {

219 
	`xdl_‰ì_ív
(&
xe
);

220 
m
->
mode
 = 4;

223 
x
 = 
xs¸
;

224 
m
->
i1
 = 
xs¸
->i1 + i1;

225 
m
->
chg1
 = 
xs¸
->chg1;

226 
m
->
i2
 = 
xs¸
->i2 + i2;

227 
m
->
chg2
 = 
xs¸
->chg2;

228 
xs¸
->
√xt
) {

229 
xdmîge_t
 *
m2
 = 
	`xdl_mÆloc
((xdmerge_t));

230 i‡(!
m2
) {

231 
	`xdl_‰ì_ív
(&
xe
);

232 
	`xdl_‰ì_s¸ùt
(
x
);

235 
xs¸
 = xs¸->
√xt
;

236 
m2
->
√xt
 = 
m
->next;

237 
m
->
√xt
 = 
m2
;

238 
m
 = 
m2
;

239 
m
->
mode
 = 0;

240 
m
->
i1
 = 
xs¸
->i1 + i1;

241 
m
->
chg1
 = 
xs¸
->chg1;

242 
m
->
i2
 = 
xs¸
->i2 + i2;

243 
m
->
chg2
 = 
xs¸
->chg2;

245 
	`xdl_‰ì_ív
(&
xe
);

246 
	`xdl_‰ì_s¸ùt
(
x
);

249 
	}
}

258 
	$xdl_do_mîge
(
xd„nv_t
 *
xe1
, 
xdch™ge_t
 *
xs¸1
, c⁄° *
«me1
,

259 
xd„nv_t
 *
xe2
, 
xdch™ge_t
 *
xs¸2
, c⁄° *
«me2
,

260 
Àvñ
, 
xµ¨am_t
 c⁄° *
xµ
, 
mmbuf„r_t
 *
ªsu…
) {

261 
xdmîge_t
 *
ch™ges
, *
c
;

262 
i1
, 
i2
, 
chg1
, 
chg2
;

264 
c
 = 
ch™ges
 = 
NULL
;

266 
xs¸1
 && 
xs¸2
) {

267 i‡(!
ch™ges
)

268 
ch™ges
 = 
c
;

269 i‡(
xs¸1
->
i1
 + xs¸1->
chg1
 < 
xs¸2
->i1) {

270 
i1
 = 
xs¸1
->
i2
;

271 
i2
 = 
xs¸2
->i2 - xs¸2->
i1
 + 
xs¸1
->i1;

272 
chg1
 = 
xs¸1
->
chg2
;

273 
chg2
 = 
xs¸1
->
chg1
;

274 i‡(
	`xdl_≠≥nd_mîge
(&
c
, 1, 
i1
, 
chg1
, 
i2
, 
chg2
)) {

275 
	`xdl_˛ónup_mîge
(
ch™ges
);

278 
xs¸1
 = xs¸1->
√xt
;

281 i‡(
xs¸2
->
i1
 + xs¸2->
chg1
 < 
xs¸1
->i1) {

282 
i1
 = 
xs¸1
->
i2
 - xs¸1->i1 + 
xs¸2
->i1;

283 
i2
 = 
xs¸2
->i2;

284 
chg1
 = 
xs¸2
->chg1;

285 
chg2
 = 
xs¸2
->chg2;

286 i‡(
	`xdl_≠≥nd_mîge
(&
c
, 2, 
i1
, 
chg1
, 
i2
, 
chg2
)) {

287 
	`xdl_˛ónup_mîge
(
ch™ges
);

290 
xs¸2
 = xs¸2->
√xt
;

293 i‡(
Àvñ
 < 1 || 
xs¸1
->
i1
 !
xs¸2
->i1 ||

294 
xs¸1
->
chg1
 !
xs¸2
->chg1 ||

295 
xs¸1
->
chg2
 !
xs¸2
->chg2 ||

296 
	`xdl_mîge_cmp_löes
(
xe1
, 
xs¸1
->
i2
,

297 
xe2
, 
xs¸2
->
i2
,

298 
xs¸1
->
chg2
, 
xµ
->
Êags
)) {

300 
off
 = 
xs¸1
->
i1
 - 
xs¸2
->i1;

301 
ffo
 = 
off
 + 
xs¸1
->
chg1
 - 
xs¸2
->chg1;

303 
i1
 = 
xs¸1
->
i2
;

304 
i2
 = 
xs¸2
->i2;

305 i‡(
off
 > 0)

306 
i1
 -
off
;

308 
i2
 +
off
;

309 
chg1
 = 
xs¸1
->
i2
 + xs¸1->
chg2
 - 
i1
;

310 
chg2
 = 
xs¸2
->
i2
 + xscr2->chg2 - i2;

311 i‡(
ffo
 > 0)

312 
chg2
 +
ffo
;

314 
chg1
 -
ffo
;

315 i‡(
	`xdl_≠≥nd_mîge
(&
c
, 0, 
i1
, 
chg1
, 
i2
, 
chg2
)) {

316 
	`xdl_˛ónup_mîge
(
ch™ges
);

321 
i1
 = 
xs¸1
->i1 + xs¸1->
chg1
;

322 
i2
 = 
xs¸2
->
i1
 + xs¸2->
chg1
;

324 i‡(
i1
 >
i2
)

325 
xs¸2
 = xs¸2->
√xt
;

326 i‡(
i2
 >
i1
)

327 
xs¸1
 = xs¸1->
√xt
;

329 
xs¸1
) {

330 i‡(!
ch™ges
)

331 
ch™ges
 = 
c
;

332 
i1
 = 
xs¸1
->
i2
;

333 
i2
 = 
xs¸1
->
i1
 + 
xe2
->
xdf2
.
ƒec
 - xe2->
xdf1
.nrec;

334 
chg1
 = 
xs¸1
->
chg2
;

335 
chg2
 = 
xs¸1
->
chg1
;

336 i‡(
	`xdl_≠≥nd_mîge
(&
c
, 1, 
i1
, 
chg1
, 
i2
, 
chg2
)) {

337 
	`xdl_˛ónup_mîge
(
ch™ges
);

340 
xs¸1
 = xs¸1->
√xt
;

342 
xs¸2
) {

343 i‡(!
ch™ges
)

344 
ch™ges
 = 
c
;

345 
i1
 = 
xs¸2
->i1 + 
xe1
->
xdf2
.
ƒec
 - xe1->
xdf1
.nrec;

346 
i2
 = 
xs¸2
->i2;

347 
chg1
 = 
xs¸2
->chg1;

348 
chg2
 = 
xs¸2
->chg2;

349 i‡(
	`xdl_≠≥nd_mîge
(&
c
, 2, 
i1
, 
chg1
, 
i2
, 
chg2
)) {

350 
	`xdl_˛ónup_mîge
(
ch™ges
);

353 
xs¸2
 = xs¸2->
√xt
;

355 i‡(!
ch™ges
)

356 
ch™ges
 = 
c
;

358 i‡(
Àvñ
 > 1 && 
	`xdl_ªföe_c⁄Êi˘s
(
xe1
, 
xe2
, 
ch™ges
, 
xµ
) < 0) {

359 
	`xdl_˛ónup_mîge
(
ch™ges
);

363 i‡(
ªsu…
) {

364 
size
 = 
	`xdl_fûl_mîge_buf„r
(
xe1
, 
«me1
, 
xe2
, 
«me2
,

365 
ch™ges
, 
NULL
);

366 
ªsu…
->
±r
 = 
	`xdl_mÆloc
(
size
);

367 i‡(!
ªsu…
->
±r
) {

368 
	`xdl_˛ónup_mîge
(
ch™ges
);

371 
ªsu…
->
size
 = size;

372 
	`xdl_fûl_mîge_buf„r
(
xe1
, 
«me1
, 
xe2
, 
«me2
, 
ch™ges
,

373 
ªsu…
->
±r
);

375  
	`xdl_˛ónup_mîge
(
ch™ges
);

376 
	}
}

378 
	$xdl_mîge
(
mmfûe_t
 *
‹ig
, mmfûe_à*
mf1
, c⁄° *
«me1
,

379 
mmfûe_t
 *
mf2
, c⁄° *
«me2
,

380 
xµ¨am_t
 c⁄° *
xµ
, 
Àvñ
, 
mmbuf„r_t
 *
ªsu…
) {

381 
xdch™ge_t
 *
xs¸1
, *
xs¸2
;

382 
xd„nv_t
 
xe1
, 
xe2
;

383 
°©us
;

385 
ªsu…
->
±r
 = 
NULL
;

386 
ªsu…
->
size
 = 0;

388 i‡(
	`xdl_do_diff
(
‹ig
, 
mf1
, 
xµ
, &
xe1
) < 0 ||

389 
	`xdl_do_diff
(
‹ig
, 
mf2
, 
xµ
, &
xe2
) < 0) {

392 i‡(
	`xdl_ch™ge_com∑˘
(&
xe1
.
xdf1
, &xe1.
xdf2
, 
xµ
->
Êags
) < 0 ||

393 
	`xdl_ch™ge_com∑˘
(&
xe1
.
xdf2
, &xe1.
xdf1
, 
xµ
->
Êags
) < 0 ||

394 
	`xdl_buûd_s¸ùt
(&
xe1
, &
xs¸1
) < 0) {

395 
	`xdl_‰ì_ív
(&
xe1
);

398 i‡(
	`xdl_ch™ge_com∑˘
(&
xe2
.
xdf1
, &xe2.
xdf2
, 
xµ
->
Êags
) < 0 ||

399 
	`xdl_ch™ge_com∑˘
(&
xe2
.
xdf2
, &xe2.
xdf1
, 
xµ
->
Êags
) < 0 ||

400 
	`xdl_buûd_s¸ùt
(&
xe2
, &
xs¸2
) < 0) {

401 
	`xdl_‰ì_ív
(&
xe2
);

404 
°©us
 = 0;

405 i‡(
xs¸1
 || 
xs¸2
) {

406 i‡(!
xs¸1
) {

407 
ªsu…
->
±r
 = 
	`xdl_mÆloc
(
mf2
->
size
);

408 
	`mem˝y
(
ªsu…
->
±r
, 
mf2
->±r, mf2->
size
);

409 
ªsu…
->
size
 = 
mf2
->size;

410 } i‡(!
xs¸2
) {

411 
ªsu…
->
±r
 = 
	`xdl_mÆloc
(
mf1
->
size
);

412 
	`mem˝y
(
ªsu…
->
±r
, 
mf1
->±r, mf1->
size
);

413 
ªsu…
->
size
 = 
mf1
->size;

415 
°©us
 = 
	`xdl_do_mîge
(&
xe1
, 
xs¸1
, 
«me1
,

416 &
xe2
, 
xs¸2
, 
«me2
,

417 
Àvñ
, 
xµ
, 
ªsu…
);

419 
	`xdl_‰ì_s¸ùt
(
xs¸1
);

420 
	`xdl_‰ì_s¸ùt
(
xs¸2
);

422 
	`xdl_‰ì_ív
(&
xe1
);

423 
	`xdl_‰ì_ív
(&
xe2
);

425  
°©us
;

426 
	}
}

	@xdiff/xprepare.c

23 
	~"xö˛ude.h
"

27 
	#XDL_KPDIS_RUN
 4

	)

28 
	#XDL_MAX_EQLIMIT
 1024

	)

32 
	ss_xdl˛ass
 {

33 
s_xdl˛ass
 *
	m√xt
;

34 
	mha
;

35 c⁄° *
	mlöe
;

36 
	msize
;

37 
	midx
;

38 } 
	txdl˛ass_t
;

40 
	ss_xdl˛assifõr
 {

41 
	mhbôs
;

42 
	mhsize
;

43 
xdl˛ass_t
 **
	mrchash
;

44 
cha°‹e_t
 
	mncha
;

45 
	mcou¡
;

46 
	mÊags
;

47 } 
	txdl˛assifõr_t
;

52 
xdl_öô_˛assifõr
(
xdl˛assifõr_t
 *
cf
, 
size
, 
Êags
);

53 
xdl_‰ì_˛assifõr
(
xdl˛assifõr_t
 *
cf
);

54 
xdl_˛assify_ªc‹d
(
xdl˛assifõr_t
 *
cf
, 
xªc‹d_t
 **
rhash
, 
hbôs
,

55 
xªc‹d_t
 *
ªc
);

56 
xdl_¥ï¨e_˘x
(
mmfûe_t
 *
mf
, 
«ªc
, 
xµ¨am_t
 c⁄° *
xµ
,

57 
xdl˛assifõr_t
 *
cf
, 
xdfûe_t
 *
xdf
);

58 
xdl_‰ì_˘x
(
xdfûe_t
 *
xdf
);

59 
xdl_˛ón_mm©ch
(c⁄° *
dis
, 
i
, 
s
, 
e
);

60 
xdl_˛ónup_ªc‹ds
(
xdfûe_t
 *
xdf1
, xdfûe_à*
xdf2
);

61 
xdl_åim_íds
(
xdfûe_t
 *
xdf1
, xdfûe_à*
xdf2
);

62 
xdl_›timize_˘xs
(
xdfûe_t
 *
xdf1
, xdfûe_à*
xdf2
);

67 
	$xdl_öô_˛assifõr
(
xdl˛assifõr_t
 *
cf
, 
size
, 
Êags
) {

68 
i
;

70 
cf
->
Êags
 = flags;

72 
cf
->
hbôs
 = 
	`xdl_hashbôs
((Ë
size
);

73 
cf
->
hsize
 = 1 << cf->
hbôs
;

75 i‡(
	`xdl_cha_öô
(&
cf
->
ncha
, (
xdl˛ass_t
), 
size
 / 4 + 1) < 0) {

79 i‡(!(
cf
->
rchash
 = (
xdl˛ass_t
 **Ë
	`xdl_mÆloc
(cf->
hsize
 * (xdlclass_t *)))) {

81 
	`xdl_cha_‰ì
(&
cf
->
ncha
);

84 
i
 = 0; i < 
cf
->
hsize
; i++)

85 
cf
->
rchash
[
i
] = 
NULL
;

87 
cf
->
cou¡
 = 0;

90 
	}
}

93 
	$xdl_‰ì_˛assifõr
(
xdl˛assifõr_t
 *
cf
) {

95 
	`xdl_‰ì
(
cf
->
rchash
);

96 
	`xdl_cha_‰ì
(&
cf
->
ncha
);

97 
	}
}

100 
	$xdl_˛assify_ªc‹d
(
xdl˛assifõr_t
 *
cf
, 
xªc‹d_t
 **
rhash
, 
hbôs
,

101 
xªc‹d_t
 *
ªc
) {

102 
hi
;

103 c⁄° *
löe
;

104 
xdl˛ass_t
 *
r¸ec
;

106 
löe
 = 
ªc
->
±r
;

107 
hi
 = (Ë
	`XDL_HASHLONG
(
ªc
->
ha
, 
cf
->
hbôs
);

108 
r¸ec
 = 
cf
->
rchash
[
hi
];Ñ¸ec;Ñ¸e¯r¸ec->
√xt
)

109 i‡(
r¸ec
->
ha
 =
ªc
->ha &&

110 
	`xdl_ªcm©ch
(
r¸ec
->
löe
,Ñ¸ec->
size
,

111 
ªc
->
±r
,Ñec->
size
, 
cf
->
Êags
))

114 i‡(!
r¸ec
) {

115 i‡(!(
r¸ec
 = 
	`xdl_cha_Æloc
(&
cf
->
ncha
))) {

119 
r¸ec
->
idx
 = 
cf
->
cou¡
++;

120 
r¸ec
->
löe
 =Üine;

121 
r¸ec
->
size
 = 
ªc
->size;

122 
r¸ec
->
ha
 = 
ªc
->ha;

123 
r¸ec
->
√xt
 = 
cf
->
rchash
[
hi
];

124 
cf
->
rchash
[
hi
] = 
r¸ec
;

127 
ªc
->
ha
 = (Ë
r¸ec
->
idx
;

129 
hi
 = (Ë
	`XDL_HASHLONG
(
ªc
->
ha
, 
hbôs
);

130 
ªc
->
√xt
 = 
rhash
[
hi
];

131 
rhash
[
hi
] = 
ªc
;

134 
	}
}

137 
	$xdl_¥ï¨e_˘x
(
mmfûe_t
 *
mf
, 
«ªc
, 
xµ¨am_t
 c⁄° *
xµ
,

138 
xdl˛assifõr_t
 *
cf
, 
xdfûe_t
 *
xdf
) {

139 
hbôs
;

140 
i
, 
ƒec
, 
hsize
, 
bsize
;

141 
hav
;

142 c⁄° *
blk
, *
cur
, *
t›
, *
¥ev
;

143 
xªc‹d_t
 *
¸ec
;

144 
xªc‹d_t
 **
ªcs
, **
ºecs
;

145 
xªc‹d_t
 **
rhash
;

146 *
ha
;

147 *
rchg
;

148 *
rödex
;

150 i‡(
	`xdl_cha_öô
(&
xdf
->
rcha
, (
xªc‹d_t
), 
«ªc
 / 4 + 1) < 0) {

154 i‡(!(
ªcs
 = (
xªc‹d_t
 **Ë
	`xdl_mÆloc
(
«ªc
 * (xrecord_t *)))) {

156 
	`xdl_cha_‰ì
(&
xdf
->
rcha
);

160 
hbôs
 = 
	`xdl_hashbôs
((Ë
«ªc
);

161 
hsize
 = 1 << 
hbôs
;

162 i‡(!(
rhash
 = (
xªc‹d_t
 **Ë
	`xdl_mÆloc
(
hsize
 * (xrecord_t *)))) {

164 
	`xdl_‰ì
(
ªcs
);

165 
	`xdl_cha_‰ì
(&
xdf
->
rcha
);

168 
i
 = 0; i < 
hsize
; i++)

169 
rhash
[
i
] = 
NULL
;

171 
ƒec
 = 0;

172 i‡((
cur
 = 
blk
 = 
	`xdl_mmfûe_fú°
(
mf
, &
bsize
)Ë!
NULL
) {

173 
t›
 = 
blk
 + 
bsize
;;) {

174 i‡(
cur
 >
t›
) {

175 i‡(!(
cur
 = 
blk
 = 
	`xdl_mmfûe_√xt
(
mf
, &
bsize
)))

177 
t›
 = 
blk
 + 
bsize
;

179 
¥ev
 = 
cur
;

180 
hav
 = 
	`xdl_hash_ªc‹d
(&
cur
, 
t›
, 
xµ
->
Êags
);

181 i‡(
ƒec
 >
«ªc
) {

182 
«ªc
 *= 2;

183 i‡(!(
ºecs
 = (
xªc‹d_t
 **Ë
	`xdl_ªÆloc
(
ªcs
, 
«ªc
 * (xrecord_t *)))) {

185 
	`xdl_‰ì
(
rhash
);

186 
	`xdl_‰ì
(
ªcs
);

187 
	`xdl_cha_‰ì
(&
xdf
->
rcha
);

190 
ªcs
 = 
ºecs
;

192 i‡(!(
¸ec
 = 
	`xdl_cha_Æloc
(&
xdf
->
rcha
))) {

194 
	`xdl_‰ì
(
rhash
);

195 
	`xdl_‰ì
(
ªcs
);

196 
	`xdl_cha_‰ì
(&
xdf
->
rcha
);

199 
¸ec
->
±r
 = 
¥ev
;

200 
¸ec
->
size
 = (Ë(
cur
 - 
¥ev
);

201 
¸ec
->
ha
 = 
hav
;

202 
ªcs
[
ƒec
++] = 
¸ec
;

204 i‡(
	`xdl_˛assify_ªc‹d
(
cf
, 
rhash
, 
hbôs
, 
¸ec
) < 0) {

206 
	`xdl_‰ì
(
rhash
);

207 
	`xdl_‰ì
(
ªcs
);

208 
	`xdl_cha_‰ì
(&
xdf
->
rcha
);

214 i‡(!(
rchg
 = (*Ë
	`xdl_mÆloc
((
ƒec
 + 2) * ()))) {

216 
	`xdl_‰ì
(
rhash
);

217 
	`xdl_‰ì
(
ªcs
);

218 
	`xdl_cha_‰ì
(&
xdf
->
rcha
);

221 
	`mem£t
(
rchg
, 0, (
ƒec
 + 2) * ());

223 i‡(!(
rödex
 = (*Ë
	`xdl_mÆloc
((
ƒec
 + 1) * ()))) {

225 
	`xdl_‰ì
(
rchg
);

226 
	`xdl_‰ì
(
rhash
);

227 
	`xdl_‰ì
(
ªcs
);

228 
	`xdl_cha_‰ì
(&
xdf
->
rcha
);

231 i‡(!(
ha
 = (*Ë
	`xdl_mÆloc
((
ƒec
 + 1) * ()))) {

233 
	`xdl_‰ì
(
rödex
);

234 
	`xdl_‰ì
(
rchg
);

235 
	`xdl_‰ì
(
rhash
);

236 
	`xdl_‰ì
(
ªcs
);

237 
	`xdl_cha_‰ì
(&
xdf
->
rcha
);

241 
xdf
->
ƒec
 =Çrec;

242 
xdf
->
ªcs
 =Ñecs;

243 
xdf
->
hbôs
 = hbits;

244 
xdf
->
rhash
 =Ñhash;

245 
xdf
->
rchg
 =Ñchg + 1;

246 
xdf
->
rödex
 =Ñindex;

247 
xdf
->
ƒeff
 = 0;

248 
xdf
->
ha
 = ha;

249 
xdf
->
d°¨t
 = 0;

250 
xdf
->
díd
 = 
ƒec
 - 1;

253 
	}
}

256 
	$xdl_‰ì_˘x
(
xdfûe_t
 *
xdf
) {

258 
	`xdl_‰ì
(
xdf
->
rhash
);

259 
	`xdl_‰ì
(
xdf
->
rödex
);

260 
	`xdl_‰ì
(
xdf
->
rchg
 - 1);

261 
	`xdl_‰ì
(
xdf
->
ha
);

262 
	`xdl_‰ì
(
xdf
->
ªcs
);

263 
	`xdl_cha_‰ì
(&
xdf
->
rcha
);

264 
	}
}

267 
	$xdl_¥ï¨e_ív
(
mmfûe_t
 *
mf1
, mmfûe_à*
mf2
, 
xµ¨am_t
 c⁄° *
xµ
,

268 
xd„nv_t
 *
xe
) {

269 
íl1
, 
íl2
;

270 
xdl˛assifõr_t
 
cf
;

272 
íl1
 = 
	`xdl_guess_löes
(
mf1
) + 1;

273 
íl2
 = 
	`xdl_guess_löes
(
mf2
) + 1;

275 i‡(
	`xdl_öô_˛assifõr
(&
cf
, 
íl1
 + 
íl2
 + 1, 
xµ
->
Êags
) < 0) {

280 i‡(
	`xdl_¥ï¨e_˘x
(
mf1
, 
íl1
, 
xµ
, &
cf
, &
xe
->
xdf1
) < 0) {

282 
	`xdl_‰ì_˛assifõr
(&
cf
);

285 i‡(
	`xdl_¥ï¨e_˘x
(
mf2
, 
íl2
, 
xµ
, &
cf
, &
xe
->
xdf2
) < 0) {

287 
	`xdl_‰ì_˘x
(&
xe
->
xdf1
);

288 
	`xdl_‰ì_˛assifõr
(&
cf
);

292 
	`xdl_‰ì_˛assifõr
(&
cf
);

294 i‡(
	`xdl_›timize_˘xs
(&
xe
->
xdf1
, &xe->
xdf2
) < 0) {

296 
	`xdl_‰ì_˘x
(&
xe
->
xdf2
);

297 
	`xdl_‰ì_˘x
(&
xe
->
xdf1
);

302 
	}
}

305 
	$xdl_‰ì_ív
(
xd„nv_t
 *
xe
) {

307 
	`xdl_‰ì_˘x
(&
xe
->
xdf2
);

308 
	`xdl_‰ì_˘x
(&
xe
->
xdf1
);

309 
	}
}

312 
	$xdl_˛ón_mm©ch
(c⁄° *
dis
, 
i
, 
s
, 
e
) {

313 
r
, 
rdis0
, 
Ωdis0
, 
rdis1
, 
Ωdis1
;

321 
r
 = 1, 
rdis0
 = 0, 
Ωdis0
 = 1; (
i
 -ÑË>
s
;Ñ++) {

322 i‡(!
dis
[
i
 - 
r
])

323 
rdis0
++;

324 i‡(
dis
[
i
 - 
r
] == 2)

325 
Ωdis0
++;

335 i‡(
rdis0
 == 0)

337 
r
 = 1, 
rdis1
 = 0, 
Ωdis1
 = 1; (
i
 +ÑË<
e
;Ñ++) {

338 i‡(!
dis
[
i
 + 
r
])

339 
rdis1
++;

340 i‡(
dis
[
i
 + 
r
] == 2)

341 
Ωdis1
++;

349 i‡(
rdis1
 == 0)

351 
rdis1
 +
rdis0
;

352 
Ωdis1
 +
Ωdis0
;

354  
Ωdis1
 * 
XDL_KPDIS_RUN
 < (Ωdis1 + 
rdis1
);

355 
	}
}

363 
	$xdl_˛ónup_ªc‹ds
(
xdfûe_t
 *
xdf1
, xdfûe_à*
xdf2
) {

364 
i
, 
nm
, 
rhi
, 
ƒeff
, 
mlim
;

365 
hav
;

366 
xªc‹d_t
 **
ªcs
;

367 
xªc‹d_t
 *
ªc
;

368 *
dis
, *
dis1
, *
dis2
;

370 i‡(!(
dis
 = (*Ë
	`xdl_mÆloc
(
xdf1
->
ƒec
 + 
xdf2
->nrec + 2))) {

374 
	`mem£t
(
dis
, 0, 
xdf1
->
ƒec
 + 
xdf2
->nrec + 2);

375 
dis1
 = 
dis
;

376 
dis2
 = 
dis1
 + 
xdf1
->
ƒec
 + 1;

378 i‡((
mlim
 = 
	`xdl_bogosqπ
(
xdf1
->
ƒec
)Ë> 
XDL_MAX_EQLIMIT
)

379 
mlim
 = 
XDL_MAX_EQLIMIT
;

380 
i
 = 
xdf1
->
d°¨t
, 
ªcs
 = &xdf1->ªcs[xdf1->d°¨t]; i <xdf1->
díd
; i++,Ñecs++) {

381 
hav
 = (*
ªcs
)->
ha
;

382 
rhi
 = (Ë
	`XDL_HASHLONG
(
hav
, 
xdf2
->
hbôs
);

383 
nm
 = 0, 
ªc
 = 
xdf2
->
rhash
[
rhi
];Ñec;Ñe¯ªc->
√xt
)

384 i‡(
ªc
->
ha
 =
hav
 && ++
nm
 =
mlim
)

386 
dis1
[
i
] = (
nm
 =0Ë? 0: (nm >
mlim
) ? 2: 1;

389 i‡((
mlim
 = 
	`xdl_bogosqπ
(
xdf2
->
ƒec
)Ë> 
XDL_MAX_EQLIMIT
)

390 
mlim
 = 
XDL_MAX_EQLIMIT
;

391 
i
 = 
xdf2
->
d°¨t
, 
ªcs
 = &xdf2->ªcs[xdf2->d°¨t]; i <xdf2->
díd
; i++,Ñecs++) {

392 
hav
 = (*
ªcs
)->
ha
;

393 
rhi
 = (Ë
	`XDL_HASHLONG
(
hav
, 
xdf1
->
hbôs
);

394 
nm
 = 0, 
ªc
 = 
xdf1
->
rhash
[
rhi
];Ñec;Ñe¯ªc->
√xt
)

395 i‡(
ªc
->
ha
 =
hav
 && ++
nm
 =
mlim
)

397 
dis2
[
i
] = (
nm
 =0Ë? 0: (nm >
mlim
) ? 2: 1;

400 
ƒeff
 = 0, 
i
 = 
xdf1
->
d°¨t
, 
ªcs
 = &xdf1->recs[xdf1->dstart];

401 
i
 <
xdf1
->
díd
; i++, 
ªcs
++) {

402 i‡(
dis1
[
i
] == 1 ||

403 (
dis1
[
i
] =2 && !
	`xdl_˛ón_mm©ch
(dis1, i, 
xdf1
->
d°¨t
, xdf1->
díd
))) {

404 
xdf1
->
rödex
[
ƒeff
] = 
i
;

405 
xdf1
->
ha
[
ƒeff
] = (*
ªcs
)->ha;

406 
ƒeff
++;

408 
xdf1
->
rchg
[
i
] = 1;

410 
xdf1
->
ƒeff
 =Çreff;

412 
ƒeff
 = 0, 
i
 = 
xdf2
->
d°¨t
, 
ªcs
 = &xdf2->recs[xdf2->dstart];

413 
i
 <
xdf2
->
díd
; i++, 
ªcs
++) {

414 i‡(
dis2
[
i
] == 1 ||

415 (
dis2
[
i
] =2 && !
	`xdl_˛ón_mm©ch
(dis2, i, 
xdf2
->
d°¨t
, xdf2->
díd
))) {

416 
xdf2
->
rödex
[
ƒeff
] = 
i
;

417 
xdf2
->
ha
[
ƒeff
] = (*
ªcs
)->ha;

418 
ƒeff
++;

420 
xdf2
->
rchg
[
i
] = 1;

422 
xdf2
->
ƒeff
 =Çreff;

424 
	`xdl_‰ì
(
dis
);

427 
	}
}

433 
	$xdl_åim_íds
(
xdfûe_t
 *
xdf1
, xdfûe_à*
xdf2
) {

434 
i
, 
lim
;

435 
xªc‹d_t
 **
ªcs1
, **
ªcs2
;

437 
ªcs1
 = 
xdf1
->
ªcs
;

438 
ªcs2
 = 
xdf2
->
ªcs
;

439 
i
 = 0, 
lim
 = 
	`XDL_MIN
(
xdf1
->
ƒec
, 
xdf2
->nrec); i <Üim;

440 
i
++, 
ªcs1
++, 
ªcs2
++)

441 i‡((*
ªcs1
)->
ha
 !(*
ªcs2
)->ha)

444 
xdf1
->
d°¨t
 = 
xdf2
->d°¨à
i
;

446 
ªcs1
 = 
xdf1
->
ªcs
 + xdf1->
ƒec
 - 1;

447 
ªcs2
 = 
xdf2
->
ªcs
 + xdf2->
ƒec
 - 1;

448 
lim
 -
i
, i = 0; i <Üim; i++, 
ªcs1
--, 
ªcs2
--)

449 i‡((*
ªcs1
)->
ha
 !(*
ªcs2
)->ha)

452 
xdf1
->
díd
 = xdf1->
ƒec
 - 
i
 - 1;

453 
xdf2
->
díd
 = xdf2->
ƒec
 - 
i
 - 1;

456 
	}
}

459 
	$xdl_›timize_˘xs
(
xdfûe_t
 *
xdf1
, xdfûe_à*
xdf2
) {

461 i‡(
	`xdl_åim_íds
(
xdf1
, 
xdf2
) < 0 ||

462 
	`xdl_˛ónup_ªc‹ds
(
xdf1
, 
xdf2
) < 0) {

468 
	}
}

	@xdiff/xprepare.h

23 #i‡!
deföed
(
XPREPARE_H
)

24 
	#XPREPARE_H


	)

28 
xdl_¥ï¨e_ív
(
mmfûe_t
 *
mf1
, mmfûe_à*
mf2
, 
xµ¨am_t
 c⁄° *
xµ
,

29 
xd„nv_t
 *
xe
);

30 
xdl_‰ì_ív
(
xd„nv_t
 *
xe
);

	@xdiff/xtypes.h

23 #i‡!
deföed
(
XTYPES_H
)

24 
	#XTYPES_H


	)

28 
	ss_ch™ode
 {

29 
s_ch™ode
 *
	m√xt
;

30 
	micuº
;

31 } 
	tch™ode_t
;

33 
	ss_cha°‹e
 {

34 
ch™ode_t
 *
	mhód
, *
	mèû
;

35 
	misize
, 
	mnsize
;

36 
ch™ode_t
 *
	m™cur
;

37 
ch™ode_t
 *
	m¢cur
;

38 
	mscuº
;

39 } 
	tcha°‹e_t
;

41 
	ss_xªc‹d
 {

42 
s_xªc‹d
 *
	m√xt
;

43 c⁄° *
	m±r
;

44 
	msize
;

45 
	mha
;

46 } 
	txªc‹d_t
;

48 
	ss_xdfûe
 {

49 
cha°‹e_t
 
	mrcha
;

50 
	mƒec
;

51 
	mhbôs
;

52 
xªc‹d_t
 **
	mrhash
;

53 
	md°¨t
, 
	mdíd
;

54 
xªc‹d_t
 **
	mªcs
;

55 *
	mrchg
;

56 *
	mrödex
;

57 
	mƒeff
;

58 *
	mha
;

59 } 
	txdfûe_t
;

61 
	ss_xd„nv
 {

62 
xdfûe_t
 
	mxdf1
, 
	mxdf2
;

63 } 
	txd„nv_t
;

	@xdiff/xutils.c

23 
	~"xö˛ude.h
"

27 
	#XDL_GUESS_NLINES
 256

	)

32 
	$xdl_bogosqπ
(
n
) {

33 
i
;

38 
i
 = 1; 
n
 > 0;Ç >>= 2)

39 
i
 <<= 1;

41  
i
;

42 
	}
}

45 
	$xdl_emô_dif‰ec
(c⁄° *
ªc
, 
size
, c⁄° *
¥e
, 
psize
,

46 
xdemôcb_t
 *
ecb
) {

47 
i
 = 2;

48 
mmbuf„r_t
 
mb
[3];

50 
mb
[0].
±r
 = (*Ë
¥e
;

51 
mb
[0].
size
 = 
psize
;

52 
mb
[1].
±r
 = (*Ë
ªc
;

53 
mb
[1].
size
 = size;

54 i‡(
size
 > 0 && 
ªc
[size - 1] != '\n') {

55 
mb
[2].
±r
 = (*) "\n\\ NoÇewlineátÉnd of file\n";

56 
mb
[2].
size
 = 
	`°æí
(mb[2].
±r
);

57 
i
++;

59 i‡(
ecb
->
	`outf
”cb->
¥iv
, 
mb
, 
i
) < 0) {

65 
	}
}

67 *
	$xdl_mmfûe_fú°
(
mmfûe_t
 *
mmf
, *
size
)

69 *
size
 = 
mmf
->size;

70  
mmf
->
±r
;

71 
	}
}

74 *
	$xdl_mmfûe_√xt
(
mmfûe_t
 *
mmf
, *
size
)

76  
NULL
;

77 
	}
}

80 
	$xdl_mmfûe_size
(
mmfûe_t
 *
mmf
)

82  
mmf
->
size
;

83 
	}
}

86 
	$xdl_cha_öô
(
cha°‹e_t
 *
cha
, 
isize
, 
icou¡
) {

88 
cha
->
hód
 = cha->
èû
 = 
NULL
;

89 
cha
->
isize
 = isize;

90 
cha
->
nsize
 = 
icou¡
 * 
isize
;

91 
cha
->
™cur
 = cha->
¢cur
 = 
NULL
;

92 
cha
->
scuº
 = 0;

95 
	}
}

98 
	$xdl_cha_‰ì
(
cha°‹e_t
 *
cha
) {

99 
ch™ode_t
 *
cur
, *
tmp
;

101 
cur
 = 
cha
->
hód
; (
tmp
 = curË!
NULL
;) {

102 
cur
 = cur->
√xt
;

103 
	`xdl_‰ì
(
tmp
);

105 
	}
}

108 *
	$xdl_cha_Æloc
(
cha°‹e_t
 *
cha
) {

109 
ch™ode_t
 *
™cur
;

110 *
d©a
;

112 i‡(!(
™cur
 = 
cha
->™curË||áncur->
icuº
 =cha->
nsize
) {

113 i‡(!(
™cur
 = (
ch™ode_t
 *Ë
	`xdl_mÆloc
((ch™ode_tË+ 
cha
->
nsize
))) {

115  
NULL
;

117 
™cur
->
icuº
 = 0;

118 
™cur
->
√xt
 = 
NULL
;

119 i‡(
cha
->
èû
)

120 
cha
->
èû
->
√xt
 = 
™cur
;

121 i‡(!
cha
->
hód
)

122 
cha
->
hód
 = 
™cur
;

123 
cha
->
èû
 = 
™cur
;

124 
cha
->
™cur
 =áncur;

127 
d©a
 = (*Ë
™cur
 + (
ch™ode_t
Ë+áncur->
icuº
;

128 
™cur
->
icuº
 +
cha
->
isize
;

130  
d©a
;

131 
	}
}

134 *
	$xdl_cha_fú°
(
cha°‹e_t
 *
cha
) {

135 
ch™ode_t
 *
¢cur
;

137 i‡(!(
cha
->
¢cur
 = sncu∏cha->
hód
))

138  
NULL
;

140 
cha
->
scuº
 = 0;

142  (*Ë
¢cur
 + (
ch™ode_t
Ë+ 
cha
->
scuº
;

143 
	}
}

146 *
	$xdl_cha_√xt
(
cha°‹e_t
 *
cha
) {

147 
ch™ode_t
 *
¢cur
;

149 i‡(!(
¢cur
 = 
cha
->sncur))

150  
NULL
;

151 
cha
->
scuº
 +cha->
isize
;

152 i‡(
cha
->
scuº
 =
¢cur
->
icuº
) {

153 i‡(!(
¢cur
 = 
cha
->¢cu∏¢cur->
√xt
))

154  
NULL
;

155 
cha
->
scuº
 = 0;

158  (*Ë
¢cur
 + (
ch™ode_t
Ë+ 
cha
->
scuº
;

159 
	}
}

162 
	$xdl_guess_löes
(
mmfûe_t
 *
mf
) {

163 
∆
 = 0, 
size
, 
tsize
 = 0;

164 c⁄° *
d©a
, *
cur
, *
t›
;

166 i‡((
cur
 = 
d©a
 = 
	`xdl_mmfûe_fú°
(
mf
, &
size
)Ë!
NULL
) {

167 
t›
 = 
d©a
 + 
size
; 
∆
 < 
XDL_GUESS_NLINES
;) {

168 i‡(
cur
 >
t›
) {

169 
tsize
 +(Ë(
cur
 - 
d©a
);

170 i‡(!(
cur
 = 
d©a
 = 
	`xdl_mmfûe_√xt
(
mf
, &
size
)))

172 
t›
 = 
d©a
 + 
size
;

174 
∆
++;

175 i‡(!(
cur
 = 
	`memchr
(cur, '\n', 
t›
 - cur)))

176 
cur
 = 
t›
;

178 
cur
++;

180 
tsize
 +(Ë(
cur
 - 
d©a
);

183 i‡(
∆
 && 
tsize
)

184 
∆
 = 
	`xdl_mmfûe_size
(
mf
Ë/ (
tsize
 /Çl);

186  
∆
 + 1;

187 
	}
}

189 
	$xdl_ªcm©ch
(c⁄° *
l1
, 
s1
, c⁄° *
l2
, 
s2
, 
Êags
)

191 
i1
, 
i2
;

193 i‡(
Êags
 & 
XDF_IGNORE_WHITESPACE
) {

194 
i1
 = 
i2
 = 0; i1 < 
s1
 && i2 < 
s2
; ) {

195 i‡(
	`is•a˚
(
l1
[
i1
]))

196 
	`is•a˚
(
l1
[
i1
]Ë&& i1 < 
s1
)

197 
i1
++;

198 i‡(
	`is•a˚
(
l2
[
i2
]))

199 
	`is•a˚
(
l2
[
i2
]Ë&& i2 < 
s2
)

200 
i2
++;

201 i‡(
i1
 < 
s1
 && 
i2
 < 
s2
 && 
l1
[i1++] !
l2
[i2++])

204  (
i1
 >
s1
 && 
i2
 >
s2
);

205 } i‡(
Êags
 & 
XDF_IGNORE_WHITESPACE_CHANGE
) {

206 
i1
 = 
i2
 = 0; i1 < 
s1
 && i2 < 
s2
; ) {

207 i‡(
	`is•a˚
(
l1
[
i1
])) {

208 i‡(!
	`is•a˚
(
l2
[
i2
]))

210 
	`is•a˚
(
l1
[
i1
]Ë&& i1 < 
s1
)

211 
i1
++;

212 
	`is•a˚
(
l2
[
i2
]Ë&& i2 < 
s2
)

213 
i2
++;

214 } i‡(
l1
[
i1
++] !
l2
[
i2
++])

217  (
i1
 >
s1
 && 
i2
 >
s2
);

219  
s1
 =
s2
 && !
	`memcmp
(
l1
, 
l2
, s1);

222 
	}
}

224 
	$xdl_hash_ªc‹d
(c⁄° **
d©a
, c⁄° *
t›
, 
Êags
) {

225 
ha
 = 5381;

226 c⁄° *
±r
 = *
d©a
;

228 ; 
±r
 < 
t›
 && *ptr != '\n';Ötr++) {

229 i‡(
	`is•a˚
(*
±r
Ë&& (
Êags
 & 
XDF_WHITESPACE_FLAGS
)) {

230 
±r
 + 1 < 
t›
 && 
	`is•a˚
(ptr[1])

231 && 
±r
[1] != '\n')

232 
±r
++;

233 i‡(
Êags
 & 
XDF_IGNORE_WHITESPACE_CHANGE


234 && 
±r
[1] != '\n') {

235 
ha
 += (ha << 5);

236 
ha
 ^= () ' ';

240 
ha
 += (ha << 5);

241 
ha
 ^(Ë*
±r
;

243 *
d©a
 = 
±r
 < 
t›
 ?Ötr + 1:Ötr;

245  
ha
;

246 
	}
}

249 
	$xdl_hashbôs
(
size
) {

250 
vÆ
 = 1, 
bôs
 = 0;

252 ; 
vÆ
 < 
size
 && 
bôs
 < 
CHAR_BIT
 * (); val <<= 1, bits++);

253  
bôs
 ? bits: 1;

254 
	}
}

257 
	$xdl_num_out
(*
out
, 
vÆ
) {

258 *
±r
, *
°r
 = 
out
;

259 
buf
[32];

261 
±r
 = 
buf
 + (buf) - 1;

262 *
±r
 = '\0';

263 i‡(
vÆ
 < 0) {

264 *--
±r
 = '-';

265 
vÆ
 = -val;

267 ; 
vÆ
 && 
±r
 > 
buf
; val /= 10)

268 *--
±r
 = "0123456789"[
vÆ
 % 10];

269 i‡(*
±r
)

270 ; *
±r
;Öå++, 
°r
++)

271 *
°r
 = *
±r
;

273 *
°r
++ = '0';

274 *
°r
 = '\0';

276  
°r
 - 
out
;

277 
	}
}

280 
	$xdl_©ﬁ
(c⁄° *
°r
, c⁄° **
√xt
) {

281 
vÆ
, 
ba£
;

282 c⁄° *
t›
;

284 
t›
 = 
°r
; 
	`XDL_ISDIGIT
(*top);Åop++);

285 i‡(
√xt
)

286 *
√xt
 = 
t›
;

287 
vÆ
 = 0, 
ba£
 = 1, 
t›
--;Å› >
°r
;Åop--, base *= 10)

288 
vÆ
 +
ba£
 * ()(*
t›
 - '0');

289  
vÆ
;

290 
	}
}

293 
	$xdl_emô_hunk_hdr
(
s1
, 
c1
, 
s2
, 
c2
,

294 c⁄° *
func
, 
fun˛í
, 
xdemôcb_t
 *
ecb
) {

295 
nb
 = 0;

296 
mmbuf„r_t
 
mb
;

297 
buf
[128];

299 
	`mem˝y
(
buf
, "@@ -", 4);

300 
nb
 += 4;

302 
nb
 +
	`xdl_num_out
(
buf
 +Çb, 
c1
 ? 
s1
: s1 - 1);

304 i‡(
c1
 != 1) {

305 
	`mem˝y
(
buf
 + 
nb
, ",", 1);

306 
nb
 += 1;

308 
nb
 +
	`xdl_num_out
(
buf
 +Çb, 
c1
);

311 
	`mem˝y
(
buf
 + 
nb
, " +", 2);

312 
nb
 += 2;

314 
nb
 +
	`xdl_num_out
(
buf
 +Çb, 
c2
 ? 
s2
: s2 - 1);

316 i‡(
c2
 != 1) {

317 
	`mem˝y
(
buf
 + 
nb
, ",", 1);

318 
nb
 += 1;

320 
nb
 +
	`xdl_num_out
(
buf
 +Çb, 
c2
);

323 
	`mem˝y
(
buf
 + 
nb
, " @@", 3);

324 
nb
 += 3;

325 i‡(
func
 && 
fun˛í
) {

326 
buf
[
nb
++] = ' ';

327 i‡(
fun˛í
 > (
buf
Ë- 
nb
 - 1)

328 
fun˛í
 = (
buf
Ë- 
nb
 - 1;

329 
	`mem˝y
(
buf
 + 
nb
, 
func
, 
fun˛í
);

330 
nb
 +
fun˛í
;

332 
buf
[
nb
++] = '\n';

334 
mb
.
±r
 = 
buf
;

335 
mb
.
size
 = 
nb
;

336 i‡(
ecb
->
	`outf
”cb->
¥iv
, &
mb
, 1) < 0)

340 
	}
}

	@xdiff/xutils.h

23 #i‡!
deföed
(
XUTILS_H
)

24 
	#XUTILS_H


	)

28 
xdl_bogosqπ
(
n
);

29 
xdl_emô_dif‰ec
(c⁄° *
ªc
, 
size
, c⁄° *
¥e
, 
psize
,

30 
xdemôcb_t
 *
ecb
);

31 
xdl_cha_öô
(
cha°‹e_t
 *
cha
, 
isize
, 
icou¡
);

32 
xdl_cha_‰ì
(
cha°‹e_t
 *
cha
);

33 *
xdl_cha_Æloc
(
cha°‹e_t
 *
cha
);

34 *
xdl_cha_fú°
(
cha°‹e_t
 *
cha
);

35 *
xdl_cha_√xt
(
cha°‹e_t
 *
cha
);

36 
xdl_guess_löes
(
mmfûe_t
 *
mf
);

37 
xdl_ªcm©ch
(c⁄° *
l1
, 
s1
, c⁄° *
l2
, 
s2
, 
Êags
);

38 
xdl_hash_ªc‹d
(c⁄° **
d©a
, c⁄° *
t›
, 
Êags
);

39 
xdl_hashbôs
(
size
);

40 
xdl_num_out
(*
out
, 
vÆ
);

41 
xdl_©ﬁ
(c⁄° *
°r
, c⁄° **
√xt
);

42 
xdl_emô_hunk_hdr
(
s1
, 
c1
, 
s2
, 
c2
,

43 c⁄° *
func
, 
fun˛í
, 
xdemôcb_t
 *
ecb
);

	@/usr/include/arpa/inet.h

18 #i‚de‡
_ARPA_INET_H


19 
	#_ARPA_INET_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<√töë/ö.h
>

25 #i‚de‡
__sockÀn_t_deföed


26 
__sockÀn_t
 
	tsockÀn_t
;

27 
	#__sockÀn_t_deföed


	)

30 
__BEGIN_DECLS


34 
ö_addr_t
 
	$öë_addr
 (c⁄° *
__˝
Ë
__THROW
;

37 
ö_addr_t
 
	$öë_ aof
 (
ö_addr
 
__ö
Ë
__THROW
;

41 
ö_addr
 
	$öë_makóddr
 (
ö_addr_t
 
__√t
, in_addr_à
__ho°
)

42 
__THROW
;

45 
ö_addr_t
 
	$öë_√tof
 (
ö_addr
 
__ö
Ë
__THROW
;

49 
ö_addr_t
 
	$öë_√tw‹k
 (c⁄° *
__˝
Ë
__THROW
;

53 *
	$öë_¡ﬂ
 (
ö_addr
 
__ö
Ë
__THROW
;

58 
	$öë_±⁄
 (
__af
, c⁄° *
__ª°ri˘
 
__˝
,

59 *
__ª°ri˘
 
__buf
Ë
__THROW
;

64 c⁄° *
	$öë_¡›
 (
__af
, c⁄° *
__ª°ri˘
 
__˝
,

65 *
__ª°ri˘
 
__buf
, 
sockÀn_t
 
__Àn
)

66 
__THROW
;

70 #ifde‡
__USE_MISC


73 
	$öë_©⁄
 (c⁄° *
__˝
, 
ö_addr
 *
__öp
Ë
__THROW
;

77 *
	$öë_√è
 (
ö_addr_t
 
__√t
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW


78 
	`__©åibuã_dïªˇãd_msg__
 ("Use inet_ntop instead");

83 *
	$öë_√t_¡›
 (
__af
, c⁄° *
__˝
, 
__bôs
,

84 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

89 
	$öë_√t_±⁄
 (
__af
, c⁄° *
__˝
,

90 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

95 
	$öë_nßp_addr
 (c⁄° *
__˝
,

96 *
__buf
, 
__Àn
Ë
__THROW
;

100 *
	$öë_nßp_¡ﬂ
 (
__Àn
, c⁄° *
__˝
,

101 *
__buf
Ë
__THROW
;

104 
__END_DECLS


	@/usr/include/assert.h

22 #ifdef 
_ASSERT_H


24 #unde‡
_ASSERT_H


25 #unde‡
as£π


26 #unde‡
__ASSERT_VOID_CAST


28 #ifdef 
__USE_GNU


29 #unde‡
as£π_≥º‹


34 
	#_ASSERT_H
 1

	)

35 
	~<„©uªs.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

38 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

40 
	#__ASSERT_VOID_CAST
 ()

	)

48 #ifdef 
NDEBUG


50 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

58 #ifdef 
__USE_GNU


59 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

64 #i‚de‡
_ASSERT_H_DECLS


65 
	#_ASSERT_H_DECLS


	)

66 
__BEGIN_DECLS


69 
	$__as£π_Áû
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
,

70 
__löe
, c⁄° *
__fun˘i⁄
)

71 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

74 
	$__as£π_≥º‹_Áû
 (
__î∫um
, c⁄° *
__fûe
,

75 
__löe
, c⁄° *
__fun˘i⁄
)

76 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

81 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

82 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_DECLS


91 #i‡
deföed
 
__˝lu•lus


92 
	#as£π
(
ex¥
) \

93 (
°©ic_ˇ°
 <
boﬁ
> (
ex¥
) \

95 : 
	`__as£π_Áû
 (#ex¥, 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

96 #ñi‡!
deföed
 
__GNUC__
 || deföed 
__STRICT_ANSI__


97 
	#as£π
(
ex¥
) \

98 ((
ex¥
) \

99 ? 
	`__ASSERT_VOID_CAST
 (0) \

100 : 
	`__as£π_Áû
 (#ex¥, 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

107 
	#as£π
(
ex¥
) \

108 ((Ë ((
ex¥
Ë? 1 : 0), 
	`__exãnsi⁄__
 ({ \

109 i‡(
ex¥
) \

112 
	`__as£π_Áû
 (#ex¥, 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
); \

113 
	}
}))

	)

116 #ifdef 
__USE_GNU


117 
	#as£π_≥º‹
(
î∫um
) \

118 (!(
î∫um
) \

119 ? 
	`__ASSERT_VOID_CAST
 (0) \

120 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

128 #i‡
deföed
 
__˝lu•lus
 ? 
__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

129 
	#__ASSERT_FUNCTION
 
__exãnsi⁄__
 
__PRETTY_FUNCTION__


	)

131 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

132 
	#__ASSERT_FUNCTION
 
__func__


	)

134 
	#__ASSERT_FUNCTION
 ((c⁄° *Ë0)

	)

141 #i‡
deföed
 
__USE_ISOC11
 && !deföed 
__˝lu•lus


142 #unde‡
°©ic_as£π


143 
	#°©ic_as£π
 
_Sètic_as£π


	)

	@/usr/include/ctype.h

22 #i‚def 
_CTYPE_H


23 
	#_CTYPE_H
 1

	)

25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	g__BEGIN_DECLS


30 #i‚de‡
_ISbô


39 
	~<bôs/ídün.h
>

40 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


41 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

43 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

48 
	m_ISuµî
 = 
_ISbô
 (0),

49 
	m_ISlowî
 = 
_ISbô
 (1),

50 
	m_ISÆpha
 = 
_ISbô
 (2),

51 
	m_ISdigô
 = 
_ISbô
 (3),

52 
	m_ISxdigô
 = 
_ISbô
 (4),

53 
	m_IS•a˚
 = 
_ISbô
 (5),

54 
	m_IS¥öt
 = 
_ISbô
 (6),

55 
	m_ISgøph
 = 
_ISbô
 (7),

56 
	m_ISbœnk
 = 
_ISbô
 (8),

57 
	m_IS˙ål
 = 
_ISbô
 (9),

58 
	m_ISpun˘
 = 
_ISbô
 (10),

59 
	m_ISÆnum
 = 
_ISbô
 (11)

79 c⁄° **
	$__˘y≥_b_loc
 ()

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

81 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

87 #i‚de‡
__˝lu•lus


88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

90 #ñi‡
deföed
 
__USE_EXTERN_INLINES


91 
	#__is˘y≥_f
(
ty≥
) \

92 
__exã∫_ölöe
 \

93 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

95  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

96 
	}

	)
}

99 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

100 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

102 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

108 
__ex˘y≥
 (
iß um
);

109 
__ex˘y≥
 (
ißÕha
);

110 
__ex˘y≥
 (
is˙ål
);

111 
__ex˘y≥
 (
isdigô
);

112 
__ex˘y≥
 (
i¶owî
);

113 
__ex˘y≥
 (
isgøph
);

114 
__ex˘y≥
 (
i•röt
);

115 
__ex˘y≥
 (
i•un˘
);

116 
__ex˘y≥
 (
is•a˚
);

117 
__ex˘y≥
 (
isuµî
);

118 
__ex˘y≥
 (
isxdigô
);

122 
	$tﬁowî
 (
__c
Ë
__THROW
;

125 
	$touµî
 (
__c
Ë
__THROW
;

129 #ifdef 
__USE_ISOC99


130 
	`__ex˘y≥
 (
isbœnk
);

133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE


173 #ifde‡
__is˘y≥_f


174 
	$__is˘y≥_f
 (
Ænum
)

175 
	$__is˘y≥_f
 (
Æpha
)

176 
	$__is˘y≥_f
 (
˙ål
)

177 
	$__is˘y≥_f
 (
digô
)

178 
	$__is˘y≥_f
 (
lowî
)

179 
	$__is˘y≥_f
 (
gøph
)

180 
	$__is˘y≥_f
 (
¥öt
)

181 
	$__is˘y≥_f
 (
pun˘
)

182 
	$__is˘y≥_f
 (
•a˚
)

183 
	$__is˘y≥_f
 (
uµî
)

184 
	$__is˘y≥_f
 (
xdigô
)

185 #ifde‡
__USE_ISOC99


186 
	$__is˘y≥_f
 (
bœnk
)

188 #ñi‡
deföed
 
__is˘y≥


189 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

190 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

191 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

192 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

193 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

194 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

195 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

196 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

197 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

198 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

199 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

200 #ifde‡
__USE_ISOC99


201 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

205 #ifde‡
__USE_EXTERN_INLINES


206 
__exã∫_ölöe
 

207 
	`__NTH
 (
	$tﬁowî
 (
__c
))

209  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

210 
	}
}

212 
__exã∫_ölöe
 

213 
__NTH
 (
	$touµî
 (
__c
))

215  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

216 
	}
}

219 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


220 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

221 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

224 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


225 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

226 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

228 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

229 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

235 #ifde‡
__USE_XOPEN2K8


237 
	~<bôs/ty≥s/loˇÀ_t.h
>

241 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

242 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

244 
	#__ex˘y≥_l
(
«me
) \

245 
	`«me
 (, 
loˇÀ_t
Ë
__THROW


	)

251 
__ex˘y≥_l
 (
iß um_l
);

252 
__ex˘y≥_l
 (
ißÕha_l
);

253 
__ex˘y≥_l
 (
is˙ål_l
);

254 
__ex˘y≥_l
 (
isdigô_l
);

255 
__ex˘y≥_l
 (
i¶owî_l
);

256 
__ex˘y≥_l
 (
isgøph_l
);

257 
__ex˘y≥_l
 (
i•röt_l
);

258 
__ex˘y≥_l
 (
i•un˘_l
);

259 
__ex˘y≥_l
 (
is•a˚_l
);

260 
__ex˘y≥_l
 (
isuµî_l
);

261 
__ex˘y≥_l
 (
isxdigô_l
);

263 
__ex˘y≥_l
 (
isbœnk_l
);

267 
	$__tﬁowî_l
 (
__c
, 
loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$tﬁowî_l
 (
__c
, 
loˇÀ_t
 
__l
Ë
__THROW
;

271 
	$__touµî_l
 (
__c
, 
loˇÀ_t
 
__l
Ë
__THROW
;

272 
	$touµî_l
 (
__c
, 
loˇÀ_t
 
__l
Ë
__THROW
;

274 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


275 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

276 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

277 
	#__touµî_l
(
c
, 
loˇÀ
) \

278 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

279 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

280 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

284 #i‚de‡
__NO_CTYPE


285 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

286 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

287 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

288 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

289 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

290 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

291 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

292 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

293 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

294 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

295 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

297 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

299 #ifde‡
__USE_MISC


300 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

301 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

304 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

305 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

306 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

307 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

308 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

309 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

310 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

311 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

312 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

313 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

314 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

316 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

318 #ifde‡
__USE_MISC


319 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

320 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

327 
__END_DECLS


	@/usr/include/dirent.h

22 #i‚def 
_DIRENT_H


23 
	#_DIRENT_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifde‡
__USE_XOPEN


32 #i‚de‡
__öo_t_deföed


33 #i‚de‡
__USE_FILE_OFFSET64


34 
__öo_t
 
	töo_t
;

36 
__öo64_t
 
	töo_t
;

38 
	#__öo_t_deföed


	)

40 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


41 
__öo64_t
 
	töo64_t
;

42 
	#__öo64_t_deföed


	)

61 
	~<bôs/dúít.h
>

63 #i‡
deföed
 
__USE_MISC
 && !deföed 
d_fûío


64 
	#d_öo
 
d_fûío


	)

81 #ifde‡
_DIRENT_HAVE_D_NAMLEN


82 
	#_D_EXACT_NAMLEN
(
d
Ë((d)->
d_«mÀn
)

	)

83 
	#_D_ALLOC_NAMLEN
(
d
Ë(
	`_D_EXACT_NAMLEN
 (dË+ 1)

	)

85 
	#_D_EXACT_NAMLEN
(
d
Ë(
	`°æí
 ((d)->
d_«me
))

	)

86 #ifde‡
_DIRENT_HAVE_D_RECLEN


87 
	#_D_ALLOC_NAMLEN
(
d
Ë(((*Ë(dË+ (d)->
d_ª˛í
Ë- &(d)->
d_«me
[0])

	)

89 
	#_D_ALLOC_NAMLEN
(
d
Ë( (d)->
d_«me
 > 1 ?  (d)->d_name \

90 : 
	`_D_EXACT_NAMLEN
 (
d
Ë+ 1)

	)

95 #ifde‡
__USE_MISC


99 
	mDT_UNKNOWN
 = 0,

100 
	#DT_UNKNOWN
 
DT_UNKNOWN


	)

101 
	mDT_FIFO
 = 1,

102 
	#DT_FIFO
 
DT_FIFO


	)

103 
	mDT_CHR
 = 2,

104 
	#DT_CHR
 
DT_CHR


	)

105 
	mDT_DIR
 = 4,

106 
	#DT_DIR
 
DT_DIR


	)

107 
	mDT_BLK
 = 6,

108 
	#DT_BLK
 
DT_BLK


	)

109 
	mDT_REG
 = 8,

110 
	#DT_REG
 
DT_REG


	)

111 
	mDT_LNK
 = 10,

112 
	#DT_LNK
 
DT_LNK


	)

113 
	mDT_SOCK
 = 12,

114 
	#DT_SOCK
 
DT_SOCK


	)

115 
	mDT_WHT
 = 14

116 
	#DT_WHT
 
DT_WHT


	)

120 
	#IFTODT
(
mode
Ë(((modeË& 0170000Ë>> 12)

	)

121 
	#DTTOIF
(
dúty≥
Ë((dúty≥Ë<< 12)

	)

127 
__dú°ªam
 
	tDIR
;

134 
DIR
 *
	$›ídú
 (c⁄° *
__«me
Ë
	`__n⁄nuŒ
 ((1));

136 #ifde‡
__USE_XOPEN2K8


141 
DIR
 *
	`fd›ídú
 (
__fd
);

149 
	$˛o£dú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

161 #i‚de‡
__USE_FILE_OFFSET64


162 
dúít
 *
	$ªaddú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

164 #ifde‡
__REDIRECT


165 
dúít
 *
	`__REDIRECT
 (
ªaddú
, (
DIR
 *
__dúp
), 
ªaddú64
)

166 
	`__n⁄nuŒ
 ((1));

168 
	#ªaddú
 
ªaddú64


	)

172 #ifde‡
__USE_LARGEFILE64


173 
dúít64
 *
	$ªaddú64
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

176 #ifde‡
__USE_POSIX


182 #i‚de‡
__USE_FILE_OFFSET64


183 
	$ªaddú_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

184 
dúít
 *
__ª°ri˘
 
__íåy
,

185 
dúít
 **
__ª°ri˘
 
__ªsu…
)

186 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__©åibuã_dïªˇãd__
;

188 #ifde‡
__REDIRECT


189 
	`__REDIRECT
 (
ªaddú_r
,

190 (
DIR
 *
__ª°ri˘
 
__dúp
,

191 
dúít
 *
__ª°ri˘
 
__íåy
,

192 
dúít
 **
__ª°ri˘
 
__ªsu…
),

193 
ªaddú64_r
)

194 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__©åibuã_dïªˇãd__
;

196 
	#ªaddú_r
 
ªaddú64_r


	)

200 #ifde‡
__USE_LARGEFILE64


201 
	$ªaddú64_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

202 
dúít64
 *
__ª°ri˘
 
__íåy
,

203 
dúít64
 **
__ª°ri˘
 
__ªsu…
)

204 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__©åibuã_dïªˇãd__
;

209 
	$ªwöddú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

211 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


212 
	~<bôs/ty≥s.h
>

215 
	$£ekdú
 (
DIR
 *
__dúp
, 
__pos
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

218 
	$ãŒdú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

221 #ifde‡
__USE_XOPEN2K8


224 
	$dúfd
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

226 #i‡
deföed
 
__OPTIMIZE__
 && deföed 
_DIR_dúfd


227 
	#dúfd
(
dúp
Ë
	`_DIR_dúfd
 (dúp)

	)

230 #ifde‡
__USE_MISC


231 #i‚de‡
MAXNAMLEN


233 
	~<bôs/posix1_lim.h
>

236 #ifde‡
NAME_MAX


237 
	#MAXNAMLEN
 
NAME_MAX


	)

239 
	#MAXNAMLEN
 255

	)

244 
	#__√ed_size_t


	)

245 
	~<°ddef.h
>

254 #i‚de‡
__USE_FILE_OFFSET64


255 
	$sˇndú
 (c⁄° *
__ª°ri˘
 
__dú
,

256 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

257 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

258 (*
__cmp
Ë(c⁄° 
dúít
 **,

259 c⁄° 
dúít
 **))

260 
	`__n⁄nuŒ
 ((1, 2));

262 #ifde‡
__REDIRECT


263 
	`__REDIRECT
 (
sˇndú
,

264 (c⁄° *
__ª°ri˘
 
__dú
,

265 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

266 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

267 (*
__cmp
Ë(c⁄° 
dúít
 **,

268 c⁄° 
dúít
 **)),

269 
sˇndú64
Ë
	`__n⁄nuŒ
 ((1, 2));

271 
	#sˇndú
 
sˇndú64


	)

275 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


278 
	$sˇndú64
 (c⁄° *
__ª°ri˘
 
__dú
,

279 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

280 (*
__£À˘‹
Ë(c⁄° 
dúít64
 *),

281 (*
__cmp
Ë(c⁄° 
dúít64
 **,

282 c⁄° 
dúít64
 **))

283 
	`__n⁄nuŒ
 ((1, 2));

286 #ifde‡
__USE_GNU


292 #i‚de‡
__USE_FILE_OFFSET64


293 
	$sˇndú©
 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

294 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

295 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

296 (*
__cmp
Ë(c⁄° 
dúít
 **,

297 c⁄° 
dúít
 **))

298 
	`__n⁄nuŒ
 ((2, 3));

300 #ifde‡
__REDIRECT


301 
	`__REDIRECT
 (
sˇndú©
,

302 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

303 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

304 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

305 (*
__cmp
Ë(c⁄° 
dúít
 **,

306 c⁄° 
dúít
 **)),

307 
sˇndú©64
Ë
	`__n⁄nuŒ
 ((2, 3));

309 
	#sˇndú©
 
sˇndú©64


	)

315 
	$sˇndú©64
 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

316 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

317 (*
__£À˘‹
Ë(c⁄° 
dúít64
 *),

318 (*
__cmp
Ë(c⁄° 
dúít64
 **,

319 c⁄° 
dúít64
 **))

320 
	`__n⁄nuŒ
 ((2, 3));

324 #i‚de‡
__USE_FILE_OFFSET64


325 
	$Æphas‹t
 (c⁄° 
dúít
 **
__e1
,

326 c⁄° 
dúít
 **
__e2
)

327 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

329 #ifde‡
__REDIRECT


330 
	`__REDIRECT_NTH
 (
Æphas‹t
,

331 (c⁄° 
dúít
 **
__e1
,

332 c⁄° 
dúít
 **
__e2
),

333 
Æphas‹t64
Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

335 
	#Æphas‹t
 
Æphas‹t64


	)

339 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


340 
	$Æphas‹t64
 (c⁄° 
dúít64
 **
__e1
,

341 c⁄° 
dúít64
 **
__e2
)

342 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

347 #ifde‡
__USE_MISC


352 #i‚de‡
__USE_FILE_OFFSET64


353 
__ssize_t
 
	$gëdúíåõs
 (
__fd
, *
__ª°ri˘
 
__buf
,

354 
size_t
 
__nbyãs
,

355 
__off_t
 *
__ª°ri˘
 
__ba£p
)

356 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

358 #ifde‡
__REDIRECT


359 
__ssize_t
 
	`__REDIRECT_NTH
 (
gëdúíåõs
,

360 (
__fd
, *
__ª°ri˘
 
__buf
,

361 
size_t
 
__nbyãs
,

362 
__off64_t
 *
__ª°ri˘
 
__ba£p
),

363 
gëdúíåõs64
Ë
	`__n⁄nuŒ
 ((2, 4));

365 
	#gëdúíåõs
 
gëdúíåõs64


	)

369 #ifde‡
__USE_LARGEFILE64


370 
__ssize_t
 
	$gëdúíåõs64
 (
__fd
, *
__ª°ri˘
 
__buf
,

371 
size_t
 
__nbyãs
,

372 
__off64_t
 *
__ª°ri˘
 
__ba£p
)

373 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

377 #ifde‡
__USE_GNU


379 #i‚de‡
__USE_FILE_OFFSET64


380 
	$vîsi⁄s‹t
 (c⁄° 
dúít
 **
__e1
,

381 c⁄° 
dúít
 **
__e2
)

382 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

384 #ifde‡
__REDIRECT


385 
	`__REDIRECT_NTH
 (
vîsi⁄s‹t
,

386 (c⁄° 
dúít
 **
__e1
,

387 c⁄° 
dúít
 **
__e2
),

388 
vîsi⁄s‹t64
)

389 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

391 
	#vîsi⁄s‹t
 
vîsi⁄s‹t64


	)

395 #ifde‡
__USE_LARGEFILE64


396 
	$vîsi⁄s‹t64
 (c⁄° 
dúít64
 **
__e1
,

397 c⁄° 
dúít64
 **
__e2
)

398 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

402 
__END_DECLS


404 
	~<bôs/dúít_ext.h
>

	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


23 
	#_ERRNO_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/î∫o.h
>

32 #i‚de‡
__ASSEMBLER__


34 
__BEGIN_DECLS


37 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
__©åibuã_c⁄°__
;

38 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

40 #ifde‡
__USE_GNU


45 *
¥ogøm_övoˇti⁄_«me
;

46 *
¥ogøm_övoˇti⁄_sh‹t_«me
;

48 
	~<bôs/ty≥s/îr‹_t.h
>

52 
__END_DECLS


	@/usr/include/expat.h

41 #i‚de‡
Ex∑t_INCLUDED


42 
	#Ex∑t_INCLUDED
 1

	)

44 
	~<°dlib.h
>

45 
	~"ex∑t_exã∫Æ.h
"

47 #ifde‡
__˝lu•lus


51 
XML_P¨£rSåu˘
;

52 
XML_P¨£rSåu˘
 *
	tXML_P¨£r
;

54 
	tXML_Boﬁ
;

55 
	#XML_TRUE
 ((
XML_Boﬁ
)1)

	)

56 
	#XML_FALSE
 ((
XML_Boﬁ
)0)

	)

71 
	eXML_Sètus
 {

72 
XML_STATUS_ERROR
 = 0,

73 
	#XML_STATUS_ERROR
 
XML_STATUS_ERROR


	)

74 
XML_STATUS_OK
 = 1,

75 
	#XML_STATUS_OK
 
XML_STATUS_OK


	)

76 
XML_STATUS_SUSPENDED
 = 2

77 
	#XML_STATUS_SUSPENDED
 
XML_STATUS_SUSPENDED


	)

80 
	eXML_Eº‹
 {

81 
XML_ERROR_NONE
,

82 
XML_ERROR_NO_MEMORY
,

83 
XML_ERROR_SYNTAX
,

84 
XML_ERROR_NO_ELEMENTS
,

85 
XML_ERROR_INVALID_TOKEN
,

86 
XML_ERROR_UNCLOSED_TOKEN
,

87 
XML_ERROR_PARTIAL_CHAR
,

88 
XML_ERROR_TAG_MISMATCH
,

89 
XML_ERROR_DUPLICATE_ATTRIBUTE
,

90 
XML_ERROR_JUNK_AFTER_DOC_ELEMENT
,

91 
XML_ERROR_PARAM_ENTITY_REF
,

92 
XML_ERROR_UNDEFINED_ENTITY
,

93 
XML_ERROR_RECURSIVE_ENTITY_REF
,

94 
XML_ERROR_ASYNC_ENTITY
,

95 
XML_ERROR_BAD_CHAR_REF
,

96 
XML_ERROR_BINARY_ENTITY_REF
,

97 
XML_ERROR_ATTRIBUTE_EXTERNAL_ENTITY_REF
,

98 
XML_ERROR_MISPLACED_XML_PI
,

99 
XML_ERROR_UNKNOWN_ENCODING
,

100 
XML_ERROR_INCORRECT_ENCODING
,

101 
XML_ERROR_UNCLOSED_CDATA_SECTION
,

102 
XML_ERROR_EXTERNAL_ENTITY_HANDLING
,

103 
XML_ERROR_NOT_STANDALONE
,

104 
XML_ERROR_UNEXPECTED_STATE
,

105 
XML_ERROR_ENTITY_DECLARED_IN_PE
,

106 
XML_ERROR_FEATURE_REQUIRES_XML_DTD
,

107 
XML_ERROR_CANT_CHANGE_FEATURE_ONCE_PARSING
,

109 
XML_ERROR_UNBOUND_PREFIX
,

111 
XML_ERROR_UNDECLARING_PREFIX
,

112 
XML_ERROR_INCOMPLETE_PE
,

113 
XML_ERROR_XML_DECL
,

114 
XML_ERROR_TEXT_DECL
,

115 
XML_ERROR_PUBLICID
,

116 
XML_ERROR_SUSPENDED
,

117 
XML_ERROR_NOT_SUSPENDED
,

118 
XML_ERROR_ABORTED
,

119 
XML_ERROR_FINISHED
,

120 
XML_ERROR_SUSPEND_PE
,

122 
XML_ERROR_RESERVED_PREFIX_XML
,

123 
XML_ERROR_RESERVED_PREFIX_XMLNS
,

124 
XML_ERROR_RESERVED_NAMESPACE_URI
,

126 
XML_ERROR_INVALID_ARGUMENT
,

128 
XML_ERROR_NO_BUFFER
,

130 
XML_ERROR_AMPLIFICATION_LIMIT_BREACH


133 
	eXML_C⁄ã¡_Ty≥
 {

134 
XML_CTYPE_EMPTY
 = 1,

135 
XML_CTYPE_ANY
,

136 
XML_CTYPE_MIXED
,

137 
XML_CTYPE_NAME
,

138 
XML_CTYPE_CHOICE
,

139 
XML_CTYPE_SEQ


142 
	eXML_C⁄ã¡_Qu™t
 {

143 
XML_CQUANT_NONE
,

144 
XML_CQUANT_OPT
,

145 
XML_CQUANT_REP
,

146 
XML_CQUANT_PLUS


167 
XML_˝
 
	tXML_C⁄ã¡
;

169 
	sXML_˝
 {

170 
XML_C⁄ã¡_Ty≥
 
ty≥
;

171 
XML_C⁄ã¡_Qu™t
 
qu™t
;

172 
XML_Ch¨
 *
«me
;

173 
numchûdªn
;

174 
XML_C⁄ã¡
 *
chûdªn
;

183 (
XMLCALL
 *
	tXML_EÀmítDe˛H™dÀr
)(*
	tu£rD©a
,

184 c⁄° 
	tXML_Ch¨
 *
	t«me
,

185 
	tXML_C⁄ã¡
 *
	tmodñ
);

187 
XMLPARSEAPI
()

188 
XML_SëEÀmítDe˛H™dÀr
(
XML_P¨£r
 
∑r£r
, 
XML_EÀmítDe˛H™dÀr
 
ñde˛
);

198 (
XMLCALL
 *
	tXML_Aâli°De˛H™dÀr
)(

199 *
	tu£rD©a
, c⁄° 
	tXML_Ch¨
 *
	tñ«me
, c⁄° XML_Ch¨ *
	t©äame
,

200 c⁄° 
	tXML_Ch¨
 *
	t©t_ty≥
, c⁄° XML_Ch¨ *
	tdÊt
, 
	ti§equúed
);

202 
XMLPARSEAPI
()

203 
XML_SëAâli°De˛H™dÀr
(
XML_P¨£r
 
∑r£r
, 
XML_Aâli°De˛H™dÀr
 
©tde˛
);

213 (
XMLCALL
 *
	tXML_XmlDe˛H™dÀr
)(*
	tu£rD©a
,

214 c⁄° 
	tXML_Ch¨
 *
	tvîsi⁄
,

215 c⁄° 
	tXML_Ch¨
 *
	tícodög
,

216 
	t°™dÆ⁄e
);

218 
XMLPARSEAPI
()

219 
XML_SëXmlDe˛H™dÀr
(
XML_P¨£r
 
∑r£r
, 
XML_XmlDe˛H™dÀr
 
xmlde˛
);

222 *(*
mÆloc_f˙
)(
size_t
 
size
);

223 *(*
ªÆloc_f˙
)(*
±r
, 
size_t
 
size
);

224 (*
‰ì_f˙
)(*
±r
);

225 } 
	tXML_Mem‹y_H™dlög_Suôe
;

230 
XMLPARSEAPI
(
XML_P¨£r
)

231 
XML_P¨£rCª©e
(c⁄° 
XML_Ch¨
 *
ícodög
);

255 
XMLPARSEAPI
(
XML_P¨£r
)

256 
XML_P¨£rCª©eNS
(c⁄° 
XML_Ch¨
 *
ícodög
, XML_Ch¨ 
«me•a˚Sï¨©‹
);

267 
XMLPARSEAPI
(
XML_P¨£r
)

268 
XML_P¨£rCª©e_MM
(c⁄° 
XML_Ch¨
 *
ícodög
,

269 c⁄° 
XML_Mem‹y_H™dlög_Suôe
 *
memsuôe
,

270 c⁄° 
XML_Ch¨
 *
«me•a˚Sï¨©‹
);

281 
XMLPARSEAPI
(
XML_Boﬁ
)

282 
XML_P¨£rRe£t
(
XML_P¨£r
 
∑r£r
, c⁄° 
XML_Ch¨
 *
ícodög
);

287 (
XMLCALL
 *
	tXML_SèπEÀmítH™dÀr
)(*
	tu£rD©a
,

288 c⁄° 
	tXML_Ch¨
 *
	t«me
,

289 c⁄° 
	tXML_Ch¨
 **
	t©ts
);

291 (
XMLCALL
 *
	tXML_EndEÀmítH™dÀr
)(*
	tu£rD©a
,

292 c⁄° 
	tXML_Ch¨
 *
	t«me
);

295 (
XMLCALL
 *
	tXML_Ch¨a˘îD©aH™dÀr
)(*
	tu£rD©a
,

296 c⁄° 
	tXML_Ch¨
 *
	ts
, 
	tÀn
);

299 (
XMLCALL
 *
	tXML_Pro˚ssögIn°ru˘i⁄H™dÀr
)(*
	tu£rD©a
,

300 c⁄° 
	tXML_Ch¨
 *
	tèrgë
,

301 c⁄° 
	tXML_Ch¨
 *
	td©a
);

304 (
XMLCALL
 *
	tXML_CommítH™dÀr
)(*
	tu£rD©a
, c⁄° 
	tXML_Ch¨
 *
	td©a
);

306 (
XMLCALL
 *
	tXML_SèπCd©aSe˘i⁄H™dÀr
)(*
	tu£rD©a
);

307 (
XMLCALL
 *
	tXML_EndCd©aSe˘i⁄H™dÀr
)(*
	tu£rD©a
);

322 (
XMLCALL
 *
	tXML_DeÁu…H™dÀr
)(*
	tu£rD©a
, c⁄° 
	tXML_Ch¨
 *
	ts
,

323 
	tÀn
);

328 (
XMLCALL
 *
	tXML_SèπDo˘y≥De˛H™dÀr
)(*
	tu£rD©a
,

329 c⁄° 
	tXML_Ch¨
 *
	tdo˘y≥Name
,

330 c⁄° 
	tXML_Ch¨
 *
	tsysid
,

331 c⁄° 
	tXML_Ch¨
 *
	tpubid
,

332 
	thas_öã∫Æ_sub£t
);

338 (
XMLCALL
 *
	tXML_EndDo˘y≥De˛H™dÀr
)(*
	tu£rD©a
);

358 (
XMLCALL
 *
	tXML_E¡ôyDe˛H™dÀr
)(

359 *
	tu£rD©a
, c⁄° 
	tXML_Ch¨
 *
	títôyName
, 
	tis_∑ømëî_ítôy
,

360 c⁄° 
	tXML_Ch¨
 *
	tvÆue
, 
	tvÆue_Àngth
, c⁄° XML_Ch¨ *
	tba£
,

361 c⁄° 
	tXML_Ch¨
 *
	tsy°emId
, c⁄° XML_Ch¨ *
	tpublicId
,

362 c⁄° 
	tXML_Ch¨
 *
	tnŸ©i⁄Name
);

364 
XMLPARSEAPI
()

365 
XML_SëE¡ôyDe˛H™dÀr
(
XML_P¨£r
 
∑r£r
, 
XML_E¡ôyDe˛H™dÀr
 
h™dÀr
);

376 (
XMLCALL
 *
	tXML_U≈¨£dE¡ôyDe˛H™dÀr
)(

377 *
	tu£rD©a
, c⁄° 
	tXML_Ch¨
 *
	títôyName
, c⁄° XML_Ch¨ *
	tba£
,

378 c⁄° 
	tXML_Ch¨
 *
	tsy°emId
, c⁄° XML_Ch¨ *
	tpublicId
,

379 c⁄° 
	tXML_Ch¨
 *
	tnŸ©i⁄Name
);

385 (
XMLCALL
 *
	tXML_NŸ©i⁄De˛H™dÀr
)(*
	tu£rD©a
,

386 c⁄° 
	tXML_Ch¨
 *
	tnŸ©i⁄Name
,

387 c⁄° 
	tXML_Ch¨
 *
	tba£
,

388 c⁄° 
	tXML_Ch¨
 *
	tsy°emId
,

389 c⁄° 
	tXML_Ch¨
 *
	tpublicId
);

397 (
XMLCALL
 *
	tXML_SèπName•a˚De˛H™dÀr
)(*
	tu£rD©a
,

398 c⁄° 
	tXML_Ch¨
 *
	t¥efix
,

399 c⁄° 
	tXML_Ch¨
 *
	turi
);

401 (
XMLCALL
 *
	tXML_EndName•a˚De˛H™dÀr
)(*
	tu£rD©a
,

402 c⁄° 
	tXML_Ch¨
 *
	t¥efix
);

413 (
XMLCALL
 *
	tXML_NŸSèndÆ⁄eH™dÀr
)(*
	tu£rD©a
);

449 (
XMLCALL
 *
	tXML_Exã∫ÆE¡ôyRefH™dÀr
)(
	tXML_P¨£r
 
	t∑r£r
,

450 c⁄° 
	tXML_Ch¨
 *
	tc⁄ãxt
,

451 c⁄° 
	tXML_Ch¨
 *
	tba£
,

452 c⁄° 
	tXML_Ch¨
 *
	tsy°emId
,

453 c⁄° 
	tXML_Ch¨
 *
	tpublicId
);

465 (
XMLCALL
 *
	tXML_Skù≥dE¡ôyH™dÀr
)(*
	tu£rD©a
,

466 c⁄° 
	tXML_Ch¨
 *
	títôyName
,

467 
	tis_∑ømëî_ítôy
);

522 
m≠
[256];

523 *
d©a
;

524 (
XMLCALL
 *
c⁄vît
)(*
d©a
, c⁄° *
s
);

525 (
XMLCALL
 *
ªÀa£
)(*
d©a
);

526 } 
	tXML_Encodög
;

543 (
XMLCALL
 *
	tXML_UnknownEncodögH™dÀr
)(*
	tícodögH™dÀrD©a
,

544 c⁄° 
	tXML_Ch¨
 *
	t«me
,

545 
	tXML_Encodög
 *
	töfo
);

547 
XMLPARSEAPI
()

548 
XML_SëEÀmítH™dÀr
(
XML_P¨£r
 
∑r£r
, 
XML_SèπEÀmítH™dÀr
 
°¨t
,

549 
XML_EndEÀmítH™dÀr
 
íd
);

551 
XMLPARSEAPI
()

552 
XML_SëSèπEÀmítH™dÀr
(
XML_P¨£r
 
∑r£r
, 
XML_SèπEÀmítH™dÀr
 
h™dÀr
);

554 
XMLPARSEAPI
()

555 
XML_SëEndEÀmítH™dÀr
(
XML_P¨£r
 
∑r£r
, 
XML_EndEÀmítH™dÀr
 
h™dÀr
);

557 
XMLPARSEAPI
()

558 
XML_SëCh¨a˘îD©aH™dÀr
(
XML_P¨£r
 
∑r£r
,

559 
XML_Ch¨a˘îD©aH™dÀr
 
h™dÀr
);

561 
XMLPARSEAPI
()

562 
XML_SëPro˚ssögIn°ru˘i⁄H™dÀr
(
XML_P¨£r
 
∑r£r
,

563 
XML_Pro˚ssögIn°ru˘i⁄H™dÀr
 
h™dÀr
);

564 
XMLPARSEAPI
()

565 
XML_SëCommítH™dÀr
(
XML_P¨£r
 
∑r£r
, 
XML_CommítH™dÀr
 
h™dÀr
);

567 
XMLPARSEAPI
()

568 
XML_SëCd©aSe˘i⁄H™dÀr
(
XML_P¨£r
 
∑r£r
,

569 
XML_SèπCd©aSe˘i⁄H™dÀr
 
°¨t
,

570 
XML_EndCd©aSe˘i⁄H™dÀr
 
íd
);

572 
XMLPARSEAPI
()

573 
XML_SëSèπCd©aSe˘i⁄H™dÀr
(
XML_P¨£r
 
∑r£r
,

574 
XML_SèπCd©aSe˘i⁄H™dÀr
 
°¨t
);

576 
XMLPARSEAPI
()

577 
XML_SëEndCd©aSe˘i⁄H™dÀr
(
XML_P¨£r
 
∑r£r
,

578 
XML_EndCd©aSe˘i⁄H™dÀr
 
íd
);

584 
XMLPARSEAPI
()

585 
XML_SëDeÁu…H™dÀr
(
XML_P¨£r
 
∑r£r
, 
XML_DeÁu…H™dÀr
 
h™dÀr
);

591 
XMLPARSEAPI
()

592 
XML_SëDeÁu…H™dÀrEx∑nd
(
XML_P¨£r
 
∑r£r
, 
XML_DeÁu…H™dÀr
 
h™dÀr
);

594 
XMLPARSEAPI
()

595 
XML_SëDo˘y≥De˛H™dÀr
(
XML_P¨£r
 
∑r£r
, 
XML_SèπDo˘y≥De˛H™dÀr
 
°¨t
,

596 
XML_EndDo˘y≥De˛H™dÀr
 
íd
);

598 
XMLPARSEAPI
()

599 
XML_SëSèπDo˘y≥De˛H™dÀr
(
XML_P¨£r
 
∑r£r
,

600 
XML_SèπDo˘y≥De˛H™dÀr
 
°¨t
);

602 
XMLPARSEAPI
()

603 
XML_SëEndDo˘y≥De˛H™dÀr
(
XML_P¨£r
 
∑r£r
, 
XML_EndDo˘y≥De˛H™dÀr
 
íd
);

605 
XMLPARSEAPI
()

606 
XML_SëU≈¨£dE¡ôyDe˛H™dÀr
(
XML_P¨£r
 
∑r£r
,

607 
XML_U≈¨£dE¡ôyDe˛H™dÀr
 
h™dÀr
);

609 
XMLPARSEAPI
()

610 
XML_SëNŸ©i⁄De˛H™dÀr
(
XML_P¨£r
 
∑r£r
, 
XML_NŸ©i⁄De˛H™dÀr
 
h™dÀr
);

612 
XMLPARSEAPI
()

613 
XML_SëName•a˚De˛H™dÀr
(
XML_P¨£r
 
∑r£r
,

614 
XML_SèπName•a˚De˛H™dÀr
 
°¨t
,

615 
XML_EndName•a˚De˛H™dÀr
 
íd
);

617 
XMLPARSEAPI
()

618 
XML_SëSèπName•a˚De˛H™dÀr
(
XML_P¨£r
 
∑r£r
,

619 
XML_SèπName•a˚De˛H™dÀr
 
°¨t
);

621 
XMLPARSEAPI
()

622 
XML_SëEndName•a˚De˛H™dÀr
(
XML_P¨£r
 
∑r£r
,

623 
XML_EndName•a˚De˛H™dÀr
 
íd
);

625 
XMLPARSEAPI
()

626 
XML_SëNŸSèndÆ⁄eH™dÀr
(
XML_P¨£r
 
∑r£r
,

627 
XML_NŸSèndÆ⁄eH™dÀr
 
h™dÀr
);

629 
XMLPARSEAPI
()

630 
XML_SëExã∫ÆE¡ôyRefH™dÀr
(
XML_P¨£r
 
∑r£r
,

631 
XML_Exã∫ÆE¡ôyRefH™dÀr
 
h™dÀr
);

637 
XMLPARSEAPI
()

638 
XML_SëExã∫ÆE¡ôyRefH™dÀrArg
(
XML_P¨£r
 
∑r£r
, *
¨g
);

640 
XMLPARSEAPI
()

641 
XML_SëSkù≥dE¡ôyH™dÀr
(
XML_P¨£r
 
∑r£r
,

642 
XML_Skù≥dE¡ôyH™dÀr
 
h™dÀr
);

644 
XMLPARSEAPI
()

645 
XML_SëUnknownEncodögH™dÀr
(
XML_P¨£r
 
∑r£r
,

646 
XML_UnknownEncodögH™dÀr
 
h™dÀr
,

647 *
ícodögH™dÀrD©a
);

653 
XMLPARSEAPI
()

654 
XML_DeÁu…Cuºít
(
XML_P¨£r
 
∑r£r
);

670 
XMLPARSEAPI
()

671 
XML_SëRëu∫NSTrùÀt
(
XML_P¨£r
 
∑r£r
, 
do_n°
);

674 
XMLPARSEAPI
()

675 
XML_SëU£rD©a
(
XML_P¨£r
 
∑r£r
, *
u£rD©a
);

678 
	#XML_GëU£rD©a
(
∑r£r
Ë(*(**)’¨£r))

	)

686 
XMLPARSEAPI
(
XML_Sètus
)

687 
XML_SëEncodög
(
XML_P¨£r
 
∑r£r
, c⁄° 
XML_Ch¨
 *
ícodög
);

693 
XMLPARSEAPI
()

694 
XML_U£P¨£rAsH™dÀrArg
(
XML_P¨£r
 
∑r£r
);

715 
XMLPARSEAPI
(
XML_Eº‹
)

716 
XML_U£F‹eignDTD
(
XML_P¨£r
 
∑r£r
, 
XML_Boﬁ
 
u£DTD
);

726 
XMLPARSEAPI
(
XML_Sètus
)

727 
XML_SëBa£
(
XML_P¨£r
 
∑r£r
, c⁄° 
XML_Ch¨
 *
ba£
);

729 
XMLPARSEAPI
(c⁄° 
XML_Ch¨
 *)

730 
XML_GëBa£
(
XML_P¨£r
 
∑r£r
);

738 
XMLPARSEAPI
()

739 
XML_GëS≥cifõdAâribuãCou¡
(
XML_P¨£r
 
∑r£r
);

747 
XMLPARSEAPI
()

748 
XML_GëIdAâribuãIndex
(
XML_P¨£r
 
∑r£r
);

750 #ifde‡
XML_ATTR_INFO


757 
XML_Index
 
«meSèπ
;

758 
XML_Index
 
«meEnd
;

759 
XML_Index
 
vÆueSèπ
;

760 
XML_Index
 
vÆueEnd
;

761 } 
	tXML_AârInfo
;

769 
XMLPARSEAPI
(c⁄° 
XML_AârInfo
 *)

770 
XML_GëAâribuãInfo
(
XML_P¨£r
 
∑r£r
);

782 
XMLPARSEAPI
(
XML_Sètus
)

783 
XML_P¨£
(
XML_P¨£r
 
∑r£r
, c⁄° *
s
, 
Àn
, 
isFöÆ
);

785 
XMLPARSEAPI
(*)

786 
XML_GëBuf„r
(
XML_P¨£r
 
∑r£r
, 
Àn
);

788 
XMLPARSEAPI
(
XML_Sètus
)

789 
XML_P¨£Buf„r
(
XML_P¨£r
 
∑r£r
, 
Àn
, 
isFöÆ
);

822 
XMLPARSEAPI
(
XML_Sètus
)

823 
XML_St›P¨£r
(
XML_P¨£r
 
∑r£r
, 
XML_Boﬁ
 
ªsumabÀ
);

837 
XMLPARSEAPI
(
XML_Sètus
)

838 
XML_ResumeP¨£r
(
XML_P¨£r
 
∑r£r
);

840 
	eXML_P¨sög
 { 
XML_INITIALIZED
, 
XML_PARSING
, 
XML_FINISHED
, 
XML_SUSPENDED
 };

843 
XML_P¨sög
 
∑rsög
;

844 
XML_Boﬁ
 
föÆBuf„r
;

845 } 
	tXML_P¨sögSètus
;

852 
XMLPARSEAPI
()

853 
XML_GëP¨sögSètus
(
XML_P¨£r
 
∑r£r
, 
XML_P¨sögSètus
 *
°©us
);

871 
XMLPARSEAPI
(
XML_P¨£r
)

872 
XML_Exã∫ÆE¡ôyP¨£rCª©e
(
XML_P¨£r
 
∑r£r
, c⁄° 
XML_Ch¨
 *
c⁄ãxt
,

873 c⁄° 
XML_Ch¨
 *
ícodög
);

875 
	eXML_P¨amE¡ôyP¨sög
 {

876 
XML_PARAM_ENTITY_PARSING_NEVER
,

877 
XML_PARAM_ENTITY_PARSING_UNLESS_STANDALONE
,

878 
XML_PARAM_ENTITY_PARSING_ALWAYS


905 
XMLPARSEAPI
()

906 
XML_SëP¨amE¡ôyP¨sög
(
XML_P¨£r
 
∑r£r
,

907 
XML_P¨amE¡ôyP¨sög
 
∑rsög
);

915 
XMLPARSEAPI
()

916 
XML_SëHashSÆt
(
XML_P¨£r
 
∑r£r
, 
hash_ß…
);

921 
XMLPARSEAPI
(
XML_Eº‹
)

922 
XML_GëEº‹Code
(
XML_P¨£r
 
∑r£r
);

944 
XMLPARSEAPI
(
XML_Size
Ë
XML_GëCuºítLöeNumbî
(
XML_P¨£r
 
∑r£r
);

945 
XMLPARSEAPI
(
XML_Size
Ë
XML_GëCuºítCﬁumnNumbî
(
XML_P¨£r
 
∑r£r
);

946 
XMLPARSEAPI
(
XML_Index
Ë
XML_GëCuºítByãIndex
(
XML_P¨£r
 
∑r£r
);

951 
XMLPARSEAPI
()

952 
XML_GëCuºítByãCou¡
(
XML_P¨£r
 
∑r£r
);

964 
XMLPARSEAPI
(const *)

965 
XML_GëI≈utC⁄ãxt
(
XML_P¨£r
 
∑r£r
, *
off£t
, *
size
);

968 
	#XML_GëEº‹LöeNumbî
 
XML_GëCuºítLöeNumbî


	)

969 
	#XML_GëEº‹CﬁumnNumbî
 
XML_GëCuºítCﬁumnNumbî


	)

970 
	#XML_GëEº‹ByãIndex
 
XML_GëCuºítByãIndex


	)

973 
XMLPARSEAPI
()

974 
XML_FªeC⁄ã¡Modñ
(
XML_P¨£r
 
∑r£r
, 
XML_C⁄ã¡
 *
modñ
);

977 
XMLPARSEAPI
(*)

978 
XML_ATTR_MALLOC


979 
XML_ATTR_ALLOC_SIZE
(2)

980 
XML_MemMÆloc
(
XML_P¨£r
 
∑r£r
, 
size_t
 
size
);

982 
XMLPARSEAPI
(*)

983 
XML_ATTR_ALLOC_SIZE
(3)

984 
XML_MemRóŒoc
(
XML_P¨£r
 
∑r£r
, *
±r
, 
size_t
 
size
);

986 
XMLPARSEAPI
()

987 
XML_MemFªe
(
XML_P¨£r
 
∑r£r
, *
±r
);

990 
XMLPARSEAPI
()

991 
XML_P¨£rFªe
(
XML_P¨£r
 
∑r£r
);

994 
XMLPARSEAPI
(c⁄° 
XML_LCh¨
 *)

995 
XML_Eº‹Såög
(
XML_Eº‹
 
code
);

998 
XMLPARSEAPI
(c⁄° 
XML_LCh¨
 *)

999 
XML_Ex∑tVîsi⁄
();

1002 
maj‹
;

1003 
mö‹
;

1004 
mi¸o
;

1005 } 
	tXML_Ex∑t_Vîsi⁄
;

1010 
XMLPARSEAPI
(
XML_Ex∑t_Vîsi⁄
)

1011 
XML_Ex∑tVîsi⁄Info
();

1014 
	eXML_FótuªEnum
 {

1015 
XML_FEATURE_END
 = 0,

1016 
XML_FEATURE_UNICODE
,

1017 
XML_FEATURE_UNICODE_WCHAR_T
,

1018 
XML_FEATURE_DTD
,

1019 
XML_FEATURE_CONTEXT_BYTES
,

1020 
XML_FEATURE_MIN_SIZE
,

1021 
XML_FEATURE_SIZEOF_XML_CHAR
,

1022 
XML_FEATURE_SIZEOF_XML_LCHAR
,

1023 
XML_FEATURE_NS
,

1024 
XML_FEATURE_LARGE_SIZE
,

1025 
XML_FEATURE_ATTR_INFO
,

1027 
XML_FEATURE_BILLION_LAUGHS_ATTACK_PROTECTION_MAXIMUM_AMPLIFICATION_DEFAULT
,

1028 
XML_FEATURE_BILLION_LAUGHS_ATTACK_PROTECTION_ACTIVATION_THRESHOLD_DEFAULT


1033 
XML_FótuªEnum
 
„©uª
;

1034 c⁄° 
XML_LCh¨
 *
«me
;

1035 
vÆue
;

1036 } 
	tXML_Fótuª
;

1038 
XMLPARSEAPI
(c⁄° 
XML_Fótuª
 *)

1039 
XML_GëFótuªLi°
();

1041 #ifde‡
XML_DTD


1043 
XMLPARSEAPI
(
XML_Boﬁ
)

1044 
XML_SëBûli⁄LaughsAâackPrŸe˘i⁄MaximumAm∂ifiˇti⁄
(

1045 
XML_P¨£r
 
∑r£r
, 
maximumAm∂ifiˇti⁄Fa˘‹
);

1048 
XMLPARSEAPI
(
XML_Boﬁ
)

1049 
XML_SëBûli⁄LaughsAâackPrŸe˘i⁄A˘iv©i⁄Thªshﬁd
(

1050 
XML_P¨£r
 
∑r£r
, 
a˘iv©i⁄ThªshﬁdByãs
);

1054 
XMLPARSEAPI
(
XML_Boﬁ
)

1055 
XML_SëRï¨£De„ºÆE«bÀd
(
XML_P¨£r
 
∑r£r
, 
XML_Boﬁ
 
íabÀd
);

1060 
	#XML_MAJOR_VERSION
 2

	)

1061 
	#XML_MINOR_VERSION
 4

	)

1062 
	#XML_MICRO_VERSION
 7

	)

1064 #ifde‡
__˝lu•lus


	@/usr/include/fcntl.h

22 #i‚def 
_FCNTL_H


23 
	#_FCNTL_H
 1

	)

25 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

35 
	~<bôs/f˙é.h
>

39 #ifde‡
__O_TMPFILE


40 
	#__OPEN_NEEDS_MODE
(
oÊag
) \

41 (((
oÊag
Ë& 
O_CREAT
Ë!0 || ((oÊagË& 
__O_TMPFILE
Ë=__O_TMPFILE)

	)

43 
	#__OPEN_NEEDS_MODE
(
oÊag
Ë(((oÊagË& 
O_CREAT
Ë!0)

	)

49 #i‚de‡
__mode_t_deföed


50 
__mode_t
 
	tmode_t
;

51 
	#__mode_t_deföed


	)

54 #i‚de‡
__off_t_deföed


55 #i‚de‡
__USE_FILE_OFFSET64


56 
__off_t
 
	toff_t
;

58 
__off64_t
 
	toff_t
;

60 
	#__off_t_deföed


	)

63 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


64 
__off64_t
 
	toff64_t
;

65 
	#__off64_t_deföed


	)

68 #i‚de‡
__pid_t_deföed


69 
__pid_t
 
	tpid_t
;

70 
	#__pid_t_deföed


	)

74 #ifde‡
__USE_XOPEN2K8


75 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

77 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


78 
	~<bôs/°©.h
>

80 
	#S_IFMT
 
__S_IFMT


	)

81 
	#S_IFDIR
 
__S_IFDIR


	)

82 
	#S_IFCHR
 
__S_IFCHR


	)

83 
	#S_IFBLK
 
__S_IFBLK


	)

84 
	#S_IFREG
 
__S_IFREG


	)

85 #ifde‡
__S_IFIFO


86 
	#S_IFIFO
 
__S_IFIFO


	)

88 #ifde‡
__S_IFLNK


89 
	#S_IFLNK
 
__S_IFLNK


	)

91 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


92 
	#S_IFSOCK
 
__S_IFSOCK


	)

97 
	#S_ISUID
 
__S_ISUID


	)

98 
	#S_ISGID
 
__S_ISGID


	)

100 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


102 
	#S_ISVTX
 
__S_ISVTX


	)

105 
	#S_IRUSR
 
__S_IREAD


	)

106 
	#S_IWUSR
 
__S_IWRITE


	)

107 
	#S_IXUSR
 
__S_IEXEC


	)

109 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

111 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

112 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

113 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

115 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

117 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

118 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

119 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

121 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

124 #ifdef 
__USE_MISC


125 #i‚de‡
R_OK


128 
	#R_OK
 4

	)

129 
	#W_OK
 2

	)

130 
	#X_OK
 1

	)

131 
	#F_OK
 0

	)

136 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


137 
	#SEEK_SET
 0

	)

138 
	#SEEK_CUR
 1

	)

139 
	#SEEK_END
 2

	)

147 #i‚de‡
__USE_TIME_BITS64


148 #i‚de‡
__USE_FILE_OFFSET64


149 
f˙é
 (
__fd
, 
__cmd
, ...);

151 #ifde‡
__REDIRECT


152 
__REDIRECT
 (
f˙é
, (
__fd
, 
__cmd
, ...), 
f˙é64
);

154 
	#f˙é
 
f˙é64


	)

157 #ifde‡
__USE_LARGEFILE64


158 
f˙é64
 (
__fd
, 
__cmd
, ...);

161 #ifde‡
__REDIRECT


162 
__REDIRECT_NTH
 (
f˙é
, (
__fd
, 
__ªque°
, ...),

163 
__f˙é_time64
);

164 
__REDIRECT_NTH
 (
f˙é64
, (
__fd
, 
__ªque°
, ...),

165 
__f˙é_time64
);

167 
	$__f˙é_time64
 (
__fd
, 
__ªque°
, ...Ë
__THROW
;

168 
	#f˙é64
 
__f˙é_time64


	)

169 
	#f˙é
 
__f˙é_time64


	)

180 #i‚de‡
__USE_FILE_OFFSET64


181 
	$›í
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

183 #ifde‡
__REDIRECT


184 
	`__REDIRECT
 (
›í
, (c⁄° *
__fûe
, 
__oÊag
, ...), 
›í64
)

185 
	`__n⁄nuŒ
 ((1));

187 
	#›í
 
›í64


	)

190 #ifde‡
__USE_LARGEFILE64


191 
	$›í64
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

194 #ifde‡
__USE_ATFILE


204 #i‚de‡
__USE_FILE_OFFSET64


205 
	$›í©
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

206 
	`__n⁄nuŒ
 ((2));

208 #ifde‡
__REDIRECT


209 
	`__REDIRECT
 (
›í©
, (
__fd
, c⁄° *
__fûe
, 
__oÊag
,

210 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

212 
	#›í©
 
›í©64


	)

215 #ifde‡
__USE_LARGEFILE64


216 
	$›í©64
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

217 
	`__n⁄nuŒ
 ((2));

226 #i‚de‡
__USE_FILE_OFFSET64


227 
	$¸ót
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

229 #ifde‡
__REDIRECT


230 
	`__REDIRECT
 (
¸ót
, (c⁄° *
__fûe
, 
mode_t
 
__mode
),

231 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

233 
	#¸ót
 
¸ót64


	)

236 #ifde‡
__USE_LARGEFILE64


237 
	$¸ót64
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

240 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

241 && !
deföed
 
__USE_POSIX
))

250 
	#F_ULOCK
 0

	)

251 
	#F_LOCK
 1

	)

252 
	#F_TLOCK
 2

	)

253 
	#F_TEST
 3

	)

255 #i‚de‡
__USE_FILE_OFFSET64


256 
	`lockf
 (
__fd
, 
__cmd
, 
off_t
 
__Àn
);

258 #ifde‡
__REDIRECT


259 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

261 
	#lockf
 
lockf64


	)

264 #ifde‡
__USE_LARGEFILE64


265 
	`lockf64
 (
__fd
, 
__cmd
, 
off64_t
 
__Àn
);

269 #ifde‡
__USE_XOPEN2K


272 #i‚de‡
__USE_FILE_OFFSET64


273 
	$posix_Ádvi£
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
,

274 
__advi£
Ë
__THROW
;

276 #ifde‡
__REDIRECT_NTH


277 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

278 
__off64_t
 
__Àn
, 
__advi£
),

279 
posix_Ádvi£64
);

281 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

284 #ifde‡
__USE_LARGEFILE64


285 
	$posix_Ádvi£64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
,

286 
__advi£
Ë
__THROW
;

294 #i‚de‡
__USE_FILE_OFFSET64


295 
	`posix_ÁŒoˇã
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
);

297 #ifde‡
__REDIRECT


298 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

299 
__off64_t
 
__Àn
),

300 
posix_ÁŒoˇã64
);

302 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

305 #ifde‡
__USE_LARGEFILE64


306 
	`posix_ÁŒoˇã64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
);

312 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
 \

313 && 
deföed
 
__va_¨g_∑ck_Àn


314 
	~<bôs/f˙é2.h
>

317 
__END_DECLS


	@/usr/include/fnmatch.h

18 #i‚def 
_FNMATCH_H


19 
	#_FNMATCH_H
 1

	)

21 #ifdef 
__˝lu•lus


27 #unde‡
FNM_PATHNAME


28 #unde‡
FNM_NOESCAPE


29 #unde‡
FNM_PERIOD


32 
	#FNM_PATHNAME
 (1 << 0Ë

	)

33 
	#FNM_NOESCAPE
 (1 << 1Ë

	)

34 
	#FNM_PERIOD
 (1 << 2Ë

	)

36 #i‡!
deföed
 
_POSIX_C_SOURCE
 || _POSIX_C_SOURCE < 2 || deföed 
_GNU_SOURCE


37 
	#FNM_FILE_NAME
 
FNM_PATHNAME


	)

38 
	#FNM_LEADING_DIR
 (1 << 3Ë

	)

39 
	#FNM_CASEFOLD
 (1 << 4Ë

	)

40 
	#FNM_EXTMATCH
 (1 << 5Ë

	)

44 
	#FNM_NOMATCH
 1

	)

50 #ifde‡
_XOPEN_SOURCE


51 
	#FNM_NOSYS
 (-1)

	)

56 
‚m©ch
 (c⁄° *
__∑âîn
, c⁄° *
__«me
, 
__Êags
);

58 #ifdef 
__˝lu•lus


	@/usr/include/grp.h

22 #i‚def 
_GRP_H


23 
	#_GRP_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 
	#__√ed_size_t


	)

32 
	~<°ddef.h
>

36 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K
Ë&& !deföed 
__gid_t_deföed


37 
__gid_t
 
	tgid_t
;

38 
	#__gid_t_deföed


	)

42 
	sgroup


44 *
	mgr_«me
;

45 *
	mgr_∑sswd
;

46 
__gid_t
 
	mgr_gid
;

47 **
	mgr_mem
;

51 #ifde‡
__USE_MISC


52 
	~<bôs/ty≥s/FILE.h
>

56 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


61 
£tgª¡
 ();

67 
ídgª¡
 ();

73 
group
 *
gëgª¡
 ();

76 #ifdef 
__USE_MISC


83 
group
 *
fgëgª¡
 (
FILE
 *
__°ªam
);

86 #ifde‡
__USE_GNU


93 
putgª¡
 (c⁄° 
group
 *
__ª°ri˘
 
__p
,

94 
FILE
 *
__ª°ri˘
 
__f
);

101 
group
 *
gëgrgid
 (
__gid_t
 
__gid
);

107 
group
 *
gëg∫am
 (c⁄° *
__«me
);

109 #ifde‡
__USE_POSIX


111 #ifde‡
__USE_MISC


114 
	#NSS_BUFLEN_GROUP
 1024

	)

130 #ifde‡
__USE_GNU


131 
gëgª¡_r
 (
group
 *
__ª°ri˘
 
__ªsu…buf
,

132 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

133 
group
 **
__ª°ri˘
 
__ªsu…
);

140 
gëgrgid_r
 (
__gid_t
 
__gid
, 
group
 *
__ª°ri˘
 
__ªsu…buf
,

141 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

142 
group
 **
__ª°ri˘
 
__ªsu…
);

148 
gëg∫am_r
 (c⁄° *
__ª°ri˘
 
__«me
,

149 
group
 *
__ª°ri˘
 
__ªsu…buf
,

150 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

151 
group
 **
__ª°ri˘
 
__ªsu…
);

153 #ifdef 
__USE_MISC


161 
fgëgª¡_r
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

162 
group
 *
__ª°ri˘
 
__ªsu…buf
,

163 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

164 
group
 **
__ª°ri˘
 
__ªsu…
);

170 #ifdef 
__USE_MISC


172 
	#__√ed_size_t


	)

173 
	~<°ddef.h
>

176 
	$£tgroups
 (
size_t
 
__n
, c⁄° 
__gid_t
 *
__groups
Ë
__THROW
;

186 
	`gëgrou∂i°
 (c⁄° *
__u£r
, 
__gid_t
 
__group
,

187 
__gid_t
 *
__groups
, *
__ngroups
);

197 
	`öôgroups
 (c⁄° *
__u£r
, 
__gid_t
 
__group
);

201 
__END_DECLS


	@/usr/include/iconv.h

18 #i‚de‡
_ICONV_H


19 
	#_ICONV_H
 1

	)

21 
	~<„©uªs.h
>

22 
	#__√ed_size_t


	)

23 
	~<°ddef.h
>

26 
__BEGIN_DECLS


29 *
	tic⁄v_t
;

37 
ic⁄v_t
 
ic⁄v_›í
 (c⁄° *
__tocode
, c⁄° *
__‰omcode
);

42 
size_t
 
ic⁄v
 (
ic⁄v_t
 
__cd
, **
__ª°ri˘
 
__öbuf
,

43 
size_t
 *
__ª°ri˘
 
__öbyã¶e·
,

44 **
__ª°ri˘
 
__outbuf
,

45 
size_t
 *
__ª°ri˘
 
__outbyã¶e·
);

51 
ic⁄v_˛o£
 (
ic⁄v_t
 
__cd
);

53 
	g__END_DECLS


	@/usr/include/inttypes.h

22 #i‚de‡
_INTTYPES_H


23 
	#_INTTYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<°döt.h
>

30 #i‚de‡
____gwch¨_t_deföed


31 #ifde‡
__˝lu•lus


32 
	#__gwch¨_t
 
wch¨_t


	)

33 #ñi‡
deföed
 
__WCHAR_TYPE__


34 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

36 
	#__√ed_wch¨_t


	)

37 
	~<°ddef.h
>

38 
wch¨_t
 
	t__gwch¨_t
;

40 
	#____gwch¨_t_deföed
 1

	)

43 #i‡
__WORDSIZE
 == 64

44 
	#__PRI64_PREFIX
 "l"

	)

45 
	#__PRIPTR_PREFIX
 "l"

	)

47 
	#__PRI64_PREFIX
 "Œ"

	)

48 
	#__PRIPTR_PREFIX


	)

54 
	#PRId8
 "d"

	)

55 
	#PRId16
 "d"

	)

56 
	#PRId32
 "d"

	)

57 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

59 
	#PRIdLEAST8
 "d"

	)

60 
	#PRIdLEAST16
 "d"

	)

61 
	#PRIdLEAST32
 "d"

	)

62 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

64 
	#PRIdFAST8
 "d"

	)

65 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

66 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

67 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIi8
 "i"

	)

71 
	#PRIi16
 "i"

	)

72 
	#PRIi32
 "i"

	)

73 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

75 
	#PRIiLEAST8
 "i"

	)

76 
	#PRIiLEAST16
 "i"

	)

77 
	#PRIiLEAST32
 "i"

	)

78 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

80 
	#PRIiFAST8
 "i"

	)

81 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

82 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

83 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIo8
 "o"

	)

87 
	#PRIo16
 "o"

	)

88 
	#PRIo32
 "o"

	)

89 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

91 
	#PRIoLEAST8
 "o"

	)

92 
	#PRIoLEAST16
 "o"

	)

93 
	#PRIoLEAST32
 "o"

	)

94 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

96 
	#PRIoFAST8
 "o"

	)

97 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

98 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

99 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIu8
 "u"

	)

103 
	#PRIu16
 "u"

	)

104 
	#PRIu32
 "u"

	)

105 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

107 
	#PRIuLEAST8
 "u"

	)

108 
	#PRIuLEAST16
 "u"

	)

109 
	#PRIuLEAST32
 "u"

	)

110 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

112 
	#PRIuFAST8
 "u"

	)

113 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

114 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

115 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIx8
 "x"

	)

119 
	#PRIx16
 "x"

	)

120 
	#PRIx32
 "x"

	)

121 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

123 
	#PRIxLEAST8
 "x"

	)

124 
	#PRIxLEAST16
 "x"

	)

125 
	#PRIxLEAST32
 "x"

	)

126 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

128 
	#PRIxFAST8
 "x"

	)

129 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

130 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

131 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIX8
 "X"

	)

135 
	#PRIX16
 "X"

	)

136 
	#PRIX32
 "X"

	)

137 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

139 
	#PRIXLEAST8
 "X"

	)

140 
	#PRIXLEAST16
 "X"

	)

141 
	#PRIXLEAST32
 "X"

	)

142 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

144 
	#PRIXFAST8
 "X"

	)

145 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

146 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

147 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

151 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

152 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

153 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

154 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

155 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

156 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

160 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

161 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

162 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

163 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

164 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

165 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

171 
	#SCNd8
 "hhd"

	)

172 
	#SCNd16
 "hd"

	)

173 
	#SCNd32
 "d"

	)

174 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

176 
	#SCNdLEAST8
 "hhd"

	)

177 
	#SCNdLEAST16
 "hd"

	)

178 
	#SCNdLEAST32
 "d"

	)

179 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

181 
	#SCNdFAST8
 "hhd"

	)

182 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

183 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

184 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

187 
	#SCNi8
 "hhi"

	)

188 
	#SCNi16
 "hi"

	)

189 
	#SCNi32
 "i"

	)

190 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

192 
	#SCNiLEAST8
 "hhi"

	)

193 
	#SCNiLEAST16
 "hi"

	)

194 
	#SCNiLEAST32
 "i"

	)

195 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

197 
	#SCNiFAST8
 "hhi"

	)

198 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

199 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

200 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

203 
	#SCNu8
 "hhu"

	)

204 
	#SCNu16
 "hu"

	)

205 
	#SCNu32
 "u"

	)

206 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

208 
	#SCNuLEAST8
 "hhu"

	)

209 
	#SCNuLEAST16
 "hu"

	)

210 
	#SCNuLEAST32
 "u"

	)

211 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

213 
	#SCNuFAST8
 "hhu"

	)

214 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

215 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

216 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

219 
	#SCNo8
 "hho"

	)

220 
	#SCNo16
 "ho"

	)

221 
	#SCNo32
 "o"

	)

222 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

224 
	#SCNoLEAST8
 "hho"

	)

225 
	#SCNoLEAST16
 "ho"

	)

226 
	#SCNoLEAST32
 "o"

	)

227 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

229 
	#SCNoFAST8
 "hho"

	)

230 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

231 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

232 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

235 
	#SCNx8
 "hhx"

	)

236 
	#SCNx16
 "hx"

	)

237 
	#SCNx32
 "x"

	)

238 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

240 
	#SCNxLEAST8
 "hhx"

	)

241 
	#SCNxLEAST16
 "hx"

	)

242 
	#SCNxLEAST32
 "x"

	)

243 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

245 
	#SCNxFAST8
 "hhx"

	)

246 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

247 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

248 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

252 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

253 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

254 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

255 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

256 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

259 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

260 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

261 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

262 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

263 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

266 
	g__BEGIN_DECLS


268 #i‡
__WORDSIZE
 == 64

273 
	mquŸ
;

274 
	mªm
;

275 } 
	timaxdiv_t
;

282 
__exãnsi⁄__
 
	mquŸ
;

283 
__exãnsi⁄__
 
	mªm
;

284 } 
	timaxdiv_t
;

290 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

293 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

294 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

297 
ötmax_t
 
	$°πoimax
 (c⁄° *
__ª°ri˘
 
__≈å
,

298 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

301 
uötmax_t
 
	$°πoumax
 (c⁄° *
__ª°ri˘
 
__≈å
,

302 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

305 
ötmax_t
 
	$wc°oimax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

306 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

307 
__THROW
;

310 
uötmax_t
 
	$wc°oumax
 (c⁄° 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

311 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

312 
__THROW
;

314 
__END_DECLS


	@/usr/include/limits.h

22 #i‚de‡
_LIBC_LIMITS_H_


23 
	#_LIBC_LIMITS_H_
 1

	)

25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

32 
	#MB_LEN_MAX
 16

	)

37 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

42 #i‚de‡
_LIMITS_H


43 
	#_LIMITS_H
 1

	)

45 
	~<bôs/w‹dsize.h
>

54 
	#CHAR_BIT
 8

	)

57 
	#SCHAR_MIN
 (-128)

	)

58 
	#SCHAR_MAX
 127

	)

61 
	#UCHAR_MAX
 255

	)

64 #ifde‡
__CHAR_UNSIGNED__


65 
	#CHAR_MIN
 0

	)

66 
	#CHAR_MAX
 
UCHAR_MAX


	)

68 
	#CHAR_MIN
 
SCHAR_MIN


	)

69 
	#CHAR_MAX
 
SCHAR_MAX


	)

73 
	#SHRT_MIN
 (-32768)

	)

74 
	#SHRT_MAX
 32767

	)

77 
	#USHRT_MAX
 65535

	)

80 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

81 
	#INT_MAX
 2147483647

	)

84 
	#UINT_MAX
 4294967295U

	)

87 #i‡
__WORDSIZE
 == 64

88 
	#LONG_MAX
 9223372036854775807L

	)

90 
	#LONG_MAX
 2147483647L

	)

92 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

95 #i‡
__WORDSIZE
 == 64

96 
	#ULONG_MAX
 18446744073709551615UL

	)

98 
	#ULONG_MAX
 4294967295UL

	)

101 #ifde‡
__USE_ISOC99


104 
	#LLONG_MAX
 9223372036854775807LL

	)

105 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

108 
	#ULLONG_MAX
 18446744073709551615ULL

	)

122 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


124 #ö˛ude_√xà<
limôs
.
h
>

130 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


131 #i‚de‡
LLONG_MIN


132 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

134 #i‚de‡
LLONG_MAX


135 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

137 #i‚de‡
ULLONG_MAX


138 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

145 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

146 #i‚de‡
CHAR_WIDTH


147 
	#CHAR_WIDTH
 8

	)

149 #i‚de‡
SCHAR_WIDTH


150 
	#SCHAR_WIDTH
 8

	)

152 #i‚de‡
UCHAR_WIDTH


153 
	#UCHAR_WIDTH
 8

	)

155 #i‚de‡
SHRT_WIDTH


156 
	#SHRT_WIDTH
 16

	)

158 #i‚de‡
USHRT_WIDTH


159 
	#USHRT_WIDTH
 16

	)

161 #i‚de‡
INT_WIDTH


162 
	#INT_WIDTH
 32

	)

164 #i‚de‡
UINT_WIDTH


165 
	#UINT_WIDTH
 32

	)

167 #i‚de‡
LONG_WIDTH


168 
	#LONG_WIDTH
 
__WORDSIZE


	)

170 #i‚de‡
ULONG_WIDTH


171 
	#ULONG_WIDTH
 
__WORDSIZE


	)

173 #i‚de‡
LLONG_WIDTH


174 
	#LLONG_WIDTH
 64

	)

176 #i‚de‡
ULLONG_WIDTH


177 
	#ULLONG_WIDTH
 64

	)

184 #i‡
__GLIBC_USE
 (
ISOC2X
)

185 #i‚de‡
BOOL_MAX


186 
	#BOOL_MAX
 1

	)

188 #i‚de‡
BOOL_WIDTH


189 
	#BOOL_WIDTH
 1

	)

193 #ifdef 
__USE_POSIX


195 
	~<bôs/posix1_lim.h
>

198 #ifdef 
__USE_POSIX2


199 
	~<bôs/posix2_lim.h
>

202 #ifdef 
__USE_XOPEN


203 
	~<bôs/x›í_lim.h
>

	@/usr/include/netdb.h

22 #i‚def 
_NETDB_H


23 
	#_NETDB_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<√töë/ö.h
>

28 
	~<bôs/°döt-uöä.h
>

29 #ifde‡
__USE_MISC


32 
	~<Ωc/√tdb.h
>

35 #ifde‡
__USE_GNU


36 
	~<bôs/ty≥s/sigevít_t.h
>

37 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

40 
	~<bôs/√tdb.h
>

43 
	#_PATH_HEQUIV
 "/ëc/ho°s.equiv"

	)

44 
	#_PATH_HOSTS
 "/ëc/ho°s"

	)

45 
	#_PATH_NETWORKS
 "/ëc/√tw‹ks"

	)

46 
	#_PATH_NSSWITCH_CONF
 "/ëc/nsswôch.c⁄f"

	)

47 
	#_PATH_PROTOCOLS
 "/ëc/¥Ÿocﬁs"

	)

48 
	#_PATH_SERVICES
 "/ëc/£rvi˚s"

	)

51 
	g__BEGIN_DECLS


53 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


56 
	#h_î∫o
 (*
	`__h_î∫o_loˇti⁄
 ())

	)

59 *
	$__h_î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

63 
	#HOST_NOT_FOUND
 1

	)

64 
	#TRY_AGAIN
 2

	)

66 
	#NO_RECOVERY
 3

	)

68 
	#NO_DATA
 4

	)

71 #ifde‡
__USE_MISC


72 
	#NETDB_INTERNAL
 -1

	)

73 
	#NETDB_SUCCESS
 0

	)

74 
	#NO_ADDRESS
 
NO_DATA


	)

77 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_XOPEN_EXTENDED


79 
	#IPPORT_RESERVED
 1024

	)

82 #ifde‡
__USE_GNU


84 
	#SCOPE_DELIMITER
 '%'

	)

87 #ifde‡
__USE_MISC


90 
	$hîr‹
 (c⁄° *
__°r
Ë
__THROW
;

93 c⁄° *
	$h°ªº‹
 (
__îr_num
Ë
__THROW
;

98 
	sho°ít


100 *
h_«me
;

101 **
h_Æü£s
;

102 
h_addπy≥
;

103 
h_Àngth
;

104 **
h_addr_li°
;

105 #ifde‡
__USE_MISC


106 
	#h_addr
 
h_addr_li°
[0]

	)

115 
	`£tho°ít
 (
__°ay_›í
);

121 
	`ídho°ít
 ();

128 
ho°ít
 *
	`gëho°ít
 ();

135 
ho°ít
 *
	`gëho°byaddr
 (c⁄° *
__addr
, 
__sockÀn_t
 
__Àn
,

136 
__ty≥
);

142 
ho°ít
 *
	`gëho°by«me
 (c⁄° *
__«me
);

144 #ifde‡
__USE_MISC


153 
ho°ít
 *
	`gëho°by«me2
 (c⁄° *
__«me
, 
__af
);

165 
	`gëho°ít_r
 (
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

166 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

167 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

168 *
__ª°ri˘
 
__h_î∫›
);

170 
	`gëho°byaddr_r
 (c⁄° *
__ª°ri˘
 
__addr
, 
__sockÀn_t
 
__Àn
,

171 
__ty≥
,

172 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

173 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

174 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

175 *
__ª°ri˘
 
__h_î∫›
);

177 
	`gëho°by«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

178 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

179 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

180 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

181 *
__ª°ri˘
 
__h_î∫›
);

183 
	`gëho°by«me2_r
 (c⁄° *
__ª°ri˘
 
__«me
, 
__af
,

184 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

185 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

186 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

187 *
__ª°ri˘
 
__h_î∫›
);

196 
	`£äëít
 (
__°ay_›í
);

202 
	`íd√ã¡
 ();

209 
√ã¡
 *
	`gë√ã¡
 ();

216 
√ã¡
 *
	`gë√tbyaddr
 (
uöt32_t
 
__√t
, 
__ty≥
);

222 
√ã¡
 *
	`gë√tby«me
 (c⁄° *
__«me
);

224 #ifdef 
__USE_MISC


235 
	`gë√ã¡_r
 (
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

236 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

237 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

238 *
__ª°ri˘
 
__h_î∫›
);

240 
	`gë√tbyaddr_r
 (
uöt32_t
 
__√t
, 
__ty≥
,

241 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

242 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

243 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

244 *
__ª°ri˘
 
__h_î∫›
);

246 
	`gë√tby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

247 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

248 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

249 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

250 *
__ª°ri˘
 
__h_î∫›
);

255 
	s£rvít


257 *
s_«me
;

258 **
s_Æü£s
;

259 
s_p‹t
;

260 *
s_¥Ÿo
;

268 
	`£t£rvít
 (
__°ay_›í
);

274 
	`íd£rvít
 ();

281 
£rvít
 *
	`gë£rvít
 ();

288 
£rvít
 *
	`gë£rvby«me
 (c⁄° *
__«me
, c⁄° *
__¥Ÿo
);

295 
£rvít
 *
	`gë£rvbyp‹t
 (
__p‹t
, c⁄° *
__¥Ÿo
);

298 #ifdef 
__USE_MISC


306 
	`gë£rvít_r
 (
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

307 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

308 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

310 
	`gë£rvby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

311 c⁄° *
__ª°ri˘
 
__¥Ÿo
,

312 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

313 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

314 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

316 
	`gë£rvbyp‹t_r
 (
__p‹t
, c⁄° *
__ª°ri˘
 
__¥Ÿo
,

317 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

318 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

319 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

324 
	s¥Ÿ€¡


326 *
p_«me
;

327 **
p_Æü£s
;

328 
p_¥Ÿo
;

336 
	`£çrŸ€¡
 (
__°ay_›í
);

342 
	`íd¥Ÿ€¡
 ();

349 
¥Ÿ€¡
 *
	`gë¥Ÿ€¡
 ();

355 
¥Ÿ€¡
 *
	`gë¥Ÿoby«me
 (c⁄° *
__«me
);

361 
¥Ÿ€¡
 *
	`gë¥Ÿobynumbî
 (
__¥Ÿo
);

364 #ifdef 
__USE_MISC


372 
	`gë¥Ÿ€¡_r
 (
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

373 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

374 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

376 
	`gë¥Ÿoby«me_r
 (c⁄° *
__ª°ri˘
 
__«me
,

377 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

378 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

379 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

381 
	`gë¥Ÿobynumbî_r
 (
__¥Ÿo
,

382 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

383 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

384 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

393 
	`£äëgª¡
 (c⁄° *
__√tgroup
);

401 
	`íd√tgª¡
 ();

410 
	`gë√tgª¡
 (**
__ª°ri˘
 
__ho°p
,

411 **
__ª°ri˘
 
__u£Ω
,

412 **
__ª°ri˘
 
__domaöp
);

421 
	`ö√tgr
 (c⁄° *
__√tgroup
, c⁄° *
__ho°
,

422 c⁄° *
__u£r
, c⁄° *
__domaö
);

430 
	`gë√tgª¡_r
 (**
__ª°ri˘
 
__ho°p
,

431 **
__ª°ri˘
 
__u£Ω
,

432 **
__ª°ri˘
 
__domaöp
,

433 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
);

437 #ifde‡
__USE_MISC


449 
	`rcmd
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

450 c⁄° *
__ª°ri˘
 
__locu£r
,

451 c⁄° *
__ª°ri˘
 
__ªmu£r
,

452 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

461 
	`rcmd_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

462 c⁄° *
__ª°ri˘
 
__locu£r
,

463 c⁄° *
__ª°ri˘
 
__ªmu£r
,

464 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

465 
ß_Ámûy_t
 
__af
);

477 
	`ªxec
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

478 c⁄° *
__ª°ri˘
 
__«me
,

479 c⁄° *
__ª°ri˘
 
__∑ss
,

480 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

489 
	`ªxec_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

490 c⁄° *
__ª°ri˘
 
__«me
,

491 c⁄° *
__ª°ri˘
 
__∑ss
,

492 c⁄° *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

493 
ß_Ámûy_t
 
__af
);

503 
	`ru£rok
 (c⁄° *
__rho°
, 
__su£r
,

504 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
);

513 
	`ru£rok_af
 (c⁄° *
__rho°
, 
__su£r
,

514 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
,

515 
ß_Ámûy_t
 
__af
);

526 
	`úu£rok
 (
uöt32_t
 
__øddr
, 
__su£r
,

527 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
);

537 
	`úu£rok_af
 (c⁄° *
__øddr
, 
__su£r
,

538 c⁄° *
__ªmu£r
, c⁄° *
__locu£r
,

539 
ß_Ámûy_t
 
__af
);

549 
	`ºesvp‹t
 (*
__Æp‹t
);

558 
	`ºesvp‹t_af
 (*
__Æp‹t
, 
ß_Ámûy_t
 
__af
);

563 #ifde‡
__USE_XOPEN2K


565 
	saddröfo


567 
ai_Êags
;

568 
ai_Ámûy
;

569 
ai_sockty≥
;

570 
ai_¥Ÿocﬁ
;

571 
sockÀn_t
 
ai_addæí
;

572 
sockaddr
 *
ai_addr
;

573 *
ai_ˇn⁄«me
;

574 
addröfo
 *
ai_√xt
;

577 #ifde‡
__USE_GNU


579 
	sgaicb


581 c⁄° *
¨_«me
;

582 c⁄° *
¨_£rvi˚
;

583 c⁄° 
addröfo
 *
¨_ªque°
;

584 
addröfo
 *
¨_ªsu…
;

586 
__ªtu∫
;

587 
__glibc_ª£rved
[5];

591 
	#GAI_WAIT
 0

	)

592 
	#GAI_NOWAIT
 1

	)

596 
	#AI_PASSIVE
 0x0001

	)

597 
	#AI_CANONNAME
 0x0002

	)

598 
	#AI_NUMERICHOST
 0x0004

	)

599 
	#AI_V4MAPPED
 0x0008

	)

600 
	#AI_ALL
 0x0010

	)

601 
	#AI_ADDRCONFIG
 0x0020

	)

603 #ifde‡
__USE_GNU


604 
	#AI_IDN
 0x0040

	)

607 
	#AI_CANONIDN
 0x0080

	)

608 
	#AI_IDN_ALLOW_UNASSIGNED
 \

609 
	`__glibc_ma¸o_w¨nög
 ("AI_IDN_ALLOW_UNASSIGNED i†dïªˇãd"Ë0x0100

	)

610 
	#AI_IDN_USE_STD3_ASCII_RULES
 \

611 
	`__glibc_ma¸o_w¨nög
 ("AI_IDN_USE_STD3_ASCII_RULES i†dïªˇãd"Ë0x0200

	)

613 
	#AI_NUMERICSERV
 0x0400

	)

616 
	#EAI_BADFLAGS
 -1

	)

617 
	#EAI_NONAME
 -2

	)

618 
	#EAI_AGAIN
 -3

	)

619 
	#EAI_FAIL
 -4

	)

620 
	#EAI_FAMILY
 -6

	)

621 
	#EAI_SOCKTYPE
 -7

	)

622 
	#EAI_SERVICE
 -8

	)

623 
	#EAI_MEMORY
 -10

	)

624 
	#EAI_SYSTEM
 -11

	)

625 
	#EAI_OVERFLOW
 -12

	)

626 #ifde‡
__USE_GNU


627 
	#EAI_NODATA
 -5

	)

628 
	#EAI_ADDRFAMILY
 -9

	)

629 
	#EAI_INPROGRESS
 -100

	)

630 
	#EAI_CANCELED
 -101

	)

631 
	#EAI_NOTCANCELED
 -102

	)

632 
	#EAI_ALLDONE
 -103

	)

633 
	#EAI_INTR
 -104

	)

634 
	#EAI_IDN_ENCODE
 -105

	)

637 #ifde‡
__USE_MISC


638 
	#NI_MAXHOST
 1025

	)

639 
	#NI_MAXSERV
 32

	)

642 
	#NI_NUMERICHOST
 1

	)

643 
	#NI_NUMERICSERV
 2

	)

644 
	#NI_NOFQDN
 4

	)

645 
	#NI_NAMEREQD
 8

	)

646 
	#NI_DGRAM
 16

	)

647 #ifde‡
__USE_GNU


648 
	#NI_IDN
 32

	)

649 
	#NI_IDN_ALLOW_UNASSIGNED
 \

650 
	`__glibc_ma¸o_w¨nög
 ("NI_IDN_ALLOW_UNASSIGNED i†dïªˇãd"Ë64

	)

651 
	#NI_IDN_USE_STD3_ASCII_RULES
 \

652 
	`__glibc_ma¸o_w¨nög
 ("NI_IDN_USE_STD3_ASCII_RULES i†dïªˇãd"Ë128

	)

660 
	`gëaddröfo
 (c⁄° *
__ª°ri˘
 
__«me
,

661 c⁄° *
__ª°ri˘
 
__£rvi˚
,

662 c⁄° 
addröfo
 *
__ª°ri˘
 
__ªq
,

663 
addröfo
 **
__ª°ri˘
 
__∑i
);

666 
	$‰ìaddröfo
 (
addröfo
 *
__ai
Ë
__THROW
;

669 c⁄° *
	$gai_°ªº‹
 (
__ecode
Ë
__THROW
;

675 
	`gë«meöfo
 (c⁄° 
sockaddr
 *
__ª°ri˘
 
__ß
,

676 
sockÀn_t
 
__ßÀn
, *
__ª°ri˘
 
__ho°
,

677 
sockÀn_t
 
__ho°Àn
, *
__ª°ri˘
 
__£rv
,

678 
sockÀn_t
 
__£rvÀn
, 
__Êags
);

681 #ifde‡
__USE_GNU


690 
	`gëaddröfo_a
 (
__mode
, 
gaicb
 *
__li°
[
__ª°ri˘_¨r
],

691 
__ít
, 
sigevít
 *
__ª°ri˘
 
__sig
);

701 
	`gai_su•íd
 (c⁄° 
gaicb
 *c⁄° 
__li°
[], 
__ít
,

702 c⁄° 
time•ec
 *
__timeout
);

704 #ifde‡
__USE_TIME_BITS64


705 #i‡
	`deföed
(
__REDIRECT
)

706 
	`__REDIRECT
 (
gai_su•íd
, (c⁄° 
gaicb
 *c⁄° 
__li°
[],

707 
__ít
,

708 c⁄° 
time•ec
 *
__timeout
),

709 
__gai_su•íd_time64
);

711 
	#gai_su•íd
 
__gai_su•íd_time64


	)

716 
	$gai_îr‹
 (
gaicb
 *
__ªq
Ë
__THROW
;

719 
	$gai_ˇn˚l
 (
gaicb
 *
__gaicbp
Ë
__THROW
;

722 
__END_DECLS


	@/usr/include/netinet/in.h

18 #i‚def 
_NETINET_IN_H


19 
	#_NETINET_IN_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<bôs/°döt-uöä.h
>

23 
	~<sys/sockë.h
>

24 
	~<bôs/ty≥s.h
>

27 
__BEGIN_DECLS


30 
uöt32_t
 
	tö_addr_t
;

31 
	sö_addr


33 
ö_addr_t
 
	ms_addr
;

37 
	~<bôs/ö.h
>

42 
	mIPPROTO_IP
 = 0,

43 
	#IPPROTO_IP
 
IPPROTO_IP


	)

44 
	mIPPROTO_ICMP
 = 1,

45 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

46 
	mIPPROTO_IGMP
 = 2,

47 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

48 
	mIPPROTO_IPIP
 = 4,

49 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

50 
	mIPPROTO_TCP
 = 6,

51 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

52 
	mIPPROTO_EGP
 = 8,

53 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

54 
	mIPPROTO_PUP
 = 12,

55 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

56 
	mIPPROTO_UDP
 = 17,

57 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

58 
	mIPPROTO_IDP
 = 22,

59 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

60 
	mIPPROTO_TP
 = 29,

61 
	#IPPROTO_TP
 
IPPROTO_TP


	)

62 
	mIPPROTO_DCCP
 = 33,

63 
	#IPPROTO_DCCP
 
IPPROTO_DCCP


	)

64 
	mIPPROTO_IPV6
 = 41,

65 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

66 
	mIPPROTO_RSVP
 = 46,

67 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

68 
	mIPPROTO_GRE
 = 47,

69 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

70 
	mIPPROTO_ESP
 = 50,

71 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

72 
	mIPPROTO_AH
 = 51,

73 
	#IPPROTO_AH
 
IPPROTO_AH


	)

74 
	mIPPROTO_MTP
 = 92,

75 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

76 
	mIPPROTO_BEETPH
 = 94,

77 
	#IPPROTO_BEETPH
 
IPPROTO_BEETPH


	)

78 
	mIPPROTO_ENCAP
 = 98,

79 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

80 
	mIPPROTO_PIM
 = 103,

81 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

82 
	mIPPROTO_COMP
 = 108,

83 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

84 
	mIPPROTO_SCTP
 = 132,

85 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

86 
	mIPPROTO_UDPLITE
 = 136,

87 
	#IPPROTO_UDPLITE
 
IPPROTO_UDPLITE


	)

88 
	mIPPROTO_MPLS
 = 137,

89 
	#IPPROTO_MPLS
 
IPPROTO_MPLS


	)

90 
	mIPPROTO_ETHERNET
 = 143,

91 
	#IPPROTO_ETHERNET
 
IPPROTO_ETHERNET


	)

92 
	mIPPROTO_RAW
 = 255,

93 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

94 
	mIPPROTO_MPTCP
 = 262,

95 
	#IPPROTO_MPTCP
 
IPPROTO_MPTCP


	)

96 
	mIPPROTO_MAX


102 #i‡!
__USE_KERNEL_IPV6_DEFS


105 
	mIPPROTO_HOPOPTS
 = 0,

106 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

107 
	mIPPROTO_ROUTING
 = 43,

108 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

109 
	mIPPROTO_FRAGMENT
 = 44,

110 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

111 
	mIPPROTO_ICMPV6
 = 58,

112 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

113 
	mIPPROTO_NONE
 = 59,

114 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

115 
	mIPPROTO_DSTOPTS
 = 60,

116 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

117 
	mIPPROTO_MH
 = 135

118 
	#IPPROTO_MH
 
IPPROTO_MH


	)

123 
uöt16_t
 
	tö_p‹t_t
;

128 
	mIPPORT_ECHO
 = 7,

129 
	mIPPORT_DISCARD
 = 9,

130 
	mIPPORT_SYSTAT
 = 11,

131 
	mIPPORT_DAYTIME
 = 13,

132 
	mIPPORT_NETSTAT
 = 15,

133 
	mIPPORT_FTP
 = 21,

134 
	mIPPORT_TELNET
 = 23,

135 
	mIPPORT_SMTP
 = 25,

136 
	mIPPORT_TIMESERVER
 = 37,

137 
	mIPPORT_NAMESERVER
 = 42,

138 
	mIPPORT_WHOIS
 = 43,

139 
	mIPPORT_MTP
 = 57,

141 
	mIPPORT_TFTP
 = 69,

142 
	mIPPORT_RJE
 = 77,

143 
	mIPPORT_FINGER
 = 79,

144 
	mIPPORT_TTYLINK
 = 87,

145 
	mIPPORT_SUPDUP
 = 95,

148 
	mIPPORT_EXECSERVER
 = 512,

149 
	mIPPORT_LOGINSERVER
 = 513,

150 
	mIPPORT_CMDSERVER
 = 514,

151 
	mIPPORT_EFSSERVER
 = 520,

154 
	mIPPORT_BIFFUDP
 = 512,

155 
	mIPPORT_WHOSERVER
 = 513,

156 
	mIPPORT_ROUTESERVER
 = 520,

159 
	mIPPORT_RESERVED
 = 1024,

162 
	mIPPORT_USERRESERVED
 = 5000

170 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

171 
	#IN_CLASSA_NET
 0xff000000

	)

172 
	#IN_CLASSA_NSHIFT
 24

	)

173 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

174 
	#IN_CLASSA_MAX
 128

	)

176 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

177 
	#IN_CLASSB_NET
 0xffff0000

	)

178 
	#IN_CLASSB_NSHIFT
 16

	)

179 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

180 
	#IN_CLASSB_MAX
 65536

	)

182 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

183 
	#IN_CLASSC_NET
 0xffffff00

	)

184 
	#IN_CLASSC_NSHIFT
 8

	)

185 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

187 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

188 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

190 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

191 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

194 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

196 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

198 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

201 
	#INADDR_DUMMY
 ((
ö_addr_t
Ë0xc0000008)

	)

204 
	#IN_LOOPBACKNET
 127

	)

206 #i‚de‡
INADDR_LOOPBACK


207 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

211 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

212 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

213 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

214 
	#INADDR_ALLSNOOPERS_GROUP
 ((
ö_addr_t
Ë0xe000006aË

	)

215 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

217 #i‡!
__USE_KERNEL_IPV6_DEFS


219 
	sö6_addr


223 
uöt8_t
 
	m__u6_addr8
[16];

224 
uöt16_t
 
	m__u6_addr16
[8];

225 
uöt32_t
 
	m__u6_addr32
[4];

226 } 
	m__ö6_u
;

227 
	#s6_addr
 
__ö6_u
.
__u6_addr8


	)

228 #ifde‡
__USE_MISC


229 
	#s6_addr16
 
__ö6_u
.
__u6_addr16


	)

230 
	#s6_addr32
 
__ö6_u
.
__u6_addr32


	)

235 c⁄° 
ö6_addr
 
ö6addr_™y
;

236 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

237 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

238 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

240 
	#INET_ADDRSTRLEN
 16

	)

241 
	#INET6_ADDRSTRLEN
 46

	)

245 
	ssockaddr_ö


247 
__SOCKADDR_COMMON
 (
sö_
);

248 
ö_p‹t_t
 
	msö_p‹t
;

249 
ö_addr
 
	msö_addr
;

252 
	msö_zîo
[ (
sockaddr
)

253 - 
__SOCKADDR_COMMON_SIZE


254 -  (
ö_p‹t_t
)

255 -  (
ö_addr
)];

258 #i‡!
__USE_KERNEL_IPV6_DEFS


260 
	ssockaddr_ö6


262 
__SOCKADDR_COMMON
 (
sö6_
);

263 
ö_p‹t_t
 
	msö6_p‹t
;

264 
uöt32_t
 
	msö6_Êowöfo
;

265 
ö6_addr
 
	msö6_addr
;

266 
uöt32_t
 
	msö6_sc›e_id
;

270 #ifde‡
__USE_MISC


272 
	sù_mªq


275 
ö_addr
 
	mimr_mu…üddr
;

278 
ö_addr
 
	mimr_öãrÁ˚
;

281 
	sù_mªq_sour˚


284 
ö_addr
 
	mimr_mu…üddr
;

287 
ö_addr
 
	mimr_öãrÁ˚
;

290 
ö_addr
 
	mimr_sour˚addr
;

294 #i‡!
__USE_KERNEL_IPV6_DEFS


296 
	sùv6_mªq


299 
ö6_addr
 
	mùv6mr_mu…üddr
;

302 
	mùv6mr_öãrÁ˚
;

306 #ifde‡
__USE_MISC


308 
	sgroup_ªq


311 
uöt32_t
 
	mgr_öãrÁ˚
;

314 
sockaddr_°‹age
 
	mgr_group
;

317 
	sgroup_sour˚_ªq


320 
uöt32_t
 
	mg§_öãrÁ˚
;

323 
sockaddr_°‹age
 
	mg§_group
;

326 
sockaddr_°‹age
 
	mg§_sour˚
;

331 
	sù_msfûãr


334 
ö_addr
 
	mimsf_mu…üddr
;

337 
ö_addr
 
	mimsf_öãrÁ˚
;

340 
uöt32_t
 
	mimsf_fmode
;

343 
uöt32_t
 
	mimsf_num§c
;

345 
ö_addr
 
	mimsf_¶i°
[1];

348 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

349 -  (
ö_addr
) \

350 + (
num§c
Ë*  (
ö_addr
))

	)

352 
	sgroup_fûãr


355 
uöt32_t
 
	mgf_öãrÁ˚
;

358 
sockaddr_°‹age
 
	mgf_group
;

361 
uöt32_t
 
	mgf_fmode
;

364 
uöt32_t
 
	mgf_num§c
;

366 
sockaddr_°‹age
 
	mgf_¶i°
[1];

369 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

370 -  (
sockaddr_°‹age
) \

371 + ((
num§c
) \

372 *  (
sockaddr_°‹age
)))

	)

382 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

383 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

384 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

385 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

386 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

387 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

388 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

390 
	~<ídün.h
>

393 
	~<bôs/byãsw≠.h
>

394 
	~<bôs/uöä-idítôy.h
>

396 #ifde‡
__OPTIMIZE__


400 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


403 
	#¡ohl
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

404 
	#¡ohs
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

405 
	#ht⁄l
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

406 
	#ht⁄s
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

408 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


409 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

410 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

411 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

412 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

417 #ifde‡
__GNUC__


418 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

419 (
__exãnsi⁄__
 \

420 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

421 
__a
->
__ö6_u
.
__u6_addr32
[0] == 0 \

422 && 
__a
->
__ö6_u
.
__u6_addr32
[1] == 0 \

423 && 
__a
->
__ö6_u
.
__u6_addr32
[2] == 0 \

424 && 
__a
->
__ö6_u
.
__u6_addr32
[3] =0; 
	}
}))

	)

426 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

427 (
__exãnsi⁄__
 \

428 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

429 
__a
->
__ö6_u
.
__u6_addr32
[0] == 0 \

430 && 
__a
->
__ö6_u
.
__u6_addr32
[1] == 0 \

431 && 
__a
->
__ö6_u
.
__u6_addr32
[2] == 0 \

432 && 
__a
->
__ö6_u
.
__u6_addr32
[3] =
	`ht⁄l
 (1); }))

	)

434 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

435 (
__exãnsi⁄__
 \

436 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

437 (
__a
->
__ö6_u
.
__u6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„800000); }))

	)

439 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

440 (
__exãnsi⁄__
 \

441 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

442 (
__a
->
__ö6_u
.
__u6_addr32
[0] & 
	`ht⁄l
 (0xffc00000)Ë=ht⁄»(0x„c00000); }))

	)

444 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

445 (
__exãnsi⁄__
 \

446 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

447 
__a
->
__ö6_u
.
__u6_addr32
[0] == 0 \

448 && 
__a
->
__ö6_u
.
__u6_addr32
[1] == 0 \

449 && 
__a
->
__ö6_u
.
__u6_addr32
[2] =
	`ht⁄l
 (0xffff); }))

	)

451 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

452 (
__exãnsi⁄__
 \

453 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

454 
__a
->
__ö6_u
.
__u6_addr32
[0] == 0 \

455 && 
__a
->
__ö6_u
.
__u6_addr32
[1] == 0 \

456 && 
__a
->
__ö6_u
.
__u6_addr32
[2] == 0 \

457 && 
	`¡ohl
 (
__a
->
__ö6_u
.
__u6_addr32
[3]Ë> 1; }))

	)

459 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

460 (
__exãnsi⁄__
 \

461 ({ c⁄° 
ö6_addr
 *
__a
 = (c⁄° ö6_add∏*Ë(
a
); \

462 c⁄° 
ö6_addr
 *
__b
 = (c⁄° ö6_add∏*Ë(
b
); \

463 
__a
->
__ö6_u
.
__u6_addr32
[0] =
__b
->__in6_u.__u6_addr32[0] \

464 && 
__a
->
__ö6_u
.
__u6_addr32
[1] =
__b
->__in6_u.__u6_addr32[1] \

465 && 
__a
->
__ö6_u
.
__u6_addr32
[2] =
__b
->__in6_u.__u6_addr32[2] \

466 && 
__a
->
__ö6_u
.
__u6_addr32
[3] =
__b
->__ö6_u.__u6_addr32[3]; }))

	)

468 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

469 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

470 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

471 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

472 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =0)

	)

474 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

475 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

476 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

477 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

478 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

480 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

481 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

482 =
	`ht⁄l
 (0x„800000))

	)

484 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

485 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

486 =
	`ht⁄l
 (0x„c00000))

	)

488 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

489 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

490 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

491 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

493 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

494 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

495 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

496 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0) \

497 && (
	`¡ohl
 (((c⁄° 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

499 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

500 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] =((c⁄° uöt32_à*Ë(
b
))[0]) \

501 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] =((c⁄° uöt32_à*Ë(
b
))[1]) \

502 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =((c⁄° uöt32_à*Ë(
b
))[2]) \

503 && (((c⁄° 
uöt32_t
 *Ë(
a
))[3] =((c⁄° uöt32_à*Ë(
b
))[3]))

	)

506 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((c⁄° 
uöt8_t
 *Ë◊))[0] =0xff)

	)

508 #ifde‡
__USE_MISC


510 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

513 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

514 
__THROW
;

518 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

519 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

520 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

522 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

523 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

524 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

526 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

527 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

528 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

530 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

531 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

532 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

534 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

535 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

536 && ((((c⁄° 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

539 #ifde‡
__USE_GNU


540 
cmsghdr
;

542 #i‡!
__USE_KERNEL_IPV6_DEFS


544 
	sö6_pktöfo


546 
ö6_addr
 
ùi6_addr
;

547 
ùi6_ifödex
;

551 
	sù6_mtuöfo


553 
sockaddr_ö6
 
ù6m_addr
;

554 
uöt32_t
 
ù6m_mtu
;

559 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

560 
__THROW
 
__©åibuã_dïªˇãd__
;

561 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

562 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

563 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

564 c⁄° 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

565 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

566 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

567 
__mu…x
, 
__∂usy
)

568 
__THROW
 
__©åibuã_dïªˇãd__
;

569 
	$öë6_›ti⁄_√xt
 (c⁄° 
cmsghdr
 *
__cmsg
,

570 
uöt8_t
 **
__çåp
)

571 
__THROW
 
__©åibuã_dïªˇãd__
;

572 
	$öë6_›ti⁄_föd
 (c⁄° 
cmsghdr
 *
__cmsg
,

573 
uöt8_t
 **
__çåp
, 
__ty≥
)

574 
__THROW
 
__©åibuã_dïªˇãd__
;

578 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

579 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

580 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

581 **
__d©abuÂ
Ë
__THROW
;

582 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

583 
__THROW
;

584 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

585 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

586 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

587 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

588 **
__d©abuÂ
Ë
__THROW
;

589 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

590 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

591 **
__d©abuÂ
Ë
__THROW
;

592 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

593 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

597 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

598 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

599 
__£gmíts
Ë
__THROW
;

600 
	$öë6_πh_add
 (*
__bp
, c⁄° 
ö6_addr
 *
__addr
Ë
__THROW
;

601 
	$öë6_πh_ªvî£
 (c⁄° *
__ö
, *
__out
Ë
__THROW
;

602 
	$öë6_πh_£gmíts
 (c⁄° *
__bp
Ë
__THROW
;

603 
ö6_addr
 *
	$öë6_πh_gëaddr
 (c⁄° *
__bp
, 
__ödex
)

604 
__THROW
;

610 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

611 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

612 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

613 
__THROW
;

616 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

617 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

618 
uöt32_t
 
__num§c
,

619 c⁄° 
ö_addr
 *
__¶i°
)

620 
__THROW
;

624 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

625 c⁄° 
sockaddr
 *
__group
,

626 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

627 
uöt32_t
 *
__num§c
,

628 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

631 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

632 c⁄° 
sockaddr
 *
__group
,

633 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

634 
uöt32_t
 
__num§c
,

635 c⁄° 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

638 
__END_DECLS


	@/usr/include/netinet/tcp.h

32 #i‚de‡
_NETINET_TCP_H


33 
	#_NETINET_TCP_H
 1

	)

35 
	~<„©uªs.h
>

40 
	#TCP_NODELAY
 1

	)

41 
	#TCP_MAXSEG
 2

	)

42 
	#TCP_CORK
 3

	)

43 
	#TCP_KEEPIDLE
 4

	)

44 
	#TCP_KEEPINTVL
 5

	)

45 
	#TCP_KEEPCNT
 6

	)

46 
	#TCP_SYNCNT
 7

	)

47 
	#TCP_LINGER2
 8

	)

48 
	#TCP_DEFER_ACCEPT
 9

	)

49 
	#TCP_WINDOW_CLAMP
 10

	)

50 
	#TCP_INFO
 11

	)

51 
	#TCP_QUICKACK
 12

	)

52 
	#TCP_CONGESTION
 13

	)

53 
	#TCP_MD5SIG
 14

	)

54 
	#TCP_COOKIE_TRANSACTIONS
 15

	)

55 
	#TCP_THIN_LINEAR_TIMEOUTS
 16

	)

56 
	#TCP_THIN_DUPACK
 17

	)

57 
	#TCP_USER_TIMEOUT
 18

	)

58 
	#TCP_REPAIR
 19

	)

59 
	#TCP_REPAIR_QUEUE
 20

	)

60 
	#TCP_QUEUE_SEQ
 21

	)

61 
	#TCP_REPAIR_OPTIONS
 22

	)

62 
	#TCP_FASTOPEN
 23

	)

63 
	#TCP_TIMESTAMP
 24

	)

64 
	#TCP_NOTSENT_LOWAT
 25

	)

66 
	#TCP_CC_INFO
 26

	)

68 
	#TCP_SAVE_SYN
 27

	)

70 
	#TCP_SAVED_SYN
 28

	)

72 
	#TCP_REPAIR_WINDOW
 29

	)

73 
	#TCP_FASTOPEN_CONNECT
 30

	)

74 
	#TCP_ULP
 31

	)

75 
	#TCP_MD5SIG_EXT
 32

	)

76 
	#TCP_FASTOPEN_KEY
 33

	)

77 
	#TCP_FASTOPEN_NO_COOKIE
 34

	)

78 
	#TCP_ZEROCOPY_RECEIVE
 35

	)

79 
	#TCP_INQ
 36

	)

81 
	#TCP_CM_INQ
 
TCP_INQ


	)

82 
	#TCP_TX_DELAY
 37

	)

84 
	#TCP_REPAIR_ON
 1

	)

85 
	#TCP_REPAIR_OFF
 0

	)

86 
	#TCP_REPAIR_OFF_NO_WP
 -1

	)

88 #ifde‡
__USE_MISC


89 
	~<sys/ty≥s.h
>

90 
	~<sys/sockë.h
>

91 
	~<°döt.h
>

93 
uöt32_t
 
	tt˝_£q
;

98 
	st˝hdr


100 
__exãnsi⁄__
 union

104 
uöt16_t
 
	mth_•‹t
;

105 
uöt16_t
 
	mth_dp‹t
;

106 
t˝_£q
 
	mth_£q
;

107 
t˝_£q
 
	mth_ack
;

108 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


109 
uöt8_t
 
	mth_x2
:4;

110 
uöt8_t
 
	mth_off
:4;

112 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


113 
uöt8_t
 
	mth_off
:4;

114 
uöt8_t
 
	mth_x2
:4;

116 
uöt8_t
 
	mth_Êags
;

117 
	#TH_FIN
 0x01

	)

118 
	#TH_SYN
 0x02

	)

119 
	#TH_RST
 0x04

	)

120 
	#TH_PUSH
 0x08

	)

121 
	#TH_ACK
 0x10

	)

122 
	#TH_URG
 0x20

	)

123 
uöt16_t
 
	mth_wö
;

124 
uöt16_t
 
	mth_sum
;

125 
uöt16_t
 
	mth_uΩ
;

129 
uöt16_t
 
	msour˚
;

130 
uöt16_t
 
	mde°
;

131 
uöt32_t
 
	m£q
;

132 
uöt32_t
 
	mack_£q
;

133 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


134 
uöt16_t
 
	mªs1
:4;

135 
uöt16_t
 
	mdoff
:4;

136 
uöt16_t
 
	mfö
:1;

137 
uöt16_t
 
	msyn
:1;

138 
uöt16_t
 
	mr°
:1;

139 
uöt16_t
 
	mpsh
:1;

140 
uöt16_t
 
	mack
:1;

141 
uöt16_t
 
	murg
:1;

142 
uöt16_t
 
	mªs2
:2;

143 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


144 
uöt16_t
 
	mdoff
:4;

145 
uöt16_t
 
	mªs1
:4;

146 
uöt16_t
 
	mªs2
:2;

147 
uöt16_t
 
	murg
:1;

148 
uöt16_t
 
	mack
:1;

149 
uöt16_t
 
	mpsh
:1;

150 
uöt16_t
 
	mr°
:1;

151 
uöt16_t
 
	msyn
:1;

152 
uöt16_t
 
	mfö
:1;

156 
uöt16_t
 
	mwödow
;

157 
uöt16_t
 
	mcheck
;

158 
uöt16_t
 
	murg_±r
;

165 
	mTCP_ESTABLISHED
 = 1,

166 
	mTCP_SYN_SENT
,

167 
	mTCP_SYN_RECV
,

168 
	mTCP_FIN_WAIT1
,

169 
	mTCP_FIN_WAIT2
,

170 
	mTCP_TIME_WAIT
,

171 
	mTCP_CLOSE
,

172 
	mTCP_CLOSE_WAIT
,

173 
	mTCP_LAST_ACK
,

174 
	mTCP_LISTEN
,

175 
	mTCP_CLOSING


178 
	#TCPOPT_EOL
 0

	)

179 
	#TCPOPT_NOP
 1

	)

180 
	#TCPOPT_MAXSEG
 2

	)

181 
	#TCPOLEN_MAXSEG
 4

	)

182 
	#TCPOPT_WINDOW
 3

	)

183 
	#TCPOLEN_WINDOW
 3

	)

184 
	#TCPOPT_SACK_PERMITTED
 4

	)

185 
	#TCPOLEN_SACK_PERMITTED
 2

	)

186 
	#TCPOPT_SACK
 5

	)

187 
	#TCPOPT_TIMESTAMP
 8

	)

188 
	#TCPOLEN_TIMESTAMP
 10

	)

189 
	#TCPOLEN_TSTAMP_APPA
 (
TCPOLEN_TIMESTAMP
+2Ë

	)

191 
	#TCPOPT_TSTAMP_HDR
 \

192 (
TCPOPT_NOP
<<24|TCPOPT_NOP<<16|
TCPOPT_TIMESTAMP
<<8|
TCPOLEN_TIMESTAMP
)

	)

200 
	#TCP_MSS
 512

	)

202 
	#TCP_MAXWIN
 65535

	)

204 
	#TCP_MAX_WINSHIFT
 14

	)

206 
	#SOL_TCP
 6

	)

209 
	#TCPI_OPT_TIMESTAMPS
 1

	)

210 
	#TCPI_OPT_SACK
 2

	)

211 
	#TCPI_OPT_WSCALE
 4

	)

212 
	#TCPI_OPT_ECN
 8

	)

213 
	#TCPI_OPT_ECN_SEEN
 16

	)

214 
	#TCPI_OPT_SYN_DATA
 32

	)

217 
	et˝_ˇ_°©e


219 
	mTCP_CA_O≥n
 = 0,

220 
	mTCP_CA_Dis‹dî
 = 1,

221 
	mTCP_CA_CWR
 = 2,

222 
	mTCP_CA_Recovîy
 = 3,

223 
	mTCP_CA_Loss
 = 4

226 
	st˝_öfo


228 
uöt8_t
 
	mt˝i_°©e
;

229 
uöt8_t
 
	mt˝i_ˇ_°©e
;

230 
uöt8_t
 
	mt˝i_ªå™smôs
;

231 
uöt8_t
 
	mt˝i_¥obes
;

232 
uöt8_t
 
	mt˝i_backoff
;

233 
uöt8_t
 
	mt˝i_›ti⁄s
;

234 
uöt8_t
 
	mt˝i_¢d_wsˇÀ
 : 4, 
	mt˝i_rcv_wsˇÀ
 : 4;

236 
uöt32_t
 
	mt˝i_πo
;

237 
uöt32_t
 
	mt˝i_©o
;

238 
uöt32_t
 
	mt˝i_¢d_mss
;

239 
uöt32_t
 
	mt˝i_rcv_mss
;

241 
uöt32_t
 
	mt˝i_u«cked
;

242 
uöt32_t
 
	mt˝i_ßcked
;

243 
uöt32_t
 
	mt˝i_lo°
;

244 
uöt32_t
 
	mt˝i_ªå™s
;

245 
uöt32_t
 
	mt˝i_Áckës
;

248 
uöt32_t
 
	mt˝i_œ°_d©a_£¡
;

249 
uöt32_t
 
	mt˝i_œ°_ack_£¡
;

250 
uöt32_t
 
	mt˝i_œ°_d©a_ªcv
;

251 
uöt32_t
 
	mt˝i_œ°_ack_ªcv
;

254 
uöt32_t
 
	mt˝i_pmtu
;

255 
uöt32_t
 
	mt˝i_rcv_s°hªsh
;

256 
uöt32_t
 
	mt˝i_πt
;

257 
uöt32_t
 
	mt˝i_πtv¨
;

258 
uöt32_t
 
	mt˝i_¢d_s°hªsh
;

259 
uöt32_t
 
	mt˝i_¢d_cwnd
;

260 
uöt32_t
 
	mt˝i_advmss
;

261 
uöt32_t
 
	mt˝i_ª‹dîög
;

263 
uöt32_t
 
	mt˝i_rcv_πt
;

264 
uöt32_t
 
	mt˝i_rcv_•a˚
;

266 
uöt32_t
 
	mt˝i_tŸÆ_ªå™s
;

271 
	#TCP_MD5SIG_MAXKEYLEN
 80

	)

274 
	#TCP_MD5SIG_FLAG_PREFIX
 1

	)

276 
	st˝_md5sig


278 
sockaddr_°‹age
 
	mt˝m_addr
;

279 
uöt8_t
 
	mt˝m_Êags
;

280 
uöt8_t
 
	mt˝m_¥efixÀn
;

281 
uöt16_t
 
	mt˝m_keyÀn
;

282 
uöt32_t
 
	m__t˝m_∑d
;

283 
uöt8_t
 
	mt˝m_key
[
TCP_MD5SIG_MAXKEYLEN
];

287 
	st˝_ª∑ú_›t


289 
uöt32_t
 
	m›t_code
;

290 
uöt32_t
 
	m›t_vÆ
;

296 
	mTCP_NO_QUEUE
,

297 
	mTCP_RECV_QUEUE
,

298 
	mTCP_SEND_QUEUE
,

299 
	mTCP_QUEUES_NR
,

303 
	#TCP_COOKIE_MIN
 8

	)

304 
	#TCP_COOKIE_MAX
 16

	)

305 
	#TCP_COOKIE_PAIR_SIZE
 (2*
TCP_COOKIE_MAX
)

	)

308 
	#TCP_COOKIE_IN_ALWAYS
 (1 << 0Ë

	)

309 
	#TCP_COOKIE_OUT_NEVER
 (1 << 1Ë

	)

313 
	#TCP_S_DATA_IN
 (1 << 2Ë

	)

314 
	#TCP_S_DATA_OUT
 (1 << 3Ë

	)

316 
	#TCP_MSS_DEFAULT
 536U

	)

317 
	#TCP_MSS_DESIRED
 1220U

	)

319 
	st˝_cookõ_å™ß˘i⁄s


321 
uöt16_t
 
	mt˝˘_Êags
;

322 
uöt8_t
 
	m__t˝˘_∑d1
;

323 
uöt8_t
 
	mt˝˘_cookõ_desúed
;

324 
uöt16_t
 
	mt˝˘_s_d©a_desúed
;

325 
uöt16_t
 
	mt˝˘_u£d
;

326 
uöt8_t
 
	mt˝˘_vÆue
[
TCP_MSS_DEFAULT
];

330 
	st˝_ª∑ú_wödow


332 
uöt32_t
 
	m¢d_wl1
;

333 
uöt32_t
 
	m¢d_wnd
;

334 
uöt32_t
 
	mmax_wödow
;

335 
uöt32_t
 
	mrcv_wnd
;

336 
uöt32_t
 
	mrcv_wup
;

340 
	st˝_zîoc›y_ª˚ive


342 
uöt64_t
 
	maddªss
;

343 
uöt32_t
 
	mÀngth
;

344 
uöt32_t
 
	mªcv_skù_höt
;

	@/usr/include/pwd.h

22 #i‚def 
_PWD_H


23 
	#_PWD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 
	#__√ed_size_t


	)

32 
	~<°ddef.h
>

34 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


37 #i‚de‡
__gid_t_deföed


38 
__gid_t
 
	tgid_t
;

39 
	#__gid_t_deföed


	)

42 #i‚de‡
__uid_t_deföed


43 
__uid_t
 
	tuid_t
;

44 
	#__uid_t_deföed


	)

49 
	s∑sswd


51 *
	mpw_«me
;

52 *
	mpw_∑sswd
;

54 
__uid_t
 
	mpw_uid
;

55 
__gid_t
 
	mpw_gid
;

56 *
	mpw_gecos
;

57 *
	mpw_dú
;

58 *
	mpw_shñl
;

62 #ifde‡
__USE_MISC


63 
	~<bôs/ty≥s/FILE.h
>

67 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


72 
£çwít
 ();

78 
ídpwít
 ();

84 
∑sswd
 *
gëpwít
 ();

87 #ifdef 
__USE_MISC


94 
∑sswd
 *
	$fgëpwít
 (
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((1));

102 
	`puçwít
 (c⁄° 
∑sswd
 *
__ª°ri˘
 
__p
,

103 
FILE
 *
__ª°ri˘
 
__f
);

110 
∑sswd
 *
	`gëpwuid
 (
__uid_t
 
__uid
);

116 
∑sswd
 *
	$gëpw«m
 (c⁄° *
__«me
Ë
	`__n⁄nuŒ
 ((1));

118 #ifde‡
__USE_POSIX


120 #ifde‡
__USE_MISC


123 
	#NSS_BUFLEN_PASSWD
 1024

	)

134 #ifde‡
__USE_MISC


139 
	$gëpwít_r
 (
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

140 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

141 
∑sswd
 **
__ª°ri˘
 
__ªsu…
)

142 
	`__n⁄nuŒ
 ((1, 2, 4))

143 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

146 
	$gëpwuid_r
 (
__uid_t
 
__uid
,

147 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

148 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

149 
∑sswd
 **
__ª°ri˘
 
__ªsu…
)

150 
	`__n⁄nuŒ
 ((2, 3, 5))

151 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 3, 4));

153 
	$gëpw«m_r
 (c⁄° *
__ª°ri˘
 
__«me
,

154 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

155 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

156 
∑sswd
 **
__ª°ri˘
 
__ªsu…
)

157 
	`__n⁄nuŒ
 ((1, 2, 3, 5))

158 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 3, 4));

161 #ifdef 
__USE_MISC


169 
	$fgëpwít_r
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

170 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

171 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

172 
∑sswd
 **
__ª°ri˘
 
__ªsu…
)

173 
	`__n⁄nuŒ
 ((1, 2, 3, 5))

174 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 3, 4));

179 #ifde‡
__USE_GNU


188 
	`gëpw
 (
__uid_t
 
__uid
, *
__buf„r
);

191 
__END_DECLS


	@/usr/include/regex.h

20 #i‚de‡
_REGEX_H


21 
	#_REGEX_H
 1

	)

23 
	~<sys/ty≥s.h
>

26 #ifde‡
__˝lu•lus


32 #ifde‡
_GNU_SOURCE


33 
	#__USE_GNU
 1

	)

36 #ifde‡
_REGEX_LARGE_OFFSETS


45 
size_t
 
	t__ª_size_t
;

49 
size_t
 
	t__ª_l⁄g_size_t
;

55 
	t__ª_size_t
;

56 
	t__ª_l⁄g_size_t
;

64 
	ts_ªg_t
;

65 
	ta˘ive_ªg_t
;

72 
	tªg_sy¡ax_t
;

74 #ifde‡
__USE_GNU


77 
	#RE_BACKSLASH_ESCAPE_IN_LISTS
 ((Ë1)

	)

82 
	#RE_BK_PLUS_QM
 (
RE_BACKSLASH_ESCAPE_IN_LISTS
 << 1)

	)

88 
	#RE_CHAR_CLASSES
 (
RE_BK_PLUS_QM
 << 1)

	)

102 
	#RE_CONTEXT_INDEP_ANCHORS
 (
RE_CHAR_CLASSES
 << 1)

	)

110 
	#RE_CONTEXT_INDEP_OPS
 (
RE_CONTEXT_INDEP_ANCHORS
 << 1)

	)

114 
	#RE_CONTEXT_INVALID_OPS
 (
RE_CONTEXT_INDEP_OPS
 << 1)

	)

118 
	#RE_DOT_NEWLINE
 (
RE_CONTEXT_INVALID_OPS
 << 1)

	)

122 
	#RE_DOT_NOT_NULL
 (
RE_DOT_NEWLINE
 << 1)

	)

126 
	#RE_HAT_LISTS_NOT_NEWLINE
 (
RE_DOT_NOT_NULL
 << 1)

	)

131 
	#RE_INTERVALS
 (
RE_HAT_LISTS_NOT_NEWLINE
 << 1)

	)

135 
	#RE_LIMITED_OPS
 (
RE_INTERVALS
 << 1)

	)

139 
	#RE_NEWLINE_ALT
 (
RE_LIMITED_OPS
 << 1)

	)

144 
	#RE_NO_BK_BRACES
 (
RE_NEWLINE_ALT
 << 1)

	)

148 
	#RE_NO_BK_PARENS
 (
RE_NO_BK_BRACES
 << 1)

	)

152 
	#RE_NO_BK_REFS
 (
RE_NO_BK_PARENS
 << 1)

	)

156 
	#RE_NO_BK_VBAR
 (
RE_NO_BK_REFS
 << 1)

	)

162 
	#RE_NO_EMPTY_RANGES
 (
RE_NO_BK_VBAR
 << 1)

	)

166 
	#RE_UNMATCHED_RIGHT_PAREN_ORD
 (
RE_NO_EMPTY_RANGES
 << 1)

	)

170 
	#RE_NO_POSIX_BACKTRACKING
 (
RE_UNMATCHED_RIGHT_PAREN_ORD
 << 1)

	)

174 
	#RE_NO_GNU_OPS
 (
RE_NO_POSIX_BACKTRACKING
 << 1)

	)

182 
	#RE_DEBUG
 (
RE_NO_GNU_OPS
 << 1)

	)

187 
	#RE_INVALID_INTERVAL_ORD
 (
RE_DEBUG
 << 1)

	)

191 
	#RE_ICASE
 (
RE_INVALID_INTERVAL_ORD
 << 1)

	)

196 
	#RE_CARET_ANCHORS_HERE
 (
RE_ICASE
 << 1)

	)

200 
	#RE_CONTEXT_INVALID_DUP
 (
RE_CARET_ANCHORS_HERE
 << 1)

	)

204 
	#RE_NO_SUB
 (
RE_CONTEXT_INVALID_DUP
 << 1)

	)

211 
ªg_sy¡ax_t
 
ª_sy¡ax_›ti⁄s
;

213 #ifde‡
__USE_GNU


218 
	#RE_SYNTAX_EMACS
 0

	)

220 
	#RE_SYNTAX_AWK
 \

221 (
RE_BACKSLASH_ESCAPE_IN_LISTS
 | 
RE_DOT_NOT_NULL
 \

222 | 
RE_NO_BK_PARENS
 | 
RE_NO_BK_REFS
 \

223 | 
RE_NO_BK_VBAR
 | 
RE_NO_EMPTY_RANGES
 \

224 | 
RE_DOT_NEWLINE
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

225 | 
RE_CHAR_CLASSES
 \

226 | 
RE_UNMATCHED_RIGHT_PAREN_ORD
 | 
RE_NO_GNU_OPS
)

	)

228 
	#RE_SYNTAX_GNU_AWK
 \

229 ((
RE_SYNTAX_POSIX_EXTENDED
 | 
RE_BACKSLASH_ESCAPE_IN_LISTS
 \

230 | 
RE_INVALID_INTERVAL_ORD
) \

231 & ~(
RE_DOT_NOT_NULL
 | 
RE_CONTEXT_INDEP_OPS
 \

232 | 
RE_CONTEXT_INVALID_OPS
 ))

	)

234 
	#RE_SYNTAX_POSIX_AWK
 \

235 (
RE_SYNTAX_POSIX_EXTENDED
 | 
RE_BACKSLASH_ESCAPE_IN_LISTS
 \

236 | 
RE_INTERVALS
 | 
RE_NO_GNU_OPS
 \

237 | 
RE_INVALID_INTERVAL_ORD
)

	)

239 
	#RE_SYNTAX_GREP
 \

240 ((
RE_SYNTAX_POSIX_BASIC
 | 
RE_NEWLINE_ALT
) \

241 & ~(
RE_CONTEXT_INVALID_DUP
 | 
RE_DOT_NOT_NULL
))

	)

243 
	#RE_SYNTAX_EGREP
 \

244 ((
RE_SYNTAX_POSIX_EXTENDED
 | 
RE_INVALID_INTERVAL_ORD
 | 
RE_NEWLINE_ALT
) \

245 & ~(
RE_CONTEXT_INVALID_OPS
 | 
RE_DOT_NOT_NULL
))

	)

248 
	#RE_SYNTAX_POSIX_EGREP
 \

249 
RE_SYNTAX_EGREP


	)

252 
	#RE_SYNTAX_ED
 
RE_SYNTAX_POSIX_BASIC


	)

254 
	#RE_SYNTAX_SED
 
RE_SYNTAX_POSIX_BASIC


	)

257 
	#_RE_SYNTAX_POSIX_COMMON
 \

258 (
RE_CHAR_CLASSES
 | 
RE_DOT_NEWLINE
 | 
RE_DOT_NOT_NULL
 \

259 | 
RE_INTERVALS
 | 
RE_NO_EMPTY_RANGES
)

	)

261 
	#RE_SYNTAX_POSIX_BASIC
 \

262 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_BK_PLUS_QM
 | 
RE_CONTEXT_INVALID_DUP
)

	)

267 
	#RE_SYNTAX_POSIX_MINIMAL_BASIC
 \

268 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_LIMITED_OPS
)

	)

270 
	#RE_SYNTAX_POSIX_EXTENDED
 \

271 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

272 | 
RE_CONTEXT_INDEP_OPS
 | 
RE_NO_BK_BRACES
 \

273 | 
RE_NO_BK_PARENS
 | 
RE_NO_BK_VBAR
 \

274 | 
RE_CONTEXT_INVALID_OPS
 | 
RE_UNMATCHED_RIGHT_PAREN_ORD
)

	)

278 
	#RE_SYNTAX_POSIX_MINIMAL_EXTENDED
 \

279 (
_RE_SYNTAX_POSIX_COMMON
 | 
RE_CONTEXT_INDEP_ANCHORS
 \

280 | 
RE_CONTEXT_INVALID_OPS
 | 
RE_NO_BK_BRACES
 \

281 | 
RE_NO_BK_PARENS
 | 
RE_NO_BK_REFS
 \

282 | 
RE_NO_BK_VBAR
 | 
RE_UNMATCHED_RIGHT_PAREN_ORD
)

	)

288 #ifde‡
_REGEX_INCLUDE_LIMITS_H


289 
	~<limôs.h
>

291 #ifde‡
RE_DUP_MAX


292 #unde‡
RE_DUP_MAX


302 
	#RE_DUP_MAX
 (0x7fff)

	)

310 
	#REG_EXTENDED
 1

	)

314 
	#REG_ICASE
 (1 << 1)

	)

319 
	#REG_NEWLINE
 (1 << 2)

	)

323 
	#REG_NOSUB
 (1 << 3)

	)

333 
	#REG_NOTBOL
 1

	)

336 
	#REG_NOTEOL
 (1 << 1)

	)

340 
	#REG_STARTEND
 (1 << 2)

	)

348 
	g_REG_ENOSYS
 = -1,

349 
	g_REG_NOERROR
 = 0,

350 
	g_REG_NOMATCH
,

354 
	g_REG_BADPAT
,

355 
	g_REG_ECOLLATE
,

356 
	g_REG_ECTYPE
,

357 
	g_REG_EESCAPE
,

358 
	g_REG_ESUBREG
,

359 
	g_REG_EBRACK
,

360 
	g_REG_EPAREN
,

361 
	g_REG_EBRACE
,

362 
	g_REG_BADBR
,

363 
	g_REG_ERANGE
,

364 
	g_REG_ESPACE
,

365 
	g_REG_BADRPT
,

368 
	g_REG_EEND
,

369 
	g_REG_ESIZE
,

370 
	g_REG_ERPAREN


371 } 
	tªg_îrcode_t
;

373 #i‡
deföed
 
_XOPEN_SOURCE
 || deföed 
__USE_XOPEN2K


374 
	#REG_ENOSYS
 
_REG_ENOSYS


	)

376 
	#REG_NOERROR
 
_REG_NOERROR


	)

377 
	#REG_NOMATCH
 
_REG_NOMATCH


	)

378 
	#REG_BADPAT
 
_REG_BADPAT


	)

379 
	#REG_ECOLLATE
 
_REG_ECOLLATE


	)

380 
	#REG_ECTYPE
 
_REG_ECTYPE


	)

381 
	#REG_EESCAPE
 
_REG_EESCAPE


	)

382 
	#REG_ESUBREG
 
_REG_ESUBREG


	)

383 
	#REG_EBRACK
 
_REG_EBRACK


	)

384 
	#REG_EPAREN
 
_REG_EPAREN


	)

385 
	#REG_EBRACE
 
_REG_EBRACE


	)

386 
	#REG_BADBR
 
_REG_BADBR


	)

387 
	#REG_ERANGE
 
_REG_ERANGE


	)

388 
	#REG_ESPACE
 
_REG_ESPACE


	)

389 
	#REG_BADRPT
 
_REG_BADRPT


	)

390 
	#REG_EEND
 
_REG_EEND


	)

391 
	#REG_ESIZE
 
_REG_ESIZE


	)

392 
	#REG_ERPAREN
 
_REG_ERPAREN


	)

400 #i‚de‡
RE_TRANSLATE_TYPE


401 
	#__RE_TRANSLATE_TYPE
 *

	)

402 #ifde‡
__USE_GNU


403 
	#RE_TRANSLATE_TYPE
 
__RE_TRANSLATE_TYPE


	)

407 #ifde‡
__USE_GNU


408 
	#__REPB_PREFIX
(
«me
Ë
	)
name

410 
	#__REPB_PREFIX
(
«me
Ë
__
##
	)
name

413 
	sª_∑âîn_buf„r


417 
ª_dÁ_t
 *
__REPB_PREFIX
(
buf„r
);

420 
__ª_l⁄g_size_t
 
__REPB_PREFIX
(
Æloˇãd
);

423 
__ª_l⁄g_size_t
 
__REPB_PREFIX
(
u£d
);

426 
ªg_sy¡ax_t
 
__REPB_PREFIX
(
sy¡ax
);

431 *
__REPB_PREFIX
(
Á°m≠
);

437 
__RE_TRANSLATE_TYPE
 
__REPB_PREFIX
(
å™¶©e
);

440 
size_t
 
	gª_nsub
;

446 
__REPB_PREFIX
(
ˇn_be_nuŒ
) : 1;

452 #ifde‡
__USE_GNU


453 
	#REGS_UNALLOCATED
 0

	)

454 
	#REGS_REALLOCATE
 1

	)

455 
	#REGS_FIXED
 2

	)

457 
__REPB_PREFIX
(
ªgs_Æloˇãd
) : 2;

461 
__REPB_PREFIX
(
Á°m≠_accuøã
) : 1;

465 
__REPB_PREFIX
(
no_sub
) : 1;

469 
__REPB_PREFIX
(
nŸ_bﬁ
) : 1;

472 
__REPB_PREFIX
(
nŸ_eﬁ
) : 1;

475 
__REPB_PREFIX
(
√wlöe_™ch‹
) : 1;

478 
ª_∑âîn_buf„r
 
	tªgex_t
;

481 #ifde‡
_REGEX_LARGE_OFFSETS


486 
ssize_t
 
	tªgoff_t
;

490 
	tªgoff_t
;

494 #ifde‡
__USE_GNU


497 
	sª_ªgi°îs


499 
__ª_size_t
 
	gnum_ªgs
;

500 
ªgoff_t
 *
	g°¨t
;

501 
ªgoff_t
 *
	gíd
;

508 #i‚de‡
RE_NREGS


509 
	#RE_NREGS
 30

	)

519 
ªgoff_t
 
	grm_so
;

520 
ªgoff_t
 
	grm_eo
;

521 } 
	tªgm©ch_t
;

525 #i‚de‡
_REGEX_NELTS


526 #i‡(
deföed
 
__STDC_VERSION__
 && 199901L <= __STDC_VERSION__ \

527 && !
deföed
 
	g__STDC_NO_VLA__
)

528 
	#_REGEX_NELTS
(
n
Ë
	)
n

530 
	#_REGEX_NELTS
(
n
)

	)

534 #i‡
deföed
 
__GNUC__
 && 4 < __GNUC__ + (6 <
__GNUC_MINOR__
)

535 #¥agm®
GCC
 
dügno°ic
 
push


536 #¥agm®
GCC
 
dügno°ic
 
ign‹ed
 "-Wvla"

539 #i‚de‡
_Aâr_ac˚ss_


540 #ifde‡
__©å_ac˚ss


541 
	#_Aâr_ac˚ss_
(
¨g
Ë
	`__©å_ac˚ss
 (¨g)

	)

542 #ñi‡
deföed
 
__GNUC__
 && 10 <= __GNUC__

543 
	#_Aâr_ac˚ss_
(
x
Ë
	`__©åibuã__
 ((
__ac˚ss__
 x))

	)

545 
	#_Aâr_ac˚ss_
(
x
)

	)

549 #ifde‡
__USE_GNU


552 
ªg_sy¡ax_t
 
ª_£t_sy¡ax
 (ªg_sy¡ax_à
__sy¡ax
);

562 c⁄° *
ª_compûe_∑âîn
 (c⁄° *
__∑âîn
, 
size_t
 
__Àngth
,

563 
ª_∑âîn_buf„r
 *
__buf„r
)

564 
_Aâr_ac˚ss_
 ((
__ªad_⁄ly__
, 1, 2));

570 
ª_compûe_Á°m≠
 (
ª_∑âîn_buf„r
 *
__buf„r
);

578 
ªgoff_t
 
ª_£¨ch
 (
ª_∑âîn_buf„r
 *
__buf„r
,

579 c⁄° *
__Såög
, 
ªgoff_t
 
__Àngth
,

580 
ªgoff_t
 
__°¨t
,Ñegoff_à
__ønge
,

581 
ª_ªgi°îs
 *
__ªgs
)

582 
_Aâr_ac˚ss_
 ((
__ªad_⁄ly__
, 2, 3));

587 
ªgoff_t
 
ª_£¨ch_2
 (
ª_∑âîn_buf„r
 *
__buf„r
,

588 c⁄° *
__°rög1
, 
ªgoff_t
 
__Àngth1
,

589 c⁄° *
__°rög2
, 
ªgoff_t
 
__Àngth2
,

590 
ªgoff_t
 
__°¨t
,Ñegoff_à
__ønge
,

591 
ª_ªgi°îs
 *
__ªgs
,

592 
ªgoff_t
 
__°›
)

593 
_Aâr_ac˚ss_
 ((
__ªad_⁄ly__
, 2, 3))

594 
_Aâr_ac˚ss_
 ((
__ªad_⁄ly__
, 4, 5));

599 
ªgoff_t
 
ª_m©ch
 (
ª_∑âîn_buf„r
 *
__buf„r
,

600 c⁄° *
__Såög
, 
ªgoff_t
 
__Àngth
,

601 
ªgoff_t
 
__°¨t
, 
ª_ªgi°îs
 *
__ªgs
)

602 
_Aâr_ac˚ss_
 ((
__ªad_⁄ly__
, 2, 3));

606 
ªgoff_t
 
ª_m©ch_2
 (
ª_∑âîn_buf„r
 *
__buf„r
,

607 c⁄° *
__°rög1
, 
ªgoff_t
 
__Àngth1
,

608 c⁄° *
__°rög2
, 
ªgoff_t
 
__Àngth2
,

609 
ªgoff_t
 
__°¨t
, 
ª_ªgi°îs
 *
__ªgs
,

610 
ªgoff_t
 
__°›
)

611 
_Aâr_ac˚ss_
 ((
__ªad_⁄ly__
, 2, 3))

612 
_Aâr_ac˚ss_
 ((
__ªad_⁄ly__
, 4, 5));

627 
ª_£t_ªgi°îs
 (
ª_∑âîn_buf„r
 *
__buf„r
,

628 
ª_ªgi°îs
 *
__ªgs
,

629 
__ª_size_t
 
__num_ªgs
,

630 
ªgoff_t
 *
__°¨ts
,Ñegoff_à*
__íds
);

633 #i‡
deföed
 
_REGEX_RE_COMP
 || (deföed 
_LIBC
 && deföed 
__USE_MISC
)

635 *
ª_comp
 (const *);

636 
ª_exec
 (const *);

645 #i‚de‡
_Re°ri˘_


646 #i‡
deföed
 
__ª°ri˘
 \

647 || 2 < 
	g__GNUC__
 + (95 <
__GNUC_MINOR__
) \

648 || 
__˛™g_maj‹__
 >= 3

649 
	#_Re°ri˘_
 
__ª°ri˘


	)

650 #ñi‡199901L <
__STDC_VERSION__
 || 
deföed
 
ª°ri˘


651 
	#_Re°ri˘_
 
ª°ri˘


	)

653 
	#_Re°ri˘_


	)

661 #i‚de‡
_Re°ri˘_¨r_


662 #ifde‡
__ª°ri˘_¨r


663 
	#_Re°ri˘_¨r_
 
__ª°ri˘_¨r


	)

664 #ñi‡((199901L <
__STDC_VERSION__
 \

665 || 3 < 
__GNUC__
 + (1 <
__GNUC_MINOR__
) \

666 || 
__˛™g_maj‹__
 >= 3) \

667 && !
deföed
 
__˝lu•lus
)

668 
	#_Re°ri˘_¨r_
 
_Re°ri˘_


	)

670 
	#_Re°ri˘_¨r_


	)

675 
ªgcomp
 (
ªgex_t
 *
_Re°ri˘_
 
__¥eg
,

676 c⁄° *
_Re°ri˘_
 
__∑âîn
,

677 
__cÊags
);

679 
ªgexec
 (c⁄° 
ªgex_t
 *
_Re°ri˘_
 
__¥eg
,

680 c⁄° *
_Re°ri˘_
 
__Såög
, 
size_t
 
__nm©ch
,

681 
ªgm©ch_t
 
__pm©ch
[
_Re°ri˘_¨r_


682 
_REGEX_NELTS
 (
__nm©ch
)],

683 
__eÊags
);

685 
size_t
 
ªgîr‹
 (
__îrcode
, c⁄° 
ªgex_t
 *
_Re°ri˘_
 
__¥eg
,

686 *
_Re°ri˘_
 
__îrbuf
, 
size_t
 
__îrbuf_size
)

687 
_Aâr_ac˚ss_
 ((
__wrôe_⁄ly__
, 3, 4));

689 
ªg‰ì
 (
ªgex_t
 *
__¥eg
);

691 #i‡
deföed
 
__GNUC__
 && 4 < __GNUC__ + (6 <
__GNUC_MINOR__
)

692 #¥agm®
GCC
 
dügno°ic
 
p›


695 #ifde‡
__˝lu•lus


	@/usr/include/signal.h

22 #i‚def 
_SIGNAL_H


23 
	#_SIGNAL_H


	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

30 
	~<bôs/signum-gíîic.h
>

32 
	~<bôs/ty≥s/sig_©omic_t.h
>

34 #i‡
deföed
 
__USE_POSIX


35 
	~<bôs/ty≥s/sig£t_t.h
>

38 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


39 #i‚de‡
__pid_t_deföed


40 
__pid_t
 
	tpid_t
;

41 
	#__pid_t_deföed


	)

43 #ifde‡
__USE_XOPEN


45 #i‚de‡
__uid_t_deföed


46 
__uid_t
 
	tuid_t
;

47 
	#__uid_t_deföed


	)

51 #ifde‡
__USE_POSIX199309


53 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

56 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_XOPEN_EXTENDED


57 
	~<bôs/ty≥s/sigöfo_t.h
>

58 
	~<bôs/sigöfo-c⁄°s.h
>

61 #ifde‡
__USE_MISC


62 
	~<bôs/ty≥s/sigvÆ_t.h
>

65 #ifde‡
__USE_POSIX199309


66 
	~<bôs/ty≥s/sigevít_t.h
>

67 
	~<bôs/sigevít-c⁄°s.h
>

72 (*
	t__sigh™dÀr_t
) ();

77 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

78 
__THROW
;

79 #ifde‡
__USE_GNU


80 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

81 
__THROW
;

87 #ifde‡
__USE_MISC


88 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

89 
__THROW
;

92 #ifde‡
__REDIRECT_NTH


93 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

94 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

95 
__sysv_sig«l
);

97 
	#sig«l
 
__sysv_sig«l


	)

101 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8


104 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

105 
__THROW
;

111 #ifde‡
__USE_POSIX


112 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

115 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


119 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

123 
	$øi£
 (
__sig
Ë
__THROW
;

125 #ifde‡
__USE_MISC


127 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

128 
__THROW
;

129 
	$gsig«l
 (
__sig
Ë
__THROW
;

132 #ifde‡
__USE_XOPEN2K8


134 
	`psig«l
 (
__sig
, c⁄° *
__s
);

137 
	`psigöfo
 (c⁄° 
sigöfo_t
 *
__pöfo
, c⁄° *
__s
);

149 #ifde‡
__USE_XOPEN_EXTENDED


150 #ifde‡
__GNUC__


151 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause")

152 
	`__©åibuã_dïªˇãd_msg__
 ("UseÅhe sigsuspend function instead");

154 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

156 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

161 #ifde‡
__USE_MISC


168 
	#sigmask
(
sig
) \

169 
	`__glibc_ma¸o_w¨nög
 ("sigmask is deprecated") \

170 (()(1u << ((
sig
Ë- 1)))

	)

173 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

176 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

179 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

183 #ifde‡
__USE_MISC


184 
	#NSIG
 
_NSIG


	)

187 #ifde‡
__USE_GNU


188 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

192 #ifde‡
__USE_MISC


193 
__sigh™dÀr_t
 
	tsig_t
;

196 #ifde‡
__USE_POSIX


199 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

202 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

205 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

208 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

211 
	$sigismembî
 (c⁄° 
sig£t_t
 *
__£t
, 
__signo
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1));

214 #ifde‡
__USE_GNU


216 
	$sigi£m±y£t
 (c⁄° 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

219 
	$sig™d£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

220 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

223 
	$sig‹£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

224 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

229 
	~<bôs/siga˘i⁄.h
>

232 
	$sig¥ocmask
 (
__how
, c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

233 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

240 
	$sigsu•íd
 (c⁄° 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

243 
	$siga˘i⁄
 (
__sig
, c⁄° 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

244 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

247 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

250 #ifde‡
__USE_POSIX199506


255 
	$sigwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

256 
	`__n⁄nuŒ
 ((1, 2));

259 #ifde‡
__USE_POSIX199309


264 
	$sigwaôöfo
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

265 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

272 #i‚de‡
__USE_TIME_BITS64


273 
	$sigtimedwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

274 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

275 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
)

276 
	`__n⁄nuŒ
 ((1));

278 #ifde‡
__REDIRECT


279 
	`__REDIRECT
 (
sigtimedwaô
,

280 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

281 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

282 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
),

283 
__sigtimedwaô64
)

284 
	`__n⁄nuŒ
 ((1));

286 
	#sigtimedwaô
 
__sigtimedwaô64


	)

292 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, c⁄° 
sigvÆ
 
__vÆ
)

293 
__THROW
;

298 #ifde‡
__USE_MISC


301 
	~<bôs/sigc⁄ãxt.h
>

304 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

309 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


310 
	#__√ed_size_t


	)

311 
	~<°ddef.h
>

313 
	~<bôs/ty≥s/°ack_t.h
>

314 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


316 
	~<sys/uc⁄ãxt.h
>

320 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_MISC


324 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW


325 
	`__©åibuã_dïªˇãd_msg__
 ("Use sigaction with SA_RESTART instead");

327 
	~<bôs/sig°ack.h
>

328 
	~<bôs/sig°ksz.h
>

329 
	~<bôs/ss_Êags.h
>

333 
	$sigÆt°ack
 (c⁄° 
°ack_t
 *
__ª°ri˘
 
__ss
,

334 
°ack_t
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

337 #i‡((
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

338 || 
deföed
 
__USE_MISC
)

339 
	~<bôs/ty≥s/°ru˘_sig°ack.h
>

342 #i‡((
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

343 || 
deföed
 
__USE_MISC
)

347 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

348 
__THROW
 
__©åibuã_dïªˇãd__
;

351 #ifde‡
__USE_XOPEN_EXTENDED


355 
	$sighﬁd
 (
__sig
Ë
__THROW


356 
	`__©åibuã_dïªˇãd_msg__
 ("UseÅhe sigprocmask function instead");

359 
	$sigªl£
 (
__sig
Ë
__THROW


360 
	`__©åibuã_dïªˇãd_msg__
 ("UseÅhe sigprocmask function instead");

363 
	$sigign‹e
 (
__sig
Ë
__THROW


364 
	`__©åibuã_dïªˇãd_msg__
 ("UseÅhe signal function instead");

367 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW


368 
__©åibuã_dïªˇãd_msg__


372 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


375 
	~<bôs/±hªadty≥s.h
>

376 
	~<bôs/sigthªad.h
>

383 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

385 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

387 
	#SIGRTMIN
 (
	`__libc_cuºít_sigπmö
 ())

	)

388 
	#SIGRTMAX
 (
	`__libc_cuºít_sigπmax
 ())

	)

391 
	~<bôs/sig«l_ext.h
>

393 
__END_DECLS


	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

27 
	~<bôs/ty≥s.h
>

28 
	~<bôs/wch¨.h
>

29 
	~<bôs/w‹dsize.h
>

34 
	~<bôs/°döt-öä.h
>

37 
	~<bôs/°döt-uöä.h
>

43 
__öt_Àa°8_t
 
	töt_Àa°8_t
;

44 
__öt_Àa°16_t
 
	töt_Àa°16_t
;

45 
__öt_Àa°32_t
 
	töt_Àa°32_t
;

46 
__öt_Àa°64_t
 
	töt_Àa°64_t
;

49 
__uöt_Àa°8_t
 
	tuöt_Àa°8_t
;

50 
__uöt_Àa°16_t
 
	tuöt_Àa°16_t
;

51 
__uöt_Àa°32_t
 
	tuöt_Àa°32_t
;

52 
__uöt_Àa°64_t
 
	tuöt_Àa°64_t
;

58 sig√d 
	töt_Á°8_t
;

59 #i‡
__WORDSIZE
 == 64

60 
	töt_Á°16_t
;

61 
	töt_Á°32_t
;

62 
	töt_Á°64_t
;

64 
	töt_Á°16_t
;

65 
	töt_Á°32_t
;

66 
__exãnsi⁄__


67 
	töt_Á°64_t
;

71 
	tuöt_Á°8_t
;

72 #i‡
__WORDSIZE
 == 64

73 
	tuöt_Á°16_t
;

74 
	tuöt_Á°32_t
;

75 
	tuöt_Á°64_t
;

77 
	tuöt_Á°16_t
;

78 
	tuöt_Á°32_t
;

79 
__exãnsi⁄__


80 
	tuöt_Á°64_t
;

85 #i‡
__WORDSIZE
 == 64

86 #i‚de‡
__öçå_t_deföed


87 
	töçå_t
;

88 
	#__öçå_t_deföed


	)

90 
	tuöçå_t
;

92 #i‚de‡
__öçå_t_deföed


93 
	töçå_t
;

94 
	#__öçå_t_deföed


	)

96 
	tuöçå_t
;

101 
__ötmax_t
 
	tötmax_t
;

102 
__uötmax_t
 
	tuötmax_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	#__INT64_C
(
c
Ë¯## 
L


	)

107 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

109 
	#__INT64_C
(
c
Ë¯## 
LL


	)

110 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

116 
	#INT8_MIN
 (-128)

	)

117 
	#INT16_MIN
 (-32767-1)

	)

118 
	#INT32_MIN
 (-2147483647-1)

	)

119 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

121 
	#INT8_MAX
 (127)

	)

122 
	#INT16_MAX
 (32767)

	)

123 
	#INT32_MAX
 (2147483647)

	)

124 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

127 
	#UINT8_MAX
 (255)

	)

128 
	#UINT16_MAX
 (65535)

	)

129 
	#UINT32_MAX
 (4294967295U)

	)

130 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

134 
	#INT_LEAST8_MIN
 (-128)

	)

135 
	#INT_LEAST16_MIN
 (-32767-1)

	)

136 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

137 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

139 
	#INT_LEAST8_MAX
 (127)

	)

140 
	#INT_LEAST16_MAX
 (32767)

	)

141 
	#INT_LEAST32_MAX
 (2147483647)

	)

142 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

145 
	#UINT_LEAST8_MAX
 (255)

	)

146 
	#UINT_LEAST16_MAX
 (65535)

	)

147 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

148 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

152 
	#INT_FAST8_MIN
 (-128)

	)

153 #i‡
__WORDSIZE
 == 64

154 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

155 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

157 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

158 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

160 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

162 
	#INT_FAST8_MAX
 (127)

	)

163 #i‡
__WORDSIZE
 == 64

164 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

165 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

167 
	#INT_FAST16_MAX
 (2147483647)

	)

168 
	#INT_FAST32_MAX
 (2147483647)

	)

170 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

173 
	#UINT_FAST8_MAX
 (255)

	)

174 #i‡
__WORDSIZE
 == 64

175 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

176 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

178 
	#UINT_FAST16_MAX
 (4294967295U)

	)

179 
	#UINT_FAST32_MAX
 (4294967295U)

	)

181 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

185 #i‡
__WORDSIZE
 == 64

186 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

187 
	#INTPTR_MAX
 (9223372036854775807L)

	)

188 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

190 
	#INTPTR_MIN
 (-2147483647-1)

	)

191 
	#INTPTR_MAX
 (2147483647)

	)

192 
	#UINTPTR_MAX
 (4294967295U)

	)

197 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

199 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

202 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

208 #i‡
__WORDSIZE
 == 64

209 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

210 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

212 #i‡
__WORDSIZE32_PTRDIFF_LONG


213 
	#PTRDIFF_MIN
 (-2147483647L-1)

	)

214 
	#PTRDIFF_MAX
 (2147483647L)

	)

216 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

217 
	#PTRDIFF_MAX
 (2147483647)

	)

222 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

223 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

226 #i‡
__WORDSIZE
 == 64

227 
	#SIZE_MAX
 (18446744073709551615UL)

	)

229 #i‡
__WORDSIZE32_SIZE_ULONG


230 
	#SIZE_MAX
 (4294967295UL)

	)

232 
	#SIZE_MAX
 (4294967295U)

	)

237 #i‚de‡
WCHAR_MIN


239 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

240 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

244 
	#WINT_MIN
 (0u)

	)

245 
	#WINT_MAX
 (4294967295u)

	)

248 
	#INT8_C
(
c
Ë
	)
c

249 
	#INT16_C
(
c
Ë
	)
c

250 
	#INT32_C
(
c
Ë
	)
c

251 #i‡
__WORDSIZE
 == 64

252 
	#INT64_C
(
c
Ë¯## 
L


	)

254 
	#INT64_C
(
c
Ë¯## 
LL


	)

258 
	#UINT8_C
(
c
Ë
	)
c

259 
	#UINT16_C
(
c
Ë
	)
c

260 
	#UINT32_C
(
c
Ë¯## 
U


	)

261 #i‡
__WORDSIZE
 == 64

262 
	#UINT64_C
(
c
Ë¯## 
UL


	)

264 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

268 #i‡
__WORDSIZE
 == 64

269 
	#INTMAX_C
(
c
Ë¯## 
L


	)

270 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

272 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

273 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

276 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

278 
	#INT8_WIDTH
 8

	)

279 
	#UINT8_WIDTH
 8

	)

280 
	#INT16_WIDTH
 16

	)

281 
	#UINT16_WIDTH
 16

	)

282 
	#INT32_WIDTH
 32

	)

283 
	#UINT32_WIDTH
 32

	)

284 
	#INT64_WIDTH
 64

	)

285 
	#UINT64_WIDTH
 64

	)

287 
	#INT_LEAST8_WIDTH
 8

	)

288 
	#UINT_LEAST8_WIDTH
 8

	)

289 
	#INT_LEAST16_WIDTH
 16

	)

290 
	#UINT_LEAST16_WIDTH
 16

	)

291 
	#INT_LEAST32_WIDTH
 32

	)

292 
	#UINT_LEAST32_WIDTH
 32

	)

293 
	#INT_LEAST64_WIDTH
 64

	)

294 
	#UINT_LEAST64_WIDTH
 64

	)

296 
	#INT_FAST8_WIDTH
 8

	)

297 
	#UINT_FAST8_WIDTH
 8

	)

298 
	#INT_FAST16_WIDTH
 
__WORDSIZE


	)

299 
	#UINT_FAST16_WIDTH
 
__WORDSIZE


	)

300 
	#INT_FAST32_WIDTH
 
__WORDSIZE


	)

301 
	#UINT_FAST32_WIDTH
 
__WORDSIZE


	)

302 
	#INT_FAST64_WIDTH
 64

	)

303 
	#UINT_FAST64_WIDTH
 64

	)

305 
	#INTPTR_WIDTH
 
__WORDSIZE


	)

306 
	#UINTPTR_WIDTH
 
__WORDSIZE


	)

308 
	#INTMAX_WIDTH
 64

	)

309 
	#UINTMAX_WIDTH
 64

	)

311 
	#PTRDIFF_WIDTH
 
__WORDSIZE


	)

312 
	#SIG_ATOMIC_WIDTH
 32

	)

313 
	#SIZE_WIDTH
 
__WORDSIZE


	)

314 
	#WCHAR_WIDTH
 32

	)

315 
	#WINT_WIDTH
 32

	)

	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


24 
	#_STDIO_H
 1

	)

26 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

27 
	~<bôs/libc-hódî-°¨t.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	#__√ed___va_li°


	)

36 
	~<°d¨g.h
>

38 
	~<bôs/ty≥s.h
>

39 
	~<bôs/ty≥s/__Âos_t.h
>

40 
	~<bôs/ty≥s/__Âos64_t.h
>

41 
	~<bôs/ty≥s/__FILE.h
>

42 
	~<bôs/ty≥s/FILE.h
>

43 
	~<bôs/ty≥s/°ru˘_FILE.h
>

45 #ifde‡
__USE_GNU


46 
	~<bôs/ty≥s/cookõ_io_fun˘i⁄s_t.h
>

49 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


50 #ifde‡
__GNUC__


51 #i‚de‡
_VA_LIST_DEFINED


52 
__gnuc_va_li°
 
	tva_li°
;

53 
	#_VA_LIST_DEFINED


	)

56 
	~<°d¨g.h
>

60 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__off_t_deföed


62 #i‚de‡
__USE_FILE_OFFSET64


63 
__off_t
 
	toff_t
;

65 
__off64_t
 
	toff_t
;

67 
	#__off_t_deföed


	)

69 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


70 
__off64_t
 
	toff64_t
;

71 
	#__off64_t_deföed


	)

75 #ifde‡
__USE_XOPEN2K8


76 #i‚de‡
__ssize_t_deföed


77 
__ssize_t
 
	tssize_t
;

78 
	#__ssize_t_deföed


	)

83 #i‚de‡
__USE_FILE_OFFSET64


84 
__Âos_t
 
	tÂos_t
;

86 
__Âos64_t
 
	tÂos_t
;

88 #ifde‡
__USE_LARGEFILE64


89 
__Âos64_t
 
	tÂos64_t
;

93 
	#_IOFBF
 0

	)

94 
	#_IOLBF
 1

	)

95 
	#_IONBF
 2

	)

99 
	#BUFSIZ
 8192

	)

104 
	#EOF
 (-1)

	)

109 
	#SEEK_SET
 0

	)

110 
	#SEEK_CUR
 1

	)

111 
	#SEEK_END
 2

	)

112 #ifde‡
__USE_GNU


113 
	#SEEK_DATA
 3

	)

114 
	#SEEK_HOLE
 4

	)

118 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


120 
	#P_tmpdú
 "/tmp"

	)

133 
	~<bôs/°dio_lim.h
>

136 #i‡
__GLIBC_USE
 (
ISOC2X
)

138 
	#_PRINTF_NAN_LEN_MAX
 4

	)

143 
FILE
 *
°dö
;

144 
FILE
 *
°dout
;

145 
FILE
 *
°dîr
;

147 
	#°dö
 
°dö


	)

148 
	#°dout
 
°dout


	)

149 
	#°dîr
 
°dîr


	)

152 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

154 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

156 #ifde‡
__USE_ATFILE


158 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

159 c⁄° *
__√w
Ë
__THROW
;

162 #ifde‡
__USE_GNU


164 
	#RENAME_NOREPLACE
 (1 << 0)

	)

165 
	#RENAME_EXCHANGE
 (1 << 1)

	)

166 
	#RENAME_WHITEOUT
 (1 << 2)

	)

170 
	$ª«mót2
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

171 c⁄° *
__√w
, 
__Êags
Ë
__THROW
;

178 
	`f˛o£
 (
FILE
 *
__°ªam
);

180 #unde‡
__©å_dóŒoc_f˛o£


181 
	#__©å_dóŒoc_f˛o£
 
	`__©å_dóŒoc
 (
f˛o£
, 1)

	)

187 #i‚de‡
__USE_FILE_OFFSET64


188 
FILE
 *
	$tmpfûe
 ()

189 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

191 #ifde‡
__REDIRECT


192 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
)

193 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

195 
	#tmpfûe
 
tmpfûe64


	)

199 #ifde‡
__USE_LARGEFILE64


200 
FILE
 *
	$tmpfûe64
 ()

201 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

205 *
	$tm≤am
 ([
L_tm≤am
]Ë
__THROW
 
__wur
;

207 #ifde‡
__USE_MISC


210 *
	$tm≤am_r
 (
__s
[
L_tm≤am
]Ë
__THROW
 
__wur
;

214 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


222 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

223 
__THROW
 
__©åibuã_mÆloc__
 
__wur
 
__©å_dóŒoc_‰ì
;

230 
	`fÊush
 (
FILE
 *
__°ªam
);

232 #ifde‡
__USE_MISC


239 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

242 #ifde‡
__USE_GNU


249 
	`f˛o£Æl
 ();

253 #i‚de‡
__USE_FILE_OFFSET64


258 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

259 c⁄° *
__ª°ri˘
 
__modes
)

260 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

265 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

266 c⁄° *
__ª°ri˘
 
__modes
,

267 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

269 #ifde‡
__REDIRECT


270 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

271 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

272 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

273 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

274 c⁄° *
__ª°ri˘
 
__modes
,

275 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

276 
__wur
;

278 
	#f›í
 
f›í64


	)

279 
	#‰e›í
 
‰e›í64


	)

282 #ifde‡
__USE_LARGEFILE64


283 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
)

285 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

286 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

291 #ifdef 
__USE_POSIX


293 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW


294 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

297 #ifdef 
__USE_GNU


300 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

301 c⁄° *
__ª°ri˘
 
__modes
,

302 
cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW


303 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

306 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
)

308 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

309 
__THROW
 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

314 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW


315 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

317 #ifde‡
_WCHAR_H


321 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW


322 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
;

328 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

332 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

333 
__modes
, 
size_t
 
__n
Ë
__THROW
;

335 #ifdef 
__USE_MISC


338 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

339 
size_t
 
__size
Ë
__THROW
;

342 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

350 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

351 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

356 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

358 
	$•rötf
 (*
__ª°ri˘
 
__s
,

359 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

365 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

366 
__gnuc_va_li°
 
__¨g
);

371 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
);

373 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

374 
__gnuc_va_li°
 
__¨g
Ë
__THROWNL
;

376 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


378 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

379 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

380 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

382 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

383 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
)

384 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

387 #i‡
	`__GLIBC_USE
 (
LIB_EXT2
)

390 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

391 
__gnuc_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

393 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

394 c⁄° *
__ª°ri˘
 
__fmt
, ...)

395 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

396 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

397 c⁄° *
__ª°ri˘
 
__fmt
, ...)

398 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

401 #ifde‡
__USE_XOPEN2K8


403 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

404 
__gnuc_va_li°
 
__¨g
)

405 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

406 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

415 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

416 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

421 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

423 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

424 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

430 
	~<bôs/Êﬂä.h
>

431 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
Ë&& !
deföed
 
__LDBL_COMPAT
 \

432 && 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 0

433 #ifde‡
__REDIRECT


434 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

435 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

436 
__isoc99_fsˇnf
Ë
__wur
;

437 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

438 
__isoc99_sˇnf
Ë
__wur
;

439 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

440 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

441 
__isoc99_ssˇnf
);

443 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

445 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

446 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

447 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

448 
	#fsˇnf
 
__isoc99_fsˇnf


	)

449 
	#sˇnf
 
__isoc99_sˇnf


	)

450 
	#ssˇnf
 
__isoc99_ssˇnf


	)

454 #ifdef 
__USE_ISOC99


459 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

460 
__gnuc_va_li°
 
__¨g
)

461 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

467 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
)

468 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

471 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

472 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
)

473 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

476 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
)

477 #i‡
deföed
 
__REDIRECT
 && !deföed 
__LDBL_COMPAT
 \

478 && 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 0

479 
	`__REDIRECT
 (
vfsˇnf
,

480 (
FILE
 *
__ª°ri˘
 
__s
,

481 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
),

482 
__isoc99_vfsˇnf
)

483 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

484 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

485 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

486 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

487 
	`__REDIRECT_NTH
 (
vssˇnf
,

488 (c⁄° *
__ª°ri˘
 
__s
,

489 c⁄° *
__ª°ri˘
 
__f‹m©
,

490 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

491 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

492 #ñi‡!
deföed
 
__REDIRECT


493 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

494 c⁄° *
__ª°ri˘
 
__f‹m©
,

495 
__gnuc_va_li°
 
__¨g
Ë
__wur
;

496 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

497 
__gnuc_va_li°
 
__¨g
Ë
__wur
;

498 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

499 c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

501 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

502 
	#vsˇnf
 
__isoc99_vsˇnf


	)

503 
	#vssˇnf
 
__isoc99_vssˇnf


	)

513 
	`fgëc
 (
FILE
 *
__°ªam
);

514 
	`gëc
 (
FILE
 *
__°ªam
);

520 
	`gëch¨
 ();

522 #ifde‡
__USE_POSIX199506


527 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

528 
	`gëch¨_u∆ocked
 ();

531 #ifde‡
__USE_MISC


538 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

549 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

550 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

556 
	`putch¨
 (
__c
);

558 #ifde‡
__USE_MISC


565 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

568 #ifde‡
__USE_POSIX199506


573 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putch¨_u∆ocked
 (
__c
);

578 #i‡
deföed
 
__USE_MISC
 \

579 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

581 
	`gëw
 (
FILE
 *
__°ªam
);

584 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

592 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

593 
__wur
 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 2);

595 #i‡
	`__GLIBC_USE
 (
DEPRECATED_GETS
)

605 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

608 #ifde‡
__USE_GNU


615 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

616 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur


617 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 2);

621 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
)

632 
__ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

633 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

634 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

635 
__ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

636 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

637 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

645 
__ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

646 
size_t
 *
__ª°ri˘
 
__n
,

647 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

655 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

661 
	`puts
 (c⁄° *
__s
);

668 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

675 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

676 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

681 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

682 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

684 #ifde‡
__USE_GNU


691 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

692 
FILE
 *
__ª°ri˘
 
__°ªam
);

695 #ifde‡
__USE_MISC


702 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

703 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

704 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

705 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

713 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

718 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

723 
	`ªwöd
 (
FILE
 *
__°ªam
);

730 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


731 #i‚de‡
__USE_FILE_OFFSET64


736 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

741 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

743 #ifde‡
__REDIRECT


744 
	`__REDIRECT
 (
f£eko
,

745 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

746 
f£eko64
);

747 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

749 
	#f£eko
 
f£eko64


	)

750 
	#·ñlo
 
·ñlo64


	)

755 #i‚de‡
__USE_FILE_OFFSET64


760 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

765 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

767 #ifde‡
__REDIRECT


768 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

769 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

770 
	`__REDIRECT
 (
f£ços
,

771 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

773 
	#fgëpos
 
fgëpos64


	)

774 
	#f£ços
 
f£ços64


	)

778 #ifde‡
__USE_LARGEFILE64


779 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

780 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

781 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

782 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

786 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

788 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

790 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

792 #ifde‡
__USE_MISC


794 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

795 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

796 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

804 
	`≥º‹
 (c⁄° *
__s
);

807 #ifdef 
__USE_POSIX


809 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

812 #ifde‡
__USE_MISC


814 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

818 #ifde‡
__USE_POSIX2


823 
	`p˛o£
 (
FILE
 *
__°ªam
);

829 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
)

830 
__©åibuã_mÆloc__
 
	$__©å_dóŒoc
 (
p˛o£
, 1Ë
__wur
;

835 #ifdef 
__USE_POSIX


837 *
	$˘îmid
 (*
__s
Ë
__THROW


838 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1));

842 #i‡(
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
Ë|| deföed 
__USE_GNU


844 *
	$cu£rid
 (*
__s
)

845 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1));

849 #ifdef 
__USE_GNU


850 
ob°ack
;

853 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

854 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

855 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

856 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

857 c⁄° *
__ª°ri˘
 
__f‹m©
,

858 
__gnuc_va_li°
 
__¨gs
)

859 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

863 #ifde‡
__USE_POSIX199506


867 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

871 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

874 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

877 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


880 
	~<bôs/gë›t_posix.h
>

885 
	`__uÊow
 (
FILE
 *);

886 
	`__ovîÊow
 (
FILE
 *, );

890 #ifde‡
__USE_EXTERN_INLINES


891 
	~<bôs/°dio.h
>

893 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


894 
	~<bôs/°dio2.h
>

897 
	~<bôs/Êﬂä.h
>

898 #i‡
deföed
 
__LDBL_COMPAT
 || 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

899 
	~<bôs/°dio-ldbl.h
>

902 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 
	#_STDLIB_H
 1

	)

38 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


40 
	~<bôs/waôÊags.h
>

41 
	~<bôs/waô°©us.h
>

44 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (°©us)

	)

45 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (°©us)

	)

46 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (°©us)

	)

47 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (°©us)

	)

48 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (°©us)

	)

49 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (°©us)

	)

50 #ifde‡
__WIFCONTINUED


51 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (°©us)

	)

56 
	~<bôs/Êﬂä.h
>

61 
	mquŸ
;

62 
	mªm
;

63 } 
	tdiv_t
;

66 #i‚de‡
__ldiv_t_deföed


69 
	mquŸ
;

70 
	mªm
;

71 } 
	tldiv_t
;

72 
	#__ldiv_t_deföed
 1

	)

75 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


77 
__exãnsi⁄__
 struct

79 
	mquŸ
;

80 
	mªm
;

81 } 
	tŒdiv_t
;

82 
	#__Œdiv_t_deföed
 1

	)

87 
	#RAND_MAX
 2147483647

	)

92 
	#EXIT_FAILURE
 1

	)

93 
	#EXIT_SUCCESS
 0

	)

97 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

98 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

102 
	$©of
 (c⁄° *
__≈å
)

103 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

105 
	$©oi
 (c⁄° *
__≈å
)

106 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

108 
	$©ﬁ
 (c⁄° *
__≈å
)

109 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

111 #ifde‡
__USE_ISOC99


113 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

114 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

118 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

119 **
__ª°ri˘
 
__íd±r
)

120 
__THROW
 
	`__n⁄nuŒ
 ((1));

122 #ifdef 
__USE_ISOC99


124 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

125 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

127 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

128 **
__ª°ri˘
 
__íd±r
)

129 
__THROW
 
	`__n⁄nuŒ
 ((1));

134 #i‡
__HAVE_FLOAT16
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

135 
_Flﬂt16
 
	$°πof16
 (c⁄° *
__ª°ri˘
 
__≈å
,

136 **
__ª°ri˘
 
__íd±r
)

137 
__THROW
 
	`__n⁄nuŒ
 ((1));

140 #i‡
__HAVE_FLOAT32
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

141 
_Flﬂt32
 
	$°πof32
 (c⁄° *
__ª°ri˘
 
__≈å
,

142 **
__ª°ri˘
 
__íd±r
)

143 
__THROW
 
	`__n⁄nuŒ
 ((1));

146 #i‡
__HAVE_FLOAT64
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

147 
_Flﬂt64
 
	$°πof64
 (c⁄° *
__ª°ri˘
 
__≈å
,

148 **
__ª°ri˘
 
__íd±r
)

149 
__THROW
 
	`__n⁄nuŒ
 ((1));

152 #i‡
__HAVE_FLOAT128
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

153 
_Flﬂt128
 
	$°πof128
 (c⁄° *
__ª°ri˘
 
__≈å
,

154 **
__ª°ri˘
 
__íd±r
)

155 
__THROW
 
	`__n⁄nuŒ
 ((1));

158 #i‡
__HAVE_FLOAT32X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

159 
_Flﬂt32x
 
	$°πof32x
 (c⁄° *
__ª°ri˘
 
__≈å
,

160 **
__ª°ri˘
 
__íd±r
)

161 
__THROW
 
	`__n⁄nuŒ
 ((1));

164 #i‡
__HAVE_FLOAT64X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

165 
_Flﬂt64x
 
	$°πof64x
 (c⁄° *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1));

170 #i‡
__HAVE_FLOAT128X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

171 
_Flﬂt128x
 
	$°πof128x
 (c⁄° *
__ª°ri˘
 
__≈å
,

172 **
__ª°ri˘
 
__íd±r
)

173 
__THROW
 
	`__n⁄nuŒ
 ((1));

177 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

178 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

179 
__THROW
 
	`__n⁄nuŒ
 ((1));

181 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

182 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

183 
__THROW
 
	`__n⁄nuŒ
 ((1));

185 #ifde‡
__USE_MISC


187 
__exãnsi⁄__


188 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1));

192 
__exãnsi⁄__


193 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

194 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

195 
__THROW
 
	`__n⁄nuŒ
 ((1));

198 #ifde‡
__USE_ISOC99


200 
__exãnsi⁄__


201 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 
__exãnsi⁄__


206 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

207 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

208 
__THROW
 
	`__n⁄nuŒ
 ((1));

212 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

213 
	$°r‰omd
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

214 
__f
)

215 
__THROW
 
	`__n⁄nuŒ
 ((3));

217 
	$°r‰omf
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

218 
__f
)

219 
__THROW
 
	`__n⁄nuŒ
 ((3));

221 
	$°r‰oml
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

222 
__f
)

223 
__THROW
 
	`__n⁄nuŒ
 ((3));

226 #i‡
__HAVE_FLOAT16
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

227 
	$°r‰omf16
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

228 
_Flﬂt16
 
__f
)

229 
__THROW
 
	`__n⁄nuŒ
 ((3));

232 #i‡
__HAVE_FLOAT32
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

233 
	$°r‰omf32
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

234 
_Flﬂt32
 
__f
)

235 
__THROW
 
	`__n⁄nuŒ
 ((3));

238 #i‡
__HAVE_FLOAT64
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

239 
	$°r‰omf64
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

240 
_Flﬂt64
 
__f
)

241 
__THROW
 
	`__n⁄nuŒ
 ((3));

244 #i‡
__HAVE_FLOAT128
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

245 
	$°r‰omf128
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

246 
_Flﬂt128
 
__f
)

247 
__THROW
 
	`__n⁄nuŒ
 ((3));

250 #i‡
__HAVE_FLOAT32X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

251 
	$°r‰omf32x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

252 
_Flﬂt32x
 
__f
)

253 
__THROW
 
	`__n⁄nuŒ
 ((3));

256 #i‡
__HAVE_FLOAT64X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

257 
	$°r‰omf64x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

258 
_Flﬂt64x
 
__f
)

259 
__THROW
 
	`__n⁄nuŒ
 ((3));

262 #i‡
__HAVE_FLOAT128X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

263 
	$°r‰omf128x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

264 
_Flﬂt128x
 
__f
)

265 
__THROW
 
	`__n⁄nuŒ
 ((3));

269 #ifde‡
__USE_GNU


273 
	~<bôs/ty≥s/loˇÀ_t.h
>

275 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

276 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

277 
loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

279 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

280 **
__ª°ri˘
 
__íd±r
,

281 
__ba£
, 
loˇÀ_t
 
__loc
)

282 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

284 
__exãnsi⁄__


285 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

286 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

287 
loˇÀ_t
 
__loc
)

288 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

290 
__exãnsi⁄__


291 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

292 **
__ª°ri˘
 
__íd±r
,

293 
__ba£
, 
loˇÀ_t
 
__loc
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

296 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

297 **
__ª°ri˘
 
__íd±r
, 
loˇÀ_t
 
__loc
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

300 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

301 **
__ª°ri˘
 
__íd±r
, 
loˇÀ_t
 
__loc
)

302 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

304 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

305 **
__ª°ri˘
 
__íd±r
,

306 
loˇÀ_t
 
__loc
)

307 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

309 #i‡
__HAVE_FLOAT16


310 
_Flﬂt16
 
	$°πof16_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

311 **
__ª°ri˘
 
__íd±r
,

312 
loˇÀ_t
 
__loc
)

313 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

316 #i‡
__HAVE_FLOAT32


317 
_Flﬂt32
 
	$°πof32_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

318 **
__ª°ri˘
 
__íd±r
,

319 
loˇÀ_t
 
__loc
)

320 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

323 #i‡
__HAVE_FLOAT64


324 
_Flﬂt64
 
	$°πof64_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

325 **
__ª°ri˘
 
__íd±r
,

326 
loˇÀ_t
 
__loc
)

327 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

330 #i‡
__HAVE_FLOAT128


331 
_Flﬂt128
 
	$°πof128_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

332 **
__ª°ri˘
 
__íd±r
,

333 
loˇÀ_t
 
__loc
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

337 #i‡
__HAVE_FLOAT32X


338 
_Flﬂt32x
 
	$°πof32x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

339 **
__ª°ri˘
 
__íd±r
,

340 
loˇÀ_t
 
__loc
)

341 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

344 #i‡
__HAVE_FLOAT64X


345 
_Flﬂt64x
 
	$°πof64x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

346 **
__ª°ri˘
 
__íd±r
,

347 
loˇÀ_t
 
__loc
)

348 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

351 #i‡
__HAVE_FLOAT128X


352 
_Flﬂt128x
 
	$°πof128x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

353 **
__ª°ri˘
 
__íd±r
,

354 
loˇÀ_t
 
__loc
)

355 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

360 #ifde‡
__USE_EXTERN_INLINES


361 
__exã∫_ölöe
 

362 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

364  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

365 
	}
}

366 
__exã∫_ölöe
 

367 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

369  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

370 
	}
}

372 #ifde‡
__USE_ISOC99


373 
__exãnsi⁄__
 
__exã∫_ölöe
 

374 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

376  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

377 
	}
}

382 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


386 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

389 
	$a64l
 (c⁄° *
__s
)

390 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

394 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


395 
	~<sys/ty≥s.h
>

402 
	$øndom
 (Ë
__THROW
;

405 
	$§™dom
 (
__£ed
Ë
__THROW
;

411 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

412 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

416 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

419 #ifde‡
__USE_MISC


424 
	søndom_d©a


426 
öt32_t
 *
Âå
;

427 
öt32_t
 *
Ωå
;

428 
öt32_t
 *
°©e
;

429 
ønd_ty≥
;

430 
ønd_deg
;

431 
ønd_£p
;

432 
öt32_t
 *
íd_±r
;

435 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

436 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2));

441 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

442 
size_t
 
__°©ñí
,

443 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

444 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

446 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

447 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

448 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

454 
	$ønd
 (Ë
__THROW
;

456 
	$§™d
 (
__£ed
Ë
__THROW
;

458 #ifde‡
__USE_POSIX199506


460 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

464 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


468 
	$dønd48
 (Ë
__THROW
;

469 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

472 
	$Ã™d48
 (Ë
__THROW
;

473 
	$ƒ™d48
 (
__xsubi
[3])

474 
__THROW
 
	`__n⁄nuŒ
 ((1));

477 
	$mønd48
 (Ë
__THROW
;

478 
	$jønd48
 (
__xsubi
[3])

479 
__THROW
 
	`__n⁄nuŒ
 ((1));

482 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

483 *
	$£ed48
 (
__£ed16v
[3])

484 
__THROW
 
	`__n⁄nuŒ
 ((1));

485 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

487 #ifde‡
__USE_MISC


491 
	sdønd48_d©a


493 
__x
[3];

494 
__ﬁd_x
[3];

495 
__c
;

496 
__öô
;

497 
__exãnsi⁄__
 
__a
;

502 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

503 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

504 
	$î™d48_r
 (
__xsubi
[3],

505 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

506 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

509 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

510 *
__ª°ri˘
 
__ªsu…
)

511 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

512 
	$ƒ™d48_r
 (
__xsubi
[3],

513 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

514 *
__ª°ri˘
 
__ªsu…
)

515 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

518 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

519 *
__ª°ri˘
 
__ªsu…
)

520 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

521 
	$jønd48_r
 (
__xsubi
[3],

522 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

523 *
__ª°ri˘
 
__ªsu…
)

524 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

527 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

528 
__THROW
 
	`__n⁄nuŒ
 ((2));

530 
	$£ed48_r
 (
__£ed16v
[3],

531 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

533 
	$lc⁄g48_r
 (
__∑øm
[7],

534 
dønd48_d©a
 *
__buf„r
)

535 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

540 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__


541 
	`__©åibuã_Æloc_size__
 ((1)Ë
__wur
;

543 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

544 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((1, 2)Ë
__wur
;

551 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

552 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
 
	`__©åibuã_Æloc_size__
 ((2));

555 
	$‰ì
 (*
__±r
Ë
__THROW
;

557 #ifde‡
__USE_MISC


563 *
	$ªÆloˇºay
 (*
__±r
, 
size_t
 
__nmemb
, size_à
__size
)

564 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__


565 
	`__©åibuã_Æloc_size__
 ((2, 3))

566 
__©å_dóŒoc_‰ì
;

569 *
	$ªÆloˇºay
 (*
__±r
, 
size_t
 
__nmemb
, size_à
__size
)

570 
__THROW
 
	`__©å_dóŒoc
 (
ªÆloˇºay
, 1);

573 #ifde‡
__USE_MISC


574 
	~<Æloˇ.h
>

577 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

578 || 
deföed
 
__USE_MISC


580 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__


581 
	`__©åibuã_Æloc_size__
 ((1)Ë
__wur
;

584 #ifde‡
__USE_XOPEN2K


586 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

587 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

590 #ifde‡
__USE_ISOC11


592 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

593 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_Æign__
 ((1))

594 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

598 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

602 
	$©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

604 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


606 #ifde‡
__˝lu•lus


607 "C++" 
	$©_quick_exô
 ((*
__func
) ())

608 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

610 
	$©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

614 #ifdef 
__USE_MISC


617 
	$⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

618 
__THROW
 
	`__n⁄nuŒ
 ((1));

624 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

626 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


630 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

633 #ifde‡
__USE_ISOC99


636 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

641 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 #ifde‡
__USE_GNU


646 *
	$£cuª_gëív
 (c⁄° *
__«me
)

647 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

650 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


654 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

657 #ifde‡
__USE_XOPEN2K


660 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

661 
__THROW
 
	`__n⁄nuŒ
 ((2));

664 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

667 #ifdef 
__USE_MISC


671 
	$˛óªnv
 (Ë
__THROW
;

675 #i‡
deföed
 
__USE_MISC
 \

676 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

682 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

685 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


694 #i‚de‡
__USE_FILE_OFFSET64


695 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

699 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

701 
	#mk°emp
 
mk°emp64


	)

704 #ifde‡
__USE_LARGEFILE64


705 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

709 #ifde‡
__USE_MISC


716 #i‚de‡
__USE_FILE_OFFSET64


717 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

719 #ifde‡
__REDIRECT


720 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

721 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

723 
	#mk°emps
 
mk°emps64


	)

726 #ifde‡
__USE_LARGEFILE64


727 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

728 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

732 #ifde‡
__USE_XOPEN2K8


738 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

741 #ifde‡
__USE_GNU


748 #i‚de‡
__USE_FILE_OFFSET64


749 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

751 #ifde‡
__REDIRECT


752 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

753 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

755 
	#mko°emp
 
mko°emp64


	)

758 #ifde‡
__USE_LARGEFILE64


759 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

768 #i‚de‡
__USE_FILE_OFFSET64


769 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

770 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

772 #ifde‡
__REDIRECT


773 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

774 
__Êags
), 
mko°emps64
)

775 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

777 
	#mko°emps
 
mko°emps64


	)

780 #ifde‡
__USE_LARGEFILE64


781 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

782 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

791 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

794 #ifdef 
__USE_GNU


797 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

798 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_mÆloc__


799 
__©å_dóŒoc_‰ì
 
__wur
;

802 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


808 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

809 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

814 #i‚de‡
__COMPAR_FN_T


815 
	#__COMPAR_FN_T


	)

816 (*
	t__com∑r_‚_t
) (const *, const *);

818 #ifdef 
__USE_GNU


819 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

822 #ifde‡
__USE_GNU


823 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

828 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

829 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

830 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

832 #ifde‡
__USE_EXTERN_INLINES


833 
	~<bôs/°dlib-b£¨ch.h
>

838 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

839 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

840 #ifde‡
__USE_GNU


841 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

842 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

843 
	`__n⁄nuŒ
 ((1, 4));

848 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

849 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

851 #ifde‡
__USE_ISOC99


852 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

853 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

860 
div_t
 
	$div
 (
__numî
, 
__díom
)

861 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

862 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

863 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

865 #ifde‡
__USE_ISOC99


866 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

867 
__díom
)

868 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

872 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

873 || 
deföed
 
__USE_MISC


880 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

881 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

886 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

887 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

892 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

893 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

896 #ifde‡
__USE_MISC


898 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

899 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

900 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

901 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

902 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

903 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

904 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

905 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

910 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

911 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

912 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

913 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

914 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

915 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

917 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

918 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

919 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

920 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

921 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

922 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

923 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

924 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

930 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

933 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

934 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

937 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

941 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

942 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW


943 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 2));

945 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

946 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

947 
__THROW


948 
	$__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 3)

949 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 2));

951 #ifde‡
__USE_MISC


956 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

960 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


967 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

968 *c⁄° *
__ª°ri˘
 
__tokís
,

969 **
__ª°ri˘
 
__vÆuï
)

970 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

976 #ifde‡
__USE_XOPEN2KXSI


978 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

981 #ifde‡
__USE_XOPEN_EXTENDED


986 
	$gø¡±
 (
__fd
Ë
__THROW
;

990 
	$u∆ock±
 (
__fd
Ë
__THROW
;

995 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

998 #ifde‡
__USE_GNU


1002 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

1003 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 3);

1006 
	`gë±
 ();

1009 #ifde‡
__USE_MISC


1013 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

1014 
__THROW
 
	`__n⁄nuŒ
 ((1));

1017 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K


1020 
	$ây¶Ÿ
 (Ë
__THROW
;

1023 
	~<bôs/°dlib-Êﬂt.h
>

1026 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1027 
	~<bôs/°dlib.h
>

1030 
	~<bôs/Êﬂä.h
>

1031 #i‡
deföed
 
__LDBL_COMPAT
 || 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

1032 
	~<bôs/°dlib-ldbl.h
>

1035 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

28 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

36 #i‡
deföed
 
__˝lu•lus
 && (
__GNUC_PREREQ
 (4, 4) \

37 || 
	$__glibc_˛™g_¥îeq
 (3, 5))

38 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

43 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

44 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

47 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

48 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

53 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || 
	`__GLIBC_USE
 (
ISOC2X
)

54 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

55 
__c
, 
size_t
 
__n
)

56 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 4));

61 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

64 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

65 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

80 
	$__memcm≥q
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

81 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

84 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


87 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

88 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

89 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

90 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

92 #ifde‡
__OPTIMIZE__


93 
__exã∫_Æways_ölöe
 *

94 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


96  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

99 
__exã∫_Æways_ölöe
 const *

100 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


102  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

105 
	}
}

107 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

108 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

111 #ifde‡
__USE_GNU


114 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


115 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

116 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

118 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

120 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

125 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


126 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

127 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1))

128 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 3));

129 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

130 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1))

131 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 3));

133 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

134 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1))

135 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 3));

141 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

142 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

144 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

145 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

146 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

149 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

150 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

152 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

153 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

156 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

157 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

159 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

160 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

163 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

164 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

166 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

167 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

168 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3));

170 #ifde‡
__USE_XOPEN2K8


172 
	~<bôs/ty≥s/loˇÀ_t.h
>

175 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
loˇÀ_t
 
__l
)

176 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

179 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

180 
loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4))

181 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3));

184 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8
 \

185 || 
	`__GLIBC_USE
 (
LIB_EXT2
Ë|| 
	$__GLIBC_USE
 (
ISOC2X
))

187 *
	$°rdup
 (c⁄° *
__s
)

188 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

194 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
Ë|| __GLIBC_USE (
ISOC2X
)

195 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

196 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

199 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


201 
	#°rdu∑
(
s
) \

202 (
__exãnsi⁄__
 \

204 c⁄° *
__ﬁd
 = (
s
); \

205 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

206 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

207 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

208 
	}
}))

	)

211 
	#°∫du∑
(
s
, 
n
) \

212 (
__exãnsi⁄__
 \

214 c⁄° *
__ﬁd
 = (
s
); \

215 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

216 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

217 
__√w
[
__Àn
] = '\0'; \

218 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

219 }))

	)

223 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


226 *
°rchr
 (*
__s
, 
__c
)

227 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

228 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

229 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

231 #ifde‡
__OPTIMIZE__


232 
__exã∫_Æways_ölöe
 *

233 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


235  
__buûtö_°rchr
 (
__s
, 
__c
);

238 
__exã∫_Æways_ölöe
 const *

239 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


241  
__buûtö_°rchr
 (
__s
, 
__c
);

246 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

247 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

250 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


253 *
	`°ºchr
 (*
__s
, 
__c
)

254 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

255 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

256 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

258 #ifde‡
__OPTIMIZE__


259 
__exã∫_Æways_ölöe
 *

260 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


262  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

265 
__exã∫_Æways_ölöe
 const *

266 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


268  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

271 
	}
}

273 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

274 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 #ifde‡
__USE_GNU


280 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


281 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

282 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

283 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

284 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

286 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

287 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

293 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

294 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

297 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

298 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

300 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


303 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

304 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

305 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

306 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

308 #ifde‡
__OPTIMIZE__


309 
__exã∫_Æways_ölöe
 *

310 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


312  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

315 
__exã∫_Æways_ölöe
 const *

316 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


318  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

321 
	}
}

323 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

324 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


330 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

331 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

332 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

333 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

335 #ifde‡
__OPTIMIZE__


336 
__exã∫_Æways_ölöe
 *

337 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


339  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

342 
__exã∫_Æways_ölöe
 const *

343 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


345  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

348 
	}
}

350 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

351 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

356 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2));

361 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

362 c⁄° *
__ª°ri˘
 
__dñim
,

363 **
__ª°ri˘
 
__ßve_±r
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

365 #ifde‡
__USE_POSIX


366 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

367 **
__ª°ri˘
 
__ßve_±r
)

368 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

371 #ifde‡
__USE_GNU


373 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


374 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

375 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

376 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

377 c⁄° *
__√edÀ
)

378 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

380 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

381 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

385 #ifde‡
__USE_GNU


389 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

390 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

391 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3))

392 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 2))

393 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 3, 4));

397 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

398 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

399 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

400 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

401 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

402 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

407 
size_t
 
	$°æí
 (c⁄° *
__s
)

408 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

410 #ifdef 
__USE_XOPEN2K8


413 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

414 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

419 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

420 #ifde‡
__USE_XOPEN2K


428 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


431 #ifde‡
__REDIRECT_NTH


432 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

433 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

434 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2))

435 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

437 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

438 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

439 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

444 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

445 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

448 #ifde‡
__USE_GNU


450 c⁄° *
	$°ªº‹desc_≈
 (
__îr
Ë
__THROW
;

452 c⁄° *
	$°ªº‹«me_≈
 (
__îr
Ë
__THROW
;

456 #ifde‡
__USE_XOPEN2K8


458 *
	$°ªº‹_l
 (
__î∫um
, 
loˇÀ_t
 
__l
Ë
__THROW
;

461 #ifde‡
__USE_MISC


462 
	~<°rögs.h
>

466 
	$ex∂icô_bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1))

467 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 2);

471 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

472 c⁄° *
__ª°ri˘
 
__dñim
)

473 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

476 #ifdef 
__USE_XOPEN2K8


478 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

480 #ifde‡
__USE_GNU


482 c⁄° *
	$sigabbªv_≈
 (
__sig
Ë
__THROW
;

485 c⁄° *
	$sigdes¸_≈
 (
__sig
Ë
__THROW
;

489 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

490 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

491 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

492 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

496 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

497 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

498 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

499 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

500 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

501 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

504 #ifdef 
__USE_GNU


506 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

507 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

510 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

513 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1))

514 
	`__©å_ac˚ss
 ((
__ªad_wrôe__
, 1, 2));

516 #i‚de‡
ba£«me


521 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


522 "C++" *
	$ba£«me
 (*
__fûíame
)

523 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

524 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

525 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

527 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

532 #i‡
	`__GNUC_PREREQ
 (3,4)

533 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


535 
	~<bôs/°rög_f‹tifõd.h
>

539 
__END_DECLS


	@/usr/include/syslog.h

1 
	~<sys/sy¶og.h
>

	@/usr/include/time.h

22 #i‚def 
_TIME_H


23 
	#_TIME_H
 1

	)

25 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 
	#__√ed_NULL


	)

29 
	~<°ddef.h
>

33 
	~<bôs/time.h
>

37 
	~<bôs/ty≥s/˛ock_t.h
>

38 
	~<bôs/ty≥s/time_t.h
>

39 
	~<bôs/ty≥s/°ru˘_tm.h
>

41 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_ISOC11


42 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

45 #ifde‡
__USE_POSIX199309


46 
	~<bôs/ty≥s/˛ockid_t.h
>

47 
	~<bôs/ty≥s/timî_t.h
>

48 
	~<bôs/ty≥s/°ru˘_ôimî•ec.h
>

49 
	gsigevít
;

52 #ifde‡
__USE_XOPEN2K


53 #i‚de‡
__pid_t_deföed


54 
__pid_t
 
	tpid_t
;

55 
	#__pid_t_deföed


	)

59 #ifde‡
__USE_XOPEN2K8


60 
	~<bôs/ty≥s/loˇÀ_t.h
>

63 #ifde‡
__USE_ISOC11


65 
	#TIME_UTC
 1

	)

68 
__BEGIN_DECLS


72 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

74 #i‚de‡
__USE_TIME_BITS64


76 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

79 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

85 #ifde‡
__REDIRECT_NTH


86 
time_t
 
	`__REDIRECT_NTH
 (
time
, (time_à*
__timî
), 
__time64
);

87 
	`__REDIRECT_NTH
 (
dif·ime
, (
time_t
 
__time1
,Åime_à
__time0
),

88 
__dif·ime64
Ë
	`__©åibuã__
 ((
__c⁄°__
));

89 
time_t
 
	`__REDIRECT_NTH
 (
mktime
, (
tm
 *
__ç
), 
__mktime64
);

91 
	#time
 
__time64


	)

92 
	#dif·ime
 
__dif·ime64


	)

93 
	#mktime
 
__mktime64


	)

100 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

101 c⁄° *
__ª°ri˘
 
__f‹m©
,

102 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

104 #ifde‡
__USE_XOPEN


107 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

108 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

109 
__THROW
;

112 #ifde‡
__USE_XOPEN2K8


116 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

117 c⁄° *
__ª°ri˘
 
__f‹m©
,

118 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

119 
loˇÀ_t
 
__loc
Ë
__THROW
;

122 #ifde‡
__USE_GNU


123 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

124 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

125 
loˇÀ_t
 
__loc
Ë
__THROW
;

129 #i‚de‡
__USE_TIME_BITS64


132 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

136 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

139 #ifde‡
__REDIRECT_NTH


140 
tm
*
	`__REDIRECT_NTH
 (
gmtime
, (c⁄° 
time_t
 *
__timî
), 
__gmtime64
);

141 
tm
 *
	`__REDIRECT_NTH
 (
loˇ…ime
, (c⁄° 
time_t
 *
__timî
),

142 
__loˇ…ime64
);

144 
	#gmtime
 
__gmtime64


	)

145 
	#loˇ…ime
 
__loˇ…ime64


	)

150 #i‡
deföed
 
__USE_POSIX
 || 
	`__GLIBC_USE
 (
ISOC2X
)

151 #i‚de‡
__USE_TIME_BITS64


154 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

155 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

159 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

160 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

162 #ifde‡
__REDIRECT_NTH


163 
tm
*
	`__REDIRECT_NTH
 (
gmtime_r
, (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

164 
tm
 *
__ª°ri˘
 
__ç
),

165 
__gmtime64_r
);

167 
tm
*
	`__REDIRECT_NTH
 (
loˇ…ime_r
, (c⁄° 
time_t
 *
__ª°ri˘
 
__t
,

168 
tm
 *
__ª°ri˘
 
__ç
),

169 
__loˇ…ime64_r
);

171 
	#gmtime_r
 
__gmtime64_r


	)

172 
	#loˇ…ime_r
 
__loˇ…ime_r


	)

179 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

182 #i‚de‡
__USE_TIME_BITS64


183 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

185 #ifde‡
__REDIRECT_NTH


186 *
	`__REDIRECT_NTH
 (
˘ime
, (c⁄° 
time_t
 *
__timî
), 
__˘ime64
);

188 
	#˘ime
 
__˘ime64


	)

192 #ifde‡
__USE_POSIX


197 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

198 *
__ª°ri˘
 
__buf
Ë
__THROW
;

201 #i‚de‡
__USE_TIME_BITS64


202 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

203 *
__ª°ri˘
 
__buf
Ë
__THROW
;

205 #ifde‡
__REDIRECT_NTH


206 *
	`__REDIRECT_NTH
 (
˘ime_r
, (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

207 *
__ª°ri˘
 
__buf
), 
__˘ime64_r
);

209 
	#˘ime_r
 
__˘ime64_r


	)

217 *
__tz«me
[2];

218 
__daylight
;

219 
__timez⁄e
;

222 #ifdef 
__USE_POSIX


224 *
tz«me
[2];

228 
	$tz£t
 (Ë
__THROW
;

231 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


232 
daylight
;

233 
timez⁄e
;

239 
	#__i¶óp
(
yór
) \

240 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

243 #ifde‡
__USE_MISC


247 #i‚de‡
__USE_TIME_BITS64


249 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

251 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

253 #ifde‡
__REDIRECT_NTH


254 
time_t
 
	`__REDIRECT_NTH
 (
timegm
, (
tm
 *
__ç
), 
__timegm64
);

255 
time_t
 
	`__REDIRECT_NTH
 (
timñoˇl
, (
tm
 *
__ç
), 
__mktime64
);

257 
	#timegm
 
__timegm64


	)

262 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

266 #ifde‡
__USE_POSIX199309


267 #i‚de‡
__USE_TIME_BITS64


272 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

273 
time•ec
 *
__ªmaöög
);

276 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

279 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

282 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

283 
__THROW
;

285 #ifde‡
__REDIRECT


286 
	`__REDIRECT
 (
«no¶ìp
, (c⁄° 
time•ec
 *
__ªque°ed_time
,

287 
time•ec
 *
__ªmaöög
),

288 
__«no¶ìp64
);

289 
	`__REDIRECT_NTH
 (
˛ock_gëªs
, (
˛ockid_t
 
__˛ock_id
,

290 
time•ec
 *
__ªs
),

291 
__˛ock_gëªs64
);

292 
	`__REDIRECT_NTH
 (
˛ock_gëtime
, (
˛ockid_t
 
__˛ock_id
, 

293 
time•ec
 *
__ç
), 
__˛ock_gëtime64
);

294 
	`__REDIRECT_NTH
 (
˛ock_£âime
, (
˛ockid_t
 
__˛ock_id
, const 

295 
time•ec
 *
__ç
), 
__˛ock_£âime64
);

297 
	#«no¶ìp
 
__«no¶ìp64


	)

298 
	#˛ock_gëªs
 
__˛ock_gëªs64


	)

299 
	#˛ock_gëtime
 
__˛ock_gëtime64


	)

300 
	#˛ock_£âime
 
__˛ock_£âime64


	)

305 #ifde‡
__USE_XOPEN2K


310 #i‚de‡
__USE_TIME_BITS64


311 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

312 c⁄° 
time•ec
 *
__ªq
,

313 
time•ec
 *
__ªm
);

315 #ifde‡
__REDIRECT


316 
	`__REDIRECT
 (
˛ock_«no¶ìp
, (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

317 c⁄° 
time•ec
 *
__ªq
,

318 
time•ec
 *
__ªm
),

319 
__˛ock_«no¶ìp_time64
);

321 
	#˛ock_«no¶ìp
 
__˛ock_«no¶ìp_time64


	)

326 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

331 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

332 
sigevít
 *
__ª°ri˘
 
__evp
,

333 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

336 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

339 #i‚de‡
__USE_TIME_BITS64


340 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

341 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

342 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

345 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

346 
__THROW
;

348 #ifde‡
__REDIRECT_NTH


349 
	`__REDIRECT_NTH
 (
timî_£âime
, (
timî_t
 
__timîid
, 
__Êags
,

350 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

351 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
),

352 
__timî_£âime64
);

354 
	`__REDIRECT_NTH
 (
timî_gëtime
, (
timî_t
 
__timîid
,

355 
ôimî•ec
 *
__vÆue
),

356 
__timî_gëtime64
);

358 
	#timî_£âime
 
__timî_£âime64


	)

359 
	#timî_gëtime
 
__timî_gëtime64


	)

364 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

368 #ifde‡
__USE_ISOC11


369 #i‚de‡
__USE_TIME_BITS64


371 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

372 
__THROW
 
	`__n⁄nuŒ
 ((1));

374 #ifde‡
__REDIRECT_NTH


375 
	`__REDIRECT_NTH
 (
time•ec_gë
, (
time•ec
 *
__ts
, 
__ba£
),

376 
__time•ec_gë64
Ë
	`__n⁄nuŒ
 ((1));

378 
	#time•ec_gë
 
__time•ec_gë64


	)

384 #i‡
	`__GLIBC_USE
 (
ISOC2X
)

385 #i‚de‡
__USE_TIME_BITS64


387 
	$time•ec_gëªs
 (
time•ec
 *
__ts
, 
__ba£
)

388 
__THROW
;

390 #ifde‡
__REDIRECT_NTH


391 
	`__REDIRECT_NTH
 (
time•ec_gëªs
, (
time•ec
 *
__ts
,

392 
__ba£
),

393 
__time•ec_gëªs64
);

395 
	#time•ec_gëªs
 
__time•ec_gëªs64


	)

401 #ifde‡
__USE_XOPEN_EXTENDED


413 
gëd©e_îr
;

422 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

425 #ifde‡
__USE_GNU


436 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

437 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

440 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

70 
	#_POSIX2_C_VERSION
 
__POSIX2_THIS_VERSION


	)

74 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

78 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

82 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

86 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

89 #ifde‡
__USE_XOPEN2K8


90 
	#_XOPEN_VERSION
 700

	)

91 #ñi‡
deföed
 
__USE_XOPEN2K


92 
	#_XOPEN_VERSION
 600

	)

93 #ñi‡
deföed
 
__USE_UNIX98


94 
	#_XOPEN_VERSION
 500

	)

96 
	#_XOPEN_VERSION
 4

	)

100 
	#_XOPEN_XCU_VERSION
 4

	)

103 
	#_XOPEN_XPG2
 1

	)

104 
	#_XOPEN_XPG3
 1

	)

105 
	#_XOPEN_XPG4
 1

	)

108 
	#_XOPEN_UNIX
 1

	)

112 
	#_XOPEN_ENH_I18N
 1

	)

115 
	#_XOPEN_LEGACY
 1

	)

202 
	~<bôs/posix_›t.h
>

205 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


206 
	~<bôs/ívú⁄míts.h
>

210 
	#STDIN_FILENO
 0

	)

211 
	#STDOUT_FILENO
 1

	)

212 
	#STDERR_FILENO
 2

	)

217 
	~<bôs/ty≥s.h
>

219 #i‚def 
__ssize_t_deföed


220 
__ssize_t
 
	tssize_t
;

221 
	#__ssize_t_deföed


	)

224 
	#__√ed_size_t


	)

225 
	#__√ed_NULL


	)

226 
	~<°ddef.h
>

228 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


231 #i‚de‡
__gid_t_deföed


232 
__gid_t
 
	tgid_t
;

233 
	#__gid_t_deföed


	)

236 #i‚de‡
__uid_t_deföed


237 
__uid_t
 
	tuid_t
;

238 
	#__uid_t_deföed


	)

241 #i‚de‡
__off_t_deföed


242 #i‚de‡
__USE_FILE_OFFSET64


243 
__off_t
 
	toff_t
;

245 
__off64_t
 
	toff_t
;

247 
	#__off_t_deföed


	)

249 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


250 
__off64_t
 
	toff64_t
;

251 
	#__off64_t_deföed


	)

254 #i‚de‡
__u£c⁄ds_t_deföed


255 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

256 
	#__u£c⁄ds_t_deföed


	)

259 #i‚de‡
__pid_t_deföed


260 
__pid_t
 
	tpid_t
;

261 
	#__pid_t_deföed


	)

265 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


266 #i‚de‡
__öçå_t_deföed


267 
__öçå_t
 
	töçå_t
;

268 
	#__öçå_t_deföed


	)

272 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


273 #i‚de‡
__sockÀn_t_deföed


274 
__sockÀn_t
 
	tsockÀn_t
;

275 
	#__sockÀn_t_deföed


	)

281 
	#R_OK
 4

	)

282 
	#W_OK
 2

	)

283 
	#X_OK
 1

	)

284 
	#F_OK
 0

	)

287 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_GNU


292 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1));

300 
	$execvót
 (
__fd
, c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

301 *c⁄° 
__ívp
[], 
__Êags
)

302 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

305 #ifde‡
__USE_ATFILE


309 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

310 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

315 #i‚def 
_STDIO_H


316 
	#SEEK_SET
 0

	)

317 
	#SEEK_CUR
 1

	)

318 
	#SEEK_END
 2

	)

319 #ifde‡
__USE_GNU


320 
	#SEEK_DATA
 3

	)

321 
	#SEEK_HOLE
 4

	)

325 #i‡
deföed
 
__USE_MISC
 && !deföed 
L_SET


327 
	#L_SET
 
SEEK_SET


	)

328 
	#L_INCR
 
SEEK_CUR


	)

329 
	#L_XTND
 
SEEK_END


	)

338 #i‚de‡
__USE_FILE_OFFSET64


339 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

341 #ifde‡
__REDIRECT_NTH


342 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

343 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

344 
l£ek64
);

346 
	#l£ek
 
l£ek64


	)

349 #ifde‡
__USE_LARGEFILE64


350 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

351 
__THROW
;

358 
	`˛o£
 (
__fd
);

360 #ifde‡
__USE_MISC


363 
	$˛o£‰om
 (
__lowfd
Ë
__THROW
;

371 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur


372 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 3);

378 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur


379 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 2, 3));

381 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


382 #i‚de‡
__USE_FILE_OFFSET64


389 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

390 
__off_t
 
__off£t
Ë
__wur


391 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 3);

398 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

399 
__off_t
 
__off£t
Ë
__wur


400 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 2, 3));

403 #ifde‡
__REDIRECT


404 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

405 
__off64_t
 
__off£t
),

406 
¥ód64
Ë
__wur


407 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 3);

408 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

409 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

410 
pwrôe64
Ë
__wur


411 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 2, 3));

413 
	#¥ód
 
¥ód64


	)

414 
	#pwrôe
 
pwrôe64


	)

418 #ifde‡
__USE_LARGEFILE64


422 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

423 
__off64_t
 
__off£t
Ë
__wur


424 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 3);

427 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

428 
__off64_t
 
__off£t
Ë
__wur


429 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 2, 3));

437 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

439 #ifde‡
__USE_GNU


442 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

452 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

464 
	`¶ìp
 (
__£c⁄ds
);

466 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

467 || 
deföed
 
__USE_MISC


472 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

473 
__THROW
;

480 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

489 
	`∑u£
 ();

493 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

494 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

496 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


498 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

503 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

504 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

508 #ifde‡
__USE_ATFILE


511 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

512 
__gid_t
 
__group
, 
__Êag
)

513 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

517 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

519 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


521 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

531 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

533 #ifdef 
__USE_GNU


537 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

540 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

541 || 
deföed
 
__USE_MISC


545 *
	$gëwd
 (*
__buf
)

546 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur


547 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1));

552 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

555 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

557 #ifde‡
__USE_GNU


560 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

564 **
__ívú⁄
;

565 #ifde‡
__USE_GNU


566 **
ívú⁄
;

572 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

573 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

575 #ifde‡
__USE_XOPEN2K8


578 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

579 
__THROW
 
	`__n⁄nuŒ
 ((2));

584 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

585 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

589 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

590 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

594 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

595 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

599 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

600 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

605 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

606 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

608 #ifde‡
__USE_GNU


611 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

612 *c⁄° 
__ívp
[])

613 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

617 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


619 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

624 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

630 
	~<bôs/c⁄‚ame.h
>

633 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

634 
__THROW
 
	`__n⁄nuŒ
 ((1));

637 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

640 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

642 #ifdef 
__USE_POSIX2


644 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW


645 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 3);

650 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

653 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

656 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

659 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

660 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


661 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

668 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

670 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


682 
	$£çgΩ
 (Ë
__THROW
;

689 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

691 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


693 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

697 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

700 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

703 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

706 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

711 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur


712 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 1);

713 #ifdef 
__USE_GNU


715 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

722 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

724 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


727 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

730 #ifde‡
__USE_XOPEN2K


732 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

739 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

741 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


744 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

747 #ifde‡
__USE_XOPEN2K


749 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

752 #ifde‡
__USE_GNU


755 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

756 
__THROW
;

760 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

761 
__THROW
;

765 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

766 
__THROW
 
__wur
;

770 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

771 
__THROW
 
__wur
;

778 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

780 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

781 || 
deföed
 
__USE_MISC


786 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

789 #ifde‡
__USE_GNU


793 
__pid_t
 
	$_F‹k
 (Ë
__THROW
;

799 *
	$ây«me
 (
__fd
Ë
__THROW
;

803 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

804 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur


805 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 3);

809 
	$ißây
 (
__fd
Ë
__THROW
;

811 #ifde‡
__USE_MISC


814 
	$ây¶Ÿ
 (Ë
__THROW
;

819 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

820 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

822 #ifde‡
__USE_ATFILE


825 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

826 c⁄° *
__to
, 
__Êags
)

827 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

830 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


832 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

833 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

838 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

839 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

840 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur


841 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 3);

845 #ifde‡
__USE_ATFILE


847 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

848 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

851 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

852 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

853 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur


854 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 3, 4);

858 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

860 #ifde‡
__USE_ATFILE


862 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

863 
__THROW
 
	`__n⁄nuŒ
 ((2));

867 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

871 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

874 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

881 *
	`gëlogö
 ();

882 #ifde‡
__USE_POSIX199506


889 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1))

890 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 2);

893 #ifdef 
__USE_MISC


895 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

899 #ifdef 
__USE_POSIX2


903 
	~<bôs/gë›t_posix.h
>

907 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


911 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1))

912 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 2);

916 #i‡
deföed
 
__USE_MISC


919 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

920 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 2));

924 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

930 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

931 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur


932 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 2);

933 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

934 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 2));

939 
	$vh™gup
 (Ë
__THROW
;

942 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

950 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

951 
size_t
 
__off£t
, 
__sˇÀ
)

952 
__THROW
 
	`__n⁄nuŒ
 ((1));

958 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

962 *
	$gëu£rshñl
 (Ë
__THROW
;

963 
	$ídu£rshñl
 (Ë
__THROW
;

964 
	$£tu£rshñl
 (Ë
__THROW
;

970 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

974 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

977 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

981 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

989 
	`fsync
 (
__fd
);

992 #ifde‡
__USE_GNU


995 
	$syncfs
 (
__fd
Ë
__THROW
;

999 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


1002 
	`gëho°id
 ();

1005 
	$sync
 (Ë
__THROW
;

1008 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K


1011 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

1016 
	$gëdèbÀsize
 (Ë
__THROW
;

1022 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1025 #i‚de‡
__USE_FILE_OFFSET64


1026 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

1027 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1029 #ifde‡
__REDIRECT_NTH


1030 
	`__REDIRECT_NTH
 (
åunˇã
,

1031 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

1032 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1034 
	#åunˇã
 
åunˇã64


	)

1037 #ifde‡
__USE_LARGEFILE64


1038 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1039 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1044 #i‡
deföed
 
__USE_POSIX199309
 \

1045 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1048 #i‚de‡
__USE_FILE_OFFSET64


1049 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1051 #ifde‡
__REDIRECT_NTH


1052 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1053 
·runˇã64
Ë
__wur
;

1055 
	#·runˇã
 
·runˇã64


	)

1058 #ifde‡
__USE_LARGEFILE64


1059 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1065 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1066 || 
deföed
 
__USE_MISC


1070 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1076 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1080 #ifde‡
__USE_MISC


1091 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1096 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1108 
	#F_ULOCK
 0

	)

1109 
	#F_LOCK
 1

	)

1110 
	#F_TLOCK
 2

	)

1111 
	#F_TEST
 3

	)

1113 #i‚de‡
__USE_FILE_OFFSET64


1114 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1116 #ifde‡
__REDIRECT


1117 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1118 
lockf64
Ë
__wur
;

1120 
	#lockf
 
lockf64


	)

1123 #ifde‡
__USE_LARGEFILE64


1124 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1129 #ifde‡
__USE_GNU


1134 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1135 (
__exãnsi⁄__
 \

1136 ({ 
__ªsu…
; \

1137 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1138 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1139 
__ªsu…
; 
	}
}))

	)

1142 
ssize_t
 
c›y_fûe_ønge
 (
__öfd
, 
__off64_t
 *
__pöoff
,

1143 
__outfd
, 
__off64_t
 *
__poutoff
,

1144 
size_t
 
__Àngth
, 
__Êags
);

1147 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1150 
fd©async
 (
__fûdes
);

1153 #ifde‡
__USE_MISC


1159 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1160 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1163 #ifdef 
__USE_XOPEN


1168 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1169 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2))

1170 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 3))

1171 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

1178 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1180 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1183 *
	`cu£rid
 (*
__s
);

1189 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_XOPEN2K


1190 
	$±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1191 (*
__∑ª¡
) (),

1192 (*
__chûd
Ë()Ë
__THROW
;

1195 #ifde‡
__USE_MISC


1198 
	$gëíå›y
 (*
__buf„r
, 
size_t
 
__Àngth
Ë
__wur


1199 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

1202 #ifde‡
__USE_GNU


1208 
	$˛o£_ønge
 (
__fd
, 
__max_fd
,

1209 
__Êags
Ë
__THROW
;

1213 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1214 
	~<bôs/uni°d.h
>

1218 
	~<bôs/uni°d_ext.h
>

1220 
__END_DECLS


	@/usr/include/zlib.h

31 #i‚de‡
ZLIB_H


32 
	#ZLIB_H


	)

34 
	~"zc⁄f.h
"

36 #ifde‡
__˝lu•lus


40 
	#ZLIB_VERSION
 "1.2.11"

	)

41 
	#ZLIB_VERNUM
 0x12b0

	)

42 
	#ZLIB_VER_MAJOR
 1

	)

43 
	#ZLIB_VER_MINOR
 2

	)

44 
	#ZLIB_VER_REVISION
 11

	)

45 
	#ZLIB_VER_SUBREVISION
 0

	)

81 
voidpf
 (*
	tÆloc_func
Ë
	tOF
((
	tvoidpf
 
	t›aque
, 
	tuI¡
 
	tôems
, uI¡ 
	tsize
));

82 (*
‰ì_func
Ë
	tOF
((
	tvoidpf
 
	t›aque
, voidp‡
	taddªss
));

84 
öã∫Æ_°©e
;

86 
	sz_°ªam_s
 {

87 
z_c⁄°
 
Byãf
 *
√xt_ö
;

88 
uI¡
 
avaû_ö
;

89 
uL⁄g
 
tŸÆ_ö
;

91 
Byãf
 *
√xt_out
;

92 
uI¡
 
avaû_out
;

93 
uL⁄g
 
tŸÆ_out
;

95 
z_c⁄°
 *
msg
;

96 
öã∫Æ_°©e
 
FAR
 *
°©e
;

98 
Æloc_func
 
zÆloc
;

99 
‰ì_func
 
z‰ì
;

100 
voidpf
 
›aque
;

102 
d©a_ty≥
;

104 
uL⁄g
 
adÀr
;

105 
uL⁄g
 
ª£rved
;

106 } 
	tz_°ªam
;

108 
z_°ªam
 
	tFAR
 *
	tz_°ªamp
;

114 
	sgz_hódî_s
 {

115 
ãxt
;

116 
uL⁄g
 
time
;

117 
xÊags
;

118 
os
;

119 
Byãf
 *
exåa
;

120 
uI¡
 
exåa_Àn
;

121 
uI¡
 
exåa_max
;

122 
Byãf
 *
«me
;

123 
uI¡
 
«me_max
;

124 
Byãf
 *
commít
;

125 
uI¡
 
comm_max
;

126 
h¸c
;

127 
d⁄e
;

129 } 
	tgz_hódî
;

131 
gz_hódî
 
	tFAR
 *
	tgz_hódîp
;

168 
	#Z_NO_FLUSH
 0

	)

169 
	#Z_PARTIAL_FLUSH
 1

	)

170 
	#Z_SYNC_FLUSH
 2

	)

171 
	#Z_FULL_FLUSH
 3

	)

172 
	#Z_FINISH
 4

	)

173 
	#Z_BLOCK
 5

	)

174 
	#Z_TREES
 6

	)

177 
	#Z_OK
 0

	)

178 
	#Z_STREAM_END
 1

	)

179 
	#Z_NEED_DICT
 2

	)

180 
	#Z_ERRNO
 (-1)

	)

181 
	#Z_STREAM_ERROR
 (-2)

	)

182 
	#Z_DATA_ERROR
 (-3)

	)

183 
	#Z_MEM_ERROR
 (-4)

	)

184 
	#Z_BUF_ERROR
 (-5)

	)

185 
	#Z_VERSION_ERROR
 (-6)

	)

190 
	#Z_NO_COMPRESSION
 0

	)

191 
	#Z_BEST_SPEED
 1

	)

192 
	#Z_BEST_COMPRESSION
 9

	)

193 
	#Z_DEFAULT_COMPRESSION
 (-1)

	)

196 
	#Z_FILTERED
 1

	)

197 
	#Z_HUFFMAN_ONLY
 2

	)

198 
	#Z_RLE
 3

	)

199 
	#Z_FIXED
 4

	)

200 
	#Z_DEFAULT_STRATEGY
 0

	)

203 
	#Z_BINARY
 0

	)

204 
	#Z_TEXT
 1

	)

205 
	#Z_ASCII
 
Z_TEXT


	)

206 
	#Z_UNKNOWN
 2

	)

209 
	#Z_DEFLATED
 8

	)

212 
	#Z_NULL
 0

	)

214 
	#zlib_vîsi⁄
 
	`zlibVîsi⁄
()

	)

220 
ZEXTERN
 c⁄° * 
ZEXPORT
 
zlibVîsi⁄
 
OF
(());

250 
ZEXTERN
 
ZEXPORT
 
deÊ©e
 
OF
((
z_°ªamp
 
°rm
, 
Êush
));

363 
ZEXTERN
 
ZEXPORT
 
deÊ©eEnd
 
OF
((
z_°ªamp
 
°rm
));

400 
ZEXTERN
 
ZEXPORT
 
öÊ©e
 
OF
((
z_°ªamp
 
°rm
, 
Êush
));

520 
ZEXTERN
 
ZEXPORT
 
öÊ©eEnd
 
OF
((
z_°ªamp
 
°rm
));

611 
ZEXTERN
 
ZEXPORT
 
deÊ©eSëDi˘i⁄¨y
 
OF
((
z_°ªamp
 
°rm
,

612 c⁄° 
Byãf
 *
di˘i⁄¨y
,

613 
uI¡
 
di˘Lígth
));

655 
ZEXTERN
 
ZEXPORT
 
deÊ©eGëDi˘i⁄¨y
 
OF
((
z_°ªamp
 
°rm
,

656 
Byãf
 *
di˘i⁄¨y
,

657 
uI¡
 *
di˘Lígth
));

677 
ZEXTERN
 
ZEXPORT
 
deÊ©eC›y
 
OF
((
z_°ªamp
 
de°
,

678 
z_°ªamp
 
sour˚
));

695 
ZEXTERN
 
ZEXPORT
 
deÊ©eRe£t
 
OF
((
z_°ªamp
 
°rm
));

706 
ZEXTERN
 
ZEXPORT
 
deÊ©eP¨ams
 
OF
((
z_°ªamp
 
°rm
,

707 
Àvñ
,

708 
°øãgy
));

744 
ZEXTERN
 
ZEXPORT
 
deÊ©eTu√
 
OF
((
z_°ªamp
 
°rm
,

745 
good_Àngth
,

746 
max_œzy
,

747 
ni˚_Àngth
,

748 
max_chaö
));

761 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
deÊ©eBound
 
OF
((
z_°ªamp
 
°rm
,

762 
uL⁄g
 
sour˚Lí
));

776 
ZEXTERN
 
ZEXPORT
 
deÊ©ePídög
 
OF
((
z_°ªamp
 
°rm
,

777 *
≥ndög
,

778 *
bôs
));

791 
ZEXTERN
 
ZEXPORT
 
deÊ©ePrime
 
OF
((
z_°ªamp
 
°rm
,

792 
bôs
,

793 
vÆue
));

808 
ZEXTERN
 
ZEXPORT
 
deÊ©eSëHódî
 
OF
((
z_°ªamp
 
°rm
,

809 
gz_hódîp
 
hód
));

885 
ZEXTERN
 
ZEXPORT
 
öÊ©eSëDi˘i⁄¨y
 
OF
((
z_°ªamp
 
°rm
,

886 c⁄° 
Byãf
 *
di˘i⁄¨y
,

887 
uI¡
 
di˘Lígth
));

908 
ZEXTERN
 
ZEXPORT
 
öÊ©eGëDi˘i⁄¨y
 
OF
((
z_°ªamp
 
°rm
,

909 
Byãf
 *
di˘i⁄¨y
,

910 
uI¡
 *
di˘Lígth
));

923 
ZEXTERN
 
ZEXPORT
 
öÊ©eSync
 
OF
((
z_°ªamp
 
°rm
));

942 
ZEXTERN
 
ZEXPORT
 
öÊ©eC›y
 
OF
((
z_°ªamp
 
de°
,

943 
z_°ªamp
 
sour˚
));

958 
ZEXTERN
 
ZEXPORT
 
öÊ©eRe£t
 
OF
((
z_°ªamp
 
°rm
));

968 
ZEXTERN
 
ZEXPORT
 
öÊ©eRe£t2
 
OF
((
z_°ªamp
 
°rm
,

969 
wödowBôs
));

982 
ZEXTERN
 
ZEXPORT
 
öÊ©ePrime
 
OF
((
z_°ªamp
 
°rm
,

983 
bôs
,

984 
vÆue
));

1003 
ZEXTERN
 
ZEXPORT
 
öÊ©eM¨k
 
OF
((
z_°ªamp
 
°rm
));

1031 
ZEXTERN
 
ZEXPORT
 
öÊ©eGëHódî
 
OF
((
z_°ªamp
 
°rm
,

1032 
gz_hódîp
 
hód
));

1093 (*
ö_func
Ë
	tOF
((
	tFAR
 *,

1094 
	tz_c⁄°
 
	tFAR
 * FAR *));

1095 (*
out_func
Ë
	tOF
((
	tFAR
 *, FAR *, ));

1097 
ZEXTERN
 
ZEXPORT
 
öÊ©eBack
 
OF
((
z_°ªamp
 
°rm
,

1098 
ö_func
 
ö
, 
FAR
 *
ö_desc
,

1099 
out_func
 
out
, 
FAR
 *
out_desc
));

1167 
ZEXTERN
 
ZEXPORT
 
öÊ©eBackEnd
 
OF
((
z_°ªamp
 
°rm
));

1175 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
zlibCompûeFœgs
 
OF
(());

1216 #i‚de‡
Z_SOLO


1228 
ZEXTERN
 
ZEXPORT
 
com¥ess
 
OF
((
Byãf
 *
de°
, 
uL⁄gf
 *
de°Lí
,

1229 c⁄° 
Byãf
 *
sour˚
, 
uL⁄g
 
sour˚Lí
));

1243 
ZEXTERN
 
ZEXPORT
 
com¥ess2
 
OF
((
Byãf
 *
de°
, 
uL⁄gf
 *
de°Lí
,

1244 c⁄° 
Byãf
 *
sour˚
, 
uL⁄g
 
sour˚Lí
,

1245 
Àvñ
));

1259 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
com¥essBound
 
OF
((uL⁄g 
sour˚Lí
));

1266 
ZEXTERN
 
ZEXPORT
 
uncom¥ess
 
OF
((
Byãf
 *
de°
, 
uL⁄gf
 *
de°Lí
,

1267 c⁄° 
Byãf
 *
sour˚
, 
uL⁄g
 
sour˚Lí
));

1284 
ZEXTERN
 
ZEXPORT
 
uncom¥ess2
 
OF
((
Byãf
 *
de°
, 
uL⁄gf
 *
de°Lí
,

1285 c⁄° 
Byãf
 *
sour˚
, 
uL⁄g
 *
sour˚Lí
));

1301 
gzFûe_s
 *
	tgzFûe
;

1341 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gzd›í
 
OF
((
fd
, c⁄° *
mode
));

1364 
ZEXTERN
 
ZEXPORT
 
gzbuf„r
 
OF
((
gzFûe
 
fûe
, 
size
));

1380 
ZEXTERN
 
ZEXPORT
 
gz£ç¨ams
 
OF
((
gzFûe
 
fûe
, 
Àvñ
, 
°øãgy
));

1391 
ZEXTERN
 
ZEXPORT
 
gzªad
 
OF
((
gzFûe
 
fûe
, 
voidp
 
buf
, 
Àn
));

1421 
ZEXTERN
 
z_size_t
 
ZEXPORT
 
gz‰ód
 
OF
((
voidp
 
buf
, z_size_à
size
, z_size_à
nôems
,

1422 
gzFûe
 
fûe
));

1447 
ZEXTERN
 
ZEXPORT
 
gzwrôe
 
OF
((
gzFûe
 
fûe
,

1448 
voidpc
 
buf
, 
Àn
));

1455 
ZEXTERN
 
z_size_t
 
ZEXPORT
 
gzfwrôe
 
OF
((
voidpc
 
buf
, z_size_à
size
,

1456 
z_size_t
 
nôems
, 
gzFûe
 
fûe
));

1469 
ZEXTERN
 
ZEXPORTVA
 
gz¥ötf
 
Z_ARG
((
gzFûe
 
fûe
, c⁄° *
f‹m©
, ...));

1484 
ZEXTERN
 
ZEXPORT
 
gzputs
 
OF
((
gzFûe
 
fûe
, c⁄° *
s
));

1492 
ZEXTERN
 * 
ZEXPORT
 
gzgës
 
OF
((
gzFûe
 
fûe
, *
buf
, 
Àn
));

1505 
ZEXTERN
 
ZEXPORT
 
gzputc
 
OF
((
gzFûe
 
fûe
, 
c
));

1511 
ZEXTERN
 
ZEXPORT
 
gzgëc
 
OF
((
gzFûe
 
fûe
));

1520 
ZEXTERN
 
ZEXPORT
 
gzungëc
 
OF
((
c
, 
gzFûe
 
fûe
));

1532 
ZEXTERN
 
ZEXPORT
 
gzÊush
 
OF
((
gzFûe
 
fûe
, 
Êush
));

1567 
ZEXTERN
 
ZEXPORT
 
gzªwöd
 
OF
((
gzFûe
 
fûe
));

1595 
ZEXTERN
 
ZEXPORT
 
gzeof
 
OF
((
gzFûe
 
fûe
));

1610 
ZEXTERN
 
ZEXPORT
 
gzdúe˘
 
OF
((
gzFûe
 
fûe
));

1631 
ZEXTERN
 
ZEXPORT
 
gz˛o£
 
OF
((
gzFûe
 
fûe
));

1644 
ZEXTERN
 
ZEXPORT
 
gz˛o£_r
 
OF
((
gzFûe
 
fûe
));

1645 
ZEXTERN
 
ZEXPORT
 
gz˛o£_w
 
OF
((
gzFûe
 
fûe
));

1656 
ZEXTERN
 c⁄° * 
ZEXPORT
 
gzîr‹
 
OF
((
gzFûe
 
fûe
, *
î∫um
));

1672 
ZEXTERN
 
ZEXPORT
 
gz˛óªº
 
OF
((
gzFûe
 
fûe
));

1689 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32
 
OF
((uL⁄g 
adÀr
, c⁄° 
Byãf
 *
buf
, 
uI¡
 
Àn
));

1708 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32_z
 
OF
((uL⁄g 
adÀr
, c⁄° 
Byãf
 *
buf
,

1709 
z_size_t
 
Àn
));

1726 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32
 
OF
((uL⁄g 
¸c
, c⁄° 
Byãf
 *
buf
, 
uI¡
 
Àn
));

1743 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32_z
 
OF
((uL⁄g 
adÀr
, c⁄° 
Byãf
 *
buf
,

1744 
z_size_t
 
Àn
));

1765 
ZEXTERN
 
ZEXPORT
 
deÊ©eInô_
 
OF
((
z_°ªamp
 
°rm
, 
Àvñ
,

1766 c⁄° *
vîsi⁄
, 
°ªam_size
));

1767 
ZEXTERN
 
ZEXPORT
 
öÊ©eInô_
 
OF
((
z_°ªamp
 
°rm
,

1768 c⁄° *
vîsi⁄
, 
°ªam_size
));

1769 
ZEXTERN
 
ZEXPORT
 
deÊ©eInô2_
 
OF
((
z_°ªamp
 
°rm
, 
Àvñ
, 
mëhod
,

1770 
wödowBôs
, 
memLevñ
,

1771 
°øãgy
, c⁄° *
vîsi⁄
,

1772 
°ªam_size
));

1773 
ZEXTERN
 
ZEXPORT
 
öÊ©eInô2_
 
OF
((
z_°ªamp
 
°rm
, 
wödowBôs
,

1774 c⁄° *
vîsi⁄
, 
°ªam_size
));

1775 
ZEXTERN
 
ZEXPORT
 
öÊ©eBackInô_
 
OF
((
z_°ªamp
 
°rm
, 
wödowBôs
,

1776 
FAR
 *
wödow
,

1777 c⁄° *
vîsi⁄
,

1778 
°ªam_size
));

1779 #ifde‡
Z_PREFIX_SET


1780 
	#z_deÊ©eInô
(
°rm
, 
Àvñ
) \

1781 
	`deÊ©eInô_
((
°rm
), (
Àvñ
), 
ZLIB_VERSION
, ()(
z_°ªam
))

	)

1782 
	#z_öÊ©eInô
(
°rm
) \

1783 
	`öÊ©eInô_
((
°rm
), 
ZLIB_VERSION
, ()(
z_°ªam
))

	)

1784 
	#z_deÊ©eInô2
(
°rm
, 
Àvñ
, 
mëhod
, 
wödowBôs
, 
memLevñ
, 
°øãgy
) \

1785 
	`deÊ©eInô2_
((
°rm
),(
Àvñ
),(
mëhod
),(
wödowBôs
),(
memLevñ
),\

1786 (
°øãgy
), 
ZLIB_VERSION
, ()(
z_°ªam
))

	)

1787 
	#z_öÊ©eInô2
(
°rm
, 
wödowBôs
) \

1788 
	`öÊ©eInô2_
((
°rm
), (
wödowBôs
), 
ZLIB_VERSION
, \

1789 ()(
z_°ªam
))

	)

1790 
	#z_öÊ©eBackInô
(
°rm
, 
wödowBôs
, 
wödow
) \

1791 
	`öÊ©eBackInô_
((
°rm
), (
wödowBôs
), (
wödow
), \

1792 
ZLIB_VERSION
, ()(
z_°ªam
))

	)

1794 
	#deÊ©eInô
(
°rm
, 
Àvñ
) \

1795 
	`deÊ©eInô_
((
°rm
), (
Àvñ
), 
ZLIB_VERSION
, ()(
z_°ªam
))

	)

1796 
	#öÊ©eInô
(
°rm
) \

1797 
	`öÊ©eInô_
((
°rm
), 
ZLIB_VERSION
, ()(
z_°ªam
))

	)

1798 
	#deÊ©eInô2
(
°rm
, 
Àvñ
, 
mëhod
, 
wödowBôs
, 
memLevñ
, 
°øãgy
) \

1799 
	`deÊ©eInô2_
((
°rm
),(
Àvñ
),(
mëhod
),(
wödowBôs
),(
memLevñ
),\

1800 (
°øãgy
), 
ZLIB_VERSION
, ()(
z_°ªam
))

	)

1801 
	#öÊ©eInô2
(
°rm
, 
wödowBôs
) \

1802 
	`öÊ©eInô2_
((
°rm
), (
wödowBôs
), 
ZLIB_VERSION
, \

1803 ()(
z_°ªam
))

	)

1804 
	#öÊ©eBackInô
(
°rm
, 
wödowBôs
, 
wödow
) \

1805 
	`öÊ©eBackInô_
((
°rm
), (
wödowBôs
), (
wödow
), \

1806 
ZLIB_VERSION
, ()(
z_°ªam
))

	)

1809 #i‚de‡
Z_SOLO


1818 
	sgzFûe_s
 {

1819 
have
;

1820 *
√xt
;

1821 
z_off64_t
 
pos
;

1823 
ZEXTERN
 
ZEXPORT
 
gzgëc_
 
OF
((
gzFûe
 
fûe
));

1824 #ifde‡
Z_PREFIX_SET


1825 #unde‡
z_gzgëc


1826 
	#z_gzgëc
(
g
) \

1827 ((
g
)->
have
 ? ((g)->have--, (g)->
pos
++, *((g)->
√xt
)++Ë: (
gzgëc
)(g))

	)

1829 
	#gzgëc
(
g
) \

1830 ((
g
)->
have
 ? ((g)->have--, (g)->
pos
++, *((g)->
√xt
)++Ë: (
gzgëc
)(g))

	)

1839 #ifde‡
Z_LARGE64


1840 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gz›í64
 
OF
((const *, const *));

1841 
ZEXTERN
 
z_off64_t
 
ZEXPORT
 
gz£ek64
 
OF
((
gzFûe
, z_off64_t, ));

1842 
ZEXTERN
 
z_off64_t
 
ZEXPORT
 
gzãŒ64
 
OF
((
gzFûe
));

1843 
ZEXTERN
 
z_off64_t
 
ZEXPORT
 
gzoff£t64
 
OF
((
gzFûe
));

1844 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32_comböe64
 
OF
((uL⁄g, uL⁄g, 
z_off64_t
));

1845 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32_comböe64
 
OF
((uL⁄g, uL⁄g, 
z_off64_t
));

1848 #i‡!
deföed
(
ZLIB_INTERNAL
Ë&& deföed(
Z_WANT64
)

1849 #ifde‡
Z_PREFIX_SET


1850 
	#z_gz›í
 
z_gz›í64


	)

1851 
	#z_gz£ek
 
z_gz£ek64


	)

1852 
	#z_gzãŒ
 
z_gzãŒ64


	)

1853 
	#z_gzoff£t
 
z_gzoff£t64


	)

1854 
	#z_adÀr32_comböe
 
z_adÀr32_comböe64


	)

1855 
	#z_¸c32_comböe
 
z_¸c32_comböe64


	)

1857 
	#gz›í
 
gz›í64


	)

1858 
	#gz£ek
 
gz£ek64


	)

1859 
	#gzãŒ
 
gzãŒ64


	)

1860 
	#gzoff£t
 
gzoff£t64


	)

1861 
	#adÀr32_comböe
 
adÀr32_comböe64


	)

1862 
	#¸c32_comböe
 
¸c32_comböe64


	)

1864 #i‚de‡
Z_LARGE64


1865 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gz›í64
 
OF
((const *, const *));

1866 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gz£ek64
 
OF
((
gzFûe
, z_off_t, ));

1867 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gzãŒ64
 
OF
((
gzFûe
));

1868 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gzoff£t64
 
OF
((
gzFûe
));

1869 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32_comböe64
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1870 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32_comböe64
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1873 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gz›í
 
OF
((const *, const *));

1874 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gz£ek
 
OF
((
gzFûe
, z_off_t, ));

1875 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gzãŒ
 
OF
((
gzFûe
));

1876 
ZEXTERN
 
z_off_t
 
ZEXPORT
 
gzoff£t
 
OF
((
gzFûe
));

1877 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32_comböe
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1878 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32_comböe
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1883 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
adÀr32_comböe
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1884 
ZEXTERN
 
uL⁄g
 
ZEXPORT
 
¸c32_comböe
 
OF
((uL⁄g, uL⁄g, 
z_off_t
));

1889 
ZEXTERN
 c⁄° * 
ZEXPORT
 
zEº‹
 
OF
(());

1890 
ZEXTERN
 
ZEXPORT
 
öÊ©eSyncPoöt
 
OF
((
z_°ªamp
));

1891 
ZEXTERN
 c⁄° 
z_¸c_t
 
FAR
 * 
ZEXPORT
 
gë_¸c_èbÀ
 
OF
(());

1892 
ZEXTERN
 
ZEXPORT
 
öÊ©eUndîmöe
 
OF
((
z_°ªamp
, ));

1893 
ZEXTERN
 
ZEXPORT
 
öÊ©eVÆid©e
 
OF
((
z_°ªamp
, ));

1894 
ZEXTERN
 
ZEXPORT
 
öÊ©eCodesU£d
 
OF
 ((
z_°ªamp
));

1895 
ZEXTERN
 
ZEXPORT
 
öÊ©eRe£tKìp
 
OF
((
z_°ªamp
));

1896 
ZEXTERN
 
ZEXPORT
 
deÊ©eRe£tKìp
 
OF
((
z_°ªamp
));

1897 #i‡(
deföed
(
_WIN32
Ë|| deföed(
__CYGWIN__
)Ë&& !deföed(
Z_SOLO
)

1898 
ZEXTERN
 
gzFûe
 
ZEXPORT
 
gz›í_w
 
OF
((c⁄° 
wch¨_t
 *
∑th
,

1899 c⁄° *
mode
));

1901 #i‡
deföed
(
STDC
Ë|| deföed(
Z_HAVE_STDARG_H
)

1902 #i‚de‡
Z_SOLO


1903 
ZEXTERN
 
ZEXPORTVA
 
gzv¥ötf
 
Z_ARG
((
gzFûe
 
fûe
,

1904 c⁄° *
f‹m©
,

1905 
va_li°
 
va
));

1909 #ifde‡
__˝lu•lus


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

24 
	~<bôs/ídün.h
>

26 #ifde‡
__USE_MISC


27 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

28 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

29 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

30 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

33 #i‡
deföed
 
__USE_MISC
 && !deföed 
__ASSEMBLER__


35 
	~<bôs/byãsw≠.h
>

36 
	~<bôs/uöä-idítôy.h
>

38 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


39 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

40 
	#htﬁe16
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

41 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

42 
	#À16toh
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

44 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

45 
	#htﬁe32
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

46 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

47 
	#À32toh
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

49 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

50 
	#htﬁe64
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

51 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

52 
	#À64toh
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

55 
	#htobe16
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

56 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

57 
	#be16toh
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

58 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

60 
	#htobe32
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

61 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

62 
	#be32toh
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

63 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

65 
	#htobe64
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

66 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

67 
	#be64toh
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

68 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/expat_external.h

40 #i‚de‡
Ex∑t_Exã∫Æ_INCLUDED


41 
	#Ex∑t_Exã∫Æ_INCLUDED
 1

	)

67 #i‚de‡
XMLCALL


68 #i‡
deföed
(
_MSC_VER
)

69 
	#XMLCALL
 
__cde˛


	)

70 #ñi‡
deföed
(
__GNUC__
Ë&& deföed(
__i386
Ë&& ! deföed(
__INTEL_COMPILER
)

71 
	#XMLCALL
 
	`__©åibuã__
((
cde˛
))

	)

83 
	#XMLCALL


	)

87 #i‡! 
deföed
(
XML_STATIC
Ë&& ! deföed(
XMLIMPORT
)

88 #i‚de‡
XML_BUILDING_EXPAT


91 #i‡
deföed
(
_MSC_EXTENSIONS
Ë&& ! deföed(
__BEOS__
Ë&& ! deföed(
__CYGWIN__
)

92 
	#XMLIMPORT
 
	`__de˛•ec
(
dŒimp‹t
)

	)

98 #i‚de‡
XML_ENABLE_VISIBILITY


99 
	#XML_ENABLE_VISIBILITY
 0

	)

102 #i‡! 
deföed
(
XMLIMPORT
Ë&& 
XML_ENABLE_VISIBILITY


103 
	#XMLIMPORT
 
	`__©åibuã__
((
	`visibûôy
("deÁu…")))

	)

107 #i‚de‡
XMLIMPORT


108 
	#XMLIMPORT


	)

111 #i‡
deföed
(
__GNUC__
) \

112 && (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 96))

113 
	#XML_ATTR_MALLOC
 
	`__©åibuã__
((
__mÆloc__
))

	)

115 
	#XML_ATTR_MALLOC


	)

118 #i‡
deföed
(
__GNUC__
) \

119 && ((
__GNUC__
 > 4Ë|| (__GNUC__ =4 && 
__GNUC_MINOR__
 >= 3))

120 
	#XML_ATTR_ALLOC_SIZE
(
x
Ë
	`__©åibuã__
((
	`__Æloc_size__
(x)))

	)

122 
	#XML_ATTR_ALLOC_SIZE
(
x
)

	)

125 
	#XMLPARSEAPI
(
ty≥
Ë
XMLIMPORT
Åy≥ 
XMLCALL


	)

127 #ifde‡
__˝lu•lus


131 #ifde‡
XML_UNICODE_WCHAR_T


132 #i‚de‡
XML_UNICODE


133 
	#XML_UNICODE


	)

135 #i‡
deföed
(
__SIZEOF_WCHAR_T__
) && (__SIZEOF_WCHAR_T__ != 2)

140 #ifde‡
XML_UNICODE


141 #ifde‡
XML_UNICODE_WCHAR_T


142 
wch¨_t
 
	tXML_Ch¨
;

143 
wch¨_t
 
	tXML_LCh¨
;

145 
	tXML_Ch¨
;

146 
	tXML_LCh¨
;

149 
	tXML_Ch¨
;

150 
	tXML_LCh¨
;

153 #ifde‡
XML_LARGE_SIZE


154 
	tXML_Index
;

155 
	tXML_Size
;

157 
	tXML_Index
;

158 
	tXML_Size
;

161 #ifde‡
__˝lu•lus


	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

126 #unde‡
__USE_ISOC11


127 #unde‡
__USE_ISOC99


128 #unde‡
__USE_ISOC95


129 #unde‡
__USE_ISOCXX11


130 #unde‡
__USE_POSIX


131 #unde‡
__USE_POSIX2


132 #unde‡
__USE_POSIX199309


133 #unde‡
__USE_POSIX199506


134 #unde‡
__USE_XOPEN


135 #unde‡
__USE_XOPEN_EXTENDED


136 #unde‡
__USE_UNIX98


137 #unde‡
__USE_XOPEN2K


138 #unde‡
__USE_XOPEN2KXSI


139 #unde‡
__USE_XOPEN2K8


140 #unde‡
__USE_XOPEN2K8XSI


141 #unde‡
__USE_LARGEFILE


142 #unde‡
__USE_LARGEFILE64


143 #unde‡
__USE_FILE_OFFSET64


144 #unde‡
__USE_MISC


145 #unde‡
__USE_ATFILE


146 #unde‡
__USE_DYNAMIC_STACK_SIZE


147 #unde‡
__USE_GNU


148 #unde‡
__USE_FORTIFY_LEVEL


149 #unde‡
__KERNEL_STRICT_NAMES


150 #unde‡
__GLIBC_USE_ISOC2X


151 #unde‡
__GLIBC_USE_DEPRECATED_GETS


152 #unde‡
__GLIBC_USE_DEPRECATED_SCANF


156 #i‚de‡
_LOOSE_KERNEL_NAMES


157 
	#__KERNEL_STRICT_NAMES


	)

167 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


168 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

169 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

171 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

178 #i‡
deföed
 
__˛™g_maj‹__
 && deföed 
__˛™g_mö‹__


179 
	#__glibc_˛™g_¥îeq
(
maj
, 
mö
) \

180 ((
__˛™g_maj‹__
 << 16Ë+ 
__˛™g_mö‹__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

182 
	#__glibc_˛™g_¥îeq
(
maj
, 
mö
Ë0

	)

186 
	#__GLIBC_USE
(
F
Ë
__GLIBC_USE_
 ## 
	)
F

192 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

193 && !
deföed
 
	g_DEFAULT_SOURCE


195 #unde‡
_DEFAULT_SOURCE


196 
	#_DEFAULT_SOURCE
 1

	)

200 #ifde‡
_GNU_SOURCE


201 #unde‡
_ISOC95_SOURCE


202 
	#_ISOC95_SOURCE
 1

	)

203 #unde‡
_ISOC99_SOURCE


204 
	#_ISOC99_SOURCE
 1

	)

205 #unde‡
_ISOC11_SOURCE


206 
	#_ISOC11_SOURCE
 1

	)

207 #unde‡
_ISOC2X_SOURCE


208 
	#_ISOC2X_SOURCE
 1

	)

209 #unde‡
_POSIX_SOURCE


210 
	#_POSIX_SOURCE
 1

	)

211 #unde‡
_POSIX_C_SOURCE


212 
	#_POSIX_C_SOURCE
 200809L

	)

213 #unde‡
_XOPEN_SOURCE


214 
	#_XOPEN_SOURCE
 700

	)

215 #unde‡
_XOPEN_SOURCE_EXTENDED


216 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

217 #unde‡
_LARGEFILE64_SOURCE


218 
	#_LARGEFILE64_SOURCE
 1

	)

219 #unde‡
_DEFAULT_SOURCE


220 
	#_DEFAULT_SOURCE
 1

	)

221 #unde‡
_ATFILE_SOURCE


222 
	#_ATFILE_SOURCE
 1

	)

223 #unde‡
_DYNAMIC_STACK_SIZE_SOURCE


224 
	#_DYNAMIC_STACK_SIZE_SOURCE
 1

	)

229 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

230 || (!
deföed
 
	g__STRICT_ANSI__
 \

231 && !
deföed
 
	g_ISOC99_SOURCE
 && !deföed 
	g_ISOC11_SOURCE
 \

232 && !
deföed
 
	g_ISOC2X_SOURCE
 \

233 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

234 && !
deföed
 
	g_XOPEN_SOURCE
))

235 #unde‡
_DEFAULT_SOURCE


236 
	#_DEFAULT_SOURCE
 1

	)

240 #i‡(
deföed
 
_ISOC2X_SOURCE
 \

241 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ > 201710L))

242 
	#__GLIBC_USE_ISOC2X
 1

	)

244 
	#__GLIBC_USE_ISOC2X
 0

	)

248 #i‡(
deföed
 
_ISOC11_SOURCE
 || deföed 
_ISOC2X_SOURCE
 \

249 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

250 
	#__USE_ISOC11
 1

	)

254 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

255 || 
deföed
 
_ISOC2X_SOURCE
 \

256 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

257 
	#__USE_ISOC99
 1

	)

261 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

262 || 
deföed
 
_ISOC2X_SOURCE
 \

263 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

264 
	#__USE_ISOC95
 1

	)

267 #ifde‡
__˝lu•lus


269 #i‡
__˝lu•lus
 >= 201703L

270 
	#__USE_ISOC11
 1

	)

274 #i‡
__˝lu•lus
 >201103L || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__


275 
	#__USE_ISOCXX11
 1

	)

276 
	#__USE_ISOC99
 1

	)

283 #ifde‡
_DEFAULT_SOURCE


284 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


285 
	#__USE_POSIX_IMPLICITLY
 1

	)

287 #unde‡
_POSIX_SOURCE


288 
	#_POSIX_SOURCE
 1

	)

289 #unde‡
_POSIX_C_SOURCE


290 
	#_POSIX_C_SOURCE
 200809L

	)

293 #i‡((!
deföed
 
__STRICT_ANSI__
 \

294 || (
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) >= 500)) \

295 && !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

296 
	#_POSIX_SOURCE
 1

	)

297 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

298 
	#_POSIX_C_SOURCE
 2

	)

299 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

300 
	#_POSIX_C_SOURCE
 199506L

	)

301 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

302 
	#_POSIX_C_SOURCE
 200112L

	)

304 
	#_POSIX_C_SOURCE
 200809L

	)

306 
	#__USE_POSIX_IMPLICITLY
 1

	)

315 #i‡((!
deföed
 
_POSIX_C_SOURCE
 || (_POSIX_C_SOURCE - 0) < 199506L) \

316 && (
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE
))

317 
	#_POSIX_SOURCE
 1

	)

318 #unde‡
_POSIX_C_SOURCE


319 
	#_POSIX_C_SOURCE
 199506L

	)

322 #i‡(
deföed
 
_POSIX_SOURCE
 \

323 || (
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >= 1) \

324 || 
deföed
 
_XOPEN_SOURCE
)

325 
	#__USE_POSIX
 1

	)

328 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


329 
	#__USE_POSIX2
 1

	)

332 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199309L

333 
	#__USE_POSIX199309
 1

	)

336 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199506L

337 
	#__USE_POSIX199506
 1

	)

340 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200112L

341 
	#__USE_XOPEN2K
 1

	)

342 #unde‡
__USE_ISOC95


343 
	#__USE_ISOC95
 1

	)

344 #unde‡
__USE_ISOC99


345 
	#__USE_ISOC99
 1

	)

348 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200809L

349 
	#__USE_XOPEN2K8
 1

	)

350 #unde‡
_ATFILE_SOURCE


351 
	#_ATFILE_SOURCE
 1

	)

354 #ifdef 
_XOPEN_SOURCE


355 
	#__USE_XOPEN
 1

	)

356 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

357 
	#__USE_XOPEN_EXTENDED
 1

	)

358 
	#__USE_UNIX98
 1

	)

359 #unde‡
_LARGEFILE_SOURCE


360 
	#_LARGEFILE_SOURCE
 1

	)

361 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

362 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

363 
	#__USE_XOPEN2K8
 1

	)

364 
	#__USE_XOPEN2K8XSI
 1

	)

366 
	#__USE_XOPEN2K
 1

	)

367 
	#__USE_XOPEN2KXSI
 1

	)

368 #unde‡
__USE_ISOC95


369 
	#__USE_ISOC95
 1

	)

370 #unde‡
__USE_ISOC99


371 
	#__USE_ISOC99
 1

	)

374 #ifde‡
_XOPEN_SOURCE_EXTENDED


375 
	#__USE_XOPEN_EXTENDED
 1

	)

380 #ifde‡
_LARGEFILE_SOURCE


381 
	#__USE_LARGEFILE
 1

	)

384 #ifde‡
_LARGEFILE64_SOURCE


385 
	#__USE_LARGEFILE64
 1

	)

388 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

389 
	#__USE_FILE_OFFSET64
 1

	)

392 
	~<„©uªs-time64.h
>

394 #i‡
deföed
 
_DEFAULT_SOURCE


395 
	#__USE_MISC
 1

	)

398 #ifdef 
_ATFILE_SOURCE


399 
	#__USE_ATFILE
 1

	)

402 #ifdef 
_DYNAMIC_STACK_SIZE_SOURCE


403 
	#__USE_DYNAMIC_STACK_SIZE
 1

	)

406 #ifdef 
_GNU_SOURCE


407 
	#__USE_GNU
 1

	)

410 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0

411 #i‡!
deföed
 
__OPTIMIZE__
 || __OPTIMIZE__ <= 0

412 #ñi‡!
__GNUC_PREREQ
 (4, 1)

413 #ñi‡
_FORTIFY_SOURCE
 > 2 && (
__glibc_˛™g_¥îeq
 (9, 0) \

414 || 
	$__GNUC_PREREQ
 (12, 0))

416 #i‡
_FORTIFY_SOURCE
 > 3

418 
	#__USE_FORTIFY_LEVEL
 3

	)

419 #ñi‡
_FORTIFY_SOURCE
 > 1

420 #i‡
_FORTIFY_SOURCE
 > 2

422 
	#__USE_FORTIFY_LEVEL
 2

	)

424 
	#__USE_FORTIFY_LEVEL
 1

	)

427 #i‚de‡
__USE_FORTIFY_LEVEL


428 
	#__USE_FORTIFY_LEVEL
 0

	)

435 #i‡
deföed
 
__˝lu•lus
 ? __˝lu•lu†>201402L : deföed 
__USE_ISOC11


436 
	#__GLIBC_USE_DEPRECATED_GETS
 0

	)

438 
	#__GLIBC_USE_DEPRECATED_GETS
 1

	)

453 #i‡(
deföed
 
__USE_GNU
 \

454 && (
deföed
 
__˝lu•lus
 \

455 ? (
__˝lu•lus
 < 201103L && !
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
) \

456 : (!
deföed
 
__STDC_VERSION__
 || __STDC_VERSION__ < 199901L)))

457 
	#__GLIBC_USE_DEPRECATED_SCANF
 1

	)

459 
	#__GLIBC_USE_DEPRECATED_SCANF
 0

	)

464 
	~<°dc-¥edef.h
>

472 #unde‡
__GNU_LIBRARY__


473 
	#__GNU_LIBRARY__
 6

	)

477 
	#__GLIBC__
 2

	)

478 
	#__GLIBC_MINOR__
 35

	)

480 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

481 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

484 #i‚de‡
__ASSEMBLER__


485 #i‚de‡
_SYS_CDEFS_H


486 
	~<sys/cdefs.h
>

491 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


492 
	#__USE_LARGEFILE
 1

	)

493 
	#__USE_LARGEFILE64
 1

	)

499 #i‡
	`__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

500 && !
deföed
 
__OPTIMIZE_SIZE__
 && !deföed 
__NO_INLINE__
 \

501 && 
deföed
 
__exã∫_ölöe


502 
	#__USE_EXTERN_INLINES
 1

	)

510 
	~<gnu/°ubs.h
>

	@/usr/include/rpc/netdb.h

36 #i‚de‡
_RPC_NETDB_H


37 
	#_RPC_NETDB_H
 1

	)

39 
	~<„©uªs.h
>

41 
	#__√ed_size_t


	)

42 
	~<°ddef.h
>

44 
__BEGIN_DECLS


46 
	sΩ˚¡


48 *
	mr_«me
;

49 **
	mr_Æü£s
;

50 
	mr_numbî
;

53 
	$£åp˚¡
 (
__°ay›í
Ë
__THROW
;

54 
	$ídΩ˚¡
 (Ë
__THROW
;

55 
Ω˚¡
 *
	$gëΩcby«me
 (c⁄° *
__«me
Ë
__THROW
;

56 
Ω˚¡
 *
	$gëΩcbynumbî
 (
__numbî
Ë
__THROW
;

57 
Ω˚¡
 *
	$gëΩ˚¡
 (Ë
__THROW
;

59 #ifde‡
__USE_MISC


60 
	$gëΩcby«me_r
 (c⁄° *
__«me
, 
Ω˚¡
 *
__ªsu…_buf
,

61 *
__buf„r
, 
size_t
 
__buÊí
,

62 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

64 
	$gëΩcbynumbî_r
 (
__numbî
, 
Ω˚¡
 *
__ªsu…_buf
,

65 *
__buf„r
, 
size_t
 
__buÊí
,

66 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

68 
	$gëΩ˚¡_r
 (
Ω˚¡
 *
__ªsu…_buf
, *
__buf„r
,

69 
size_t
 
__buÊí
, 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

72 
__END_DECLS


	@/usr/include/strings.h

18 #i‚def 
_STRINGS_H


19 
	#_STRINGS_H
 1

	)

21 
	~<„©uªs.h
>

22 
	#__√ed_size_t


	)

23 
	~<°ddef.h
>

26 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

27 
	#__CORRECT_ISO_CPP_STRINGS_H_PROTO


	)

30 
	g__BEGIN_DECLS


32 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


34 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

35 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

38 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

39 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

42 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

45 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


48 *
	`ödex
 (*
__s
, 
__c
)

49 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

50 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

51 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

53 #i‡
deföed
 
__OPTIMIZE__


54 
__exã∫_Æways_ölöe
 *

55 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


57  
	`__buûtö_ödex
 (
__s
, 
__c
);

60 
__exã∫_Æways_ölöe
 const *

61 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


63  
	`__buûtö_ödex
 (
__s
, 
__c
);

66 
	}
}

68 *
	$ödex
 (c⁄° *
__s
, 
__c
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

73 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


76 *
	`rödex
 (*
__s
, 
__c
)

77 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

78 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

79 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #i‡
deföed
 
__OPTIMIZE__


82 
__exã∫_Æways_ölöe
 *

83 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


85  
	`__buûtö_rödex
 (
__s
, 
__c
);

88 
__exã∫_Æways_ölöe
 const *

89 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


91  
	`__buûtö_rödex
 (
__s
, 
__c
);

94 
	}
}

96 *
	$rödex
 (c⁄° *
__s
, 
__c
)

97 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

101 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8
 || deföed 
__USE_XOPEN2K8XSI


104 
	$ffs
 (
__i
Ë
__THROW
 
__©åibuã_c⁄°__
;

109 #ifdef 
__USE_MISC


110 
	$ff¶
 (
__l
Ë
__THROW
 
__©åibuã_c⁄°__
;

111 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

112 
__THROW
 
__©åibuã_c⁄°__
;

116 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

117 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

120 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

123 #ifdef 
__USE_XOPEN2K8


125 
	~<bôs/ty≥s/loˇÀ_t.h
>

128 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
loˇÀ_t
 
__loc
)

129 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

133 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

134 
size_t
 
__n
, 
loˇÀ_t
 
__loc
)

135 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

138 
__END_DECLS


140 #i‡
	`__GNUC_PREREQ
 (3,4Ë&& 
__USE_FORTIFY_LEVEL
 > 0 \

141 && 
deföed
 
__f‹tify_fun˘i⁄


143 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


144 
	~<bôs/°rögs_f‹tifõd.h
>

	@/usr/include/zconf.h

8 #i‚de‡
ZCONF_H


9 
	#ZCONF_H


	)

17 #ifde‡
Z_PREFIX


18 
	#Z_PREFIX_SET


	)

21 
	#_di°_code
 
z__di°_code


	)

22 
	#_Àngth_code
 
z__Àngth_code


	)

23 
	#_å_Æign
 
z__å_Æign


	)

24 
	#_å_Êush_bôs
 
z__å_Êush_bôs


	)

25 
	#_å_Êush_block
 
z__å_Êush_block


	)

26 
	#_å_öô
 
z__å_öô


	)

27 
	#_å_°‹ed_block
 
z__å_°‹ed_block


	)

28 
	#_å_èŒy
 
z__å_èŒy


	)

29 
	#adÀr32
 
z_adÀr32


	)

30 
	#adÀr32_comböe
 
z_adÀr32_comböe


	)

31 
	#adÀr32_comböe64
 
z_adÀr32_comböe64


	)

32 
	#adÀr32_z
 
z_adÀr32_z


	)

33 #i‚de‡
Z_SOLO


34 
	#com¥ess
 
z_com¥ess


	)

35 
	#com¥ess2
 
z_com¥ess2


	)

36 
	#com¥essBound
 
z_com¥essBound


	)

38 
	#¸c32
 
z_¸c32


	)

39 
	#¸c32_comböe
 
z_¸c32_comböe


	)

40 
	#¸c32_comböe64
 
z_¸c32_comböe64


	)

41 
	#¸c32_z
 
z_¸c32_z


	)

42 
	#deÊ©e
 
z_deÊ©e


	)

43 
	#deÊ©eBound
 
z_deÊ©eBound


	)

44 
	#deÊ©eC›y
 
z_deÊ©eC›y


	)

45 
	#deÊ©eEnd
 
z_deÊ©eEnd


	)

46 
	#deÊ©eGëDi˘i⁄¨y
 
z_deÊ©eGëDi˘i⁄¨y


	)

47 
	#deÊ©eInô
 
z_deÊ©eInô


	)

48 
	#deÊ©eInô2
 
z_deÊ©eInô2


	)

49 
	#deÊ©eInô2_
 
z_deÊ©eInô2_


	)

50 
	#deÊ©eInô_
 
z_deÊ©eInô_


	)

51 
	#deÊ©eP¨ams
 
z_deÊ©eP¨ams


	)

52 
	#deÊ©ePídög
 
z_deÊ©ePídög


	)

53 
	#deÊ©ePrime
 
z_deÊ©ePrime


	)

54 
	#deÊ©eRe£t
 
z_deÊ©eRe£t


	)

55 
	#deÊ©eRe£tKìp
 
z_deÊ©eRe£tKìp


	)

56 
	#deÊ©eSëDi˘i⁄¨y
 
z_deÊ©eSëDi˘i⁄¨y


	)

57 
	#deÊ©eSëHódî
 
z_deÊ©eSëHódî


	)

58 
	#deÊ©eTu√
 
z_deÊ©eTu√


	)

59 
	#deÊ©e_c›yright
 
z_deÊ©e_c›yright


	)

60 
	#gë_¸c_èbÀ
 
z_gë_¸c_èbÀ


	)

61 #i‚de‡
Z_SOLO


62 
	#gz_îr‹
 
z_gz_îr‹


	)

63 
	#gz_ötmax
 
z_gz_ötmax


	)

64 
	#gz_°rwöîr‹
 
z_gz_°rwöîr‹


	)

65 
	#gzbuf„r
 
z_gzbuf„r


	)

66 
	#gz˛óªº
 
z_gz˛óªº


	)

67 
	#gz˛o£
 
z_gz˛o£


	)

68 
	#gz˛o£_r
 
z_gz˛o£_r


	)

69 
	#gz˛o£_w
 
z_gz˛o£_w


	)

70 
	#gzdúe˘
 
z_gzdúe˘


	)

71 
	#gzd›í
 
z_gzd›í


	)

72 
	#gzeof
 
z_gzeof


	)

73 
	#gzîr‹
 
z_gzîr‹


	)

74 
	#gzÊush
 
z_gzÊush


	)

75 
	#gz‰ód
 
z_gz‰ód


	)

76 
	#gzfwrôe
 
z_gzfwrôe


	)

77 
	#gzgëc
 
z_gzgëc


	)

78 
	#gzgëc_
 
z_gzgëc_


	)

79 
	#gzgës
 
z_gzgës


	)

80 
	#gzoff£t
 
z_gzoff£t


	)

81 
	#gzoff£t64
 
z_gzoff£t64


	)

82 
	#gz›í
 
z_gz›í


	)

83 
	#gz›í64
 
z_gz›í64


	)

84 #ifde‡
_WIN32


85 
	#gz›í_w
 
z_gz›í_w


	)

87 
	#gz¥ötf
 
z_gz¥ötf


	)

88 
	#gzputc
 
z_gzputc


	)

89 
	#gzputs
 
z_gzputs


	)

90 
	#gzªad
 
z_gzªad


	)

91 
	#gzªwöd
 
z_gzªwöd


	)

92 
	#gz£ek
 
z_gz£ek


	)

93 
	#gz£ek64
 
z_gz£ek64


	)

94 
	#gz£ç¨ams
 
z_gz£ç¨ams


	)

95 
	#gzãŒ
 
z_gzãŒ


	)

96 
	#gzãŒ64
 
z_gzãŒ64


	)

97 
	#gzungëc
 
z_gzungëc


	)

98 
	#gzv¥ötf
 
z_gzv¥ötf


	)

99 
	#gzwrôe
 
z_gzwrôe


	)

101 
	#öÊ©e
 
z_öÊ©e


	)

102 
	#öÊ©eBack
 
z_öÊ©eBack


	)

103 
	#öÊ©eBackEnd
 
z_öÊ©eBackEnd


	)

104 
	#öÊ©eBackInô
 
z_öÊ©eBackInô


	)

105 
	#öÊ©eBackInô_
 
z_öÊ©eBackInô_


	)

106 
	#öÊ©eCodesU£d
 
z_öÊ©eCodesU£d


	)

107 
	#öÊ©eC›y
 
z_öÊ©eC›y


	)

108 
	#öÊ©eEnd
 
z_öÊ©eEnd


	)

109 
	#öÊ©eGëDi˘i⁄¨y
 
z_öÊ©eGëDi˘i⁄¨y


	)

110 
	#öÊ©eGëHódî
 
z_öÊ©eGëHódî


	)

111 
	#öÊ©eInô
 
z_öÊ©eInô


	)

112 
	#öÊ©eInô2
 
z_öÊ©eInô2


	)

113 
	#öÊ©eInô2_
 
z_öÊ©eInô2_


	)

114 
	#öÊ©eInô_
 
z_öÊ©eInô_


	)

115 
	#öÊ©eM¨k
 
z_öÊ©eM¨k


	)

116 
	#öÊ©ePrime
 
z_öÊ©ePrime


	)

117 
	#öÊ©eRe£t
 
z_öÊ©eRe£t


	)

118 
	#öÊ©eRe£t2
 
z_öÊ©eRe£t2


	)

119 
	#öÊ©eRe£tKìp
 
z_öÊ©eRe£tKìp


	)

120 
	#öÊ©eSëDi˘i⁄¨y
 
z_öÊ©eSëDi˘i⁄¨y


	)

121 
	#öÊ©eSync
 
z_öÊ©eSync


	)

122 
	#öÊ©eSyncPoöt
 
z_öÊ©eSyncPoöt


	)

123 
	#öÊ©eUndîmöe
 
z_öÊ©eUndîmöe


	)

124 
	#öÊ©eVÆid©e
 
z_öÊ©eVÆid©e


	)

125 
	#öÊ©e_c›yright
 
z_öÊ©e_c›yright


	)

126 
	#öÊ©e_Á°
 
z_öÊ©e_Á°


	)

127 
	#öÊ©e_èbÀ
 
z_öÊ©e_èbÀ


	)

128 #i‚de‡
Z_SOLO


129 
	#uncom¥ess
 
z_uncom¥ess


	)

130 
	#uncom¥ess2
 
z_uncom¥ess2


	)

132 
	#zEº‹
 
z_zEº‹


	)

133 #i‚de‡
Z_SOLO


134 
	#zˇŒoc
 
z_zˇŒoc


	)

135 
	#zc‰ì
 
z_zc‰ì


	)

137 
	#zlibCompûeFœgs
 
z_zlibCompûeFœgs


	)

138 
	#zlibVîsi⁄
 
z_zlibVîsi⁄


	)

141 
	#Byã
 
z_Byã


	)

142 
	#Byãf
 
z_Byãf


	)

143 
	#Æloc_func
 
z_Æloc_func


	)

144 
	#ch¨f
 
z_ch¨f


	)

145 
	#‰ì_func
 
z_‰ì_func


	)

146 #i‚de‡
Z_SOLO


147 
	#gzFûe
 
z_gzFûe


	)

149 
	#gz_hódî
 
z_gz_hódî


	)

150 
	#gz_hódîp
 
z_gz_hódîp


	)

151 
	#ö_func
 
z_ö_func


	)

152 
	#ötf
 
z_ötf


	)

153 
	#out_func
 
z_out_func


	)

154 
	#uI¡
 
z_uI¡


	)

155 
	#uI¡f
 
z_uI¡f


	)

156 
	#uL⁄g
 
z_uL⁄g


	)

157 
	#uL⁄gf
 
z_uL⁄gf


	)

158 
	#voidp
 
z_voidp


	)

159 
	#voidpc
 
z_voidpc


	)

160 
	#voidpf
 
z_voidpf


	)

163 
	#gz_hódî_s
 
z_gz_hódî_s


	)

164 
	#öã∫Æ_°©e
 
z_öã∫Æ_°©e


	)

168 #i‡
deföed
(
__MSDOS__
Ë&& !deföed(
MSDOS
)

169 
	#MSDOS


	)

171 #i‡(
deföed
(
OS_2
Ë|| deföed(
__OS2__
)Ë&& !deföed(
OS2
)

172 
	#OS2


	)

174 #i‡
deföed
(
_WINDOWS
Ë&& !deföed(
WINDOWS
)

175 
	#WINDOWS


	)

177 #i‡
deföed
(
_WIN32
Ë|| deföed(
_WIN32_WCE
Ë|| deföed(
__WIN32__
)

178 #i‚de‡
WIN32


179 
	#WIN32


	)

182 #i‡(
deföed
(
MSDOS
Ë|| deföed(
OS2
Ë|| deföed(
WINDOWS
)Ë&& !deföed(
WIN32
)

183 #i‡!
deföed
(
__GNUC__
Ë&& !deföed(
__FLAT__
Ë&& !deföed(
__386__
)

184 #i‚de‡
SYS16BIT


185 
	#SYS16BIT


	)

194 #ifde‡
SYS16BIT


195 
	#MAXSEG_64K


	)

197 #ifde‡
MSDOS


198 
	#UNALIGNED_OK


	)

201 #ifde‡
__STDC_VERSION__


202 #i‚de‡
STDC


203 
	#STDC


	)

205 #i‡
__STDC_VERSION__
 >= 199901L

206 #i‚de‡
STDC99


207 
	#STDC99


	)

211 #i‡!
deföed
(
STDC
Ë&& (deföed(
__STDC__
Ë|| deföed(
__˝lu•lus
))

212 
	#STDC


	)

214 #i‡!
deföed
(
STDC
Ë&& (deföed(
__GNUC__
Ë|| deföed(
__BORLANDC__
))

215 
	#STDC


	)

217 #i‡!
deföed
(
STDC
Ë&& (deföed(
MSDOS
Ë|| deföed(
WINDOWS
Ë|| deföed(
WIN32
))

218 
	#STDC


	)

220 #i‡!
deföed
(
STDC
Ë&& (deföed(
OS2
Ë|| deföed(
__HOS_AIX__
))

221 
	#STDC


	)

224 #i‡
deföed
(
__OS400__
Ë&& !deföed(
STDC
)

225 
	#STDC


	)

228 #i‚de‡
STDC


230 c⁄°

	)

234 #i‡
deföed
(
ZLIB_CONST
Ë&& !deföed(
z_c⁄°
)

235 
	#z_c⁄°
 c⁄°

	)

237 
	#z_c⁄°


	)

240 #ifde‡
Z_SOLO


241 
	tz_size_t
;

243 
	#z_l⁄gl⁄g
 

	)

244 #i‡
deföed
(
NO_SIZE_T
)

245 
	tNO_SIZE_T
 
	tz_size_t
;

246 #ñi‡
deföed
(
STDC
)

247 
	~<°ddef.h
>

248 
size_t
 
	tz_size_t
;

250 
	tz_size_t
;

252 #unde‡
z_l⁄gl⁄g


256 #i‚de‡
MAX_MEM_LEVEL


257 #ifde‡
MAXSEG_64K


258 
	#MAX_MEM_LEVEL
 8

	)

260 
	#MAX_MEM_LEVEL
 9

	)

269 #i‚de‡
MAX_WBITS


270 
	#MAX_WBITS
 15

	)

288 #i‚de‡
OF


289 #ifde‡
STDC


290 
	#OF
(
¨gs
Ë
	)
args

292 
	#OF
(
¨gs
Ë()

	)

296 #i‚de‡
Z_ARG


297 #i‡
deföed
(
STDC
Ë|| deföed(
Z_HAVE_STDARG_H
)

298 
	#Z_ARG
(
¨gs
Ë
	)
args

300 
	#Z_ARG
(
¨gs
Ë()

	)

310 #ifde‡
SYS16BIT


311 #i‡
deföed
(
M_I86SM
Ë|| deföed(
M_I86MM
)

313 
	#SMALL_MEDIUM


	)

314 #ifde‡
_MSC_VER


315 
	#FAR
 
_Ár


	)

317 
	#FAR
 
Ár


	)

320 #i‡(
deföed
(
__SMALL__
Ë|| deföed(
__MEDIUM__
))

322 
	#SMALL_MEDIUM


	)

323 #ifde‡
__BORLANDC__


324 
	#FAR
 
_Ár


	)

326 
	#FAR
 
Ár


	)

331 #i‡
deföed
(
WINDOWS
Ë|| deföed(
WIN32
)

335 #ifde‡
ZLIB_DLL


336 #i‡
deföed
(
WIN32
Ë&& (!deföed(
__BORLANDC__
) || (__BORLANDC__ >= 0x500))

337 #ifde‡
ZLIB_INTERNAL


338 
	#ZEXTERN
 
	`__de˛•ec
(
dŒexp‹t
)

	)

340 
	#ZEXTERN
 
	`__de˛•ec
(
dŒimp‹t
)

	)

348 #ifde‡
ZLIB_WINAPI


349 #ifde‡
FAR


350 #unde‡
FAR


352 
	~<wödows.h
>

355 
	#ZEXPORT
 
WINAPI


	)

356 #ifde‡
WIN32


357 
	#ZEXPORTVA
 
WINAPIV


	)

359 
	#ZEXPORTVA
 
FAR
 
CDECL


	)

364 #i‡
deföed
 (
__BEOS__
)

365 #ifde‡
ZLIB_DLL


366 #ifde‡
ZLIB_INTERNAL


367 
	#ZEXPORT
 
	`__de˛•ec
(
dŒexp‹t
)

	)

368 
	#ZEXPORTVA
 
	`__de˛•ec
(
dŒexp‹t
)

	)

370 
	#ZEXPORT
 
	`__de˛•ec
(
dŒimp‹t
)

	)

371 
	#ZEXPORTVA
 
	`__de˛•ec
(
dŒimp‹t
)

	)

376 #i‚de‡
ZEXTERN


377 
	#ZEXTERN
 

	)

379 #i‚de‡
ZEXPORT


380 
	#ZEXPORT


	)

382 #i‚de‡
ZEXPORTVA


383 
	#ZEXPORTVA


	)

386 #i‚de‡
FAR


387 
	#FAR


	)

390 #i‡!
deföed
(
__MACTYPES__
)

391 
	tByã
;

393 
	tuI¡
;

394 
	tuL⁄g
;

396 #ifde‡
SMALL_MEDIUM


398 
	#Byãf
 
Byã
 
FAR


	)

400 
Byã
 
	tFAR
 
	tByãf
;

402 
	tFAR
 
	tch¨f
;

403 
	tFAR
 
	tötf
;

404 
uI¡
 
	tFAR
 
	tuI¡f
;

405 
uL⁄g
 
	tFAR
 
	tuL⁄gf
;

407 #ifde‡
STDC


408 c⁄° *
	tvoidpc
;

409 
	tFAR
 *
	tvoidpf
;

410 *
	tvoidp
;

412 
Byã
 c⁄° *
	tvoidpc
;

413 
Byã
 
	tFAR
 *
	tvoidpf
;

414 
Byã
 *
	tvoidp
;

417 #i‡!
deföed
(
Z_U4
Ë&& !deföed(
Z_SOLO
Ë&& deföed(
STDC
)

418 
	~<limôs.h
>

419 #i‡(
UINT_MAX
 == 0xffffffffUL)

420 
	#Z_U4
 

	)

421 #ñi‡(
ULONG_MAX
 == 0xffffffffUL)

422 
	#Z_U4
 

	)

423 #ñi‡(
USHRT_MAX
 == 0xffffffffUL)

424 
	#Z_U4
 

	)

428 #ifde‡
Z_U4


429 
Z_U4
 
	tz_¸c_t
;

431 
	tz_¸c_t
;

435 
	#Z_HAVE_UNISTD_H


	)

439 
	#Z_HAVE_STDARG_H


	)

442 #ifde‡
STDC


443 #i‚de‡
Z_SOLO


444 
	~<sys/ty≥s.h
>

448 #i‡
deföed
(
STDC
Ë|| deföed(
Z_HAVE_STDARG_H
)

449 #i‚de‡
Z_SOLO


450 
	~<°d¨g.h
>

454 #ifde‡
_WIN32


455 #i‚de‡
Z_SOLO


456 
	~<°ddef.h
>

466 #i‡
deföed
(
_LARGEFILE64_SOURCE
) && -_LARGEFILE64_SOURCE - -1 == 1

467 #unde‡
_LARGEFILE64_SOURCE


470 #i‡
deföed
(
__WATCOMC__
Ë&& !deföed(
Z_HAVE_UNISTD_H
)

471 
	#Z_HAVE_UNISTD_H


	)

473 #i‚de‡
Z_SOLO


474 #i‡
deföed
(
Z_HAVE_UNISTD_H
Ë|| deföed(
_LARGEFILE64_SOURCE
)

475 
	~<uni°d.h
>

476 #ifde‡
VMS


477 
	~<unixio.h
>

479 #i‚de‡
z_off_t


480 
	#z_off_t
 
off_t


	)

485 #i‡
deföed
(
_LFS64_LARGEFILE
) && _LFS64_LARGEFILE-0

486 
	#Z_LFS64


	)

489 #i‡
deföed
(
_LARGEFILE64_SOURCE
Ë&& deföed(
Z_LFS64
)

490 
	#Z_LARGE64


	)

493 #i‡
deföed
(
_FILE_OFFSET_BITS
Ë&& _FILE_OFFSET_BITS-0 =64 && deföed(
Z_LFS64
)

494 
	#Z_WANT64


	)

497 #i‡!
deföed
(
SEEK_SET
Ë&& !deföed(
Z_SOLO
)

498 
	#SEEK_SET
 0

	)

499 
	#SEEK_CUR
 1

	)

500 
	#SEEK_END
 2

	)

503 #i‚de‡
z_off_t


504 
	#z_off_t
 

	)

507 #i‡!
deföed
(
_WIN32
Ë&& deföed(
Z_LARGE64
)

508 
	#z_off64_t
 
off64_t


	)

510 #i‡
deföed
(
_WIN32
Ë&& !deföed(
__GNUC__
Ë&& !deföed(
Z_SOLO
)

511 
	#z_off64_t
 
__öt64


	)

513 
	#z_off64_t
 
z_off_t


	)

518 #i‡
deföed
(
__MVS__
)

519 #¥agm®
m≠
(
deÊ©eInô_
,"DEIN")

520 #¥agm®
m≠
(
deÊ©eInô2_
,"DEIN2")

521 #¥agm®
m≠
(
deÊ©eEnd
,"DEEND")

522 #¥agm®
m≠
(
deÊ©eBound
,"DEBND")

523 #¥agm®
m≠
(
öÊ©eInô_
,"ININ")

524 #¥agm®
m≠
(
öÊ©eInô2_
,"ININ2")

525 #¥agm®
m≠
(
öÊ©eEnd
,"INEND")

526 #¥agm®
m≠
(
öÊ©eSync
,"INSY")

527 #¥agm®
m≠
(
öÊ©eSëDi˘i⁄¨y
,"INSEDI")

528 #¥agm®
m≠
(
com¥essBound
,"CMBND")

529 #¥agm®
m≠
(
öÊ©e_èbÀ
,"INTABL")

530 #¥agm®
m≠
(
öÊ©e_Á°
,"INFA")

531 #¥agm®
m≠
(
öÊ©e_c›yright
,"INCOPY")

	@/usr/include/features-time64.h

20 
	~<bôs/w‹dsize.h
>

21 
	~<bôs/timesize.h
>

23 #i‡
deföed
 
_TIME_BITS


24 #i‡
_TIME_BITS
 == 64

25 #i‡! 
deföed
 (
_FILE_OFFSET_BITS
) || _FILE_OFFSET_BITS != 64

27 #ñi‡
__TIMESIZE
 == 32

28 
	#__USE_TIME_BITS64
 1

	)

30 #ñi‡
_TIME_BITS
 == 32

31 #i‡
__TIMESIZE
 > 32

35 #îr‹ 
InvÆid
 
_TIME_BITS
 
vÆue
 (
ˇn
 
⁄ly
 
be
 32 
‹
 64-
bô
)

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

39 
	#__STDC_IEC_60559_BFP__
 201404L

	)

42 
	#__STDC_IEC_559__
 1

	)

43 
	#__STDC_IEC_60559_BFP__
 201404L

	)

46 #ifde‡
__GCC_IEC_559_COMPLEX


47 #i‡
__GCC_IEC_559_COMPLEX
 > 0

48 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_60559_COMPLEX__
 201404L

	)

52 
	#__STDC_IEC_559_COMPLEX__
 1

	)

53 
	#__STDC_IEC_60559_COMPLEX__
 201404L

	)

62 
	#__STDC_ISO_10646__
 201706L

	)

	@
1
.
1
/usr/include
266
3953
alloc.c
archive-tar.c
archive-zip.c
archive.h
arm/sha1.c
arm/sha1.h
base85.c
blob.c
blob.h
builtin-add.c
builtin-annotate.c
builtin-apply.c
builtin-archive.c
builtin-blame.c
builtin-branch.c
builtin-cat-file.c
builtin-check-ref-format.c
builtin-checkout-index.c
builtin-commit-tree.c
builtin-config.c
builtin-count-objects.c
builtin-describe.c
builtin-diff-files.c
builtin-diff-index.c
builtin-diff-stages.c
builtin-diff-tree.c
builtin-diff.c
builtin-fmt-merge-msg.c
builtin-for-each-ref.c
builtin-fsck.c
builtin-grep.c
builtin-init-db.c
builtin-log.c
builtin-ls-files.c
builtin-ls-tree.c
builtin-mailinfo.c
builtin-mailsplit.c
builtin-merge-file.c
builtin-mv.c
builtin-name-rev.c
builtin-pack-objects.c
builtin-pack-refs.c
builtin-prune-packed.c
builtin-prune.c
builtin-push.c
builtin-read-tree.c
builtin-reflog.c
builtin-rerere.c
builtin-rev-list.c
builtin-rev-parse.c
builtin-rm.c
builtin-runstatus.c
builtin-shortlog.c
builtin-show-branch.c
builtin-show-ref.c
builtin-stripspace.c
builtin-symbolic-ref.c
builtin-tar-tree.c
builtin-unpack-objects.c
builtin-update-index.c
builtin-update-ref.c
builtin-upload-archive.c
builtin-verify-pack.c
builtin-write-tree.c
builtin.h
cache-tree.c
cache-tree.h
cache.h
check-racy.c
color.c
color.h
combine-diff.c
commit.c
commit.h
compat/inet_ntop.c
compat/inet_pton.c
compat/mmap.c
compat/pread.c
compat/setenv.c
compat/strcasestr.c
compat/strlcpy.c
compat/unsetenv.c
config.c
connect.c
convert-objects.c
copy.c
csum-file.c
csum-file.h
ctype.c
daemon.c
date.c
delta.h
diff-delta.c
diff-lib.c
diff.c
diff.h
diffcore-break.c
diffcore-delta.c
diffcore-order.c
diffcore-pickaxe.c
diffcore-rename.c
diffcore.h
dir.c
dir.h
dump-cache-tree.c
entry.c
environment.c
exec_cmd.c
exec_cmd.h
fast-import.c
fetch-pack.c
fetch.c
fetch.h
git-compat-util.h
git.c
grep.c
grep.h
hash-object.c
help.c
http-fetch.c
http-push.c
http.c
http.h
ident.c
imap-send.c
index-pack.c
interpolate.c
interpolate.h
list-objects.c
list-objects.h
local-fetch.c
lockfile.c
log-tree.c
log-tree.h
merge-base.c
merge-file.c
merge-index.c
merge-recursive.c
merge-tree.c
mktag.c
mktree.c
mozilla-sha1/sha1.c
mozilla-sha1/sha1.h
object-refs.c
object.c
object.h
pack-check.c
pack-redundant.c
pack.h
pager.c
patch-delta.c
patch-id.c
path-list.c
path-list.h
path.c
peek-remote.c
pkt-line.c
pkt-line.h
ppc/sha1.c
ppc/sha1.h
quote.c
quote.h
reachable.c
reachable.h
read-cache.c
receive-pack.c
reflog-walk.c
reflog-walk.h
refs.c
refs.h
revision.c
revision.h
rsh.c
rsh.h
run-command.c
run-command.h
send-pack.c
server-info.c
setup.c
sha1_file.c
sha1_name.c
shallow.c
shell.c
show-index.c
sideband.c
sideband.h
ssh-fetch.c
ssh-pull.c
ssh-push.c
ssh-upload.c
strbuf.c
strbuf.h
tag.c
tag.h
tar.h
test-date.c
test-delta.c
test-sha1.c
trace.c
tree-diff.c
tree-walk.c
tree-walk.h
tree.c
tree.h
unpack-file.c
unpack-trees.c
unpack-trees.h
update-server-info.c
upload-pack.c
usage.c
utf8.c
utf8.h
var.c
write_or_die.c
wt-status.c
wt-status.h
xdiff-interface.c
xdiff-interface.h
xdiff/xdiff.h
xdiff/xdiffi.c
xdiff/xdiffi.h
xdiff/xemit.c
xdiff/xemit.h
xdiff/xinclude.h
xdiff/xmacros.h
xdiff/xmerge.c
xdiff/xprepare.c
xdiff/xprepare.h
xdiff/xtypes.h
xdiff/xutils.c
xdiff/xutils.h
/usr/include/arpa/inet.h
/usr/include/assert.h
/usr/include/ctype.h
/usr/include/dirent.h
/usr/include/errno.h
/usr/include/expat.h
/usr/include/fcntl.h
/usr/include/fnmatch.h
/usr/include/grp.h
/usr/include/iconv.h
/usr/include/inttypes.h
/usr/include/limits.h
/usr/include/netdb.h
/usr/include/netinet/in.h
/usr/include/netinet/tcp.h
/usr/include/pwd.h
/usr/include/regex.h
/usr/include/signal.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/syslog.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/zlib.h
/usr/include/alloca.h
/usr/include/endian.h
/usr/include/expat_external.h
/usr/include/features.h
/usr/include/rpc/netdb.h
/usr/include/strings.h
/usr/include/zconf.h
/usr/include/features-time64.h
/usr/include/stdc-predef.h
